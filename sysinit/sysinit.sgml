<PART>
<TITLE>System Initialization</TITLE>

<CHAPTER id=sysinit>
<TITLE>System Initialization</TITLE>

<SECT1>
<TITLE>Cron Jobs</TITLE>
<PARA>
Packages may not touch the configuration file <FILENAME>/etc/crontab</FILENAME>,
nor may they modify the files in <FILENAME>/var/spool/cron/crontabs</FILENAME>.
</PARA>
<PARA>
If a package wants to install a job that has to be executed via cron,
it shall place a file with the name if the package in one of the
following directories:
</PARA>
<PROGRAMLISTING>
/etc/cron.hourly
/etc/cron.daily
/etc/cron.weekly
/etc/cron.monthly
</PROGRAMLISTING>
<PARA>
As these directory names say, the files within them are executed on a
daily, weekly, or monthly basis, respectively.
</PARA>
<PARA>
If a certain job has to be executed more frequently than daily, the
package shall install a file
<FILENAME>/etc/cron.d/<MARKUP><</MARKUP>package-name<MARKUP>></MARKUP></FILENAME>
tagged as configuration file. This file uses the same syntax as
<FILENAME>/etc/crontab</FILENAME> and is processed by cron automatically.
</PARA>
<PARA>
It is recommended that files installed in any of these directories be
scripts (shell scripts, Perl scripts, etc.) so that they may be
modified by the local system administrator. In addition, they must be
registered as configuration file.
</PARA>
<PARA>
The scripts in these directories have to check, if all necessary
programs are installed before they try to execute them. Otherwise,
problems will arise when a package was removed (but not purged), since
the configuration files are kept on the system in this situation.
</PARA>
</SECT1>


<SECT1>
<TITLE>Run Levels</TITLE>
<PARA>
</PARA>
<SIMPLELIST type=horiz columns=2>
<MEMBER>0</MEMBER><MEMBER>halt</MEMBER>
<MEMBER>1</MEMBER><MEMBER>single user mode</MEMBER>
<MEMBER>2</MEMBER><MEMBER>multiuser with no remote networking</MEMBER>
<MEMBER>3</MEMBER><MEMBER>normal/full multiuser</MEMBER>
<MEMBER>4</MEMBER><MEMBER>reserved for local use, default is normal/full multiuser</MEMBER>
<MEMBER>5</MEMBER><MEMBER>xdm or equivalent</MEMBER>
<MEMBER>6</MEMBER><MEMBER>reboot</MEMBER>
</SIMPLELIST>
</SECT1>


<SECT1>
<TITLE>Init Script Actions</TITLE>
<PARA>
Init files should accept one argument, saying what to do:
</PARA>
<SIMPLELIST type=horiz columns=2>
<MEMBER>start</MEMBER><MEMBER>start the service</MEMBER>
<MEMBER>stop</MEMBER><MEMBER>stop the service</MEMBER>
<MEMBER>restart</MEMBER><MEMBER>stop and restart the service if the service
is already running, otherwise start the service</MEMBER>
<MEMBER>reload</MEMBER><MEMBER>cause the configuration of the service to be
reloaded without actually stopping and restarting the service</MEMBER>
<MEMBER>force-reload</MEMBER><MEMBER>cause the configuration to be reloaded
if the service supports this, otherwise restart the service</MEMBER>
<MEMBER>status</MEMBER><MEMBER>print the current status of the service</MEMBER>
</SIMPLELIST>
<PARA>
The start, stop, restart, force-reload, and status options must be
supported by all init files, the reload option is optional.
</PARA>
<PARA>
Init files should ensure that they will behave sensibly if invoked
with start when the service is already running, or with stop when it
isn't, and that they don't kill unfortunately-named user processes. The
best way to achieve this is usually to use start-stop-daemon
<FOOTNOTE>
<PARA>
assuming that start-stop-daemon or a similar program is included in the LSB
</PARA>
</FOOTNOTE>
.
</PARA>
<PARA>
If a service reloads its configuration automatically (as in the case
of cron, for example), the reload option of the init file should
behave as if the configuration has been reloaded successfully.
</PARA>
<PARA>
These executable files should not fail obscurely when the configuration
files remain but the package has been removed, as the default in [the
packaging system] is to leave configuration files on the system after
the package has been removed.  Only when it is executed with the
[purge] option will [the packaging system] remove configuration files.
Therefore, you should include a test statement at the top of the file,
like this:
<SCREEN>
<USERINPUT>test -f program-executed-later-in-file || exit 0</USERINPUT>
</SCREEN>
or take the equivalent action if the init file is not a shell script.
</PARA>
<PARA>
Init files should return an exit status of zero if the action
described by the argument has been successful.  Otherwise, the exit
status should be non-zero.  In addition to straightforward success,
the following situations are also to be considered successful:

<ITEMIZEDLIST MARK="bullet">
<LISTITEM><PARA>
reporting a problem with the "status" option
</PARA></LISTITEM>
<LISTITEM><PARA>
restarting a service (instead of reloading it) with the "force-reload" argument
</PARA></LISTITEM>
<LISTITEM><PARA>
running "start" on a service already running
</PARA></LISTITEM>
<LISTITEM><PARA>
running "stop" on a service already stopped or not running
</PARA></LISTITEM>
<LISTITEM><PARA>
running "restart" on a service already stopped or not running
</PARA></LISTITEM>
</ITEMIZEDLIST>

</PARA>
<PARA>
Exit status for "status" command:
<SIMPLELIST type=horiz columns=2>
<MEMBER>0</MEMBER><MEMBER>program is running</MEMBER>
<MEMBER>1</MEMBER><MEMBER>program is dead and /var/run pid file exists</MEMBER>
<MEMBER>2</MEMBER><MEMBER>program is dead and /var/lock lock file exists</MEMBER>
<MEMBER>3</MEMBER><MEMBER>program is stopped</MEMBER>
<MEMBER>4-100</MEMBER><MEMBER>reserved for future LSB use</MEMBER>
<MEMBER>100-149</MEMBER><MEMBER>reserved for distribution use</MEMBER>
<MEMBER>150-199</MEMBER><MEMBER>reserved for application use</MEMBER>
<MEMBER>200-254</MEMBER><MEMBER>reserved</MEMBER>
</SIMPLELIST>
</PARA>
<PARA>
Exit status for "start", "stop", "restart", "reload", and "force-reload":
</PARA>
<PARA>
In error conditions, the init file should fail, print an error, and
return one of the following non-zero exit status codes.

<SIMPLELIST type=horiz columns=2>
<MEMBER>1</MEMBER><MEMBER>generic or unspecified error (current practice)</MEMBER>
<MEMBER>2</MEMBER><MEMBER>invalid or excess argument(s)</MEMBER>
<MEMBER>3</MEMBER><MEMBER>unimplemented feature (for example, "reload")</MEMBER>
<MEMBER>4</MEMBER><MEMBER>user had insufficient privilege</MEMBER>
<MEMBER>5</MEMBER><MEMBER>program is not installed</MEMBER>
<MEMBER>6</MEMBER><MEMBER>program is not configured</MEMBER>
<MEMBER>7-100</MEMBER><MEMBER>reserved for future LSB use</MEMBER>
<MEMBER>100-149</MEMBER><MEMBER>reserved for distribution use</MEMBER>
<MEMBER>150-199</MEMBER><MEMBER>reserved for application use</MEMBER>
<MEMBER>200-254</MEMBER><MEMBER>reserved</MEMBER>
</SIMPLELIST>
</PARA>
<PARA>
All error messages should be printed on standard error.  All status
messages should be printed on standard output.
</PARA>
<PARA>
Init files should try to account for unusual environment variable
settings (such as PATH, USER, LOGNAME, etc.) and continue to work if
reasonable.
</PARA>
</SECT1>


</CHAPTER>

</PART>
