<PART ID="tocgtk">
<TITLE>GTK+ Stack Libraries</TITLE>

<CHAPTER id=gtk>
<TITLE>Libraries</TITLE>
<SECT1><TITLE>Introduction</TITLE>
<PARA>
A conforming implementation shall support the following
GTK+ stack libraries which
provide interfaces for creating rich graphical user interface applications.
<VARIABLELIST>
<VARLISTENTRY>
<TERM>GLib</TERM>
<LISTITEM><para>A general-purpose utility library, not specific to graphical user interfaces. GLib provides many useful data types, macros, type conversions, string utilities, file utilities, a main loop abstraction, and so on.</para>
<para>libglib-2.0</para>
<para>libgmodule-2.0</para>
<para>libgobject-2.0</para>
<para>libgthread-2.0</para>
</listitem>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM>ATK</TERM>
<listitem><para>ATK is the Accessibility Toolkit. It provides a set of generic interfaces allowing accessibility technologies to interact with a graphical user interface. For example, a screen reader uses ATK to discover the text in an interface and read it to blind users. GTK+ widgets have built-in support for accessibility using the ATK framework. </para>
<para>libatk-1.0</para></listitem>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM>Pango</TERM>
<listitem><para>Pango is a library for internationalized text handling. It centers around the PangoLayout object, representing a paragraph of text. Pango provides the engine for GtkTextView, GtkLabel, GtkEntry, and other widgets that display text.</para>
<para>libpango-1.0</para>
<para>libpangocairo-1.0</para>
<para>libpangoxft-1.0</para>
<para>libpangoft2-1.0</para>
</listitem>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM>GdkPixbuf</TERM>
<listitem><para>This is a small library which allows you to create GdkPixbuf ("pixel buffer") objects from image data or image files. Use a GdkPixbuf in combination with GtkImage to display images.</para>
<para>libgdk_pixbuf-2.0</para>
<para>libgdk_pixbuf_xlib-2.0</para></listitem>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM>GDK</TERM>
<listitem><para>GDK is the abstraction layer that allows GTK+ to support multiple windowing systems. GDK provides drawing and window system facilities on X11, Windows, and the Linux framebuffer device.</para>
<para>libgdk-x11-2.0</para></listitem>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM>GTK+</TERM>
<listitem><para>The GTK+ library contains widgets, that is, GUI components such as GtkButton or GtkTextView.</para>
<para>libgtk-x11-2.0</para></listitem>
</VARLISTENTRY>
</VARIABLELIST>
</PARA>
<PARA>
There are three main parts to the definition of each of these
libraries.
</PARA>
<PARA>
The "Interfaces" section defines the required library name and version,
and the required public symbols (interfaces and global data), as well
as symbol versions, if any.
</PARA>
<PARA>
The "Interface Definitions" section provides complete or partial
definitions of certain interfaces where either this specification is
the source specification, or where there are variations from the source
specification. If an interface definition requires one or more header 
files, one of those headers shall include the function 
prototype for the interface.
</PARA>
<PARA>
For source definitions of interfaces which include a reference to a
header file, the contents of such header files form a
part of the specification.  The "Data Definitions" section provides the
binary-level details for the header files from the source specifications,
such as values for macros and enumerated types, as well as structure layouts,
sizes and padding, etc.  These data definitions, although presented in the form
of header files for convenience, should not be taken a representing complete
header files, as they are a supplement to the source
specifications.  Application developers should follow the guidelines
of the source specifications when determining which header files need
to be included to completely resolve all references.
<NOTE>
<PARA>
While the Data Definitions supplement the source specifications,
this specification itself does not require conforming implementations
to supply any header files.
</PARA>
</NOTE>
</PARA>
</SECT1>


<!-- Start of generated text - do not edit! -->
<!-- generated from the LSB specification database by mklibspec -->
<SECT1 ID=libglib-2.0>
<TITLE>Interfaces for libglib-2.0</TITLE>
<PARA>
<XREF LINKEND="lib-libglib-2.0-def"> defines the library name and shared object name
for the libglib-2.0 library
</PARA>
<TABLE id="lib-libglib-2.0-def">
<TITLE>libglib-2.0 Definition</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Library:</ENTRY>
<ENTRY>libglib-2.0</ENTRY>
</ROW>
<ROW>
<ENTRY>SONAME:</ENTRY>
<ENTRY>libglib-2.0.so.0</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The behavior of the interfaces in this library is specified by the following specifications:<SIMPLELIST COLUMNS=1>
<MEMBER ID='REFSTD.libglib.2.0.1'>
[Glib 2.32] <XREF LINKEND="std.Glib">
</MEMBER>
<MEMBER ID='REFSTD.libglib.2.0.2'>
[Gobject 2.32] <XREF LINKEND="std.Gobject">
</MEMBER>
<MEMBER ID='REFSTD.libglib.2.0.3'>
[LSB] <XREF LINKEND="std.LSB">
</MEMBER>
</SIMPLELIST>
</PARA>
<!-- debug: database interface name GTK General purpose utility library -->
<SECT2>
<!--libgroup-->
<TITLE>GTK General purpose utility library</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Interfaces for GTK General purpose utility library</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic functions
for GTK General purpose utility library specified in <XREF linkend="tbl-libglib-2.0-gtk-g-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<TABLE id="tbl-libglib-2.0-gtk-g-ints">
<TITLE>libglib-2.0 - GTK General purpose utility library Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>g_array_get_element_size</primary></indexterm>g_array_get_element_size <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_array_ref</primary></indexterm>g_array_ref <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_array_set_clear_func</primary></indexterm>g_array_set_clear_func <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_array_unref</primary></indexterm>g_array_unref <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_assertion_message</primary></indexterm>g_assertion_message <LINK LINKEND="REFSTD.libglib.2.0.3">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_assertion_message_cmpnum</primary></indexterm>g_assertion_message_cmpnum <LINK LINKEND="REFSTD.libglib.2.0.3">[LSB]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_assertion_message_cmpstr</primary></indexterm>g_assertion_message_cmpstr <LINK LINKEND="REFSTD.libglib.2.0.3">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_assertion_message_error</primary></indexterm>g_assertion_message_error <LINK LINKEND="REFSTD.libglib.2.0.3">[LSB]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_assertion_message_expr</primary></indexterm>g_assertion_message_expr <LINK LINKEND="REFSTD.libglib.2.0.3">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_async_queue_new_full</primary></indexterm>g_async_queue_new_full <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_async_queue_ref_unlocked</primary></indexterm>g_async_queue_ref_unlocked <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_async_queue_timeout_pop</primary></indexterm>g_async_queue_timeout_pop <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_async_queue_timeout_pop_unlocked</primary></indexterm>g_async_queue_timeout_pop_unlocked <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_async_queue_unref_and_unlock</primary></indexterm>g_async_queue_unref_and_unlock <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_atomic_int_and</primary></indexterm>g_atomic_int_and <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_atomic_int_dec_and_test</primary></indexterm>g_atomic_int_dec_and_test <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_atomic_int_get</primary></indexterm>g_atomic_int_get <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_atomic_int_inc</primary></indexterm>g_atomic_int_inc <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_atomic_int_or</primary></indexterm>g_atomic_int_or <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_atomic_int_set</primary></indexterm>g_atomic_int_set <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_atomic_int_xor</primary></indexterm>g_atomic_int_xor <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_atomic_pointer_add</primary></indexterm>g_atomic_pointer_add <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_atomic_pointer_and</primary></indexterm>g_atomic_pointer_and <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_atomic_pointer_get</primary></indexterm>g_atomic_pointer_get <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_atomic_pointer_or</primary></indexterm>g_atomic_pointer_or <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_atomic_pointer_set</primary></indexterm>g_atomic_pointer_set <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_atomic_pointer_xor</primary></indexterm>g_atomic_pointer_xor <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_basename</primary></indexterm>g_basename <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_bit_lock</primary></indexterm>g_bit_lock <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_bit_trylock</primary></indexterm>g_bit_trylock <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_bit_unlock</primary></indexterm>g_bit_unlock <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_byte_array_free_to_bytes</primary></indexterm>g_byte_array_free_to_bytes <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_byte_array_new_take</primary></indexterm>g_byte_array_new_take <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_byte_array_ref</primary></indexterm>g_byte_array_ref <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_byte_array_unref</primary></indexterm>g_byte_array_unref <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_bytes_compare</primary></indexterm>g_bytes_compare <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_bytes_equal</primary></indexterm>g_bytes_equal <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_bytes_get_data</primary></indexterm>g_bytes_get_data <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_bytes_get_size</primary></indexterm>g_bytes_get_size <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_bytes_hash</primary></indexterm>g_bytes_hash <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_bytes_new</primary></indexterm>g_bytes_new <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_bytes_new_from_bytes</primary></indexterm>g_bytes_new_from_bytes <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_bytes_new_static</primary></indexterm>g_bytes_new_static <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_bytes_new_take</primary></indexterm>g_bytes_new_take <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_bytes_new_with_free_func</primary></indexterm>g_bytes_new_with_free_func <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_bytes_ref</primary></indexterm>g_bytes_ref <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_bytes_unref</primary></indexterm>g_bytes_unref <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_bytes_unref_to_array</primary></indexterm>g_bytes_unref_to_array <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_bytes_unref_to_data</primary></indexterm>g_bytes_unref_to_data <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_checksum_copy</primary></indexterm>g_checksum_copy <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_checksum_free</primary></indexterm>g_checksum_free <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_checksum_get_digest</primary></indexterm>g_checksum_get_digest <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_checksum_get_string</primary></indexterm>g_checksum_get_string <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_checksum_new</primary></indexterm>g_checksum_new <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_checksum_reset</primary></indexterm>g_checksum_reset <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_checksum_type_get_length</primary></indexterm>g_checksum_type_get_length <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_checksum_update</primary></indexterm>g_checksum_update <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_compute_checksum_for_data</primary></indexterm>g_compute_checksum_for_data <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_compute_checksum_for_string</primary></indexterm>g_compute_checksum_for_string <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_compute_hmac_for_data</primary></indexterm>g_compute_hmac_for_data <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_compute_hmac_for_string</primary></indexterm>g_compute_hmac_for_string <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_cond_broadcast</primary></indexterm>g_cond_broadcast <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_cond_clear</primary></indexterm>g_cond_clear <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_cond_free</primary></indexterm>g_cond_free <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_cond_init</primary></indexterm>g_cond_init <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_cond_new</primary></indexterm>g_cond_new <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_cond_signal</primary></indexterm>g_cond_signal <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_cond_timed_wait</primary></indexterm>g_cond_timed_wait <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_cond_wait</primary></indexterm>g_cond_wait <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_cond_wait_until</primary></indexterm>g_cond_wait_until <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_datalist_get_data</primary></indexterm>g_datalist_get_data <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_date_time_add</primary></indexterm>g_date_time_add <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_date_time_add_days</primary></indexterm>g_date_time_add_days <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_date_time_add_full</primary></indexterm>g_date_time_add_full <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_date_time_add_hours</primary></indexterm>g_date_time_add_hours <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_date_time_add_minutes</primary></indexterm>g_date_time_add_minutes <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_date_time_add_months</primary></indexterm>g_date_time_add_months <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_date_time_add_seconds</primary></indexterm>g_date_time_add_seconds <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_date_time_add_weeks</primary></indexterm>g_date_time_add_weeks <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_date_time_add_years</primary></indexterm>g_date_time_add_years <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_date_time_compare</primary></indexterm>g_date_time_compare <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_date_time_difference</primary></indexterm>g_date_time_difference <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_date_time_equal</primary></indexterm>g_date_time_equal <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_date_time_format</primary></indexterm>g_date_time_format <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_date_time_get_day_of_month</primary></indexterm>g_date_time_get_day_of_month <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_date_time_get_day_of_week</primary></indexterm>g_date_time_get_day_of_week <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_date_time_get_day_of_year</primary></indexterm>g_date_time_get_day_of_year <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_date_time_get_hour</primary></indexterm>g_date_time_get_hour <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_date_time_get_microsecond</primary></indexterm>g_date_time_get_microsecond <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_date_time_get_minute</primary></indexterm>g_date_time_get_minute <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_date_time_get_month</primary></indexterm>g_date_time_get_month <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_date_time_get_second</primary></indexterm>g_date_time_get_second <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_date_time_get_seconds</primary></indexterm>g_date_time_get_seconds <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_date_time_get_timezone_abbreviation</primary></indexterm>g_date_time_get_timezone_abbreviation <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_date_time_get_utc_offset</primary></indexterm>g_date_time_get_utc_offset <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_date_time_get_week_numbering_year</primary></indexterm>g_date_time_get_week_numbering_year <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_date_time_get_week_of_year</primary></indexterm>g_date_time_get_week_of_year <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_date_time_get_year</primary></indexterm>g_date_time_get_year <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_date_time_get_ymd</primary></indexterm>g_date_time_get_ymd <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_date_time_hash</primary></indexterm>g_date_time_hash <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_date_time_is_daylight_savings</primary></indexterm>g_date_time_is_daylight_savings <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_date_time_new</primary></indexterm>g_date_time_new <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_date_time_new_from_timeval_local</primary></indexterm>g_date_time_new_from_timeval_local <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_date_time_new_from_timeval_utc</primary></indexterm>g_date_time_new_from_timeval_utc <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_date_time_new_from_unix_local</primary></indexterm>g_date_time_new_from_unix_local <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_date_time_new_from_unix_utc</primary></indexterm>g_date_time_new_from_unix_utc <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_date_time_new_local</primary></indexterm>g_date_time_new_local <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_date_time_new_now</primary></indexterm>g_date_time_new_now <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_date_time_new_now_local</primary></indexterm>g_date_time_new_now_local <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_date_time_new_now_utc</primary></indexterm>g_date_time_new_now_utc <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_date_time_new_utc</primary></indexterm>g_date_time_new_utc <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_date_time_ref</primary></indexterm>g_date_time_ref <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_date_time_to_local</primary></indexterm>g_date_time_to_local <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_date_time_to_timeval</primary></indexterm>g_date_time_to_timeval <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_date_time_to_timezone</primary></indexterm>g_date_time_to_timezone <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_date_time_to_unix</primary></indexterm>g_date_time_to_unix <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_date_time_to_utc</primary></indexterm>g_date_time_to_utc <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_date_time_unref</primary></indexterm>g_date_time_unref <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_dcgettext</primary></indexterm>g_dcgettext <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_dgettext</primary></indexterm>g_dgettext <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_dir_make_tmp</primary></indexterm>g_dir_make_tmp <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_dngettext</primary></indexterm>g_dngettext <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_double_equal</primary></indexterm>g_double_equal <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_double_hash</primary></indexterm>g_double_hash <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_dpgettext</primary></indexterm>g_dpgettext <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_dpgettext2</primary></indexterm>g_dpgettext2 <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_environ_getenv</primary></indexterm>g_environ_getenv <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_environ_setenv</primary></indexterm>g_environ_setenv <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_environ_unsetenv</primary></indexterm>g_environ_unsetenv <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_error_new_valist</primary></indexterm>g_error_new_valist <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_format_size</primary></indexterm>g_format_size <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_format_size_for_display</primary></indexterm>g_format_size_for_display <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_format_size_full</primary></indexterm>g_format_size_full <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_get_codeset</primary></indexterm>g_get_codeset <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_get_environ</primary></indexterm>g_get_environ <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_get_locale_variants</primary></indexterm>g_get_locale_variants <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_get_monotonic_time</primary></indexterm>g_get_monotonic_time <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_get_real_time</primary></indexterm>g_get_real_time <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_get_user_runtime_dir</primary></indexterm>g_get_user_runtime_dir <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_get_user_special_dir</primary></indexterm>g_get_user_special_dir <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_hash_table_add</primary></indexterm>g_hash_table_add <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_hash_table_contains</primary></indexterm>g_hash_table_contains <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_hash_table_get_keys</primary></indexterm>g_hash_table_get_keys <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_hash_table_get_values</primary></indexterm>g_hash_table_get_values <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_hash_table_iter_get_hash_table</primary></indexterm>g_hash_table_iter_get_hash_table <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_hash_table_iter_init</primary></indexterm>g_hash_table_iter_init <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_hash_table_iter_next</primary></indexterm>g_hash_table_iter_next <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_hash_table_iter_remove</primary></indexterm>g_hash_table_iter_remove <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_hash_table_iter_replace</primary></indexterm>g_hash_table_iter_replace <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_hash_table_iter_steal</primary></indexterm>g_hash_table_iter_steal <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_hmac_copy</primary></indexterm>g_hmac_copy <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_hmac_get_digest</primary></indexterm>g_hmac_get_digest <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_hmac_get_string</primary></indexterm>g_hmac_get_string <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_hmac_new</primary></indexterm>g_hmac_new <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_hmac_ref</primary></indexterm>g_hmac_ref <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_hmac_unref</primary></indexterm>g_hmac_unref <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_hmac_update</primary></indexterm>g_hmac_update <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_hostname_is_ascii_encoded</primary></indexterm>g_hostname_is_ascii_encoded <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_hostname_is_ip_address</primary></indexterm>g_hostname_is_ip_address <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_hostname_is_non_ascii</primary></indexterm>g_hostname_is_non_ascii <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_hostname_to_ascii</primary></indexterm>g_hostname_to_ascii <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_hostname_to_unicode</primary></indexterm>g_hostname_to_unicode <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_int64_equal</primary></indexterm>g_int64_equal <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_int64_hash</primary></indexterm>g_int64_hash <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_io_channel_close</primary></indexterm>g_io_channel_close <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_io_channel_read</primary></indexterm>g_io_channel_read <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_io_channel_seek</primary></indexterm>g_io_channel_seek <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_io_channel_write</primary></indexterm>g_io_channel_write <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_key_file_get_int64</primary></indexterm>g_key_file_get_int64 <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_key_file_get_uint64</primary></indexterm>g_key_file_get_uint64 <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_key_file_load_from_dirs</primary></indexterm>g_key_file_load_from_dirs <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_key_file_ref</primary></indexterm>g_key_file_ref <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_key_file_set_int64</primary></indexterm>g_key_file_set_int64 <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_key_file_set_uint64</primary></indexterm>g_key_file_set_uint64 <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_key_file_unref</primary></indexterm>g_key_file_unref <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_list_free_full</primary></indexterm>g_list_free_full <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_main_context_get_thread_default</primary></indexterm>g_main_context_get_thread_default <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_main_context_invoke</primary></indexterm>g_main_context_invoke <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_main_context_invoke_full</primary></indexterm>g_main_context_invoke_full <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_main_context_pop_thread_default</primary></indexterm>g_main_context_pop_thread_default <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_main_context_push_thread_default</primary></indexterm>g_main_context_push_thread_default <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_main_context_ref_thread_default</primary></indexterm>g_main_context_ref_thread_default <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_malloc0_n</primary></indexterm>g_malloc0_n <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_malloc_n</primary></indexterm>g_malloc_n <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_mapped_file_new_from_fd</primary></indexterm>g_mapped_file_new_from_fd <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_mapped_file_ref</primary></indexterm>g_mapped_file_ref <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_mapped_file_unref</primary></indexterm>g_mapped_file_unref <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_markup_collect_attributes</primary></indexterm>g_markup_collect_attributes <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_markup_parse_context_get_element_stack</primary></indexterm>g_markup_parse_context_get_element_stack <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_markup_parse_context_get_user_data</primary></indexterm>g_markup_parse_context_get_user_data <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_markup_parse_context_pop</primary></indexterm>g_markup_parse_context_pop <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_markup_parse_context_push</primary></indexterm>g_markup_parse_context_push <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_match_info_expand_references</primary></indexterm>g_match_info_expand_references <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_match_info_fetch</primary></indexterm>g_match_info_fetch <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_match_info_fetch_all</primary></indexterm>g_match_info_fetch_all <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_match_info_fetch_named</primary></indexterm>g_match_info_fetch_named <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_match_info_fetch_named_pos</primary></indexterm>g_match_info_fetch_named_pos <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_match_info_fetch_pos</primary></indexterm>g_match_info_fetch_pos <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_match_info_free</primary></indexterm>g_match_info_free <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_match_info_get_match_count</primary></indexterm>g_match_info_get_match_count <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_match_info_get_regex</primary></indexterm>g_match_info_get_regex <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_match_info_get_string</primary></indexterm>g_match_info_get_string <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_match_info_is_partial_match</primary></indexterm>g_match_info_is_partial_match <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_match_info_matches</primary></indexterm>g_match_info_matches <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_match_info_next</primary></indexterm>g_match_info_next <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_match_info_ref</primary></indexterm>g_match_info_ref <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_match_info_unref</primary></indexterm>g_match_info_unref <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_mkdtemp</primary></indexterm>g_mkdtemp <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_mkdtemp_full</primary></indexterm>g_mkdtemp_full <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_mkstemp_full</primary></indexterm>g_mkstemp_full <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_mutex_clear</primary></indexterm>g_mutex_clear <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_mutex_free</primary></indexterm>g_mutex_free <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_mutex_init</primary></indexterm>g_mutex_init <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_mutex_lock</primary></indexterm>g_mutex_lock <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_mutex_new</primary></indexterm>g_mutex_new <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_mutex_trylock</primary></indexterm>g_mutex_trylock <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_mutex_unlock</primary></indexterm>g_mutex_unlock <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_once_init_enter</primary></indexterm>g_once_init_enter <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_once_init_enter_impl</primary></indexterm>g_once_init_enter_impl <LINK LINKEND="REFSTD.libglib.2.0.3">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_once_init_leave</primary></indexterm>g_once_init_leave <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_option_context_get_help</primary></indexterm>g_option_context_get_help <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_pointer_bit_lock</primary></indexterm>g_pointer_bit_lock <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_pointer_bit_trylock</primary></indexterm>g_pointer_bit_trylock <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_pointer_bit_unlock</primary></indexterm>g_pointer_bit_unlock <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_poll</primary></indexterm>g_poll <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_prefix_error</primary></indexterm>g_prefix_error <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_private_get</primary></indexterm>g_private_get <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_private_new</primary></indexterm>g_private_new <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_private_replace</primary></indexterm>g_private_replace <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_private_set</primary></indexterm>g_private_set <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_propagate_prefixed_error</primary></indexterm>g_propagate_prefixed_error <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_ptr_array_new_full</primary></indexterm>g_ptr_array_new_full <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_ptr_array_new_with_free_func</primary></indexterm>g_ptr_array_new_with_free_func <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_ptr_array_ref</primary></indexterm>g_ptr_array_ref <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_ptr_array_set_free_func</primary></indexterm>g_ptr_array_set_free_func <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_ptr_array_unref</primary></indexterm>g_ptr_array_unref <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_queue_clear</primary></indexterm>g_queue_clear <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_queue_free_full</primary></indexterm>g_queue_free_full <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_queue_init</primary></indexterm>g_queue_init <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_realloc_n</primary></indexterm>g_realloc_n <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_rec_mutex_clear</primary></indexterm>g_rec_mutex_clear <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_rec_mutex_init</primary></indexterm>g_rec_mutex_init <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_rec_mutex_lock</primary></indexterm>g_rec_mutex_lock <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_rec_mutex_trylock</primary></indexterm>g_rec_mutex_trylock <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_rec_mutex_unlock</primary></indexterm>g_rec_mutex_unlock <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_regex_check_replacement</primary></indexterm>g_regex_check_replacement <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_regex_error_quark</primary></indexterm>g_regex_error_quark <LINK LINKEND="REFSTD.libglib.2.0.3">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_regex_escape_nul</primary></indexterm>g_regex_escape_nul <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_regex_escape_string</primary></indexterm>g_regex_escape_string <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_regex_get_capture_count</primary></indexterm>g_regex_get_capture_count <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_regex_get_compile_flags</primary></indexterm>g_regex_get_compile_flags <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_regex_get_match_flags</primary></indexterm>g_regex_get_match_flags <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_regex_get_max_backref</primary></indexterm>g_regex_get_max_backref <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_regex_get_pattern</primary></indexterm>g_regex_get_pattern <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_regex_get_string_number</primary></indexterm>g_regex_get_string_number <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_regex_match</primary></indexterm>g_regex_match <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_regex_match_all</primary></indexterm>g_regex_match_all <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_regex_match_all_full</primary></indexterm>g_regex_match_all_full <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_regex_match_full</primary></indexterm>g_regex_match_full <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_regex_match_simple</primary></indexterm>g_regex_match_simple <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_regex_new</primary></indexterm>g_regex_new <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_regex_ref</primary></indexterm>g_regex_ref <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_regex_replace</primary></indexterm>g_regex_replace <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_regex_replace_eval</primary></indexterm>g_regex_replace_eval <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_regex_replace_literal</primary></indexterm>g_regex_replace_literal <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_regex_split</primary></indexterm>g_regex_split <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_regex_split_full</primary></indexterm>g_regex_split_full <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_regex_split_simple</primary></indexterm>g_regex_split_simple <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_regex_unref</primary></indexterm>g_regex_unref <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_reload_user_special_dirs_cache</primary></indexterm>g_reload_user_special_dirs_cache <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_rw_lock_clear</primary></indexterm>g_rw_lock_clear <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_rw_lock_init</primary></indexterm>g_rw_lock_init <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_rw_lock_reader_lock</primary></indexterm>g_rw_lock_reader_lock <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_rw_lock_reader_trylock</primary></indexterm>g_rw_lock_reader_trylock <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_rw_lock_reader_unlock</primary></indexterm>g_rw_lock_reader_unlock <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_rw_lock_writer_lock</primary></indexterm>g_rw_lock_writer_lock <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_rw_lock_writer_trylock</primary></indexterm>g_rw_lock_writer_trylock <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_rw_lock_writer_unlock</primary></indexterm>g_rw_lock_writer_unlock <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_sequence_append</primary></indexterm>g_sequence_append <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_sequence_foreach</primary></indexterm>g_sequence_foreach <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_sequence_foreach_range</primary></indexterm>g_sequence_foreach_range <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_sequence_free</primary></indexterm>g_sequence_free <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_sequence_get</primary></indexterm>g_sequence_get <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_sequence_get_begin_iter</primary></indexterm>g_sequence_get_begin_iter <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_sequence_get_end_iter</primary></indexterm>g_sequence_get_end_iter <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_sequence_get_iter_at_pos</primary></indexterm>g_sequence_get_iter_at_pos <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_sequence_get_length</primary></indexterm>g_sequence_get_length <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_sequence_insert_before</primary></indexterm>g_sequence_insert_before <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_sequence_insert_sorted</primary></indexterm>g_sequence_insert_sorted <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_sequence_insert_sorted_iter</primary></indexterm>g_sequence_insert_sorted_iter <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_sequence_iter_compare</primary></indexterm>g_sequence_iter_compare <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_sequence_iter_get_position</primary></indexterm>g_sequence_iter_get_position <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_sequence_iter_get_sequence</primary></indexterm>g_sequence_iter_get_sequence <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_sequence_iter_is_begin</primary></indexterm>g_sequence_iter_is_begin <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_sequence_iter_is_end</primary></indexterm>g_sequence_iter_is_end <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_sequence_iter_move</primary></indexterm>g_sequence_iter_move <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_sequence_iter_next</primary></indexterm>g_sequence_iter_next <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_sequence_iter_prev</primary></indexterm>g_sequence_iter_prev <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_sequence_lookup</primary></indexterm>g_sequence_lookup <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_sequence_lookup_iter</primary></indexterm>g_sequence_lookup_iter <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_sequence_move</primary></indexterm>g_sequence_move <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_sequence_move_range</primary></indexterm>g_sequence_move_range <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_sequence_new</primary></indexterm>g_sequence_new <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_sequence_prepend</primary></indexterm>g_sequence_prepend <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_sequence_range_get_midpoint</primary></indexterm>g_sequence_range_get_midpoint <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_sequence_remove</primary></indexterm>g_sequence_remove <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_sequence_remove_range</primary></indexterm>g_sequence_remove_range <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_sequence_search</primary></indexterm>g_sequence_search <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_sequence_search_iter</primary></indexterm>g_sequence_search_iter <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_sequence_set</primary></indexterm>g_sequence_set <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_sequence_sort</primary></indexterm>g_sequence_sort <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_sequence_sort_changed</primary></indexterm>g_sequence_sort_changed <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_sequence_sort_changed_iter</primary></indexterm>g_sequence_sort_changed_iter <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_sequence_sort_iter</primary></indexterm>g_sequence_sort_iter <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_sequence_swap</primary></indexterm>g_sequence_swap <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_set_error_literal</primary></indexterm>g_set_error_literal <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_slist_free_full</primary></indexterm>g_slist_free_full <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_source_add_child_source</primary></indexterm>g_source_add_child_source <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_source_get_name</primary></indexterm>g_source_get_name <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_source_get_time</primary></indexterm>g_source_get_time <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_source_remove_child_source</primary></indexterm>g_source_remove_child_source <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_source_set_name</primary></indexterm>g_source_set_name <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_source_set_name_by_id</primary></indexterm>g_source_set_name_by_id <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_strcasecmp</primary></indexterm>g_strcasecmp <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_strcmp0</primary></indexterm>g_strcmp0 <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_strdown</primary></indexterm>g_strdown <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_string_append_uri_escaped</primary></indexterm>g_string_append_uri_escaped <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_string_append_vprintf</primary></indexterm>g_string_append_vprintf <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_string_chunk_clear</primary></indexterm>g_string_chunk_clear <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_string_down</primary></indexterm>g_string_down <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_string_overwrite</primary></indexterm>g_string_overwrite <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_string_overwrite_len</primary></indexterm>g_string_overwrite_len <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_string_up</primary></indexterm>g_string_up <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_string_vprintf</primary></indexterm>g_string_vprintf <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_strncasecmp</primary></indexterm>g_strncasecmp <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_strup</primary></indexterm>g_strup <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_test_add_data_func</primary></indexterm>g_test_add_data_func <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_test_add_func</primary></indexterm>g_test_add_func <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_test_add_vtable</primary></indexterm>g_test_add_vtable <LINK LINKEND="REFSTD.libglib.2.0.3">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_test_bug</primary></indexterm>g_test_bug <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_test_bug_base</primary></indexterm>g_test_bug_base <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_test_create_case</primary></indexterm>g_test_create_case <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_test_create_suite</primary></indexterm>g_test_create_suite <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_test_fail</primary></indexterm>g_test_fail <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_test_get_root</primary></indexterm>g_test_get_root <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_test_init</primary></indexterm>g_test_init <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_test_log_buffer_free</primary></indexterm>g_test_log_buffer_free <LINK LINKEND="REFSTD.libglib.2.0.3">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_test_log_buffer_new</primary></indexterm>g_test_log_buffer_new <LINK LINKEND="REFSTD.libglib.2.0.3">[LSB]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_test_log_buffer_pop</primary></indexterm>g_test_log_buffer_pop <LINK LINKEND="REFSTD.libglib.2.0.3">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_test_log_buffer_push</primary></indexterm>g_test_log_buffer_push <LINK LINKEND="REFSTD.libglib.2.0.3">[LSB]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_test_log_msg_free</primary></indexterm>g_test_log_msg_free <LINK LINKEND="REFSTD.libglib.2.0.3">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_test_log_set_fatal_handler</primary></indexterm>g_test_log_set_fatal_handler <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_test_log_type_name</primary></indexterm>g_test_log_type_name <LINK LINKEND="REFSTD.libglib.2.0.3">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_test_maximized_result</primary></indexterm>g_test_maximized_result <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_test_message</primary></indexterm>g_test_message <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_test_minimized_result</primary></indexterm>g_test_minimized_result <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_test_queue_destroy</primary></indexterm>g_test_queue_destroy <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_test_queue_free</primary></indexterm>g_test_queue_free <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_test_rand_double</primary></indexterm>g_test_rand_double <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_test_rand_double_range</primary></indexterm>g_test_rand_double_range <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_test_rand_int</primary></indexterm>g_test_rand_int <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_test_rand_int_range</primary></indexterm>g_test_rand_int_range <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_test_run</primary></indexterm>g_test_run <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_test_run_suite</primary></indexterm>g_test_run_suite <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_test_suite_add</primary></indexterm>g_test_suite_add <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_test_suite_add_suite</primary></indexterm>g_test_suite_add_suite <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_test_timer_elapsed</primary></indexterm>g_test_timer_elapsed <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_test_timer_last</primary></indexterm>g_test_timer_last <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_test_timer_start</primary></indexterm>g_test_timer_start <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_test_trap_assertions</primary></indexterm>g_test_trap_assertions <LINK LINKEND="REFSTD.libglib.2.0.3">[LSB]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_test_trap_fork</primary></indexterm>g_test_trap_fork <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_test_trap_has_passed</primary></indexterm>g_test_trap_has_passed <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_test_trap_reached_timeout</primary></indexterm>g_test_trap_reached_timeout <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_thread_create</primary></indexterm>g_thread_create <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_thread_get_initialized</primary></indexterm>g_thread_get_initialized <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_thread_gettime</primary></indexterm>g_thread_gettime <LINK LINKEND="REFSTD.libglib.2.0.3">[LSB]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_thread_new</primary></indexterm>g_thread_new <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_thread_ref</primary></indexterm>g_thread_ref <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_thread_try_new</primary></indexterm>g_thread_try_new <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_thread_unref</primary></indexterm>g_thread_unref <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_thread_yield</primary></indexterm>g_thread_yield <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_time_zone_adjust_time</primary></indexterm>g_time_zone_adjust_time <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_time_zone_find_interval</primary></indexterm>g_time_zone_find_interval <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_time_zone_get_abbreviation</primary></indexterm>g_time_zone_get_abbreviation <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_time_zone_get_offset</primary></indexterm>g_time_zone_get_offset <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_time_zone_is_dst</primary></indexterm>g_time_zone_is_dst <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_time_zone_new</primary></indexterm>g_time_zone_new <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_time_zone_new_local</primary></indexterm>g_time_zone_new_local <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_time_zone_new_utc</primary></indexterm>g_time_zone_new_utc <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_time_zone_ref</primary></indexterm>g_time_zone_ref <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_time_zone_unref</primary></indexterm>g_time_zone_unref <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_timeout_add_seconds</primary></indexterm>g_timeout_add_seconds <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_timeout_add_seconds_full</primary></indexterm>g_timeout_add_seconds_full <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_timeout_source_new_seconds</primary></indexterm>g_timeout_source_new_seconds <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_tree_ref</primary></indexterm>g_tree_ref <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_tree_traverse</primary></indexterm>g_tree_traverse <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_tree_unref</primary></indexterm>g_tree_unref <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_try_malloc0</primary></indexterm>g_try_malloc0 <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_try_malloc0_n</primary></indexterm>g_try_malloc0_n <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_try_malloc_n</primary></indexterm>g_try_malloc_n <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_try_realloc_n</primary></indexterm>g_try_realloc_n <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_unichar_combining_class</primary></indexterm>g_unichar_combining_class <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_unichar_compose</primary></indexterm>g_unichar_compose <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_unichar_decompose</primary></indexterm>g_unichar_decompose <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_unichar_fully_decompose</primary></indexterm>g_unichar_fully_decompose <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_unichar_get_script</primary></indexterm>g_unichar_get_script <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_unichar_ismark</primary></indexterm>g_unichar_ismark <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_unichar_iszerowidth</primary></indexterm>g_unichar_iszerowidth <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_unicode_script_from_iso15924</primary></indexterm>g_unicode_script_from_iso15924 <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_unicode_script_to_iso15924</primary></indexterm>g_unicode_script_to_iso15924 <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_uri_escape_string</primary></indexterm>g_uri_escape_string <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_uri_parse_scheme</primary></indexterm>g_uri_parse_scheme <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_uri_unescape_segment</primary></indexterm>g_uri_unescape_segment <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_uri_unescape_string</primary></indexterm>g_uri_unescape_string <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_utf8_substring</primary></indexterm>g_utf8_substring <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_variant_builder_add</primary></indexterm>g_variant_builder_add <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_variant_builder_add_parsed</primary></indexterm>g_variant_builder_add_parsed <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_variant_builder_add_value</primary></indexterm>g_variant_builder_add_value <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_variant_builder_clear</primary></indexterm>g_variant_builder_clear <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_variant_builder_close</primary></indexterm>g_variant_builder_close <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_variant_builder_end</primary></indexterm>g_variant_builder_end <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_variant_builder_init</primary></indexterm>g_variant_builder_init <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_variant_builder_new</primary></indexterm>g_variant_builder_new <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_variant_builder_open</primary></indexterm>g_variant_builder_open <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_variant_builder_ref</primary></indexterm>g_variant_builder_ref <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_variant_builder_unref</primary></indexterm>g_variant_builder_unref <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_variant_byteswap</primary></indexterm>g_variant_byteswap <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_variant_classify</primary></indexterm>g_variant_classify <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_variant_compare</primary></indexterm>g_variant_compare <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_variant_dup_bytestring</primary></indexterm>g_variant_dup_bytestring <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_variant_dup_bytestring_array</primary></indexterm>g_variant_dup_bytestring_array <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_variant_dup_objv</primary></indexterm>g_variant_dup_objv <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_variant_dup_string</primary></indexterm>g_variant_dup_string <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_variant_dup_strv</primary></indexterm>g_variant_dup_strv <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_variant_equal</primary></indexterm>g_variant_equal <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_variant_get</primary></indexterm>g_variant_get <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_variant_get_boolean</primary></indexterm>g_variant_get_boolean <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_variant_get_byte</primary></indexterm>g_variant_get_byte <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_variant_get_bytestring</primary></indexterm>g_variant_get_bytestring <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_variant_get_bytestring_array</primary></indexterm>g_variant_get_bytestring_array <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_variant_get_child</primary></indexterm>g_variant_get_child <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_variant_get_child_value</primary></indexterm>g_variant_get_child_value <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_variant_get_data</primary></indexterm>g_variant_get_data <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_variant_get_double</primary></indexterm>g_variant_get_double <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_variant_get_fixed_array</primary></indexterm>g_variant_get_fixed_array <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_variant_get_handle</primary></indexterm>g_variant_get_handle <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_variant_get_int16</primary></indexterm>g_variant_get_int16 <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_variant_get_int32</primary></indexterm>g_variant_get_int32 <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_variant_get_int64</primary></indexterm>g_variant_get_int64 <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_variant_get_maybe</primary></indexterm>g_variant_get_maybe <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_variant_get_normal_form</primary></indexterm>g_variant_get_normal_form <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_variant_get_objv</primary></indexterm>g_variant_get_objv <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_variant_get_size</primary></indexterm>g_variant_get_size <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_variant_get_string</primary></indexterm>g_variant_get_string <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_variant_get_strv</primary></indexterm>g_variant_get_strv <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_variant_get_type</primary></indexterm>g_variant_get_type <LINK LINKEND="REFSTD.libglib.2.0.2">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_variant_get_type_string</primary></indexterm>g_variant_get_type_string <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_variant_get_uint16</primary></indexterm>g_variant_get_uint16 <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_variant_get_uint32</primary></indexterm>g_variant_get_uint32 <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_variant_get_uint64</primary></indexterm>g_variant_get_uint64 <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_variant_get_va</primary></indexterm>g_variant_get_va <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_variant_get_variant</primary></indexterm>g_variant_get_variant <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_variant_hash</primary></indexterm>g_variant_hash <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_variant_is_container</primary></indexterm>g_variant_is_container <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_variant_is_floating</primary></indexterm>g_variant_is_floating <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_variant_is_normal_form</primary></indexterm>g_variant_is_normal_form <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_variant_is_object_path</primary></indexterm>g_variant_is_object_path <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_variant_is_of_type</primary></indexterm>g_variant_is_of_type <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_variant_is_signature</primary></indexterm>g_variant_is_signature <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_variant_iter_copy</primary></indexterm>g_variant_iter_copy <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_variant_iter_free</primary></indexterm>g_variant_iter_free <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_variant_iter_init</primary></indexterm>g_variant_iter_init <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_variant_iter_loop</primary></indexterm>g_variant_iter_loop <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_variant_iter_n_children</primary></indexterm>g_variant_iter_n_children <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_variant_iter_new</primary></indexterm>g_variant_iter_new <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_variant_iter_next</primary></indexterm>g_variant_iter_next <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_variant_iter_next_value</primary></indexterm>g_variant_iter_next_value <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_variant_lookup</primary></indexterm>g_variant_lookup <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_variant_lookup_value</primary></indexterm>g_variant_lookup_value <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_variant_n_children</primary></indexterm>g_variant_n_children <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_variant_new</primary></indexterm>g_variant_new <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_variant_new_array</primary></indexterm>g_variant_new_array <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_variant_new_boolean</primary></indexterm>g_variant_new_boolean <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_variant_new_byte</primary></indexterm>g_variant_new_byte <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_variant_new_bytestring</primary></indexterm>g_variant_new_bytestring <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_variant_new_bytestring_array</primary></indexterm>g_variant_new_bytestring_array <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_variant_new_dict_entry</primary></indexterm>g_variant_new_dict_entry <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_variant_new_double</primary></indexterm>g_variant_new_double <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_variant_new_fixed_array</primary></indexterm>g_variant_new_fixed_array <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_variant_new_from_data</primary></indexterm>g_variant_new_from_data <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_variant_new_handle</primary></indexterm>g_variant_new_handle <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_variant_new_int16</primary></indexterm>g_variant_new_int16 <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_variant_new_int32</primary></indexterm>g_variant_new_int32 <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_variant_new_int64</primary></indexterm>g_variant_new_int64 <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_variant_new_maybe</primary></indexterm>g_variant_new_maybe <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_variant_new_object_path</primary></indexterm>g_variant_new_object_path <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_variant_new_objv</primary></indexterm>g_variant_new_objv <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_variant_new_parsed</primary></indexterm>g_variant_new_parsed <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_variant_new_parsed_va</primary></indexterm>g_variant_new_parsed_va <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_variant_new_signature</primary></indexterm>g_variant_new_signature <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_variant_new_string</primary></indexterm>g_variant_new_string <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_variant_new_strv</primary></indexterm>g_variant_new_strv <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_variant_new_tuple</primary></indexterm>g_variant_new_tuple <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_variant_new_uint16</primary></indexterm>g_variant_new_uint16 <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_variant_new_uint32</primary></indexterm>g_variant_new_uint32 <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_variant_new_uint64</primary></indexterm>g_variant_new_uint64 <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_variant_new_va</primary></indexterm>g_variant_new_va <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_variant_new_variant</primary></indexterm>g_variant_new_variant <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_variant_parse</primary></indexterm>g_variant_parse <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_variant_parser_get_error_quark</primary></indexterm>g_variant_parser_get_error_quark <LINK LINKEND="REFSTD.libglib.2.0.3">[LSB]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_variant_print</primary></indexterm>g_variant_print <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_variant_print_string</primary></indexterm>g_variant_print_string <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_variant_ref</primary></indexterm>g_variant_ref <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_variant_ref_sink</primary></indexterm>g_variant_ref_sink <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_variant_store</primary></indexterm>g_variant_store <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_variant_take_ref</primary></indexterm>g_variant_take_ref <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_variant_type_checked_</primary></indexterm>g_variant_type_checked_ <LINK LINKEND="REFSTD.libglib.2.0.3">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_variant_type_copy</primary></indexterm>g_variant_type_copy <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_variant_type_dup_string</primary></indexterm>g_variant_type_dup_string <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_variant_type_element</primary></indexterm>g_variant_type_element <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_variant_type_equal</primary></indexterm>g_variant_type_equal <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_variant_type_first</primary></indexterm>g_variant_type_first <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_variant_type_free</primary></indexterm>g_variant_type_free <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_variant_type_get_string_length</primary></indexterm>g_variant_type_get_string_length <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_variant_type_hash</primary></indexterm>g_variant_type_hash <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_variant_type_is_array</primary></indexterm>g_variant_type_is_array <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_variant_type_is_basic</primary></indexterm>g_variant_type_is_basic <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_variant_type_is_container</primary></indexterm>g_variant_type_is_container <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_variant_type_is_definite</primary></indexterm>g_variant_type_is_definite <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_variant_type_is_dict_entry</primary></indexterm>g_variant_type_is_dict_entry <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_variant_type_is_maybe</primary></indexterm>g_variant_type_is_maybe <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_variant_type_is_subtype_of</primary></indexterm>g_variant_type_is_subtype_of <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_variant_type_is_tuple</primary></indexterm>g_variant_type_is_tuple <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_variant_type_is_variant</primary></indexterm>g_variant_type_is_variant <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_variant_type_key</primary></indexterm>g_variant_type_key <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_variant_type_n_items</primary></indexterm>g_variant_type_n_items <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_variant_type_new</primary></indexterm>g_variant_type_new <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_variant_type_new_array</primary></indexterm>g_variant_type_new_array <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_variant_type_new_dict_entry</primary></indexterm>g_variant_type_new_dict_entry <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_variant_type_new_maybe</primary></indexterm>g_variant_type_new_maybe <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_variant_type_new_tuple</primary></indexterm>g_variant_type_new_tuple <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_variant_type_next</primary></indexterm>g_variant_type_next <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_variant_type_peek_string</primary></indexterm>g_variant_type_peek_string <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_variant_type_string_is_valid</primary></indexterm>g_variant_type_string_is_valid <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_variant_type_string_scan</primary></indexterm>g_variant_type_string_scan <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_variant_type_value</primary></indexterm>g_variant_type_value <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_variant_unref</primary></indexterm>g_variant_unref <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_warn_message</primary></indexterm>g_warn_message <LINK LINKEND="REFSTD.libglib.2.0.3">[LSB]</LINK></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
An LSB conforming implementation shall provide the generic deprecated functions
for GTK General purpose utility library specified in <XREF linkend="tbl-libglib-2.0-gtk-g-depints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<NOTE><PARA>These interfaces are deprecated, and applications
should avoid using them.
These interfaces may be withdrawn
in future releases of this specification.
</PARA></NOTE>
<!--libgroupdepints-->
<TABLE id="tbl-libglib-2.0-gtk-g-depints">
<TITLE>libglib-2.0 - GTK General purpose utility library Deprecated Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>g_async_queue_ref_unlocked</primary></indexterm>g_async_queue_ref_unlocked <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_async_queue_unref_and_unlock</primary></indexterm>g_async_queue_unref_and_unlock <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_basename</primary></indexterm>g_basename <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_cond_free</primary></indexterm>g_cond_free <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_cond_new</primary></indexterm>g_cond_new <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_cond_timed_wait</primary></indexterm>g_cond_timed_wait <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_format_size_for_display</primary></indexterm>g_format_size_for_display <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_io_channel_close</primary></indexterm>g_io_channel_close <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_io_channel_read</primary></indexterm>g_io_channel_read <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_io_channel_seek</primary></indexterm>g_io_channel_seek <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_io_channel_write</primary></indexterm>g_io_channel_write <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_mutex_free</primary></indexterm>g_mutex_free <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_mutex_new</primary></indexterm>g_mutex_new <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_private_new</primary></indexterm>g_private_new <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_strcasecmp</primary></indexterm>g_strcasecmp <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_strdown</primary></indexterm>g_strdown <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_string_down</primary></indexterm>g_string_down <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_string_up</primary></indexterm>g_string_up <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_strncasecmp</primary></indexterm>g_strncasecmp <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_strup</primary></indexterm>g_strup <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_thread_create</primary></indexterm>g_thread_create <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_tree_traverse</primary></indexterm>g_tree_traverse <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for GTK General purpose utility library specified in <XREF linkend="tbl-libglib-2.0-gtk-g-data">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<TABLE id="tbl-libglib-2.0-gtk-g-data">
<TITLE>libglib-2.0 - GTK General purpose utility library Data Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>g_test_config_vars</primary></indexterm>g_test_config_vars <LINK LINKEND="REFSTD.libglib.2.0.3">[LSB]</LINK></ENTRY>
<ENTRY></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>
</SECT2>
<!-- debug: database interface name Glib Arrays -->
<SECT2>
<!--libgroup-->
<TITLE>Glib Arrays</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Interfaces for Glib Arrays</TITLE>
<PARA>
No external functions are defined for libglib-2.0 - Glib Arrays
in this part of the specification. See also the relevant architecture specific part of this specification.
</PARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Glib Asynchronous Queues -->
<SECT2>
<!--libgroup-->
<TITLE>Glib Asynchronous Queues</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Interfaces for Glib Asynchronous Queues</TITLE>
<PARA>
No external functions are defined for libglib-2.0 - Glib Asynchronous Queues
in this part of the specification. See also the relevant architecture specific part of this specification.
</PARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Glib Atomic Operations -->
<SECT2>
<!--libgroup-->
<TITLE>Glib Atomic Operations</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Interfaces for Glib Atomic Operations</TITLE>
<PARA>
No external functions are defined for libglib-2.0 - Glib Atomic Operations
in this part of the specification. See also the relevant architecture specific part of this specification.
</PARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Glib Automatic String Completion -->
<SECT2>
<!--libgroup-->
<TITLE>Glib Automatic String Completion</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Interfaces for Glib Automatic String Completion</TITLE>
<PARA>
No external functions are defined for libglib-2.0 - Glib Automatic String Completion
in this part of the specification. See also the relevant architecture specific part of this specification.
</PARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Glib Balanced Binary Trees -->
<SECT2>
<!--libgroup-->
<TITLE>Glib Balanced Binary Trees</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Interfaces for Glib Balanced Binary Trees</TITLE>
<PARA>
No external functions are defined for libglib-2.0 - Glib Balanced Binary Trees
in this part of the specification. See also the relevant architecture specific part of this specification.
</PARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Glib Byte Arrays -->
<SECT2>
<!--libgroup-->
<TITLE>Glib Byte Arrays</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Interfaces for Glib Byte Arrays</TITLE>
<PARA>
No external functions are defined for libglib-2.0 - Glib Byte Arrays
in this part of the specification. See also the relevant architecture specific part of this specification.
</PARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Glib Caches -->
<SECT2>
<!--libgroup-->
<TITLE>Glib Caches</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Interfaces for Glib Caches</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic functions
for Glib Caches specified in <XREF linkend="tbl-libglib-2.0-glib-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<TABLE id="tbl-libglib-2.0-glib-ints">
<TITLE>libglib-2.0 - Glib Caches Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>g_cache_value_foreach</primary></indexterm>g_cache_value_foreach <LINK LINKEND="REFSTD.libglib.2.0.3">[LSB]</LINK></ENTRY>
<ENTRY></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
An LSB conforming implementation shall provide the generic deprecated functions
for Glib Caches specified in <XREF linkend="tbl-libglib-2.0-glib-depints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<NOTE><PARA>These interfaces are deprecated, and applications
should avoid using them.
These interfaces may be withdrawn
in future releases of this specification.
</PARA></NOTE>
<!--libgroupdepints-->
<TABLE id="tbl-libglib-2.0-glib-depints">
<TITLE>libglib-2.0 - Glib Caches Deprecated Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>g_cache_value_foreach</primary></indexterm>g_cache_value_foreach <LINK LINKEND="REFSTD.libglib.2.0.3">[LSB]</LINK></ENTRY>
<ENTRY></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>
</SECT2>
<!-- debug: database interface name Glib Character Set Conversion -->
<SECT2>
<!--libgroup-->
<TITLE>Glib Character Set Conversion</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Interfaces for Glib Character Set Conversion</TITLE>
<PARA>
No external functions are defined for libglib-2.0 - Glib Character Set Conversion
in this part of the specification. See also the relevant architecture specific part of this specification.
</PARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Glib Commandline Option Parser -->
<SECT2>
<!--libgroup-->
<TITLE>Glib Commandline Option Parser</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Interfaces for Glib Commandline Option Parser</TITLE>
<PARA>
No external functions are defined for libglib-2.0 - Glib Commandline Option Parser
in this part of the specification. See also the relevant architecture specific part of this specification.
</PARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Glib Datasets -->
<SECT2>
<!--libgroup-->
<TITLE>Glib Datasets</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Interfaces for Glib Datasets</TITLE>
<PARA>
No external functions are defined for libglib-2.0 - Glib Datasets
in this part of the specification. See also the relevant architecture specific part of this specification.
</PARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Glib Date and Time Functions -->
<SECT2>
<!--libgroup-->
<TITLE>Glib Date and Time Functions</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Interfaces for Glib Date and Time Functions</TITLE>
<PARA>
No external functions are defined for libglib-2.0 - Glib Date and Time Functions
in this part of the specification. See also the relevant architecture specific part of this specification.
</PARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Glib Double-Ended Queues -->
<SECT2>
<!--libgroup-->
<TITLE>Glib Double-Ended Queues</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Interfaces for Glib Double-Ended Queues</TITLE>
<PARA>
No external functions are defined for libglib-2.0 - Glib Double-Ended Queues
in this part of the specification. See also the relevant architecture specific part of this specification.
</PARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Glib Doubly-Linked Lists -->
<SECT2>
<!--libgroup-->
<TITLE>Glib Doubly-Linked Lists</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Interfaces for Glib Doubly-Linked Lists</TITLE>
<PARA>
No external functions are defined for libglib-2.0 - Glib Doubly-Linked Lists
in this part of the specification. See also the relevant architecture specific part of this specification.
</PARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Glib Error Reporting -->
<SECT2>
<!--libgroup-->
<TITLE>Glib Error Reporting</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Interfaces for Glib Error Reporting</TITLE>
<PARA>
No external functions are defined for libglib-2.0 - Glib Error Reporting
in this part of the specification. See also the relevant architecture specific part of this specification.
</PARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Glib File Utilities -->
<SECT2>
<!--libgroup-->
<TITLE>Glib File Utilities</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Interfaces for Glib File Utilities</TITLE>
<PARA>
No external functions are defined for libglib-2.0 - Glib File Utilities
in this part of the specification. See also the relevant architecture specific part of this specification.
</PARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Glib Glob-Style Pattern Matching -->
<SECT2>
<!--libgroup-->
<TITLE>Glib Glob-Style Pattern Matching</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Interfaces for Glib Glob-Style Pattern Matching</TITLE>
<PARA>
No external functions are defined for libglib-2.0 - Glib Glob-Style Pattern Matching
in this part of the specification. See also the relevant architecture specific part of this specification.
</PARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Glib Hash Tables -->
<SECT2>
<!--libgroup-->
<TITLE>Glib Hash Tables</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Interfaces for Glib Hash Tables</TITLE>
<PARA>
No external functions are defined for libglib-2.0 - Glib Hash Tables
in this part of the specification. See also the relevant architecture specific part of this specification.
</PARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Glib Hook Functions -->
<SECT2>
<!--libgroup-->
<TITLE>Glib Hook Functions</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Interfaces for Glib Hook Functions</TITLE>
<PARA>
No external functions are defined for libglib-2.0 - Glib Hook Functions
in this part of the specification. See also the relevant architecture specific part of this specification.
</PARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Glib IO Channels -->
<SECT2>
<!--libgroup-->
<TITLE>Glib IO Channels</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Interfaces for Glib IO Channels</TITLE>
<PARA>
No external functions are defined for libglib-2.0 - Glib IO Channels
in this part of the specification. See also the relevant architecture specific part of this specification.
</PARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Glib Internationalization -->
<SECT2>
<!--libgroup-->
<TITLE>Glib Internationalization</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Interfaces for Glib Internationalization</TITLE>
<PARA>
No external functions are defined for libglib-2.0 - Glib Internationalization
in this part of the specification. See also the relevant architecture specific part of this specification.
</PARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Glib Key-Value File Parser -->
<SECT2>
<!--libgroup-->
<TITLE>Glib Key-Value File Parser</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Interfaces for Glib Key-Value File Parser</TITLE>
<PARA>
No external functions are defined for libglib-2.0 - Glib Key-Value File Parser
in this part of the specification. See also the relevant architecture specific part of this specification.
</PARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Glib Keyed Data Lists -->
<SECT2>
<!--libgroup-->
<TITLE>Glib Keyed Data Lists</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Interfaces for Glib Keyed Data Lists</TITLE>
<PARA>
No external functions are defined for libglib-2.0 - Glib Keyed Data Lists
in this part of the specification. See also the relevant architecture specific part of this specification.
</PARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Glib Lexical Scanner -->
<SECT2>
<!--libgroup-->
<TITLE>Glib Lexical Scanner</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Interfaces for Glib Lexical Scanner</TITLE>
<PARA>
No external functions are defined for libglib-2.0 - Glib Lexical Scanner
in this part of the specification. See also the relevant architecture specific part of this specification.
</PARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Glib Memory Allocation -->
<SECT2>
<!--libgroup-->
<TITLE>Glib Memory Allocation</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Interfaces for Glib Memory Allocation</TITLE>
<PARA>
No external functions are defined for libglib-2.0 - Glib Memory Allocation
in this part of the specification. See also the relevant architecture specific part of this specification.
</PARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Glib Memory Allocators -->
<SECT2>
<!--libgroup-->
<TITLE>Glib Memory Allocators</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Interfaces for Glib Memory Allocators</TITLE>
<PARA>
No external functions are defined for libglib-2.0 - Glib Memory Allocators
in this part of the specification. See also the relevant architecture specific part of this specification.
</PARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Glib Memory Chunks -->
<SECT2>
<!--libgroup-->
<TITLE>Glib Memory Chunks</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Interfaces for Glib Memory Chunks</TITLE>
<PARA>
No external functions are defined for libglib-2.0 - Glib Memory Chunks
in this part of the specification. See also the relevant architecture specific part of this specification.
</PARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Glib Message Logging -->
<SECT2>
<!--libgroup-->
<TITLE>Glib Message Logging</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Interfaces for Glib Message Logging</TITLE>
<PARA>
No external functions are defined for libglib-2.0 - Glib Message Logging
in this part of the specification. See also the relevant architecture specific part of this specification.
</PARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Glib Message Output and Debugging Functions -->
<SECT2>
<!--libgroup-->
<TITLE>Glib Message Output and Debugging Functions</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Interfaces for Glib Message Output and Debugging Functions</TITLE>
<PARA>
No external functions are defined for libglib-2.0 - Glib Message Output and Debugging Functions
in this part of the specification. See also the relevant architecture specific part of this specification.
</PARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Glib Miscellaneous Utility Functions -->
<SECT2>
<!--libgroup-->
<TITLE>Glib Miscellaneous Utility Functions</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Interfaces for Glib Miscellaneous Utility Functions</TITLE>
<PARA>
No external functions are defined for libglib-2.0 - Glib Miscellaneous Utility Functions
in this part of the specification. See also the relevant architecture specific part of this specification.
</PARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Glib N-ary Trees -->
<SECT2>
<!--libgroup-->
<TITLE>Glib N-ary Trees</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Interfaces for Glib N-ary Trees</TITLE>
<PARA>
No external functions are defined for libglib-2.0 - Glib N-ary Trees
in this part of the specification. See also the relevant architecture specific part of this specification.
</PARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Glib Pointer Arrays -->
<SECT2>
<!--libgroup-->
<TITLE>Glib Pointer Arrays</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Interfaces for Glib Pointer Arrays</TITLE>
<PARA>
No external functions are defined for libglib-2.0 - Glib Pointer Arrays
in this part of the specification. See also the relevant architecture specific part of this specification.
</PARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Glib Quarks -->
<SECT2>
<!--libgroup-->
<TITLE>Glib Quarks</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Interfaces for Glib Quarks</TITLE>
<PARA>
No external functions are defined for libglib-2.0 - Glib Quarks
in this part of the specification. See also the relevant architecture specific part of this specification.
</PARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Glib Random Numbers -->
<SECT2>
<!--libgroup-->
<TITLE>Glib Random Numbers</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Interfaces for Glib Random Numbers</TITLE>
<PARA>
No external functions are defined for libglib-2.0 - Glib Random Numbers
in this part of the specification. See also the relevant architecture specific part of this specification.
</PARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Glib Relations and Tuples -->
<SECT2>
<!--libgroup-->
<TITLE>Glib Relations and Tuples</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Interfaces for Glib Relations and Tuples</TITLE>
<PARA>
No external functions are defined for libglib-2.0 - Glib Relations and Tuples
in this part of the specification. See also the relevant architecture specific part of this specification.
</PARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Glib Shell-related Utilities -->
<SECT2>
<!--libgroup-->
<TITLE>Glib Shell-related Utilities</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Interfaces for Glib Shell-related Utilities</TITLE>
<PARA>
No external functions are defined for libglib-2.0 - Glib Shell-related Utilities
in this part of the specification. See also the relevant architecture specific part of this specification.
</PARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Glib Simple XML Subset Parser -->
<SECT2>
<!--libgroup-->
<TITLE>Glib Simple XML Subset Parser</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Interfaces for Glib Simple XML Subset Parser</TITLE>
<PARA>
No external functions are defined for libglib-2.0 - Glib Simple XML Subset Parser
in this part of the specification. See also the relevant architecture specific part of this specification.
</PARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Glib Singly-Linked Lists -->
<SECT2>
<!--libgroup-->
<TITLE>Glib Singly-Linked Lists</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Interfaces for Glib Singly-Linked Lists</TITLE>
<PARA>
No external functions are defined for libglib-2.0 - Glib Singly-Linked Lists
in this part of the specification. See also the relevant architecture specific part of this specification.
</PARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Glib Spawning Processes -->
<SECT2>
<!--libgroup-->
<TITLE>Glib Spawning Processes</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Interfaces for Glib Spawning Processes</TITLE>
<PARA>
No external functions are defined for libglib-2.0 - Glib Spawning Processes
in this part of the specification. See also the relevant architecture specific part of this specification.
</PARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Glib String Chunks -->
<SECT2>
<!--libgroup-->
<TITLE>Glib String Chunks</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Interfaces for Glib String Chunks</TITLE>
<PARA>
No external functions are defined for libglib-2.0 - Glib String Chunks
in this part of the specification. See also the relevant architecture specific part of this specification.
</PARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Glib String Utility Functions -->
<SECT2>
<!--libgroup-->
<TITLE>Glib String Utility Functions</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Interfaces for Glib String Utility Functions</TITLE>
<PARA>
No external functions are defined for libglib-2.0 - Glib String Utility Functions
in this part of the specification. See also the relevant architecture specific part of this specification.
</PARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Glib Strings -->
<SECT2>
<!--libgroup-->
<TITLE>Glib Strings</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Interfaces for Glib Strings</TITLE>
<PARA>
No external functions are defined for libglib-2.0 - Glib Strings
in this part of the specification. See also the relevant architecture specific part of this specification.
</PARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Glib - The Main Event Loop -->
<SECT2>
<!--libgroup-->
<TITLE>Glib - The Main Event Loop</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Interfaces for Glib - The Main Event Loop</TITLE>
<PARA>
No external functions are defined for libglib-2.0 - Glib - The Main Event Loop
in this part of the specification. See also the relevant architecture specific part of this specification.
</PARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Glib Thread Pools -->
<SECT2>
<!--libgroup-->
<TITLE>Glib Thread Pools</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Interfaces for Glib Thread Pools</TITLE>
<PARA>
No external functions are defined for libglib-2.0 - Glib Thread Pools
in this part of the specification. See also the relevant architecture specific part of this specification.
</PARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Glib Threads -->
<SECT2>
<!--libgroup-->
<TITLE>Glib Threads</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Interfaces for Glib Threads</TITLE>
<PARA>
No external functions are defined for libglib-2.0 - Glib Threads
in this part of the specification. See also the relevant architecture specific part of this specification.
</PARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Glib Timers -->
<SECT2>
<!--libgroup-->
<TITLE>Glib Timers</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Interfaces for Glib Timers</TITLE>
<PARA>
No external functions are defined for libglib-2.0 - Glib Timers
in this part of the specification. See also the relevant architecture specific part of this specification.
</PARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Glib Trash Stacks -->
<SECT2>
<!--libgroup-->
<TITLE>Glib Trash Stacks</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Interfaces for Glib Trash Stacks</TITLE>
<PARA>
No external functions are defined for libglib-2.0 - Glib Trash Stacks
in this part of the specification. See also the relevant architecture specific part of this specification.
</PARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Glib Unicode Manipulation -->
<SECT2>
<!--libgroup-->
<TITLE>Glib Unicode Manipulation</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Interfaces for Glib Unicode Manipulation</TITLE>
<PARA>
No external functions are defined for libglib-2.0 - Glib Unicode Manipulation
in this part of the specification. See also the relevant architecture specific part of this specification.
</PARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Glib Version Information -->
<SECT2>
<!--libgroup-->
<TITLE>Glib Version Information</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Interfaces for Glib Version Information</TITLE>
<PARA>
No external functions are defined for libglib-2.0 - Glib Version Information
in this part of the specification. See also the relevant architecture specific part of this specification.
</PARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Glib Bookmark File Parser -->
<SECT2>
<!--libgroup-->
<TITLE>Glib Bookmark File Parser</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Interfaces for Glib Bookmark File Parser</TITLE>
<PARA>
No external functions are defined for libglib-2.0 - Glib Bookmark File Parser
in this part of the specification. See also the relevant architecture specific part of this specification.
</PARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Glib Memory Slices -->
<SECT2>
<!--libgroup-->
<TITLE>Glib Memory Slices</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Interfaces for Glib Memory Slices</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic functions
for Glib Memory Slices specified in <XREF linkend="tbl-libglib-2.0-1-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<TABLE id="tbl-libglib-2.0-1-ints">
<TITLE>libglib-2.0 - Glib Memory Slices Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>g_slice_copy</primary></indexterm>g_slice_copy <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>
</SECT2>
<!-- debug: database interface name Glib Base64 Encoding -->
<SECT2>
<!--libgroup-->
<TITLE>Glib Base64 Encoding</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Interfaces for Glib Base64 Encoding</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic functions
for Glib Base64 Encoding specified in <XREF linkend="tbl-libglib-2.0-2-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<TABLE id="tbl-libglib-2.0-2-ints">
<TITLE>libglib-2.0 - Glib Base64 Encoding Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>g_base64_decode_inplace</primary></indexterm>g_base64_decode_inplace <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>
</SECT2>
</SECT1>
<SECT1 ID=libglib-2.0-ddefs>
<TITLE>Data Definitions for libglib-2.0</TITLE>
<PARA>
This section defines global identifiers and their values that are associated
with interfaces contained in libglib-2.0.
These definitions are organized into groups that
correspond to system headers. This convention is used as a
convenience for the reader, and does not imply the existence
of these headers, or their content.
Where an interface is defined as requiring a particular system header file
all of the data definitions for that system header file presented here shall be in effect.
</PARA>
<PARA>
This section gives data definitions to promote binary application
portability, not to repeat source interface definitions available
elsewhere. System providers and application developers should use this ABI
to supplement - not to replace - source interface definition specifications.
</PARA>
<PARA>
This specification uses the <XREF LINKEND='std.ISOC99'> C Language as the reference programming language, and data definitions are specified in ISO C format. The C language is used here as a convenient notation. Using a C language description of these data objects does not preclude their use by other programming languages.</PARA>
<SECT2>
<TITLE>glib-2.0/glib.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define GLIB_HAVE_ALLOCA_H
#define GLIB_HAVE_SYS_POLL_H
#ifdef __cplusplus
# define G_BEGIN_DECLS  extern "C" {
#else
# define G_BEGIN_DECLS
#endif
#ifdef __cplusplus
# define G_END_DECLS  }
#else
# define G_END_DECLS
#endif
#define G_GINT32_MODIFIER	""
#define G_GNUC_FUNCTION	""	/* DEPRECATED */
#define G_GNUC_PRETTY_FUNCTION	""	/* DEPRECATED */
#define G_OPTION_REMAINING	""
#define G_OS_UNIX
#define G_THREADS_ENABLED
#define G_THREADS_IMPL_POSIX	/* DEPRECATED */
#define G_WIN32_DLLMAIN_FOR_DLL_NAME(static,dll_name)
#define G_CSET_LATINC	 \
	"\300\301\302\303\304\305\306" \
	"\307\310\311\312\313\314\315\316\317\320" "\321\322\323\324\325\326" \
	"\330\331\332\333\334\335\336"
#define G_CSET_LATINS	 \
	"\337\340\341\342\343\344\345\346" \
	"\347\350\351\352\353\354\355\356\357\360" "\361\362\363\364\365\366" \
	"\370\371\372\373\374\375\376\377"
#define g_mem_chunk_create(type,pre_alloc,alloc_type)	 \
	( g_mem_chunk_new (#type " mem chunks (" #pre_alloc ")", sizeof \
	(type), sizeof (type) * (pre_alloc), (alloc_type)) )
#define G_NODE_IS_ROOT(node)	 \
	(((GNode*) (node))->parent == NULL &amp;&amp; ((GNode*) (node))->prev == NULL \
	&amp;&amp; ((GNode*) (node))->next == NULL)
#define g_once(once,func,arg)	 \
	(((once)->status == G_ONCE_STATUS_READY) ? (once)->retval : \
	g_once_impl ((once), (func), (arg)))
#define CLAMP(x,low,high)	 \
	(((x) > (high)) ? (high) : (((x) &lt; (low)) ? (low) : (x)))
#define G_STRUCT_OFFSET(struct_type,member)	 \
	((glong) ((guint8*) &amp;((struct_type*) 0)->member))
#define G_STRUCT_MEMBER_P(struct_p,struct_offset)	 \
	((gpointer) ((guint8*) (struct_p) + (glong) (struct_offset)))
#define GUINT16_SWAP_LE_BE_CONSTANT(val)	 \
	((guint16) ( (guint16) ((guint16) (val) >> 8) | (guint16) ((guint16) \
	(val) &lt;&lt; 8)))
#define GUINT32_SWAP_LE_BE_CONSTANT(val)	 \
	((guint32) ( (((guint32) (val) &amp; (guint32) 0x000000ffU) &lt;&lt; 24) | \
	(((guint32) (val) &amp; (guint32) 0x0000ff00U) &lt;&lt; 8) | (((guint32) (val) &amp; \
	(guint32) 0x00ff0000U) >> 8) | (((guint32) (val) &amp; (guint32) \
	0xff000000U) >> 24)))
#define GUINT32_SWAP_LE_PDP(val)	 \
	((guint32) ( (((guint32) (val) &amp; (guint32) 0x0000ffffU) &lt;&lt; 16) | \
	(((guint32) (val) &amp; (guint32) 0xffff0000U) >> 16)))
#define GUINT32_SWAP_BE_PDP(val)	 \
	((guint32) ( (((guint32) (val) &amp; (guint32) 0x00ff00ffU) &lt;&lt; 8) | \
	(((guint32) (val) &amp; (guint32) 0xff00ff00U) >> 8)))
#define GUINT64_SWAP_LE_BE_CONSTANT(val)	 \
	((guint64) ( (((guint64) (val) &amp; (guint64) G_GINT64_CONSTANT \
	(0x00000000000000ffU)) &lt;&lt; 56) | (((guint64) (val) &amp; (guint64) \
	G_GINT64_CONSTANT (0x000000000000ff00U)) &lt;&lt; 40) | (((guint64) (val) &amp; \
	(guint64) G_GINT64_CONSTANT (0x0000000000ff0000U)) &lt;&lt; 24) | \
	(((guint64) (val) &amp; (guint64) G_GINT64_CONSTANT (0x00000000ff000000U)) \
	&lt;&lt; 8) | (((guint64) (val) &amp; (guint64) G_GINT64_CONSTANT \
	(0x000000ff00000000U)) >> 8) | (((guint64) (val) &amp; (guint64) \
	G_GINT64_CONSTANT (0x0000ff0000000000U)) >> 24) | (((guint64) (val) &amp; \
	(guint64) G_GINT64_CONSTANT (0x00ff000000000000U)) >> 40) | \
	(((guint64) (val) &amp; (guint64) G_GINT64_CONSTANT (0xff00000000000000U)) \
	>> 56)))
#define g_ascii_isalnum(c)	 \
	((g_ascii_table[(guchar) (c)] &amp; G_ASCII_ALNUM) != 0)
#define g_ascii_isalpha(c)	 \
	((g_ascii_table[(guchar) (c)] &amp; G_ASCII_ALPHA) != 0)
#define g_ascii_iscntrl(c)	 \
	((g_ascii_table[(guchar) (c)] &amp; G_ASCII_CNTRL) != 0)
#define g_ascii_isdigit(c)	 \
	((g_ascii_table[(guchar) (c)] &amp; G_ASCII_DIGIT) != 0)
#define g_ascii_isgraph(c)	 \
	((g_ascii_table[(guchar) (c)] &amp; G_ASCII_GRAPH) != 0)
#define g_ascii_islower(c)	 \
	((g_ascii_table[(guchar) (c)] &amp; G_ASCII_LOWER) != 0)
#define g_ascii_isprint(c)	 \
	((g_ascii_table[(guchar) (c)] &amp; G_ASCII_PRINT) != 0)
#define g_ascii_ispunct(c)	 \
	((g_ascii_table[(guchar) (c)] &amp; G_ASCII_PUNCT) != 0)
#define g_ascii_isspace(c)	 \
	((g_ascii_table[(guchar) (c)] &amp; G_ASCII_SPACE) != 0)
#define g_ascii_isupper(c)	 \
	((g_ascii_table[(guchar) (c)] &amp; G_ASCII_UPPER) != 0)
#define g_ascii_isxdigit(c)	 \
	((g_ascii_table[(guchar) (c)] &amp; G_ASCII_XDIGIT) != 0)
#define G_HOOK_ACTIVE(hook)	 \
	((G_HOOK_FLAGS (hook) &amp; G_HOOK_FLAG_ACTIVE) != 0)
#define G_HOOK_IN_CALL(hook)	 \
	((G_HOOK_FLAGS (hook) &amp; G_HOOK_FLAG_IN_CALL) != 0)
#define g_node_first_child(node)	 \
	((node) ? ((GNode*) (node))->children : NULL)
#define g_node_next_sibling(node)	 \
	((node) ? ((GNode*) (node))->next : NULL)
#define g_node_prev_sibling(node)	 \
	((node) ? ((GNode*) (node))->prev : NULL)
#define g_new(struct_type,n_structs)	 \
	((struct_type *) g_malloc (((gsize) sizeof (struct_type)) * ((gsize) \
	(n_structs))))
#define g_new0(struct_type,n_structs)	 \
	((struct_type *) g_malloc0 (((gsize) sizeof (struct_type)) * ((gsize) \
	(n_structs))))
#define g_renew(struct_type,mem,n_structs)	 \
	((struct_type *) g_realloc ((mem), ((gsize) sizeof (struct_type)) * \
	((gsize) (n_structs))))
#define g_newa(struct_type,n_structs)	 \
	((struct_type*) g_alloca (sizeof (struct_type) * (gsize) \
	(n_structs)))
#define G_STRUCT_MEMBER(member_type,struct_p,struct_offset)	 \
	(*(member_type*) G_STRUCT_MEMBER_P ((struct_p), (struct_offset)))
#define G_THREAD_UF(op,arglist)	 \
	(*g_thread_functions_for_glib_use . op) arglist
#define GLIB_CHECK_VERSION(major,minor,micro)	 \
	(GLIB_MAJOR_VERSION > (major) || (GLIB_MAJOR_VERSION == (major) &amp;&amp; \
	GLIB_MINOR_VERSION > (minor)) || (GLIB_MAJOR_VERSION == (major) &amp;&amp; \
	GLIB_MINOR_VERSION == (minor) &amp;&amp; GLIB_MICRO_VERSION >= (micro)))
#define g_atomic_int_dec_and_test(atomic)	 \
	(g_atomic_int_exchange_and_add ((atomic), -1) == 1)
#define g_static_mutex_get_mutex_impl_shortcut(mutex)	 \
	(g_atomic_pointer_get ((gpointer*)mutex) ? *(mutex) : \
	g_static_mutex_get_mutex_impl (mutex))
#define g_datalist_get_data(dl,k)	 \
	(g_datalist_id_get_data ((dl), g_quark_try_string (k)))
#define g_dataset_get_data(l,k)	 \
	(g_dataset_id_get_data ((l), g_quark_try_string (k)))
#define G_HOOK_IS_VALID(hook)	 \
	(G_HOOK (hook)->hook_id != 0 &amp;&amp; (G_HOOK_FLAGS (hook) &amp; \
	G_HOOK_FLAG_ACTIVE))
#define G_HOOK_IS_UNLINKED(hook)	 \
	(G_HOOK (hook)->next == NULL &amp;&amp; G_HOOK (hook)->prev == NULL &amp;&amp; G_HOOK \
	(hook)->hook_id == 0 &amp;&amp; G_HOOK (hook)->ref_count == 0)
#define g_thread_create(func,data,joinable,error)	 \
	(g_thread_create_full (func, data, 0, joinable, FALSE, \
	G_THREAD_PRIORITY_NORMAL, error))
#define G_THREAD_ECF(op,fail,mutex,type)	 \
	(g_thread_supported () ? ((type(*)(GMutex*, gulong, gchar*)) \
	(*g_thread_functions_for_glib_use . op)) (mutex, G_MUTEX_DEBUG_MAGIC, \
	G_STRLOC) : (fail))
#define G_THREAD_CF(op,fail,arg)	 \
	(g_thread_supported () ? G_THREAD_UF (op, arg) : (fail))
#define G_LOCK_DEFINE(name)	 \
	GStaticMutex G_LOCK_NAME (name) = G_STATIC_MUTEX_INIT
#define g_datalist_remove_no_notify(dl,k)	 \
	g_datalist_id_remove_no_notify ((dl), g_quark_try_string (k))
#define g_datalist_id_remove_data(dl,q)	 \
	g_datalist_id_set_data ((dl), (q), NULL)
#define g_datalist_remove_data(dl,k)	 \
	g_datalist_id_set_data ((dl), g_quark_try_string (k), NULL)
#define g_datalist_id_set_data(dl,q,d)	 \
	g_datalist_id_set_data_full ((dl), (q), (d), NULL)
#define g_datalist_set_data_full(dl,k,d,f)	 \
	g_datalist_id_set_data_full ((dl), g_quark_from_string (k), (d), (f))
#define g_datalist_set_data(dl,k,d)	 \
	g_datalist_set_data_full ((dl), (k), (d), NULL)
#define g_dataset_remove_no_notify(l,k)	 \
	g_dataset_id_remove_no_notify ((l), g_quark_try_string (k))
#define g_dataset_id_remove_data(l,k)	 \
	g_dataset_id_set_data ((l), (k), NULL)
#define g_dataset_remove_data(l,k)	 \
	g_dataset_id_set_data ((l), g_quark_try_string (k), NULL)
#define g_dataset_id_set_data(l,k,d)	 \
	g_dataset_id_set_data_full ((l), (k), (d), NULL)
#define g_dataset_set_data_full(l,k,d,f)	 \
	g_dataset_id_set_data_full ((l), g_quark_from_string (k), (d), (f))
#define g_dataset_set_data(l,k,d)	 \
	g_dataset_set_data_full ((l), (k), (d), NULL)
#define g_hook_append(hook_list,hook)	 \
	g_hook_insert_before ((hook_list), NULL, (hook))
#define g_critical(...)	 \
	g_log (G_LOG_DOMAIN, G_LOG_LEVEL_CRITICAL, __VA_ARGS__)
#define g_message(...)	 \
	g_log (G_LOG_DOMAIN, G_LOG_LEVEL_MESSAGE, __VA_ARGS__)
#define g_warning(...)	 \
	g_log (G_LOG_DOMAIN, G_LOG_LEVEL_WARNING, __VA_ARGS__)
#define g_static_mutex_lock(mutex)	 \
	g_mutex_lock (g_static_mutex_get_mutex (mutex))
#define g_static_mutex_trylock(mutex)	 \
	g_mutex_trylock (g_static_mutex_get_mutex (mutex))
#define g_static_mutex_unlock(mutex)	 \
	g_mutex_unlock (g_static_mutex_get_mutex (mutex))
#define g_node_insert_data(parent,position,data)	 \
	g_node_insert ((parent), (position), g_node_new (data))
#define g_node_insert_data_before(parent,sibling,data)	 \
	g_node_insert_before ((parent), (sibling), g_node_new (data))
#define g_node_append(parent,node)	 \
	g_node_insert_before ((parent), NULL, (node))
#define g_node_append_data(parent,data)	 \
	g_node_insert_before ((parent), NULL, g_node_new (data))
#define g_node_prepend_data(parent,data)	 \
	g_node_prepend ((parent), g_node_new (data))
#define g_chunk_free(mem,mem_chunk)	 \
	G_STMT_START { g_mem_chunk_free ((mem_chunk), (mem)); } G_STMT_END
#define g_memmove(d,s,n)	 \
	G_STMT_START { memmove ((d), (s), (n)); } G_STMT_END
#define g_assert_not_reached()	 \
	G_STMT_START{ g_assert_warning (G_LOG_DOMAIN, __FILE__, __LINE__, \
	__PRETTY_FUNCTION__, NULL); }G_STMT_END
#define g_return_val_if_reached(val)	 \
	G_STMT_START{ g_log (G_LOG_DOMAIN, G_LOG_LEVEL_CRITICAL, "file %s: \
	line %d (%s): should not be reached", __FILE__, __LINE__, \
	__PRETTY_FUNCTION__); return (val); }G_STMT_END
#define g_return_if_reached()	 \
	G_STMT_START{ g_log (G_LOG_DOMAIN, G_LOG_LEVEL_CRITICAL, "file %s: \
	line %d (%s): should not be reached", __FILE__, __LINE__, \
	__PRETTY_FUNCTION__); return; }G_STMT_END
#define g_assert(expr)	 \
	G_STMT_START{ if G_LIKELY(expr) { } else g_assert_warning \
	(G_LOG_DOMAIN, __FILE__, __LINE__, __PRETTY_FUNCTION__, #expr); \
	}G_STMT_END
#define g_return_val_if_fail(expr,val)	 \
	G_STMT_START{ if G_LIKELY(expr) { } else { g_return_if_fail_warning \
	(G_LOG_DOMAIN, __PRETTY_FUNCTION__, #expr); return (val); }; \
	}G_STMT_END
#define g_return_if_fail(expr)	 \
	G_STMT_START{ if G_LIKELY(expr) { } else { g_return_if_fail_warning \
	(G_LOG_DOMAIN, __PRETTY_FUNCTION__, #expr); return; }; }G_STMT_END
#define g_cond_broadcast(cond)	 \
	G_THREAD_CF (cond_broadcast, (void)0, (cond))
#define g_cond_timed_wait(cond,mutex,abs_time)	 \
	G_THREAD_CF (cond_timed_wait, TRUE, (cond, mutex, abs_time))
#define g_cond_wait(cond,mutex)	 \
	G_THREAD_CF (cond_wait, (void)0, (cond, mutex))
#define g_private_get(private_key)	 \
	G_THREAD_CF (private_get, ((gpointer)private_key), (private_key))
#define g_private_set(private_key,value)	 \
	G_THREAD_CF (private_set, (void) (private_key = (GPrivate*) (value)), \
	(private_key, value))
#define G_GNUC_PRINTF(format_idx,arg_idx)	 \
	__attribute__((__format__ (__printf__, format_idx, arg_idx)))
#define G_GNUC_SCANF(format_idx,arg_idx)	 \
	__attribute__((__format__ (__scanf__, format_idx, arg_idx)))
#define G_STATIC_RW_LOCK_INIT	 \
	{ G_STATIC_MUTEX_INIT, NULL, NULL, 0, FALSE, 0, 0 }
#define G_STRINGIFY_ARG(contents)	#contents
#define G_DIR_SEPARATOR	'/'
#define G_SEARCHPATH_SEPARATOR	':'
#define g_chunk_new(type,chunk)	( (type *) g_mem_chunk_alloc (chunk) )
#define g_chunk_new0(type,chunk)	( (type *) g_mem_chunk_alloc0 (chunk) )
#define MIN(a,b)	(((a) &lt; (b)) ? (a) : (b))
#define ABS(a)	(((a) &lt; 0) ? -(a) : (a))
#define MAX(a,b)	(((a) > (b)) ? (a) : (b))
#define G_NODE_IS_LEAF(node)	(((GNode*) (node))->children == NULL)
#define g_array_index(a,t,i)	(((t*) (void *) (a)->data) [(i)])
#define g_ptr_array_index(array,index_)	((array)->pdata)[index_]
#define G_IS_DIR_SEPARATOR(c)	((c) == G_DIR_SEPARATOR)
#define G_STRFUNC	((const char*) (__PRETTY_FUNCTION__))
#define G_LOG_DOMAIN	((gchar*) 0)
#define G_HOOK(hook)	((GHook*) (hook))
#define GINT_TO_BE(val)	((gint) GINT32_TO_BE (val))
#define GINT_TO_LE(val)	((gint) GINT32_TO_LE (val))
#define GINT16_TO_LE(val)	((gint16) (val))
#define G_MAXINT16	((gint16) 0x7fff)
#define G_MININT16	((gint16) 0x8000)
#define GINT16_TO_BE(val)	((gint16) GUINT16_SWAP_LE_BE (val))
#define GINT32_TO_LE(val)	((gint32) (val))
#define G_MAXINT32	((gint32) 0x7fffffff)
#define G_MININT32	((gint32) 0x80000000)
#define GINT32_TO_BE(val)	((gint32) GUINT32_SWAP_LE_BE (val))
#define GINT64_TO_LE(val)	((gint64) (val))
#define GINT64_TO_BE(val)	((gint64) GUINT64_SWAP_LE_BE (val))
#define G_MAXINT8	((gint8) 0x7f)
#define G_MININT8	((gint8) 0x80)
#define GSIZE_TO_POINTER(s)	((gpointer) (gsize) (s))
#define GPOINTER_TO_SIZE(p)	((gsize) (p))
#define GUINT_TO_BE(val)	((guint) GUINT32_TO_BE (val))
#define GUINT_TO_LE(val)	((guint) GUINT32_TO_LE (val))
#define GUINT16_SWAP_LE_PDP(val)	((guint16) (val))
#define GUINT16_TO_LE(val)	((guint16) (val))
#define G_MAXUINT16	((guint16) 0xffff)
#define GUINT32_TO_LE(val)	((guint32) (val))
#define G_MAXUINT32	((guint32) 0xffffffff)
#define GUINT64_TO_LE(val)	((guint64) (val))
#define G_MAXUINT8	((guint8) 0xff)
#define g_random_boolean()	((g_random_int () &amp; (1 &lt;&lt; 15)) != 0)
#define g_rand_boolean(rand_)	((g_rand_int (rand_) &amp; (1 &lt;&lt; 15)) != 0)
#define g_list_next(list)	((list) ? (((GList *)(list))->next) : NULL)
#define g_list_previous(list)	((list) ? (((GList *)(list))->prev) : NULL)
#define g_slist_next(slist)	((slist) ? (((GSList *)(slist))->next) : NULL)
#define g_atomic_int_set(atomic, newval)	((void) (*(atomic) = (newval)))
#define g_atomic_pointer_set(atomic, newval)	((void) (*(atomic) = (newval)))
#define g_atomic_int_get(atomic)	(*(atomic))
#define g_atomic_pointer_get(atomic)	(*(atomic))
#define G_LOG_2_BASE_10	(0.30102999566398119521)
#define G_ALLOCATOR_LIST	(1)
#define G_IEEE754_DOUBLE_BIAS	(1023)
#define G_IEEE754_FLOAT_BIAS	(127)
#define G_ALLOCATOR_SLIST	(2)
#define G_ASCII_DTOSTR_BUF_SIZE	(29 + 10)
#define G_ALLOCATOR_NODE	(3)
#define G_HOOK_FLAG_USER_SHIFT	(4)
#define G_LOG_LEVEL_USER_SHIFT	(8)
#define g_ATEXIT(proc)	(atexit (proc))
#define g_utf8_next_char(p)	(char *)((p) + g_utf8_skip[*(const guchar *)(p)])
#define G_LIKELY(expr)	(expr)
#define G_UNLIKELY(expr)	(expr)
#define GINT16_FROM_BE(val)	(GINT16_TO_BE (val))
#define GINT16_FROM_LE(val)	(GINT16_TO_LE (val))
#define GINT32_FROM_BE(val)	(GINT32_TO_BE (val))
#define GINT32_FROM_LE(val)	(GINT32_TO_LE (val))
#define GINT64_FROM_BE(val)	(GINT64_TO_BE (val))
#define GINT64_FROM_LE(val)	(GINT64_TO_LE (val))
#define GINT_FROM_BE(val)	(GINT_TO_BE (val))
#define GINT_FROM_LE(val)	(GINT_TO_LE (val))
#define GLONG_FROM_BE(val)	(GLONG_TO_BE (val))
#define GLONG_FROM_LE(val)	(GLONG_TO_LE (val))
#define g_ntohs(val)	(GUINT16_FROM_BE (val))
#define GUINT16_SWAP_BE_PDP(val)	(GUINT16_SWAP_LE_BE (val))
#define GUINT16_TO_BE(val)	(GUINT16_SWAP_LE_BE (val))
#define GUINT16_SWAP_LE_BE(val)	(GUINT16_SWAP_LE_BE_CONSTANT (val))
#define GUINT16_FROM_BE(val)	(GUINT16_TO_BE (val))
#define g_htons(val)	(GUINT16_TO_BE (val))
#define GUINT16_FROM_LE(val)	(GUINT16_TO_LE (val))
#define g_ntohl(val)	(GUINT32_FROM_BE (val))
#define GUINT32_TO_BE(val)	(GUINT32_SWAP_LE_BE (val))
#define GUINT32_SWAP_LE_BE(val)	(GUINT32_SWAP_LE_BE_CONSTANT (val))
#define GUINT32_FROM_BE(val)	(GUINT32_TO_BE (val))
#define g_htonl(val)	(GUINT32_TO_BE (val))
#define GUINT32_FROM_LE(val)	(GUINT32_TO_LE (val))
#define GUINT64_TO_BE(val)	(GUINT64_SWAP_LE_BE (val))
#define GUINT64_SWAP_LE_BE(val)	(GUINT64_SWAP_LE_BE_CONSTANT (val))
#define GUINT64_FROM_BE(val)	(GUINT64_TO_BE (val))
#define GUINT64_FROM_LE(val)	(GUINT64_TO_LE (val))
#define GUINT_FROM_BE(val)	(GUINT_TO_BE (val))
#define GUINT_FROM_LE(val)	(GUINT_TO_LE (val))
#define GULONG_FROM_BE(val)	(GULONG_TO_BE (val))
#define GULONG_FROM_LE(val)	(GULONG_TO_LE (val))
#define g_atomic_int_inc(atomic)	(g_atomic_int_add ((atomic), 1))
#define G_HOOK_FLAGS(hook)	(G_HOOK (hook)->flags)
#define G_LOG_FATAL_MASK	(G_LOG_FLAG_RECURSION | G_LOG_LEVEL_ERROR)
#define G_OPTION_ERROR	(g_option_error_quark ())
#define g_thread_supported()	(g_threads_got_initialized)
#define G_N_ELEMENTS(arr)	(sizeof (arr) / sizeof ((arr)[0]))
#define G_STMT_START	(void) __extension__ (
#define G_STMT_END	)
#define G_PRIORITY_HIGH	-100
#define G_DIR_SEPARATOR_S	"/"
#define G_HAVE_GROWING_STACK	0
#define G_PRIORITY_DEFAULT	0
#define G_LN2	0.69314718055994530941723212145817656807550013436026
#define G_PI_4	0.78539816339744830961566084581987572104929234984378
#define G_CSET_DIGITS	"0123456789"
#define G_DATE_BAD_DAY	0U
#define G_DATE_BAD_JULIAN	0U
#define G_DATE_BAD_YEAR	0U
#define G_MUTEX_DEBUG_MAGIC	0xf8e18ad7
#define GLIB_MICRO_VERSION	1
#define G_ALLOC_ONLY	1
#define G_CAN_INLINE	1
#define G_HAVE_GINT64	1
#define G_HAVE_GNUC_VARARGS	1
#define G_HAVE_GNUC_VISIBILITY	1
#define G_HAVE_INLINE	1
#define G_HAVE_ISO_VARARGS	1
#define G_HAVE___INLINE	1
#define G_HAVE___INLINE__	1
#define G_SQRT2	1.4142135623730950488016887242096980785696718753769
#define G_PI_2	1.5707963267948966192313216916397514420985846996876
#define G_PRIORITY_HIGH_IDLE	100
#define G_USEC_PER_SEC	1000000
#define G_LITTLE_ENDIAN	1234
#define GLIB_MAJOR_VERSION	2
#define G_ALLOC_AND_FREE	2
#define G_LN10	2.3025850929940456840179914546843642076011014886288
#define G_E	2.7182818284590452353602874713526624977572470937000
#define G_PRIORITY_DEFAULT_IDLE	200
#define G_PI	3.1415926535897932384626433832795028841971693993751
#define G_PRIORITY_LOW	300
#define GLIB_MINOR_VERSION	32
#define G_PDP_ENDIAN	3412
#define G_BIG_ENDIAN	4321
#define G_SEARCHPATH_SEPARATOR_S	":"
#define GLIB_SYSDEF_POLLIN	=1
#define GLIB_SYSDEF_POLLHUP	=16
#define GLIB_SYSDEF_POLLPRI	=2
#define GLIB_SYSDEF_POLLNVAL	=32
#define GLIB_SYSDEF_POLLOUT	=4
#define GLIB_SYSDEF_POLLERR	=8
#define G_CSET_A_2_Z	"ABCDEFGHIJKLMNOPQRSTUVWXYZ"
#define G_CSET_a_2_z	"abcdefghijklmnopqrstuvwxyz"
#define g_alloca(size)	alloca (size)
#define G_CONST_RETURN	const	/* DEPRECATED */
#define G_MAXDOUBLE	DBL_MAX
#define G_MINDOUBLE	DBL_MIN
#define GLIB_VAR	extern
#define G_LOCK_EXTERN(name)	extern GStaticMutex G_LOCK_NAME (name)
#define G_INLINE_FUNC	extern inline
#define G_MAXFLOAT	FLT_MAX
#define G_MINFLOAT	FLT_MIN
#define G_MEM_ALIGN	GLIB_SIZEOF_LONG
#define g_array_append_val(a,v)	g_array_append_vals (a, &amp;(v), 1)
#define g_array_insert_val(a,i,v)	g_array_insert_vals (a, i, &amp;(v), 1)
#define g_array_prepend_val(a,v)	g_array_prepend_vals (a, &amp;(v), 1)
#define ATEXIT(proc)	g_ATEXIT(proc)
#define G_CONVERT_ERROR	g_convert_error_quark()
#define g_date_day	g_date_get_day
#define g_date_days_in_month	g_date_get_days_in_month
#define g_date_day_of_year	g_date_get_day_of_year
#define g_date_julian	g_date_get_julian
#define g_date_monday_weeks_in_year	g_date_get_monday_weeks_in_year
#define g_date_monday_week_of_year	g_date_get_monday_week_of_year
#define g_date_month	g_date_get_month
#define g_date_sunday_weeks_in_year	g_date_get_sunday_weeks_in_year
#define g_date_sunday_week_of_year	g_date_get_sunday_week_of_year
#define g_date_weekday	g_date_get_weekday
#define g_date_year	g_date_get_year
#define G_FILE_ERROR	g_file_error_quark ()
#define G_MAXINT64	G_GINT64_CONSTANT(0x7fffffffffffffff)
#define G_MININT64	G_GINT64_CONSTANT(0x8000000000000000)
#define G_MAXUINT64	G_GINT64_CONSTANT(0xffffffffffffffffU)
#define G_IO_CHANNEL_ERROR	g_io_channel_error_quark()
#define G_KEY_FILE_ERROR	g_key_file_error_quark()
#define g_debug(...)	g_log (G_LOG_DOMAIN, G_LOG_LEVEL_DEBUG, __VA_ARGS__)
#define g_error(...)	g_log (G_LOG_DOMAIN, G_LOG_LEVEL_ERROR, __VA_ARGS__)
#define G_MARKUP_ERROR	g_markup_error_quark ()
#define G_SHELL_ERROR	g_shell_error_quark ()
#define G_SPAWN_ERROR	g_spawn_error_quark ()
#define g_static_mutex_get_mutex(mutex)	g_static_mutex_get_mutex_impl
#define G_LOCK(name)	g_static_mutex_lock (&amp;G_LOCK_NAME (name))
#define G_TRYLOCK(name)	g_static_mutex_trylock (&amp;G_LOCK_NAME (name))
#define G_UNLOCK(name)	g_static_mutex_unlock (&amp;G_LOCK_NAME (name))
#define g_strstrip(string)	g_strchomp (g_strchug (string))
#define G_STRINGIFY(macro_or_string)	G_STRINGIFY_ARG (macro_or_string)
#define g_cond_free(cond)	G_THREAD_CF (cond_free, (void)0, (cond))
#define g_cond_signal(cond)	G_THREAD_CF (cond_signal, (void)0, (cond))
#define g_mutex_free(mutex)	G_THREAD_CF (mutex_free, (void)0, (mutex))
#define g_mutex_lock(mutex)	G_THREAD_CF (mutex_lock, (void)0, (mutex))
#define g_mutex_trylock(mutex)	G_THREAD_CF (mutex_trylock, TRUE, (mutex))
#define g_mutex_unlock(mutex)	G_THREAD_CF (mutex_unlock, (void)0, (mutex))
#define g_thread_yield()	G_THREAD_CF (thread_yield, (void)0, ())
#define G_THREAD_ERROR	g_thread_error_quark ()
#define g_cond_new()	G_THREAD_UF (cond_new, ())
#define g_mutex_new()	G_THREAD_UF (mutex_new, ())
#define g_private_new(destructor)	G_THREAD_UF (private_new, (destructor))
#define G_LOCK_NAME(name)	g__ ## name ## _lock
#define G_GINT16_MODIFIER	"h"
#define G_GINT16_FORMAT	"hi"
#define G_GUINT16_FORMAT	"hu"
#define G_GINT32_FORMAT	"i"
#define G_MAXINT	INT_MAX
#define G_MININT	INT_MIN
#define G_MAXLONG	LONG_MAX
#define G_MINLONG	LONG_MIN
#define G_MAXSHORT	SHRT_MAX
#define G_MINSHORT	SHRT_MIN
#define G_MODULE_SUFFIX	"so"
#define G_LOCK_DEFINE_STATIC(name)	static G_LOCK_DEFINE (name)
#define G_GUINT32_FORMAT	"u"
#define G_MAXUINT	UINT_MAX
#define G_MAXULONG	ULONG_MAX
#define G_MAXUSHORT	USHRT_MAX
#define G_VA_COPY	va_copy
#define G_STR_DELIMITERS	"_-|> &lt;."
#define G_GNUC_INTERNAL	__attribute__((visibility("hidden")))
#define G_GNUC_CONST	__attribute__((__const__))
#define G_GNUC_DEPRECATED	__attribute__((__deprecated__))
#define G_GNUC_FORMAT(arg_idx)	__attribute__((__format_arg__ (arg_idx)))
#define G_GNUC_MALLOC	__attribute__((__malloc__))
#define G_GNUC_NORETURN	__attribute__((__noreturn__))
#define G_GNUC_NO_INSTRUMENT	__attribute__((__no_instrument_function__))
#define G_GNUC_PURE	__attribute__((__pure__))
#define G_GNUC_UNUSED	__attribute__((__unused__))
#define alloca(size)	__builtin_alloca (size)
#define G_GNUC_EXTENSION	__extension__
#define G_STRLOC	__FILE__ ":" G_STRINGIFY (__LINE__)
#define G_STATIC_PRIVATE_INIT	{ 0 }
#define G_ONCE_INIT	{ G_ONCE_STATUS_NOTCALLED, NULL }
#define G_STATIC_REC_MUTEX_INIT	{ G_STATIC_MUTEX_INIT }
#define G_STATIC_MUTEX_INIT	{ NULL }

typedef float gfloat;
typedef gint64 goffset;

#define __G_BOOKMARK_FILE_H__
#define __G_SLICE_H__
#define g_slice_new(type)	((type*) g_slice_alloc (sizeof (type)))
#define g_slice_new0(type)	((type*) g_slice_alloc0 (sizeof (type)))
#define g_slice_dup(type,mem)	(1 ? (type*) g_slice_copy (sizeof (type), (mem)) : ((void) ((type*) 0 == (mem)), (type*) 0))
#define G_BOOKMARK_FILE_ERROR	(g_bookmark_file_error_quark ())
#define g_slice_free(type,mem)	do { if (1) g_slice_free1 (sizeof (type), (mem)); else (void) ((type*) 0 == (mem)); } while (0)
#define g_slice_free_chain(type,mem_chain,next)	do { if (1) g_slice_free_chain_with_offset (sizeof (type), (mem_chain), G_STRUCT_OFFSET (type, next)); else (void) ((type*) 0 == (mem_chain)); } while (0)

typedef short unsigned int guint16;
typedef int gint;
typedef gint gboolean;
typedef unsigned int guint;
typedef void *gpointer;
typedef gpointer(*GThreadFunc) (gpointer);
typedef enum {
    G_THREAD_PRIORITY_LOW = 0,
    G_THREAD_PRIORITY_NORMAL = 1,
    G_THREAD_PRIORITY_HIGH = 2,
    G_THREAD_PRIORITY_URGENT = 3
} GThreadPriority;
typedef struct _GThread {
    GThreadFunc func;
    gpointer data;
    gboolean joinable;
    GThreadPriority priority;
} GThread;
typedef unsigned int guint32;
typedef guint32 GQuark;
typedef char gchar;
typedef struct _GError {
    GQuark domain;
    gint code;
    gchar *message;
} GError;
typedef void (*GPrintFunc) (const gchar *);
typedef struct _GMemChunk GMemChunk;
typedef long unsigned int gulong;
typedef struct _GList {
    gpointer data;
    GList *next;
    GList *prev;
} GList;
typedef struct _GMainLoop GMainLoop;
typedef struct _GHook {
    gpointer data;
    GHook *next;
    GHook *prev;
    guint ref_count;
    gulong hook_id;
    guint flags;
    gpointer func;
    GDestroyNotify destroy;
} GHook;
typedef void (*GDestroyNotify) (gpointer);
typedef struct _GHookList {
    gulong seq_id;
    guint hook_size:16;
    guint is_setup:1;
    GHook *hooks;
    gpointer dummy3;
    GHookFinalizeFunc finalize_hook;
    gpointer dummy[2];
} GHookList;
typedef void (*GHookFinalizeFunc) (GHookList *, GHook *);
typedef struct _GQueue {
    GList *head;
    GList *tail;
    guint length;
} GQueue;
typedef struct _GSList {
    gpointer data;
    GSList *next;
} GSList;
typedef struct _GString {
    gchar *str;
    gsize len;
    gsize allocated_len;
} GString;
typedef struct _GPtrArray {
    gpointer *pdata;
    guint len;
} GPtrArray;
typedef struct _GRand GRand;
typedef struct _GDir GDir;
typedef struct _GRelation GRelation;
typedef struct _GOptionContext GOptionContext;
typedef struct _GKeyFile GKeyFile;
typedef struct _GPatternSpec GPatternSpec;
typedef guint32 gunichar;
typedef gchar *(*GCompletionFunc) (gpointer);
typedef gint(*GCompletionStrncmpFunc) (const gchar *, const gchar *,
				       gsize);
typedef struct _GCompletion {
    GList *items;
    GCompletionFunc func;
    gchar *prefix;
    GList *cache;
    GCompletionStrncmpFunc strncmp_func;
} GCompletion;
typedef struct _GTimer GTimer;
typedef struct _GHashTable GHashTable;
typedef const void *gconstpointer;
typedef guint(*GHashFunc) (gconstpointer);
typedef gboolean(*GEqualFunc) (gconstpointer, gconstpointer);
typedef union _GMutex {
    gpointer p;
    guint i[2];
} GMutex;
typedef union _GSystemThread {
    char data[GLIB_LSB_DATA_SIZE];
    double dummy_double;
    void *dummy_pointer;
    long int dummy_long;
} GSystemThread;
typedef struct _GMarkupParseContext GMarkupParseContext;
typedef struct _GData GData;
typedef enum {
    G_IO_STATUS_ERROR = 0,
    G_IO_STATUS_NORMAL = 1,
    G_IO_STATUS_EOF = 2,
    G_IO_STATUS_AGAIN = 3
} GIOStatus;
typedef struct _GIOChannel {
    guint ref_count;
    GIOFuncs *funcs;
    gchar *encoding;
    GIConv read_cd;
    GIConv write_cd;
    gchar *line_term;
    guint line_term_len;
    gsize buf_size;
    GString *read_buf;
    GString *encoded_read_buf;
    GString *write_buf;
    gchar partial_write_buf[6];
    guint use_buffer:1;
    guint do_encode:1;
    guint close_on_unref:1;
    guint is_readable:1;
    guint is_writeable:1;
    guint is_seekable:1;
    gpointer reserved1;
    gpointer reserved2;
} GIOChannel;
typedef enum {
    G_SEEK_CUR = 0,
    G_SEEK_SET = 1,
    G_SEEK_END = 2
} GSeekType;
typedef struct _GSource {
    gpointer callback_data;
    GSourceCallbackFuncs *callback_funcs;
    GSourceFuncs *source_funcs;
    guint ref_count;
    GMainContext *context;
    gint priority;
    guint flags;
    guint source_id;
    GSList *poll_fds;
    GSource *prev;
    GSource *next;
    char *name;
    GSourcePrivate *priv;
} GSource;
typedef gboolean(*GSourceFunc) (gpointer);
typedef struct _GSourceCallbackFuncs {
    void (*ref) (gpointer);
    void (*unref) (gpointer);
    void (*get) (gpointer, GSource *, GSourceFunc *, gpointer *);
} GSourceCallbackFuncs;
typedef void (*GSourceDummyMarshal) (void);
typedef struct _GSourceFuncs {
    gboolean(*prepare) (GSource *, gint *);
    gboolean(*check) (GSource *);
    gboolean(*dispatch) (GSource *, GSourceFunc, gpointer);
    void (*finalize) (GSource *);
    GSourceFunc closure_callback;
    GSourceDummyMarshal closure_marshal;
} GSourceFuncs;
typedef struct _GMainContext GMainContext;
typedef enum {
    G_IO_IN = 1,
    G_IO_OUT = 4,
    G_IO_PRI = 2,
    G_IO_ERR = 8,
    G_IO_HUP = 16,
    G_IO_NVAL = 32
} GIOCondition;
typedef enum {
    G_IO_FLAG_APPEND = 1,
    G_IO_FLAG_NONBLOCK = 2,
    G_IO_FLAG_IS_READABLE = 4,
    G_IO_FLAG_IS_WRITEABLE = 8,
    G_IO_FLAG_IS_SEEKABLE = 16,
    G_IO_FLAG_MASK = 31,
    G_IO_FLAG_GET_MASK = 31,
    G_IO_FLAG_SET_MASK = 3
} GIOFlags;
typedef struct _GIOFuncs {
    GIOStatus(*io_read) (GIOChannel *, gchar *, gsize, gsize *,
			 GError * *);
    GIOStatus(*io_write) (GIOChannel *, const gchar *, gsize, gsize *,
			  GError * *);
    GIOStatus(*io_seek) (GIOChannel *, gint64, GSeekType, GError * *);
    GIOStatus(*io_close) (GIOChannel *, GError * *);
    GSource *(*io_create_watch) (GIOChannel *, GIOCondition);
    void (*io_free) (GIOChannel *);
     GIOStatus(*io_set_flags) (GIOChannel *, GIOFlags, GError * *);
     GIOFlags(*io_get_flags) (GIOChannel *);
} GIOFuncs;
typedef struct _GIConv *GIConv;
typedef struct _GOptionGroup GOptionGroup;
typedef enum {
    G_SPAWN_LEAVE_DESCRIPTORS_OPEN = 1,
    G_SPAWN_DO_NOT_REAP_CHILD = 2,
    G_SPAWN_SEARCH_PATH = 4,
    G_SPAWN_STDOUT_TO_DEV_NULL = 8,
    G_SPAWN_STDERR_TO_DEV_NULL = 16,
    G_SPAWN_CHILD_INHERITS_STDIN = 32,
    G_SPAWN_FILE_AND_ARGV_ZERO = 64
} GSpawnFlags;
typedef void (*GSpawnChildSetupFunc) (gpointer);
typedef int GPid;
typedef void (*GFunc) (gpointer, gpointer);
typedef struct _GThreadPool {
    GFunc func;
    gpointer user_data;
    gboolean exclusive;
} GThreadPool;
typedef struct _GDate {
    guint julian_days:32;
    guint julian:1;
    guint dmy:1;
    guint day:6;
    guint month:4;
    guint year:16;
} GDate;
typedef enum {
    G_DATE_BAD_MONTH = 0,
    G_DATE_JANUARY = 1,
    G_DATE_FEBRUARY = 2,
    G_DATE_MARCH = 3,
    G_DATE_APRIL = 4,
    G_DATE_MAY = 5,
    G_DATE_JUNE = 6,
    G_DATE_JULY = 7,
    G_DATE_AUGUST = 8,
    G_DATE_SEPTEMBER = 9,
    G_DATE_OCTOBER = 10,
    G_DATE_NOVEMBER = 11,
    G_DATE_DECEMBER = 12
} GDateMonth;
typedef struct _GAsyncQueue GAsyncQueue;
typedef short unsigned int gushort;
typedef struct _GPollFD {
    gint fd;
    gushort events;
    gushort revents;
} GPollFD;
typedef double gdouble;
typedef struct _GTree GTree;
typedef gint(*GCompareDataFunc) (gconstpointer, gconstpointer, gpointer);
typedef unsigned char guint8;
typedef guint16 GDateYear;
typedef struct _GCache GCache;
typedef void (*GHFunc) (gpointer, gpointer, gpointer);
typedef struct _GScannerConfig {
    gchar *cset_skip_characters;
    gchar *cset_identifier_first;
    gchar *cset_identifier_nth;
    gchar *cpair_comment_single;
    guint case_sensitive:1;
    guint skip_comment_multi:1;
    guint skip_comment_single:1;
    guint scan_comment_multi:1;
    guint scan_identifier:1;
    guint scan_identifier_1char:1;
    guint scan_identifier_NULL:1;
    guint scan_symbols:1;
    guint scan_binary:1;
    guint scan_octal:1;
    guint scan_float:1;
    guint scan_hex:1;
    guint scan_hex_dollar:1;
    guint scan_string_sq:1;
    guint scan_string_dq:1;
    guint numbers_2_int:1;
    guint int_2_float:1;
    guint identifier_2_string:1;
    guint char_2_token:1;
    guint symbol_2_token:1;
    guint scope_0_fallback:1;
    guint store_int64:1;
    guint padding_dummy;
} GScannerConfig;
typedef enum {
    G_TOKEN_EOF = 0,
    G_TOKEN_LEFT_PAREN = 40,
    G_TOKEN_RIGHT_PAREN = 41,
    G_TOKEN_LEFT_CURLY = 123,
    G_TOKEN_RIGHT_CURLY = 125,
    G_TOKEN_LEFT_BRACE = 91,
    G_TOKEN_RIGHT_BRACE = 93,
    G_TOKEN_EQUAL_SIGN = 61,
    G_TOKEN_COMMA = 44,
    G_TOKEN_NONE = 256,
    G_TOKEN_ERROR = 257,
    G_TOKEN_CHAR = 258,
    G_TOKEN_BINARY = 259,
    G_TOKEN_OCTAL = 260,
    G_TOKEN_INT = 261,
    G_TOKEN_HEX = 262,
    G_TOKEN_FLOAT = 263,
    G_TOKEN_STRING = 264,
    G_TOKEN_SYMBOL = 265,
    G_TOKEN_IDENTIFIER = 266,
    G_TOKEN_IDENTIFIER_NULL = 267,
    G_TOKEN_COMMENT_SINGLE = 268,
    G_TOKEN_COMMENT_MULTI = 269,
    G_TOKEN_LAST = 270
} GTokenType;
typedef unsigned char guchar;
typedef union _GTokenValue {
    gpointer v_symbol;
    gchar *v_identifier;
    gulong v_binary;
    gulong v_octal;
    gulong v_int;
    guint64 v_int64;
    gdouble v_float;
    gulong v_hex;
    gchar *v_string;
    gchar *v_comment;
    guchar v_char;
    guint v_error;
} GTokenValue;
typedef struct _GScanner {
    gpointer user_data;
    guint max_parse_errors;
    guint parse_errors;
    const gchar *input_name;
    GData *qdata;
    GScannerConfig *config;
    GTokenType token;
    GTokenValue value;
    guint line;
    guint position;
    GTokenType next_token;
    GTokenValue next_value;
    guint next_line;
    guint next_position;
    GHashTable *symbol_table;
    gint input_fd;
    const gchar *text;
    const gchar *text_end;
    gchar *buffer;
    guint scope_id;
    GScannerMsgFunc msg_handler;
} GScanner;
typedef void (*GScannerMsgFunc) (GScanner *, gchar *, gboolean);
typedef struct _GByteArray {
    guint8 *data;
    guint len;
} GByteArray;
typedef enum {
    G_KEY_FILE_NONE = 0,
    G_KEY_FILE_KEEP_COMMENTS = 1,
    G_KEY_FILE_KEEP_TRANSLATIONS = 2
} GKeyFileFlags;
typedef struct _GTrashStack {
    GTrashStack *next;
} GTrashStack;
typedef guint16 gunichar2;
typedef long int glong;
typedef struct _GArray {
    gchar *data;
    guint len;
} GArray;
typedef struct _GNode {
    gpointer data;
    GNode *next;
    GNode *prev;
    GNode *parent;
    GNode *children;
} GNode;
typedef gboolean(*GHRFunc) (gpointer, gpointer, gpointer);
typedef gint(*GCompareFunc) (gconstpointer, gconstpointer);
typedef int gint32;
typedef gint32 GTime;
typedef gint(*GPollFunc) (GPollFD *, guint, gint);
typedef guint8 GDateDay;
typedef enum {
    G_UNICODE_BREAK_MANDATORY = 0,
    G_UNICODE_BREAK_CARRIAGE_RETURN = 1,
    G_UNICODE_BREAK_LINE_FEED = 2,
    G_UNICODE_BREAK_COMBINING_MARK = 3,
    G_UNICODE_BREAK_SURROGATE = 4,
    G_UNICODE_BREAK_ZERO_WIDTH_SPACE = 5,
    G_UNICODE_BREAK_INSEPARABLE = 6,
    G_UNICODE_BREAK_NON_BREAKING_GLUE = 7,
    G_UNICODE_BREAK_CONTINGENT = 8,
    G_UNICODE_BREAK_SPACE = 9,
    G_UNICODE_BREAK_AFTER = 10,
    G_UNICODE_BREAK_BEFORE = 11,
    G_UNICODE_BREAK_BEFORE_AND_AFTER = 12,
    G_UNICODE_BREAK_HYPHEN = 13,
    G_UNICODE_BREAK_NON_STARTER = 14,
    G_UNICODE_BREAK_OPEN_PUNCTUATION = 15,
    G_UNICODE_BREAK_CLOSE_PUNCTUATION = 16,
    G_UNICODE_BREAK_QUOTATION = 17,
    G_UNICODE_BREAK_EXCLAMATION = 18,
    G_UNICODE_BREAK_IDEOGRAPHIC = 19,
    G_UNICODE_BREAK_NUMERIC = 20,
    G_UNICODE_BREAK_INFIX_SEPARATOR = 21,
    G_UNICODE_BREAK_SYMBOL = 22,
    G_UNICODE_BREAK_ALPHABETIC = 23,
    G_UNICODE_BREAK_PREFIX = 24,
    G_UNICODE_BREAK_POSTFIX = 25,
    G_UNICODE_BREAK_COMPLEX_CONTEXT = 26,
    G_UNICODE_BREAK_AMBIGUOUS = 27,
    G_UNICODE_BREAK_UNKNOWN = 28,
    G_UNICODE_BREAK_NEXT_LINE = 29,
    G_UNICODE_BREAK_WORD_JOINER = 30
} GUnicodeBreakType;
typedef struct _GStringChunk GStringChunk;
typedef struct _GCond GCond;
typedef void (*GChildWatchFunc) (GPid, gint, gpointer);
typedef struct _GTimeVal {
    glong tv_sec;
    glong tv_usec;
} GTimeVal;
typedef enum {
    G_LOG_FLAG_RECURSION = 1,
    G_LOG_FLAG_FATAL = 2,
    G_LOG_LEVEL_ERROR = 4,
    G_LOG_LEVEL_CRITICAL = 8,
    G_LOG_LEVEL_WARNING = 16,
    G_LOG_LEVEL_MESSAGE = 32,
    G_LOG_LEVEL_INFO = 64,
    G_LOG_LEVEL_DEBUG = 128,
    G_LOG_LEVEL_MASK = -4
} GLogLevelFlags;
typedef enum {
    G_DATE_BAD_WEEKDAY = 0,
    G_DATE_MONDAY = 1,
    G_DATE_TUESDAY = 2,
    G_DATE_WEDNESDAY = 3,
    G_DATE_THURSDAY = 4,
    G_DATE_FRIDAY = 5,
    G_DATE_SATURDAY = 6,
    G_DATE_SUNDAY = 7
} GDateWeekday;
typedef enum {
    G_IN_ORDER = 0,
    G_PRE_ORDER = 1,
    G_POST_ORDER = 2,
    G_LEVEL_ORDER = 3
} GTraverseType;
typedef enum {
    G_TRAVERSE_LEAVES = 1,
    G_TRAVERSE_NON_LEAVES = 2,
    G_TRAVERSE_ALL = 3,
    G_TRAVERSE_MASK = 3,
    G_TRAVERSE_LEAFS = 1,
    G_TRAVERSE_NON_LEAFS = 2
} GTraverseFlags;
typedef struct _GMarkupParser {
    void (*start_element) (GMarkupParseContext *, const gchar *,
			   const gchar * *, const gchar * *, gpointer,
			   GError * *);
    void (*end_element) (GMarkupParseContext *, const gchar *, gpointer,
			 GError * *);
    void (*text) (GMarkupParseContext *, const gchar *, gsize, gpointer,
		  GError * *);
    void (*passthrough) (GMarkupParseContext *, const gchar *, gsize,
			 gpointer, GError * *);
    void (*error) (GMarkupParseContext *, GError *, gpointer);
} GMarkupParser;
typedef enum {
    G_MARKUP_DO_NOT_USE_THIS_UNSUPPORTED_FLAG = 1
} GMarkupParseFlags;
typedef gboolean(*GHookCheckMarshaller) (GHook *, gpointer);
typedef gboolean(*GNodeTraverseFunc) (GNode *, gpointer);
typedef enum {
    G_NORMALIZE_DEFAULT = 0,
    G_NORMALIZE_NFD = 0,
    G_NORMALIZE_DEFAULT_COMPOSE = 1,
    G_NORMALIZE_NFC = 1,
    G_NORMALIZE_ALL = 2,
    G_NORMALIZE_NFKD = 2,
    G_NORMALIZE_ALL_COMPOSE = 3,
    G_NORMALIZE_NFKC = 3
} GNormalizeMode;
typedef struct {
    GMutex *mutex;
} GStaticMutex;
typedef struct _GStaticPrivate {
    guint index;
} GStaticPrivate;
typedef enum {
    G_FILE_ERROR_EXIST = 0,
    G_FILE_ERROR_ISDIR = 1,
    G_FILE_ERROR_ACCES = 2,
    G_FILE_ERROR_NAMETOOLONG = 3,
    G_FILE_ERROR_NOENT = 4,
    G_FILE_ERROR_NOTDIR = 5,
    G_FILE_ERROR_NXIO = 6,
    G_FILE_ERROR_NODEV = 7,
    G_FILE_ERROR_ROFS = 8,
    G_FILE_ERROR_TXTBSY = 9,
    G_FILE_ERROR_FAULT = 10,
    G_FILE_ERROR_LOOP = 11,
    G_FILE_ERROR_NOSPC = 12,
    G_FILE_ERROR_NOMEM = 13,
    G_FILE_ERROR_MFILE = 14,
    G_FILE_ERROR_NFILE = 15,
    G_FILE_ERROR_BADF = 16,
    G_FILE_ERROR_INVAL = 17,
    G_FILE_ERROR_PIPE = 18,
    G_FILE_ERROR_AGAIN = 19,
    G_FILE_ERROR_INTR = 20,
    G_FILE_ERROR_IO = 21,
    G_FILE_ERROR_PERM = 22,
    G_FILE_ERROR_NOSYS = 23,
    G_FILE_ERROR_FAILED = 24
} GFileError;
typedef void (*GDataForeachFunc) (GQuark, gpointer, gpointer);
typedef struct _GMemVTable {
    gpointer(*malloc) (gsize);
    gpointer(*realloc) (gpointer, gsize);
    void (*free) (gpointer);
     gpointer(*calloc) (gsize, gsize);
     gpointer(*try_malloc) (gsize);
     gpointer(*try_realloc) (gpointer, gsize);
} GMemVTable;
typedef enum {
    G_OPTION_ARG_NONE = 0,
    G_OPTION_ARG_STRING = 1,
    G_OPTION_ARG_INT = 2,
    G_OPTION_ARG_CALLBACK = 3,
    G_OPTION_ARG_FILENAME = 4,
    G_OPTION_ARG_STRING_ARRAY = 5,
    G_OPTION_ARG_FILENAME_ARRAY = 6
} GOptionArg;
typedef struct _GOptionEntry {
    const gchar *long_name;
    gchar short_name;
    gint flags;
    GOptionArg arg;
    gpointer arg_data;
    const gchar *description;
    const gchar *arg_description;
} GOptionEntry;
typedef enum {
    G_UNICODE_CONTROL = 0,
    G_UNICODE_FORMAT = 1,
    G_UNICODE_UNASSIGNED = 2,
    G_UNICODE_PRIVATE_USE = 3,
    G_UNICODE_SURROGATE = 4,
    G_UNICODE_LOWERCASE_LETTER = 5,
    G_UNICODE_MODIFIER_LETTER = 6,
    G_UNICODE_OTHER_LETTER = 7,
    G_UNICODE_TITLECASE_LETTER = 8,
    G_UNICODE_UPPERCASE_LETTER = 9,
    G_UNICODE_COMBINING_MARK = 10,
    G_UNICODE_ENCLOSING_MARK = 11,
    G_UNICODE_NON_SPACING_MARK = 12,
    G_UNICODE_DECIMAL_NUMBER = 13,
    G_UNICODE_LETTER_NUMBER = 14,
    G_UNICODE_OTHER_NUMBER = 15,
    G_UNICODE_CONNECT_PUNCTUATION = 16,
    G_UNICODE_DASH_PUNCTUATION = 17,
    G_UNICODE_CLOSE_PUNCTUATION = 18,
    G_UNICODE_FINAL_PUNCTUATION = 19,
    G_UNICODE_INITIAL_PUNCTUATION = 20,
    G_UNICODE_OTHER_PUNCTUATION = 21,
    G_UNICODE_OPEN_PUNCTUATION = 22,
    G_UNICODE_CURRENCY_SYMBOL = 23,
    G_UNICODE_MODIFIER_SYMBOL = 24,
    G_UNICODE_MATH_SYMBOL = 25,
    G_UNICODE_OTHER_SYMBOL = 26,
    G_UNICODE_LINE_SEPARATOR = 27,
    G_UNICODE_PARAGRAPH_SEPARATOR = 28,
    G_UNICODE_SPACE_SEPARATOR = 29
} GUnicodeType;
typedef void (*GLogFunc) (const gchar *, GLogLevelFlags, const gchar *,
			  gpointer);
typedef struct _GAllocator GAllocator;
typedef const gchar *(*GTranslateFunc) (const gchar *, gpointer);
typedef gboolean(*GOptionParseFunc) (GOptionContext *, GOptionGroup *,
				     gpointer, GError * *);
typedef void (*GVoidFunc) (void);
typedef gboolean(*GHookFindFunc) (GHook *, gpointer);
typedef struct _GTuples {
    guint len;
} GTuples;
typedef gpointer(*GCopyFunc) (gconstpointer, gpointer);
typedef void (*GOptionErrorFunc) (GOptionContext *, GOptionGroup *,
				  gpointer, GError * *);
typedef gpointer(*GCacheNewFunc) (gpointer);
typedef void (*GCacheDestroyFunc) (gpointer);
typedef gpointer(*GCacheDupFunc) (gpointer);
typedef enum {
    G_FILE_TEST_IS_REGULAR = 1,
    G_FILE_TEST_IS_SYMLINK = 2,
    G_FILE_TEST_IS_DIR = 4,
    G_FILE_TEST_IS_EXECUTABLE = 8,
    G_FILE_TEST_EXISTS = 16
} GFileTest;
typedef enum {
    G_ONCE_STATUS_NOTCALLED = 0,
    G_ONCE_STATUS_PROGRESS = 1,
    G_ONCE_STATUS_READY = 2
} GOnceStatus;
typedef struct _GOnce {
    volatile GOnceStatus status;
    volatile gpointer retval;
} GOnce;
typedef gboolean(*GTraverseFunc) (gpointer, gpointer, gpointer);
typedef gint(*GHookCompareFunc) (GHook *, GHook *);
typedef void (*GNodeForeachFunc) (GNode *, gpointer);
typedef struct _GDebugKey {
    gchar *key;
    guint value;
} GDebugKey;
typedef struct _GPrivate GPrivate;
typedef struct _GThreadFunctions {
    GMutex *(*mutex_new) (void);
    void (*mutex_lock) (GMutex *);
     gboolean(*mutex_trylock) (GMutex *);
    void (*mutex_unlock) (GMutex *);
    void (*mutex_free) (GMutex *);
    GCond *(*cond_new) (void);
    void (*cond_signal) (GCond *);
    void (*cond_broadcast) (GCond *);
    void (*cond_wait) (GCond *, GMutex *);
     gboolean(*cond_timed_wait) (GCond *, GMutex *, GTimeVal *);
    void (*cond_free) (GCond *);
    GPrivate *(*private_new) (GDestroyNotify);
     gpointer(*private_get) (GPrivate *);
    void (*private_set) (GPrivate *, gpointer);
    void (*thread_create) (GThreadFunc, gpointer, gulong, gboolean,
			   gboolean, GThreadPriority, gpointer,
			   GError * *);
    void (*thread_yield) (void);
    void (*thread_join) (gpointer);
    void (*thread_exit) (void);
    void (*thread_set_priority) (gpointer, GThreadPriority);
    void (*thread_self) (gpointer);
     gboolean(*thread_equal) (gpointer, gpointer);
} GThreadFunctions;
typedef void (*GHookMarshaller) (GHook *, gpointer);
typedef enum {
    G_IO_CHANNEL_ERROR_FBIG = 0,
    G_IO_CHANNEL_ERROR_INVAL = 1,
    G_IO_CHANNEL_ERROR_IO = 2,
    G_IO_CHANNEL_ERROR_ISDIR = 3,
    G_IO_CHANNEL_ERROR_NOSPC = 4,
    G_IO_CHANNEL_ERROR_NXIO = 5,
    G_IO_CHANNEL_ERROR_OVERFLOW = 6,
    G_IO_CHANNEL_ERROR_PIPE = 7,
    G_IO_CHANNEL_ERROR_FAILED = 8
} GIOChannelError;
typedef gboolean(*GIOFunc) (GIOChannel *, GIOCondition, gpointer);
typedef void (*GFreeFunc) (gpointer);
typedef gboolean(*GHookCheckFunc) (gpointer);
typedef void (*GHookFunc) (gpointer);
typedef short int gint16;
typedef enum {
    G_DATE_DAY = 0,
    G_DATE_MONTH = 1,
    G_DATE_YEAR = 2
} GDateDMY;
typedef signed char gint8;
typedef enum {
    G_MARKUP_ERROR_BAD_UTF8 = 0,
    G_MARKUP_ERROR_EMPTY = 1,
    G_MARKUP_ERROR_PARSE = 2,
    G_MARKUP_ERROR_UNKNOWN_ELEMENT = 3,
    G_MARKUP_ERROR_UNKNOWN_ATTRIBUTE = 4,
    G_MARKUP_ERROR_INVALID_CONTENT = 5
} GMarkupError;
typedef enum {
    G_IO_ERROR_NONE = 0,
    G_IO_ERROR_AGAIN = 1,
    G_IO_ERROR_INVAL = 2,
    G_IO_ERROR_UNKNOWN = 3
} GIOError;
typedef gboolean(*GOptionArgFunc) (const gchar *, const gchar *, gpointer,
				   GError * *);
typedef enum {
    G_OPTION_FLAG_HIDDEN = 1 &lt;&lt; 0,
    G_OPTION_FLAG_IN_MAIN = 1 &lt;&lt; 1,
    G_OPTION_FLAG_REVERSE = 1 &lt;&lt; 2
} GOptionFlags;
typedef enum {
    G_CONVERT_ERROR_NO_CONVERSION,
    G_CONVERT_ERROR_ILLEGAL_SEQUENCE,
    G_CONVERT_ERROR_FAILED,
    G_CONVERT_ERROR_PARTIAL_INPUT,
    G_CONVERT_ERROR_BAD_URI,
    G_CONVERT_ERROR_NOT_ABSOLUTE_PATH
} GConvertError;
typedef enum {
    G_ERR_UNKNOWN,
    G_ERR_UNEXP_EOF,
    G_ERR_UNEXP_EOF_IN_STRING,
    G_ERR_UNEXP_EOF_IN_COMMENT,
    G_ERR_NON_DIGIT_IN_CONST,
    G_ERR_DIGIT_RADIX,
    G_ERR_FLOAT_RADIX,
    G_ERR_FLOAT_MALFORMED
} GErrorType;
typedef enum {
    G_KEY_FILE_ERROR_UNKNOWN_ENCODING,
    G_KEY_FILE_ERROR_PARSE,
    G_KEY_FILE_ERROR_NOT_FOUND,
    G_KEY_FILE_ERROR_KEY_NOT_FOUND,
    G_KEY_FILE_ERROR_GROUP_NOT_FOUND,
    G_KEY_FILE_ERROR_INVALID_VALUE
} GKeyFileError;
typedef enum {
    G_SPAWN_ERROR_FORK,
    G_SPAWN_ERROR_READ,
    G_SPAWN_ERROR_CHDIR,
    G_SPAWN_ERROR_ACCES,
    G_SPAWN_ERROR_PERM,
    G_SPAWN_ERROR_2BIG,
    G_SPAWN_ERROR_NOEXEC,
    G_SPAWN_ERROR_NAMETOOLONG,
    G_SPAWN_ERROR_NOENT,
    G_SPAWN_ERROR_NOMEM,
    G_SPAWN_ERROR_NOTDIR,
    G_SPAWN_ERROR_LOOP,
    G_SPAWN_ERROR_TXTBUSY,
    G_SPAWN_ERROR_IO,
    G_SPAWN_ERROR_NFILE,
    G_SPAWN_ERROR_MFILE,
    G_SPAWN_ERROR_INVAL,
    G_SPAWN_ERROR_ISDIR,
    G_SPAWN_ERROR_LIBBAD,
    G_SPAWN_ERROR_FAILED
} GSpawnError;
typedef enum {
    G_HOOK_FLAG_ACTIVE = 1 &lt;&lt; 0,
    G_HOOK_FLAG_IN_CALL = 1 &lt;&lt; 1,
    G_HOOK_FLAG_MASK = 0x0f
} GHookFlagMask;
typedef enum {
    G_THREAD_ERROR_AGAIN
} GThreadError;
typedef enum {
    G_OPTION_ERROR_UNKNOWN_OPTION,
    G_OPTION_ERROR_BAD_VALUE,
    G_OPTION_ERROR_FAILED
} GOptionError;
typedef enum {
    G_ASCII_ALNUM = 1 &lt;&lt; 0,
    G_ASCII_ALPHA = 1 &lt;&lt; 1,
    G_ASCII_CNTRL = 1 &lt;&lt; 2,
    G_ASCII_DIGIT = 1 &lt;&lt; 3,
    G_ASCII_GRAPH = 1 &lt;&lt; 4,
    G_ASCII_LOWER = 1 &lt;&lt; 5,
    G_ASCII_PRINT = 1 &lt;&lt; 6,
    G_ASCII_PUNCT = 1 &lt;&lt; 7,
    G_ASCII_SPACE = 1 &lt;&lt; 8,
    G_ASCII_UPPER = 1 &lt;&lt; 9,
    G_ASCII_XDIGIT = 1 &lt;&lt; 10
} GAsciiType;
typedef enum {
    G_SHELL_ERROR_BAD_QUOTING,
    G_SHELL_ERROR_EMPTY_STRING,
    G_SHELL_ERROR_FAILED
} GShellError;
typedef struct _GMappedFile GMappedFile;
typedef enum {
    G_BOOKMARK_FILE_ERROR_INVALID_URI,
    G_BOOKMARK_FILE_ERROR_INVALID_VALUE,
    G_BOOKMARK_FILE_ERROR_APP_NOT_REGISTERED,
    G_BOOKMARK_FILE_ERROR_URI_NOT_FOUND,
    G_BOOKMARK_FILE_ERROR_READ,
    G_BOOKMARK_FILE_ERROR_UNKNOWN_ENCODING,
    G_BOOKMARK_FILE_ERROR_WRITE,
    G_BOOKMARK_FILE_ERROR_FILE_NOT_FOUND
} GBookmarkFileError;
typedef struct _GBookmarkFile GBookmarkFile;
typedef struct _GSourcePrivate GSourcePrivate;
typedef struct GTestCase GTestCase;
typedef struct GTestSuite GTestSuite;
typedef void (*GTestFunc) (void);
typedef void (*GTestDataFunc) (gconstpointer);
typedef void (*GTestFixtureFunc) (gconstpointer);
typedef enum {
    G_TEST_TRAP_SILENCE_STDOUT = 1 &lt;&lt; 7,
    G_TEST_TRAP_SILENCE_STDERR = 1 &lt;&lt; 8,
    G_TEST_TRAP_INHERIT_STDIN = 1 &lt;&lt; 9
} GTestTrapFlags;
typedef struct {
    gboolean test_initialized;
    gboolean test_quick;
    gboolean test_perf;
    gboolean test_verbose;
    gboolean test_quiet;
    gboolean test_undefined;
} GTestConfig;
typedef enum {
    G_TEST_LOG_NONE,
    G_TEST_LOG_ERROR,
    G_TEST_LOG_START_BINARY,
    G_TEST_LOG_LIST_CASE,
    G_TEST_LOG_SKIP_CASE,
    G_TEST_LOG_START_CASE,
    G_TEST_LOG_STOP_CASE,
    G_TEST_LOG_MIN_RESULT,
    G_TEST_LOG_MAX_RESULT,
    G_TEST_LOG_MESSAGE
} GTestLogType;
typedef struct {
    GTestLogType log_type;
    guint n_strings;
    gchar **strings;
    guint n_nums;
    long double *nums;
} GTestLogMsg;
typedef struct {
    GString *data;
    GSList *msgs;
} GTestLogBuffer;
typedef gboolean(*GTestLogFatalFunc) (const gchar *, GLogLevelFlags,
				      const gchar *, gpointer);
typedef enum {
    G_USER_DIRECTORY_DESKTOP,
    G_USER_DIRECTORY_DOCUMENTS,
    G_USER_DIRECTORY_DOWNLOAD,
    G_USER_DIRECTORY_MUSIC,
    G_USER_DIRECTORY_PICTURES,
    G_USER_DIRECTORY_PUBLIC_SHARE,
    G_USER_DIRECTORY_TEMPLATES,
    G_USER_DIRECTORY_VIDEOS,
    G_USER_N_DIRECTORIES
} GUserDirectory;
typedef enum {
    G_FORMAT_SIZE_DEFAULT,
    G_FORMAT_SIZE_LONG_FORMAT,
    G_FORMAT_SIZE_IEC_UNITS
} GFormatSizeFlags;
typedef struct _GSequence GSequence;
typedef struct _GSequenceNode GSequenceIter;
typedef gint(*GSequenceIterCompareFunc) (void *);
typedef enum {
    G_MARKUP_COLLECT_INVALID,
    G_MARKUP_COLLECT_STRING,
    G_MARKUP_COLLECT_STRDUP,
    G_MARKUP_COLLECT_BOOLEAN,
    G_MARKUP_COLLECT_TRISTATE,
    G_MARKUP_COLLECT_OPTIONAL
} GMarkupCollectType;
typedef struct _GHashTableIter {
    gpointer dummy1;
    gpointer dummy2;
    gpointer dummy3;
    int dummy4;
    gboolean dummy5;
    gpointer dummy6;
} GHashTableIter;
typedef enum {
    G_UNICODE_SCRIPT_INVALID_CODE,
    G_UNICODE_SCRIPT_COMMON,
    G_UNICODE_SCRIPT_INHERITED,
    G_UNICODE_SCRIPT_ARABIC,
    G_UNICODE_SCRIPT_ARMENIAN,
    G_UNICODE_SCRIPT_BENGALI,
    G_UNICODE_SCRIPT_BOPOMOFO,
    G_UNICODE_SCRIPT_CHEROKEE,
    G_UNICODE_SCRIPT_COPTIC,
    G_UNICODE_SCRIPT_CYRILLIC,
    G_UNICODE_SCRIPT_DESERET,
    G_UNICODE_SCRIPT_DEVANAGARI,
    G_UNICODE_SCRIPT_ETHIOPIC,
    G_UNICODE_SCRIPT_GEORGIAN,
    G_UNICODE_SCRIPT_GOTHIC,
    G_UNICODE_SCRIPT_GREEK,
    G_UNICODE_SCRIPT_GUJARATI,
    G_UNICODE_SCRIPT_GURMUKHI,
    G_UNICODE_SCRIPT_HAN,
    G_UNICODE_SCRIPT_HANGUL,
    G_UNICODE_SCRIPT_HEBREW,
    G_UNICODE_SCRIPT_HIRAGANA,
    G_UNICODE_SCRIPT_KANNADA,
    G_UNICODE_SCRIPT_KATAKANA,
    G_UNICODE_SCRIPT_KHMER,
    G_UNICODE_SCRIPT_LAO,
    G_UNICODE_SCRIPT_LATIN,
    G_UNICODE_SCRIPT_MALAYALAM,
    G_UNICODE_SCRIPT_MONGOLIAN,
    G_UNICODE_SCRIPT_MYANMAR,
    G_UNICODE_SCRIPT_OGHAM,
    G_UNICODE_SCRIPT_OLD_ITALIC,
    G_UNICODE_SCRIPT_ORIYA,
    G_UNICODE_SCRIPT_RUNIC,
    G_UNICODE_SCRIPT_SINHALA,
    G_UNICODE_SCRIPT_SYRIAC,
    G_UNICODE_SCRIPT_TAMIL,
    G_UNICODE_SCRIPT_TELUGU,
    G_UNICODE_SCRIPT_THAANA,
    G_UNICODE_SCRIPT_THAI,
    G_UNICODE_SCRIPT_TIBETAN,
    G_UNICODE_SCRIPT_CANADIAN_ABORIGINAL,
    G_UNICODE_SCRIPT_YI,
    G_UNICODE_SCRIPT_TAGALOG,
    G_UNICODE_SCRIPT_HANUNOO,
    G_UNICODE_SCRIPT_BUHID,
    G_UNICODE_SCRIPT_TAGBANWA,
    G_UNICODE_SCRIPT_BRAILLE,
    G_UNICODE_SCRIPT_CYPRIOT,
    G_UNICODE_SCRIPT_LIMBU,
    G_UNICODE_SCRIPT_OSMANYA,
    G_UNICODE_SCRIPT_SHAVIAN,
    G_UNICODE_SCRIPT_LINEAR_B,
    G_UNICODE_SCRIPT_TAI_LE,
    G_UNICODE_SCRIPT_UGARITIC,
    G_UNICODE_SCRIPT_NEW_TAI_LUE,
    G_UNICODE_SCRIPT_BUGINESE,
    G_UNICODE_SCRIPT_GLAGOLITIC,
    G_UNICODE_SCRIPT_TIFINAGH,
    G_UNICODE_SCRIPT_SYLOTI_NAGRI,
    G_UNICODE_SCRIPT_OLD_PERSIAN,
    G_UNICODE_SCRIPT_KHAROSHTHI,
    G_UNICODE_SCRIPT_UNKNOWN,
    G_UNICODE_SCRIPT_BALINESE,
    G_UNICODE_SCRIPT_CUNEIFORM,
    G_UNICODE_SCRIPT_PHOENICIAN,
    G_UNICODE_SCRIPT_PHAGS_PA,
    G_UNICODE_SCRIPT_NKO,
    G_UNICODE_SCRIPT_KAYAH_LI,
    G_UNICODE_SCRIPT_LEPCHA,
    G_UNICODE_SCRIPT_REJANG,
    G_UNICODE_SCRIPT_SUNDANESE,
    G_UNICODE_SCRIPT_SAURASHTRA,
    G_UNICODE_SCRIPT_CHAM,
    G_UNICODE_SCRIPT_OL_CHIKI,
    G_UNICODE_SCRIPT_VAI,
    G_UNICODE_SCRIPT_CARIAN,
    G_UNICODE_SCRIPT_LYCIAN,
    G_UNICODE_SCRIPT_LYDIAN,
    G_UNICODE_SCRIPT_AVESTAN,
    G_UNICODE_SCRIPT_BAMUM,
    G_UNICODE_SCRIPT_EGYPTIAN_HIEROGLYPHS,
    G_UNICODE_SCRIPT_IMPERIAL_ARAMAIC,
    G_UNICODE_SCRIPT_INSCRIPTIONAL_PAHLAVI,
    G_UNICODE_SCRIPT_INSCRIPTIONAL_PARTHIAN,
    G_UNICODE_SCRIPT_JAVANESE,
    G_UNICODE_SCRIPT_KAITHI,
    G_UNICODE_SCRIPT_LISU,
    G_UNICODE_SCRIPT_MEETEI_MAYEK,
    G_UNICODE_SCRIPT_OLD_SOUTH_ARABIAN,
    G_UNICODE_SCRIPT_OLD_TURKIC,
    G_UNICODE_SCRIPT_SAMARITAN,
    G_UNICODE_SCRIPT_TAI_THAM,
    G_UNICODE_SCRIPT_TAI_VIET,
    G_UNICODE_SCRIPT_BATAK,
    G_UNICODE_SCRIPT_BRAHMI,
    G_UNICODE_SCRIPT_MANDAIC,
    G_UNICODE_SCRIPT_CHAKMA,
    G_UNICODE_SCRIPT_MEROITIC_CURSIVE,
    G_UNICODE_SCRIPT_MEROITIC_HIEROGLYPHS,
    G_UNICODE_SCRIPT_MIAO,
    G_UNICODE_SCRIPT_SHARADA,
    G_UNICODE_SCRIPT_SORA_SOMPENG,
    G_UNICODE_SCRIPT_TAKRI
} GUnicodeScript;
typedef struct _GTimeZone GTimeZone;
typedef enum {
    G_TIME_TYPE_STANDARD,
    G_TIME_TYPE_DAYLIGHT,
    G_TIME_TYPE_UNIVERSAL
} GTimeType;
typedef struct _GBytes GBytes;
typedef struct _GVariantType GVariantType;
typedef enum {
    G_CHECKSUM_MD5,
    G_CHECKSUM_SHA1,
    G_CHECKSUM_SHA256
} GChecksumType;
typedef struct _GChecksum GChecksum;
typedef union _GDoubleIEEE754 {
    gdouble v_double;
    struct {
	guint mantissa_low:32;
	guint mantissa_high:20;
	guint biased_exponent:11;
	guint sign:1;
    } mpn;
} GDoubleIEEE754;
typedef union _GFloatIEEE754 {
    gfloat v_float;
    struct {
	guint mantissa:23;
	guint biased_exponent:8;
	guint sign:1;
    } mpn;
} GFloatIEEE754;
union _GFloatIEEE754 {
    gfloat v_float;
    struct {
	guint mantissa:23;
	guint biased_exponent:8;
	guint sign:1;
    } mpn;
};
union _GDoubleIEEE754 {
    gdouble v_double;
    struct {
	guint mantissa_low:32;
	guint mantissa_high:20;
	guint biased_exponent:11;
	guint sign:1;
    } mpn;
};
typedef struct _GHmac GHmac;
typedef struct _GVariant GVariant;
typedef enum {
    G_VARIANT_CLASS_BOOLEAN,
    G_VARIANT_CLASS_BYTE,
    G_VARIANT_CLASS_INT16,
    G_VARIANT_CLASS_UINT16,
    G_VARIANT_CLASS_INT32,
    G_VARIANT_CLASS_UINT32,
    G_VARIANT_CLASS_INT64,
    G_VARIANT_CLASS_UINT64,
    G_VARIANT_CLASS_HANDLE,
    G_VARIANT_CLASS_DOUBLE,
    G_VARIANT_CLASS_STRING,
    G_VARIANT_CLASS_OBJECT_PATH,
    G_VARIANT_CLASS_SIGNATURE,
    G_VARIANT_CLASS_VARIANT,
    G_VARIANT_CLASS_MAYBE,
    G_VARIANT_CLASS_ARRAY,
    G_VARIANT_CLASS_TUPLE,
    G_VARIANT_CLASS_DICT_ENTRY
} GVariantClass;
typedef struct _GVariantIter {
    gsize x[16];
} GVariantIter;
typedef struct _GVariantBuilder {
    gsize x[16];
} GVariantBuilder;
typedef enum {
    G_VARIANT_PARSE_ERROR_FAILED,
    G_VARIANT_PARSE_ERROR_BASIC_TYPE_EXPECTED,
    G_VARIANT_PARSE_ERROR_CANNOT_INFER_TYPE,
    G_VARIANT_PARSE_ERROR_DEFINITE_TYPE_EXPECTED,
    G_VARIANT_PARSE_ERROR_INPUT_NOT_AT_END,
    G_VARIANT_PARSE_ERROR_INVALID_CHARACTER,
    G_VARIANT_PARSE_ERROR_INVALID_FORMAT_STRING,
    G_VARIANT_PARSE_ERROR_INVALID_OBJECT_PATH,
    G_VARIANT_PARSE_ERROR_INVALID_SIGNATURE,
    G_VARIANT_PARSE_ERROR_INVALID_TYPE_STRING,
    G_VARIANT_PARSE_ERROR_NO_COMMON_TYPE,
    G_VARIANT_PARSE_ERROR_NUMBER_OUT_OF_RANGE,
    G_VARIANT_PARSE_ERROR_NUMBER_TOO_BIG,
    G_VARIANT_PARSE_ERROR_TYPE_ERROR,
    G_VARIANT_PARSE_ERROR_UNEXPECTED_TOKEN,
    G_VARIANT_PARSE_ERROR_UNKNOWN_KEYWORD,
    G_VARIANT_PARSE_ERROR_UNTERMINATED_STRING_CONSTANT,
    G_VARIANT_PARSE_ERROR_VALUE_EXPECTED
} GVariantParseError;
typedef enum {
    G_REGEX_ERROR_COMPILE,
    G_REGEX_ERROR_OPTIMIZE,
    G_REGEX_ERROR_REPLACE,
    G_REGEX_ERROR_MATCH,
    G_REGEX_ERROR_INTERNAL,
    G_REGEX_ERROR_STRAY_BACKSLASH,
    G_REGEX_ERROR_MISSING_CONTROL_CHAR,
    G_REGEX_ERROR_UNRECOGNIZED_ESCAPE,
    G_REGEX_ERROR_QUANTIFIERS_OUT_OF_ORDER,
    G_REGEX_ERROR_QUANTIFIER_TOO_BIG,
    G_REGEX_ERROR_UNTERMINATED_CHARACTER_CLASS,
    G_REGEX_ERROR_INVALID_ESCAPE_IN_CHARACTER_CLASS,
    G_REGEX_ERROR_RANGE_OUT_OF_ORDER,
    G_REGEX_ERROR_NOTHING_TO_REPEAT,
    G_REGEX_ERROR_UNRECOGNIZED_CHARACTER,
    G_REGEX_ERROR_POSIX_NAMED_CLASS_OUTSIDE_CLASS,
    G_REGEX_ERROR_UNMATCHED_PARENTHESIS,
    G_REGEX_ERROR_INEXISTENT_SUBPATTERN_REFERENCE,
    G_REGEX_ERROR_UNTERMINATED_COMMENT,
    G_REGEX_ERROR_EXPRESSION_TOO_LARGE,
    G_REGEX_ERROR_MEMORY_ERROR,
    G_REGEX_ERROR_VARIABLE_LENGTH_LOOKBEHIND,
    G_REGEX_ERROR_MALFORMED_CONDITION,
    G_REGEX_ERROR_TOO_MANY_CONDITIONAL_BRANCHES,
    G_REGEX_ERROR_ASSERTION_EXPECTED,
    G_REGEX_ERROR_UNKNOWN_POSIX_CLASS_NAME,
    G_REGEX_ERROR_POSIX_COLLATING_ELEMENTS_NOT_SUPPORTED,
    G_REGEX_ERROR_HEX_CODE_TOO_LARGE,
    G_REGEX_ERROR_INVALID_CONDITION,
    G_REGEX_ERROR_SINGLE_BYTE_MATCH_IN_LOOKBEHIND,
    G_REGEX_ERROR_INFINITE_LOOP,
    G_REGEX_ERROR_MISSING_SUBPATTERN_NAME_TERMINATOR,
    G_REGEX_ERROR_DUPLICATE_SUBPATTERN_NAME,
    G_REGEX_ERROR_MALFORMED_PROPERTY,
    G_REGEX_ERROR_UNKNOWN_PROPERTY,
    G_REGEX_ERROR_SUBPATTERN_NAME_TOO_LONG,
    G_REGEX_ERROR_TOO_MANY_SUBPATTERNS,
    G_REGEX_ERROR_INVALID_OCTAL_VALUE,
    G_REGEX_ERROR_TOO_MANY_BRANCHES_IN_DEFINE,
    G_REGEX_ERROR_DEFINE_REPETION,
    G_REGEX_ERROR_INCONSISTENT_NEWLINE_OPTIONS,
    G_REGEX_ERROR_MISSING_BACK_REFERENCE
} GRegexError;
typedef enum {
    G_REGEX_CASELESS,
    G_REGEX_MULTILINE,
    G_REGEX_DOTALL,
    G_REGEX_EXTENDED,
    G_REGEX_ANCHORED,
    G_REGEX_DOLLAR_ENDONLY,
    G_REGEX_UNGREEDY,
    G_REGEX_RAW,
    G_REGEX_NO_AUTO_CAPTURE,
    G_REGEX_OPTIMIZE,
    G_REGEX_DUPNAMES,
    G_REGEX_NEWLINE_CR,
    G_REGEX_NEWLINE_LF,
    G_REGEX_NEWLINE_CRLF
} GRegexCompileFlags;
typedef enum {
    G_REGEX_MATCH_ANCHORED,
    G_REGEX_MATCH_NOTBOL,
    G_REGEX_MATCH_NOTEOL,
    G_REGEX_MATCH_NOTEMPTY,
    G_REGEX_MATCH_PARTIAL,
    G_REGEX_MATCH_NEWLINE_CR,
    G_REGEX_MATCH_NEWLINE_LF,
    G_REGEX_MATCH_NEWLINE_CRLF,
    G_REGEX_MATCH_NEWLINE_ANY
} GRegexMatchFlags;
typedef struct _GRegex GRegex;
typedef struct _GMatchInfo GMatchInfo;
typedef gboolean(*GRegexEvalCallback) (const GMatchInfo *, GString *,
				       gpointer);
typedef struct _GRecMutex {
    gpointer p;
    guint i[2];
} GRecMutex;
typedef struct _GRWLock {
    gpointer p;
    guint i[2];
} GRWLock;
union _GMutex {
    gpointer p;
    guint i[2];
};
typedef gint64 GTimeSpan;
typedef struct _GDateTime GDateTime;

typedef struct _GStaticRecMutex GStaticRecMutex;
typedef struct _GStaticRWLock GStaticRWLock;
extern void g_allocator_free(GAllocator * allocator);
extern GAllocator *g_allocator_new(const gchar * name, guint n_preallocs);
extern GArray *g_array_append_vals(GArray * array, gconstpointer data,
				   guint len);
extern gchar *g_array_free(GArray * array, gboolean free_segment);
extern guint g_array_get_element_size(GArray * array);
extern GArray *g_array_insert_vals(GArray * array, guint index_,
				   gconstpointer data, guint len);
extern GArray *g_array_new(gboolean zero_terminated, gboolean clear_,
			   guint element_size);
extern GArray *g_array_prepend_vals(GArray * array, gconstpointer data,
				    guint len);
extern GArray *g_array_ref(GArray * array);
extern GArray *g_array_remove_index(GArray * array, guint index_);
extern GArray *g_array_remove_index_fast(GArray * array, guint index_);
extern GArray *g_array_remove_range(GArray * array, guint index_,
				    guint length);
extern void g_array_set_clear_func(GArray * array,
				   GDestroyNotify clear_func);
extern GArray *g_array_set_size(GArray * array, guint length);
extern GArray *g_array_sized_new(gboolean zero_terminated, gboolean clear_,
				 guint element_size, guint reserved_size);
extern void g_array_sort(GArray * array, GCompareFunc compare_func);
extern void g_array_sort_with_data(GArray * array,
				   GCompareDataFunc compare_func,
				   gpointer user_data);
extern void g_array_unref(GArray * array);
extern gint g_ascii_digit_value(gchar c);
extern gchar *g_ascii_dtostr(gchar * buffer, gint buf_len, gdouble d);
extern gchar *g_ascii_formatd(gchar * buffer, gint buf_len,
			      const gchar * format, gdouble d);
extern gint g_ascii_strcasecmp(const gchar * s1, const gchar * s2);
extern gchar *g_ascii_strdown(const gchar * str, gssize len);
extern gint g_ascii_strncasecmp(const gchar * s1, const gchar * s2,
				gsize n);
extern gdouble g_ascii_strtod(const gchar * nptr, gchar * *endptr);
extern gint64 g_ascii_strtoll(const gchar * nptr, gchar * *endptr,
			      guint base);
extern guint64 g_ascii_strtoull(const gchar * nptr, gchar * *endptr,
				guint base);
extern gchar *g_ascii_strup(const gchar * str, gssize len);
extern const guint16 *const g_ascii_table;
extern gchar g_ascii_tolower(gchar c);
extern gchar g_ascii_toupper(gchar c);
extern gint g_ascii_xdigit_value(gchar c);
extern void g_assert_warning(const char *log_domain, const char *file,
			     const int line, const char *pretty_function,
			     const char *expression);
extern void g_assertion_message(const char *domain, const char *file,
				int line, const char *func,
				const char *message);
extern void g_assertion_message_cmpnum(const char *domain,
				       const char *file, int line,
				       const char *func, const char *expr,
				       long double arg1, const char *cmp,
				       long double arg2, char numtype);
extern void g_assertion_message_cmpstr(const char *domain,
				       const char *file, int line,
				       const char *func, const char *expr,
				       const char *arg1, const char *cmp,
				       const char *arg2);
extern void g_assertion_message_error(const char *domain, const char *file,
				      int line, const char *func,
				      const char *expr,
				      const struct _GError *error,
				      GQuark error_domain, int error_code);
extern void g_assertion_message_expr(const char *domain, const char *file,
				     int line, const char *func,
				     const char *expr);
extern gint g_async_queue_length(GAsyncQueue * queue);
extern gint g_async_queue_length_unlocked(GAsyncQueue * queue);
extern void g_async_queue_lock(GAsyncQueue * queue);
extern GAsyncQueue *g_async_queue_new(void);
extern GAsyncQueue *g_async_queue_new_full(GDestroyNotify item_free_func);
extern gpointer g_async_queue_pop(GAsyncQueue * queue);
extern gpointer g_async_queue_pop_unlocked(GAsyncQueue * queue);
extern void g_async_queue_push(GAsyncQueue * queue, gpointer data);
extern void g_async_queue_push_sorted(GAsyncQueue * queue, gpointer data,
				      GCompareDataFunc func,
				      gpointer user_data);
extern void g_async_queue_push_sorted_unlocked(GAsyncQueue * queue,
					       gpointer data,
					       GCompareDataFunc func,
					       gpointer user_data);
extern void g_async_queue_push_unlocked(GAsyncQueue * queue,
					gpointer data);
extern GAsyncQueue *g_async_queue_ref(GAsyncQueue * queue);
extern void g_async_queue_ref_unlocked(GAsyncQueue * queue);
extern void g_async_queue_sort(GAsyncQueue * queue, GCompareDataFunc func,
			       gpointer user_data);
extern void g_async_queue_sort_unlocked(GAsyncQueue * queue,
					GCompareDataFunc func,
					gpointer user_data);
extern gpointer g_async_queue_timed_pop(GAsyncQueue * queue,
					GTimeVal * end_time);
extern gpointer g_async_queue_timed_pop_unlocked(GAsyncQueue * queue,
						 GTimeVal * end_time);
extern gpointer g_async_queue_timeout_pop(GAsyncQueue * queue,
					  guint64 timeout);
extern gpointer g_async_queue_timeout_pop_unlocked(GAsyncQueue * queue,
						   guint64 timeout);
extern gpointer g_async_queue_try_pop(GAsyncQueue * queue);
extern gpointer g_async_queue_try_pop_unlocked(GAsyncQueue * queue);
extern void g_async_queue_unlock(GAsyncQueue * queue);
extern void g_async_queue_unref(GAsyncQueue * queue);
extern void g_async_queue_unref_and_unlock(GAsyncQueue * queue);
extern void g_atexit(GVoidFunc func);
extern gint g_atomic_int_add(volatile gint * atomic, gint val);
extern guint g_atomic_int_and(volatile guint * atomic, guint val);
extern gboolean g_atomic_int_compare_and_exchange(volatile gint * atomic,
						  gint oldval,
						  gint newval);
extern gboolean g_atomic_int_dec_and_test(volatile int *atomic);
extern gint g_atomic_int_exchange_and_add(volatile gint * atomic,
					  gint val);
extern gint g_atomic_int_get(volatile int *atomic);
extern void g_atomic_int_inc(volatile int *atomic);
extern guint g_atomic_int_or(volatile guint * atomic, guint val);
extern void g_atomic_int_set(volatile int *atomic, gint newval);
extern guint g_atomic_int_xor(volatile guint * atomic, guint val);
extern gssize g_atomic_pointer_add(volatile void *atomic, gssize val);
extern gsize g_atomic_pointer_and(volatile void *atomic, gsize val);
extern gboolean g_atomic_pointer_compare_and_exchange(volatile void
						      *atomic,
						      gpointer oldval,
						      gpointer newval);
extern void *g_atomic_pointer_get(volatile void *atomic);
extern gsize g_atomic_pointer_or(volatile void *atomic, gsize val);
extern void g_atomic_pointer_set(volatile void *atomic, void *newval);
extern gsize g_atomic_pointer_xor(volatile void *atomic, gsize val);
extern guchar *g_base64_decode(const gchar * text, gsize * out_len);
extern guchar *g_base64_decode_inplace(gchar *, gsize *);
extern gsize g_base64_decode_step(const gchar * in, gsize len,
				  guchar * out, gint * state,
				  guint * save);
extern gchar *g_base64_encode(const unsigned char *data, gsize len);
extern gsize g_base64_encode_close(gboolean break_lines, gchar * out,
				   gint * state, gint * save);
extern gsize g_base64_encode_step(const unsigned char *in, gsize len,
				  gboolean break_lines, gchar * out,
				  gint * state, gint * save);
extern const char *g_basename(const char *file_name);
extern void g_bit_lock(volatile int *address, gint lock_bit);
extern gint g_bit_nth_lsf(gulong mask, gint nth_bit);
extern gint g_bit_nth_msf(gulong mask, gint nth_bit);
extern guint g_bit_storage(gulong number);
extern gboolean g_bit_trylock(volatile int *address, gint lock_bit);
extern void g_bit_unlock(volatile int *address, gint lock_bit);
extern void g_blow_chunks(void);
extern void g_bookmark_file_add_application(GBookmarkFile * bookmark,
					    const char *uri,
					    const char *name,
					    const char *exec);
extern void g_bookmark_file_add_group(GBookmarkFile * bookmark,
				      const char *uri, const char *group);
extern GQuark g_bookmark_file_error_quark(void);
extern void g_bookmark_file_free(GBookmarkFile * bookmark);
extern time_t g_bookmark_file_get_added(GBookmarkFile * bookmark,
					const char *uri, GError * *error);
extern gboolean g_bookmark_file_get_app_info(GBookmarkFile * bookmark,
					     const char *uri,
					     const char *name,
					     gchar * *exec, guint * count,
					     time_t * stamp,
					     GError * *error);
extern gchar **g_bookmark_file_get_applications(GBookmarkFile * bookmark,
						const char *uri,
						gsize * length,
						GError * *error);
extern gchar *g_bookmark_file_get_description(GBookmarkFile * bookmark,
					      const char *uri,
					      GError * *error);
extern gchar **g_bookmark_file_get_groups(GBookmarkFile * bookmark,
					  const char *uri, gsize * length,
					  GError * *error);
extern gboolean g_bookmark_file_get_icon(GBookmarkFile * bookmark,
					 const char *uri, gchar * *href,
					 gchar * *mime_type,
					 GError * *error);
extern gboolean g_bookmark_file_get_is_private(GBookmarkFile * bookmark,
					       const char *uri,
					       GError * *error);
extern gchar *g_bookmark_file_get_mime_type(GBookmarkFile * bookmark,
					    const char *uri,
					    GError * *error);
extern time_t g_bookmark_file_get_modified(GBookmarkFile * bookmark,
					   const char *uri,
					   GError * *error);
extern gint g_bookmark_file_get_size(GBookmarkFile * bookmark);
extern gchar *g_bookmark_file_get_title(GBookmarkFile * bookmark,
					const char *uri, GError * *error);
extern gchar **g_bookmark_file_get_uris(GBookmarkFile * bookmark,
					gsize * length);
extern time_t g_bookmark_file_get_visited(GBookmarkFile * bookmark,
					  const char *uri,
					  GError * *error);
extern gboolean g_bookmark_file_has_application(GBookmarkFile * bookmark,
						const char *uri,
						const char *name,
						GError * *error);
extern gboolean g_bookmark_file_has_group(GBookmarkFile * bookmark,
					  const char *uri,
					  const char *group,
					  GError * *error);
extern gboolean g_bookmark_file_has_item(GBookmarkFile * bookmark,
					 const char *uri);
extern gboolean g_bookmark_file_load_from_data(GBookmarkFile * bookmark,
					       const char *data,
					       gsize length,
					       GError * *error);
extern gboolean g_bookmark_file_load_from_data_dirs(GBookmarkFile *
						    bookmark,
						    const char *file,
						    gchar * *full_path,
						    GError * *error);
extern gboolean g_bookmark_file_load_from_file(GBookmarkFile * bookmark,
					       const char *filename,
					       GError * *error);
extern gboolean g_bookmark_file_move_item(GBookmarkFile * bookmark,
					  const char *old_uri,
					  const char *new_uri,
					  GError * *error);
extern GBookmarkFile *g_bookmark_file_new(void);
extern gboolean g_bookmark_file_remove_application(GBookmarkFile *
						   bookmark,
						   const char *uri,
						   const char *name,
						   GError * *error);
extern gboolean g_bookmark_file_remove_group(GBookmarkFile * bookmark,
					     const char *uri,
					     const char *group,
					     GError * *error);
extern gboolean g_bookmark_file_remove_item(GBookmarkFile * bookmark,
					    const char *uri,
					    GError * *error);
extern void g_bookmark_file_set_added(GBookmarkFile * bookmark,
				      const char *uri, time_t added);
extern gboolean g_bookmark_file_set_app_info(GBookmarkFile * bookmark,
					     const char *uri,
					     const char *name,
					     const char *exec, gint count,
					     time_t stamp,
					     GError * *error);
extern void g_bookmark_file_set_description(GBookmarkFile * bookmark,
					    const char *uri,
					    const char *description);
extern void g_bookmark_file_set_groups(GBookmarkFile * bookmark,
				       const char *uri,
				       const char **groups, gsize length);
extern void g_bookmark_file_set_icon(GBookmarkFile * bookmark,
				     const char *uri, const char *href,
				     const char *mime_type);
extern void g_bookmark_file_set_is_private(GBookmarkFile * bookmark,
					   const char *uri,
					   gboolean is_private);
extern void g_bookmark_file_set_mime_type(GBookmarkFile * bookmark,
					  const char *uri,
					  const char *mime_type);
extern void g_bookmark_file_set_modified(GBookmarkFile * bookmark,
					 const char *uri, time_t modified);
extern void g_bookmark_file_set_title(GBookmarkFile * bookmark,
				      const char *uri, const char *title);
extern void g_bookmark_file_set_visited(GBookmarkFile * bookmark,
					const char *uri, time_t visited);
extern gchar *g_bookmark_file_to_data(GBookmarkFile * bookmark,
				      gsize * length, GError * *error);
extern gboolean g_bookmark_file_to_file(GBookmarkFile * bookmark,
					const char *filename,
					GError * *error);
extern gchar *g_build_filename(const gchar * first_element, ...);
extern gchar *g_build_filenamev(gchar * *args);
extern gchar *g_build_path(const gchar * separator,
			   const gchar * first_element, ...);
extern gchar *g_build_pathv(const gchar * separator, gchar * *args);
extern GByteArray *g_byte_array_append(GByteArray * array,
				       const guint8 * data, guint len);
extern guint8 *g_byte_array_free(GByteArray * array,
				 gboolean free_segment);
extern GBytes *g_byte_array_free_to_bytes(GByteArray * array);
extern GByteArray *g_byte_array_new(void);
extern GByteArray *g_byte_array_new_take(guint8 * data, gsize len);
extern GByteArray *g_byte_array_prepend(GByteArray * array,
					const guint8 * data, guint len);
extern GByteArray *g_byte_array_ref(GByteArray * array);
extern GByteArray *g_byte_array_remove_index(GByteArray * array,
					     guint index_);
extern GByteArray *g_byte_array_remove_index_fast(GByteArray * array,
						  guint index_);
extern GByteArray *g_byte_array_remove_range(GByteArray * array,
					     guint index_, guint length);
extern GByteArray *g_byte_array_set_size(GByteArray * array, guint length);
extern GByteArray *g_byte_array_sized_new(guint reserved_size);
extern void g_byte_array_sort(GByteArray * array,
			      GCompareFunc compare_func);
extern void g_byte_array_sort_with_data(GByteArray * array,
					GCompareDataFunc compare_func,
					gpointer user_data);
extern void g_byte_array_unref(GByteArray * array);
extern gint g_bytes_compare(gconstpointer bytes1, gconstpointer bytes2);
extern gboolean g_bytes_equal(gconstpointer bytes1, gconstpointer bytes2);
extern gconstpointer g_bytes_get_data(GBytes * bytes, gsize * size);
extern gsize g_bytes_get_size(GBytes * bytes);
extern guint g_bytes_hash(gconstpointer bytes);
extern GBytes *g_bytes_new(gconstpointer data, gsize size);
extern GBytes *g_bytes_new_from_bytes(GBytes * bytes, gsize offset,
				      gsize length);
extern GBytes *g_bytes_new_static(gconstpointer data, gsize size);
extern GBytes *g_bytes_new_take(void *data, gsize size);
extern GBytes *g_bytes_new_with_free_func(gconstpointer data, gsize size,
					  GDestroyNotify free_func,
					  void *user_data);
extern GBytes *g_bytes_ref(GBytes * bytes);
extern void g_bytes_unref(GBytes * bytes);
extern GByteArray *g_bytes_unref_to_array(GBytes * bytes);
extern void *g_bytes_unref_to_data(GBytes * bytes, gsize * size);
extern void g_cache_destroy(GCache * cache);
extern gpointer g_cache_insert(GCache * cache, gpointer key);
extern void g_cache_key_foreach(GCache * cache, GHFunc func,
				gpointer user_data);
extern GCache *g_cache_new(GCacheNewFunc value_new_func,
			   GCacheDestroyFunc value_destroy_func,
			   GCacheDupFunc key_dup_func,
			   GCacheDestroyFunc key_destroy_func,
			   GHashFunc hash_key_func,
			   GHashFunc hash_value_func,
			   GEqualFunc key_equal_func);
extern void g_cache_remove(GCache * cache, gconstpointer value);
extern void g_cache_value_foreach(GCache * cache, GHFunc func,
				  gpointer user_data);
extern GChecksum *g_checksum_copy(const GChecksum * checksum);
extern void g_checksum_free(GChecksum * checksum);
extern void g_checksum_get_digest(GChecksum * checksum, guint8 * buffer,
				  gsize * digest_len);
extern const gchar *g_checksum_get_string(GChecksum * checksum);
extern GChecksum *g_checksum_new(GChecksumType checksum_type);
extern void g_checksum_reset(GChecksum * checksum);
extern gssize g_checksum_type_get_length(GChecksumType checksum_type);
extern void g_checksum_update(GChecksum * checksum,
			      const unsigned char *data, gssize length);
extern guint g_child_watch_add(GPid pid, GChildWatchFunc function,
			       gpointer data);
extern guint g_child_watch_add_full(gint priority, GPid pid,
				    GChildWatchFunc function,
				    gpointer data, GDestroyNotify notify);
extern GSourceFuncs g_child_watch_funcs;
extern GSource *g_child_watch_source_new(GPid pid);
extern void g_clear_error(GError * *err);
extern void g_completion_add_items(GCompletion * cmp, GList * items);
extern void g_completion_clear_items(GCompletion * cmp);
extern GList *g_completion_complete(GCompletion * cmp,
				    const gchar * prefix,
				    gchar * *new_prefix);
extern GList *g_completion_complete_utf8(GCompletion * cmp,
					 const gchar * prefix,
					 gchar * *new_prefix);
extern void g_completion_free(GCompletion * cmp);
extern GCompletion *g_completion_new(GCompletionFunc func);
extern void g_completion_remove_items(GCompletion * cmp, GList * items);
extern void g_completion_set_compare(GCompletion * cmp,
				     GCompletionStrncmpFunc strncmp_func);
extern gchar *g_compute_checksum_for_data(GChecksumType checksum_type,
					  const unsigned char *data,
					  gsize length);
extern gchar *g_compute_checksum_for_string(GChecksumType checksum_type,
					    const gchar * str,
					    gssize length);
extern gchar *g_compute_hmac_for_data(GChecksumType digest_type,
				      const guchar * key, gsize key_len,
				      const guchar * data, gsize length);
extern gchar *g_compute_hmac_for_string(GChecksumType digest_type,
					const guchar * key, gsize key_len,
					const gchar * str, gssize length);
extern void g_cond_broadcast(GCond * cond);
extern void g_cond_clear(GCond * cond);
extern void g_cond_free(GCond * cond);
extern void g_cond_init(GCond * cond);
extern GCond *g_cond_new(void);
extern void g_cond_signal(GCond * cond);
extern gboolean g_cond_timed_wait(GCond * cond, GMutex * mutex,
				  GTimeVal * timeval);
extern void g_cond_wait(GCond * cond, GMutex * mutex);
extern gboolean g_cond_wait_until(GCond * cond, GMutex * mutex,
				  gint64 end_time);
extern gchar *g_convert(const gchar * str, gssize len,
			const gchar * to_codeset,
			const gchar * from_codeset, gsize * bytes_read,
			gsize * bytes_written, GError * *error);
extern GQuark g_convert_error_quark(void);
extern gchar *g_convert_with_fallback(const gchar * str, gssize len,
				      const gchar * to_codeset,
				      const gchar * from_codeset,
				      const gchar * fallback,
				      gsize * bytes_read,
				      gsize * bytes_written,
				      GError * *error);
extern gchar *g_convert_with_iconv(const gchar * str, gssize len,
				   GIConv converter, gsize * bytes_read,
				   gsize * bytes_written, GError * *error);
extern void g_datalist_clear(GData * *datalist);
extern void g_datalist_foreach(GData * *datalist, GDataForeachFunc func,
			       gpointer user_data);
extern gpointer g_datalist_get_data(GData * *datalist, const char *key);
extern guint g_datalist_get_flags(GData * *datalist);
extern gpointer g_datalist_id_get_data(GData * *datalist, GQuark key_id);
extern gpointer g_datalist_id_remove_no_notify(GData * *datalist,
					       GQuark key_id);
extern void g_datalist_id_set_data_full(GData * *datalist, GQuark key_id,
					gpointer data,
					GDestroyNotify destroy_func);
extern void g_datalist_init(GData * *datalist);
extern void g_datalist_set_flags(GData * *datalist, guint flags);
extern void g_datalist_unset_flags(GData * *datalist, guint flags);
extern void g_dataset_destroy(gconstpointer dataset_location);
extern void g_dataset_foreach(gconstpointer dataset_location,
			      GDataForeachFunc func, gpointer user_data);
extern gpointer g_dataset_id_get_data(gconstpointer dataset_location,
				      GQuark key_id);
extern gpointer g_dataset_id_remove_no_notify(gconstpointer
					      dataset_location,
					      GQuark key_id);
extern void g_dataset_id_set_data_full(gconstpointer dataset_location,
				       GQuark key_id, gpointer data,
				       GDestroyNotify destroy_func);
extern void g_date_add_days(GDate * date, guint n_days);
extern void g_date_add_months(GDate * date, guint n_months);
extern void g_date_add_years(GDate * date, guint n_years);
extern void g_date_clamp(GDate * date, const GDate * min_date,
			 const GDate * max_date);
extern void g_date_clear(GDate * date, guint n_dates);
extern gint g_date_compare(const GDate * lhs, const GDate * rhs);
extern gint g_date_days_between(const GDate * date1, const GDate * date2);
extern void g_date_free(GDate * date);
extern GDateDay g_date_get_day(const GDate * date);
extern guint g_date_get_day_of_year(const GDate * date);
extern guint8 g_date_get_days_in_month(GDateMonth month, GDateYear year);
extern guint g_date_get_iso8601_week_of_year(const GDate * date);
extern guint32 g_date_get_julian(const GDate * date);
extern guint g_date_get_monday_week_of_year(const GDate * date);
extern guint8 g_date_get_monday_weeks_in_year(GDateYear year);
extern GDateMonth g_date_get_month(const GDate * date);
extern guint g_date_get_sunday_week_of_year(const GDate * date);
extern guint8 g_date_get_sunday_weeks_in_year(GDateYear year);
extern GDateWeekday g_date_get_weekday(const GDate * date);
extern GDateYear g_date_get_year(const GDate * date);
extern gboolean g_date_is_first_of_month(const GDate * date);
extern gboolean g_date_is_last_of_month(const GDate * date);
extern gboolean g_date_is_leap_year(GDateYear year);
extern GDate *g_date_new(void);
extern GDate *g_date_new_dmy(GDateDay day, GDateMonth month,
			     GDateYear year);
extern GDate *g_date_new_julian(guint32 julian_day);
extern void g_date_order(GDate * date1, GDate * date2);
extern void g_date_set_day(GDate * date, GDateDay day);
extern void g_date_set_dmy(GDate * date, GDateDay day, GDateMonth month,
			   GDateYear y);
extern void g_date_set_julian(GDate * date, guint32 julian_date);
extern void g_date_set_month(GDate * date, GDateMonth month);
extern void g_date_set_parse(GDate * date, const gchar * str);
extern void g_date_set_time(GDate * date, GTime time_);
extern void g_date_set_time_t(GDate * date, time_t timet);
extern void g_date_set_time_val(GDate * date, GTimeVal * timeval);
extern void g_date_set_year(GDate * date, GDateYear year);
extern gsize g_date_strftime(gchar * s, gsize slen, const gchar * format,
			     const GDate * date);
extern void g_date_subtract_days(GDate * date, guint n_days);
extern void g_date_subtract_months(GDate * date, guint n_months);
extern void g_date_subtract_years(GDate * date, guint n_years);
extern GDateTime *g_date_time_add(GDateTime * datetime,
				  GTimeSpan timespan);
extern GDateTime *g_date_time_add_days(GDateTime * datetime, gint days);
extern GDateTime *g_date_time_add_full(GDateTime * datetime, gint years,
				       gint months, gint days, gint hours,
				       gint minutes, gdouble seconds);
extern GDateTime *g_date_time_add_hours(GDateTime * datetime, gint hours);
extern GDateTime *g_date_time_add_minutes(GDateTime * datetime,
					  gint minutes);
extern GDateTime *g_date_time_add_months(GDateTime * datetime,
					 gint months);
extern GDateTime *g_date_time_add_seconds(GDateTime * datetime,
					  gdouble seconds);
extern GDateTime *g_date_time_add_weeks(GDateTime * datetime, gint weeks);
extern GDateTime *g_date_time_add_years(GDateTime * datetime, gint years);
extern gint g_date_time_compare(gconstpointer dt1, gconstpointer dt2);
extern GTimeSpan g_date_time_difference(GDateTime * end,
					GDateTime * begin);
extern gboolean g_date_time_equal(gconstpointer dt1, gconstpointer dt2);
extern gchar *g_date_time_format(GDateTime * datetime,
				 const gchar * format);
extern gint g_date_time_get_day_of_month(GDateTime * datetime);
extern gint g_date_time_get_day_of_week(GDateTime * datetime);
extern gint g_date_time_get_day_of_year(GDateTime * datetime);
extern gint g_date_time_get_hour(GDateTime * datetime);
extern gint g_date_time_get_microsecond(GDateTime * datetime);
extern gint g_date_time_get_minute(GDateTime * datetime);
extern gint g_date_time_get_month(GDateTime * datetime);
extern gint g_date_time_get_second(GDateTime * datetime);
extern gdouble g_date_time_get_seconds(GDateTime * datetime);
extern const gchar *g_date_time_get_timezone_abbreviation(GDateTime *
							  datetime);
extern GTimeSpan g_date_time_get_utc_offset(GDateTime * datetime);
extern gint g_date_time_get_week_numbering_year(GDateTime * datetime);
extern gint g_date_time_get_week_of_year(GDateTime * datetime);
extern gint g_date_time_get_year(GDateTime * datetime);
extern void g_date_time_get_ymd(GDateTime * datetime, gint * year,
				gint * month, gint * day);
extern guint g_date_time_hash(gconstpointer datetime);
extern gboolean g_date_time_is_daylight_savings(GDateTime * datetime);
extern GDateTime *g_date_time_new(GTimeZone * tz, gint year, gint month,
				  gint day, gint hour, gint minute,
				  gdouble seconds);
extern GDateTime *g_date_time_new_from_timeval_local(const GTimeVal * tv);
extern GDateTime *g_date_time_new_from_timeval_utc(const GTimeVal * tv);
extern GDateTime *g_date_time_new_from_unix_local(gint64 t);
extern GDateTime *g_date_time_new_from_unix_utc(gint64 t);
extern GDateTime *g_date_time_new_local(gint year, gint month, gint day,
					gint hour, gint minute,
					gdouble seconds);
extern GDateTime *g_date_time_new_now(GTimeZone * tz);
extern GDateTime *g_date_time_new_now_local(void);
extern GDateTime *g_date_time_new_now_utc(void);
extern GDateTime *g_date_time_new_utc(gint year, gint month, gint day,
				      gint hour, gint minute,
				      gdouble seconds);
extern GDateTime *g_date_time_ref(GDateTime * datetime);
extern GDateTime *g_date_time_to_local(GDateTime * datetime);
extern gboolean g_date_time_to_timeval(GDateTime * datetime,
				       GTimeVal * tv);
extern GDateTime *g_date_time_to_timezone(GDateTime * datetime,
					  GTimeZone * tz);
extern gint64 g_date_time_to_unix(GDateTime * datetime);
extern GDateTime *g_date_time_to_utc(GDateTime * datetime);
extern void g_date_time_unref(GDateTime * datetime);
extern void g_date_to_struct_tm(const GDate * date, struct tm *tm);
extern gboolean g_date_valid(const GDate * date);
extern gboolean g_date_valid_day(GDateDay day);
extern gboolean g_date_valid_dmy(GDateDay day, GDateMonth month,
				 GDateYear year);
extern gboolean g_date_valid_julian(guint32 julian_date);
extern gboolean g_date_valid_month(GDateMonth month);
extern gboolean g_date_valid_weekday(GDateWeekday weekday);
extern gboolean g_date_valid_year(GDateYear year);
extern const gchar *g_dcgettext(const gchar * domain, const gchar * msgid,
				gint category);
extern const gchar *g_dgettext(const gchar * domain, const gchar * msgid);
extern void g_dir_close(GDir * dir);
extern gchar *g_dir_make_tmp(const gchar * tmpl, GError * *error);
extern GDir *g_dir_open(const gchar * path, guint flags, GError * *error);
extern const gchar *g_dir_read_name(GDir * dir);
extern void g_dir_rewind(GDir * dir);
extern gboolean g_direct_equal(gconstpointer v1, gconstpointer v2);
extern guint g_direct_hash(gconstpointer v);
extern const gchar *g_dngettext(const gchar * domain, const gchar * msgid,
				const gchar * msgid_plural, gulong n);
extern gboolean g_double_equal(gconstpointer v1, gconstpointer v2);
extern guint g_double_hash(gconstpointer v);
extern const gchar *g_dpgettext(const gchar * domain,
				const gchar * msgctxtid,
				gsize msgidoffset);
extern const gchar *g_dpgettext2(const gchar * domain,
				 const gchar * context,
				 const gchar * msgid);
extern const gchar *g_environ_getenv(gchar * *envp,
				     const gchar * variable);
extern gchar **g_environ_setenv(gchar * *envp, const gchar * variable,
				const gchar * value, gboolean overwrite);
extern gchar **g_environ_unsetenv(gchar * *envp, const gchar * variable);
extern GError *g_error_copy(const GError * error);
extern void g_error_free(GError * error);
extern gboolean g_error_matches(const GError * error, GQuark domain,
				gint code);
extern GError *g_error_new(GQuark domain, gint code, const gchar * format,
			   ...);
extern GError *g_error_new_literal(GQuark domain, gint code,
				   const gchar * message);
extern GError *g_error_new_valist(GQuark domain, gint code,
				  const gchar * format, va_list args);
extern GFileError g_file_error_from_errno(gint err_no);
extern GQuark g_file_error_quark(void);
extern gboolean g_file_get_contents(const gchar * filename,
				    gchar * *contents, gsize * length,
				    GError * *error);
extern gint g_file_open_tmp(const gchar * tmpl, gchar * *name_used,
			    GError * *error);
extern gchar *g_file_read_link(const gchar * filename, GError * *error);
extern gboolean g_file_set_contents(const gchar * filename,
				    const gchar * contents, gssize length,
				    GError * *error);
extern gboolean g_file_test(const gchar * filename, GFileTest test);
extern gchar *g_filename_display_basename(const gchar * filename);
extern gchar *g_filename_display_name(const gchar * filename);
extern gchar *g_filename_from_uri(const gchar * uri, gchar * *hostname,
				  GError * *error);
extern gchar *g_filename_from_utf8(const gchar * utf8string, gssize len,
				   gsize * bytes_read,
				   gsize * bytes_written, GError * *error);
extern gchar *g_filename_to_uri(const gchar * filename,
				const gchar * hostname, GError * *error);
extern gchar *g_filename_to_utf8(const gchar * opsysstring, gssize len,
				 gsize * bytes_read, gsize * bytes_written,
				 GError * *error);
extern gchar *g_find_program_in_path(const gchar * program);
extern gchar *g_format_size(guint64 size);
extern gchar *g_format_size_for_display(goffset size);
extern gchar *g_format_size_full(guint64 size, GFormatSizeFlags flags);
extern void g_free(gpointer mem);
extern const gchar *g_get_application_name(void);
extern gboolean g_get_charset(const char **charset);
extern gchar *g_get_codeset(void);
extern gchar *g_get_current_dir(void);
extern void g_get_current_time(GTimeVal * result);
extern gchar **g_get_environ(void);
extern gboolean g_get_filename_charsets(const gchar * **charsets);
extern const gchar *g_get_home_dir(void);
extern const gchar *g_get_host_name(void);
extern const gchar *const *g_get_language_names(void);
extern gchar **g_get_locale_variants(const gchar * locale);
extern gint64 g_get_monotonic_time(void);
extern gchar *g_get_prgname(void);
extern const gchar *g_get_real_name(void);
extern gint64 g_get_real_time(void);
extern const gchar *const *g_get_system_config_dirs(void);
extern const gchar *const *g_get_system_data_dirs(void);
extern const gchar *g_get_tmp_dir(void);
extern const gchar *g_get_user_cache_dir(void);
extern const gchar *g_get_user_config_dir(void);
extern const gchar *g_get_user_data_dir(void);
extern const gchar *g_get_user_name(void);
extern const gchar *g_get_user_runtime_dir(void);
extern const gchar *g_get_user_special_dir(GUserDirectory directory);
extern const gchar *g_getenv(const gchar * variable);
extern void g_hash_table_add(GHashTable * hash_table, void *key);
extern gboolean g_hash_table_contains(GHashTable * hash_table,
				      gconstpointer key);
extern void g_hash_table_destroy(GHashTable * hash_table);
extern gpointer g_hash_table_find(GHashTable * hash_table,
				  GHRFunc predicate, gpointer user_data);
extern void g_hash_table_foreach(GHashTable * hash_table, GHFunc func,
				 gpointer user_data);
extern guint g_hash_table_foreach_remove(GHashTable * hash_table,
					 GHRFunc func, gpointer user_data);
extern guint g_hash_table_foreach_steal(GHashTable * hash_table,
					GHRFunc func, gpointer user_data);
extern GList *g_hash_table_get_keys(GHashTable * hash_table);
extern GList *g_hash_table_get_values(GHashTable * hash_table);
extern void g_hash_table_insert(GHashTable * hash_table, gpointer key,
				gpointer value);
extern GHashTable *g_hash_table_iter_get_hash_table(GHashTableIter * iter);
extern void g_hash_table_iter_init(GHashTableIter * iter,
				   GHashTable * hash_table);
extern gboolean g_hash_table_iter_next(GHashTableIter * iter, void **key,
				       void **value);
extern void g_hash_table_iter_remove(GHashTableIter * iter);
extern void g_hash_table_iter_replace(GHashTableIter * iter, void *value);
extern void g_hash_table_iter_steal(GHashTableIter * iter);
extern gpointer g_hash_table_lookup(GHashTable * hash_table,
				    gconstpointer key);
extern gboolean g_hash_table_lookup_extended(GHashTable * hash_table,
					     gconstpointer lookup_key,
					     gpointer * orig_key,
					     gpointer * value);
extern GHashTable *g_hash_table_new(GHashFunc hash_func,
				    GEqualFunc key_equal_func);
extern GHashTable *g_hash_table_new_full(GHashFunc hash_func,
					 GEqualFunc key_equal_func,
					 GDestroyNotify key_destroy_func,
					 GDestroyNotify
					 value_destroy_func);
extern GHashTable *g_hash_table_ref(GHashTable * hash_table);
extern gboolean g_hash_table_remove(GHashTable * hash_table,
				    gconstpointer key);
extern void g_hash_table_remove_all(GHashTable * hash_table);
extern void g_hash_table_replace(GHashTable * hash_table, gpointer key,
				 gpointer value);
extern guint g_hash_table_size(GHashTable * hash_table);
extern gboolean g_hash_table_steal(GHashTable * hash_table,
				   gconstpointer key);
extern void g_hash_table_steal_all(GHashTable * hash_table);
extern void g_hash_table_unref(GHashTable * hash_table);
extern GHmac *g_hmac_copy(const GHmac * hmac);
extern void g_hmac_get_digest(GHmac * hmac, guint8 * buffer,
			      gsize * digest_len);
extern const gchar *g_hmac_get_string(GHmac * hmac);
extern GHmac *g_hmac_new(GChecksumType digest_type, const guchar * key,
			 gsize key_len);
extern GHmac *g_hmac_ref(GHmac * hmac);
extern void g_hmac_unref(GHmac * hmac);
extern void g_hmac_update(GHmac * hmac, const guchar * data,
			  gssize length);
extern GHook *g_hook_alloc(GHookList * hook_list);
extern gint g_hook_compare_ids(GHook * new_hook, GHook * sibling);
extern gboolean g_hook_destroy(GHookList * hook_list, gulong hook_id);
extern void g_hook_destroy_link(GHookList * hook_list, GHook * hook);
extern GHook *g_hook_find(GHookList * hook_list, gboolean need_valids,
			  GHookFindFunc func, gpointer data);
extern GHook *g_hook_find_data(GHookList * hook_list, gboolean need_valids,
			       gpointer data);
extern GHook *g_hook_find_func(GHookList * hook_list, gboolean need_valids,
			       gpointer func);
extern GHook *g_hook_find_func_data(GHookList * hook_list,
				    gboolean need_valids, gpointer func,
				    gpointer data);
extern GHook *g_hook_first_valid(GHookList * hook_list,
				 gboolean may_be_in_call);
extern void g_hook_free(GHookList * hook_list, GHook * hook);
extern GHook *g_hook_get(GHookList * hook_list, gulong hook_id);
extern void g_hook_insert_before(GHookList * hook_list, GHook * sibling,
				 GHook * hook);
extern void g_hook_insert_sorted(GHookList * hook_list, GHook * hook,
				 GHookCompareFunc func);
extern void g_hook_list_clear(GHookList * hook_list);
extern void g_hook_list_init(GHookList * hook_list, guint hook_size);
extern void g_hook_list_invoke(GHookList * hook_list,
			       gboolean may_recurse);
extern void g_hook_list_invoke_check(GHookList * hook_list,
				     gboolean may_recurse);
extern void g_hook_list_marshal(GHookList * hook_list,
				gboolean may_recurse,
				GHookMarshaller marshaller,
				gpointer marshal_data);
extern void g_hook_list_marshal_check(GHookList * hook_list,
				      gboolean may_recurse,
				      GHookCheckMarshaller marshaller,
				      gpointer marshal_data);
extern GHook *g_hook_next_valid(GHookList * hook_list, GHook * hook,
				gboolean may_be_in_call);
extern void g_hook_prepend(GHookList * hook_list, GHook * hook);
extern GHook *g_hook_ref(GHookList * hook_list, GHook * hook);
extern void g_hook_unref(GHookList * hook_list, GHook * hook);
extern gboolean g_hostname_is_ascii_encoded(const gchar * hostname);
extern gboolean g_hostname_is_ip_address(const gchar * hostname);
extern gboolean g_hostname_is_non_ascii(const gchar * hostname);
extern gchar *g_hostname_to_ascii(const gchar * hostname);
extern gchar *g_hostname_to_unicode(const gchar * hostname);
extern gsize g_iconv(GIConv converter, gchar * *inbuf,
		     gsize * inbytes_left, gchar * *outbuf,
		     gsize * outbytes_left);
extern gint g_iconv_close(GIConv converter);
extern GIConv g_iconv_open(const gchar * to_codeset,
			   const gchar * from_codeset);
extern guint g_idle_add(GSourceFunc function, gpointer data);
extern guint g_idle_add_full(gint priority, GSourceFunc function,
			     gpointer data, GDestroyNotify notify);
extern GSourceFuncs g_idle_funcs;
extern gboolean g_idle_remove_by_data(gpointer data);
extern GSource *g_idle_source_new(void);
extern gboolean g_int64_equal(gconstpointer v1, gconstpointer v2);
extern guint g_int64_hash(gconstpointer v);
extern gboolean g_int_equal(gconstpointer v1, gconstpointer v2);
extern guint g_int_hash(gconstpointer v);
extern const gchar *g_intern_static_string(const gchar * string);
extern const gchar *g_intern_string(const gchar * string);
extern guint g_io_add_watch(GIOChannel * channel, GIOCondition condition,
			    GIOFunc func, gpointer user_data);
extern guint g_io_add_watch_full(GIOChannel * channel, gint priority,
				 GIOCondition condition, GIOFunc func,
				 gpointer user_data,
				 GDestroyNotify notify);
extern void g_io_channel_close(GIOChannel * channel);
extern GIOChannelError g_io_channel_error_from_errno(gint en);
extern GQuark g_io_channel_error_quark(void);
extern GIOStatus g_io_channel_flush(GIOChannel * channel, GError * *error);
extern GIOCondition g_io_channel_get_buffer_condition(GIOChannel *
						      channel);
extern gsize g_io_channel_get_buffer_size(GIOChannel * channel);
extern gboolean g_io_channel_get_buffered(GIOChannel * channel);
extern gboolean g_io_channel_get_close_on_unref(GIOChannel * channel);
extern const gchar *g_io_channel_get_encoding(GIOChannel * channel);
extern GIOFlags g_io_channel_get_flags(GIOChannel * channel);
extern const gchar *g_io_channel_get_line_term(GIOChannel * channel,
					       gint * length);
extern void g_io_channel_init(GIOChannel * channel);
extern GIOChannel *g_io_channel_new_file(const gchar * filename,
					 const gchar * mode,
					 GError * *error);
extern GIOError g_io_channel_read(GIOChannel * channel, gchar * buf,
				  gsize count, gsize * bytes_read);
extern GIOStatus g_io_channel_read_chars(GIOChannel * channel, gchar * buf,
					 gsize count, gsize * bytes_read,
					 GError * *error);
extern GIOStatus g_io_channel_read_line(GIOChannel * channel,
					gchar * *str_return,
					gsize * length,
					gsize * terminator_pos,
					GError * *error);
extern GIOStatus g_io_channel_read_line_string(GIOChannel * channel,
					       GString * buffer,
					       gsize * terminator_pos,
					       GError * *error);
extern GIOStatus g_io_channel_read_to_end(GIOChannel * channel,
					  gchar * *str_return,
					  gsize * length, GError * *error);
extern GIOStatus g_io_channel_read_unichar(GIOChannel * channel,
					   gunichar * thechar,
					   GError * *error);
extern GIOChannel *g_io_channel_ref(GIOChannel * channel);
extern GIOError g_io_channel_seek(GIOChannel * channel, gint64 offset,
				  GSeekType type);
extern GIOStatus g_io_channel_seek_position(GIOChannel * channel,
					    gint64 offset, GSeekType type,
					    GError * *error);
extern void g_io_channel_set_buffer_size(GIOChannel * channel, gsize size);
extern void g_io_channel_set_buffered(GIOChannel * channel,
				      gboolean buffered);
extern void g_io_channel_set_close_on_unref(GIOChannel * channel,
					    gboolean do_close);
extern GIOStatus g_io_channel_set_encoding(GIOChannel * channel,
					   const gchar * encoding,
					   GError * *error);
extern GIOStatus g_io_channel_set_flags(GIOChannel * channel,
					GIOFlags flags, GError * *error);
extern void g_io_channel_set_line_term(GIOChannel * channel,
				       const gchar * line_term,
				       gint length);
extern GIOStatus g_io_channel_shutdown(GIOChannel * channel,
				       gboolean flush, GError * *err);
extern gint g_io_channel_unix_get_fd(GIOChannel * channel);
extern GIOChannel *g_io_channel_unix_new(gint fd);
extern void g_io_channel_unref(GIOChannel * channel);
extern GIOError g_io_channel_write(GIOChannel * channel, const char *buf,
				   gsize count, gsize * bytes_written);
extern GIOStatus g_io_channel_write_chars(GIOChannel * channel,
					  const gchar * buf, gssize count,
					  gsize * bytes_written,
					  GError * *error);
extern GIOStatus g_io_channel_write_unichar(GIOChannel * channel,
					    gunichar thechar,
					    GError * *error);
extern GSource *g_io_create_watch(GIOChannel * channel,
				  GIOCondition condition);
extern GSourceFuncs g_io_watch_funcs;
extern GQuark g_key_file_error_quark(void);
extern void g_key_file_free(GKeyFile * key_file);
extern gboolean g_key_file_get_boolean(GKeyFile * key_file,
				       const gchar * group_name,
				       const gchar * key, GError * *error);
extern gboolean *g_key_file_get_boolean_list(GKeyFile * key_file,
					     const gchar * group_name,
					     const gchar * key,
					     gsize * length,
					     GError * *error);
extern gchar *g_key_file_get_comment(GKeyFile * key_file,
				     const gchar * group_name,
				     const gchar * key, GError * *error);
extern gdouble g_key_file_get_double(GKeyFile * key_file,
				     const gchar * group_name,
				     const gchar * key, GError * *error);
extern gdouble *g_key_file_get_double_list(GKeyFile * key_file,
					   const gchar * group_name,
					   const gchar * key,
					   gsize * length,
					   GError * *error);
extern gchar **g_key_file_get_groups(GKeyFile * key_file, gsize * length);
extern gint64 g_key_file_get_int64(GKeyFile * key_file,
				   const gchar * group_name,
				   const gchar * key, GError * *error);
extern gint g_key_file_get_integer(GKeyFile * key_file,
				   const gchar * group_name,
				   const gchar * key, GError * *error);
extern gint *g_key_file_get_integer_list(GKeyFile * key_file,
					 const gchar * group_name,
					 const gchar * key, gsize * length,
					 GError * *error);
extern gchar **g_key_file_get_keys(GKeyFile * key_file,
				   const gchar * group_name,
				   gsize * length, GError * *error);
extern gchar *g_key_file_get_locale_string(GKeyFile * key_file,
					   const gchar * group_name,
					   const gchar * key,
					   const gchar * locale,
					   GError * *error);
extern gchar **g_key_file_get_locale_string_list(GKeyFile * key_file,
						 const gchar * group_name,
						 const gchar * key,
						 const gchar * locale,
						 gsize * length,
						 GError * *error);
extern gchar *g_key_file_get_start_group(GKeyFile * key_file);
extern gchar *g_key_file_get_string(GKeyFile * key_file,
				    const gchar * group_name,
				    const gchar * key, GError * *error);
extern gchar **g_key_file_get_string_list(GKeyFile * key_file,
					  const gchar * group_name,
					  const gchar * key,
					  gsize * length, GError * *error);
extern guint64 g_key_file_get_uint64(GKeyFile * key_file,
				     const gchar * group_name,
				     const gchar * key, GError * *error);
extern gchar *g_key_file_get_value(GKeyFile * key_file,
				   const gchar * group_name,
				   const gchar * key, GError * *error);
extern gboolean g_key_file_has_group(GKeyFile * key_file,
				     const gchar * group_name);
extern gboolean g_key_file_has_key(GKeyFile * key_file,
				   const gchar * group_name,
				   const gchar * key, GError * *error);
extern gboolean g_key_file_load_from_data(GKeyFile * key_file,
					  const gchar * data, gsize length,
					  GKeyFileFlags flags,
					  GError * *error);
extern gboolean g_key_file_load_from_data_dirs(GKeyFile * key_file,
					       const gchar * file,
					       gchar * *full_path,
					       GKeyFileFlags flags,
					       GError * *error);
extern gboolean g_key_file_load_from_dirs(GKeyFile * key_file,
					  const gchar * file,
					  const gchar * *search_dirs,
					  gchar * *full_path,
					  GKeyFileFlags flags,
					  GError * *error);
extern gboolean g_key_file_load_from_file(GKeyFile * key_file,
					  const gchar * file,
					  GKeyFileFlags flags,
					  GError * *error);
extern GKeyFile *g_key_file_new(void);
extern GKeyFile *g_key_file_ref(GKeyFile * key_file);
extern gboolean g_key_file_remove_comment(GKeyFile * key_file,
					  const gchar * group_name,
					  const gchar * key,
					  GError * *error);
extern gboolean g_key_file_remove_group(GKeyFile * key_file,
					const gchar * group_name,
					GError * *error);
extern gboolean g_key_file_remove_key(GKeyFile * key_file,
				      const gchar * group_name,
				      const gchar * key, GError * *error);
extern void g_key_file_set_boolean(GKeyFile * key_file,
				   const gchar * group_name,
				   const gchar * key, gboolean value);
extern void g_key_file_set_boolean_list(GKeyFile * key_file,
					const gchar * group_name,
					const gchar * key, gboolean * list,
					gsize length);
extern gboolean g_key_file_set_comment(GKeyFile * key_file,
				       const gchar * group_name,
				       const gchar * key,
				       const gchar * comment,
				       GError * *error);
extern void g_key_file_set_double(GKeyFile * key_file,
				  const gchar * group_name,
				  const gchar * key, gdouble value);
extern void g_key_file_set_double_list(GKeyFile * key_file,
				       const gchar * group_name,
				       const gchar * key, gdouble * list,
				       gsize length);
extern void g_key_file_set_int64(GKeyFile * key_file,
				 const gchar * group_name,
				 const gchar * key, gint64 value);
extern void g_key_file_set_integer(GKeyFile * key_file,
				   const gchar * group_name,
				   const gchar * key, gint value);
extern void g_key_file_set_integer_list(GKeyFile * key_file,
					const gchar * group_name,
					const gchar * key, gint * list,
					gsize length);
extern void g_key_file_set_list_separator(GKeyFile * key_file,
					  gchar separator);
extern void g_key_file_set_locale_string(GKeyFile * key_file,
					 const gchar * group_name,
					 const gchar * key,
					 const gchar * locale,
					 const gchar * string);
extern void g_key_file_set_locale_string_list(GKeyFile * key_file,
					      const gchar * group_name,
					      const gchar * key,
					      const gchar * locale,
					      const gchar * const *list,
					      gsize length);
extern void g_key_file_set_string(GKeyFile * key_file,
				  const gchar * group_name,
				  const gchar * key, const gchar * string);
extern void g_key_file_set_string_list(GKeyFile * key_file,
				       const gchar * group_name,
				       const gchar * key,
				       const gchar * const *list,
				       gsize length);
extern void g_key_file_set_uint64(GKeyFile * key_file,
				  const gchar * group_name,
				  const gchar * key, guint64 value);
extern void g_key_file_set_value(GKeyFile * key_file,
				 const gchar * group_name,
				 const gchar * key, const gchar * value);
extern gchar *g_key_file_to_data(GKeyFile * key_file, gsize * length,
				 GError * *error);
extern void g_key_file_unref(GKeyFile * key_file);
extern GList *g_list_alloc(void);
extern GList *g_list_append(GList * list, gpointer data);
extern GList *g_list_concat(GList * list1, GList * list2);
extern GList *g_list_copy(GList * list);
extern GList *g_list_delete_link(GList * list, GList * link_);
extern GList *g_list_find(GList * list, gconstpointer data);
extern GList *g_list_find_custom(GList * list, gconstpointer data,
				 GCompareFunc func);
extern GList *g_list_first(GList * list);
extern void g_list_foreach(GList * list, GFunc func, gpointer user_data);
extern void g_list_free(GList * list);
extern void g_list_free_1(GList * list);
extern void g_list_free_full(GList * list, GDestroyNotify free_func);
extern gint g_list_index(GList * list, gconstpointer data);
extern GList *g_list_insert(GList * list, gpointer data, gint position);
extern GList *g_list_insert_before(GList * list, GList * sibling,
				   gpointer data);
extern GList *g_list_insert_sorted(GList * list, gpointer data,
				   GCompareFunc func);
extern GList *g_list_insert_sorted_with_data(GList * list, gpointer data,
					     GCompareDataFunc func,
					     gpointer user_data);
extern GList *g_list_last(GList * list);
extern guint g_list_length(GList * list);
extern GList *g_list_nth(GList * list, guint n);
extern gpointer g_list_nth_data(GList * list, guint n);
extern GList *g_list_nth_prev(GList * list, guint n);
extern void g_list_pop_allocator(void);
extern gint g_list_position(GList * list, GList * llink);
extern GList *g_list_prepend(GList * list, gpointer data);
extern void g_list_push_allocator(GAllocator * allocator);
extern GList *g_list_remove(GList * list, gconstpointer data);
extern GList *g_list_remove_all(GList * list, gconstpointer data);
extern GList *g_list_remove_link(GList * list, GList * llink);
extern GList *g_list_reverse(GList * list);
extern GList *g_list_sort(GList * list, GCompareFunc compare_func);
extern GList *g_list_sort_with_data(GList * list,
				    GCompareDataFunc compare_func,
				    gpointer user_data);
extern gchar **g_listenv(void);
extern gchar *g_locale_from_utf8(const gchar * utf8string, gssize len,
				 gsize * bytes_read, gsize * bytes_written,
				 GError * *error);
extern gchar *g_locale_to_utf8(const gchar * opsysstring, gssize len,
			       gsize * bytes_read, gsize * bytes_written,
			       GError * *error);
extern void g_log(const gchar * log_domain, GLogLevelFlags log_level,
		  const gchar * format, ...);
extern void g_log_default_handler(const gchar * log_domain,
				  GLogLevelFlags log_level,
				  const gchar * message,
				  gpointer unused_data);
extern void g_log_remove_handler(const gchar * log_domain,
				 guint handler_id);
extern GLogLevelFlags g_log_set_always_fatal(GLogLevelFlags fatal_mask);
extern GLogFunc g_log_set_default_handler(GLogFunc log_func,
					  gpointer user_data);
extern GLogLevelFlags g_log_set_fatal_mask(const gchar * log_domain,
					   GLogLevelFlags fatal_mask);
extern guint g_log_set_handler(const gchar * log_domain,
			       GLogLevelFlags log_levels,
			       GLogFunc log_func, gpointer user_data);
extern void g_logv(const gchar * log_domain, GLogLevelFlags log_level,
		   const gchar * format, va_list args);
extern gboolean g_main_context_acquire(GMainContext * context);
extern void g_main_context_add_poll(GMainContext * context, GPollFD * fd,
				    gint priority);
extern gint g_main_context_check(GMainContext * context, gint max_priority,
				 GPollFD * fds, gint n_fds);
extern GMainContext *g_main_context_default(void);
extern void g_main_context_dispatch(GMainContext * context);
extern GSource *g_main_context_find_source_by_funcs_user_data(GMainContext
							      * context,
							      GSourceFuncs
							      * funcs,
							      gpointer
							      user_data);
extern GSource *g_main_context_find_source_by_id(GMainContext * context,
						 guint source_id);
extern GSource *g_main_context_find_source_by_user_data(GMainContext *
							context,
							gpointer
							user_data);
extern GPollFunc g_main_context_get_poll_func(GMainContext * context);
extern GMainContext *g_main_context_get_thread_default(void);
extern void g_main_context_invoke(GMainContext * context,
				  GSourceFunc function, void *data);
extern void g_main_context_invoke_full(GMainContext * context,
				       gint priority, GSourceFunc function,
				       void *data, GDestroyNotify notify);
extern gboolean g_main_context_is_owner(GMainContext * context);
extern gboolean g_main_context_iteration(GMainContext * context,
					 gboolean may_block);
extern GMainContext *g_main_context_new(void);
extern gboolean g_main_context_pending(GMainContext * context);
extern void g_main_context_pop_thread_default(GMainContext * context);
extern gboolean g_main_context_prepare(GMainContext * context,
				       gint * priority);
extern void g_main_context_push_thread_default(GMainContext * context);
extern gint g_main_context_query(GMainContext * context, gint max_priority,
				 gint * timeout_, GPollFD * fds,
				 gint n_fds);
extern GMainContext *g_main_context_ref(GMainContext * context);
extern GMainContext *g_main_context_ref_thread_default(void);
extern void g_main_context_release(GMainContext * context);
extern void g_main_context_remove_poll(GMainContext * context,
				       GPollFD * fd);
extern void g_main_context_set_poll_func(GMainContext * context,
					 GPollFunc func);
extern void g_main_context_unref(GMainContext * context);
extern gboolean g_main_context_wait(GMainContext * context, GCond * cond,
				    GMutex * mutex);
extern void g_main_context_wakeup(GMainContext * context);
extern GSource *g_main_current_source(void);
extern gint g_main_depth(void);
extern GMainContext *g_main_loop_get_context(GMainLoop * loop);
extern gboolean g_main_loop_is_running(GMainLoop * loop);
extern GMainLoop *g_main_loop_new(GMainContext * context,
				  gboolean is_running);
extern void g_main_loop_quit(GMainLoop * loop);
extern GMainLoop *g_main_loop_ref(GMainLoop * loop);
extern void g_main_loop_run(GMainLoop * loop);
extern void g_main_loop_unref(GMainLoop * loop);
extern gpointer g_malloc(gulong n_bytes);
extern gpointer g_malloc0(gulong n_bytes);
extern void *g_malloc0_n(gsize n_blocks, gsize n_block_bytes);
extern void *g_malloc_n(gsize n_blocks, gsize n_block_bytes);
extern void g_mapped_file_free(GMappedFile * file);
extern gchar *g_mapped_file_get_contents(GMappedFile * file);
extern gsize g_mapped_file_get_length(GMappedFile * file);
extern GMappedFile *g_mapped_file_new(const gchar * filename,
				      gboolean writable, GError * *error);
extern GMappedFile *g_mapped_file_new_from_fd(gint fd, gboolean writable,
					      GError * *error);
extern GMappedFile *g_mapped_file_ref(GMappedFile * file);
extern void g_mapped_file_unref(GMappedFile * file);
extern gboolean g_markup_collect_attributes(const gchar * element_name,
					    const gchar * *attribute_names,
					    const gchar *
					    *attribute_values,
					    GError * *error,
					    GMarkupCollectType first_type,
					    const gchar * first_attr, ...);
extern GQuark g_markup_error_quark(void);
extern gchar *g_markup_escape_text(const gchar * text, gssize length);
extern gboolean g_markup_parse_context_end_parse(GMarkupParseContext *
						 context, GError * *error);
extern void g_markup_parse_context_free(GMarkupParseContext * context);
extern const gchar *g_markup_parse_context_get_element(GMarkupParseContext
						       * context);
extern const struct _GSList
    *g_markup_parse_context_get_element_stack(GMarkupParseContext *
					      context);
extern void g_markup_parse_context_get_position(GMarkupParseContext *
						context,
						gint * line_number,
						gint * char_number);
extern void *g_markup_parse_context_get_user_data(GMarkupParseContext *
						  context);
extern GMarkupParseContext *g_markup_parse_context_new(const GMarkupParser
						       * parser,
						       GMarkupParseFlags
						       flags,
						       gpointer user_data,
						       GDestroyNotify
						       user_data_dnotify);
extern gboolean g_markup_parse_context_parse(GMarkupParseContext * context,
					     const gchar * text,
					     gssize text_len,
					     GError * *error);
extern void *g_markup_parse_context_pop(GMarkupParseContext * context);
extern void g_markup_parse_context_push(GMarkupParseContext * context,
					const GMarkupParser * parser,
					void *user_data);
extern char *g_markup_printf_escaped(const char *format, ...);
extern char *g_markup_vprintf_escaped(const char *format, va_list args);
extern gchar *g_match_info_expand_references(const GMatchInfo * match_info,
					     const gchar *
					     string_to_expand,
					     GError * *error);
extern gchar *g_match_info_fetch(const GMatchInfo * match_info,
				 gint match_num);
extern gchar **g_match_info_fetch_all(const GMatchInfo * match_info);
extern gchar *g_match_info_fetch_named(const GMatchInfo * match_info,
				       const gchar * name);
extern gboolean g_match_info_fetch_named_pos(const GMatchInfo * match_info,
					     const gchar * name,
					     gint * start_pos,
					     gint * end_pos);
extern gboolean g_match_info_fetch_pos(const GMatchInfo * match_info,
				       gint match_num, gint * start_pos,
				       gint * end_pos);
extern void g_match_info_free(GMatchInfo * match_info);
extern gint g_match_info_get_match_count(const GMatchInfo * match_info);
extern GRegex *g_match_info_get_regex(const GMatchInfo * match_info);
extern const gchar *g_match_info_get_string(const GMatchInfo * match_info);
extern gboolean g_match_info_is_partial_match(const GMatchInfo *
					      match_info);
extern gboolean g_match_info_matches(const GMatchInfo * match_info);
extern gboolean g_match_info_next(GMatchInfo * match_info,
				  GError * *error);
extern GMatchInfo *g_match_info_ref(GMatchInfo * match_info);
extern void g_match_info_unref(GMatchInfo * match_info);
extern gpointer g_mem_chunk_alloc(GMemChunk * mem_chunk);
extern gpointer g_mem_chunk_alloc0(GMemChunk * mem_chunk);
extern void g_mem_chunk_clean(GMemChunk * mem_chunk);
extern void g_mem_chunk_destroy(GMemChunk * mem_chunk);
extern void g_mem_chunk_free(GMemChunk * mem_chunk, gpointer mem);
extern void g_mem_chunk_info(void);
extern GMemChunk *g_mem_chunk_new(const gchar * name, gint atom_size,
				  gulong area_size, gint type);
extern void g_mem_chunk_print(GMemChunk * mem_chunk);
extern void g_mem_chunk_reset(GMemChunk * mem_chunk);
extern gboolean g_mem_gc_friendly;
extern gboolean g_mem_is_system_malloc(void);
extern void g_mem_profile(void);
extern void g_mem_set_vtable(GMemVTable * vtable);
extern gpointer g_memdup(gconstpointer mem, guint byte_size);
extern gint g_mkdir_with_parents(const gchar * pathname, int mode);
extern gchar *g_mkdtemp(gchar * tmpl);
extern gchar *g_mkdtemp_full(gchar * tmpl, gint mode);
extern gint g_mkstemp(gchar * tmpl);
extern gint g_mkstemp_full(gchar * tmpl, gint flags, gint mode);
extern void g_mutex_clear(GMutex * mutex);
extern void g_mutex_free(GMutex * mutex);
extern void g_mutex_init(GMutex * mutex);
extern void g_mutex_lock(GMutex * mutex);
extern GMutex *g_mutex_new(void);
extern gboolean g_mutex_trylock(GMutex * mutex);
extern void g_mutex_unlock(GMutex * mutex);
extern gint g_node_child_index(GNode * node, gpointer data);
extern gint g_node_child_position(GNode * node, GNode * child);
extern void g_node_children_foreach(GNode * node, GTraverseFlags flags,
				    GNodeForeachFunc func, gpointer data);
extern GNode *g_node_copy(GNode * node);
extern GNode *g_node_copy_deep(GNode * node, GCopyFunc copy_func,
			       gpointer data);
extern guint g_node_depth(GNode * node);
extern void g_node_destroy(GNode * root);
extern GNode *g_node_find(GNode * root, GTraverseType order,
			  GTraverseFlags flags, gpointer data);
extern GNode *g_node_find_child(GNode * node, GTraverseFlags flags,
				gpointer data);
extern GNode *g_node_first_sibling(GNode * node);
extern GNode *g_node_get_root(GNode * node);
extern GNode *g_node_insert(GNode * parent, gint position, GNode * node);
extern GNode *g_node_insert_after(GNode * parent, GNode * sibling,
				  GNode * node);
extern GNode *g_node_insert_before(GNode * parent, GNode * sibling,
				   GNode * node);
extern gboolean g_node_is_ancestor(GNode * node, GNode * descendant);
extern GNode *g_node_last_child(GNode * node);
extern GNode *g_node_last_sibling(GNode * node);
extern guint g_node_max_height(GNode * root);
extern guint g_node_n_children(GNode * node);
extern guint g_node_n_nodes(GNode * root, GTraverseFlags flags);
extern GNode *g_node_new(gpointer data);
extern GNode *g_node_nth_child(GNode * node, guint n);
extern void g_node_pop_allocator(void);
extern GNode *g_node_prepend(GNode * parent, GNode * node);
extern void g_node_push_allocator(GAllocator * dummy);
extern void g_node_reverse_children(GNode * node);
extern void g_node_traverse(GNode * root, GTraverseType order,
			    GTraverseFlags flags, gint max_depth,
			    GNodeTraverseFunc func, gpointer data);
extern void g_node_unlink(GNode * node);
extern void g_nullify_pointer(gpointer * nullify_location);
extern void g_on_error_query(const gchar * prg_name);
extern void g_on_error_stack_trace(const gchar * prg_name);
extern gpointer g_once_impl(GOnce * once, GThreadFunc func, gpointer arg);
extern gboolean g_once_init_enter(volatile void *location);
extern gboolean g_once_init_enter_impl(volatile unsigned int *location);
extern void g_once_init_leave(volatile void *location, gsize result);
extern void g_option_context_add_group(GOptionContext * context,
				       GOptionGroup * group);
extern void g_option_context_add_main_entries(GOptionContext * context,
					      const GOptionEntry * entries,
					      const gchar *
					      translation_domain);
extern void g_option_context_free(GOptionContext * context);
extern const gchar *g_option_context_get_description(GOptionContext *
						     context);
extern gchar *g_option_context_get_help(GOptionContext * context,
					gboolean main_help,
					GOptionGroup * group);
extern gboolean g_option_context_get_help_enabled(GOptionContext *
						  context);
extern gboolean g_option_context_get_ignore_unknown_options(GOptionContext
							    * context);
extern GOptionGroup *g_option_context_get_main_group(GOptionContext *
						     context);
extern const gchar *g_option_context_get_summary(GOptionContext * context);
extern GOptionContext *g_option_context_new(const gchar *
					    parameter_string);
extern gboolean g_option_context_parse(GOptionContext * context,
				       gint * argc, gchar * **argv,
				       GError * *error);
extern void g_option_context_set_description(GOptionContext * context,
					     const gchar * description);
extern void g_option_context_set_help_enabled(GOptionContext * context,
					      gboolean help_enabled);
extern void g_option_context_set_ignore_unknown_options(GOptionContext *
							context,
							gboolean
							ignore_unknown);
extern void g_option_context_set_main_group(GOptionContext * context,
					    GOptionGroup * group);
extern void g_option_context_set_summary(GOptionContext * context,
					 const gchar * summary);
extern void g_option_context_set_translate_func(GOptionContext * context,
						GTranslateFunc func,
						gpointer data,
						GDestroyNotify
						destroy_notify);
extern void g_option_context_set_translation_domain(GOptionContext *
						    context,
						    const gchar * domain);
extern GQuark g_option_error_quark(void);
extern void g_option_group_add_entries(GOptionGroup * group,
				       const GOptionEntry * entries);
extern void g_option_group_free(GOptionGroup * group);
extern GOptionGroup *g_option_group_new(const gchar * name,
					const gchar * description,
					const gchar * help_description,
					gpointer user_data,
					GDestroyNotify destroy);
extern void g_option_group_set_error_hook(GOptionGroup * group,
					  GOptionErrorFunc error_func);
extern void g_option_group_set_parse_hooks(GOptionGroup * group,
					   GOptionParseFunc pre_parse_func,
					   GOptionParseFunc
					   post_parse_func);
extern void g_option_group_set_translate_func(GOptionGroup * group,
					      GTranslateFunc func,
					      gpointer data,
					      GDestroyNotify
					      destroy_notify);
extern void g_option_group_set_translation_domain(GOptionGroup * group,
						  const gchar * domain);
extern guint g_parse_debug_string(const gchar * string,
				  const GDebugKey * keys, guint nkeys);
extern gchar *g_path_get_basename(const gchar * file_name);
extern gchar *g_path_get_dirname(const gchar * file_name);
extern gboolean g_path_is_absolute(const gchar * file_name);
extern const gchar *g_path_skip_root(const gchar * file_name);
extern gboolean g_pattern_match(GPatternSpec * pspec, guint string_length,
				const gchar * string,
				const gchar * string_reversed);
extern gboolean g_pattern_match_simple(const gchar * pattern,
				       const gchar * string);
extern gboolean g_pattern_match_string(GPatternSpec * pspec,
				       const gchar * string);
extern gboolean g_pattern_spec_equal(GPatternSpec * pspec1,
				     GPatternSpec * pspec2);
extern void g_pattern_spec_free(GPatternSpec * pspec);
extern GPatternSpec *g_pattern_spec_new(const gchar * pattern);
extern void g_pointer_bit_lock(volatile void *address, gint lock_bit);
extern gboolean g_pointer_bit_trylock(volatile void *address,
				      gint lock_bit);
extern void g_pointer_bit_unlock(volatile void *address, gint lock_bit);
extern gint g_poll(GPollFD * fds, guint nfds, gint timeout);
extern void g_prefix_error(GError * *err, const gchar * format, ...);
extern void g_print(const gchar * format, ...);
extern void g_printerr(const gchar * format, ...);
extern gsize g_printf_string_upper_bound(const gchar * format,
					 va_list args);
extern void *g_private_get(GPrivate * key);
extern GPrivate *g_private_new(GDestroyNotify notify);
extern void g_private_replace(GPrivate * key, void *value);
extern void g_private_set(GPrivate * key, void *value);
extern void g_propagate_error(GError * *dest, GError * src);
extern void g_propagate_prefixed_error(GError * *dest, GError * src,
				       const gchar * format, ...);
extern void g_ptr_array_add(GPtrArray * array, gpointer data);
extern void g_ptr_array_foreach(GPtrArray * array, GFunc func,
				gpointer user_data);
extern gpointer *g_ptr_array_free(GPtrArray * array, gboolean free_seg);
extern GPtrArray *g_ptr_array_new(void);
extern GPtrArray *g_ptr_array_new_full(guint reserved_size,
				       GDestroyNotify element_free_func);
extern GPtrArray *g_ptr_array_new_with_free_func(GDestroyNotify
						 element_free_func);
extern GPtrArray *g_ptr_array_ref(GPtrArray * array);
extern gboolean g_ptr_array_remove(GPtrArray * array, gpointer data);
extern gboolean g_ptr_array_remove_fast(GPtrArray * array, gpointer data);
extern gpointer g_ptr_array_remove_index(GPtrArray * array, guint index_);
extern gpointer g_ptr_array_remove_index_fast(GPtrArray * array,
					      guint index_);
extern void g_ptr_array_remove_range(GPtrArray * array, guint index_,
				     guint length);
extern void g_ptr_array_set_free_func(GPtrArray * array,
				      GDestroyNotify element_free_func);
extern void g_ptr_array_set_size(GPtrArray * array, gint length);
extern GPtrArray *g_ptr_array_sized_new(guint reserved_size);
extern void g_ptr_array_sort(GPtrArray * array, GCompareFunc compare_func);
extern void g_ptr_array_sort_with_data(GPtrArray * array,
				       GCompareDataFunc compare_func,
				       gpointer user_data);
extern void g_ptr_array_unref(GPtrArray * array);
extern void g_qsort_with_data(gconstpointer pbase, gint total_elems,
			      gsize size, GCompareDataFunc compare_func,
			      gpointer user_data);
extern GQuark g_quark_from_static_string(const gchar * string);
extern GQuark g_quark_from_string(const gchar * string);
extern const gchar *g_quark_to_string(GQuark quark);
extern GQuark g_quark_try_string(const gchar * string);
extern void g_queue_clear(GQueue * queue);
extern GQueue *g_queue_copy(GQueue * queue);
extern void g_queue_delete_link(GQueue * queue, GList * link_);
extern GList *g_queue_find(GQueue * queue, gconstpointer data);
extern GList *g_queue_find_custom(GQueue * queue, gconstpointer data,
				  GCompareFunc func);
extern void g_queue_foreach(GQueue * queue, GFunc func,
			    gpointer user_data);
extern void g_queue_free(GQueue * queue);
extern void g_queue_free_full(GQueue * queue, GDestroyNotify free_func);
extern guint g_queue_get_length(GQueue * queue);
extern gint g_queue_index(GQueue * queue, gconstpointer data);
extern void g_queue_init(GQueue * queue);
extern void g_queue_insert_after(GQueue * queue, GList * sibling,
				 gpointer data);
extern void g_queue_insert_before(GQueue * queue, GList * sibling,
				  gpointer data);
extern void g_queue_insert_sorted(GQueue * queue, gpointer data,
				  GCompareDataFunc func,
				  gpointer user_data);
extern gboolean g_queue_is_empty(GQueue * queue);
extern gint g_queue_link_index(GQueue * queue, GList * link_);
extern GQueue *g_queue_new(void);
extern gpointer g_queue_peek_head(GQueue * queue);
extern GList *g_queue_peek_head_link(GQueue * queue);
extern gpointer g_queue_peek_nth(GQueue * queue, guint n);
extern GList *g_queue_peek_nth_link(GQueue * queue, guint n);
extern gpointer g_queue_peek_tail(GQueue * queue);
extern GList *g_queue_peek_tail_link(GQueue * queue);
extern gpointer g_queue_pop_head(GQueue * queue);
extern GList *g_queue_pop_head_link(GQueue * queue);
extern gpointer g_queue_pop_nth(GQueue * queue, guint n);
extern GList *g_queue_pop_nth_link(GQueue * queue, guint n);
extern gpointer g_queue_pop_tail(GQueue * queue);
extern GList *g_queue_pop_tail_link(GQueue * queue);
extern void g_queue_push_head(GQueue * queue, gpointer data);
extern void g_queue_push_head_link(GQueue * queue, GList * link_);
extern void g_queue_push_nth(GQueue * queue, gpointer data, gint n);
extern void g_queue_push_nth_link(GQueue * queue, gint n, GList * link_);
extern void g_queue_push_tail(GQueue * queue, gpointer data);
extern void g_queue_push_tail_link(GQueue * queue, GList * link_);
extern gboolean g_queue_remove(GQueue * queue, gconstpointer data);
extern guint g_queue_remove_all(GQueue * queue, gconstpointer data);
extern void g_queue_reverse(GQueue * queue);
extern void g_queue_sort(GQueue * queue, GCompareDataFunc compare_func,
			 gpointer user_data);
extern void g_queue_unlink(GQueue * queue, GList * link_);
extern GRand *g_rand_copy(GRand * rand_);
extern gdouble g_rand_double(GRand * rand_);
extern gdouble g_rand_double_range(GRand * rand_, gdouble begin,
				   gdouble end);
extern void g_rand_free(GRand * rand_);
extern guint32 g_rand_int(GRand * rand_);
extern gint32 g_rand_int_range(GRand * rand_, gint32 begin, gint32 end);
extern GRand *g_rand_new(void);
extern GRand *g_rand_new_with_seed(guint32 seed);
extern GRand *g_rand_new_with_seed_array(const guint32 * seed,
					 guint seed_length);
extern void g_rand_set_seed(GRand * rand_, guint32 seed);
extern void g_rand_set_seed_array(GRand * rand_, const guint32 * seed,
				  guint seed_length);
extern gdouble g_random_double(void);
extern gdouble g_random_double_range(gdouble begin, gdouble end);
extern guint32 g_random_int(void);
extern gint32 g_random_int_range(gint32 begin, gint32 end);
extern void g_random_set_seed(guint32 seed);
extern gpointer g_realloc(gpointer mem, gulong n_bytes);
extern void *g_realloc_n(void *mem, gsize n_blocks, gsize n_block_bytes);
extern void g_rec_mutex_clear(GRecMutex * rec_mutex);
extern void g_rec_mutex_init(GRecMutex * rec_mutex);
extern void g_rec_mutex_lock(GRecMutex * rec_mutex);
extern gboolean g_rec_mutex_trylock(GRecMutex * rec_mutex);
extern void g_rec_mutex_unlock(GRecMutex * rec_mutex);
extern gboolean g_regex_check_replacement(const gchar * replacement,
					  gboolean * has_references,
					  GError * *error);
extern GQuark g_regex_error_quark(void);
extern gchar *g_regex_escape_nul(const gchar * string, gint length);
extern gchar *g_regex_escape_string(const gchar * string, gint length);
extern gint g_regex_get_capture_count(const GRegex * regex);
extern GRegexCompileFlags g_regex_get_compile_flags(const GRegex * regex);
extern GRegexMatchFlags g_regex_get_match_flags(const GRegex * regex);
extern gint g_regex_get_max_backref(const GRegex * regex);
extern const gchar *g_regex_get_pattern(const GRegex * regex);
extern gint g_regex_get_string_number(const GRegex * regex,
				      const gchar * name);
extern gboolean g_regex_match(const GRegex * regex, const gchar * string,
			      GRegexMatchFlags match_options,
			      GMatchInfo * *match_info);
extern gboolean g_regex_match_all(const GRegex * regex,
				  const gchar * string,
				  GRegexMatchFlags match_options,
				  GMatchInfo * *match_info);
extern gboolean g_regex_match_all_full(const GRegex * regex,
				       const gchar * string,
				       gssize string_len,
				       gint start_position,
				       GRegexMatchFlags match_options,
				       GMatchInfo * *match_info,
				       GError * *error);
extern gboolean g_regex_match_full(const GRegex * regex,
				   const gchar * string, gssize string_len,
				   gint start_position,
				   GRegexMatchFlags match_options,
				   GMatchInfo * *match_info,
				   GError * *error);
extern gboolean g_regex_match_simple(const gchar * pattern,
				     const gchar * string,
				     GRegexCompileFlags compile_options,
				     GRegexMatchFlags match_options);
extern GRegex *g_regex_new(const gchar * pattern,
			   GRegexCompileFlags compile_options,
			   GRegexMatchFlags match_options,
			   GError * *error);
extern GRegex *g_regex_ref(GRegex * regex);
extern gchar *g_regex_replace(const GRegex * regex, const gchar * string,
			      gssize string_len, gint start_position,
			      const gchar * replacement,
			      GRegexMatchFlags match_options,
			      GError * *error);
extern gchar *g_regex_replace_eval(const GRegex * regex,
				   const gchar * string, gssize string_len,
				   gint start_position,
				   GRegexMatchFlags match_options,
				   GRegexEvalCallback eval,
				   void *user_data, GError * *error);
extern gchar *g_regex_replace_literal(const GRegex * regex,
				      const gchar * string,
				      gssize string_len,
				      gint start_position,
				      const gchar * replacement,
				      GRegexMatchFlags match_options,
				      GError * *error);
extern gchar **g_regex_split(const GRegex * regex, const gchar * string,
			     GRegexMatchFlags match_options);
extern gchar **g_regex_split_full(const GRegex * regex,
				  const gchar * string, gssize string_len,
				  gint start_position,
				  GRegexMatchFlags match_options,
				  gint max_tokens, GError * *error);
extern gchar **g_regex_split_simple(const gchar * pattern,
				    const gchar * string,
				    GRegexCompileFlags compile_options,
				    GRegexMatchFlags match_options);
extern void g_regex_unref(GRegex * regex);
extern gint g_relation_count(GRelation * relation, gconstpointer key,
			     gint field);
extern gint g_relation_delete(GRelation * relation, gconstpointer key,
			      gint field);
extern void g_relation_destroy(GRelation * relation);
extern gboolean g_relation_exists(GRelation * relation, ...);
extern void g_relation_index(GRelation * relation, gint field,
			     GHashFunc hash_func,
			     GEqualFunc key_equal_func);
extern void g_relation_insert(GRelation * relation, ...);
extern GRelation *g_relation_new(gint fields);
extern void g_relation_print(GRelation * relation);
extern GTuples *g_relation_select(GRelation * relation, gconstpointer key,
				  gint field);
extern void g_reload_user_special_dirs_cache(void);
extern void g_return_if_fail_warning(const char *log_domain,
				     const char *pretty_function,
				     const char *expression);
extern void g_rw_lock_clear(GRWLock * rw_lock);
extern void g_rw_lock_init(GRWLock * rw_lock);
extern void g_rw_lock_reader_lock(GRWLock * rw_lock);
extern gboolean g_rw_lock_reader_trylock(GRWLock * rw_lock);
extern void g_rw_lock_reader_unlock(GRWLock * rw_lock);
extern void g_rw_lock_writer_lock(GRWLock * rw_lock);
extern gboolean g_rw_lock_writer_trylock(GRWLock * rw_lock);
extern void g_rw_lock_writer_unlock(GRWLock * rw_lock);
extern guint g_scanner_cur_line(GScanner * scanner);
extern guint g_scanner_cur_position(GScanner * scanner);
extern GTokenType g_scanner_cur_token(GScanner * scanner);
extern GTokenValue g_scanner_cur_value(GScanner * scanner);
extern void g_scanner_destroy(GScanner * scanner);
extern gboolean g_scanner_eof(GScanner * scanner);
extern void g_scanner_error(GScanner * scanner, const gchar * format, ...);
extern GTokenType g_scanner_get_next_token(GScanner * scanner);
extern void g_scanner_input_file(GScanner * scanner, gint input_fd);
extern void g_scanner_input_text(GScanner * scanner, const gchar * text,
				 guint text_len);
extern gpointer g_scanner_lookup_symbol(GScanner * scanner,
					const gchar * symbol);
extern GScanner *g_scanner_new(const GScannerConfig * config_templ);
extern GTokenType g_scanner_peek_next_token(GScanner * scanner);
extern void g_scanner_scope_add_symbol(GScanner * scanner, guint scope_id,
				       const gchar * symbol,
				       gpointer value);
extern void g_scanner_scope_foreach_symbol(GScanner * scanner,
					   guint scope_id, GHFunc func,
					   gpointer user_data);
extern gpointer g_scanner_scope_lookup_symbol(GScanner * scanner,
					      guint scope_id,
					      const gchar * symbol);
extern void g_scanner_scope_remove_symbol(GScanner * scanner,
					  guint scope_id,
					  const gchar * symbol);
extern guint g_scanner_set_scope(GScanner * scanner, guint scope_id);
extern void g_scanner_sync_file_offset(GScanner * scanner);
extern void g_scanner_unexp_token(GScanner * scanner,
				  GTokenType expected_token,
				  const gchar * identifier_spec,
				  const gchar * symbol_spec,
				  const gchar * symbol_name,
				  const gchar * message, gint is_error);
extern void g_scanner_warn(GScanner * scanner, const gchar * format, ...);
extern GSequenceIter *g_sequence_append(GSequence * seq, void *data);
extern void g_sequence_foreach(GSequence * seq, GFunc func,
			       void *user_data);
extern void g_sequence_foreach_range(GSequenceIter * begin,
				     GSequenceIter * end, GFunc func,
				     void *user_data);
extern void g_sequence_free(GSequence * seq);
extern void *g_sequence_get(GSequenceIter * iter);
extern GSequenceIter *g_sequence_get_begin_iter(GSequence * seq);
extern GSequenceIter *g_sequence_get_end_iter(GSequence * seq);
extern GSequenceIter *g_sequence_get_iter_at_pos(GSequence * seq,
						 gint pos);
extern gint g_sequence_get_length(GSequence * seq);
extern GSequenceIter *g_sequence_insert_before(GSequenceIter * iter,
					       void *data);
extern GSequenceIter *g_sequence_insert_sorted(GSequence * seq, void *data,
					       GCompareDataFunc cmp_func,
					       void *cmp_data);
extern GSequenceIter *g_sequence_insert_sorted_iter(GSequence * seq,
						    void *data,
						    GSequenceIterCompareFunc
						    iter_cmp,
						    void *cmp_data);
extern gint g_sequence_iter_compare(GSequenceIter * a, GSequenceIter * b);
extern gint g_sequence_iter_get_position(GSequenceIter * iter);
extern GSequence *g_sequence_iter_get_sequence(GSequenceIter * iter);
extern gboolean g_sequence_iter_is_begin(GSequenceIter * iter);
extern gboolean g_sequence_iter_is_end(GSequenceIter * iter);
extern GSequenceIter *g_sequence_iter_move(GSequenceIter * iter,
					   gint delta);
extern GSequenceIter *g_sequence_iter_next(GSequenceIter * iter);
extern GSequenceIter *g_sequence_iter_prev(GSequenceIter * iter);
extern GSequenceIter *g_sequence_lookup(GSequence * seq, void *data,
					GCompareDataFunc cmp_func,
					void *cmp_data);
extern GSequenceIter *g_sequence_lookup_iter(GSequence * seq, void *data,
					     GSequenceIterCompareFunc
					     iter_cmp, void *cmp_data);
extern void g_sequence_move(GSequenceIter * src, GSequenceIter * dest);
extern void g_sequence_move_range(GSequenceIter * dest,
				  GSequenceIter * begin,
				  GSequenceIter * end);
extern GSequence *g_sequence_new(GDestroyNotify data_destroy);
extern GSequenceIter *g_sequence_prepend(GSequence * seq, void *data);
extern GSequenceIter *g_sequence_range_get_midpoint(GSequenceIter * begin,
						    GSequenceIter * end);
extern void g_sequence_remove(GSequenceIter * iter);
extern void g_sequence_remove_range(GSequenceIter * begin,
				    GSequenceIter * end);
extern GSequenceIter *g_sequence_search(GSequence * seq, void *data,
					GCompareDataFunc cmp_func,
					void *cmp_data);
extern GSequenceIter *g_sequence_search_iter(GSequence * seq, void *data,
					     GSequenceIterCompareFunc
					     iter_cmp, void *cmp_data);
extern void g_sequence_set(GSequenceIter * iter, void *data);
extern void g_sequence_sort(GSequence * seq, GCompareDataFunc cmp_func,
			    void *cmp_data);
extern void g_sequence_sort_changed(GSequenceIter * iter,
				    GCompareDataFunc cmp_func,
				    void *cmp_data);
extern void g_sequence_sort_changed_iter(GSequenceIter * iter,
					 GSequenceIterCompareFunc iter_cmp,
					 void *cmp_data);
extern void g_sequence_sort_iter(GSequence * seq,
				 GSequenceIterCompareFunc cmp_func,
				 void *cmp_data);
extern void g_sequence_swap(GSequenceIter * a, GSequenceIter * b);
extern void g_set_application_name(const gchar * application_name);
extern void g_set_error(GError * *err, GQuark domain, gint code,
			const gchar * format, ...);
extern void g_set_error_literal(GError * *err, GQuark domain, gint code,
				const gchar * message);
extern void g_set_prgname(const gchar * prgname);
extern GPrintFunc g_set_print_handler(GPrintFunc func);
extern GPrintFunc g_set_printerr_handler(GPrintFunc func);
extern gboolean g_setenv(const gchar * variable, const gchar * value,
			 gboolean overwrite);
extern GQuark g_shell_error_quark(void);
extern gboolean g_shell_parse_argv(const gchar * command_line,
				   gint * argcp, gchar * **argvp,
				   GError * *error);
extern gchar *g_shell_quote(const gchar * unquoted_string);
extern gchar *g_shell_unquote(const gchar * quoted_string,
			      GError * *error);
extern gpointer g_slice_alloc(gsize block_size);
extern gpointer g_slice_alloc0(gsize block_size);
extern void *g_slice_copy(gsize, gconstpointer);
extern void g_slice_free1(gsize block_size, gpointer mem_block);
extern void g_slice_free_chain_with_offset(gsize block_size,
					   gpointer mem_chain,
					   gsize next_offset);
extern GSList *g_slist_alloc(void);
extern GSList *g_slist_append(GSList * list, gpointer data);
extern GSList *g_slist_concat(GSList * list1, GSList * list2);
extern GSList *g_slist_copy(GSList * list);
extern GSList *g_slist_delete_link(GSList * list, GSList * link_);
extern GSList *g_slist_find(GSList * list, gconstpointer data);
extern GSList *g_slist_find_custom(GSList * list, gconstpointer data,
				   GCompareFunc func);
extern void g_slist_foreach(GSList * list, GFunc func, gpointer user_data);
extern void g_slist_free(GSList * list);
extern void g_slist_free_1(GSList * list);
extern void g_slist_free_full(GSList * list, GDestroyNotify free_func);
extern gint g_slist_index(GSList * list, gconstpointer data);
extern GSList *g_slist_insert(GSList * list, gpointer data, gint position);
extern GSList *g_slist_insert_before(GSList * slist, GSList * sibling,
				     gpointer data);
extern GSList *g_slist_insert_sorted(GSList * list, gpointer data,
				     GCompareFunc func);
extern GSList *g_slist_insert_sorted_with_data(GSList * list,
					       gpointer data,
					       GCompareDataFunc func,
					       gpointer user_data);
extern GSList *g_slist_last(GSList * list);
extern guint g_slist_length(GSList * list);
extern GSList *g_slist_nth(GSList * list, guint n);
extern gpointer g_slist_nth_data(GSList * list, guint n);
extern void g_slist_pop_allocator(void);
extern gint g_slist_position(GSList * list, GSList * llink);
extern GSList *g_slist_prepend(GSList * list, gpointer data);
extern void g_slist_push_allocator(GAllocator * dummy);
extern GSList *g_slist_remove(GSList * list, gconstpointer data);
extern GSList *g_slist_remove_all(GSList * list, gconstpointer data);
extern GSList *g_slist_remove_link(GSList * list, GSList * link_);
extern GSList *g_slist_reverse(GSList * list);
extern GSList *g_slist_sort(GSList * list, GCompareFunc compare_func);
extern GSList *g_slist_sort_with_data(GSList * list,
				      GCompareDataFunc compare_func,
				      gpointer user_data);
extern void g_source_add_child_source(GSource * source,
				      GSource * child_source);
extern void g_source_add_poll(GSource * source, GPollFD * fd);
extern guint g_source_attach(GSource * source, GMainContext * context);
extern void g_source_destroy(GSource * source);
extern gboolean g_source_get_can_recurse(GSource * source);
extern GMainContext *g_source_get_context(GSource * source);
extern void g_source_get_current_time(GSource * source,
				      GTimeVal * timeval);
extern guint g_source_get_id(GSource * source);
extern const char *g_source_get_name(GSource * source);
extern gint g_source_get_priority(GSource * source);
extern gint64 g_source_get_time(GSource * source);
extern gboolean g_source_is_destroyed(GSource * source);
extern GSource *g_source_new(GSourceFuncs * source_funcs,
			     guint struct_size);
extern GSource *g_source_ref(GSource * source);
extern gboolean g_source_remove(guint tag);
extern gboolean g_source_remove_by_funcs_user_data(GSourceFuncs * funcs,
						   gpointer user_data);
extern gboolean g_source_remove_by_user_data(gpointer user_data);
extern void g_source_remove_child_source(GSource * source,
					 GSource * child_source);
extern void g_source_remove_poll(GSource * source, GPollFD * fd);
extern void g_source_set_callback(GSource * source, GSourceFunc func,
				  gpointer data, GDestroyNotify notify);
extern void g_source_set_callback_indirect(GSource * source,
					   gpointer callback_data,
					   GSourceCallbackFuncs *
					   callback_funcs);
extern void g_source_set_can_recurse(GSource * source,
				     gboolean can_recurse);
extern void g_source_set_funcs(GSource * source, GSourceFuncs * funcs);
extern void g_source_set_name(GSource * source, const char *name);
extern void g_source_set_name_by_id(guint tag, const char *name);
extern void g_source_set_priority(GSource * source, gint priority);
extern void g_source_unref(GSource * source);
extern guint g_spaced_primes_closest(guint num);
extern gboolean g_spawn_async(const gchar * working_directory,
			      gchar * *argv, gchar * *envp,
			      GSpawnFlags flags,
			      GSpawnChildSetupFunc child_setup,
			      gpointer user_data, GPid * child_pid,
			      GError * *error);
extern gboolean g_spawn_async_with_pipes(const gchar * working_directory,
					 gchar * *argv, gchar * *envp,
					 GSpawnFlags flags,
					 GSpawnChildSetupFunc child_setup,
					 gpointer user_data,
					 GPid * child_pid,
					 gint * standard_input,
					 gint * standard_output,
					 gint * standard_error,
					 GError * *error);
extern void g_spawn_close_pid(GPid pid);
extern gboolean g_spawn_command_line_async(const gchar * command_line,
					   GError * *error);
extern gboolean g_spawn_command_line_sync(const gchar * command_line,
					  gchar * *standard_output,
					  gchar * *standard_error,
					  gint * exit_status,
					  GError * *error);
extern GQuark g_spawn_error_quark(void);
extern gboolean g_spawn_sync(const gchar * working_directory,
			     gchar * *argv, gchar * *envp,
			     GSpawnFlags flags,
			     GSpawnChildSetupFunc child_setup,
			     gpointer user_data, gchar * *standard_output,
			     gchar * *standard_error, gint * exit_status,
			     GError * *error);
extern void g_static_mutex_free(GStaticMutex * mutex);
extern GMutex *g_static_mutex_get_mutex_impl(GMutex * *mutex);
extern void g_static_mutex_init(GStaticMutex * mutex);
extern void g_static_private_free(GStaticPrivate * private_key);
extern gpointer g_static_private_get(GStaticPrivate * private_key);
extern void g_static_private_init(GStaticPrivate * private_key);
extern void g_static_private_set(GStaticPrivate * private_key,
				 gpointer data, GDestroyNotify notify);
extern void g_static_rec_mutex_free(GStaticRecMutex * mutex);
extern void g_static_rec_mutex_init(GStaticRecMutex * mutex);
extern void g_static_rec_mutex_lock(GStaticRecMutex * mutex);
extern void g_static_rec_mutex_lock_full(GStaticRecMutex * mutex,
					 guint depth);
extern gboolean g_static_rec_mutex_trylock(GStaticRecMutex * mutex);
extern void g_static_rec_mutex_unlock(GStaticRecMutex * mutex);
extern guint g_static_rec_mutex_unlock_full(GStaticRecMutex * mutex);
extern void g_static_rw_lock_free(GStaticRWLock * lock);
extern void g_static_rw_lock_init(GStaticRWLock * lock);
extern void g_static_rw_lock_reader_lock(GStaticRWLock * lock);
extern gboolean g_static_rw_lock_reader_trylock(GStaticRWLock * lock);
extern void g_static_rw_lock_reader_unlock(GStaticRWLock * lock);
extern void g_static_rw_lock_writer_lock(GStaticRWLock * lock);
extern gboolean g_static_rw_lock_writer_trylock(GStaticRWLock * lock);
extern void g_static_rw_lock_writer_unlock(GStaticRWLock * lock);
extern gchar *g_stpcpy(gchar * dest, const gchar * src);
extern gboolean g_str_equal(gconstpointer v1, gconstpointer v2);
extern gboolean g_str_has_prefix(const gchar * str, const gchar * prefix);
extern gboolean g_str_has_suffix(const gchar * str, const gchar * suffix);
extern guint g_str_hash(gconstpointer v);
extern gchar *g_strcanon(gchar * string, const gchar * valid_chars,
			 gchar substitutor);
extern gint g_strcasecmp(const char *s1, const char *s2);
extern gchar *g_strchomp(gchar * string);
extern gchar *g_strchug(gchar * string);
extern int g_strcmp0(const char *str1, const char *str2);
extern gchar *g_strcompress(const gchar * source);
extern gchar *g_strconcat(const gchar * string1, ...);
extern gchar *g_strdelimit(gchar * string, const gchar * delimiters,
			   gchar new_delimiter);
extern gchar *g_strdown(gchar * string);
extern gchar *g_strdup(const gchar * str);
extern gchar *g_strdup_printf(const gchar * format, ...);
extern gchar *g_strdup_vprintf(const gchar * format, va_list args);
extern gchar **g_strdupv(gchar * *str_array);
extern const gchar *g_strerror(gint errnum);
extern gchar *g_strescape(const gchar * source, const gchar * exceptions);
extern void g_strfreev(gchar * *str_array);
extern GString *g_string_append(GString * string, const gchar * val);
extern GString *g_string_append_c(GString * string, gchar c);
extern GString *g_string_append_len(GString * string, const gchar * val,
				    gssize len);
extern void g_string_append_printf(GString * string, const gchar * format,
				   ...);
extern GString *g_string_append_unichar(GString * string, gunichar wc);
extern GString *g_string_append_uri_escaped(GString * string,
					    const gchar * unescaped,
					    const gchar *
					    reserved_chars_allowed,
					    gboolean allow_utf8);
extern void g_string_append_vprintf(GString * string, const gchar * format,
				    va_list args);
extern GString *g_string_ascii_down(GString * string);
extern GString *g_string_ascii_up(GString * string);
extern GString *g_string_assign(GString * string, const gchar * rval);
extern void g_string_chunk_clear(GStringChunk * chunk);
extern void g_string_chunk_free(GStringChunk * chunk);
extern gchar *g_string_chunk_insert(GStringChunk * chunk,
				    const gchar * string);
extern gchar *g_string_chunk_insert_const(GStringChunk * chunk,
					  const gchar * string);
extern gchar *g_string_chunk_insert_len(GStringChunk * chunk,
					const gchar * string, gssize len);
extern GStringChunk *g_string_chunk_new(gsize size);
extern GString *g_string_down(GString * string);
extern gboolean g_string_equal(const GString * v, const GString * v2);
extern GString *g_string_erase(GString * string, gssize pos, gssize len);
extern gchar *g_string_free(GString * string, gboolean free_segment);
extern guint g_string_hash(const GString * str);
extern GString *g_string_insert(GString * string, gssize pos,
				const gchar * val);
extern GString *g_string_insert_c(GString * string, gssize pos, gchar c);
extern GString *g_string_insert_len(GString * string, gssize pos,
				    const gchar * val, gssize len);
extern GString *g_string_insert_unichar(GString * string, gssize pos,
					gunichar wc);
extern GString *g_string_new(const gchar * init);
extern GString *g_string_new_len(const gchar * init, gssize len);
extern GString *g_string_overwrite(GString * string, gsize pos,
				   const gchar * val);
extern GString *g_string_overwrite_len(GString * string, gsize pos,
				       const gchar * val, gssize len);
extern GString *g_string_prepend(GString * string, const gchar * val);
extern GString *g_string_prepend_c(GString * string, gchar c);
extern GString *g_string_prepend_len(GString * string, const gchar * val,
				     gssize len);
extern GString *g_string_prepend_unichar(GString * string, gunichar wc);
extern void g_string_printf(GString * string, const gchar * format, ...);
extern GString *g_string_set_size(GString * string, gsize len);
extern GString *g_string_sized_new(gsize dfl_size);
extern GString *g_string_truncate(GString * string, gsize len);
extern GString *g_string_up(GString * string);
extern void g_string_vprintf(GString * string, const gchar * format,
			     va_list args);
extern const gchar *g_strip_context(const gchar * msgid,
				    const gchar * msgval);
extern gchar *g_strjoin(const gchar * separator, ...);
extern gchar *g_strjoinv(const gchar * separator, gchar * *str_array);
extern gsize g_strlcat(gchar * dest, const gchar * src, gsize dest_size);
extern gsize g_strlcpy(gchar * dest, const gchar * src, gsize dest_size);
extern gint g_strncasecmp(const char *s1, const char *s2, guint n);
extern gchar *g_strndup(const gchar * str, gsize n);
extern gchar *g_strnfill(gsize length, gchar fill_char);
extern gchar *g_strreverse(gchar * string);
extern gchar *g_strrstr(const gchar * haystack, const gchar * needle);
extern gchar *g_strrstr_len(const gchar * haystack, gssize haystack_len,
			    const gchar * needle);
extern const gchar *g_strsignal(gint signum);
extern gchar **g_strsplit(const gchar * string, const gchar * delimiter,
			  gint max_tokens);
extern gchar **g_strsplit_set(const gchar * string,
			      const gchar * delimiters, gint max_tokens);
extern gchar *g_strstr_len(const gchar * haystack, gssize haystack_len,
			   const gchar * needle);
extern gdouble g_strtod(const gchar * nptr, gchar * *endptr);
extern gchar *g_strup(gchar * string);
extern guint g_strv_length(gchar * *str_array);
extern void g_test_add_data_func(const char *testpath,
				 gconstpointer test_data,
				 GTestDataFunc test_func);
extern void g_test_add_func(const char *testpath, GTestFunc test_func);
extern void g_test_add_vtable(const char *testpath, gsize data_size,
			      gconstpointer test_data,
			      GTestFixtureFunc data_setup,
			      GTestFixtureFunc data_test,
			      GTestFixtureFunc data_teardown);
extern void g_test_bug(const char *bug_uri_snippet);
extern void g_test_bug_base(const char *uri_pattern);
extern const GTestConfig *const g_test_config_vars;
extern GTestCase *g_test_create_case(const char *test_name,
				     gsize data_size,
				     gconstpointer test_data,
				     GTestFixtureFunc data_setup,
				     GTestFixtureFunc data_test,
				     GTestFixtureFunc data_teardown);
extern GTestSuite *g_test_create_suite(const char *suite_name);
extern void g_test_fail(void);
extern GTestSuite *g_test_get_root(void);
extern void g_test_init(int *argc, char ***argv, ...);
extern void g_test_log_buffer_free(GTestLogBuffer * tbuffer);
extern GTestLogBuffer *g_test_log_buffer_new(void);
extern GTestLogMsg *g_test_log_buffer_pop(GTestLogBuffer * tbuffer);
extern void g_test_log_buffer_push(GTestLogBuffer * tbuffer, guint n_bytes,
				   const unsigned char *bytes);
extern void g_test_log_msg_free(GTestLogMsg * tmsg);
extern void g_test_log_set_fatal_handler(GTestLogFatalFunc log_func,
					 gpointer user_data);
extern const char *g_test_log_type_name(GTestLogType log_type);
extern void g_test_maximized_result(double maximized_quantity,
				    const char *format, ...);
extern void g_test_message(const char *format, ...);
extern void g_test_minimized_result(double minimized_quantity,
				    const char *format, ...);
extern void g_test_queue_destroy(GDestroyNotify destroy_func,
				 gpointer destroy_data);
extern void g_test_queue_free(gpointer gfree_pointer);
extern double g_test_rand_double(void);
extern double g_test_rand_double_range(double range_start,
				       double range_end);
extern gint32 g_test_rand_int(void);
extern gint32 g_test_rand_int_range(gint32 begin, gint32 end);
extern int g_test_run(void);
extern int g_test_run_suite(GTestSuite * suite);
extern void g_test_suite_add(GTestSuite * suite, GTestCase * test_case);
extern void g_test_suite_add_suite(GTestSuite * suite,
				   GTestSuite * nestedsuite);
extern double g_test_timer_elapsed(void);
extern double g_test_timer_last(void);
extern void g_test_timer_start(void);
extern void g_test_trap_assertions(const char *domain, const char *file,
				   int line, const char *func,
				   guint64 assertion_flags,
				   const char *pattern);
extern gboolean g_test_trap_fork(guint64 usec_timeout,
				 GTestTrapFlags test_trap_flags);
extern gboolean g_test_trap_has_passed(void);
extern gboolean g_test_trap_reached_timeout(void);
extern GThread *g_thread_create(GThreadFunc func, void *data,
				gboolean joinable, GError * *error);
extern GThread *g_thread_create_full(GThreadFunc func, gpointer data,
				     gulong stack_size, gboolean joinable,
				     gboolean bound,
				     GThreadPriority priority,
				     GError * *error);
extern GQuark g_thread_error_quark(void);
extern void g_thread_exit(gpointer retval);
extern void g_thread_foreach(GFunc thread_func, gpointer user_data);
extern GThreadFunctions g_thread_functions_for_glib_use;
extern gboolean g_thread_get_initialized(void);
extern guint64 *g_thread_gettime(void);
extern void g_thread_init(GThreadFunctions * vtable);
extern void g_thread_init_with_errorcheck_mutexes(GThreadFunctions *
						  vtable);
extern gpointer g_thread_join(GThread * thread);
extern GThread *g_thread_new(const char *name, GThreadFunc func,
			     void *data);
extern void g_thread_pool_free(GThreadPool * pool, gboolean immediate,
			       gboolean wait_);
extern guint g_thread_pool_get_max_idle_time(void);
extern gint g_thread_pool_get_max_threads(GThreadPool * pool);
extern gint g_thread_pool_get_max_unused_threads(void);
extern guint g_thread_pool_get_num_threads(GThreadPool * pool);
extern guint g_thread_pool_get_num_unused_threads(void);
extern GThreadPool *g_thread_pool_new(GFunc func, gpointer user_data,
				      gint max_threads, gboolean exclusive,
				      GError * *error);
extern gboolean g_thread_pool_push(GThreadPool * pool, gpointer data,
				   GError * *error);
extern void g_thread_pool_set_max_idle_time(guint interval);
extern gboolean g_thread_pool_set_max_threads(GThreadPool * pool,
					      gint max_threads,
					      GError * *error);
extern void g_thread_pool_set_max_unused_threads(gint max_threads);
extern void g_thread_pool_set_sort_function(GThreadPool * pool,
					    GCompareDataFunc func,
					    gpointer user_data);
extern void g_thread_pool_stop_unused_threads(void);
extern guint g_thread_pool_unprocessed(GThreadPool * pool);
extern GThread *g_thread_ref(GThread * thread);
extern GThread *g_thread_self(void);
extern void g_thread_set_priority(GThread * thread,
				  GThreadPriority priority);
extern GThread *g_thread_try_new(const char *name, GThreadFunc func,
				 void *data, GError * *error);
extern void g_thread_unref(GThread * thread);
extern gboolean g_thread_use_default_impl;
extern void g_thread_yield(void);
extern gboolean g_threads_got_initialized;
extern void g_time_val_add(GTimeVal * time_, glong microseconds);
extern gboolean g_time_val_from_iso8601(const gchar * iso_date,
					GTimeVal * time);
extern gchar *g_time_val_to_iso8601(GTimeVal * time);
extern gint g_time_zone_adjust_time(GTimeZone * tz, GTimeType type,
				    gint64 * time_);
extern gint g_time_zone_find_interval(GTimeZone * tz, GTimeType type,
				      gint64 time_);
extern const gchar *g_time_zone_get_abbreviation(GTimeZone * tz,
						 gint interval);
extern gint32 g_time_zone_get_offset(GTimeZone * tz, gint interval);
extern gboolean g_time_zone_is_dst(GTimeZone * tz, gint interval);
extern GTimeZone *g_time_zone_new(const gchar * identifier);
extern GTimeZone *g_time_zone_new_local(void);
extern GTimeZone *g_time_zone_new_utc(void);
extern GTimeZone *g_time_zone_ref(GTimeZone * tz);
extern void g_time_zone_unref(GTimeZone * tz);
extern guint g_timeout_add(guint32 interval, GSourceFunc function,
			   gpointer data);
extern guint g_timeout_add_full(gint priority, guint interval,
				GSourceFunc function, gpointer data,
				GDestroyNotify notify);
extern guint g_timeout_add_seconds(guint interval, GSourceFunc function,
				   void *data);
extern guint g_timeout_add_seconds_full(gint priority, guint interval,
					GSourceFunc function, void *data,
					GDestroyNotify notify);
extern GSourceFuncs g_timeout_funcs;
extern GSource *g_timeout_source_new(guint interval);
extern GSource *g_timeout_source_new_seconds(guint interval);
extern void g_timer_continue(GTimer * timer);
extern void g_timer_destroy(GTimer * timer);
extern gdouble g_timer_elapsed(GTimer * timer, gulong * microseconds);
extern GTimer *g_timer_new(void);
extern void g_timer_reset(GTimer * timer);
extern void g_timer_start(GTimer * timer);
extern void g_timer_stop(GTimer * timer);
extern guint g_trash_stack_height(GTrashStack * *stack_p);
extern gpointer g_trash_stack_peek(GTrashStack * *stack_p);
extern gpointer g_trash_stack_pop(GTrashStack * *stack_p);
extern void g_trash_stack_push(GTrashStack * *stack_p, gpointer data_p);
extern void g_tree_destroy(GTree * tree);
extern void g_tree_foreach(GTree * tree, GTraverseFunc func,
			   gpointer user_data);
extern gint g_tree_height(GTree * tree);
extern void g_tree_insert(GTree * tree, gpointer key, gpointer value);
extern gpointer g_tree_lookup(GTree * tree, gconstpointer key);
extern gboolean g_tree_lookup_extended(GTree * tree,
				       gconstpointer lookup_key,
				       gpointer * orig_key,
				       gpointer * value);
extern GTree *g_tree_new(GCompareFunc key_compare_func);
extern GTree *g_tree_new_full(GCompareDataFunc key_compare_func,
			      gpointer key_compare_data,
			      GDestroyNotify key_destroy_func,
			      GDestroyNotify value_destroy_func);
extern GTree *g_tree_new_with_data(GCompareDataFunc key_compare_func,
				   gpointer key_compare_data);
extern gint g_tree_nnodes(GTree * tree);
extern GTree *g_tree_ref(GTree * tree);
extern gboolean g_tree_remove(GTree * tree, gconstpointer key);
extern void g_tree_replace(GTree * tree, gpointer key, gpointer value);
extern gpointer g_tree_search(GTree * tree, GCompareFunc search_func,
			      gconstpointer user_data);
extern gboolean g_tree_steal(GTree * tree, gconstpointer key);
extern void g_tree_traverse(GTree * tree, GTraverseFunc traverse_func,
			    GTraverseType traverse_type, void *user_data);
extern void g_tree_unref(GTree * tree);
extern gpointer g_try_malloc(gulong n_bytes);
extern void *g_try_malloc0(gsize n_bytes);
extern void *g_try_malloc0_n(gsize n_blocks, gsize n_block_bytes);
extern void *g_try_malloc_n(gsize n_blocks, gsize n_block_bytes);
extern gpointer g_try_realloc(gpointer mem, gulong n_bytes);
extern void *g_try_realloc_n(void *mem, gsize n_blocks,
			     gsize n_block_bytes);
extern void g_tuples_destroy(GTuples * tuples);
extern gpointer g_tuples_index(GTuples * tuples, gint index_, gint field);
extern gunichar2 *g_ucs4_to_utf16(const gunichar * str, glong len,
				  glong * items_read,
				  glong * items_written, GError * *error);
extern gchar *g_ucs4_to_utf8(const gunichar * str, glong len,
			     glong * items_read, glong * items_written,
			     GError * *error);
extern GUnicodeBreakType g_unichar_break_type(gunichar c);
extern gint g_unichar_combining_class(gunichar uc);
extern gboolean g_unichar_compose(gunichar a, gunichar b, gunichar * ch);
extern gboolean g_unichar_decompose(gunichar ch, gunichar * a,
				    gunichar * b);
extern gint g_unichar_digit_value(gunichar c);
extern gsize g_unichar_fully_decompose(gunichar ch, gboolean compat,
				       gunichar * result,
				       gsize result_len);
extern gboolean g_unichar_get_mirror_char(gunichar ch,
					  gunichar * mirrored_ch);
extern GUnicodeScript g_unichar_get_script(gunichar ch);
extern gboolean g_unichar_isalnum(gunichar c);
extern gboolean g_unichar_isalpha(gunichar c);
extern gboolean g_unichar_iscntrl(gunichar c);
extern gboolean g_unichar_isdefined(gunichar c);
extern gboolean g_unichar_isdigit(gunichar c);
extern gboolean g_unichar_isgraph(gunichar c);
extern gboolean g_unichar_islower(gunichar c);
extern gboolean g_unichar_ismark(gunichar c);
extern gboolean g_unichar_isprint(gunichar c);
extern gboolean g_unichar_ispunct(gunichar c);
extern gboolean g_unichar_isspace(gunichar c);
extern gboolean g_unichar_istitle(gunichar c);
extern gboolean g_unichar_isupper(gunichar c);
extern gboolean g_unichar_iswide(gunichar c);
extern gboolean g_unichar_iswide_cjk(gunichar c);
extern gboolean g_unichar_isxdigit(gunichar c);
extern gboolean g_unichar_iszerowidth(gunichar c);
extern gint g_unichar_to_utf8(gunichar c, gchar * outbuf);
extern gunichar g_unichar_tolower(gunichar c);
extern gunichar g_unichar_totitle(gunichar c);
extern gunichar g_unichar_toupper(gunichar c);
extern GUnicodeType g_unichar_type(gunichar c);
extern gboolean g_unichar_validate(gunichar ch);
extern gint g_unichar_xdigit_value(gunichar c);
extern gunichar *g_unicode_canonical_decomposition(gunichar ch,
						   gsize * result_len);
extern void g_unicode_canonical_ordering(gunichar * string, gsize len);
extern GUnicodeScript g_unicode_script_from_iso15924(guint32 iso15924);
extern guint32 g_unicode_script_to_iso15924(GUnicodeScript script);
extern void g_unsetenv(const gchar * variable);
extern char *g_uri_escape_string(const char *unescaped,
				 const char *reserved_chars_allowed,
				 gboolean allow_utf8);
extern gchar **g_uri_list_extract_uris(const gchar * uri_list);
extern char *g_uri_parse_scheme(const char *uri);
extern char *g_uri_unescape_segment(const char *escaped_string,
				    const char *escaped_string_end,
				    const char *illegal_characters);
extern char *g_uri_unescape_string(const char *escaped_string,
				   const char *illegal_characters);
extern void g_usleep(gulong microseconds);
extern gunichar *g_utf16_to_ucs4(const gunichar2 * str, glong len,
				 glong * items_read, glong * items_written,
				 GError * *error);
extern gchar *g_utf16_to_utf8(const gunichar2 * str, glong len,
			      glong * items_read, glong * items_written,
			      GError * *error);
extern gchar *g_utf8_casefold(const gchar * str, gssize len);
extern gint g_utf8_collate(const gchar * str1, const gchar * str2);
extern gchar *g_utf8_collate_key(const gchar * str, gssize len);
extern gchar *g_utf8_collate_key_for_filename(const gchar * str,
					      gssize len);
extern gchar *g_utf8_find_next_char(const gchar * p, const gchar * end);
extern gchar *g_utf8_find_prev_char(const gchar * str, const gchar * p);
extern gunichar g_utf8_get_char(const gchar * p);
extern gunichar g_utf8_get_char_validated(const gchar * p, gssize max_len);
extern gchar *g_utf8_normalize(const gchar * str, gssize len,
			       GNormalizeMode mode);
extern gchar *g_utf8_offset_to_pointer(const gchar * str, glong offset);
extern glong g_utf8_pointer_to_offset(const gchar * str,
				      const gchar * pos);
extern gchar *g_utf8_prev_char(const gchar * p);
extern const gchar *const g_utf8_skip;
extern gchar *g_utf8_strchr(const gchar * p, gssize len, gunichar c);
extern gchar *g_utf8_strdown(const gchar * str, gssize len);
extern glong g_utf8_strlen(const gchar * p, gssize max);
extern gchar *g_utf8_strncpy(gchar * dest, const gchar * src, gsize n);
extern gchar *g_utf8_strrchr(const gchar * p, gssize len, gunichar c);
extern gchar *g_utf8_strreverse(const gchar * str, gssize len);
extern gchar *g_utf8_strup(const gchar * str, gssize len);
extern gchar *g_utf8_substring(const gchar * str, glong start_pos,
			       glong end_pos);
extern gunichar *g_utf8_to_ucs4(const gchar * str, glong len,
				glong * items_read, glong * items_written,
				GError * *error);
extern gunichar *g_utf8_to_ucs4_fast(const gchar * str, glong len,
				     glong * items_written);
extern gunichar2 *g_utf8_to_utf16(const gchar * str, glong len,
				  glong * items_read,
				  glong * items_written, GError * *error);
extern gboolean g_utf8_validate(const gchar * str, gssize max_len,
				const gchar * *end);
extern void g_variant_builder_add(GVariantBuilder * builder,
				  const gchar * format_string, ...);
extern void g_variant_builder_add_parsed(GVariantBuilder * builder,
					 const gchar * format, ...);
extern void g_variant_builder_add_value(GVariantBuilder * builder,
					GVariant * value);
extern void g_variant_builder_clear(GVariantBuilder * builder);
extern void g_variant_builder_close(GVariantBuilder * builder);
extern GVariant *g_variant_builder_end(GVariantBuilder * builder);
extern void g_variant_builder_init(GVariantBuilder * builder,
				   const GVariantType * type);
extern GVariantBuilder *g_variant_builder_new(const GVariantType * type);
extern void g_variant_builder_open(GVariantBuilder * builder,
				   const GVariantType * type);
extern GVariantBuilder *g_variant_builder_ref(GVariantBuilder * builder);
extern void g_variant_builder_unref(GVariantBuilder * builder);
extern GVariant *g_variant_byteswap(GVariant * value);
extern GVariantClass g_variant_classify(GVariant * value);
extern gint g_variant_compare(gconstpointer one, gconstpointer two);
extern gchar *g_variant_dup_bytestring(GVariant * value, gsize * length);
extern gchar **g_variant_dup_bytestring_array(GVariant * value,
					      gsize * length);
extern gchar **g_variant_dup_objv(GVariant * value, gsize * length);
extern gchar *g_variant_dup_string(GVariant * value, gsize * length);
extern gchar **g_variant_dup_strv(GVariant * value, gsize * length);
extern gboolean g_variant_equal(gconstpointer one, gconstpointer two);
extern void g_variant_get(GVariant * value, const gchar * format_string,
			  ...);
extern gboolean g_variant_get_boolean(GVariant * value);
extern guchar g_variant_get_byte(GVariant * value);
extern const gchar *g_variant_get_bytestring(GVariant * value);
extern const gchar **g_variant_get_bytestring_array(GVariant * value,
						    gsize * length);
extern void g_variant_get_child(GVariant * value, gsize index_,
				const gchar * format_string, ...);
extern GVariant *g_variant_get_child_value(GVariant * value, gsize index_);
extern gconstpointer g_variant_get_data(GVariant * value);
extern gdouble g_variant_get_double(GVariant * value);
extern gconstpointer g_variant_get_fixed_array(GVariant * value,
					       gsize * n_elements,
					       gsize element_size);
extern gint32 g_variant_get_handle(GVariant * value);
extern gint16 g_variant_get_int16(GVariant * value);
extern gint32 g_variant_get_int32(GVariant * value);
extern gint64 g_variant_get_int64(GVariant * value);
extern GVariant *g_variant_get_maybe(GVariant * value);
extern GVariant *g_variant_get_normal_form(GVariant * value);
extern const gchar **g_variant_get_objv(GVariant * value, gsize * length);
extern gsize g_variant_get_size(GVariant * value);
extern const gchar *g_variant_get_string(GVariant * value, gsize * length);
extern const gchar **g_variant_get_strv(GVariant * value, gsize * length);
extern const GVariantType *g_variant_get_type(GVariant * value);
extern const gchar *g_variant_get_type_string(GVariant * value);
extern guint16 g_variant_get_uint16(GVariant * value);
extern guint32 g_variant_get_uint32(GVariant * value);
extern guint64 g_variant_get_uint64(GVariant * value);
extern void g_variant_get_va(GVariant * value, const gchar * format_string,
			     const gchar * *endptr, va_list * app);
extern GVariant *g_variant_get_variant(GVariant * value);
extern guint g_variant_hash(gconstpointer value);
extern gboolean g_variant_is_container(GVariant * value);
extern gboolean g_variant_is_floating(GVariant * value);
extern gboolean g_variant_is_normal_form(GVariant * value);
extern gboolean g_variant_is_object_path(const gchar * string);
extern gboolean g_variant_is_of_type(GVariant * value,
				     const GVariantType * type);
extern gboolean g_variant_is_signature(const gchar * string);
extern GVariantIter *g_variant_iter_copy(GVariantIter * iter);
extern void g_variant_iter_free(GVariantIter * iter);
extern gsize g_variant_iter_init(GVariantIter * iter, GVariant * value);
extern gboolean g_variant_iter_loop(GVariantIter * iter,
				    const gchar * format_string, ...);
extern gsize g_variant_iter_n_children(GVariantIter * iter);
extern GVariantIter *g_variant_iter_new(GVariant * value);
extern gboolean g_variant_iter_next(GVariantIter * iter,
				    const gchar * format_string, ...);
extern GVariant *g_variant_iter_next_value(GVariantIter * iter);
extern gboolean g_variant_lookup(GVariant * dictionary, const gchar * key,
				 const gchar * format_string, ...);
extern GVariant *g_variant_lookup_value(GVariant * dictionary,
					const gchar * key,
					const GVariantType *
					expected_type);
extern gsize g_variant_n_children(GVariant * value);
extern GVariant *g_variant_new(const gchar * format_string, ...);
extern GVariant *g_variant_new_array(const GVariantType * child_type,
				     GVariant * const *children,
				     gsize n_children);
extern GVariant *g_variant_new_boolean(gboolean value);
extern GVariant *g_variant_new_byte(guchar value);
extern GVariant *g_variant_new_bytestring(const gchar * string);
extern GVariant *g_variant_new_bytestring_array(const gchar * const *strv,
						gssize length);
extern GVariant *g_variant_new_dict_entry(GVariant * key,
					  GVariant * value);
extern GVariant *g_variant_new_double(gdouble value);
extern GVariant *g_variant_new_fixed_array(const GVariantType *
					   element_type,
					   gconstpointer elements,
					   gsize n_elements,
					   gsize element_size);
extern GVariant *g_variant_new_from_data(const GVariantType * type,
					 gconstpointer data, gsize size,
					 gboolean trusted,
					 GDestroyNotify notify,
					 void *user_data);
extern GVariant *g_variant_new_handle(gint32 value);
extern GVariant *g_variant_new_int16(gint16 value);
extern GVariant *g_variant_new_int32(gint32 value);
extern GVariant *g_variant_new_int64(gint64 value);
extern GVariant *g_variant_new_maybe(const GVariantType * child_type,
				     GVariant * child);
extern GVariant *g_variant_new_object_path(const gchar * object_path);
extern GVariant *g_variant_new_objv(const gchar * const *strv,
				    gssize length);
extern GVariant *g_variant_new_parsed(const gchar * format, ...);
extern GVariant *g_variant_new_parsed_va(const gchar * format,
					 va_list * app);
extern GVariant *g_variant_new_signature(const gchar * signature);
extern GVariant *g_variant_new_string(const gchar * string);
extern GVariant *g_variant_new_strv(const gchar * const *strv,
				    gssize length);
extern GVariant *g_variant_new_tuple(GVariant * const *children,
				     gsize n_children);
extern GVariant *g_variant_new_uint16(guint16 value);
extern GVariant *g_variant_new_uint32(guint32 value);
extern GVariant *g_variant_new_uint64(guint64 value);
extern GVariant *g_variant_new_va(const gchar * format_string,
				  const gchar * *endptr, va_list * app);
extern GVariant *g_variant_new_variant(GVariant * value);
extern GVariant *g_variant_parse(const GVariantType * type,
				 const char *text, const char *limit,
				 const char **endptr, GError * *error);
extern GQuark g_variant_parser_get_error_quark(void);
extern gchar *g_variant_print(GVariant * value, gboolean type_annotate);
extern GString *g_variant_print_string(GVariant * value, GString * string,
				       gboolean type_annotate);
extern GVariant *g_variant_ref(GVariant * value);
extern GVariant *g_variant_ref_sink(GVariant * value);
extern void g_variant_store(GVariant * value, void *data);
extern GVariant *g_variant_take_ref(GVariant * value);
extern const GVariantType *g_variant_type_checked_(const gchar *);
extern GVariantType *g_variant_type_copy(const GVariantType * type);
extern gchar *g_variant_type_dup_string(const GVariantType * type);
extern const GVariantType *g_variant_type_element(const GVariantType *
						  type);
extern gboolean g_variant_type_equal(gconstpointer type1,
				     gconstpointer type2);
extern const GVariantType *g_variant_type_first(const GVariantType * type);
extern void g_variant_type_free(GVariantType * type);
extern gsize g_variant_type_get_string_length(const GVariantType * type);
extern guint g_variant_type_hash(gconstpointer type);
extern gboolean g_variant_type_is_array(const GVariantType * type);
extern gboolean g_variant_type_is_basic(const GVariantType * type);
extern gboolean g_variant_type_is_container(const GVariantType * type);
extern gboolean g_variant_type_is_definite(const GVariantType * type);
extern gboolean g_variant_type_is_dict_entry(const GVariantType * type);
extern gboolean g_variant_type_is_maybe(const GVariantType * type);
extern gboolean g_variant_type_is_subtype_of(const GVariantType * type,
					     const GVariantType *
					     supertype);
extern gboolean g_variant_type_is_tuple(const GVariantType * type);
extern gboolean g_variant_type_is_variant(const GVariantType * type);
extern const GVariantType *g_variant_type_key(const GVariantType * type);
extern gsize g_variant_type_n_items(const GVariantType * type);
extern GVariantType *g_variant_type_new(const gchar * type_string);
extern GVariantType *g_variant_type_new_array(const GVariantType *
					      element);
extern GVariantType *g_variant_type_new_dict_entry(const GVariantType *
						   key,
						   const GVariantType *
						   value);
extern GVariantType *g_variant_type_new_maybe(const GVariantType *
					      element);
extern GVariantType *g_variant_type_new_tuple(const GVariantType *
					      const *items, gint length);
extern const GVariantType *g_variant_type_next(const GVariantType * type);
extern const char *g_variant_type_peek_string(const GVariantType * type);
extern gboolean g_variant_type_string_is_valid(const gchar * type_string);
extern gboolean g_variant_type_string_scan(const gchar * string,
					   const gchar * limit,
					   const gchar * *endptr);
extern const GVariantType *g_variant_type_value(const GVariantType * type);
extern void g_variant_unref(GVariant * value);
extern void g_warn_message(const char *domain, const char *file, int line,
			   const char *func, const char *warnexpr);
extern const guint glib_binary_age;
extern const gchar *glib_check_version(guint required_major,
				       guint required_minor,
				       guint required_micro);
extern const guint glib_interface_age;
extern const guint glib_major_version;
extern GMemVTable *glib_mem_profiler_table;
extern const guint glib_micro_version;
extern const guint glib_minor_version;
</SCREEN>
</SECT2>
<SECT2>
<TITLE>glib-2.0/glib/gi18n.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define __G_I18N_H__
#define NC_(Context,String)	(String)
#define N_(String)	(String)
#define _(String)	gettext (String)
#define Q_(String)	g_strip_context ((String), gettext (String))
</SCREEN>
</SECT2>
<SECT2>
<TITLE>glib-2.0/glib/gprintf.h</TITLE>
<PARA>
</PARA>
<SCREEN>

extern gint g_fprintf(FILE * file, const gchar * format, ...);
extern gint g_printf(const gchar * format, ...);
extern gint g_snprintf(gchar * string, gulong n, const gchar * format,
		       ...);
extern gint g_sprintf(gchar * string, const gchar * format, ...);
extern gint g_vasprintf(gchar * *string, const gchar * format,
			va_list args);
extern gint g_vfprintf(FILE * file, const gchar * format, va_list args);
extern gint g_vprintf(const gchar * format, va_list args);
extern gint g_vsnprintf(gchar * string, gulong n, const gchar * format,
			va_list args);
extern gint g_vsprintf(gchar * string, const gchar * format, va_list args);
</SCREEN>
</SECT2>
<SECT2>
<TITLE>glib-2.0/glib/gstdio.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define g_access	access
#define g_chdir	chdir
#define g_chmod	chmod
#define g_creat	creat
#define g_fopen	fopen
#define g_freopen	freopen
#define g_lstat	lstat
#define g_mkdir	mkdir
#define g_open	open
#define g_remove	remove
#define g_rename	rename
#define g_rmdir	rmdir
#define g_stat	stat
#define g_unlink	unlink

typedef struct stat GStatBuf;
</SCREEN>
</SECT2>
</SECT1>
<SECT1 ID=libglib-2.0man>
<TITLE>Interface Definitions for libglib-2.0</TITLE>
<PARA>
The interfaces defined on the following pages are included in libglib-2.0 and are defined
by this specification.
Unless otherwise noted, these interfaces shall be included
in the source standard.
</PARA>
<PARA>
Other interfaces listed in <XREF LINKEND=libglib-2.0> shall behave as described
in the referenced base document.
</PARA>
<!-- MISSING DEFINITION FOR g_assertion_message -->
<!-- Lets just hope nobody notices -->
<!-- MISSING DEFINITION FOR g_assertion_message_cmpnum -->
<!-- Lets just hope nobody notices -->
<!-- MISSING DEFINITION FOR g_assertion_message_cmpstr -->
<!-- Lets just hope nobody notices -->
<!-- MISSING DEFINITION FOR g_assertion_message_error -->
<!-- Lets just hope nobody notices -->
<!-- MISSING DEFINITION FOR g_assertion_message_expr -->
<!-- Lets just hope nobody notices -->
<refentry id="libglib-2.0-g-cache-value-foreach-1">

<refmeta>
<refentrytitle>g_cache_value_foreach</refentrytitle>
<refmiscinfo>libglib-2.0</refmiscinfo>
</refmeta>

<refnamediv>
<refname>g_cache_value_foreach</refname>
<refpurpose>call specified interface for each value in GCache (DEPRECATED)</refpurpose>
<indexterm id="ix-libglib-2.0-g-cache-value-foreach-1">
	<primary>g_cache_value_foreach</primary></indexterm>
</refnamediv>
<refsynopsisdiv>
<funcsynopsis>
<funcsynopsisinfo>
#include &lt;glib-2.0/glib.h&gt;
</funcsynopsisinfo><funcprototype>
<funcdef>void
<function>g_cache_value_foreach</function>
</funcdef>
<paramdef>GCache *
<parameter>cache</parameter>
</paramdef>
<paramdef>GHFunc
<parameter>func</parameter>
</paramdef>
<paramdef>gpointer
<parameter>user_data</parameter>
</paramdef>

</funcprototype>
</funcsynopsis>
</refsynopsisdiv>
<refsect1>
<title>Description</title>
<para>The interface <function>g_cache_value_foreach</function> shall
behave as described in <xref linkend="std.Glib">.
However, this interface is deprecated
and should not be used in newly-written code, because
it passes pointers to unspecified internal data structures to 
<parameter>func</parameter>.
Use <function>g_cache_key_foreach</function> instead.
</para>

</refsect1>

</REFENTRY>



<!-- MISSING DEFINITION FOR g_once_init_enter_impl -->
<!-- Lets just hope nobody notices -->
<!-- MISSING DEFINITION FOR g_regex_error_quark -->
<!-- Lets just hope nobody notices -->
<!-- MISSING DEFINITION FOR g_test_add_vtable -->
<!-- Lets just hope nobody notices -->
<!-- MISSING DEFINITION FOR g_test_config_vars -->
<!-- Lets just hope nobody notices -->
<!-- MISSING DEFINITION FOR g_test_log_buffer_free -->
<!-- Lets just hope nobody notices -->
<!-- MISSING DEFINITION FOR g_test_log_buffer_new -->
<!-- Lets just hope nobody notices -->
<!-- MISSING DEFINITION FOR g_test_log_buffer_pop -->
<!-- Lets just hope nobody notices -->
<!-- MISSING DEFINITION FOR g_test_log_buffer_push -->
<!-- Lets just hope nobody notices -->
<!-- MISSING DEFINITION FOR g_test_log_msg_free -->
<!-- Lets just hope nobody notices -->
<!-- MISSING DEFINITION FOR g_test_log_type_name -->
<!-- Lets just hope nobody notices -->
<!-- MISSING DEFINITION FOR g_test_trap_assertions -->
<!-- Lets just hope nobody notices -->
<!-- MISSING DEFINITION FOR g_thread_gettime -->
<!-- Lets just hope nobody notices -->
<!-- MISSING DEFINITION FOR g_variant_parser_get_error_quark -->
<!-- Lets just hope nobody notices -->
<!-- MISSING DEFINITION FOR g_variant_type_checked_ -->
<!-- Lets just hope nobody notices -->
<!-- MISSING DEFINITION FOR g_warn_message -->
<!-- Lets just hope nobody notices -->
</SECT1>
<!-- End of text generated from database -->

<!-- Start of generated text - do not edit! -->
<!-- generated from the LSB specification database by mklibspec -->
<SECT1 ID=libgobject-2.0>
<TITLE>Interfaces for libgobject-2.0</TITLE>
<PARA>
<XREF LINKEND="lib-libgobject-2.0-def"> defines the library name and shared object name
for the libgobject-2.0 library
</PARA>
<TABLE id="lib-libgobject-2.0-def">
<TITLE>libgobject-2.0 Definition</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Library:</ENTRY>
<ENTRY>libgobject-2.0</ENTRY>
</ROW>
<ROW>
<ENTRY>SONAME:</ENTRY>
<ENTRY>libgobject-2.0.so.0</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The behavior of the interfaces in this library is specified by the following specifications:<SIMPLELIST COLUMNS=1>
<MEMBER ID='REFSTD.libgobject.2.0.1'>
[Gobject 2.32] <XREF LINKEND="std.Gobject">
</MEMBER>
<MEMBER ID='REFSTD.libgobject.2.0.2'>
[LSB] <XREF LINKEND="std.LSB">
</MEMBER>
</SIMPLELIST>
</PARA>
<!-- debug: database interface name Gobject GTypeModule -->
<SECT2>
<!--libgroup-->
<TITLE>Gobject GTypeModule</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Interfaces for Gobject GTypeModule</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic functions
for Gobject GTypeModule specified in <XREF linkend="tbl-libgobject-2.0-gobje-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<TABLE id="tbl-libgobject-2.0-gobje-ints">
<TITLE>libgobject-2.0 - Gobject GTypeModule Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>g_binding_flags_get_type</primary></indexterm>g_binding_flags_get_type <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_binding_get_type</primary></indexterm>g_binding_get_type <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_cclosure_marshal_generic</primary></indexterm>g_cclosure_marshal_generic <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_cclosure_marshal_generic_va</primary></indexterm>g_cclosure_marshal_generic_va <LINK LINKEND="REFSTD.libgobject.2.0.2">[LSB]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_clear_object</primary></indexterm>g_clear_object <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_object_class_install_properties</primary></indexterm>g_object_class_install_properties <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_object_compat_control</primary></indexterm>g_object_compat_control <LINK LINKEND="REFSTD.libgobject.2.0.2">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_object_get_type</primary></indexterm>g_object_get_type <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_object_notify_by_pspec</primary></indexterm>g_object_notify_by_pspec <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_param_spec_variant</primary></indexterm>g_param_spec_variant <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_signal_accumulator_first_wins</primary></indexterm>g_signal_accumulator_first_wins <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_signal_chain_from_overridden_handler</primary></indexterm>g_signal_chain_from_overridden_handler <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_signal_new_class_handler</primary></indexterm>g_signal_new_class_handler <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_signal_override_class_handler</primary></indexterm>g_signal_override_class_handler <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_signal_set_va_marshaller</primary></indexterm>g_signal_set_va_marshaller <LINK LINKEND="REFSTD.libgobject.2.0.2">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_source_set_dummy_callback</primary></indexterm>g_source_set_dummy_callback <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_type_add_class_private</primary></indexterm>g_type_add_class_private <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_type_class_get_private</primary></indexterm>g_type_class_get_private <LINK LINKEND="REFSTD.libgobject.2.0.2">[LSB]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_type_module_add_interface</primary></indexterm>g_type_module_add_interface <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_type_module_get_type</primary></indexterm>g_type_module_get_type <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_type_module_register_enum</primary></indexterm>g_type_module_register_enum <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_type_module_register_flags</primary></indexterm>g_type_module_register_flags <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_type_module_register_type</primary></indexterm>g_type_module_register_type <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_type_module_set_name</primary></indexterm>g_type_module_set_name <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_type_module_unuse</primary></indexterm>g_type_module_unuse <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_type_module_use</primary></indexterm>g_type_module_use <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_value_dup_variant</primary></indexterm>g_value_dup_variant <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_value_get_schar</primary></indexterm>g_value_get_schar <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_value_get_variant</primary></indexterm>g_value_get_variant <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_value_set_boxed_take_ownership</primary></indexterm>g_value_set_boxed_take_ownership <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_value_set_object_take_ownership</primary></indexterm>g_value_set_object_take_ownership <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_value_set_param_take_ownership</primary></indexterm>g_value_set_param_take_ownership <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_value_set_schar</primary></indexterm>g_value_set_schar <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_value_set_string_take_ownership</primary></indexterm>g_value_set_string_take_ownership <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_value_set_variant</primary></indexterm>g_value_set_variant <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_value_take_variant</primary></indexterm>g_value_take_variant <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_weak_ref_clear</primary></indexterm>g_weak_ref_clear <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_weak_ref_get</primary></indexterm>g_weak_ref_get <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_weak_ref_init</primary></indexterm>g_weak_ref_init <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_weak_ref_set</primary></indexterm>g_weak_ref_set <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
An LSB conforming implementation shall provide the generic deprecated functions
for Gobject GTypeModule specified in <XREF linkend="tbl-libgobject-2.0-gobje-depints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<NOTE><PARA>These interfaces are deprecated, and applications
should avoid using them.
These interfaces may be withdrawn
in future releases of this specification.
</PARA></NOTE>
<!--libgroupdepints-->
<TABLE id="tbl-libgobject-2.0-gobje-depints">
<TITLE>libgobject-2.0 - Gobject GTypeModule Deprecated Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>g_value_set_boxed_take_ownership</primary></indexterm>g_value_set_boxed_take_ownership <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_value_set_object_take_ownership</primary></indexterm>g_value_set_object_take_ownership <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_value_set_param_take_ownership</primary></indexterm>g_value_set_param_take_ownership <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_value_set_string_take_ownership</primary></indexterm>g_value_set_string_take_ownership <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>
</SECT2>
<!-- debug: database interface name Gobject Enums and Flags -->
<SECT2>
<!--libgroup-->
<TITLE>Gobject Enums and Flags</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Interfaces for Gobject Enums and Flags</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic functions
for Gobject Enums and Flags specified in <XREF linkend="tbl-libgobject-2.0-gobjf-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<TABLE id="tbl-libgobject-2.0-gobjf-ints">
<TITLE>libgobject-2.0 - Gobject Enums and Flags Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>g_enum_complete_type_info</primary></indexterm>g_enum_complete_type_info <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_enum_get_value</primary></indexterm>g_enum_get_value <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_enum_get_value_by_name</primary></indexterm>g_enum_get_value_by_name <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_enum_get_value_by_nick</primary></indexterm>g_enum_get_value_by_nick <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_enum_register_static</primary></indexterm>g_enum_register_static <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_flags_complete_type_info</primary></indexterm>g_flags_complete_type_info <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_flags_get_first_value</primary></indexterm>g_flags_get_first_value <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_flags_get_value_by_name</primary></indexterm>g_flags_get_value_by_name <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_flags_get_value_by_nick</primary></indexterm>g_flags_get_value_by_nick <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_flags_register_static</primary></indexterm>g_flags_register_static <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>
</SECT2>
<!-- debug: database interface name Gobject Signals -->
<SECT2>
<!--libgroup-->
<TITLE>Gobject Signals</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Interfaces for Gobject Signals</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic functions
for Gobject Signals specified in <XREF linkend="tbl-libgobject-2.0-gobjg-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<TABLE id="tbl-libgobject-2.0-gobjg-ints">
<TITLE>libgobject-2.0 - Gobject Signals Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>g_signal_accumulator_true_handled</primary></indexterm>g_signal_accumulator_true_handled <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_signal_add_emission_hook</primary></indexterm>g_signal_add_emission_hook <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_signal_chain_from_overridden</primary></indexterm>g_signal_chain_from_overridden <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_signal_connect_closure</primary></indexterm>g_signal_connect_closure <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_signal_connect_closure_by_id</primary></indexterm>g_signal_connect_closure_by_id <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_signal_connect_data</primary></indexterm>g_signal_connect_data <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_signal_connect_object</primary></indexterm>g_signal_connect_object <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_signal_emit</primary></indexterm>g_signal_emit <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_signal_emit_by_name</primary></indexterm>g_signal_emit_by_name <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_signal_emit_valist</primary></indexterm>g_signal_emit_valist <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_signal_emitv</primary></indexterm>g_signal_emitv <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_signal_get_invocation_hint</primary></indexterm>g_signal_get_invocation_hint <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_signal_handler_block</primary></indexterm>g_signal_handler_block <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_signal_handler_disconnect</primary></indexterm>g_signal_handler_disconnect <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_signal_handler_find</primary></indexterm>g_signal_handler_find <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_signal_handler_is_connected</primary></indexterm>g_signal_handler_is_connected <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_signal_handler_unblock</primary></indexterm>g_signal_handler_unblock <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_signal_handlers_block_matched</primary></indexterm>g_signal_handlers_block_matched <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_signal_handlers_disconnect_matched</primary></indexterm>g_signal_handlers_disconnect_matched <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_signal_handlers_unblock_matched</primary></indexterm>g_signal_handlers_unblock_matched <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_signal_has_handler_pending</primary></indexterm>g_signal_has_handler_pending <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_signal_list_ids</primary></indexterm>g_signal_list_ids <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_signal_lookup</primary></indexterm>g_signal_lookup <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_signal_name</primary></indexterm>g_signal_name <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_signal_new</primary></indexterm>g_signal_new <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_signal_new_valist</primary></indexterm>g_signal_new_valist <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_signal_newv</primary></indexterm>g_signal_newv <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_signal_override_class_closure</primary></indexterm>g_signal_override_class_closure <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_signal_parse_name</primary></indexterm>g_signal_parse_name <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_signal_query</primary></indexterm>g_signal_query <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_signal_remove_emission_hook</primary></indexterm>g_signal_remove_emission_hook <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_signal_stop_emission</primary></indexterm>g_signal_stop_emission <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_signal_stop_emission_by_name</primary></indexterm>g_signal_stop_emission_by_name <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_signal_type_cclosure_new</primary></indexterm>g_signal_type_cclosure_new <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>
</SECT2>
<!-- debug: database interface name Gobject Value arrays -->
<SECT2>
<!--libgroup-->
<TITLE>Gobject Value arrays</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Interfaces for Gobject Value arrays</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic functions
for Gobject Value arrays specified in <XREF linkend="tbl-libgobject-2.0-gobjh-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<TABLE id="tbl-libgobject-2.0-gobjh-ints">
<TITLE>libgobject-2.0 - Gobject Value arrays Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>g_value_array_append</primary></indexterm>g_value_array_append <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_value_array_copy</primary></indexterm>g_value_array_copy <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_value_array_free</primary></indexterm>g_value_array_free <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_value_array_get_nth</primary></indexterm>g_value_array_get_nth <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_value_array_insert</primary></indexterm>g_value_array_insert <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_value_array_new</primary></indexterm>g_value_array_new <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_value_array_prepend</primary></indexterm>g_value_array_prepend <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_value_array_remove</primary></indexterm>g_value_array_remove <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_value_array_sort</primary></indexterm>g_value_array_sort <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_value_array_sort_with_data</primary></indexterm>g_value_array_sort_with_data <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
An LSB conforming implementation shall provide the generic deprecated functions
for Gobject Value arrays specified in <XREF linkend="tbl-libgobject-2.0-gobjh-depints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<NOTE><PARA>These interfaces are deprecated, and applications
should avoid using them.
These interfaces may be withdrawn
in future releases of this specification.
</PARA></NOTE>
<!--libgroupdepints-->
<TABLE id="tbl-libgobject-2.0-gobjh-depints">
<TITLE>libgobject-2.0 - Gobject Value arrays Deprecated Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>g_value_array_append</primary></indexterm>g_value_array_append <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_value_array_copy</primary></indexterm>g_value_array_copy <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_value_array_free</primary></indexterm>g_value_array_free <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_value_array_get_nth</primary></indexterm>g_value_array_get_nth <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_value_array_insert</primary></indexterm>g_value_array_insert <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_value_array_new</primary></indexterm>g_value_array_new <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_value_array_prepend</primary></indexterm>g_value_array_prepend <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_value_array_remove</primary></indexterm>g_value_array_remove <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_value_array_sort</primary></indexterm>g_value_array_sort <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_value_array_sort_with_data</primary></indexterm>g_value_array_sort_with_data <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>
</SECT2>
<!-- debug: database interface name Gobject Generic Values -->
<SECT2>
<!--libgroup-->
<TITLE>Gobject Generic Values</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Interfaces for Gobject Generic Values</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic functions
for Gobject Generic Values specified in <XREF linkend="tbl-libgobject-2.0-gobji-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<TABLE id="tbl-libgobject-2.0-gobji-ints">
<TITLE>libgobject-2.0 - Gobject Generic Values Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>g_strdup_value_contents</primary></indexterm>g_strdup_value_contents <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_value_array_get_type</primary></indexterm>g_value_array_get_type <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_value_copy</primary></indexterm>g_value_copy <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_value_fits_pointer</primary></indexterm>g_value_fits_pointer <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_value_get_type</primary></indexterm>g_value_get_type <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_value_init</primary></indexterm>g_value_init <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_value_peek_pointer</primary></indexterm>g_value_peek_pointer <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_value_register_transform_func</primary></indexterm>g_value_register_transform_func <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_value_reset</primary></indexterm>g_value_reset <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_value_set_instance</primary></indexterm>g_value_set_instance <LINK LINKEND="REFSTD.libgobject.2.0.2">[LSB]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_value_transform</primary></indexterm>g_value_transform <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_value_type_compatible</primary></indexterm>g_value_type_compatible <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_value_type_transformable</primary></indexterm>g_value_type_transformable <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_value_unset</primary></indexterm>g_value_unset <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
An LSB conforming implementation shall provide the generic deprecated functions
for Gobject Generic Values specified in <XREF linkend="tbl-libgobject-2.0-gobji-depints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<NOTE><PARA>These interfaces are deprecated, and applications
should avoid using them.
These interfaces may be withdrawn
in future releases of this specification.
</PARA></NOTE>
<!--libgroupdepints-->
<TABLE id="tbl-libgobject-2.0-gobji-depints">
<TITLE>libgobject-2.0 - Gobject Generic Values Deprecated Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>g_value_array_get_type</primary></indexterm>g_value_array_get_type <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>
</SECT2>
<!-- debug: database interface name Gobject Parameters and Values -->
<SECT2>
<!--libgroup-->
<TITLE>Gobject Parameters and Values</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Interfaces for Gobject Parameters and Values</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic functions
for Gobject Parameters and Values specified in <XREF linkend="tbl-libgobject-2.0-gobjj-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<TABLE id="tbl-libgobject-2.0-gobjj-ints">
<TITLE>libgobject-2.0 - Gobject Parameters and Values Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>g_param_spec_boolean</primary></indexterm>g_param_spec_boolean <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_param_spec_boxed</primary></indexterm>g_param_spec_boxed <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_param_spec_char</primary></indexterm>g_param_spec_char <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_param_spec_double</primary></indexterm>g_param_spec_double <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_param_spec_enum</primary></indexterm>g_param_spec_enum <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_param_spec_flags</primary></indexterm>g_param_spec_flags <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_param_spec_float</primary></indexterm>g_param_spec_float <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_param_spec_int</primary></indexterm>g_param_spec_int <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_param_spec_int64</primary></indexterm>g_param_spec_int64 <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_param_spec_long</primary></indexterm>g_param_spec_long <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_param_spec_object</primary></indexterm>g_param_spec_object <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_param_spec_override</primary></indexterm>g_param_spec_override <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_param_spec_param</primary></indexterm>g_param_spec_param <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_param_spec_pointer</primary></indexterm>g_param_spec_pointer <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_param_spec_string</primary></indexterm>g_param_spec_string <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_param_spec_uchar</primary></indexterm>g_param_spec_uchar <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_param_spec_uint</primary></indexterm>g_param_spec_uint <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_param_spec_uint64</primary></indexterm>g_param_spec_uint64 <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_param_spec_ulong</primary></indexterm>g_param_spec_ulong <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_param_spec_unichar</primary></indexterm>g_param_spec_unichar <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_param_spec_value_array</primary></indexterm>g_param_spec_value_array <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_value_dup_boxed</primary></indexterm>g_value_dup_boxed <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_value_dup_object</primary></indexterm>g_value_dup_object <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_value_dup_param</primary></indexterm>g_value_dup_param <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_value_dup_string</primary></indexterm>g_value_dup_string <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_value_get_boolean</primary></indexterm>g_value_get_boolean <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_value_get_boxed</primary></indexterm>g_value_get_boxed <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_value_get_char</primary></indexterm>g_value_get_char <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_value_get_double</primary></indexterm>g_value_get_double <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_value_get_enum</primary></indexterm>g_value_get_enum <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_value_get_flags</primary></indexterm>g_value_get_flags <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_value_get_float</primary></indexterm>g_value_get_float <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_value_get_gtype</primary></indexterm>g_value_get_gtype <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_value_get_int</primary></indexterm>g_value_get_int <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_value_get_int64</primary></indexterm>g_value_get_int64 <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_value_get_long</primary></indexterm>g_value_get_long <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_value_get_object</primary></indexterm>g_value_get_object <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_value_get_param</primary></indexterm>g_value_get_param <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_value_get_pointer</primary></indexterm>g_value_get_pointer <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_value_get_string</primary></indexterm>g_value_get_string <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_value_get_uchar</primary></indexterm>g_value_get_uchar <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_value_get_uint</primary></indexterm>g_value_get_uint <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_value_get_uint64</primary></indexterm>g_value_get_uint64 <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_value_get_ulong</primary></indexterm>g_value_get_ulong <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_value_set_boolean</primary></indexterm>g_value_set_boolean <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_value_set_boxed</primary></indexterm>g_value_set_boxed <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_value_set_char</primary></indexterm>g_value_set_char <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_value_set_double</primary></indexterm>g_value_set_double <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_value_set_enum</primary></indexterm>g_value_set_enum <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_value_set_flags</primary></indexterm>g_value_set_flags <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_value_set_float</primary></indexterm>g_value_set_float <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_value_set_gtype</primary></indexterm>g_value_set_gtype <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_value_set_int</primary></indexterm>g_value_set_int <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_value_set_int64</primary></indexterm>g_value_set_int64 <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_value_set_long</primary></indexterm>g_value_set_long <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_value_set_object</primary></indexterm>g_value_set_object <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_value_set_param</primary></indexterm>g_value_set_param <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_value_set_pointer</primary></indexterm>g_value_set_pointer <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_value_set_static_boxed</primary></indexterm>g_value_set_static_boxed <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_value_set_static_string</primary></indexterm>g_value_set_static_string <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_value_set_string</primary></indexterm>g_value_set_string <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_value_set_uchar</primary></indexterm>g_value_set_uchar <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_value_set_uint</primary></indexterm>g_value_set_uint <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_value_set_uint64</primary></indexterm>g_value_set_uint64 <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_value_set_ulong</primary></indexterm>g_value_set_ulong <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_value_take_boxed</primary></indexterm>g_value_take_boxed <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_value_take_object</primary></indexterm>g_value_take_object <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_value_take_param</primary></indexterm>g_value_take_param <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_value_take_string</primary></indexterm>g_value_take_string <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
An LSB conforming implementation shall provide the generic deprecated functions
for Gobject Parameters and Values specified in <XREF linkend="tbl-libgobject-2.0-gobjj-depints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<NOTE><PARA>These interfaces are deprecated, and applications
should avoid using them.
These interfaces may be withdrawn
in future releases of this specification.
</PARA></NOTE>
<!--libgroupdepints-->
<TABLE id="tbl-libgobject-2.0-gobjj-depints">
<TITLE>libgobject-2.0 - Gobject Parameters and Values Deprecated Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>g_value_get_char</primary></indexterm>g_value_get_char <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_value_set_char</primary></indexterm>g_value_set_char <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for Gobject Parameters and Values specified in <XREF linkend="tbl-libgobject-2.0-gobjj-data">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<TABLE id="tbl-libgobject-2.0-gobjj-data">
<TITLE>libgobject-2.0 - Gobject Parameters and Values Data Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>g_param_spec_types</primary></indexterm>g_param_spec_types <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>
</SECT2>
<!-- debug: database interface name Gobject GParamSpec -->
<SECT2>
<!--libgroup-->
<TITLE>Gobject GParamSpec</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Interfaces for Gobject GParamSpec</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic functions
for Gobject GParamSpec specified in <XREF linkend="tbl-libgobject-2.0-gobjk-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<TABLE id="tbl-libgobject-2.0-gobjk-ints">
<TITLE>libgobject-2.0 - Gobject GParamSpec Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>g_param_spec_get_blurb</primary></indexterm>g_param_spec_get_blurb <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_param_spec_get_name</primary></indexterm>g_param_spec_get_name <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_param_spec_get_nick</primary></indexterm>g_param_spec_get_nick <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_param_spec_get_qdata</primary></indexterm>g_param_spec_get_qdata <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_param_spec_get_redirect_target</primary></indexterm>g_param_spec_get_redirect_target <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_param_spec_gtype</primary></indexterm>g_param_spec_gtype <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_param_spec_internal</primary></indexterm>g_param_spec_internal <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_param_spec_pool_insert</primary></indexterm>g_param_spec_pool_insert <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_param_spec_pool_list</primary></indexterm>g_param_spec_pool_list <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_param_spec_pool_list_owned</primary></indexterm>g_param_spec_pool_list_owned <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_param_spec_pool_lookup</primary></indexterm>g_param_spec_pool_lookup <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_param_spec_pool_new</primary></indexterm>g_param_spec_pool_new <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_param_spec_pool_remove</primary></indexterm>g_param_spec_pool_remove <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_param_spec_ref</primary></indexterm>g_param_spec_ref <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_param_spec_ref_sink</primary></indexterm>g_param_spec_ref_sink <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_param_spec_set_qdata</primary></indexterm>g_param_spec_set_qdata <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_param_spec_set_qdata_full</primary></indexterm>g_param_spec_set_qdata_full <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_param_spec_sink</primary></indexterm>g_param_spec_sink <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_param_spec_steal_qdata</primary></indexterm>g_param_spec_steal_qdata <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_param_spec_unref</primary></indexterm>g_param_spec_unref <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_param_type_register_static</primary></indexterm>g_param_type_register_static <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_param_value_convert</primary></indexterm>g_param_value_convert <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_param_value_defaults</primary></indexterm>g_param_value_defaults <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_param_value_set_default</primary></indexterm>g_param_value_set_default <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_param_value_validate</primary></indexterm>g_param_value_validate <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_param_values_cmp</primary></indexterm>g_param_values_cmp <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>
</SECT2>
<!-- debug: database interface name Gobject GBoxed -->
<SECT2>
<!--libgroup-->
<TITLE>Gobject GBoxed</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Interfaces for Gobject GBoxed</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic functions
for Gobject GBoxed specified in <XREF linkend="tbl-libgobject-2.0-gobjl-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<TABLE id="tbl-libgobject-2.0-gobjl-ints">
<TITLE>libgobject-2.0 - Gobject GBoxed Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>g_array_get_type</primary></indexterm>g_array_get_type <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_boxed_copy</primary></indexterm>g_boxed_copy <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_boxed_free</primary></indexterm>g_boxed_free <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_boxed_type_register_static</primary></indexterm>g_boxed_type_register_static <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_byte_array_get_type</primary></indexterm>g_byte_array_get_type <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_bytes_get_type</primary></indexterm>g_bytes_get_type <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_date_get_type</primary></indexterm>g_date_get_type <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_date_time_get_type</primary></indexterm>g_date_time_get_type <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_error_get_type</primary></indexterm>g_error_get_type <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_gstring_get_type</primary></indexterm>g_gstring_get_type <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_key_file_get_type</primary></indexterm>g_key_file_get_type <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_main_context_get_type</primary></indexterm>g_main_context_get_type <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_main_loop_get_type</primary></indexterm>g_main_loop_get_type <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_match_info_get_type</primary></indexterm>g_match_info_get_type <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_pointer_type_register_static</primary></indexterm>g_pointer_type_register_static <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_ptr_array_get_type</primary></indexterm>g_ptr_array_get_type <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_regex_get_type</primary></indexterm>g_regex_get_type <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_source_get_type</primary></indexterm>g_source_get_type <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_strv_get_type</primary></indexterm>g_strv_get_type <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_variant_builder_get_type</primary></indexterm>g_variant_builder_get_type <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_variant_get_gtype</primary></indexterm>g_variant_get_gtype <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_variant_type_get_gtype</primary></indexterm>g_variant_type_get_gtype <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
An LSB conforming implementation shall provide the generic deprecated functions
for Gobject GBoxed specified in <XREF linkend="tbl-libgobject-2.0-gobjl-depints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<NOTE><PARA>These interfaces are deprecated, and applications
should avoid using them.
These interfaces may be withdrawn
in future releases of this specification.
</PARA></NOTE>
<!--libgroupdepints-->
<TABLE id="tbl-libgobject-2.0-gobjl-depints">
<TITLE>libgobject-2.0 - Gobject GBoxed Deprecated Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>g_variant_get_gtype</primary></indexterm>g_variant_get_gtype <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>
</SECT2>
<!-- debug: database interface name Gobject Closures -->
<SECT2>
<!--libgroup-->
<TITLE>Gobject Closures</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Interfaces for Gobject Closures</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic functions
for Gobject Closures specified in <XREF linkend="tbl-libgobject-2.0-gobjm-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<TABLE id="tbl-libgobject-2.0-gobjm-ints">
<TITLE>libgobject-2.0 - Gobject Closures Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>g_cclosure_marshal_BOOLEAN__FLAGS</primary></indexterm>g_cclosure_marshal_BOOLEAN__FLAGS <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_cclosure_marshal_STRING__OBJECT_POINTER</primary></indexterm>g_cclosure_marshal_STRING__OBJECT_POINTER <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_cclosure_marshal_VOID__BOOLEAN</primary></indexterm>g_cclosure_marshal_VOID__BOOLEAN <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_cclosure_marshal_VOID__BOOLEANv</primary></indexterm>g_cclosure_marshal_VOID__BOOLEANv <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_cclosure_marshal_VOID__BOXED</primary></indexterm>g_cclosure_marshal_VOID__BOXED <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_cclosure_marshal_VOID__BOXEDv</primary></indexterm>g_cclosure_marshal_VOID__BOXEDv <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_cclosure_marshal_VOID__CHAR</primary></indexterm>g_cclosure_marshal_VOID__CHAR <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_cclosure_marshal_VOID__CHARv</primary></indexterm>g_cclosure_marshal_VOID__CHARv <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_cclosure_marshal_VOID__DOUBLE</primary></indexterm>g_cclosure_marshal_VOID__DOUBLE <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_cclosure_marshal_VOID__DOUBLEv</primary></indexterm>g_cclosure_marshal_VOID__DOUBLEv <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_cclosure_marshal_VOID__ENUM</primary></indexterm>g_cclosure_marshal_VOID__ENUM <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_cclosure_marshal_VOID__ENUMv</primary></indexterm>g_cclosure_marshal_VOID__ENUMv <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_cclosure_marshal_VOID__FLAGS</primary></indexterm>g_cclosure_marshal_VOID__FLAGS <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_cclosure_marshal_VOID__FLAGSv</primary></indexterm>g_cclosure_marshal_VOID__FLAGSv <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_cclosure_marshal_VOID__FLOAT</primary></indexterm>g_cclosure_marshal_VOID__FLOAT <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_cclosure_marshal_VOID__FLOATv</primary></indexterm>g_cclosure_marshal_VOID__FLOATv <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_cclosure_marshal_VOID__INT</primary></indexterm>g_cclosure_marshal_VOID__INT <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_cclosure_marshal_VOID__INTv</primary></indexterm>g_cclosure_marshal_VOID__INTv <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_cclosure_marshal_VOID__LONG</primary></indexterm>g_cclosure_marshal_VOID__LONG <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_cclosure_marshal_VOID__LONGv</primary></indexterm>g_cclosure_marshal_VOID__LONGv <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_cclosure_marshal_VOID__OBJECT</primary></indexterm>g_cclosure_marshal_VOID__OBJECT <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_cclosure_marshal_VOID__OBJECTv</primary></indexterm>g_cclosure_marshal_VOID__OBJECTv <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_cclosure_marshal_VOID__PARAM</primary></indexterm>g_cclosure_marshal_VOID__PARAM <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_cclosure_marshal_VOID__PARAMv</primary></indexterm>g_cclosure_marshal_VOID__PARAMv <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_cclosure_marshal_VOID__POINTER</primary></indexterm>g_cclosure_marshal_VOID__POINTER <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_cclosure_marshal_VOID__POINTERv</primary></indexterm>g_cclosure_marshal_VOID__POINTERv <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_cclosure_marshal_VOID__STRING</primary></indexterm>g_cclosure_marshal_VOID__STRING <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_cclosure_marshal_VOID__STRINGv</primary></indexterm>g_cclosure_marshal_VOID__STRINGv <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_cclosure_marshal_VOID__UCHAR</primary></indexterm>g_cclosure_marshal_VOID__UCHAR <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_cclosure_marshal_VOID__UCHARv</primary></indexterm>g_cclosure_marshal_VOID__UCHARv <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_cclosure_marshal_VOID__UINT</primary></indexterm>g_cclosure_marshal_VOID__UINT <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_cclosure_marshal_VOID__UINT_POINTER</primary></indexterm>g_cclosure_marshal_VOID__UINT_POINTER <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_cclosure_marshal_VOID__UINT_POINTERv</primary></indexterm>g_cclosure_marshal_VOID__UINT_POINTERv <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_cclosure_marshal_VOID__UINTv</primary></indexterm>g_cclosure_marshal_VOID__UINTv <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_cclosure_marshal_VOID__ULONG</primary></indexterm>g_cclosure_marshal_VOID__ULONG <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_cclosure_marshal_VOID__ULONGv</primary></indexterm>g_cclosure_marshal_VOID__ULONGv <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_cclosure_marshal_VOID__VARIANT</primary></indexterm>g_cclosure_marshal_VOID__VARIANT <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_cclosure_marshal_VOID__VARIANTv</primary></indexterm>g_cclosure_marshal_VOID__VARIANTv <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_cclosure_marshal_VOID__VOID</primary></indexterm>g_cclosure_marshal_VOID__VOID <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_cclosure_marshal_VOID__VOIDv</primary></indexterm>g_cclosure_marshal_VOID__VOIDv <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_cclosure_new</primary></indexterm>g_cclosure_new <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_cclosure_new_object</primary></indexterm>g_cclosure_new_object <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_cclosure_new_object_swap</primary></indexterm>g_cclosure_new_object_swap <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_cclosure_new_swap</primary></indexterm>g_cclosure_new_swap <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_closure_add_finalize_notifier</primary></indexterm>g_closure_add_finalize_notifier <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_closure_add_invalidate_notifier</primary></indexterm>g_closure_add_invalidate_notifier <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_closure_add_marshal_guards</primary></indexterm>g_closure_add_marshal_guards <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_closure_invalidate</primary></indexterm>g_closure_invalidate <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_closure_invoke</primary></indexterm>g_closure_invoke <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_closure_new_object</primary></indexterm>g_closure_new_object <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_closure_new_simple</primary></indexterm>g_closure_new_simple <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_closure_ref</primary></indexterm>g_closure_ref <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_closure_remove_finalize_notifier</primary></indexterm>g_closure_remove_finalize_notifier <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_closure_remove_invalidate_notifier</primary></indexterm>g_closure_remove_invalidate_notifier <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_closure_set_marshal</primary></indexterm>g_closure_set_marshal <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_closure_set_meta_marshal</primary></indexterm>g_closure_set_meta_marshal <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_closure_sink</primary></indexterm>g_closure_sink <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_closure_unref</primary></indexterm>g_closure_unref <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_source_set_closure</primary></indexterm>g_source_set_closure <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>
</SECT2>
<!-- debug: database interface name Gobject Gobject -->
<SECT2>
<!--libgroup-->
<TITLE>Gobject Gobject</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Interfaces for Gobject Gobject</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic functions
for Gobject Gobject specified in <XREF linkend="tbl-libgobject-2.0-gobjn-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<TABLE id="tbl-libgobject-2.0-gobjn-ints">
<TITLE>libgobject-2.0 - Gobject Gobject Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>g_object_add_toggle_ref</primary></indexterm>g_object_add_toggle_ref <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_object_add_weak_pointer</primary></indexterm>g_object_add_weak_pointer <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_object_class_find_property</primary></indexterm>g_object_class_find_property <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_object_class_install_property</primary></indexterm>g_object_class_install_property <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_object_class_list_properties</primary></indexterm>g_object_class_list_properties <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_object_class_override_property</primary></indexterm>g_object_class_override_property <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_object_connect</primary></indexterm>g_object_connect <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_object_disconnect</primary></indexterm>g_object_disconnect <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_object_force_floating</primary></indexterm>g_object_force_floating <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_object_freeze_notify</primary></indexterm>g_object_freeze_notify <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_object_get</primary></indexterm>g_object_get <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_object_get_data</primary></indexterm>g_object_get_data <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_object_get_property</primary></indexterm>g_object_get_property <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_object_get_qdata</primary></indexterm>g_object_get_qdata <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_object_get_valist</primary></indexterm>g_object_get_valist <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_object_interface_find_property</primary></indexterm>g_object_interface_find_property <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_object_interface_install_property</primary></indexterm>g_object_interface_install_property <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_object_interface_list_properties</primary></indexterm>g_object_interface_list_properties <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_object_is_floating</primary></indexterm>g_object_is_floating <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_object_new</primary></indexterm>g_object_new <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_object_new_valist</primary></indexterm>g_object_new_valist <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_object_newv</primary></indexterm>g_object_newv <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_object_notify</primary></indexterm>g_object_notify <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_object_ref</primary></indexterm>g_object_ref <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_object_ref_sink</primary></indexterm>g_object_ref_sink <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_object_remove_toggle_ref</primary></indexterm>g_object_remove_toggle_ref <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_object_remove_weak_pointer</primary></indexterm>g_object_remove_weak_pointer <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_object_run_dispose</primary></indexterm>g_object_run_dispose <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_object_set</primary></indexterm>g_object_set <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_object_set_data</primary></indexterm>g_object_set_data <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_object_set_data_full</primary></indexterm>g_object_set_data_full <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_object_set_property</primary></indexterm>g_object_set_property <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_object_set_qdata</primary></indexterm>g_object_set_qdata <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_object_set_qdata_full</primary></indexterm>g_object_set_qdata_full <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_object_set_valist</primary></indexterm>g_object_set_valist <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_object_steal_data</primary></indexterm>g_object_steal_data <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_object_steal_qdata</primary></indexterm>g_object_steal_qdata <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_object_thaw_notify</primary></indexterm>g_object_thaw_notify <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_object_unref</primary></indexterm>g_object_unref <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_object_watch_closure</primary></indexterm>g_object_watch_closure <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_object_weak_ref</primary></indexterm>g_object_weak_ref <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_object_weak_unref</primary></indexterm>g_object_weak_unref <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>
</SECT2>
<!-- debug: database interface name Gobject GType -->
<SECT2>
<!--libgroup-->
<TITLE>Gobject GType</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Interfaces for Gobject GType</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic functions
for Gobject GType specified in <XREF linkend="tbl-libgobject-2.0-gobjo-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<TABLE id="tbl-libgobject-2.0-gobjo-ints">
<TITLE>libgobject-2.0 - Gobject GType Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>g_closure_get_type</primary></indexterm>g_closure_get_type <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_gtype_get_type</primary></indexterm>g_gtype_get_type <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_hash_table_get_type</primary></indexterm>g_hash_table_get_type <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_initially_unowned_get_type</primary></indexterm>g_initially_unowned_get_type <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_io_channel_get_type</primary></indexterm>g_io_channel_get_type <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_io_condition_get_type</primary></indexterm>g_io_condition_get_type <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_type_add_class_cache_func</primary></indexterm>g_type_add_class_cache_func <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_type_add_interface_check</primary></indexterm>g_type_add_interface_check <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_type_add_interface_dynamic</primary></indexterm>g_type_add_interface_dynamic <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_type_add_interface_static</primary></indexterm>g_type_add_interface_static <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_type_check_class_cast</primary></indexterm>g_type_check_class_cast <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_type_check_class_is_a</primary></indexterm>g_type_check_class_is_a <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_type_check_instance</primary></indexterm>g_type_check_instance <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_type_check_instance_cast</primary></indexterm>g_type_check_instance_cast <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_type_check_instance_is_a</primary></indexterm>g_type_check_instance_is_a <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_type_check_is_value_type</primary></indexterm>g_type_check_is_value_type <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_type_check_value</primary></indexterm>g_type_check_value <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_type_check_value_holds</primary></indexterm>g_type_check_value_holds <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_type_children</primary></indexterm>g_type_children <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_type_class_add_private</primary></indexterm>g_type_class_add_private <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_type_class_peek</primary></indexterm>g_type_class_peek <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_type_class_peek_parent</primary></indexterm>g_type_class_peek_parent <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_type_class_peek_static</primary></indexterm>g_type_class_peek_static <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_type_class_ref</primary></indexterm>g_type_class_ref <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_type_class_unref</primary></indexterm>g_type_class_unref <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_type_class_unref_uncached</primary></indexterm>g_type_class_unref_uncached <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_type_create_instance</primary></indexterm>g_type_create_instance <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_type_default_interface_peek</primary></indexterm>g_type_default_interface_peek <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_type_default_interface_ref</primary></indexterm>g_type_default_interface_ref <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_type_default_interface_unref</primary></indexterm>g_type_default_interface_unref <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_type_depth</primary></indexterm>g_type_depth <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_type_free_instance</primary></indexterm>g_type_free_instance <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_type_from_name</primary></indexterm>g_type_from_name <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_type_fundamental</primary></indexterm>g_type_fundamental <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_type_fundamental_next</primary></indexterm>g_type_fundamental_next <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_type_get_plugin</primary></indexterm>g_type_get_plugin <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_type_get_qdata</primary></indexterm>g_type_get_qdata <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_type_init</primary></indexterm>g_type_init <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_type_init_with_debug_flags</primary></indexterm>g_type_init_with_debug_flags <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_type_instance_get_private</primary></indexterm>g_type_instance_get_private <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_type_interface_add_prerequisite</primary></indexterm>g_type_interface_add_prerequisite <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_type_interface_get_plugin</primary></indexterm>g_type_interface_get_plugin <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_type_interface_peek</primary></indexterm>g_type_interface_peek <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_type_interface_peek_parent</primary></indexterm>g_type_interface_peek_parent <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_type_interface_prerequisites</primary></indexterm>g_type_interface_prerequisites <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_type_interfaces</primary></indexterm>g_type_interfaces <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_type_is_a</primary></indexterm>g_type_is_a <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_type_name</primary></indexterm>g_type_name <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_type_name_from_class</primary></indexterm>g_type_name_from_class <LINK LINKEND="REFSTD.libgobject.2.0.2">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_type_name_from_instance</primary></indexterm>g_type_name_from_instance <LINK LINKEND="REFSTD.libgobject.2.0.2">[LSB]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_type_next_base</primary></indexterm>g_type_next_base <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_type_parent</primary></indexterm>g_type_parent <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_type_qname</primary></indexterm>g_type_qname <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_type_query</primary></indexterm>g_type_query <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_type_register_dynamic</primary></indexterm>g_type_register_dynamic <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_type_register_fundamental</primary></indexterm>g_type_register_fundamental <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_type_register_static</primary></indexterm>g_type_register_static <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_type_register_static_simple</primary></indexterm>g_type_register_static_simple <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_type_remove_class_cache_func</primary></indexterm>g_type_remove_class_cache_func <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_type_remove_interface_check</primary></indexterm>g_type_remove_interface_check <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_type_set_qdata</primary></indexterm>g_type_set_qdata <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_type_test_flags</primary></indexterm>g_type_test_flags <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_type_value_table_peek</primary></indexterm>g_type_value_table_peek <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>
</SECT2>
<!-- debug: database interface name Gobject GTypePlugin -->
<SECT2>
<!--libgroup-->
<TITLE>Gobject GTypePlugin</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Interfaces for Gobject GTypePlugin</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic functions
for Gobject GTypePlugin specified in <XREF linkend="tbl-libgobject-2.0-gobjp-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<TABLE id="tbl-libgobject-2.0-gobjp-ints">
<TITLE>libgobject-2.0 - Gobject GTypePlugin Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>g_type_plugin_complete_interface_info</primary></indexterm>g_type_plugin_complete_interface_info <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_type_plugin_complete_type_info</primary></indexterm>g_type_plugin_complete_type_info <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_type_plugin_get_type</primary></indexterm>g_type_plugin_get_type <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_type_plugin_unuse</primary></indexterm>g_type_plugin_unuse <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_type_plugin_use</primary></indexterm>g_type_plugin_use <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>
</SECT2>
<!-- debug: database interface name Gobject GBinding -->
<SECT2>
<!--libgroup-->
<TITLE>Gobject GBinding</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Interfaces for Gobject GBinding</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic functions
for Gobject GBinding specified in <XREF linkend="tbl-libgobject-2.0-gobjq-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<TABLE id="tbl-libgobject-2.0-gobjq-ints">
<TITLE>libgobject-2.0 - Gobject GBinding Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>g_binding_get_flags</primary></indexterm>g_binding_get_flags <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_binding_get_source</primary></indexterm>g_binding_get_source <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_binding_get_source_property</primary></indexterm>g_binding_get_source_property <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_binding_get_target</primary></indexterm>g_binding_get_target <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_binding_get_target_property</primary></indexterm>g_binding_get_target_property <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_object_bind_property</primary></indexterm>g_object_bind_property <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_object_bind_property_full</primary></indexterm>g_object_bind_property_full <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_object_bind_property_with_closures</primary></indexterm>g_object_bind_property_with_closures <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>
</SECT2>
</SECT1>
<SECT1 ID=libgobject-2.0-ddefs>
<TITLE>Data Definitions for libgobject-2.0</TITLE>
<PARA>
This section defines global identifiers and their values that are associated
with interfaces contained in libgobject-2.0.
These definitions are organized into groups that
correspond to system headers. This convention is used as a
convenience for the reader, and does not imply the existence
of these headers, or their content.
Where an interface is defined as requiring a particular system header file
all of the data definitions for that system header file presented here shall be in effect.
</PARA>
<PARA>
This section gives data definitions to promote binary application
portability, not to repeat source interface definitions available
elsewhere. System providers and application developers should use this ABI
to supplement - not to replace - source interface definition specifications.
</PARA>
<PARA>
This specification uses the <XREF LINKEND='std.ISOC99'> C Language as the reference programming language, and data definitions are specified in ISO C format. The C language is used here as a convenient notation. Using a C language description of these data objects does not preclude their use by other programming languages.</PARA>
<SECT2>
<TITLE>glib-2.0/glib-object.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define G_CLOSURE_NEEDS_MARSHAL(closure)	 \
	(((GClosure*) (closure))->marshal == NULL)
#define G_TYPE_FROM_INTERFACE(g_iface)	 \
	(((GTypeInterface*) (g_iface))->g_type)
#define _G_TYPE_CCC(cp,gt,ct)	 \
	((ct*) g_type_check_class_cast ((GTypeClass*) cp, gt))
#define _G_TYPE_CIC(ip,gt,ct)	 \
	((ct*) g_type_check_instance_cast ((GTypeInstance*) ip, gt))
#define _G_TYPE_IGI(ip,gt,ct)	 \
	((ct*) g_type_interface_peek (((GTypeInstance*) ip)->g_class, gt))
#define G_TYPE_INSTANCE_GET_PRIVATE(instance,g_type,c_type)	 \
	((c_type*) g_type_instance_get_private ((GTypeInstance*) (instance), \
	(g_type)))
#define G_TYPE_MAKE_FUNDAMENTAL(x)	 \
	((GType) ((x) &lt;&lt; G_TYPE_FUNDAMENTAL_SHIFT))
#define G_ENUM_CLASS(class)	 \
	(G_TYPE_CHECK_CLASS_CAST ((class), G_TYPE_ENUM, GEnumClass))
#define G_FLAGS_CLASS(class)	 \
	(G_TYPE_CHECK_CLASS_CAST ((class), G_TYPE_FLAGS, GFlagsClass))
#define G_OBJECT_CLASS(class)	 \
	(G_TYPE_CHECK_CLASS_CAST ((class), G_TYPE_OBJECT, GObjectClass))
#define G_TYPE_MODULE_CLASS(class)	 \
	(G_TYPE_CHECK_CLASS_CAST ((class), G_TYPE_TYPE_MODULE, \
	GTypeModuleClass))
#define G_PARAM_SPEC_CLASS(pclass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((pclass), G_TYPE_PARAM, GParamSpecClass))
#define G_TYPE_PLUGIN_CLASS(vtable)	 \
	(G_TYPE_CHECK_CLASS_CAST ((vtable), G_TYPE_TYPE_PLUGIN, \
	GTypePluginClass))
#define G_IS_ENUM_CLASS(class)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((class), G_TYPE_ENUM))
#define G_IS_FLAGS_CLASS(class)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((class), G_TYPE_FLAGS))
#define G_IS_OBJECT_CLASS(class)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((class), G_TYPE_OBJECT))
#define G_IS_TYPE_MODULE_CLASS(class)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((class), G_TYPE_TYPE_MODULE))
#define G_IS_PARAM_SPEC_CLASS(pclass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((pclass), G_TYPE_PARAM))
#define G_IS_TYPE_PLUGIN_CLASS(vtable)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((vtable), G_TYPE_TYPE_PLUGIN))
#define G_TYPE_PLUGIN(inst)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((inst), G_TYPE_TYPE_PLUGIN, \
	GTypePlugin))
#define G_TYPE_MODULE(module)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((module), G_TYPE_TYPE_MODULE, \
	GTypeModule))
#define G_OBJECT(object)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((object), G_TYPE_OBJECT, GObject))
#define G_PARAM_SPEC(pspec)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((pspec), G_TYPE_PARAM, GParamSpec))
#define G_PARAM_SPEC_BOOLEAN(pspec)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((pspec), G_TYPE_PARAM_BOOLEAN, \
	GParamSpecBoolean))
#define G_PARAM_SPEC_BOXED(pspec)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((pspec), G_TYPE_PARAM_BOXED, \
	GParamSpecBoxed))
#define G_PARAM_SPEC_CHAR(pspec)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((pspec), G_TYPE_PARAM_CHAR, \
	GParamSpecChar))
#define G_PARAM_SPEC_DOUBLE(pspec)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((pspec), G_TYPE_PARAM_DOUBLE, \
	GParamSpecDouble))
#define G_PARAM_SPEC_ENUM(pspec)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((pspec), G_TYPE_PARAM_ENUM, \
	GParamSpecEnum))
#define G_PARAM_SPEC_FLAGS(pspec)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((pspec), G_TYPE_PARAM_FLAGS, \
	GParamSpecFlags))
#define G_PARAM_SPEC_FLOAT(pspec)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((pspec), G_TYPE_PARAM_FLOAT, \
	GParamSpecFloat))
#define G_PARAM_SPEC_INT(pspec)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((pspec), G_TYPE_PARAM_INT, \
	GParamSpecInt))
#define G_PARAM_SPEC_INT64(pspec)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((pspec), G_TYPE_PARAM_INT64, \
	GParamSpecInt64))
#define G_PARAM_SPEC_LONG(pspec)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((pspec), G_TYPE_PARAM_LONG, \
	GParamSpecLong))
#define G_PARAM_SPEC_OBJECT(pspec)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((pspec), G_TYPE_PARAM_OBJECT, \
	GParamSpecObject))
#define G_PARAM_SPEC_OVERRIDE(pspec)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((pspec), G_TYPE_PARAM_OVERRIDE, \
	GParamSpecOverride))
#define G_PARAM_SPEC_PARAM(pspec)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((pspec), G_TYPE_PARAM_PARAM, \
	GParamSpecParam))
#define G_PARAM_SPEC_POINTER(pspec)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((pspec), G_TYPE_PARAM_POINTER, \
	GParamSpecPointer))
#define G_PARAM_SPEC_STRING(pspec)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((pspec), G_TYPE_PARAM_STRING, \
	GParamSpecString))
#define G_PARAM_SPEC_UCHAR(pspec)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((pspec), G_TYPE_PARAM_UCHAR, \
	GParamSpecUChar))
#define G_PARAM_SPEC_UINT(pspec)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((pspec), G_TYPE_PARAM_UINT, \
	GParamSpecUInt))
#define G_PARAM_SPEC_UINT64(pspec)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((pspec), G_TYPE_PARAM_UINT64, \
	GParamSpecUInt64))
#define G_PARAM_SPEC_ULONG(pspec)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((pspec), G_TYPE_PARAM_ULONG, \
	GParamSpecULong))
#define G_PARAM_SPEC_UNICHAR(pspec)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((pspec), G_TYPE_PARAM_UNICHAR, \
	GParamSpecUnichar))
#define G_PARAM_SPEC_VALUE_ARRAY(pspec)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((pspec), G_TYPE_PARAM_VALUE_ARRAY, \
	GParamSpecValueArray))	/* : DEPRECATED */
#define G_IS_TYPE_PLUGIN(inst)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((inst), G_TYPE_TYPE_PLUGIN))
#define G_IS_TYPE_MODULE(module)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((module), G_TYPE_TYPE_MODULE))
#define G_IS_OBJECT(object)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((object), G_TYPE_OBJECT))
#define G_IS_PARAM_SPEC(pspec)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((pspec), G_TYPE_PARAM))
#define G_IS_PARAM_SPEC_BOOLEAN(pspec)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((pspec), G_TYPE_PARAM_BOOLEAN))
#define G_IS_PARAM_SPEC_BOXED(pspec)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((pspec), G_TYPE_PARAM_BOXED))
#define G_IS_PARAM_SPEC_CHAR(pspec)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((pspec), G_TYPE_PARAM_CHAR))
#define G_IS_PARAM_SPEC_DOUBLE(pspec)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((pspec), G_TYPE_PARAM_DOUBLE))
#define G_IS_PARAM_SPEC_ENUM(pspec)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((pspec), G_TYPE_PARAM_ENUM))
#define G_IS_PARAM_SPEC_FLAGS(pspec)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((pspec), G_TYPE_PARAM_FLAGS))
#define G_IS_PARAM_SPEC_FLOAT(pspec)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((pspec), G_TYPE_PARAM_FLOAT))
#define G_IS_PARAM_SPEC_INT(pspec)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((pspec), G_TYPE_PARAM_INT))
#define G_IS_PARAM_SPEC_INT64(pspec)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((pspec), G_TYPE_PARAM_INT64))
#define G_IS_PARAM_SPEC_LONG(pspec)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((pspec), G_TYPE_PARAM_LONG))
#define G_IS_PARAM_SPEC_OBJECT(pspec)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((pspec), G_TYPE_PARAM_OBJECT))
#define G_IS_PARAM_SPEC_OVERRIDE(pspec)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((pspec), G_TYPE_PARAM_OVERRIDE))
#define G_IS_PARAM_SPEC_PARAM(pspec)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((pspec), G_TYPE_PARAM_PARAM))
#define G_IS_PARAM_SPEC_POINTER(pspec)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((pspec), G_TYPE_PARAM_POINTER))
#define G_IS_PARAM_SPEC_STRING(pspec)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((pspec), G_TYPE_PARAM_STRING))
#define G_IS_PARAM_SPEC_UCHAR(pspec)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((pspec), G_TYPE_PARAM_UCHAR))
#define G_IS_PARAM_SPEC_UINT(pspec)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((pspec), G_TYPE_PARAM_UINT))
#define G_IS_PARAM_SPEC_UINT64(pspec)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((pspec), G_TYPE_PARAM_UINT64))
#define G_IS_PARAM_SPEC_ULONG(pspec)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((pspec), G_TYPE_PARAM_ULONG))
#define G_IS_PARAM_SPEC_UNICHAR(pspec)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((pspec), G_TYPE_PARAM_UNICHAR))
#define G_IS_PARAM_SPEC_VALUE_ARRAY(pspec)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((pspec), G_TYPE_PARAM_VALUE_ARRAY))	/* : DEPRECATED */
#define G_VALUE_HOLDS(value,type)	 \
	(G_TYPE_CHECK_VALUE_TYPE ((value), (type)))
#define G_VALUE_HOLDS_BOOLEAN(value)	 \
	(G_TYPE_CHECK_VALUE_TYPE ((value), G_TYPE_BOOLEAN))
#define G_VALUE_HOLDS_BOXED(value)	 \
	(G_TYPE_CHECK_VALUE_TYPE ((value), G_TYPE_BOXED))
#define G_VALUE_HOLDS_CHAR(value)	 \
	(G_TYPE_CHECK_VALUE_TYPE ((value), G_TYPE_CHAR))
#define G_VALUE_HOLDS_DOUBLE(value)	 \
	(G_TYPE_CHECK_VALUE_TYPE ((value), G_TYPE_DOUBLE))
#define G_VALUE_HOLDS_ENUM(value)	 \
	(G_TYPE_CHECK_VALUE_TYPE ((value), G_TYPE_ENUM))
#define G_VALUE_HOLDS_FLAGS(value)	 \
	(G_TYPE_CHECK_VALUE_TYPE ((value), G_TYPE_FLAGS))
#define G_VALUE_HOLDS_FLOAT(value)	 \
	(G_TYPE_CHECK_VALUE_TYPE ((value), G_TYPE_FLOAT))
#define G_VALUE_HOLDS_INT(value)	 \
	(G_TYPE_CHECK_VALUE_TYPE ((value), G_TYPE_INT))
#define G_VALUE_HOLDS_INT64(value)	 \
	(G_TYPE_CHECK_VALUE_TYPE ((value), G_TYPE_INT64))
#define G_VALUE_HOLDS_LONG(value)	 \
	(G_TYPE_CHECK_VALUE_TYPE ((value), G_TYPE_LONG))
#define G_VALUE_HOLDS_OBJECT(value)	 \
	(G_TYPE_CHECK_VALUE_TYPE ((value), G_TYPE_OBJECT))
#define G_VALUE_HOLDS_PARAM(value)	 \
	(G_TYPE_CHECK_VALUE_TYPE ((value), G_TYPE_PARAM))
#define G_VALUE_HOLDS_POINTER(value)	 \
	(G_TYPE_CHECK_VALUE_TYPE ((value), G_TYPE_POINTER))
#define G_VALUE_HOLDS_STRING(value)	 \
	(G_TYPE_CHECK_VALUE_TYPE ((value), G_TYPE_STRING))
#define G_VALUE_HOLDS_UCHAR(value)	 \
	(G_TYPE_CHECK_VALUE_TYPE ((value), G_TYPE_UCHAR))
#define G_VALUE_HOLDS_UINT(value)	 \
	(G_TYPE_CHECK_VALUE_TYPE ((value), G_TYPE_UINT))
#define G_VALUE_HOLDS_UINT64(value)	 \
	(G_TYPE_CHECK_VALUE_TYPE ((value), G_TYPE_UINT64))
#define G_VALUE_HOLDS_ULONG(value)	 \
	(G_TYPE_CHECK_VALUE_TYPE ((value), G_TYPE_ULONG))
#define G_TYPE_FROM_INSTANCE(instance)	 \
	(G_TYPE_FROM_CLASS (((GTypeInstance*) (instance))->g_class))
#define G_TYPE_IS_INTERFACE(type)	 \
	(G_TYPE_FUNDAMENTAL (type) == G_TYPE_INTERFACE)
#define G_TYPE_IS_OBJECT(type)	 \
	(G_TYPE_FUNDAMENTAL (type) == G_TYPE_OBJECT)
#define G_TYPE_MODULE_GET_CLASS(module)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((module), G_TYPE_TYPE_MODULE, \
	GTypeModuleClass))
#define G_OBJECT_GET_CLASS(object)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((object), G_TYPE_OBJECT, GObjectClass))
#define G_PARAM_SPEC_GET_CLASS(pspec)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((pspec), G_TYPE_PARAM, GParamSpecClass))
#define G_TYPE_PLUGIN_GET_CLASS(inst)	 \
	(G_TYPE_INSTANCE_GET_INTERFACE ((inst), G_TYPE_TYPE_PLUGIN, \
	GTypePluginClass))
#define G_ENUM_CLASS_TYPE_NAME(class)	 \
	(g_type_name (G_ENUM_CLASS_TYPE (class)))
#define G_FLAGS_CLASS_TYPE_NAME(class)	 \
	(g_type_name (G_FLAGS_TYPE (class)))
#define G_OBJECT_CLASS_NAME(class)	 \
	(g_type_name (G_OBJECT_CLASS_TYPE (class)))
#define G_PARAM_SPEC_TYPE_NAME(pspec)	 \
	(g_type_name (G_PARAM_SPEC_TYPE (pspec)))
#define G_TYPE_IS_ABSTRACT(type)	 \
	(g_type_test_flags ((type), G_TYPE_FLAG_ABSTRACT))
#define G_TYPE_IS_CLASSED(type)	 \
	(g_type_test_flags ((type), G_TYPE_FLAG_CLASSED))
#define G_TYPE_IS_DEEP_DERIVABLE(type)	 \
	(g_type_test_flags ((type), G_TYPE_FLAG_DEEP_DERIVABLE))
#define G_TYPE_IS_DERIVABLE(type)	 \
	(g_type_test_flags ((type), G_TYPE_FLAG_DERIVABLE))
#define G_TYPE_IS_INSTANTIATABLE(type)	 \
	(g_type_test_flags ((type), G_TYPE_FLAG_INSTANTIATABLE))
#define G_TYPE_IS_VALUE_ABSTRACT(type)	 \
	(g_type_test_flags ((type), G_TYPE_FLAG_VALUE_ABSTRACT))
#define G_TYPE_HAS_VALUE_TABLE(type)	 \
	(g_type_value_table_peek (type) != NULL)
#define G_TYPE_CHECK_CLASS_CAST(g_class,g_type,c_type)	 \
	(_G_TYPE_CCC ((g_class), (g_type), c_type))
#define G_TYPE_CHECK_CLASS_TYPE(g_class,g_type)	 \
	(_G_TYPE_CCT ((g_class), (g_type)))
#define G_TYPE_CHECK_INSTANCE(instance)	 \
	(_G_TYPE_CHI ((GTypeInstance*) (instance)))
#define G_TYPE_CHECK_INSTANCE_CAST(instance,g_type,c_type)	 \
	(_G_TYPE_CIC ((instance), (g_type), c_type))
#define G_TYPE_CHECK_INSTANCE_TYPE(instance,g_type)	 \
	(_G_TYPE_CIT ((instance), (g_type)))
#define G_TYPE_CHECK_VALUE_TYPE(value,g_type)	 \
	(_G_TYPE_CVH ((value), (g_type)))
#define G_TYPE_INSTANCE_GET_CLASS(instance,g_type,c_type)	 \
	(_G_TYPE_IGC ((instance), (g_type), c_type))
#define G_TYPE_INSTANCE_GET_INTERFACE(instance,g_type,c_type)	 \
	(_G_TYPE_IGI ((instance), (g_type), c_type))
#define G_DEFINE_TYPE_WITH_CODE(TN,t_n,T_P,_C_)	 \
	G_DEFINE_TYPE_EXTENDED (TN, t_n, T_P, 0, _C_)
#define G_DEFINE_TYPE(TN,t_n,T_P)	 \
	G_DEFINE_TYPE_EXTENDED (TN, t_n, T_P, 0, {})
#define G_DEFINE_ABSTRACT_TYPE(TN,t_n,T_P)	 \
	G_DEFINE_TYPE_EXTENDED (TN, t_n, T_P, G_TYPE_FLAG_ABSTRACT, {})
#define G_OBJECT_WARN_INVALID_PROPERTY_ID(object,property_id,pspec)	 \
	G_OBJECT_WARN_INVALID_PSPEC ((object), "property", (property_id), \
	(pspec))
#define g_signal_connect(instance,detailed_signal,c_handler,data)	 \
	g_signal_connect_data ((instance), (detailed_signal), (c_handler), \
	(data), NULL, (GConnectFlags) 0)
#define g_signal_connect_after(instance,detailed_signal,c_handler,data)	 \
	g_signal_connect_data ((instance), (detailed_signal), (c_handler), \
	(data), NULL, G_CONNECT_AFTER)
#define g_signal_connect_swapped(instance,detailed_signal,c_handler,data)	 \
	g_signal_connect_data ((instance), (detailed_signal), (c_handler), \
	(data), NULL, G_CONNECT_SWAPPED)
#define g_signal_handlers_block_by_func(instance,func,data)	 \
	g_signal_handlers_block_matched ((instance), (GSignalMatchType) \
	(G_SIGNAL_MATCH_FUNC | G_SIGNAL_MATCH_DATA), 0, 0, NULL, (func), \
	(data))
#define g_signal_handlers_disconnect_by_func(instance,func,data)	 \
	g_signal_handlers_disconnect_matched ((instance), (GSignalMatchType) \
	(G_SIGNAL_MATCH_FUNC | G_SIGNAL_MATCH_DATA), 0, 0, NULL, (func), \
	(data))
#define g_signal_handlers_unblock_by_func(instance,func,data)	 \
	g_signal_handlers_unblock_matched ((instance), (GSignalMatchType) \
	(G_SIGNAL_MATCH_FUNC | G_SIGNAL_MATCH_DATA), 0, 0, NULL, (func), \
	(data))
#define G_CCLOSURE_SWAP_DATA(cclosure)	 \
 (((GClosure*) (cclosure))->derivative_flag)
#define G_OBJECT_WARN_INVALID_PSPEC(object,pname,property_id,pspec)	 \
G_STMT_START { \
  GObject *_object = (GObject*) (object); \
  GParamSpec *_pspec = (GParamSpec*) (pspec); \
  guint _property_id = (property_id); \
  g_warning ("%s: invalid %s id %u for \"%s\" of type %s in %s", \
	     G_STRLOC, \
             (pname), \
             _property_id, \
             _pspec->name, \
             g_type_name (G_PARAM_SPEC_TYPE (_pspec)), \
             G_OBJECT_TYPE_NAME (_object)); \
} G_STMT_END
#define G_CLOSURE_N_NOTIFIERS(cl)	(((cl)->n_guards &lt;&lt; 1L) + \
	(cl)->n_fnotifiers + (cl)->n_inotifiers)
#define G_TYPE_FROM_CLASS(g_class)	(((GTypeClass*) (g_class))->g_type)
#define G_VALUE_TYPE(value)	(((GValue*) (value))->g_type)
#define _G_TYPE_IGC(ip,gt,ct)	((ct*) (((GTypeInstance*) ip)->g_class))
#define G_TYPE_CLASS_GET_PRIVATE(klass,g_type,c_type)	((c_type*) g_type_class_get_private ((GTypeClass*) (klass), (g_type)))
#define G_CALLBACK(f)	((GCallback) (f))
#define G_REAL_CLOSURE(_c)	((GRealClosure *)G_STRUCT_MEMBER_P ((_c), -G_STRUCT_OFFSET (GRealClosure, closure)))
#define G_TYPE_FLAG_RESERVED_ID_BIT	((GType) (1 &lt;&lt; 0))
#define G_TYPE_IS_FUNDAMENTAL(type)	((type) &lt;= G_TYPE_FUNDAMENTAL_MAX)
#define G_TYPE_IS_DERIVED(type)	((type) > G_TYPE_FUNDAMENTAL_MAX)
#define G_ATOMIC_ARRAY_GET_LOCKED(_array,_type)	((_type *)((_array)->data))
#define G_ATOMIC_ARRAY_DATA_SIZE(mem)	(*((gsize *) (mem) - 1))
#define G_PARAM_MASK	(0x000000ff)
#define G_VALUE_NOCOPY_CONTENTS	(1 &lt;&lt; 27)
#define G_TYPE_FUNDAMENTAL_SHIFT	(2)
#define G_TYPE_RESERVED_GLIB_FIRST	(22)
#define G_TYPE_FUNDAMENTAL_MAX	(255 &lt;&lt; G_TYPE_FUNDAMENTAL_SHIFT)
#define G_TYPE_RESERVED_GLIB_LAST	(31)
#define G_TYPE_RESERVED_BSE_FIRST	(32)
#define G_TYPE_RESERVED_BSE_LAST	(48)
#define G_TYPE_RESERVED_USER_FIRST	(49)
#define G_PARAM_USER_SHIFT	(8)
#define G_TYPE_ARRAY	(g_array_get_type ())
#define G_TYPE_BINDING_FLAGS	(g_binding_flags_get_type ())
#define G_TYPE_BINDING	(g_binding_get_type ())
#define G_TYPE_BYTES	(g_bytes_get_type ())
#define G_TYPE_BYTE_ARRAY	(g_byte_array_get_type ())
#define G_TYPE_CLOSURE	(g_closure_get_type ())
#define G_TYPE_DATE	(g_date_get_type ())
#define G_TYPE_DATE_TIME	(g_date_time_get_type ())
#define G_TYPE_ERROR	(g_error_get_type ())
#define G_TYPE_GSTRING	(g_gstring_get_type ())
#define G_TYPE_GTYPE	(g_gtype_get_type())
#define G_TYPE_HASH_TABLE	(g_hash_table_get_type ())
#define G_TYPE_INITIALLY_UNOWNED	(g_initially_unowned_get_type())
#define G_TYPE_IO_CHANNEL	(g_io_channel_get_type ())
#define G_TYPE_IO_CONDITION	(g_io_condition_get_type ())
#define G_TYPE_KEY_FILE	(g_key_file_get_type ())
#define G_TYPE_MAIN_CONTEXT	(g_main_context_get_type ())
#define G_TYPE_MAIN_LOOP	(g_main_loop_get_type ())
#define G_TYPE_MATCH_INFO	(g_match_info_get_type ())
#define G_PARAM_READWRITE	(G_PARAM_READABLE | G_PARAM_WRITABLE)
#define G_PARAM_SPEC_VALUE_TYPE(pspec)	(G_PARAM_SPEC (pspec)->value_type)
#define G_TYPE_PARAM_CHAR	(g_param_spec_types[0])
#define G_TYPE_PARAM_ENUM	(g_param_spec_types[10])
#define G_TYPE_PARAM_FLAGS	(g_param_spec_types[11])
#define G_TYPE_PARAM_FLOAT	(g_param_spec_types[12])
#define G_TYPE_PARAM_DOUBLE	(g_param_spec_types[13])
#define G_TYPE_PARAM_STRING	(g_param_spec_types[14])
#define G_TYPE_PARAM_PARAM	(g_param_spec_types[15])
#define G_TYPE_PARAM_BOXED	(g_param_spec_types[16])
#define G_TYPE_PARAM_POINTER	(g_param_spec_types[17])
#define G_TYPE_PARAM_VALUE_ARRAY	(g_param_spec_types[18])	/* : DEPRECATED */
#define G_TYPE_PARAM_OBJECT	(g_param_spec_types[19])
#define G_TYPE_PARAM_UCHAR	(g_param_spec_types[1])
#define G_TYPE_PARAM_OVERRIDE	(g_param_spec_types[20])
#define G_TYPE_PARAM_GTYPE	(g_param_spec_types[21])
#define G_TYPE_PARAM_VARIANT	(g_param_spec_types[22])
#define G_TYPE_PARAM_BOOLEAN	(g_param_spec_types[2])
#define G_TYPE_PARAM_INT	(g_param_spec_types[3])
#define G_TYPE_PARAM_UINT	(g_param_spec_types[4])
#define G_TYPE_PARAM_LONG	(g_param_spec_types[5])
#define G_TYPE_PARAM_ULONG	(g_param_spec_types[6])
#define G_TYPE_PARAM_INT64	(g_param_spec_types[7])
#define G_TYPE_PARAM_UINT64	(g_param_spec_types[8])
#define G_TYPE_PARAM_UNICHAR	(g_param_spec_types[9])
#define G_PARAM_STATIC_STRINGS	(G_PARAM_STATIC_NAME | G_PARAM_STATIC_NICK | G_PARAM_STATIC_BLURB)
#define G_TYPE_PTR_ARRAY	(g_ptr_array_get_type ())
#define G_TYPE_REGEX	(g_regex_get_type ())
#define G_TYPE_SOURCE	(g_source_get_type ())
#define G_TYPE_STRV	(g_strv_get_type ())
#define G_INITIALLY_UNOWNED_CLASS(class)	(G_TYPE_CHECK_CLASS_CAST ((class), G_TYPE_INITIALLY_UNOWNED, GInitiallyUnownedClass))
#define _G_TYPE_CCT(cp,gt)	(g_type_check_class_is_a ((GTypeClass*) cp, gt))
#define G_IS_INITIALLY_UNOWNED_CLASS(class)	(G_TYPE_CHECK_CLASS_TYPE ((class), G_TYPE_INITIALLY_UNOWNED))
#define _G_TYPE_CHI(ip)	(g_type_check_instance ((GTypeInstance*) ip))
#define G_BINDING(obj)	(G_TYPE_CHECK_INSTANCE_CAST ((obj), G_TYPE_BINDING, GBinding))
#define G_INITIALLY_UNOWNED(object)	(G_TYPE_CHECK_INSTANCE_CAST ((object), G_TYPE_INITIALLY_UNOWNED, GInitiallyUnowned))
#define G_PARAM_SPEC_GTYPE(pspec)	(G_TYPE_CHECK_INSTANCE_CAST ((pspec), G_TYPE_PARAM_GTYPE, GParamSpecGType))
#define G_PARAM_SPEC_VARIANT(pspec)	(G_TYPE_CHECK_INSTANCE_CAST ((pspec), G_TYPE_PARAM_VARIANT, GParamSpecVariant))
#define _G_TYPE_CIT(ip,gt)	(g_type_check_instance_is_a ((GTypeInstance*) ip, gt))
#define G_IS_BINDING(obj)	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), G_TYPE_BINDING))
#define G_IS_INITIALLY_UNOWNED(object)	(G_TYPE_CHECK_INSTANCE_TYPE ((object), G_TYPE_INITIALLY_UNOWNED))
#define G_IS_PARAM_SPEC_GTYPE(pspec)	(G_TYPE_CHECK_INSTANCE_TYPE ((pspec), G_TYPE_PARAM_GTYPE))
#define G_IS_PARAM_SPEC_VARIANT(pspec)	(G_TYPE_CHECK_INSTANCE_TYPE ((pspec), G_TYPE_PARAM_VARIANT))
#define G_TYPE_IS_VALUE(type)	(g_type_check_is_value_type (type))
#define G_TYPE_IS_VALUE_TYPE(type)	(g_type_check_is_value_type (type))
#define _G_TYPE_CHV(vl)	(g_type_check_value ((GValue*) vl))
#define G_IS_VALUE(value)	(G_TYPE_CHECK_VALUE (value))
#define _G_TYPE_CVH(vl,gt)	(g_type_check_value_holds ((GValue*) vl, gt))
#define G_VALUE_HOLDS_GTYPE(value)	(G_TYPE_CHECK_VALUE_TYPE ((value), G_TYPE_GTYPE))
#define G_VALUE_HOLDS_VARIANT(value)	(G_TYPE_CHECK_VALUE_TYPE ((value), G_TYPE_VARIANT))
#define G_SIGNAL_TYPE_STATIC_SCOPE	(G_TYPE_FLAG_RESERVED_ID_BIT)
#define G_ENUM_CLASS_TYPE(class)	(G_TYPE_FROM_CLASS (class))
#define G_FLAGS_CLASS_TYPE(class)	(G_TYPE_FROM_CLASS (class))
#define G_OBJECT_CLASS_TYPE(class)	(G_TYPE_FROM_CLASS (class))
#define G_OBJECT_TYPE(object)	(G_TYPE_FROM_INSTANCE (object))
#define G_PARAM_SPEC_TYPE(pspec)	(G_TYPE_FROM_INSTANCE (pspec))
#define G_TYPE_IS_BOXED(type)	(G_TYPE_FUNDAMENTAL (type) == G_TYPE_BOXED)
#define G_TYPE_IS_ENUM(type)	(G_TYPE_FUNDAMENTAL (type) == G_TYPE_ENUM)
#define G_TYPE_IS_FLAGS(type)	(G_TYPE_FUNDAMENTAL (type) == G_TYPE_FLAGS)
#define G_TYPE_IS_PARAM(type)	(G_TYPE_FUNDAMENTAL (type) == G_TYPE_PARAM)
#define G_TYPE_FUNDAMENTAL(type)	(g_type_fundamental (type))
#define G_INITIALLY_UNOWNED_GET_CLASS(object)	(G_TYPE_INSTANCE_GET_CLASS ((object), G_TYPE_INITIALLY_UNOWNED, GInitiallyUnownedClass))
#define G_TYPE_TYPE_MODULE	(g_type_module_get_type ())
#define G_OBJECT_TYPE_NAME(object)	(g_type_name (G_OBJECT_TYPE (object)))
#define G_VALUE_TYPE_NAME(value)	(g_type_name (G_VALUE_TYPE (value)))
#define G_TYPE_TYPE_PLUGIN	(g_type_plugin_get_type ())
#define G_TYPE_VALUE_ARRAY	(g_value_array_get_type ())	/* : DEPRECATED */
#define G_TYPE_VALUE	(g_value_get_type ())
#define G_TYPE_VARIANT_BUILDER	(g_variant_builder_get_type ())
#define G_TYPE_VARIANT_TYPE	(g_variant_type_get_gtype ())
#define G_TYPE_CHECK_VALUE(value)	(_G_TYPE_CHV ((value)))
#define G_SIGNAL_FLAGS_MASK	0x1ff
#define G_SIGNAL_MATCH_MASK	0x3f
#define GOBJECT_VAR	extern
#define _G_DEFINE_BOXED_TYPE_BEGIN(TypeName,type_name,copy_func,free_func)	GType type_name ##_get_type (void) { static volatile gsize g_define_type_id__volatile = 0; if (g_once_init_enter (&amp;g_define_type_id__volatile)) { GType g_define_type_id = g_boxed_type_register_static (g_intern_static_string (#TypeName), (GBoxedCopyFunc) copy_func, (GBoxedFreeFunc) free_func); {
#define _G_DEFINE_POINTER_TYPE_BEGIN(TypeName,type_name)	GType type_name ##_get_type (void) { static volatile gsize g_define_type_id__volatile = 0; if (g_once_init_enter (&amp;g_define_type_id__volatile)) { GType g_define_type_id = g_pointer_type_register_static (g_intern_static_string (#TypeName)); {
#define g_cclosure_marshal_BOOL__BOXED_BOXED	g_cclosure_marshal_BOOLEAN__BOXED_BOXED
#define g_cclosure_marshal_BOOL__FLAGS	g_cclosure_marshal_BOOLEAN__FLAGS
#define G_DEFINE_BOXED_TYPE(TypeName,type_name,copy_func,free_func)	G_DEFINE_BOXED_TYPE_WITH_CODE (TypeName, type_name, copy_func, free_func, {})
#define G_DEFINE_DYNAMIC_TYPE(TN,t_n,T_P)	G_DEFINE_DYNAMIC_TYPE_EXTENDED (TN, t_n, T_P, 0, {})
#define G_DEFINE_INTERFACE(TN,t_n,T_P)	G_DEFINE_INTERFACE_WITH_CODE(TN, t_n, T_P, ;)
#define G_DEFINE_POINTER_TYPE(TypeName,type_name)	G_DEFINE_POINTER_TYPE_WITH_CODE (TypeName, type_name, {})
#define g_signal_handlers_disconnect_by_data(instance,data)	g_signal_handlers_disconnect_matched ((instance), G_SIGNAL_MATCH_DATA, 0, 0, NULL, NULL, (data))
#define g_clear_object(object_ptr)	G_STMT_START { gpointer *_p = (gpointer) (object_ptr); gpointer _o; do _o = g_atomic_pointer_get (_p); while G_UNLIKELY (!g_atomic_pointer_compare_and_exchange (_p, _o, NULL)); if (_o) g_object_unref (_o); } G_STMT_END
#define G_ATOMIC_ARRAY_DO_TRANSACTION(_array,_type,_C_)	G_STMT_START { volatile gpointer *_datap = &amp;(_array)->data; _type *transaction_data, *__check; __check = g_atomic_pointer_get (_datap); do { transaction_data = __check; {_C_;} __check = g_atomic_pointer_get (_datap); } while (transaction_data != __check); } G_STMT_END
#define G_TYPE_INVALID	G_TYPE_MAKE_FUNDAMENTAL (0)
#define G_TYPE_NONE	G_TYPE_MAKE_FUNDAMENTAL (1)
#define G_TYPE_INT64	G_TYPE_MAKE_FUNDAMENTAL (10)
#define G_TYPE_UINT64	G_TYPE_MAKE_FUNDAMENTAL (11)
#define G_TYPE_ENUM	G_TYPE_MAKE_FUNDAMENTAL (12)
#define G_TYPE_FLAGS	G_TYPE_MAKE_FUNDAMENTAL (13)
#define G_TYPE_FLOAT	G_TYPE_MAKE_FUNDAMENTAL (14)
#define G_TYPE_DOUBLE	G_TYPE_MAKE_FUNDAMENTAL (15)
#define G_TYPE_STRING	G_TYPE_MAKE_FUNDAMENTAL (16)
#define G_TYPE_POINTER	G_TYPE_MAKE_FUNDAMENTAL (17)
#define G_TYPE_BOXED	G_TYPE_MAKE_FUNDAMENTAL (18)
#define G_TYPE_PARAM	G_TYPE_MAKE_FUNDAMENTAL (19)
#define G_TYPE_INTERFACE	G_TYPE_MAKE_FUNDAMENTAL (2)
#define G_TYPE_OBJECT	G_TYPE_MAKE_FUNDAMENTAL (20)
#define G_TYPE_VARIANT	G_TYPE_MAKE_FUNDAMENTAL (21)
#define G_TYPE_CHAR	G_TYPE_MAKE_FUNDAMENTAL (3)
#define G_TYPE_UCHAR	G_TYPE_MAKE_FUNDAMENTAL (4)
#define G_TYPE_BOOLEAN	G_TYPE_MAKE_FUNDAMENTAL (5)
#define G_TYPE_INT	G_TYPE_MAKE_FUNDAMENTAL (6)
#define G_TYPE_UINT	G_TYPE_MAKE_FUNDAMENTAL (7)
#define G_TYPE_LONG	G_TYPE_MAKE_FUNDAMENTAL (8)
#define G_TYPE_ULONG	G_TYPE_MAKE_FUNDAMENTAL (9)
#define G_DEFINE_DYNAMIC_TYPE_EXTENDED(TypeName,type_name,TYPE_PARENT,flags,CODE)	\
static void     type_name##_init              (TypeName        *self); \
static void     type_name##_class_init        (TypeName##Class *klass); \
static void     type_name##_class_finalize    (TypeName##Class *klass); \
static gpointer type_name##_parent_class = NULL; \
static GType    type_name##_type_id = 0; \
static void     type_name##_class_intern_init (gpointer klass) \
{ \
  type_name##_parent_class = g_type_class_peek_parent (klass); \
  type_name##_class_init ((TypeName##Class*) klass); \
} \
GType \
type_name##_get_type (void) \
{ \
  return type_name##_type_id; \
} \
static void \
type_name##_register_type (GTypeModule *type_module) \
{ \
  GType g_define_type_id G_GNUC_UNUSED; \
  const GTypeInfo g_define_type_info = { \
    sizeof (TypeName##Class), \
    (GBaseInitFunc) NULL, \
    (GBaseFinalizeFunc) NULL, \
    (GClassInitFunc) type_name##_class_intern_init, \
    (GClassFinalizeFunc) type_name##_class_finalize, \
    NULL,   /* class_data */ \
    sizeof (TypeName), \
    0,      /* n_preallocs */ \
    (GInstanceInitFunc) type_name##_init, \
    NULL    /* value_table */ \
  }; \
  type_name##_type_id = g_type_module_register_type (type_module, \
                                                     TYPE_PARENT, \
                                                     #TypeName, \
                                                     &amp;g_define_type_info, \
                                                     (GTypeFlags) flags); \
  g_define_type_id = type_name##_type_id; \
  { CODE ; } \
}
#define _G_DEFINE_INTERFACE_EXTENDED_BEGIN(TypeName,type_name,TYPE_PREREQ)	\
\
static void     type_name##_default_init        (TypeName##Interface *klass); \
\
GType \
type_name##_get_type (void) \
{ \
  static volatile gsize g_define_type_id__volatile = 0; \
  if (g_once_init_enter (&amp;g_define_type_id__volatile))  \
    { \
      GType g_define_type_id = \
        g_type_register_static_simple (G_TYPE_INTERFACE, \
                                       g_intern_static_string (#TypeName), \
                                       sizeof (TypeName##Interface), \
                                       (GClassInitFunc)type_name##_default_init, \
                                       0, \
                                       (GInstanceInitFunc)NULL, \
                                       (GTypeFlags) 0); \
      if (TYPE_PREREQ) \
        g_type_interface_add_prerequisite (g_define_type_id, TYPE_PREREQ); \
      {				/* custom code follows */
#define _G_DEFINE_TYPE_EXTENDED_BEGIN(TypeName,type_name,TYPE_PARENT,flags)	\
\
static void     type_name##_init              (TypeName        *self); \
static void     type_name##_class_init        (TypeName##Class *klass); \
static gpointer type_name##_parent_class = NULL; \
static void     type_name##_class_intern_init (gpointer klass) \
{ \
  type_name##_parent_class = g_type_class_peek_parent (klass); \
  type_name##_class_init ((TypeName##Class*) klass); \
} \
\
GType \
type_name##_get_type (void) \
{ \
  static volatile gsize g_define_type_id__volatile = 0; \
  if (g_once_init_enter (&amp;g_define_type_id__volatile))  \
    { \
      GType g_define_type_id = \
        g_type_register_static_simple (TYPE_PARENT, \
                                       g_intern_static_string (#TypeName), \
                                       sizeof (TypeName##Class), \
                                       (GClassInitFunc) type_name##_class_intern_init, \
                                       sizeof (TypeName), \
                                       (GInstanceInitFunc) type_name##_init, \
                                       (GTypeFlags) flags); \
      { /* custom code follows */;
#define G_DEFINE_BOXED_TYPE_WITH_CODE(TypeName,type_name,copy_func,free_func,_C_)	_G_DEFINE_BOXED_TYPE_BEGIN (TypeName, type_name, copy_func, free_func) {_C_;} _G_DEFINE_TYPE_EXTENDED_END()
#define G_DEFINE_INTERFACE_WITH_CODE(TN,t_n,T_P,_C_)	_G_DEFINE_INTERFACE_EXTENDED_BEGIN(TN, t_n, T_P) {_C_;} _G_DEFINE_INTERFACE_EXTENDED_END()
#define G_DEFINE_POINTER_TYPE_WITH_CODE(TypeName,type_name,_C_)	_G_DEFINE_POINTER_TYPE_BEGIN (TypeName, type_name) {_C_;} _G_DEFINE_TYPE_EXTENDED_END()
#define G_DEFINE_ABSTRACT_TYPE_WITH_CODE(TN,t_n,T_P,_C_)	_G_DEFINE_TYPE_EXTENDED_BEGIN (TN, t_n, T_P, G_TYPE_FLAG_ABSTRACT) {_C_;} _G_DEFINE_TYPE_EXTENDED_END()
#define G_DEFINE_TYPE_EXTENDED(TN,t_n,T_P,_f_,_C_)	_G_DEFINE_TYPE_EXTENDED_BEGIN (TN, t_n, T_P, _f_) {_C_;} _G_DEFINE_TYPE_EXTENDED_END()
#define G_VALUE_INIT	{ 0, { { 0 } } }
#define G_IMPLEMENT_INTERFACE_DYNAMIC(TYPE_IFACE,iface_init)	{ const GInterfaceInfo g_implement_interface_info = { (GInterfaceInitFunc) iface_init, NULL, NULL }; g_type_module_add_interface (type_module, g_define_type_id, TYPE_IFACE, &amp;g_implement_interface_info); }
#define G_IMPLEMENT_INTERFACE(TYPE_IFACE,iface_init)	{ \
  const GInterfaceInfo g_implement_interface_info = { \
    (GInterfaceInitFunc) iface_init, NULL, NULL \
  }; \
  g_type_add_interface_static (g_define_type_id, TYPE_IFACE, &amp;g_implement_interface_info); \
}
#define _G_DEFINE_INTERFACE_EXTENDED_END()	} g_once_init_leave (&amp;g_define_type_id__volatile, g_define_type_id); } return g_define_type_id__volatile; }
#define _G_DEFINE_TYPE_EXTENDED_END()	} g_once_init_leave (&amp;g_define_type_id__volatile, g_define_type_id); } return g_define_type_id__volatile; }

typedef gulong GType;
typedef struct _GTypeClass GTypeClass;
typedef struct _GTypeInstance {
    GTypeClass *g_class;
} GTypeInstance;
typedef struct _GValue GValue;
typedef enum {
    G_PARAM_READABLE = 1,
    G_PARAM_WRITABLE = 2,
    G_PARAM_CONSTRUCT = 4,
    G_PARAM_CONSTRUCT_ONLY = 8,
    G_PARAM_LAX_VALIDATION = 16,
    G_PARAM_STATIC_NAME = 32,
    G_PARAM_PRIVATE = G_PARAM_STATIC_NAME,
    G_PARAM_STATIC_NICK = 64,
    G_PARAM_STATIC_BLURB = 128,
    G_PARAM_DEPRECATED = 1 &lt;&lt; 31
} GParamFlags;
typedef struct _GParamSpec {
    GTypeInstance g_type_instance;
    gchar *name;
    GParamFlags flags;
    GType value_type;
    GType owner_type;
    gchar *_nick;
    gchar *_blurb;
    GData *qdata;
    guint ref_count;
    guint param_id;
} GParamSpec;
typedef struct _GClosure {
    volatile guint ref_count:15;
    volatile guint meta_marshal_nouse:1;
    volatile guint n_guards:1;
    volatile guint n_fnotifiers:2;
    volatile guint n_inotifiers:8;
    volatile guint in_inotify:1;
    volatile guint floating:1;
    volatile guint derivative_flag:1;
    volatile guint in_marshal:1;
    volatile guint is_invalid:1;
    void (*marshal) (GClosure * closure, GValue * return_value,
		     guint n_param_values, const GValue * param_values,
		     gpointer invocation_hint, gpointer marshal_data);
    gpointer data;
    GClosureNotifyData *notifiers;
} GClosure;
typedef void (*GClosureNotify) (gpointer data, GClosure * closure);
typedef struct _GClosureNotifyData GClosureNotifyData;
typedef gboolean(*GTypeClassCacheFunc) (gpointer, GTypeClass *);

typedef struct _GObject {
    GTypeInstance g_type_instance;
    volatile guint ref_count;
    GData *qdata;
} GObject;
struct _GValue {
    GType g_type;
    union {
	gint v_int;
	guint v_uint;
	glong v_long;
	gulong v_ulong;
	gint64 v_int64;
	guint64 v_uint64;
	gfloat v_float;
	gdouble v_double;
	gpointer v_pointer;
    } data[2];
};
typedef struct _GObjectConstructParam {
    GParamSpec *pspec;
    GValue *value;
} GObjectConstructParam;
typedef struct _GObjectClass {
    GTypeClass g_type_class;
    GSList *construct_properties;
    GObject *(*constructor) (GType type, guint n_construct_properties,
			     GObjectConstructParam * construct_properties);
    void (*set_property) (GObject * object, guint property_id,
			  const GValue * value, GParamSpec * pspec);
    void (*get_property) (GObject * object, guint property_id,
			  GValue * value, GParamSpec * pspec);
    void (*dispose) (GObject * object);
    void (*finalize) (GObject * object);
    void (*dispatch_properties_changed) (GObject * object, guint n_pspecs,
					 GParamSpec * *pspecs);
    void (*notify) (GObject * object, GParamSpec * pspec);
    void (*constructed) (GObject * object);
    gsize flags;
    gpointer pdummy[6];
} GObjectClass;
typedef void (*GTypeInterfaceCheckFunc) (gpointer, gpointer);
typedef struct _GValueArray {
    guint n_values;
    GValue *values;
    guint n_prealloced;
} GValueArray;
typedef struct _GEnumValue {
    gint value;
    const gchar *value_name;
    const gchar *value_nick;
} GEnumValue;
typedef struct _GEnumClass {
    GTypeClass g_type_class;
    gint minimum;
    gint maximum;
    guint n_values;
    GEnumValue *values;
} GEnumClass;
typedef struct _GParamSpecPool GParamSpecPool;
typedef enum {
    G_TYPE_DEBUG_NONE = 0,
    G_TYPE_DEBUG_OBJECTS = 1,
    G_TYPE_DEBUG_SIGNALS = 2,
    G_TYPE_DEBUG_MASK = 3
} GTypeDebugFlags;
typedef struct _GTypePlugin GTypePlugin;
typedef enum {
    G_SIGNAL_MATCH_ID = 1,
    G_SIGNAL_MATCH_DETAIL = 2,
    G_SIGNAL_MATCH_CLOSURE = 4,
    G_SIGNAL_MATCH_FUNC = 8,
    G_SIGNAL_MATCH_DATA = 16,
    G_SIGNAL_MATCH_UNBLOCKED = 32
} GSignalMatchType;
typedef struct _GFlagsValue {
    guint value;
    const gchar *value_name;
    const gchar *value_nick;
} GFlagsValue;
typedef void (*GClosureMarshal) (GClosure * closure, GValue * return_value,
				 guint n_param_values,
				 const GValue * param_values,
				 gpointer invocation_hint,
				 gpointer marshal_data);
typedef void (*GCallback) (void);
typedef struct _GFlagsClass {
    GTypeClass g_type_class;
    guint mask;
    guint n_values;
    GFlagsValue *values;
} GFlagsClass;
typedef enum {
    G_SIGNAL_RUN_FIRST = 1,
    G_SIGNAL_RUN_LAST = 2,
    G_SIGNAL_RUN_CLEANUP = 4,
    G_SIGNAL_NO_RECURSE = 8,
    G_SIGNAL_DETAILED = 16,
    G_SIGNAL_ACTION = 32,
    G_SIGNAL_NO_HOOKS = 64,
    G_SIGNAL_MUST_COLLECT = 1 &lt;&lt; 7,
    G_SIGNAL_DEPRECATED = 1 &lt;&lt; 8
} GSignalFlags;
typedef struct _GSignalInvocationHint {
    guint signal_id;
    GQuark detail;
    GSignalFlags run_type;
} GSignalInvocationHint;
typedef void (*GWeakNotify) (gpointer data,
			     GObject * where_the_object_was);
typedef void (*GBaseInitFunc) (gpointer);
typedef void (*GBaseFinalizeFunc) (gpointer);
typedef void (*GClassInitFunc) (gpointer g_class, gpointer class_data);
typedef void (*GClassFinalizeFunc) (gpointer g_class, gpointer class_data);
typedef void (*GInstanceInitFunc) (GTypeInstance * instance,
				   gpointer g_class);
typedef union _GTypeCValue {
    gint v_int;
    glong v_long;
    gint64 v_int64;
    gdouble v_double;
    gpointer v_pointer;
} GTypeCValue;
typedef struct _GTypeValueTable {
    void (*value_init) (GValue * value);
    void (*value_free) (GValue * value);
    void (*value_copy) (const GValue * src_value, GValue * dest_value);
     gpointer(*value_peek_pointer) (const GValue * value);
    gchar *collect_format;
    gchar *(*collect_value) (GValue * value, guint n_collect_values,
			     GTypeCValue * collect_values,
			     guint collect_flags);
    gchar *lcopy_format;
    gchar *(*lcopy_value) (const GValue * value, guint n_collect_values,
			   GTypeCValue * collect_values,
			   guint collect_flags);
} GTypeValueTable;
typedef struct _GTypeInfo {
    guint16 class_size;
    GBaseInitFunc base_init;
    GBaseFinalizeFunc base_finalize;
    GClassInitFunc class_init;
    GClassFinalizeFunc class_finalize;
    gconstpointer class_data;
    guint16 instance_size;
    guint16 n_preallocs;
    GInstanceInitFunc instance_init;
    const GTypeValueTable *value_table;
} GTypeInfo;
typedef enum {
    G_TYPE_FLAG_ABSTRACT = 16,
    G_TYPE_FLAG_VALUE_ABSTRACT = 32
} GTypeFlags;
typedef struct _GTypeModule {
    GObject parent_instance;
    guint use_count;
    GSList *type_infos;
    GSList *interface_infos;
    gchar *name;
} GTypeModule;
typedef void (*GInterfaceInitFunc) (gpointer g_iface, gpointer iface_data);
typedef void (*GInterfaceFinalizeFunc) (gpointer g_iface,
					gpointer iface_data);
typedef struct _GInterfaceInfo {
    GInterfaceInitFunc interface_init;
    GInterfaceFinalizeFunc interface_finalize;
    gpointer interface_data;
} GInterfaceInfo;
typedef gboolean(*GSignalAccumulator) (GSignalInvocationHint * ihint,
				       GValue * return_accu,
				       const GValue * handler_return,
				       gpointer data);
typedef GClosureMarshal GSignalCMarshaller;
typedef enum {
    G_CONNECT_AFTER = 1,
    G_CONNECT_SWAPPED = 2
} GConnectFlags;
typedef enum {
    G_TYPE_FLAG_CLASSED = 1,
    G_TYPE_FLAG_INSTANTIATABLE = 2,
    G_TYPE_FLAG_DERIVABLE = 4,
    G_TYPE_FLAG_DEEP_DERIVABLE = 8
} GTypeFundamentalFlags;
typedef struct _GTypeFundamentalInfo {
    GTypeFundamentalFlags type_flags;
} GTypeFundamentalInfo;
typedef struct _GTypeQuery {
    GType type;
    const gchar *type_name;
    guint class_size;
    guint instance_size;
} GTypeQuery;
typedef gboolean(*GSignalEmissionHook) (GSignalInvocationHint * ihint,
					guint n_param_values,
					const GValue * param_values,
					gpointer data);
typedef void (*GValueTransform) (const GValue * src_value,
				 GValue * dest_value);
typedef struct _GParameter {
    const gchar *name;
    GValue value;
} GParameter;
typedef struct _GParamSpecTypeInfo {
    guint16 instance_size;
    guint16 n_preallocs;
    void (*instance_init) (GParamSpec * pspec);
    GType value_type;
    void (*finalize) (GParamSpec * pspec);
    void (*value_set_default) (GParamSpec * pspec, GValue * value);
     gboolean(*value_validate) (GParamSpec * pspec, GValue * value);
     gint(*values_cmp) (GParamSpec * pspec, const GValue * value1,
			const GValue * value2);
} GParamSpecTypeInfo;
typedef gpointer(*GBoxedCopyFunc) (gpointer);
typedef void (*GBoxedFreeFunc) (gpointer);
typedef struct _GSignalQuery {
    guint signal_id;
    const gchar *signal_name;
    GType itype;
    GSignalFlags signal_flags;
    GType return_type;
    guint n_params;
    const GType *param_types;
} GSignalQuery;
typedef struct _GTypeInterface {
    GType g_type;
    GType g_instance_type;
} GTypeInterface;
typedef void (*GTypePluginCompleteInterfaceInfo) (GTypePlugin * plugin,
						  GType instance_type,
						  GType interface_type,
						  GInterfaceInfo * info);
typedef struct _GParamSpecObject {
    GParamSpec parent_instance;
} GParamSpecObject;
typedef void (*GTypePluginUnuse) (GTypePlugin * plugin);
typedef void (*GTypePluginUse) (GTypePlugin * plugin);
typedef void (*GTypePluginCompleteTypeInfo) (GTypePlugin * plugin,
					     GType gtype, GTypeInfo * info,
					     GTypeValueTable *
					     value_table);
typedef struct _GTypePluginClass {
    GTypeInterface base_iface;
    GTypePluginUse use_plugin;
    GTypePluginUnuse unuse_plugin;
    GTypePluginCompleteTypeInfo complete_type_info;
    GTypePluginCompleteInterfaceInfo complete_interface_info;
} GTypePluginClass;
typedef struct _GCClosure {
    GClosure closure;
    gpointer callback;
} GCClosure;
typedef struct _GParamSpecUnichar {
    GParamSpec parent_instance;
    gunichar default_value;
} GParamSpecUnichar;
typedef struct _GParamSpecUInt64 {
    GParamSpec parent_instance;
    guint64 minimum;
    guint64 maximum;
    guint64 default_value;
} GParamSpecUInt64;
typedef struct _GParamSpecBoxed {
    GParamSpec parent_instance;
} GParamSpecBoxed;
typedef struct _GParamSpecOverride {
    GParamSpec parent_instance;
    GParamSpec *overridden;
} GParamSpecOverride;
typedef struct _GParamSpecClass {
    GTypeClass g_type_class;
    GType value_type;
    void (*finalize) (GParamSpec * pspec);
    void (*value_set_default) (GParamSpec * pspec, GValue * value);
     gboolean(*value_validate) (GParamSpec * pspec, GValue * value);
     gint(*values_cmp) (GParamSpec * pspec, const GValue * value1,
			const GValue * value2);
    gpointer dummy[4];
} GParamSpecClass;
typedef struct _GParamSpecLong {
    GParamSpec parent_instance;
    glong minimum;
    glong maximum;
    glong default_value;
} GParamSpecLong;
typedef struct _GParamSpecEnum {
    GParamSpec parent_instance;
    GEnumClass *enum_class;
    gint default_value;
} GParamSpecEnum;
typedef struct _GParamSpecFloat {
    GParamSpec parent_instance;
    gfloat minimum;
    gfloat maximum;
    gfloat default_value;
    gfloat epsilon;
} GParamSpecFloat;
typedef struct _GParamSpecString {
    GParamSpec parent_instance;
    gchar *default_value;
    gchar *cset_first;
    gchar *cset_nth;
    gchar substitutor;
    guint null_fold_if_empty:1;
    guint ensure_non_null:1;
} GParamSpecString;
typedef struct _GParamSpecDouble {
    GParamSpec parent_instance;
    gdouble minimum;
    gdouble maximum;
    gdouble default_value;
    gdouble epsilon;
} GParamSpecDouble;
typedef struct _GParamSpecParam {
    GParamSpec parent_instance;
} GParamSpecParam;
typedef struct _GParamSpecValueArray {
    GParamSpec parent_instance;
    GParamSpec *element_spec;
    guint fixed_n_elements;
} GParamSpecValueArray;
typedef struct _GParamSpecFlags {
    GParamSpec parent_instance;
    GFlagsClass *flags_class;
    guint default_value;
} GParamSpecFlags;
typedef struct _GParamSpecInt64 {
    GParamSpec parent_instance;
    gint64 minimum;
    gint64 maximum;
    gint64 default_value;
} GParamSpecInt64;
typedef struct _GParamSpecPointer {
    GParamSpec parent_instance;
} GParamSpecPointer;
typedef struct _GParamSpecInt {
    GParamSpec parent_instance;
    gint minimum;
    gint maximum;
    gint default_value;
} GParamSpecInt;
typedef struct _GTypeModuleClass {
    GObjectClass parent_class;
     gboolean(*load) (GTypeModule * module);
    void (*unload) (GTypeModule * module);
    void (*reserved1) (void);
    void (*reserved2) (void);
    void (*reserved3) (void);
    void (*reserved4) (void);
} GTypeModuleClass;
typedef struct _GParamSpecUInt {
    GParamSpec parent_instance;
    guint minimum;
    guint maximum;
    guint default_value;
} GParamSpecUInt;
typedef struct _GParamSpecUChar {
    GParamSpec parent_instance;
    guint8 minimum;
    guint8 maximum;
    guint8 default_value;
} GParamSpecUChar;
typedef struct _GParamSpecULong {
    GParamSpec parent_instance;
    gulong minimum;
    gulong maximum;
    gulong default_value;
} GParamSpecULong;
typedef struct _GParamSpecChar {
    GParamSpec parent_instance;
    gint8 minimum;
    gint8 maximum;
    gint8 default_value;
} GParamSpecChar;
typedef struct _GParamSpecBoolean {
    GParamSpec parent_instance;
    gboolean default_value;
} GParamSpecBoolean;
typedef void (*GObjectFinalizeFunc) (GObject * object);
typedef void (*GObjectGetPropertyFunc) (GObject * object,
					guint property_id, GValue * value,
					GParamSpec * pspec);
typedef void (*GObjectSetPropertyFunc) (GObject * object,
					guint property_id,
					const GValue * value,
					GParamSpec * pspec);
typedef gchar *gchararray;
typedef gchar **GStrv;
typedef void (*GToggleNotify) (gpointer data, GObject * object,
			       gboolean is_last_ref);
typedef struct _GBinding GBinding;
typedef gboolean(*GBindingTransformFunc) (GBinding * binding,
					  const GValue * source_value,
					  GValue * target_value,
					  gpointer user_data);
typedef enum {
    G_BINDING_DEFAULT = 0,
    G_BINDING_BIDIRECTIONAL = 1 &lt;&lt; 0,
    G_BINDING_SYNC_CREATE = 1 &lt;&lt; 1,
    G_BINDING_INVERT_BOOLEAN = 1 &lt;&lt; 2
} GBindingFlags;
typedef struct _GObject {
    GTypeInstance g_type_instance;
    volatile guint ref_count;
    GData *qdata;
} GInitiallyUnowned;
typedef struct _GObjectClass {
    GTypeClass g_type_class;
    GSList *construct_properties;
    GObject *(*constructor) (GType type, guint n_construct_properties,
			     GObjectConstructParam * construct_properties);
    void (*set_property) (GObject * object, guint property_id,
			  const GValue * value, GParamSpec * pspec);
    void (*get_property) (GObject * object, guint property_id,
			  GValue * value, GParamSpec * pspec);
    void (*dispose) (GObject * object);
    void (*finalize) (GObject * object);
    void (*dispatch_properties_changed) (GObject * object, guint n_pspecs,
					 GParamSpec * *pspecs);
    void (*notify) (GObject * object, GParamSpec * pspec);
    void (*constructed) (GObject * object);
    gsize flags;
    gpointer pdummy[6];
} GInitiallyUnownedClass;
struct GWeakRef {
    union {
	void *p;
    } priv;
};
typedef struct _GParamSpecGType {
    GParamSpec parent_instance;
    GType is_a_type;
} GParamSpecGType;
typedef struct _GParamSpecVariant {
    GParamSpec parent_instance;
    GVariantType *type;
    GVariant *default_value;
    gpointer padding[4];
} GParamSpecVariant;
typedef void (*GVaClosureMarshal) (GClosure * closure,
				   GValue * return_value,
				   gpointer instance, va_list * args,
				   gpointer marshal_data, int n_params,
				   GType * param_types);
typedef struct _GAtomicArray {
    volatile gpointer data;
} GAtomicArray;
typedef struct _GRealClosure {
    GClosureMarshal meta_marshal;
    gpointer meta_marshal_data;
    GVaClosureMarshal va_meta_marshal;
    GVaClosureMarshal va_marshal;
    GClosure closure;
} GRealClosure;
typedef GVaClosureMarshal GSignalCVaMarshaller;
extern GType g_array_get_type(void);
extern GType g_binding_flags_get_type(void);
extern GBindingFlags g_binding_get_flags(GBinding * binding);
extern GObject *g_binding_get_source(GBinding * binding);
extern const gchar *g_binding_get_source_property(GBinding * binding);
extern GObject *g_binding_get_target(GBinding * binding);
extern const gchar *g_binding_get_target_property(GBinding * binding);
extern GType g_binding_get_type(void);
extern gpointer g_boxed_copy(GType boxed_type, gconstpointer src_boxed);
extern void g_boxed_free(GType boxed_type, gpointer boxed);
extern GType g_boxed_type_register_static(const gchar * name,
					  GBoxedCopyFunc boxed_copy,
					  GBoxedFreeFunc boxed_free);
extern GType g_byte_array_get_type(void);
extern GType g_bytes_get_type(void);
extern void g_cclosure_marshal_BOOLEAN__FLAGS(GClosure *, GValue *, guint,
					      const GValue *, gpointer,
					      gpointer);
extern void g_cclosure_marshal_STRING__OBJECT_POINTER(GClosure *, GValue *,
						      guint,
						      const GValue *,
						      gpointer, gpointer);
extern void g_cclosure_marshal_VOID__BOOLEAN(GClosure * closure,
					     GValue * return_value,
					     guint n_param_values,
					     const GValue * param_value,
					     gpointer invocation_hint,
					     gpointer marshal_data);
extern void g_cclosure_marshal_VOID__BOOLEANv(GClosure * closure,
					      GValue * return_value,
					      gpointer instance,
					      va_list args,
					      gpointer marshal_data,
					      int n_params,
					      GType * param_types);
extern void g_cclosure_marshal_VOID__BOXED(GClosure * closure,
					   GValue * return_value,
					   guint n_param_values,
					   const GValue * param_value,
					   gpointer invocation_hint,
					   gpointer marshal_data);
extern void g_cclosure_marshal_VOID__BOXEDv(GClosure * closure,
					    GValue * return_value,
					    gpointer instance,
					    va_list args,
					    gpointer marshal_data,
					    int n_params,
					    GType * param_types);
extern void g_cclosure_marshal_VOID__CHAR(GClosure * closure,
					  GValue * return_value,
					  guint n_param_values,
					  const GValue * param_value,
					  gpointer invocation_hint,
					  gpointer marshal_data);
extern void g_cclosure_marshal_VOID__CHARv(GClosure * closure,
					   GValue * return_value,
					   gpointer instance, va_list args,
					   gpointer marshal_data,
					   int n_params,
					   GType * param_types);
extern void g_cclosure_marshal_VOID__DOUBLE(GClosure * closure,
					    GValue * return_value,
					    guint n_param_values,
					    const GValue * param_value,
					    gpointer invocation_hint,
					    gpointer marshal_data);
extern void g_cclosure_marshal_VOID__DOUBLEv(GClosure * closure,
					     GValue * return_value,
					     gpointer instance,
					     va_list args,
					     gpointer marshal_data,
					     int n_params,
					     GType * param_types);
extern void g_cclosure_marshal_VOID__ENUM(GClosure * closure,
					  GValue * return_value,
					  guint n_param_values,
					  const GValue * param_value,
					  gpointer invocation_hint,
					  gpointer marshal_data);
extern void g_cclosure_marshal_VOID__ENUMv(GClosure * closure,
					   GValue * return_value,
					   gpointer instance, va_list args,
					   gpointer marshal_data,
					   int n_params,
					   GType * param_types);
extern void g_cclosure_marshal_VOID__FLAGS(GClosure * closure,
					   GValue * return_value,
					   guint n_param_values,
					   const GValue * param_value,
					   gpointer invocation_hint,
					   gpointer marshal_data);
extern void g_cclosure_marshal_VOID__FLAGSv(GClosure * closure,
					    GValue * return_value,
					    gpointer instance,
					    va_list args,
					    gpointer marshal_data,
					    int n_params,
					    GType * param_types);
extern void g_cclosure_marshal_VOID__FLOAT(GClosure * closure,
					   GValue * return_value,
					   guint n_param_values,
					   const GValue * param_value,
					   gpointer invocation_hint,
					   gpointer marshal_data);
extern void g_cclosure_marshal_VOID__FLOATv(GClosure * closure,
					    GValue * return_value,
					    gpointer instance,
					    va_list args,
					    gpointer marshal_data,
					    int n_params,
					    GType * param_types);
extern void g_cclosure_marshal_VOID__INT(GClosure * closure,
					 GValue * return_value,
					 guint n_param_values,
					 const GValue * param_value,
					 gpointer invocation_hint,
					 gpointer marshal_data);
extern void g_cclosure_marshal_VOID__INTv(GClosure * closure,
					  GValue * return_value,
					  gpointer instance, va_list args,
					  gpointer marshal_data,
					  int n_params,
					  GType * param_types);
extern void g_cclosure_marshal_VOID__LONG(GClosure * closure,
					  GValue * return_value,
					  guint n_param_values,
					  const GValue * param_value,
					  gpointer invocation_hint,
					  gpointer marshal_data);
extern void g_cclosure_marshal_VOID__LONGv(GClosure * closure,
					   GValue * return_value,
					   gpointer instance, va_list args,
					   gpointer marshal_data,
					   int n_params,
					   GType * param_types);
extern void g_cclosure_marshal_VOID__OBJECT(GClosure * closure,
					    GValue * return_value,
					    guint n_param_values,
					    const GValue * param_value,
					    gpointer invocation_hint,
					    gpointer marshal_data);
extern void g_cclosure_marshal_VOID__OBJECTv(GClosure * closure,
					     GValue * return_value,
					     gpointer instance,
					     va_list args,
					     gpointer marshal_data,
					     int n_params,
					     GType * param_types);
extern void g_cclosure_marshal_VOID__PARAM(GClosure * closure,
					   GValue * return_value,
					   guint n_param_values,
					   const GValue * param_value,
					   gpointer invocation_hint,
					   gpointer marshal_data);
extern void g_cclosure_marshal_VOID__PARAMv(GClosure * closure,
					    GValue * return_value,
					    gpointer instance,
					    va_list args,
					    gpointer marshal_data,
					    int n_params,
					    GType * param_types);
extern void g_cclosure_marshal_VOID__POINTER(GClosure * closure,
					     GValue * return_value,
					     guint n_param_values,
					     const GValue * param_value,
					     gpointer invocation_hint,
					     gpointer marshal_data);
extern void g_cclosure_marshal_VOID__POINTERv(GClosure * closure,
					      GValue * return_value,
					      gpointer instance,
					      va_list args,
					      gpointer marshal_data,
					      int n_params,
					      GType * param_types);
extern void g_cclosure_marshal_VOID__STRING(GClosure * closure,
					    GValue * return_value,
					    guint n_param_values,
					    const GValue * param_value,
					    gpointer invocation_hint,
					    gpointer marshal_data);
extern void g_cclosure_marshal_VOID__STRINGv(GClosure * closure,
					     GValue * return_value,
					     gpointer instance,
					     va_list args,
					     gpointer marshal_data,
					     int n_params,
					     GType * param_types);
extern void g_cclosure_marshal_VOID__UCHAR(GClosure * closure,
					   GValue * return_value,
					   guint n_param_values,
					   const GValue * param_value,
					   gpointer invocation_hint,
					   gpointer marshal_data);
extern void g_cclosure_marshal_VOID__UCHARv(GClosure * closure,
					    GValue * return_value,
					    gpointer instance,
					    va_list args,
					    gpointer marshal_data,
					    int n_params,
					    GType * param_types);
extern void g_cclosure_marshal_VOID__UINT(GClosure * closure,
					  GValue * return_value,
					  guint n_param_values,
					  const GValue * param_value,
					  gpointer invocation_hint,
					  gpointer marshal_data);
extern void g_cclosure_marshal_VOID__UINT_POINTER(GClosure * closure,
						  GValue * return_value,
						  guint n_param_values,
						  const GValue *
						  param_value,
						  gpointer invocation_hint,
						  gpointer marshal_data);
extern void g_cclosure_marshal_VOID__UINT_POINTERv(GClosure * closure,
						   GValue * return_value,
						   gpointer instance,
						   va_list args,
						   gpointer marshal_data,
						   int n_params,
						   GType * param_types);
extern void g_cclosure_marshal_VOID__UINTv(GClosure * closure,
					   GValue * return_value,
					   gpointer instance, va_list args,
					   gpointer marshal_data,
					   int n_params,
					   GType * param_types);
extern void g_cclosure_marshal_VOID__ULONG(GClosure * closure,
					   GValue * return_value,
					   guint n_param_values,
					   const GValue * param_value,
					   gpointer invocation_hint,
					   gpointer marshal_data);
extern void g_cclosure_marshal_VOID__ULONGv(GClosure * closure,
					    GValue * return_value,
					    gpointer instance,
					    va_list args,
					    gpointer marshal_data,
					    int n_params,
					    GType * param_types);
extern void g_cclosure_marshal_VOID__VARIANT(GClosure * closure,
					     GValue * return_value,
					     guint n_param_values,
					     const GValue * param_value,
					     gpointer invocation_hint,
					     gpointer marshal_data);
extern void g_cclosure_marshal_VOID__VARIANTv(GClosure * closure,
					      GValue * return_value,
					      gpointer instance,
					      va_list args,
					      gpointer marshal_data,
					      int n_params,
					      GType * param_types);
extern void g_cclosure_marshal_VOID__VOID(GClosure * closure,
					  GValue * return_value,
					  guint n_param_values,
					  const GValue * param_value,
					  gpointer invocation_hint,
					  gpointer marshal_data);
extern void g_cclosure_marshal_VOID__VOIDv(GClosure * closure,
					   GValue * return_value,
					   gpointer instance, va_list args,
					   gpointer marshal_data,
					   int n_params,
					   GType * param_types);
extern void g_cclosure_marshal_generic(GClosure * closure,
				       GValue * return_gvalue,
				       guint n_param_values,
				       const GValue * param_values,
				       gpointer invocation_hint,
				       gpointer marshal_data);
extern void g_cclosure_marshal_generic_va(GClosure * closure,
					  GValue * return_value,
					  gpointer instance,
					  va_list args_list,
					  gpointer marshal_data,
					  int n_params,
					  GType * param_types);
extern GClosure *g_cclosure_new(GCallback callback_func,
				gpointer user_data,
				GClosureNotify destroy_data);
extern GClosure *g_cclosure_new_object(GCallback callback_func,
				       GObject * object);
extern GClosure *g_cclosure_new_object_swap(GCallback callback_func,
					    GObject * object);
extern GClosure *g_cclosure_new_swap(GCallback callback_func,
				     gpointer user_data,
				     GClosureNotify destroy_data);
extern void g_clear_object(volatile GObject * *object_ptr);
extern void g_closure_add_finalize_notifier(GClosure * closure,
					    gpointer notify_data,
					    GClosureNotify notify_func);
extern void g_closure_add_invalidate_notifier(GClosure * closure,
					      gpointer notify_data,
					      GClosureNotify notify_func);
extern void g_closure_add_marshal_guards(GClosure * closure,
					 gpointer pre_marshal_data,
					 GClosureNotify pre_marshal_notify,
					 gpointer post_marshal_data,
					 GClosureNotify
					 post_marshal_notify);
extern GType g_closure_get_type(void);
extern void g_closure_invalidate(GClosure * closure);
extern void g_closure_invoke(GClosure * closure, GValue * return_value,
			     guint n_param_values,
			     const GValue * param_values,
			     gpointer invocation_hint);
extern GClosure *g_closure_new_object(guint sizeof_closure,
				      GObject * object);
extern GClosure *g_closure_new_simple(guint sizeof_closure, gpointer data);
extern GClosure *g_closure_ref(GClosure * closure);
extern void g_closure_remove_finalize_notifier(GClosure * closure,
					       gpointer notify_data,
					       GClosureNotify notify_func);
extern void g_closure_remove_invalidate_notifier(GClosure * closure,
						 gpointer notify_data,
						 GClosureNotify
						 notify_func);
extern void g_closure_set_marshal(GClosure * closure,
				  GClosureMarshal marshal);
extern void g_closure_set_meta_marshal(GClosure * closure,
				       gpointer marshal_data,
				       GClosureMarshal meta_marshal);
extern void g_closure_sink(GClosure * closure);
extern void g_closure_unref(GClosure * closure);
extern GType g_date_get_type(void);
extern GType g_date_time_get_type(void);
extern void g_enum_complete_type_info(GType g_enum_type, GTypeInfo * info,
				      const GEnumValue * const_values);
extern GEnumValue *g_enum_get_value(GEnumClass * enum_class, gint value);
extern GEnumValue *g_enum_get_value_by_name(GEnumClass * enum_class,
					    const gchar * name);
extern GEnumValue *g_enum_get_value_by_nick(GEnumClass * enum_class,
					    const gchar * nick);
extern GType g_enum_register_static(const gchar * name,
				    const GEnumValue *
				    const_static_values);
extern GType g_error_get_type(void);
extern void g_flags_complete_type_info(GType g_flags_type,
				       GTypeInfo * info,
				       const GFlagsValue * const_values);
extern GFlagsValue *g_flags_get_first_value(GFlagsClass * flags_class,
					    guint value);
extern GFlagsValue *g_flags_get_value_by_name(GFlagsClass * flags_class,
					      const gchar * name);
extern GFlagsValue *g_flags_get_value_by_nick(GFlagsClass * flags_class,
					      const gchar * nick);
extern GType g_flags_register_static(const gchar * name,
				     const GFlagsValue *
				     const_static_values);
extern GType g_gstring_get_type(void);
extern GType g_gtype_get_type(void);
extern GType g_hash_table_get_type(void);
extern GType g_initially_unowned_get_type(void);
extern GType g_io_channel_get_type(void);
extern GType g_io_condition_get_type(void);
extern GType g_key_file_get_type(void);
extern GType g_main_context_get_type(void);
extern GType g_main_loop_get_type(void);
extern GType g_match_info_get_type(void);
extern void g_object_add_toggle_ref(GObject * object, GToggleNotify notify,
				    gpointer data);
extern void g_object_add_weak_pointer(GObject * object,
				      gpointer * weak_pointer_location);
extern GBinding *g_object_bind_property(gpointer source,
					const gchar * source_property,
					gpointer target,
					const gchar * target_property,
					GBindingFlags flags);
extern GBinding *g_object_bind_property_full(gpointer source,
					     const gchar * source_property,
					     gpointer target,
					     const gchar * target_property,
					     GBindingFlags flags,
					     GBindingTransformFunc
					     transform_to,
					     GBindingTransformFunc
					     transform_from,
					     gpointer user_data,
					     GDestroyNotify notify);
extern GBinding *g_object_bind_property_with_closures(gpointer source,
						      const gchar *
						      source_property,
						      gpointer target,
						      const gchar *
						      target_property,
						      GBindingFlags flags,
						      GClosure *
						      transform_to,
						      GClosure *
						      transform_from);
extern GParamSpec *g_object_class_find_property(GObjectClass * oclass,
						const gchar *
						property_name);
extern void g_object_class_install_properties(GObjectClass * oclass,
					      guint n_pspecs,
					      GParamSpec * *pspecs);
extern void g_object_class_install_property(GObjectClass * oclass,
					    guint property_id,
					    GParamSpec * pspec);
extern GParamSpec **g_object_class_list_properties(GObjectClass * oclass,
						   guint * n_properties);
extern void g_object_class_override_property(GObjectClass * oclass,
					     guint property_id,
					     const gchar * name);
extern gsize g_object_compat_control(gsize what, void *data);
extern gpointer g_object_connect(gpointer object,
				 const gchar * signal_spec, ...);
extern void g_object_disconnect(gpointer object, const gchar * signal_spec,
				...);
extern void g_object_force_floating(GObject *);
extern void g_object_freeze_notify(GObject * object);
extern void g_object_get(gpointer object,
			 const gchar * first_property_name, ...);
extern void *g_object_get_data(GObject * object, const gchar * key);
extern void g_object_get_property(GObject * object,
				  const gchar * property_name,
				  GValue * value);
extern void *g_object_get_qdata(GObject * object, GQuark quark);
extern GType g_object_get_type(void);
extern void g_object_get_valist(GObject * object,
				const gchar * first_property_name,
				va_list var_args);
extern GParamSpec *g_object_interface_find_property(gpointer g_iface,
						    const gchar *
						    property_name);
extern void g_object_interface_install_property(gpointer g_iface,
						GParamSpec * pspec);
extern GParamSpec **g_object_interface_list_properties(gpointer g_iface,
						       guint *
						       n_properties_p);
extern gboolean g_object_is_floating(gpointer object);
extern gpointer g_object_new(GType object_type,
			     const gchar * first_property_name, ...);
extern GObject *g_object_new_valist(GType object_type,
				    const gchar * first_property_name,
				    va_list var_args);
extern gpointer g_object_newv(GType object_type, guint n_parameters,
			      GParameter * parameters);
extern void g_object_notify(GObject * object, const gchar * property_name);
extern void g_object_notify_by_pspec(GObject * object, GParamSpec * pspec);
extern gpointer g_object_ref(gpointer object);
extern gpointer g_object_ref_sink(gpointer object);
extern void g_object_remove_toggle_ref(GObject * object,
				       GToggleNotify notify,
				       gpointer data);
extern void g_object_remove_weak_pointer(GObject * object,
					 gpointer * weak_pointer_location);
extern void g_object_run_dispose(GObject * object);
extern void g_object_set(gpointer object,
			 const gchar * first_property_name, ...);
extern void g_object_set_data(GObject * object, const gchar * key,
			      gpointer data);
extern void g_object_set_data_full(GObject * object, const gchar * key,
				   gpointer data, GDestroyNotify destroy);
extern void g_object_set_property(GObject * object,
				  const gchar * property_name,
				  const GValue * value);
extern void g_object_set_qdata(GObject * object, GQuark quark,
			       gpointer data);
extern void g_object_set_qdata_full(GObject * object, GQuark quark,
				    gpointer data, GDestroyNotify destroy);
extern void g_object_set_valist(GObject * object,
				const gchar * first_property_name,
				va_list var_args);
extern void *g_object_steal_data(GObject * object, const gchar * key);
extern void *g_object_steal_qdata(GObject * object, GQuark quark);
extern void g_object_thaw_notify(GObject * object);
extern void g_object_unref(gpointer object);
extern void g_object_watch_closure(GObject * object, GClosure * closure);
extern void g_object_weak_ref(GObject * object, GWeakNotify notify,
			      gpointer data);
extern void g_object_weak_unref(GObject * object, GWeakNotify notify,
				gpointer data);
extern GParamSpec *g_param_spec_boolean(const gchar * name,
					const gchar * nick,
					const gchar * blurb,
					gboolean default_value,
					GParamFlags flags);
extern GParamSpec *g_param_spec_boxed(const gchar * name,
				      const gchar * nick,
				      const gchar * blurb,
				      GType boxed_type, GParamFlags flags);
extern GParamSpec *g_param_spec_char(const gchar * name,
				     const gchar * nick,
				     const gchar * blurb, gint8 minimum,
				     gint8 maximum, gint8 default_value,
				     GParamFlags flags);
extern GParamSpec *g_param_spec_double(const gchar * name,
				       const gchar * nick,
				       const gchar * blurb,
				       gdouble minimum, gdouble maximum,
				       gdouble default_value,
				       GParamFlags flags);
extern GParamSpec *g_param_spec_enum(const gchar * name,
				     const gchar * nick,
				     const gchar * blurb, GType enum_type,
				     gint default_value,
				     GParamFlags flags);
extern GParamSpec *g_param_spec_flags(const gchar * name,
				      const gchar * nick,
				      const gchar * blurb,
				      GType flags_type,
				      guint default_value,
				      GParamFlags flags);
extern GParamSpec *g_param_spec_float(const gchar * name,
				      const gchar * nick,
				      const gchar * blurb, gfloat minimum,
				      gfloat maximum, gfloat default_value,
				      GParamFlags flags);
extern const gchar *g_param_spec_get_blurb(GParamSpec * pspec);
extern const gchar *g_param_spec_get_name(GParamSpec * pspec);
extern const gchar *g_param_spec_get_nick(GParamSpec * pspec);
extern gpointer g_param_spec_get_qdata(GParamSpec * pspec, GQuark quark);
extern GParamSpec *g_param_spec_get_redirect_target(GParamSpec * pspec);
extern GParamSpec *g_param_spec_gtype(const gchar *, const gchar *,
				      const gchar *, GType, GParamFlags);
extern GParamSpec *g_param_spec_int(const gchar * name, const gchar * nick,
				    const gchar * blurb, gint minimum,
				    gint maximum, gint default_value,
				    GParamFlags flags);
extern GParamSpec *g_param_spec_int64(const gchar * name,
				      const gchar * nick,
				      const gchar * blurb, gint64 minimum,
				      gint64 maximum, gint64 default_value,
				      GParamFlags flags);
extern gpointer g_param_spec_internal(GType param_type, const gchar * name,
				      const gchar * nick,
				      const gchar * blurb,
				      GParamFlags flags);
extern GParamSpec *g_param_spec_long(const gchar * name,
				     const gchar * nick,
				     const gchar * blurb, glong minimum,
				     glong maximum, glong default_value,
				     GParamFlags flags);
extern GParamSpec *g_param_spec_object(const gchar * name,
				       const gchar * nick,
				       const gchar * blurb,
				       GType object_type,
				       GParamFlags flags);
extern GParamSpec *g_param_spec_override(const gchar * name,
					 GParamSpec * overridden);
extern GParamSpec *g_param_spec_param(const gchar * name,
				      const gchar * nick,
				      const gchar * blurb,
				      GType param_type, GParamFlags flags);
extern GParamSpec *g_param_spec_pointer(const gchar * name,
					const gchar * nick,
					const gchar * blurb,
					GParamFlags flags);
extern void g_param_spec_pool_insert(GParamSpecPool * pool,
				     GParamSpec * pspec, GType owner_type);
extern GParamSpec **g_param_spec_pool_list(GParamSpecPool * pool,
					   GType owner_type,
					   guint * n_pspecs_p);
extern GList *g_param_spec_pool_list_owned(GParamSpecPool * pool,
					   GType owner_type);
extern GParamSpec *g_param_spec_pool_lookup(GParamSpecPool * pool,
					    const gchar * param_name,
					    GType owner_type,
					    gboolean walk_ancestors);
extern GParamSpecPool *g_param_spec_pool_new(gboolean type_prefixing);
extern void g_param_spec_pool_remove(GParamSpecPool * pool,
				     GParamSpec * pspec);
extern GParamSpec *g_param_spec_ref(GParamSpec * pspec);
extern GParamSpec *g_param_spec_ref_sink(GParamSpec *);
extern void g_param_spec_set_qdata(GParamSpec * pspec, GQuark quark,
				   gpointer data);
extern void g_param_spec_set_qdata_full(GParamSpec * pspec, GQuark quark,
					gpointer data,
					GDestroyNotify destroy);
extern void g_param_spec_sink(GParamSpec * pspec);
extern gpointer g_param_spec_steal_qdata(GParamSpec * pspec, GQuark quark);
extern GParamSpec *g_param_spec_string(const gchar * name,
				       const gchar * nick,
				       const gchar * blurb,
				       const gchar * default_value,
				       GParamFlags flags);
extern GType *g_param_spec_types;
extern GParamSpec *g_param_spec_uchar(const gchar * name,
				      const gchar * nick,
				      const gchar * blurb, guint8 minimum,
				      guint8 maximum, guint8 default_value,
				      GParamFlags flags);
extern GParamSpec *g_param_spec_uint(const gchar * name,
				     const gchar * nick,
				     const gchar * blurb, guint minimum,
				     guint maximum, guint default_value,
				     GParamFlags flags);
extern GParamSpec *g_param_spec_uint64(const gchar * name,
				       const gchar * nick,
				       const gchar * blurb,
				       guint64 minimum, guint64 maximum,
				       guint64 default_value,
				       GParamFlags flags);
extern GParamSpec *g_param_spec_ulong(const gchar * name,
				      const gchar * nick,
				      const gchar * blurb, gulong minimum,
				      gulong maximum, gulong default_value,
				      GParamFlags flags);
extern GParamSpec *g_param_spec_unichar(const gchar * name,
					const gchar * nick,
					const gchar * blurb,
					gunichar default_value,
					GParamFlags flags);
extern void g_param_spec_unref(GParamSpec * pspec);
extern GParamSpec *g_param_spec_value_array(const gchar * name,
					    const gchar * nick,
					    const gchar * blurb,
					    GParamSpec * element_spec,
					    GParamFlags flags);
extern GParamSpec *g_param_spec_variant(const gchar * name,
					const gchar * nick,
					const gchar * blurb,
					const struct _GVariantType *type,
					GVariant * default_value,
					GParamFlags flags);
extern GType g_param_type_register_static(const gchar * name,
					  const GParamSpecTypeInfo *
					  pspec_info);
extern gboolean g_param_value_convert(GParamSpec * pspec,
				      const GValue * src_value,
				      GValue * dest_value,
				      gboolean strict_validation);
extern gboolean g_param_value_defaults(GParamSpec * pspec, GValue * value);
extern void g_param_value_set_default(GParamSpec * pspec, GValue * value);
extern gboolean g_param_value_validate(GParamSpec * pspec, GValue * value);
extern gint g_param_values_cmp(GParamSpec * pspec, const GValue * value1,
			       const GValue * value2);
extern GType g_pointer_type_register_static(const gchar * name);
extern GType g_ptr_array_get_type(void);
extern GType g_regex_get_type(void);
extern gboolean g_signal_accumulator_first_wins(GSignalInvocationHint *
						ihint,
						GValue * return_accu,
						const GValue *
						handler_return,
						gpointer dummy);
extern gboolean g_signal_accumulator_true_handled(GSignalInvocationHint *
						  ihint,
						  GValue * return_accu,
						  const GValue *
						  handler_return,
						  gpointer dummy);
extern gulong g_signal_add_emission_hook(guint signal_id, GQuark detail,
					 GSignalEmissionHook hook_func,
					 gpointer hook_data,
					 GDestroyNotify data_destroy);
extern void g_signal_chain_from_overridden(const GValue *
					   instance_and_params,
					   GValue * return_value);
extern void g_signal_chain_from_overridden_handler(gpointer instance, ...);
extern gulong g_signal_connect_closure(gpointer instance,
				       const gchar * detailed_signal,
				       GClosure * closure, gboolean after);
extern gulong g_signal_connect_closure_by_id(gpointer instance,
					     guint signal_id,
					     GQuark detail,
					     GClosure * closure,
					     gboolean after);
extern gulong g_signal_connect_data(gpointer instance,
				    const gchar * detailed_signal,
				    GCallback c_handler, gpointer data,
				    GClosureNotify destroy_data,
				    GConnectFlags connect_flags);
extern gulong g_signal_connect_object(gpointer instance,
				      const gchar * detailed_signal,
				      GCallback c_handler,
				      gpointer gobject,
				      GConnectFlags connect_flags);
extern void g_signal_emit(gpointer instance, guint signal_id,
			  GQuark detail, ...);
extern void g_signal_emit_by_name(gpointer instance,
				  const gchar * detailed_signal, ...);
extern void g_signal_emit_valist(gpointer instance, guint signal_id,
				 GQuark detail, va_list var_args);
extern void g_signal_emitv(const GValue * instance_and_params,
			   guint signal_id, GQuark detail,
			   GValue * return_value);
extern GSignalInvocationHint *g_signal_get_invocation_hint(gpointer
							   instance);
extern void g_signal_handler_block(gpointer instance, gulong handler_id);
extern void g_signal_handler_disconnect(gpointer instance,
					gulong handler_id);
extern gulong g_signal_handler_find(gpointer instance,
				    GSignalMatchType mask, guint signal_id,
				    GQuark detail, GClosure * closure,
				    gpointer func, gpointer data);
extern gboolean g_signal_handler_is_connected(gpointer instance,
					      gulong handler_id);
extern void g_signal_handler_unblock(gpointer instance, gulong handler_id);
extern guint g_signal_handlers_block_matched(gpointer instance,
					     GSignalMatchType mask,
					     guint signal_id,
					     GQuark detail,
					     GClosure * closure,
					     gpointer func, gpointer data);
extern guint g_signal_handlers_disconnect_matched(gpointer instance,
						  GSignalMatchType mask,
						  guint signal_id,
						  GQuark detail,
						  GClosure * closure,
						  gpointer func,
						  gpointer data);
extern guint g_signal_handlers_unblock_matched(gpointer instance,
					       GSignalMatchType mask,
					       guint signal_id,
					       GQuark detail,
					       GClosure * closure,
					       gpointer func,
					       gpointer data);
extern gboolean g_signal_has_handler_pending(gpointer instance,
					     guint signal_id,
					     GQuark detail,
					     gboolean may_be_blocked);
extern guint *g_signal_list_ids(GType itype, guint * n_ids);
extern guint g_signal_lookup(const gchar * name, GType itype);
extern const gchar *g_signal_name(guint signal_id);
extern guint g_signal_new(const gchar * signal_name, GType itype,
			  GSignalFlags signal_flags, guint class_offset,
			  GSignalAccumulator accumulator,
			  gpointer accu_data,
			  GSignalCMarshaller c_marshaller,
			  GType return_type, guint n_params, ...);
extern guint g_signal_new_class_handler(const char *signal_name,
					GType itype,
					GSignalFlags signal_flags,
					GCallback class_handler,
					GSignalAccumulator accumulator,
					gpointer accu_data,
					GSignalCMarshaller c_marshaller,
					GType return_type, guint n_params,
					...);
extern guint g_signal_new_valist(const gchar * signal_name, GType itype,
				 GSignalFlags signal_flags,
				 GClosure * class_closure,
				 GSignalAccumulator accumulator,
				 gpointer accu_data,
				 GSignalCMarshaller c_marshaller,
				 GType return_type, guint n_params,
				 va_list args);
extern guint g_signal_newv(const gchar * signal_name, GType itype,
			   GSignalFlags signal_flags,
			   GClosure * class_closure,
			   GSignalAccumulator accumulator,
			   gpointer accu_data,
			   GSignalCMarshaller c_marshaller,
			   GType return_type, guint n_params,
			   GType * param_types);
extern void g_signal_override_class_closure(guint signal_id,
					    GType instance_type,
					    GClosure * class_closure);
extern void g_signal_override_class_handler(const char *signal_name,
					    GType instance_type,
					    GCallback class_handler);
extern gboolean g_signal_parse_name(const gchar * detailed_signal,
				    GType itype, guint * signal_id_p,
				    GQuark * detail_p,
				    gboolean force_detail_quark);
extern void g_signal_query(guint signal_id, GSignalQuery * query);
extern void g_signal_remove_emission_hook(guint signal_id, gulong hook_id);
extern void g_signal_set_va_marshaller(guint signal_id,
				       GType instance_type,
				       GSignalCVaMarshaller va_marshaller);
extern void g_signal_stop_emission(gpointer instance, guint signal_id,
				   GQuark detail);
extern void g_signal_stop_emission_by_name(gpointer instance,
					   const gchar * detailed_signal);
extern GClosure *g_signal_type_cclosure_new(GType itype,
					    guint struct_offset);
extern GType g_source_get_type(void);
extern void g_source_set_closure(GSource * source, GClosure * closure);
extern void g_source_set_dummy_callback(GSource * source);
extern gchar *g_strdup_value_contents(const GValue * value);
extern GType g_strv_get_type(void);
extern void g_type_add_class_cache_func(gpointer cache_data,
					GTypeClassCacheFunc cache_func);
extern void g_type_add_class_private(GType class_type, gsize private_size);
extern void g_type_add_interface_check(gpointer check_data,
				       GTypeInterfaceCheckFunc check_func);
extern void g_type_add_interface_dynamic(GType instance_type,
					 GType interface_type,
					 GTypePlugin * plugin);
extern void g_type_add_interface_static(GType instance_type,
					GType interface_type,
					const GInterfaceInfo * info);
extern GTypeClass *g_type_check_class_cast(GTypeClass * g_class,
					   GType is_a_type);
extern gboolean g_type_check_class_is_a(GTypeClass * g_class,
					GType is_a_type);
extern gboolean g_type_check_instance(GTypeInstance * instance);
extern GTypeInstance *g_type_check_instance_cast(GTypeInstance * instance,
						 GType iface_type);
extern gboolean g_type_check_instance_is_a(GTypeInstance * instance,
					   GType iface_type);
extern gboolean g_type_check_is_value_type(GType type);
extern gboolean g_type_check_value(GValue * value);
extern gboolean g_type_check_value_holds(GValue * value, GType type);
extern GType *g_type_children(GType type, guint * n_children);
extern void g_type_class_add_private(gpointer g_class, gsize private_size);
extern gpointer g_type_class_get_private(GTypeClass * klass,
					 GType private_type);
extern gpointer g_type_class_peek(GType type);
extern gpointer g_type_class_peek_parent(gpointer g_class);
extern gpointer g_type_class_peek_static(GType type);
extern gpointer g_type_class_ref(GType type);
extern void g_type_class_unref(gpointer g_class);
extern void g_type_class_unref_uncached(gpointer g_class);
extern GTypeInstance *g_type_create_instance(GType type);
extern gpointer g_type_default_interface_peek(GType g_type);
extern gpointer g_type_default_interface_ref(GType g_type);
extern void g_type_default_interface_unref(gpointer g_iface);
extern guint g_type_depth(GType type);
extern void g_type_free_instance(GTypeInstance * instance);
extern GType g_type_from_name(const gchar * name);
extern GType g_type_fundamental(GType type_id);
extern GType g_type_fundamental_next(void);
extern GTypePlugin *g_type_get_plugin(GType type);
extern gpointer g_type_get_qdata(GType type, GQuark quark);
extern void g_type_init(void);
extern void g_type_init_with_debug_flags(GTypeDebugFlags debug_flags);
extern gpointer g_type_instance_get_private(GTypeInstance * instance,
					    GType private_type);
extern void g_type_interface_add_prerequisite(GType interface_type,
					      GType prerequisite_type);
extern GTypePlugin *g_type_interface_get_plugin(GType instance_type,
						GType interface_type);
extern gpointer g_type_interface_peek(gpointer instance_class,
				      GType iface_type);
extern gpointer g_type_interface_peek_parent(gpointer g_iface);
extern GType *g_type_interface_prerequisites(GType interface_type,
					     guint * n_prerequisites);
extern GType *g_type_interfaces(GType type, guint * n_interfaces);
extern gboolean g_type_is_a(GType type, GType is_a_type);
extern void g_type_module_add_interface(GTypeModule * module,
					GType instance_type,
					GType interface_type,
					const GInterfaceInfo *
					interface_info);
extern GType g_type_module_get_type(void);
extern GType g_type_module_register_enum(GTypeModule * module,
					 const gchar * name,
					 const GEnumValue *
					 const_static_values);
extern GType g_type_module_register_flags(GTypeModule * module,
					  const gchar * name,
					  const GFlagsValue *
					  const_static_values);
extern GType g_type_module_register_type(GTypeModule * module,
					 GType parent_type,
					 const gchar * type_name,
					 const GTypeInfo * type_info,
					 GTypeFlags flags);
extern void g_type_module_set_name(GTypeModule * module,
				   const gchar * name);
extern void g_type_module_unuse(GTypeModule * module);
extern gboolean g_type_module_use(GTypeModule * module);
extern const gchar *g_type_name(GType type);
extern const gchar *g_type_name_from_class(GTypeClass * g_class);
extern const gchar *g_type_name_from_instance(GTypeInstance * instance);
extern GType g_type_next_base(GType leaf_type, GType root_type);
extern GType g_type_parent(GType type);
extern void g_type_plugin_complete_interface_info(GTypePlugin * plugin,
						  GType instance_type,
						  GType interface_type,
						  GInterfaceInfo * info);
extern void g_type_plugin_complete_type_info(GTypePlugin * plugin,
					     GType g_type,
					     GTypeInfo * info,
					     GTypeValueTable *
					     value_table);
extern GType g_type_plugin_get_type(void);
extern void g_type_plugin_unuse(GTypePlugin * plugin);
extern void g_type_plugin_use(GTypePlugin * plugin);
extern GQuark g_type_qname(GType type);
extern void g_type_query(GType type, GTypeQuery * query);
extern GType g_type_register_dynamic(GType parent_type,
				     const gchar * type_name,
				     GTypePlugin * plugin,
				     GTypeFlags flags);
extern GType g_type_register_fundamental(GType type_id,
					 const gchar * type_name,
					 const GTypeInfo * info,
					 const GTypeFundamentalInfo *
					 finfo, GTypeFlags flags);
extern GType g_type_register_static(GType parent_type,
				    const gchar * type_name,
				    const GTypeInfo * info,
				    GTypeFlags flags);
extern GType g_type_register_static_simple(GType, const gchar *, guint,
					   GClassInitFunc, guint,
					   GInstanceInitFunc, GTypeFlags);
extern void g_type_remove_class_cache_func(gpointer cache_data,
					   GTypeClassCacheFunc cache_func);
extern void g_type_remove_interface_check(gpointer check_data,
					  GTypeInterfaceCheckFunc
					  check_func);
extern void g_type_set_qdata(GType type, GQuark quark, gpointer data);
extern gboolean g_type_test_flags(GType type, guint flags);
extern GTypeValueTable *g_type_value_table_peek(GType type);
extern GValueArray *g_value_array_append(GValueArray * value_array,
					 const GValue * value);
extern GValueArray *g_value_array_copy(const GValueArray * value_array);
extern void g_value_array_free(GValueArray * value_array);
extern GValue *g_value_array_get_nth(GValueArray * value_array,
				     guint index_);
extern GType g_value_array_get_type(void);
extern GValueArray *g_value_array_insert(GValueArray * value_array,
					 guint index_,
					 const GValue * value);
extern GValueArray *g_value_array_new(guint n_prealloced);
extern GValueArray *g_value_array_prepend(GValueArray * value_array,
					  const GValue * value);
extern GValueArray *g_value_array_remove(GValueArray * value_array,
					 guint index_);
extern GValueArray *g_value_array_sort(GValueArray * value_array,
				       GCompareFunc compare_func);
extern GValueArray *g_value_array_sort_with_data(GValueArray * value_array,
						 GCompareDataFunc
						 compare_func,
						 gpointer user_data);
extern void g_value_copy(const GValue * src_value, GValue * dest_value);
extern gpointer g_value_dup_boxed(const GValue * value);
extern void *g_value_dup_object(const GValue * value);
extern GParamSpec *g_value_dup_param(const GValue * value);
extern gchar *g_value_dup_string(const GValue * value);
extern GVariant *g_value_dup_variant(const GValue * value);
extern gboolean g_value_fits_pointer(const GValue * value);
extern gboolean g_value_get_boolean(const GValue * value);
extern gpointer g_value_get_boxed(const GValue * value);
extern gchar g_value_get_char(const GValue * value);
extern gdouble g_value_get_double(const GValue * value);
extern gint g_value_get_enum(const GValue * value);
extern guint g_value_get_flags(const GValue * value);
extern gfloat g_value_get_float(const GValue * value);
extern GType g_value_get_gtype(const GValue *);
extern gint g_value_get_int(const GValue * value);
extern gint64 g_value_get_int64(const GValue * value);
extern glong g_value_get_long(const GValue * value);
extern void *g_value_get_object(const GValue * value);
extern GParamSpec *g_value_get_param(const GValue * value);
extern gpointer g_value_get_pointer(const GValue * value);
extern gint8 g_value_get_schar(const GValue * value);
extern const char *g_value_get_string(const GValue * value);
extern GType g_value_get_type(void);
extern guchar g_value_get_uchar(const GValue * value);
extern guint g_value_get_uint(const GValue * value);
extern guint64 g_value_get_uint64(const GValue * value);
extern gulong g_value_get_ulong(const GValue * value);
extern GVariant *g_value_get_variant(const GValue * value);
extern GValue *g_value_init(GValue * value, GType g_type);
extern gpointer g_value_peek_pointer(const GValue * value);
extern void g_value_register_transform_func(GType src_type,
					    GType dest_type,
					    GValueTransform
					    transform_func);
extern GValue *g_value_reset(GValue * value);
extern void g_value_set_boolean(GValue * value, gboolean v_boolean);
extern void g_value_set_boxed(GValue * value, gconstpointer v_boxed);
extern void g_value_set_boxed_take_ownership(GValue * value,
					     gconstpointer v_boxed);
extern void g_value_set_char(GValue * value, gchar v_char);
extern void g_value_set_double(GValue * value, gdouble v_double);
extern void g_value_set_enum(GValue * value, gint v_enum);
extern void g_value_set_flags(GValue * value, guint v_flags);
extern void g_value_set_float(GValue * value, gfloat v_float);
extern void g_value_set_gtype(GValue *, GType);
extern void g_value_set_instance(GValue * value, gpointer instance);
extern void g_value_set_int(GValue * value, gint v_int);
extern void g_value_set_int64(GValue * value, gint64 v_int64);
extern void g_value_set_long(GValue * value, glong v_long);
extern void g_value_set_object(GValue * value, gpointer v_object);
extern void g_value_set_object_take_ownership(GValue * value,
					      void *v_object);
extern void g_value_set_param(GValue * value, GParamSpec * param);
extern void g_value_set_param_take_ownership(GValue * value,
					     GParamSpec * param);
extern void g_value_set_pointer(GValue * value, gpointer v_pointer);
extern void g_value_set_schar(GValue * value, gint8 v_char);
extern void g_value_set_static_boxed(GValue * value,
				     gconstpointer v_boxed);
extern void g_value_set_static_string(GValue * value,
				      const gchar * v_string);
extern void g_value_set_string(GValue * value, const gchar * v_string);
extern void g_value_set_string_take_ownership(GValue * value,
					      gchar * v_string);
extern void g_value_set_uchar(GValue * value, guchar v_uchar);
extern void g_value_set_uint(GValue * value, guint v_uint);
extern void g_value_set_uint64(GValue * value, guint64 v_uint64);
extern void g_value_set_ulong(GValue * value, gulong v_ulong);
extern void g_value_set_variant(GValue * value, GVariant * variant);
extern void g_value_take_boxed(GValue * value, gconstpointer v_boxed);
extern void g_value_take_object(GValue * value, gpointer v_object);
extern void g_value_take_param(GValue * value, GParamSpec * param);
extern void g_value_take_string(GValue * value, gchar * v_string);
extern void g_value_take_variant(GValue * value, GVariant * variant);
extern gboolean g_value_transform(const GValue * src_value,
				  GValue * dest_value);
extern gboolean g_value_type_compatible(GType src_type, GType dest_type);
extern gboolean g_value_type_transformable(GType src_type,
					   GType dest_type);
extern void g_value_unset(GValue * value);
extern GType g_variant_builder_get_type(void);
extern GType g_variant_get_gtype(void);
extern GType g_variant_type_get_gtype(void);
extern void g_weak_ref_clear(struct GWeakRef *weak_ref);
extern void *g_weak_ref_get(struct GWeakRef *weak_ref);
extern void g_weak_ref_init(struct GWeakRef *weak_ref, gpointer object);
extern void g_weak_ref_set(struct GWeakRef *weak_ref, gpointer object);
</SCREEN>
</SECT2>
<SECT2>
<TITLE>glib-2.0/gobject/gvaluecollector.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define G_VALUE_COLLECT_FORMAT_MAX_LENGTH	(8)
#define G_VALUE_LCOPY(value,var_args,flags,__error)	\
G_STMT_START { \
  const GValue *_value = (value); \
  guint _flags = (flags); \
  GType _value_type = G_VALUE_TYPE (_value); \
  GTypeValueTable *_vtable = g_type_value_table_peek (_value_type); \
  gchar *_lcopy_format = _vtable->lcopy_format; \
  GTypeCValue _cvalues[G_VALUE_COLLECT_FORMAT_MAX_LENGTH] = { { 0, }, }; \
  guint _n_values = 0; \
  \
  while (*_lcopy_format) \
    { \
      GTypeCValue *_cvalue = _cvalues + _n_values++; \
      \
      switch (*_lcopy_format++) \
        { \
          case G_VALUE_COLLECT_INT: \
            _cvalue->v_int = va_arg ((var_args), gint); \
	    break; \
          \
          case G_VALUE_COLLECT_LONG: \
            _cvalue->v_int = va_arg ((var_args), glong); \
	    break; \
          \
          case G_VALUE_COLLECT_INT64: \
            _cvalue->v_int = va_arg ((var_args), gint64); \
	    break; \
          \
          case G_VALUE_COLLECT_DOUBLE: \
            _cvalue->v_int = va_arg ((var_args), gdouble); \
	    break; \
          \
          case G_VALUE_COLLECT_POINTER: \
            _cvalue->v_int = va_arg ((var_args), gpointer); \
	    break; \
          \
          default: \
            g_assert_not_reached (); \
        } \
    } \
    \
  *(__error) = _vtable->lcopy_value (_value, _n_values, _cvalues, _flags); \
  \
} G_STMT_END
#define G_VALUE_COLLECT_SKIP(_value_type,var_args)	\
G_STMT_START { \
  GTypeValueTable *_vtable = g_type_value_table_peek (_value_type); \
  gchar *_collect_format = _vtable->collect_format; \
  \
  while (*_collect_format) \
    { \
      switch (*_collect_format++) \
        { \
          case G_VALUE_COLLECT_INT: \
            va_arg ((var_args), gint); \
            break; \
          \
          case G_VALUE_COLLECT_LONG: \
            va_arg ((var_args), glong); \
            break; \
          \
          case G_VALUE_COLLECT_INT64: \
            va_arg ((var_args), gint64); \
            break; \
          \
          case G_VALUE_COLLECT_DOUBLE: \
            va_arg ((var_args), gdouble); \
            break; \
          \
          case G_VALUE_COLLECT_POINTER: \
            va_arg ((var_args), gpointer); \
            break; \
          \
          default: \
            g_assert_not_reached (); \
        } \
    } \
} G_STMT_END
#define G_VALUE_COLLECT_INIT(value,_value_type,var_args,flags,__error)	\
G_STMT_START { \
  GValue *_val = (value); \
  guint _flags = (flags); \
  GTypeValueTable *_vtab = g_type_value_table_peek (_value_type); \
  gchar *_collect_format = _vtab->collect_format; \
  GTypeCValue _cvalues[G_VALUE_COLLECT_FORMAT_MAX_LENGTH] = { { 0, }, }; \
  guint _n_values = 0; \
  \
  _val->g_type = _value_type; \
  \
  while (*_collect_format) \
    { \
      GTypeCValue *_cvalue = _cvalues + _n_values++; \
      \
      switch (*_collect_format++) \
        { \
          case G_VALUE_COLLECT_INT: \
            _cvalue->v_int = va_arg ((var_args), gint); \
            break; \
          \
          case G_VALUE_COLLECT_LONG: \
            _cvalue->v_int = va_arg ((var_args), glong); \
            break; \
          \
          case G_VALUE_COLLECT_INT64: \
            _cvalue->v_int = va_arg ((var_args), gint64); \
            break; \
          \
          case G_VALUE_COLLECT_DOUBLE: \
            _cvalue->v_int = va_arg ((var_args), gdouble); \
            break; \
          \
          case G_VALUE_COLLECT_POINTER: \
            _cvalue->v_int = va_arg ((var_args), gpointer); \
            break; \
          \
          default: \
            g_assert_not_reached (); \
        } \
    } \
    \
  *(__error) = _vtab->collect_value (_val, _n_values, _cvalues, _flags); \
  \
} G_STMT_END
#define G_VALUE_COLLECT(value,var_args,flags,__error)	\
G_STMT_START {\
  GValue *_value = (value); \
  GType _value_type = G_VALUE_TYPE (_value); \
  GTypeValueTable *_vtable = g_type_value_table_peek (_value_type); \
  \
  if (_vtable->value_free) \
    _vtable->value_free (_value); \
  \
  memset (_value->data, 0, sizeof (_value->data)); \
  \
  G_VALUE_COLLECT_INIT(value, _value_type, var_args, flags, __error); \
  \
} G_STMT_END

enum {
    G_VALUE_COLLECT_INT = 'i',
    G_VALUE_COLLECT_LONG = 'l',
    G_VALUE_COLLECT_INT64 = 'q',
    G_VALUE_COLLECT_DOUBLE = 'd',
    G_VALUE_COLLECT_POINTER = 'p'
};
</SCREEN>
</SECT2>
</SECT1>
<SECT1 ID=libgobject-2.0man>
<TITLE>Interface Definitions for libgobject-2.0</TITLE>
<PARA>
The interfaces defined on the following pages are included in libgobject-2.0 and are defined
by this specification.
Unless otherwise noted, these interfaces shall be included
in the source standard.
</PARA>
<PARA>
Other interfaces listed in <XREF LINKEND=libgobject-2.0> shall behave as described
in the referenced base document.
</PARA>
<!-- MISSING DEFINITION FOR g_cclosure_marshal_generic_va -->
<!-- Lets just hope nobody notices -->
<!-- MISSING DEFINITION FOR g_object_compat_control -->
<!-- Lets just hope nobody notices -->
<!-- MISSING DEFINITION FOR g_signal_set_va_marshaller -->
<!-- Lets just hope nobody notices -->
<!-- MISSING DEFINITION FOR g_type_class_get_private -->
<!-- Lets just hope nobody notices -->
<refentry id="gobject-g.type.name.from.class"> <refmeta>
<refentrytitle>g_type_name_from_class</refentrytitle>
<refmiscinfo></refmiscinfo>
</refmeta>
<refnamediv>
<refname>g_type_name_from_class</refname>
<refpurpose>
get unique type name of the class
</refpurpose>
</refnamediv>
<refsynopsisdiv>
<funcsynopsis>
<funcsynopsisinfo>
#include &lt;glib-object.h&gt;
</funcsynopsisinfo>
<funcprototype>
<funcdef>gchar *<function>g_type_name_from_class</function></funcdef>
<paramdef>GTypeClass *<parameter>g_class</parameter></paramdef>
</funcprototype>
</funcsynopsis>
</refsynopsisdiv>
<refsect1>
<title>Description</title>
<para>
The <function>g_type_name_from_class</function>
returns the unique name that is assigned to a type ID of 
<parameter>g_class</parameter> class structure.
</para>
</refsect1>

<refsect1>
<title>Return Value</title>
<para>
The <function>g_type_name_from_class</function> function returns 
a pointer referring to the static string with the unique name.
</para>
</refsect1>

<refsect1>
<title>Errors</title>
<para>
No errors are defined.
</para>
</refsect1>

</refentry>


<refentry id="gobject-g.type.name.from.instance"> <refmeta>
<refentrytitle>g_type_name_from_instance</refentrytitle>
<refmiscinfo></refmiscinfo>
</refmeta>
<refnamediv>
<refname>g_type_name_from_instance</refname>
<refpurpose>
get name of type from the instance
</refpurpose>
</refnamediv>
<refsynopsisdiv>
<funcsynopsis>
<funcsynopsisinfo>
#include &lt;glib-object.h&gt;
</funcsynopsisinfo>
<funcprototype>
<funcdef>gchar *<function>g_type_name_from_instance</function></funcdef>
<paramdef>GTypeInstance *<parameter>instance</parameter></paramdef>
</funcprototype>
</funcsynopsis>
</refsynopsisdiv>
<refsect1>
<title>Description</title>
<para>
The <function>g_type_name_from_instance</function>
returns the name of type from the instance 
<parameter>instance</parameter> in a Camel case.
Instance should be valid instance pointer.
</para>
</refsect1>

<refsect1>
<title>Return Value</title>
<para>
The <function>g_type_name_from_instance</function> function returns 
a pointer referring to the string with the type name.
</para>
</refsect1>

<refsect1>
<title>Errors</title>
<para>
No errors are defined.
</para>
</refsect1>

</refentry>


<refentry id="gobject-g.value.set.instance"> <refmeta>
<refentrytitle>g_value_set_instance</refentrytitle>
<refmiscinfo></refmiscinfo>
</refmeta>
<refnamediv>
<refname>g_value_set_instance</refname>
<refpurpose>
set value from an instantiatable type
</refpurpose>
</refnamediv>
<refsynopsisdiv>
<funcsynopsis>
<funcsynopsisinfo>
#include &lt;glib-object.h&gt;
</funcsynopsisinfo>
<funcprototype>
<funcdef>void<function>g_value_set_instance</function></funcdef>
<paramdef>GValue *<parameter>value</parameter></paramdef>
<paramdef>gpointer<parameter>instance</parameter></paramdef>
</funcprototype>
</funcsynopsis>
</refsynopsisdiv>
<refsect1>
<title>Description</title>
<para>
The <function>g_value_set_instance</function>
sets value from an instantiatable type
via the value_table's <function>collect_value</function> function.
</para>
</refsect1>

<refsect1>
<title>Errors</title>
<para>
No errors are defined.
</para>
</refsect1>

</refentry>


</SECT1>
<!-- End of text generated from database -->

<!-- Start of generated text - do not edit! -->
<!-- generated from the LSB specification database by mklibspec -->
<SECT1 ID=libgmodule-2.0>
<TITLE>Interfaces for libgmodule-2.0</TITLE>
<PARA>
<XREF LINKEND="lib-libgmodule-2.0-def"> defines the library name and shared object name
for the libgmodule-2.0 library
</PARA>
<TABLE id="lib-libgmodule-2.0-def">
<TITLE>libgmodule-2.0 Definition</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Library:</ENTRY>
<ENTRY>libgmodule-2.0</ENTRY>
</ROW>
<ROW>
<ENTRY>SONAME:</ENTRY>
<ENTRY>libgmodule-2.0.so.0</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The behavior of the interfaces in this library is specified by the following specifications:<SIMPLELIST COLUMNS=1>
<MEMBER ID='REFSTD.libgmodule.2.0.1'>
[Glib 2.32] <XREF LINKEND="std.Glib">
</MEMBER>
</SIMPLELIST>
</PARA>
<!-- debug: database interface name Glib-Dynamic loading of Modules -->
<SECT2>
<!--libgroup-->
<TITLE>Glib-Dynamic loading of Modules</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Interfaces for Glib-Dynamic loading of Modules</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic functions
for Glib-Dynamic loading of Modules specified in <XREF linkend="tbl-libgmodule-2.0-glib-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<TABLE id="tbl-libgmodule-2.0-glib-ints">
<TITLE>libgmodule-2.0 - Glib-Dynamic loading of Modules Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>g_module_build_path</primary></indexterm>g_module_build_path <LINK LINKEND="REFSTD.libgmodule.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_module_close</primary></indexterm>g_module_close <LINK LINKEND="REFSTD.libgmodule.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_module_error</primary></indexterm>g_module_error <LINK LINKEND="REFSTD.libgmodule.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_module_make_resident</primary></indexterm>g_module_make_resident <LINK LINKEND="REFSTD.libgmodule.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_module_name</primary></indexterm>g_module_name <LINK LINKEND="REFSTD.libgmodule.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_module_open</primary></indexterm>g_module_open <LINK LINKEND="REFSTD.libgmodule.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_module_supported</primary></indexterm>g_module_supported <LINK LINKEND="REFSTD.libgmodule.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_module_symbol</primary></indexterm>g_module_symbol <LINK LINKEND="REFSTD.libgmodule.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>
</SECT2>
</SECT1>
<SECT1 ID=libgmodule-2.0-ddefs>
<TITLE>Data Definitions for libgmodule-2.0</TITLE>
<PARA>
This section defines global identifiers and their values that are associated
with interfaces contained in libgmodule-2.0.
These definitions are organized into groups that
correspond to system headers. This convention is used as a
convenience for the reader, and does not imply the existence
of these headers, or their content.
Where an interface is defined as requiring a particular system header file
all of the data definitions for that system header file presented here shall be in effect.
</PARA>
<PARA>
This section gives data definitions to promote binary application
portability, not to repeat source interface definitions available
elsewhere. System providers and application developers should use this ABI
to supplement - not to replace - source interface definition specifications.
</PARA>
<PARA>
This specification uses the <XREF LINKEND='std.ISOC99'> C Language as the reference programming language, and data definitions are specified in ISO C format. The C language is used here as a convenient notation. Using a C language description of these data objects does not preclude their use by other programming languages.</PARA>
<SECT2>
<TITLE>glib-2.0/gmodule.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define G_MODULE_EXPORT
#define G_MODULE_IMPORT	extern

typedef struct _GModule GModule;
typedef enum {
    G_MODULE_BIND_LAZY = 1 &lt;&lt; 0,
    G_MODULE_BIND_LOCAL = 1 &lt;&lt; 1,
    G_MODULE_BIND_MASK = 0x03
} GModuleFlags;
typedef void (*GModuleUnload) (GModule *);
typedef const gchar *(*GModuleCheckInit) (GModule *);
extern gchar *g_module_build_path(const gchar * directory,
				  const gchar * module_name);
extern gboolean g_module_close(GModule * module);
extern const gchar *g_module_error(void);
extern void g_module_make_resident(GModule * module);
extern const gchar *g_module_name(GModule * module);
extern GModule *g_module_open(const gchar * file_name, GModuleFlags flags);
extern gboolean g_module_supported(void);
extern gboolean g_module_symbol(GModule * module,
				const gchar * symbol_name,
				gpointer * symbol);
</SCREEN>
</SECT2>
</SECT1>
<!-- End of text generated from database -->

<!-- Start of generated text - do not edit! -->
<!-- generated from the LSB specification database by mklibspec -->
<SECT1 ID=libgthread-2.0>
<TITLE>Interfaces for libgthread-2.0</TITLE>
<PARA>
<XREF LINKEND="lib-libgthread-2.0-def"> defines the library name and shared object name
for the libgthread-2.0 library
</PARA>
<TABLE id="lib-libgthread-2.0-def">
<TITLE>libgthread-2.0 Definition</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Library:</ENTRY>
<ENTRY>libgthread-2.0</ENTRY>
</ROW>
<ROW>
<ENTRY>SONAME:</ENTRY>
<ENTRY>libgthread-2.0.so.0</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The behavior of the interfaces in this library is specified by the following specifications:<SIMPLELIST COLUMNS=1>
<MEMBER ID='REFSTD.libgthread.2.0.1'>
[Glib 2.32] <XREF LINKEND="std.Glib">
</MEMBER>
</SIMPLELIST>
</PARA>
<!-- debug: database interface name Glib thread abstraction -->
<SECT2>
<!--libgroup-->
<TITLE>Glib thread abstraction</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Interfaces for Glib thread abstraction</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic functions
for Glib thread abstraction specified in <XREF linkend="tbl-libgthread-2.0-glib-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<TABLE id="tbl-libgthread-2.0-glib-ints">
<TITLE>libgthread-2.0 - Glib thread abstraction Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>g_thread_init</primary></indexterm>g_thread_init <LINK LINKEND="REFSTD.libgthread.2.0.1">[Glib 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_thread_init_with_errorcheck_mutexes</primary></indexterm>g_thread_init_with_errorcheck_mutexes <LINK LINKEND="REFSTD.libgthread.2.0.1">[Glib 2.32]</LINK></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>
</SECT2>
</SECT1>
<!-- End of text generated from database -->

<!-- Start of generated text - do not edit! -->
<!-- generated from the LSB specification database by mklibspec -->
<SECT1 ID=libatk-1.0>
<TITLE>Interfaces for libatk-1.0</TITLE>
<PARA>
<XREF LINKEND="lib-libatk-1.0-def"> defines the library name and shared object name
for the libatk-1.0 library
</PARA>
<TABLE id="lib-libatk-1.0-def">
<TITLE>libatk-1.0 Definition</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Library:</ENTRY>
<ENTRY>libatk-1.0</ENTRY>
</ROW>
<ROW>
<ENTRY>SONAME:</ENTRY>
<ENTRY>libatk-1.0.so.0</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The behavior of the interfaces in this library is specified by the following specifications:<SIMPLELIST COLUMNS=1>
<MEMBER ID='REFSTD.libatk.1.0.1'>
[ATK 2.2.0] <XREF LINKEND="std.ATK">
</MEMBER>
<MEMBER ID='REFSTD.libatk.1.0.2'>
[Gobject 2.32] <XREF LINKEND="std.Gobject">
</MEMBER>
<MEMBER ID='REFSTD.libatk.1.0.3'>
[LSB] <XREF LINKEND="std.LSB">
</MEMBER>
</SIMPLELIST>
</PARA>
<!-- debug: database interface name GTK Accessibility Toolkit -->
<SECT2>
<!--libgroup-->
<TITLE>GTK Accessibility Toolkit</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Interfaces for GTK Accessibility Toolkit</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic functions
for GTK Accessibility Toolkit specified in <XREF linkend="tbl-libatk-1.0-gtk-a-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<TABLE id="tbl-libatk-1.0-gtk-a-ints">
<TITLE>libatk-1.0 - GTK Accessibility Toolkit Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>atk_action_get_type</primary></indexterm>atk_action_get_type <LINK LINKEND="REFSTD.libatk.1.0.2">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_component_get_alpha</primary></indexterm>atk_component_get_alpha <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK 2.2.0]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>atk_component_get_type</primary></indexterm>atk_component_get_type <LINK LINKEND="REFSTD.libatk.1.0.2">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_coord_type_get_type</primary></indexterm>atk_coord_type_get_type <LINK LINKEND="REFSTD.libatk.1.0.2">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>atk_document_get_attribute_value</primary></indexterm>atk_document_get_attribute_value <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK 2.2.0]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_document_get_attributes</primary></indexterm>atk_document_get_attributes <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK 2.2.0]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>atk_document_get_locale</primary></indexterm>atk_document_get_locale <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK 2.2.0]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_document_get_type</primary></indexterm>atk_document_get_type <LINK LINKEND="REFSTD.libatk.1.0.2">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>atk_document_set_attribute_value</primary></indexterm>atk_document_set_attribute_value <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK 2.2.0]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_editable_text_get_type</primary></indexterm>atk_editable_text_get_type <LINK LINKEND="REFSTD.libatk.1.0.2">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>atk_get_version</primary></indexterm>atk_get_version <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK 2.2.0]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_gobject_accessible_get_type</primary></indexterm>atk_gobject_accessible_get_type <LINK LINKEND="REFSTD.libatk.1.0.2">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>atk_hyperlink_get_type</primary></indexterm>atk_hyperlink_get_type <LINK LINKEND="REFSTD.libatk.1.0.2">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_hyperlink_impl_get_hyperlink</primary></indexterm>atk_hyperlink_impl_get_hyperlink <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK 2.2.0]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>atk_hyperlink_impl_get_type</primary></indexterm>atk_hyperlink_impl_get_type <LINK LINKEND="REFSTD.libatk.1.0.2">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_hyperlink_state_flags_get_type</primary></indexterm>atk_hyperlink_state_flags_get_type <LINK LINKEND="REFSTD.libatk.1.0.2">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>atk_hypertext_get_type</primary></indexterm>atk_hypertext_get_type <LINK LINKEND="REFSTD.libatk.1.0.2">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_image_get_image_locale</primary></indexterm>atk_image_get_image_locale <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK 2.2.0]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>atk_image_get_type</primary></indexterm>atk_image_get_type <LINK LINKEND="REFSTD.libatk.1.0.2">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_implementor_get_type</primary></indexterm>atk_implementor_get_type <LINK LINKEND="REFSTD.libatk.1.0.2">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>atk_key_event_type_get_type</primary></indexterm>atk_key_event_type_get_type <LINK LINKEND="REFSTD.libatk.1.0.2">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_layer_get_type</primary></indexterm>atk_layer_get_type <LINK LINKEND="REFSTD.libatk.1.0.2">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>atk_misc_get_instance</primary></indexterm>atk_misc_get_instance <LINK LINKEND="REFSTD.libatk.1.0.3">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_misc_get_type</primary></indexterm>atk_misc_get_type <LINK LINKEND="REFSTD.libatk.1.0.2">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>atk_misc_threads_enter</primary></indexterm>atk_misc_threads_enter <LINK LINKEND="REFSTD.libatk.1.0.3">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_misc_threads_leave</primary></indexterm>atk_misc_threads_leave <LINK LINKEND="REFSTD.libatk.1.0.3">[LSB]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>atk_no_op_object_factory_get_type</primary></indexterm>atk_no_op_object_factory_get_type <LINK LINKEND="REFSTD.libatk.1.0.2">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_no_op_object_get_type</primary></indexterm>atk_no_op_object_get_type <LINK LINKEND="REFSTD.libatk.1.0.2">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>atk_object_factory_get_type</primary></indexterm>atk_object_factory_get_type <LINK LINKEND="REFSTD.libatk.1.0.2">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_object_get_attributes</primary></indexterm>atk_object_get_attributes <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK 2.2.0]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>atk_object_get_type</primary></indexterm>atk_object_get_type <LINK LINKEND="REFSTD.libatk.1.0.2">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_plug_get_id</primary></indexterm>atk_plug_get_id <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK 2.2.0]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>atk_plug_get_type</primary></indexterm>atk_plug_get_type <LINK LINKEND="REFSTD.libatk.1.0.2">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_plug_new</primary></indexterm>atk_plug_new <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK 2.2.0]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>atk_rectangle_get_type</primary></indexterm>atk_rectangle_get_type <LINK LINKEND="REFSTD.libatk.1.0.2">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_registry_get_type</primary></indexterm>atk_registry_get_type <LINK LINKEND="REFSTD.libatk.1.0.2">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>atk_relation_get_type</primary></indexterm>atk_relation_get_type <LINK LINKEND="REFSTD.libatk.1.0.2">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_relation_remove_target</primary></indexterm>atk_relation_remove_target <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK 2.2.0]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>atk_relation_set_get_type</primary></indexterm>atk_relation_set_get_type <LINK LINKEND="REFSTD.libatk.1.0.2">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_relation_type_get_type</primary></indexterm>atk_relation_type_get_type <LINK LINKEND="REFSTD.libatk.1.0.2">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>atk_role_get_type</primary></indexterm>atk_role_get_type <LINK LINKEND="REFSTD.libatk.1.0.2">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_selection_get_type</primary></indexterm>atk_selection_get_type <LINK LINKEND="REFSTD.libatk.1.0.2">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>atk_socket_embed</primary></indexterm>atk_socket_embed <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK 2.2.0]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_socket_get_type</primary></indexterm>atk_socket_get_type <LINK LINKEND="REFSTD.libatk.1.0.2">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>atk_socket_is_occupied</primary></indexterm>atk_socket_is_occupied <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK 2.2.0]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_socket_new</primary></indexterm>atk_socket_new <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK 2.2.0]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>atk_state_set_get_type</primary></indexterm>atk_state_set_get_type <LINK LINKEND="REFSTD.libatk.1.0.2">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_state_type_get_type</primary></indexterm>atk_state_type_get_type <LINK LINKEND="REFSTD.libatk.1.0.2">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>atk_streamable_content_get_type</primary></indexterm>atk_streamable_content_get_type <LINK LINKEND="REFSTD.libatk.1.0.2">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_streamable_content_get_uri</primary></indexterm>atk_streamable_content_get_uri <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK 2.2.0]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>atk_table_get_type</primary></indexterm>atk_table_get_type <LINK LINKEND="REFSTD.libatk.1.0.2">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_text_attribute_get_type</primary></indexterm>atk_text_attribute_get_type <LINK LINKEND="REFSTD.libatk.1.0.2">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>atk_text_boundary_get_type</primary></indexterm>atk_text_boundary_get_type <LINK LINKEND="REFSTD.libatk.1.0.2">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_text_clip_type_get_type</primary></indexterm>atk_text_clip_type_get_type <LINK LINKEND="REFSTD.libatk.1.0.2">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>atk_text_get_type</primary></indexterm>atk_text_get_type <LINK LINKEND="REFSTD.libatk.1.0.2">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_text_range_get_type</primary></indexterm>atk_text_range_get_type <LINK LINKEND="REFSTD.libatk.1.0.2">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>atk_util_get_type</primary></indexterm>atk_util_get_type <LINK LINKEND="REFSTD.libatk.1.0.2">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_value_get_minimum_increment</primary></indexterm>atk_value_get_minimum_increment <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK 2.2.0]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>atk_value_get_type</primary></indexterm>atk_value_get_type <LINK LINKEND="REFSTD.libatk.1.0.2">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_window_get_type</primary></indexterm>atk_window_get_type <LINK LINKEND="REFSTD.libatk.1.0.2">[Gobject 2.32]</LINK></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>
</SECT2>
</SECT1>
<SECT1 ID=libatk-1.0-ddefs>
<TITLE>Data Definitions for libatk-1.0</TITLE>
<PARA>
This section defines global identifiers and their values that are associated
with interfaces contained in libatk-1.0.
These definitions are organized into groups that
correspond to system headers. This convention is used as a
convenience for the reader, and does not imply the existence
of these headers, or their content.
Where an interface is defined as requiring a particular system header file
all of the data definitions for that system header file presented here shall be in effect.
</PARA>
<PARA>
This section gives data definitions to promote binary application
portability, not to repeat source interface definitions available
elsewhere. System providers and application developers should use this ABI
to supplement - not to replace - source interface definition specifications.
</PARA>
<PARA>
This specification uses the <XREF LINKEND='std.ISOC99'> C Language as the reference programming language, and data definitions are specified in ISO C format. The C language is used here as a convenient notation. Using a C language description of these data objects does not preclude their use by other programming languages.</PARA>
<SECT2>
<TITLE>atk-1.0/atk/atk-enum-types.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define ATK_TYPE_HYPERLINK_STATE_FLAGS	 \
	(atk_hyperlink_state_flags_get_type())
#define ATK_TYPE_COORD_TYPE	(atk_coord_type_get_type())
#define ATK_TYPE_KEY_EVENT_TYPE	(atk_key_event_type_get_type())
#define ATK_TYPE_LAYER	(atk_layer_get_type())
#define ATK_TYPE_RELATION_TYPE	(atk_relation_type_get_type())
#define ATK_TYPE_ROLE	(atk_role_get_type())
#define ATK_TYPE_STATE_TYPE	(atk_state_type_get_type())
#define ATK_TYPE_TEXT_ATTRIBUTE	(atk_text_attribute_get_type())
#define ATK_TYPE_TEXT_BOUNDARY	(atk_text_boundary_get_type())
#define ATK_TYPE_TEXT_CLIP_TYPE	(atk_text_clip_type_get_type())

extern GType atk_coord_type_get_type(void);
extern GType atk_hyperlink_state_flags_get_type(void);
extern GType atk_key_event_type_get_type(void);
extern GType atk_layer_get_type(void);
extern GType atk_relation_type_get_type(void);
extern GType atk_role_get_type(void);
extern GType atk_state_type_get_type(void);
extern GType atk_text_attribute_get_type(void);
extern GType atk_text_boundary_get_type(void);
extern GType atk_text_clip_type_get_type(void);
</SCREEN>
</SECT2>
<SECT2>
<TITLE>atk-1.0/atk/atk.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define _TYPEDEF_ATK_ACTION_
#define _TYPEDEF_ATK_COMPONENT_
#define _TYPEDEF_ATK_DOCUMENT_
#define _TYPEDEF_ATK_EDITABLE_TEXT_
#define _TYPEDEF_ATK_HYPERTEXT_
#define _TYPEDEF_ATK_IMAGE_
#define _TYPEDEF_ATK_SELECTION_
#define _TYPEDEF_ATK_STREAMABLE_CONTENT
#define _TYPEDEF_ATK_TABLE_
#define _TYPEDEF_ATK_TEXT_
#define _TYPEDEF_ATK_UTIL_
#define _TYPEDEF_ATK_VALUE__
#define ATK_TYPE_NO_OP_OBJECT_FACTORY	 \
	(atk_no_op_object_factory_get_type ())
#define ATK_GOBJECT_ACCESSIBLE_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), ATK_TYPE_GOBJECT_ACCESSIBLE, \
	AtkGObjectAccessibleClass))
#define ATK_HYPERLINK_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), ATK_TYPE_HYPERLINK, \
	AtkHyperlinkClass))
#define ATK_NO_OP_OBJECT_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), ATK_TYPE_NO_OP_OBJECT, \
	AtkNoOpObjectClass))
#define ATK_NO_OP_OBJECT_FACTORY_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), ATK_TYPE_NO_OP_OBJECT_FACTORY, \
	AtkNoOpObjectFactoryClass))
#define ATK_OBJECT_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), ATK_TYPE_OBJECT, AtkObjectClass))
#define ATK_OBJECT_FACTORY_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), ATK_TYPE_OBJECT_FACTORY, \
	AtkObjectFactoryClass))
#define ATK_REGISTRY_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), ATK_TYPE_REGISTRY, \
	AtkRegistryClass))
#define ATK_RELATION_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), ATK_TYPE_RELATION, \
	AtkRelationClass))
#define ATK_RELATION_SET_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), ATK_TYPE_RELATION_SET, \
	AtkRelationSetClass))
#define ATK_STATE_SET_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), ATK_TYPE_STATE_SET, \
	AtkStateSetClass))
#define ATK_UTIL_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), ATK_TYPE_UTIL, AtkUtilClass))
#define ATK_IS_GOBJECT_ACCESSIBLE_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), ATK_TYPE_GOBJECT_ACCESSIBLE))
#define ATK_IS_HYPERLINK_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), ATK_TYPE_HYPERLINK))
#define ATK_IS_NO_OP_OBJECT_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), ATK_TYPE_NO_OP_OBJECT))
#define ATK_IS_NO_OP_OBJECT_FACTORY_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), ATK_TYPE_NO_OP_OBJECT_FACTORY))
#define ATK_IS_OBJECT_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), ATK_TYPE_OBJECT))
#define ATK_IS_OBJECT_FACTORY_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), ATK_TYPE_OBJECT_FACTORY))
#define ATK_IS_REGISTRY_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), ATK_TYPE_REGISTRY))
#define ATK_IS_RELATION_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), ATK_TYPE_RELATION))
#define ATK_IS_RELATION_SET_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), ATK_TYPE_RELATION_SET))
#define ATK_IS_STATE_SET_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), ATK_TYPE_STATE_SET))
#define ATK_IS_UTIL_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), ATK_TYPE_UTIL))
#define ATK_GOBJECT_ACCESSIBLE(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), ATK_TYPE_GOBJECT_ACCESSIBLE, \
	AtkGObjectAccessible))
#define ATK_HYPERLINK(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), ATK_TYPE_HYPERLINK, \
	AtkHyperlink))
#define ATK_NO_OP_OBJECT(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), ATK_TYPE_NO_OP_OBJECT, \
	AtkNoOpObject))
#define ATK_NO_OP_OBJECT_FACTORY(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), ATK_TYPE_NO_OP_OBJECT_FACTORY, \
	AtkNoOpObjectFactory))
#define ATK_OBJECT(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), ATK_TYPE_OBJECT, AtkObject))
#define ATK_OBJECT_FACTORY(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), ATK_TYPE_OBJECT_FACTORY, \
	AtkObjectFactory))
#define ATK_REGISTRY(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), ATK_TYPE_REGISTRY, AtkRegistry))
#define ATK_RELATION(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), ATK_TYPE_RELATION, AtkRelation))
#define ATK_RELATION_SET(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), ATK_TYPE_RELATION_SET, \
	AtkRelationSet))
#define ATK_STATE_SET(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), ATK_TYPE_STATE_SET, AtkStateSet))
#define ATK_IS_GOBJECT_ACCESSIBLE(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), ATK_TYPE_GOBJECT_ACCESSIBLE))
#define ATK_IS_HYPERLINK(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), ATK_TYPE_HYPERLINK))
#define ATK_IS_NO_OP_OBJECT(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), ATK_TYPE_NO_OP_OBJECT))
#define ATK_IS_NO_OP_OBJECT_FACTORY(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), ATK_TYPE_NO_OP_OBJECT_FACTORY))
#define ATK_IS_OBJECT(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), ATK_TYPE_OBJECT))
#define ATK_IS_OBJECT_FACTORY(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), ATK_TYPE_OBJECT_FACTORY))
#define ATK_IS_REGISTRY(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), ATK_TYPE_REGISTRY))
#define ATK_IS_RELATION(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), ATK_TYPE_RELATION))
#define ATK_IS_RELATION_SET(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), ATK_TYPE_RELATION_SET))
#define ATK_IS_STATE_SET(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), ATK_TYPE_STATE_SET))
#define ATK_NO_OP_OBJECT_FACTORY_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ( (obj), ATK_TYPE_NO_OP_OBJECT_FACTORY, \
	AtkNoOpObjectFactoryClass))
#define ATK_GOBJECT_ACCESSIBLE_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), ATK_TYPE_GOBJECT_ACCESSIBLE, \
	AtkGObjectAccessibleClass))
#define ATK_HYPERLINK_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), ATK_TYPE_HYPERLINK, \
	AtkHyperlinkClass))
#define ATK_NO_OP_OBJECT_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), ATK_TYPE_NO_OP_OBJECT, \
	AtkNoOpObjectClass))
#define ATK_OBJECT_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), ATK_TYPE_OBJECT, AtkObjectClass))
#define ATK_OBJECT_FACTORY_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), ATK_TYPE_OBJECT_FACTORY, \
	AtkObjectFactoryClass))
#define ATK_REGISTRY_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), ATK_TYPE_REGISTRY, \
	AtkRegistryClass))
#define ATK_RELATION_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), ATK_TYPE_RELATION, \
	AtkRelationClass))
#define ATK_RELATION_SET_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), ATK_TYPE_RELATION_SET, \
	AtkRelationSetClass))
#define ATK_STATE_SET_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), ATK_TYPE_STATE_SET, \
	AtkStateSetClass))
#define ATK_UTIL_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), ATK_TYPE_UTIL, AtkUtilClass))
#define ATK_ACTION_GET_IFACE(obj)	 \
	(G_TYPE_INSTANCE_GET_INTERFACE ((obj), ATK_TYPE_ACTION, \
	AtkActionIface))
#define ATK_COMPONENT_GET_IFACE(obj)	 \
	(G_TYPE_INSTANCE_GET_INTERFACE ((obj), ATK_TYPE_COMPONENT, \
	AtkComponentIface))
#define ATK_DOCUMENT_GET_IFACE(obj)	 \
	(G_TYPE_INSTANCE_GET_INTERFACE ((obj), ATK_TYPE_DOCUMENT, \
	AtkDocumentIface))
#define ATK_EDITABLE_TEXT_GET_IFACE(obj)	 \
	(G_TYPE_INSTANCE_GET_INTERFACE ((obj), ATK_TYPE_EDITABLE_TEXT, \
	AtkEditableTextIface))
#define ATK_HYPERTEXT_GET_IFACE(obj)	 \
	(G_TYPE_INSTANCE_GET_INTERFACE ((obj), ATK_TYPE_HYPERTEXT, \
	AtkHypertextIface))
#define ATK_IMAGE_GET_IFACE(obj)	 \
	(G_TYPE_INSTANCE_GET_INTERFACE ((obj), ATK_TYPE_IMAGE, \
	AtkImageIface))
#define ATK_IMPLEMENTOR_GET_IFACE(obj)	 \
	(G_TYPE_INSTANCE_GET_INTERFACE ((obj), ATK_TYPE_IMPLEMENTOR, \
	AtkImplementorIface))
#define ATK_SELECTION_GET_IFACE(obj)	 \
	(G_TYPE_INSTANCE_GET_INTERFACE ((obj), ATK_TYPE_SELECTION, \
	AtkSelectionIface))
#define ATK_STREAMABLE_CONTENT_GET_IFACE(obj)	 \
	(G_TYPE_INSTANCE_GET_INTERFACE ((obj), ATK_TYPE_STREAMABLE_CONTENT, \
	AtkStreamableContentIface))
#define ATK_TABLE_GET_IFACE(obj)	 \
	(G_TYPE_INSTANCE_GET_INTERFACE ((obj), ATK_TYPE_TABLE, \
	AtkTableIface))
#define ATK_TEXT_GET_IFACE(obj)	 \
	(G_TYPE_INSTANCE_GET_INTERFACE ((obj), ATK_TYPE_TEXT, AtkTextIface))
#define ATK_VALUE_GET_IFACE(obj)	 \
	(G_TYPE_INSTANCE_GET_INTERFACE ((obj), ATK_TYPE_VALUE, \
	AtkValueIface))
#define ATK_ACTION(obj)	 \
	G_TYPE_CHECK_INSTANCE_CAST ((obj), ATK_TYPE_ACTION, AtkAction)
#define ATK_COMPONENT(obj)	 \
	G_TYPE_CHECK_INSTANCE_CAST ((obj), ATK_TYPE_COMPONENT, AtkComponent)
#define ATK_DOCUMENT(obj)	 \
	G_TYPE_CHECK_INSTANCE_CAST ((obj), ATK_TYPE_DOCUMENT, AtkDocument)
#define ATK_EDITABLE_TEXT(obj)	 \
	G_TYPE_CHECK_INSTANCE_CAST ((obj), ATK_TYPE_EDITABLE_TEXT, \
	AtkEditableText)
#define ATK_HYPERTEXT(obj)	 \
	G_TYPE_CHECK_INSTANCE_CAST ((obj), ATK_TYPE_HYPERTEXT, AtkHypertext)
#define ATK_IMAGE(obj)	 \
	G_TYPE_CHECK_INSTANCE_CAST ((obj), ATK_TYPE_IMAGE, AtkImage)
#define ATK_IMPLEMENTOR(obj)	 \
	G_TYPE_CHECK_INSTANCE_CAST ((obj), ATK_TYPE_IMPLEMENTOR, \
	AtkImplementor)
#define ATK_SELECTION(obj)	 \
	G_TYPE_CHECK_INSTANCE_CAST ((obj), ATK_TYPE_SELECTION, AtkSelection)
#define ATK_STREAMABLE_CONTENT(obj)	 \
	G_TYPE_CHECK_INSTANCE_CAST ((obj), ATK_TYPE_STREAMABLE_CONTENT, \
	AtkStreamableContent)
#define ATK_TABLE(obj)	 \
	G_TYPE_CHECK_INSTANCE_CAST ((obj), ATK_TYPE_TABLE, AtkTable)
#define ATK_TEXT(obj)	 \
	G_TYPE_CHECK_INSTANCE_CAST ((obj), ATK_TYPE_TEXT, AtkText)
#define ATK_UTIL(obj)	 \
	G_TYPE_CHECK_INSTANCE_CAST ((obj), ATK_TYPE_UTIL, AtkUtil)
#define ATK_VALUE(obj)	 \
	G_TYPE_CHECK_INSTANCE_CAST ((obj), ATK_TYPE_VALUE, AtkValue)
#define ATK_IS_ACTION(obj)	 \
	G_TYPE_CHECK_INSTANCE_TYPE ((obj), ATK_TYPE_ACTION)
#define ATK_IS_COMPONENT(obj)	 \
	G_TYPE_CHECK_INSTANCE_TYPE ((obj), ATK_TYPE_COMPONENT)
#define ATK_IS_DOCUMENT(obj)	 \
	G_TYPE_CHECK_INSTANCE_TYPE ((obj), ATK_TYPE_DOCUMENT)
#define ATK_IS_EDITABLE_TEXT(obj)	 \
	G_TYPE_CHECK_INSTANCE_TYPE ((obj), ATK_TYPE_EDITABLE_TEXT)
#define ATK_IS_HYPERTEXT(obj)	 \
	G_TYPE_CHECK_INSTANCE_TYPE ((obj), ATK_TYPE_HYPERTEXT)
#define ATK_IS_IMAGE(obj)	 \
	G_TYPE_CHECK_INSTANCE_TYPE ((obj), ATK_TYPE_IMAGE)
#define ATK_IS_IMPLEMENTOR(obj)	 \
	G_TYPE_CHECK_INSTANCE_TYPE ((obj), ATK_TYPE_IMPLEMENTOR)
#define ATK_IS_SELECTION(obj)	 \
	G_TYPE_CHECK_INSTANCE_TYPE ((obj), ATK_TYPE_SELECTION)
#define ATK_IS_STREAMABLE_CONTENT(obj)	 \
	G_TYPE_CHECK_INSTANCE_TYPE ((obj), ATK_TYPE_STREAMABLE_CONTENT)
#define ATK_IS_TABLE(obj)	 \
	G_TYPE_CHECK_INSTANCE_TYPE ((obj), ATK_TYPE_TABLE)
#define ATK_IS_VALUE(obj)	 \
	G_TYPE_CHECK_INSTANCE_TYPE ((obj), ATK_TYPE_VALUE)
#define _ATK_DEFINE_TYPE_EXTENDED_END()	 \
      /* following custom code */     \
      } \
      g_once_init_leave (&amp;g_define_type_id__volatile, g_define_type_id); \
    } \
  return g_define_type_id__volatile; \
}				/* closes type_name##_get_type() */
#define _ATK_DEFINE_TYPE_EXTENDED_BEGIN(TypeName,type_name,TYPE,flags)	 \
\
static void     type_name##_init              (TypeName        *self); \
static void     type_name##_class_init        (TypeName##Class *klass); \
static gpointer type_name##_parent_class = NULL; \
static void     type_name##_class_intern_init (gpointer klass) \
{ \
  type_name##_parent_class = g_type_class_peek_parent (klass); \
  type_name##_class_init ((TypeName##Class*) klass); \
} \
\
GType \
type_name##_get_type (void) \
{ \
  static volatile gsize g_define_type_id__volatile = 0; \
  if (g_once_init_enter (&amp;g_define_type_id__volatile))  \
    { \
      AtkObjectFactory *factory; \
      GType derived_type; \
      GTypeQuery query; \
      GType derived_atk_type; \
      GType g_define_type_id; \
\
      /* Figure out the size of the class and instance we are deriving from */ \
      derived_type = g_type_parent (TYPE); \
      factory = atk_registry_get_factory (atk_get_default_registry (), \
                                          derived_type); \
      derived_atk_type = atk_object_factory_get_accessible_type (factory); \
      g_type_query (derived_atk_type, &amp;query); \
\
      g_define_type_id = \
        g_type_register_static_simple (derived_atk_type, \
                                       g_intern_static_string (#TypeName), \
                                       query.class_size, \
                                       (GClassInitFunc) type_name##_class_intern_init, \
                                       query.instance_size, \
                                       (GInstanceInitFunc) type_name##_init, \
                                       (GTypeFlags) flags); \
      {				/* custom code follows */
#define ATK_TYPE_ACTION	(atk_action_get_type ())
#define ATK_TYPE_COMPONENT	(atk_component_get_type ())
#define ATK_TYPE_DOCUMENT	(atk_document_get_type ())
#define ATK_TYPE_EDITABLE_TEXT	(atk_editable_text_get_type ())
#define ATK_TYPE_GOBJECT_ACCESSIBLE	(atk_gobject_accessible_get_type ())
#define ATK_TYPE_HYPERLINK	(atk_hyperlink_get_type ())
#define ATK_TYPE_HYPERLINK_IMPL	(atk_hyperlink_impl_get_type ())
#define ATK_TYPE_HYPERTEXT	(atk_hypertext_get_type ())
#define ATK_TYPE_IMAGE	(atk_image_get_type ())
#define ATK_TYPE_IMPLEMENTOR	(atk_implementor_get_type ())
#define ATK_TYPE_MISC	(atk_misc_get_type ())
#define ATK_TYPE_NO_OP_OBJECT	(atk_no_op_object_get_type ())
#define ATK_TYPE_OBJECT_FACTORY	(atk_object_factory_get_type ())
#define ATK_TYPE_OBJECT	(atk_object_get_type ())
#define ATK_TYPE_RECTANGLE	(atk_rectangle_get_type ())
#define ATK_TYPE_REGISTRY	(atk_registry_get_type ())
#define ATK_TYPE_RELATION	(atk_relation_get_type ())
#define ATK_TYPE_RELATION_SET	(atk_relation_set_get_type ())
#define ATK_TYPE_SELECTION	(atk_selection_get_type ())
#define ATK_TYPE_STATE_SET	(atk_state_set_get_type ())
#define ATK_TYPE_STREAMABLE_CONTENT	(atk_streamable_content_get_type ())
#define ATK_TYPE_TABLE	(atk_table_get_type ())
#define ATK_TYPE_TEXT	(atk_text_get_type ())
#define ATK_TYPE_UTIL	(atk_util_get_type ())
#define ATK_TYPE_VALUE	(atk_value_get_type ())
#define ATK_MISC_CLASS(klass)	(G_TYPE_CHECK_CLASS_CAST ((klass), ATK_TYPE_MISC, AtkMiscClass))
#define ATK_IS_MISC_CLASS(klass)	(G_TYPE_CHECK_CLASS_TYPE ((klass), ATK_TYPE_MISC))
#define ATK_MISC_GET_CLASS(obj)	(G_TYPE_INSTANCE_GET_CLASS ((obj), ATK_TYPE_MISC, AtkMiscClass))
#define ATK_DEFINE_TYPE(TN,t_n,T_P)	ATK_DEFINE_TYPE_EXTENDED (TN, t_n, T_P, 0, {})
#define ATK_DEFINE_ABSTRACT_TYPE(TN,t_n,T_P)	ATK_DEFINE_TYPE_EXTENDED (TN, t_n, T_P, G_TYPE_FLAG_ABSTRACT, {})
#define ATK_VAR	extern
#define ATK_HYPERLINK_IMPL(obj)	G_TYPE_CHECK_INSTANCE_CAST ((obj), ATK_TYPE_HYPERLINK_IMPL, AtkHyperlinkImpl)
#define ATK_MISC(obj)	G_TYPE_CHECK_INSTANCE_CAST ((obj), ATK_TYPE_MISC, AtkMisc)
#define ATK_IS_HYPERLINK_IMPL(obj)	G_TYPE_CHECK_INSTANCE_TYPE ((obj), ATK_TYPE_HYPERLINK_IMPL)
#define ATK_IS_MISC(obj)	G_TYPE_CHECK_INSTANCE_TYPE ((obj), ATK_TYPE_MISC)
#define ATK_IS_TEXT(obj)	G_TYPE_CHECK_INSTANCE_TYPE ((obj), ATK_TYPE_TEXT)
#define ATK_IS_UTIL(obj)	G_TYPE_CHECK_INSTANCE_TYPE ((obj), ATK_TYPE_UTIL)
#define ATK_HYPERLINK_IMPL_GET_IFACE(obj)	G_TYPE_INSTANCE_GET_INTERFACE ((obj), ATK_TYPE_HYPERLINK_IMPL, AtkHyperlinkImplIface)
#define ATK_DEFINE_TYPE_WITH_CODE(TN,t_n,T_P,_C_)	_ATK_DEFINE_TYPE_EXTENDED_BEGIN (TN, t_n, T_P, 0) {_C_;} _ATK_DEFINE_TYPE_EXTENDED_END()
#define ATK_DEFINE_ABSTRACT_TYPE_WITH_CODE(TN,t_n,T_P,_C_)	_ATK_DEFINE_TYPE_EXTENDED_BEGIN (TN, t_n, T_P, G_TYPE_FLAG_ABSTRACT) {_C_;} _ATK_DEFINE_TYPE_EXTENDED_END()
#define ATK_DEFINE_TYPE_EXTENDED(TN,t_n,T_P,_f_,_C_)	_ATK_DEFINE_TYPE_EXTENDED_BEGIN (TN, t_n, T_P, _f_) {_C_;} _ATK_DEFINE_TYPE_EXTENDED_END()

typedef struct _AtkText AtkText;
typedef struct _AtkObject {
    GObject parent;
    gchar *description;
    gchar *name;
    AtkObject *accessible_parent;
    AtkRole role;
    AtkRelationSet *relation_set;
    AtkLayer layer;
} AtkObject;
typedef enum {
    ATK_ROLE_INVALID = 0,
    ATK_ROLE_ACCEL_LABEL = 1,
    ATK_ROLE_ALERT = 2,
    ATK_ROLE_ANIMATION = 3,
    ATK_ROLE_ARROW = 4,
    ATK_ROLE_CALENDAR = 5,
    ATK_ROLE_CANVAS = 6,
    ATK_ROLE_CHECK_BOX = 7,
    ATK_ROLE_CHECK_MENU_ITEM = 8,
    ATK_ROLE_COLOR_CHOOSER = 9,
    ATK_ROLE_COLUMN_HEADER = 10,
    ATK_ROLE_COMBO_BOX = 11,
    ATK_ROLE_DATE_EDITOR = 12,
    ATK_ROLE_DESKTOP_ICON = 13,
    ATK_ROLE_DESKTOP_FRAME = 14,
    ATK_ROLE_DIAL = 15,
    ATK_ROLE_DIALOG = 16,
    ATK_ROLE_DIRECTORY_PANE = 17,
    ATK_ROLE_DRAWING_AREA = 18,
    ATK_ROLE_FILE_CHOOSER = 19,
    ATK_ROLE_FILLER = 20,
    ATK_ROLE_FONT_CHOOSER = 21,
    ATK_ROLE_FRAME = 22,
    ATK_ROLE_GLASS_PANE = 23,
    ATK_ROLE_HTML_CONTAINER = 24,
    ATK_ROLE_ICON = 25,
    ATK_ROLE_IMAGE = 26,
    ATK_ROLE_INTERNAL_FRAME = 27,
    ATK_ROLE_LABEL = 28,
    ATK_ROLE_LAYERED_PANE = 29,
    ATK_ROLE_LIST = 30,
    ATK_ROLE_LIST_ITEM = 31,
    ATK_ROLE_MENU = 32,
    ATK_ROLE_MENU_BAR = 33,
    ATK_ROLE_MENU_ITEM = 34,
    ATK_ROLE_OPTION_PANE = 35,
    ATK_ROLE_PAGE_TAB = 36,
    ATK_ROLE_PAGE_TAB_LIST = 37,
    ATK_ROLE_PANEL = 38,
    ATK_ROLE_PASSWORD_TEXT = 39,
    ATK_ROLE_POPUP_MENU = 40,
    ATK_ROLE_PROGRESS_BAR = 41,
    ATK_ROLE_PUSH_BUTTON = 42,
    ATK_ROLE_RADIO_BUTTON = 43,
    ATK_ROLE_RADIO_MENU_ITEM = 44,
    ATK_ROLE_ROOT_PANE = 45,
    ATK_ROLE_ROW_HEADER = 46,
    ATK_ROLE_SCROLL_BAR = 47,
    ATK_ROLE_SCROLL_PANE = 48,
    ATK_ROLE_SEPARATOR = 49,
    ATK_ROLE_SLIDER = 50,
    ATK_ROLE_SPLIT_PANE = 51,
    ATK_ROLE_SPIN_BUTTON = 52,
    ATK_ROLE_STATUSBAR = 53,
    ATK_ROLE_TABLE = 54,
    ATK_ROLE_TABLE_CELL = 55,
    ATK_ROLE_TABLE_COLUMN_HEADER = 56,
    ATK_ROLE_TABLE_ROW_HEADER = 57,
    ATK_ROLE_TEAR_OFF_MENU_ITEM = 58,
    ATK_ROLE_TERMINAL = 59,
    ATK_ROLE_TEXT = 60,
    ATK_ROLE_TOGGLE_BUTTON = 61,
    ATK_ROLE_TOOL_BAR = 62,
    ATK_ROLE_TOOL_TIP = 63,
    ATK_ROLE_TREE = 64,
    ATK_ROLE_TREE_TABLE = 65,
    ATK_ROLE_UNKNOWN = 66,
    ATK_ROLE_VIEWPORT = 67,
    ATK_ROLE_WINDOW = 68,
    ATK_ROLE_HEADER = 69,
    ATK_ROLE_FOOTER = 70,
    ATK_ROLE_PARAGRAPH = 71,
    ATK_ROLE_RULER = 72,
    ATK_ROLE_APPLICATION = 73,
    ATK_ROLE_AUTOCOMPLETE = 74,
    ATK_ROLE_EDITBAR = 75,
    ATK_ROLE_ENTRY = 77,
    ATK_ROLE_EMBEDDED = 76,
    ATK_ROLE_CHART = 78,
    ATK_ROLE_CAPTION = 79,
    ATK_ROLE_DOCUMENT_FRAME = 80,
    ATK_ROLE_HEADING = 81,
    ATK_ROLE_PAGE = 82,
    ATK_ROLE_SECTION = 83,
    ATK_ROLE_REDUNDANT_OBJECT = 84,
    ATK_ROLE_FORM = 85,
    ATK_ROLE_LINK = 86,
    ATK_ROLE_INPUT_METHOD_WINDOW = 87,
    ATK_ROLE_TABLE_ROW = 88,
    ATK_ROLE_TREE_ITEM = 89,
    ATK_ROLE_DOCUMENT_SPREADSHEET = 90,
    ATK_ROLE_DOCUMENT_PRESENTATION = 91,
    ATK_ROLE_DOCUMENT_TEXT = 92,
    ATK_ROLE_DOCUMENT_WEB = 93,
    ATK_ROLE_DOCUMENT_EMAIL = 94,
    ATK_ROLE_COMMENT = 95,
    ATK_ROLE_LIST_BOX = 96,
    ATK_ROLE_GROUPING = 97,
    ATK_ROLE_IMAGE_MAP = 98,
    ATK_ROLE_NOTIFICATION = 99,
    ATK_ROLE_INFO_BAR = 100,
    ATK_ROLE_LAST_DEFINED = 101
} AtkRole;
typedef struct _AtkRelationSet {
    GObject parent;
    GPtrArray *relations;
} AtkRelationSet;
typedef enum {
    ATK_LAYER_INVALID = 0,
    ATK_LAYER_BACKGROUND = 1,
    ATK_LAYER_CANVAS = 2,
    ATK_LAYER_WIDGET = 3,
    ATK_LAYER_MDI = 4,
    ATK_LAYER_POPUP = 5,
    ATK_LAYER_OVERLAY = 6,
    ATK_LAYER_WINDOW = 7
} AtkLayer;
typedef struct _AtkPropertyValues {
    const gchar *property_name;
    GValue old_value;
    GValue new_value;
} AtkPropertyValues;
typedef void (*AtkPropertyChangeHandler) (AtkObject *,
					  AtkPropertyValues *);
typedef struct _AtkImage AtkImage;
typedef enum {
    ATK_XY_SCREEN = 0,
    ATK_XY_WINDOW = 1
} AtkCoordType;
typedef enum {
    ATK_RELATION_NULL = 0,
    ATK_RELATION_CONTROLLED_BY = 1,
    ATK_RELATION_CONTROLLER_FOR = 2,
    ATK_RELATION_LABEL_FOR = 3,
    ATK_RELATION_LABELLED_BY = 4,
    ATK_RELATION_MEMBER_OF = 5,
    ATK_RELATION_NODE_CHILD_OF = 6,
    ATK_RELATION_FLOWS_TO = 7,
    ATK_RELATION_FLOWS_FROM = 8,
    ATK_RELATION_SUBWINDOW_OF = 9,
    ATK_RELATION_EMBEDS = 10,
    ATK_RELATION_EMBEDDED_BY = 11,
    ATK_RELATION_POPUP_FOR = 12,
    ATK_RELATION_PARENT_WINDOW_OF = 13,
    ATK_RELATION_DESCRIBED_BY = 14,
    ATK_RELATION_DESCRIPTION_FOR = 15,
    ATK_RELATION_NODE_PARENT_OF = 16,
    ATK_RELATION_LAST_DEFINED = 17
} AtkRelationType;
typedef struct _AtkRelation {
    GObject parent;
    GPtrArray *target;
    AtkRelationType relationship;
} AtkRelation;
typedef struct _AtkDocument AtkDocument;
typedef struct _AtkTable AtkTable;
typedef struct _AtkHyperlink {
    GObject parent;
} AtkHyperlink;
typedef struct _AtkStateSet {
    GObject parent;
} AtkStateSet;
typedef struct _AtkObjectFactory {
    GObject parent;
} AtkObjectFactory;
typedef struct _AtkRegistry {
    GObject parent;
    GHashTable *factory_type_registry;
    GHashTable *factory_singleton_cache;
} AtkRegistry;
typedef struct _AtkEditableText AtkEditableText;
typedef GSList AtkAttributeSet;
typedef struct _AtkHypertext AtkHypertext;
typedef struct _AtkSelection AtkSelection;
typedef struct _AtkAction AtkAction;
typedef struct _AtkComponent AtkComponent;
typedef struct _AtkValue AtkValue;
typedef struct _AtkStreamableContent AtkStreamableContent;
typedef void (*AtkEventListenerInit) (void);
typedef enum {
    ATK_TEXT_ATTR_INVALID = 0,
    ATK_TEXT_ATTR_LEFT_MARGIN = 1,
    ATK_TEXT_ATTR_RIGHT_MARGIN = 2,
    ATK_TEXT_ATTR_INDENT = 3,
    ATK_TEXT_ATTR_INVISIBLE = 4,
    ATK_TEXT_ATTR_EDITABLE = 5,
    ATK_TEXT_ATTR_PIXELS_ABOVE_LINES = 6,
    ATK_TEXT_ATTR_PIXELS_BELOW_LINES = 7,
    ATK_TEXT_ATTR_PIXELS_INSIDE_WRAP = 8,
    ATK_TEXT_ATTR_BG_FULL_HEIGHT = 9,
    ATK_TEXT_ATTR_RISE = 10,
    ATK_TEXT_ATTR_UNDERLINE = 11,
    ATK_TEXT_ATTR_STRIKETHROUGH = 12,
    ATK_TEXT_ATTR_SIZE = 13,
    ATK_TEXT_ATTR_SCALE = 14,
    ATK_TEXT_ATTR_WEIGHT = 15,
    ATK_TEXT_ATTR_LANGUAGE = 16,
    ATK_TEXT_ATTR_FAMILY_NAME = 17,
    ATK_TEXT_ATTR_BG_COLOR = 18,
    ATK_TEXT_ATTR_FG_COLOR = 19,
    ATK_TEXT_ATTR_BG_STIPPLE = 20,
    ATK_TEXT_ATTR_FG_STIPPLE = 21,
    ATK_TEXT_ATTR_WRAP_MODE = 22,
    ATK_TEXT_ATTR_DIRECTION = 23,
    ATK_TEXT_ATTR_JUSTIFICATION = 24,
    ATK_TEXT_ATTR_STRETCH = 25,
    ATK_TEXT_ATTR_VARIANT = 26,
    ATK_TEXT_ATTR_STYLE = 27,
    ATK_TEXT_ATTR_LAST_DEFINED = 28
} AtkTextAttribute;
typedef enum {
    ATK_TEXT_BOUNDARY_CHAR = 0,
    ATK_TEXT_BOUNDARY_WORD_START = 1,
    ATK_TEXT_BOUNDARY_WORD_END = 2,
    ATK_TEXT_BOUNDARY_SENTENCE_START = 3,
    ATK_TEXT_BOUNDARY_SENTENCE_END = 4,
    ATK_TEXT_BOUNDARY_LINE_START = 5,
    ATK_TEXT_BOUNDARY_LINE_END = 6
} AtkTextBoundary;
typedef enum {
    ATK_STATE_INVALID = 0,
    ATK_STATE_ACTIVE = 1,
    ATK_STATE_ARMED = 2,
    ATK_STATE_BUSY = 3,
    ATK_STATE_CHECKED = 4,
    ATK_STATE_DEFUNCT = 5,
    ATK_STATE_EDITABLE = 6,
    ATK_STATE_ENABLED = 7,
    ATK_STATE_EXPANDABLE = 8,
    ATK_STATE_EXPANDED = 9,
    ATK_STATE_FOCUSABLE = 10,
    ATK_STATE_FOCUSED = 11,
    ATK_STATE_HORIZONTAL = 12,
    ATK_STATE_ICONIFIED = 13,
    ATK_STATE_MODAL = 14,
    ATK_STATE_MULTI_LINE = 15,
    ATK_STATE_MULTISELECTABLE = 16,
    ATK_STATE_OPAQUE = 17,
    ATK_STATE_PRESSED = 18,
    ATK_STATE_RESIZABLE = 19,
    ATK_STATE_SELECTABLE = 20,
    ATK_STATE_SELECTED = 21,
    ATK_STATE_SENSITIVE = 22,
    ATK_STATE_SHOWING = 23,
    ATK_STATE_SINGLE_LINE = 24,
    ATK_STATE_STALE = 25,
    ATK_STATE_TRANSIENT = 26,
    ATK_STATE_VERTICAL = 27,
    ATK_STATE_VISIBLE = 28,
    ATK_STATE_MANAGES_DESCENDANTS = 29,
    ATK_STATE_INDETERMINATE = 30,
    ATK_STATE_TRUNCATED = 31,
    ATK_STATE_REQUIRED = 32,
    ATK_STATE_INVALID_ENTRY = 33,
    ATK_STATE_SUPPORTS_AUTOCOMPLETION = 34,
    ATK_STATE_SELECTABLE_TEXT = 35,
    ATK_STATE_DEFAULT = 36,
    ATK_STATE_ANIMATED = 37,
    ATK_STATE_VISITED = 38,
    ATK_STATE_LAST_DEFINED = 39
} AtkStateType;
typedef struct _AtkGObjectAccessible {
    AtkObject parent;
} AtkGObjectAccessible;
typedef guint64 AtkState;
typedef void (*AtkFocusHandler) (AtkObject *, gboolean);
typedef struct _AtkKeyEventStruct {
    gint type;
    guint state;
    guint keyval;
    gint length;
    gchar *string;
    guint16 keycode;
    guint32 timestamp;
} AtkKeyEventStruct;
typedef gint(*AtkKeySnoopFunc) (AtkKeyEventStruct *, gpointer);
typedef struct _AtkTextRectangle {
    gint x;
    gint y;
    gint width;
    gint height;
} AtkTextRectangle;
typedef struct _AtkTextRange {
    AtkTextRectangle bounds;
    gint start_offset;
    gint end_offset;
    gchar *content;
} AtkTextRange;
typedef enum {
    ATK_TEXT_CLIP_NONE = 0,
    ATK_TEXT_CLIP_MIN = 1,
    ATK_TEXT_CLIP_MAX = 2,
    ATK_TEXT_CLIP_BOTH = 3
} AtkTextClipType;
typedef struct _AtkImplementor AtkImplementor;
typedef void (*AtkEventListener) (AtkObject *);
typedef gboolean(*AtkFunction) (gpointer);
typedef struct _AtkImplementorIface {
    GTypeInterface parent;
    AtkObject *(*ref_accessible) (AtkImplementor *);
} AtkImplementorIface;
typedef struct _AtkRegistryClass {
    GObjectClass parent_class;
} AtkRegistryClass;
typedef struct _AtkHypertextIface {
    GTypeInterface parent;
    AtkHyperlink *(*get_link) (AtkHypertext *, gint);
     gint(*get_n_links) (AtkHypertext *);
     gint(*get_link_index) (AtkHypertext *, gint);
    void (*link_selected) (AtkHypertext *, gint);
    AtkFunction pad1;
    AtkFunction pad2;
    AtkFunction pad3;
} AtkHypertextIface;
typedef struct _AtkStreamableContentIface {
    GTypeInterface parent;
     gint(*get_n_mime_types) (AtkStreamableContent *);
    const gchar *(*get_mime_type) (AtkStreamableContent *, gint);
    GIOChannel *(*get_stream) (AtkStreamableContent *, const gchar *);
    const gchar *(*get_uri) (AtkStreamableContent *, const gchar *);
    AtkFunction pad1;
    AtkFunction pad2;
    AtkFunction pad3;
} AtkStreamableContentIface;
typedef struct _AtkRectangle {
    gint x;
    gint y;
    gint width;
    gint height;
} AtkRectangle;
typedef struct _AtkStateSetClass {
    GObjectClass parent;
} AtkStateSetClass;
typedef struct _AtkAttribute {
    gchar *name;
    gchar *value;
} AtkAttribute;
typedef struct _AtkObjectClass {
    GObjectClass parent;
    const gchar *(*get_name) (AtkObject *);
    const gchar *(*get_description) (AtkObject *);
    AtkObject *(*get_parent) (AtkObject *);
     gint(*get_n_children) (AtkObject *);
    AtkObject *(*ref_child) (AtkObject *, gint);
     gint(*get_index_in_parent) (AtkObject *);
    AtkRelationSet *(*ref_relation_set) (AtkObject *);
     AtkRole(*get_role) (AtkObject *);
     AtkLayer(*get_layer) (AtkObject *);
     gint(*get_mdi_zorder) (AtkObject *);
    AtkStateSet *(*ref_state_set) (AtkObject *);
    void (*set_name) (AtkObject *, const gchar *);
    void (*set_description) (AtkObject *, const gchar *);
    void (*set_parent) (AtkObject *, AtkObject *);
    void (*set_role) (AtkObject *, AtkRole);
     guint(*connect_property_change_handler) (AtkObject *,
					      AtkPropertyChangeHandler *);
    void (*remove_property_change_handler) (AtkObject *, guint);
    void (*initialize) (AtkObject *, gpointer);
    void (*children_changed) (AtkObject *, guint, gpointer);
    void (*focus_event) (AtkObject *, gboolean);
    void (*property_change) (AtkObject *, AtkPropertyValues *);
    void (*state_change) (AtkObject *, const gchar *, gboolean);
    void (*visible_data_changed) (AtkObject *);
    void (*active_descendant_changed) (AtkObject *, gpointer *);
    AtkAttributeSet *(*get_attributes) (AtkObject *);
    AtkFunction pad1;
    AtkFunction pad2;
} AtkObjectClass;
typedef struct _AtkGObjectAccessibleClass {
    AtkObjectClass parent_class;
    AtkFunction pad1;
    AtkFunction pad2;
} AtkGObjectAccessibleClass;
typedef struct _AtkObjectFactoryClass {
    GObjectClass parent_class;
    AtkObject *(*create_accessible) (GObject *);
    void (*invalidate) (AtkObjectFactory *);
     GType(*get_accessible_type) (void);
    AtkFunction pad1;
    AtkFunction pad2;
} AtkObjectFactoryClass;
typedef struct _AtkNoOpObjectFactoryClass {
    AtkObjectFactoryClass parent_class;
} AtkNoOpObjectFactoryClass;
typedef struct _AtkActionIface {
    GTypeInterface parent;
     gboolean(*do_action) (AtkAction *, gint);
     gint(*get_n_actions) (AtkAction *);
    const gchar *(*get_description) (AtkAction *, gint);
    const gchar *(*get_name) (AtkAction *, gint);
    const gchar *(*get_keybinding) (AtkAction *, gint);
     gboolean(*set_description) (AtkAction *, gint, const gchar *);
    const gchar *(*get_localized_name) (AtkAction *, gint);
    AtkFunction pad2;
} AtkActionIface;
typedef struct _AtkTableIface {
    GTypeInterface parent;
    AtkObject *(*ref_at) (AtkTable *, gint, gint);
     gint(*get_index_at) (AtkTable *, gint, gint);
     gint(*get_column_at_index) (AtkTable *, gint);
     gint(*get_row_at_index) (AtkTable *, gint);
     gint(*get_n_columns) (AtkTable *);
     gint(*get_n_rows) (AtkTable *);
     gint(*get_column_extent_at) (AtkTable *, gint, gint);
     gint(*get_row_extent_at) (AtkTable *, gint, gint);
    AtkObject *(*get_caption) (AtkTable *);
    const gchar *(*get_column_description) (AtkTable *, gint);
    AtkObject *(*get_column_header) (AtkTable *, gint);
    const gchar *(*get_row_description) (AtkTable *, gint);
    AtkObject *(*get_row_header) (AtkTable *, gint);
    AtkObject *(*get_summary) (AtkTable *);
    void (*set_caption) (AtkTable *, AtkObject *);
    void (*set_column_description) (AtkTable *, gint, const gchar *);
    void (*set_column_header) (AtkTable *, gint, AtkObject *);
    void (*set_row_description) (AtkTable *, gint, const gchar *);
    void (*set_row_header) (AtkTable *, gint, AtkObject *);
    void (*set_summary) (AtkTable *, AtkObject *);
     gint(*get_selected_columns) (AtkTable *, gint * *);
     gint(*get_selected_rows) (AtkTable *, gint * *);
     gboolean(*is_column_selected) (AtkTable *, gint);
     gboolean(*is_row_selected) (AtkTable *, gint);
     gboolean(*is_selected) (AtkTable *, gint, gint);
     gboolean(*add_row_selection) (AtkTable *, gint);
     gboolean(*remove_row_selection) (AtkTable *, gint);
     gboolean(*add_column_selection) (AtkTable *, gint);
     gboolean(*remove_column_selection) (AtkTable *, gint);
    void (*row_inserted) (AtkTable *, gint, gint);
    void (*column_inserted) (AtkTable *, gint, gint);
    void (*row_deleted) (AtkTable *, gint, gint);
    void (*column_deleted) (AtkTable *, gint, gint);
    void (*row_reordered) (AtkTable *);
    void (*column_reordered) (AtkTable *);
    void (*model_changed) (AtkTable *);
    AtkFunction pad1;
    AtkFunction pad2;
    AtkFunction pad3;
    AtkFunction pad4;
} AtkTableIface;
typedef struct _AtkValueIface {
    GTypeInterface parent;
    void (*get_current_value) (AtkValue *, GValue *);
    void (*get_maximum_value) (AtkValue *, GValue *);
    void (*get_minimum_value) (AtkValue *, GValue *);
     gboolean(*set_current_value) (AtkValue *, const GValue *);
} AtkValueIface;
typedef struct _AtkRelationClass {
    GObjectClass parent;
} AtkRelationClass;
typedef struct _AtkTextIface {
    GTypeInterface parent;
    gchar *(*get_text) (AtkText *, gint, gint);
    gchar *(*get_text_after_offset) (AtkText *, gint, AtkTextBoundary,
				     gint *, gint *);
    gchar *(*get_text_at_offset) (AtkText *, gint, AtkTextBoundary, gint *,
				  gint *);
     gunichar(*get_character_at_offset) (AtkText *, gint);
    gchar *(*get_text_before_offset) (AtkText *, gint, AtkTextBoundary,
				      gint *, gint *);
     gint(*get_caret_offset) (AtkText *);
    AtkAttributeSet *(*get_run_attributes) (AtkText *, gint, gint *,
					    gint *);
    AtkAttributeSet *(*get_default_attributes) (AtkText *);
    void (*get_character_extents) (AtkText *, gint, gint *, gint *, gint *,
				   gint *, AtkCoordType);
     gint(*get_character_count) (AtkText *);
     gint(*get_offset_at_point) (AtkText *, gint, gint, AtkCoordType);
     gint(*get_n_selections) (AtkText *);
    gchar *(*get_selection) (AtkText *, gint, gint *, gint *);
     gboolean(*add_selection) (AtkText *, gint, gint);
     gboolean(*remove_selection) (AtkText *, gint);
     gboolean(*set_selection) (AtkText *, gint, gint, gint);
     gboolean(*set_caret_offset) (AtkText *, gint);
    void (*text_changed) (AtkText *, gint, gint);
    void (*text_caret_moved) (AtkText *, gint);
    void (*text_selection_changed) (AtkText *);
    void (*text_attributes_changed) (AtkText *);
    void (*get_range_extents) (AtkText *, gint, gint, AtkCoordType,
			       AtkTextRectangle *);
    AtkTextRange **(*get_bounded_ranges) (AtkText *, AtkTextRectangle *,
					  AtkCoordType, AtkTextClipType,
					  AtkTextClipType);
    AtkFunction pad4;
} AtkTextIface;
typedef struct _AtkRelationSetClass {
    GObjectClass parent;
    AtkFunction pad1;
    AtkFunction pad2;
} AtkRelationSetClass;
typedef struct _AtkSelectionIface {
    GTypeInterface parent;
     gboolean(*add_selection) (AtkSelection *, gint);
     gboolean(*clear_selection) (AtkSelection *);
    AtkObject *(*ref_selection) (AtkSelection *, gint);
     gint(*get_selection_count) (AtkSelection *);
     gboolean(*is_child_selected) (AtkSelection *, gint);
     gboolean(*remove_selection) (AtkSelection *, gint);
     gboolean(*select_all_selection) (AtkSelection *);
    void (*selection_changed) (AtkSelection *);
    AtkFunction pad1;
    AtkFunction pad2;
} AtkSelectionIface;
typedef struct _AtkUtilClass {
    GObjectClass parent;
     guint(*add_global_event_listener) (GSignalEmissionHook,
					const gchar *);
    void (*remove_global_event_listener) (guint);
     guint(*add_key_event_listener) (AtkKeySnoopFunc, gpointer);
    void (*remove_key_event_listener) (guint);
    AtkObject *(*get_root) (void);
    const gchar *(*get_toolkit_name) (void);
    const gchar *(*get_toolkit_version) (void);
} AtkUtilClass;
typedef struct _AtkNoOpObjectClass {
    AtkObjectClass parent_class;
} AtkNoOpObjectClass;
typedef struct _AtkImageIface {
    GTypeInterface parent;
    void (*get_image_position) (AtkImage *, gint *, gint *, AtkCoordType);
    const gchar *(*get_image_description) (AtkImage *, AtkImage *);
    void (*get_image_size) (AtkImage *, gint *, gint *);
     gboolean(*set_image_description) (AtkImage *, const gchar *);
    const gchar *(*get_image_locale) (AtkImage *, AtkImage *);
    AtkFunction pad1;
} AtkImageIface;
typedef struct _AtkComponentIface {
    GTypeInterface parent;
     guint(*add_focus_handler) (AtkComponent *, AtkFocusHandler);
     gboolean(*contains) (AtkComponent *, gint, gint, AtkCoordType);
    AtkObject *(*ref_accessible_at_point) (AtkComponent *, gint, gint,
					   AtkCoordType);
    void (*get_extents) (AtkComponent *, gint *, gint *, gint *, gint *,
			 AtkCoordType);
    void (*get_position) (AtkComponent *, gint *, gint *, AtkCoordType);
    void (*get_size) (AtkComponent *, gint *, gint *);
     gboolean(*grab_focus) (AtkComponent *);
    void (*remove_focus_handler) (AtkComponent *, guint);
     gboolean(*set_extents) (AtkComponent *, gint, gint, gint, gint,
			     AtkCoordType);
     gboolean(*set_position) (AtkComponent *, gint, gint, AtkCoordType);
     gboolean(*set_size) (AtkComponent *, gint, gint);
     AtkLayer(*get_layer) (AtkComponent *);
     gint(*get_mdi_zorder) (AtkComponent *);
    void (*bounds_changed) (AtkComponent *, AtkRectangle *);
     gdouble(*get_alpha) (AtkComponent *);
} AtkComponentIface;
typedef struct _AtkEditableTextIface {
    GTypeInterface parent_interface;
     gboolean(*set_run_attributes) (AtkEditableText *, AtkAttributeSet *,
				    gint, gint);
    void (*set_text_contents) (AtkEditableText *, const gchar *);
    void (*insert_text) (AtkEditableText *, const gchar *, gint, gint *);
    void (*copy_text) (AtkEditableText *, gint, gint);
    void (*cut_text) (AtkEditableText *, gint, gint);
    void (*delete_text) (AtkEditableText *, gint, gint);
    void (*paste_text) (AtkEditableText *, gint);
    AtkFunction pad1;
    AtkFunction pad2;
} AtkEditableTextIface;
typedef struct _AtkDocumentIface {
    GTypeInterface parent;
    const gchar *(*get_document_type) (AtkDocument *);
     gpointer(*get_document) (AtkDocument *);
    const gchar *(*get_document_locale) (AtkDocument *);
    AtkAttributeSet *(*get_document_attributes) (AtkDocument *);
    const gchar *(*get_document_attribute_value) (AtkDocument *,
						  const gchar *);
     gboolean(*set_document_attribute) (AtkDocument *, const gchar *,
					const gchar *);
    AtkFunction pad1;
    AtkFunction pad2;
    AtkFunction pad3;
    AtkFunction pad4;
} AtkDocumentIface;
typedef struct _AtkHyperlinkClass {
    GObjectClass parent;
    gchar *(*get_uri) (AtkHyperlink *, gint);
    AtkObject *(*get_object) (AtkHyperlink *, gint);
     gint(*get_end_index) (AtkHyperlink *);
     gint(*get_start_index) (AtkHyperlink *);
     gboolean(*is_valid) (AtkHyperlink *);
     gint(*get_n_anchors) (AtkHyperlink *);
     guint(*link_state) (AtkHyperlink *);
     gboolean(*is_selected_link) (AtkHyperlink *);
    void (*link_activated) (AtkHyperlink *);
    AtkFunction pad1;
} AtkHyperlinkClass;
typedef enum {
    ATK_KEY_EVENT_PRESS,
    ATK_KEY_EVENT_RELEASE,
    ATK_KEY_EVENT_LAST_DEFINED
} AtkKeyEventType;
typedef struct _AtkUtil {
    GObject parent;
} AtkUtil;
typedef enum {
    ATK_HYPERLINK_IS_INLINE = 1 &lt;&lt; 0
} AtkHyperlinkStateFlags;
typedef struct _AtkNoOpObjectFactory {
    AtkObjectFactory parent;
} AtkNoOpObjectFactory;
typedef struct _AtkNoOpObject {
    AtkObject parent;
} AtkNoOpObject;
typedef struct _AtkMisc {
    GObject parent;
} AtkMisc;
typedef struct _AtkMiscClass {
    GObjectClass parent;
    void (*threads_enter) (AtkMisc *);
    void (*threads_leave) (AtkMisc *);
    gpointer vfuncs[32];
} AtkMiscClass;
typedef struct _AtkHyperlinkImpl AtkHyperlinkImpl;
typedef struct _AtkHyperlinkImplIface {
    GTypeInterface parent;
    AtkHyperlink *(*get_hyperlink) (AtkHyperlinkImpl *);
    AtkFunction pad1;
} AtkHyperlinkImplIface;
extern gboolean atk_action_do_action(AtkAction * action, gint i);
extern const gchar *atk_action_get_description(AtkAction * action, gint i);
extern const gchar *atk_action_get_keybinding(AtkAction * action, gint i);
extern const gchar *atk_action_get_localized_name(AtkAction * action,
						  gint i);
extern gint atk_action_get_n_actions(AtkAction * action);
extern const gchar *atk_action_get_name(AtkAction * action, gint i);
extern GType atk_action_get_type(void);
extern gboolean atk_action_set_description(AtkAction * action, gint i,
					   const gchar * desc);
extern guint atk_add_focus_tracker(AtkEventListener focus_tracker);
extern guint atk_add_global_event_listener(GSignalEmissionHook listener,
					   const gchar * event_type);
extern guint atk_add_key_event_listener(AtkKeySnoopFunc listener,
					gpointer data);
extern void atk_attribute_set_free(AtkAttributeSet * attrib_set);
extern guint atk_component_add_focus_handler(AtkComponent * component,
					     AtkFocusHandler handler);
extern gboolean atk_component_contains(AtkComponent * component, gint x,
				       gint y, AtkCoordType coord_type);
extern gdouble atk_component_get_alpha(AtkComponent * component);
extern void atk_component_get_extents(AtkComponent * component, gint * x,
				      gint * y, gint * width,
				      gint * height,
				      AtkCoordType coord_type);
extern AtkLayer atk_component_get_layer(AtkComponent * component);
extern gint atk_component_get_mdi_zorder(AtkComponent * component);
extern void atk_component_get_position(AtkComponent * component, gint * x,
				       gint * y, AtkCoordType coord_type);
extern void atk_component_get_size(AtkComponent * component, gint * width,
				   gint * height);
extern GType atk_component_get_type(void);
extern gboolean atk_component_grab_focus(AtkComponent * component);
extern AtkObject *atk_component_ref_accessible_at_point(AtkComponent *
							component, gint x,
							gint y,
							AtkCoordType
							coord_type);
extern void atk_component_remove_focus_handler(AtkComponent * component,
					       guint handler_id);
extern gboolean atk_component_set_extents(AtkComponent * component, gint x,
					  gint y, gint width, gint height,
					  AtkCoordType coord_type);
extern gboolean atk_component_set_position(AtkComponent * component,
					   gint x, gint y,
					   AtkCoordType coord_type);
extern gboolean atk_component_set_size(AtkComponent * component,
				       gint width, gint height);
extern const char *atk_document_get_attribute_value(AtkDocument * document,
						    const char
						    *attribute_name);
extern AtkAttributeSet *atk_document_get_attributes(AtkDocument *
						    document);
extern gpointer atk_document_get_document(AtkDocument * document);
extern const gchar *atk_document_get_document_type(AtkDocument * document);
extern const char *atk_document_get_locale(AtkDocument * document);
extern GType atk_document_get_type(void);
extern gboolean atk_document_set_attribute_value(AtkDocument * document,
						 const gchar *
						 attribute_name,
						 const gchar *
						 attribute_value);
extern void atk_editable_text_copy_text(AtkEditableText * text,
					gint start_pos, gint end_pos);
extern void atk_editable_text_cut_text(AtkEditableText * text,
				       gint start_pos, gint end_pos);
extern void atk_editable_text_delete_text(AtkEditableText * text,
					  gint start_pos, gint end_pos);
extern GType atk_editable_text_get_type(void);
extern void atk_editable_text_insert_text(AtkEditableText * text,
					  const gchar * string,
					  gint length, gint * position);
extern void atk_editable_text_paste_text(AtkEditableText * text,
					 gint position);
extern gboolean atk_editable_text_set_run_attributes(AtkEditableText *
						     text,
						     AtkAttributeSet *
						     attrib_set,
						     gint start_offset,
						     gint end_offset);
extern void atk_editable_text_set_text_contents(AtkEditableText * text,
						const gchar * string);
extern void atk_focus_tracker_init(AtkEventListenerInit init);
extern void atk_focus_tracker_notify(AtkObject * object);
extern AtkRegistry *atk_get_default_registry(void);
extern AtkObject *atk_get_focus_object(void);
extern AtkObject *atk_get_root(void);
extern const gchar *atk_get_toolkit_name(void);
extern const gchar *atk_get_toolkit_version(void);
extern const char *atk_get_version(void);
extern AtkObject *atk_gobject_accessible_for_object(GObject * obj);
extern GObject *atk_gobject_accessible_get_object(AtkGObjectAccessible *
						  obj);
extern GType atk_gobject_accessible_get_type(void);
extern gint atk_hyperlink_get_end_index(AtkHyperlink * link_);
extern gint atk_hyperlink_get_n_anchors(AtkHyperlink * link_);
extern AtkObject *atk_hyperlink_get_object(AtkHyperlink * link_, gint i);
extern gint atk_hyperlink_get_start_index(AtkHyperlink * link_);
extern GType atk_hyperlink_get_type(void);
extern gchar *atk_hyperlink_get_uri(AtkHyperlink * link_, gint i);
extern AtkHyperlink *atk_hyperlink_impl_get_hyperlink(AtkHyperlinkImpl *
						      obj);
extern GType atk_hyperlink_impl_get_type(void);
extern gboolean atk_hyperlink_is_inline(AtkHyperlink * link_);
extern gboolean atk_hyperlink_is_selected_link(AtkHyperlink * link_);
extern gboolean atk_hyperlink_is_valid(AtkHyperlink * link_);
extern AtkHyperlink *atk_hypertext_get_link(AtkHypertext * hypertext,
					    gint link_index);
extern gint atk_hypertext_get_link_index(AtkHypertext * hypertext,
					 gint char_index);
extern gint atk_hypertext_get_n_links(AtkHypertext * hypertext);
extern GType atk_hypertext_get_type(void);
extern const gchar *atk_image_get_image_description(AtkImage * image);
extern const char *atk_image_get_image_locale(AtkImage * image);
extern void atk_image_get_image_position(AtkImage * image, gint * x,
					 gint * y,
					 AtkCoordType coord_type);
extern void atk_image_get_image_size(AtkImage * image, int *width,
				     int *height);
extern GType atk_image_get_type(void);
extern gboolean atk_image_set_image_description(AtkImage * image,
						const gchar * description);
extern GType atk_implementor_get_type(void);
extern AtkObject *atk_implementor_ref_accessible(AtkImplementor *
						 implementor);
extern const AtkMisc *atk_misc_get_instance(void);
extern GType atk_misc_get_type(void);
extern void atk_misc_threads_enter(AtkMisc * misc);
extern void atk_misc_threads_leave(AtkMisc * misc);
extern GType atk_no_op_object_factory_get_type(void);
extern AtkObjectFactory *atk_no_op_object_factory_new(void);
extern GType atk_no_op_object_get_type(void);
extern AtkObject *atk_no_op_object_new(GObject *);
extern gboolean atk_object_add_relationship(AtkObject * object,
					    AtkRelationType relationship,
					    AtkObject * target);
extern guint atk_object_connect_property_change_handler(AtkObject *
							accessible,
							AtkPropertyChangeHandler
							* handler);
extern AtkObject *atk_object_factory_create_accessible(AtkObjectFactory *
						       factory,
						       GObject * obj);
extern GType atk_object_factory_get_accessible_type(AtkObjectFactory *
						    factory);
extern GType atk_object_factory_get_type(void);
extern void atk_object_factory_invalidate(AtkObjectFactory * factory);
extern AtkAttributeSet *atk_object_get_attributes(AtkObject * accessible);
extern const gchar *atk_object_get_description(AtkObject * accessible);
extern gint atk_object_get_index_in_parent(AtkObject * accessible);
extern gint atk_object_get_n_accessible_children(AtkObject * accessible);
extern const gchar *atk_object_get_name(AtkObject * accessible);
extern AtkObject *atk_object_get_parent(AtkObject * accessible);
extern AtkRole atk_object_get_role(AtkObject * accessible);
extern GType atk_object_get_type(void);
extern void atk_object_initialize(AtkObject * accessible, gpointer data);
extern void atk_object_notify_state_change(AtkObject * accessible,
					   AtkState state, gboolean value);
extern AtkObject *atk_object_ref_accessible_child(AtkObject * accessible,
						  gint i);
extern AtkRelationSet *atk_object_ref_relation_set(AtkObject * accessible);
extern AtkStateSet *atk_object_ref_state_set(AtkObject * accessible);
extern void atk_object_remove_property_change_handler(AtkObject *
						      accessible,
						      guint handler_id);
extern gboolean atk_object_remove_relationship(AtkObject * object,
					       AtkRelationType
					       relationship,
					       AtkObject * target);
extern void atk_object_set_description(AtkObject * accessible,
				       const gchar * description);
extern void atk_object_set_name(AtkObject * accessible,
				const gchar * name);
extern void atk_object_set_parent(AtkObject * accessible,
				  AtkObject * parent);
extern void atk_object_set_role(AtkObject * accessible, AtkRole role);
extern GType atk_rectangle_get_type(void);
extern AtkObjectFactory *atk_registry_get_factory(AtkRegistry * registry,
						  GType type);
extern GType atk_registry_get_factory_type(AtkRegistry * registry,
					   GType type);
extern GType atk_registry_get_type(void);
extern void atk_registry_set_factory_type(AtkRegistry * registry,
					  GType type, GType factory_type);
extern void atk_relation_add_target(AtkRelation * relation,
				    AtkObject * target);
extern AtkRelationType atk_relation_get_relation_type(AtkRelation *
						      relation);
extern GPtrArray *atk_relation_get_target(AtkRelation * relation);
extern GType atk_relation_get_type(void);
extern AtkRelation *atk_relation_new(AtkObject * *targets, gint n_targets,
				     AtkRelationType relationship);
extern gboolean atk_relation_remove_target(AtkRelation * relation,
					   AtkObject * target);
extern void atk_relation_set_add(AtkRelationSet * set,
				 AtkRelation * relation);
extern void atk_relation_set_add_relation_by_type(AtkRelationSet * set,
						  AtkRelationType
						  relationship,
						  AtkObject * target);
extern gboolean atk_relation_set_contains(AtkRelationSet * set,
					  AtkRelationType relationship);
extern gint atk_relation_set_get_n_relations(AtkRelationSet * set);
extern AtkRelation *atk_relation_set_get_relation(AtkRelationSet * set,
						  gint i);
extern AtkRelation *atk_relation_set_get_relation_by_type(AtkRelationSet *
							  set,
							  AtkRelationType
							  relationship);
extern GType atk_relation_set_get_type(void);
extern AtkRelationSet *atk_relation_set_new(void);
extern void atk_relation_set_remove(AtkRelationSet * set,
				    AtkRelation * relation);
extern AtkRelationType atk_relation_type_for_name(const gchar * name);
extern const gchar *atk_relation_type_get_name(AtkRelationType type);
extern AtkRelationType atk_relation_type_register(const gchar * name);
extern void atk_remove_focus_tracker(guint tracker_id);
extern void atk_remove_global_event_listener(guint listener_id);
extern void atk_remove_key_event_listener(guint listener_id);
extern AtkRole atk_role_for_name(const gchar * name);
extern const gchar *atk_role_get_localized_name(AtkRole role);
extern const gchar *atk_role_get_name(AtkRole role);
extern AtkRole atk_role_register(const gchar * name);
extern gboolean atk_selection_add_selection(AtkSelection * selection,
					    gint i);
extern gboolean atk_selection_clear_selection(AtkSelection * selection);
extern gint atk_selection_get_selection_count(AtkSelection * selection);
extern GType atk_selection_get_type(void);
extern gboolean atk_selection_is_child_selected(AtkSelection * selection,
						gint i);
extern AtkObject *atk_selection_ref_selection(AtkSelection * selection,
					      gint i);
extern gboolean atk_selection_remove_selection(AtkSelection * selection,
					       gint i);
extern gboolean atk_selection_select_all_selection(AtkSelection *
						   selection);
extern gboolean atk_state_set_add_state(AtkStateSet * set,
					AtkStateType type);
extern void atk_state_set_add_states(AtkStateSet * set,
				     AtkStateType * types, gint n_types);
extern AtkStateSet *atk_state_set_and_sets(AtkStateSet * set,
					   AtkStateSet * compare_set);
extern void atk_state_set_clear_states(AtkStateSet * set);
extern gboolean atk_state_set_contains_state(AtkStateSet * set,
					     AtkStateType type);
extern gboolean atk_state_set_contains_states(AtkStateSet * set,
					      AtkStateType * types,
					      gint n_types);
extern GType atk_state_set_get_type(void);
extern gboolean atk_state_set_is_empty(AtkStateSet * set);
extern AtkStateSet *atk_state_set_new(void);
extern AtkStateSet *atk_state_set_or_sets(AtkStateSet * set,
					  AtkStateSet * compare_set);
extern gboolean atk_state_set_remove_state(AtkStateSet * set,
					   AtkStateType type);
extern AtkStateSet *atk_state_set_xor_sets(AtkStateSet * set,
					   AtkStateSet * compare_set);
extern AtkStateType atk_state_type_for_name(const gchar * name);
extern const gchar *atk_state_type_get_name(AtkStateType type);
extern AtkStateType atk_state_type_register(const gchar * name);
extern const gchar
    *atk_streamable_content_get_mime_type(AtkStreamableContent *
					  streamable, gint i);
extern gint atk_streamable_content_get_n_mime_types(AtkStreamableContent *
						    streamable);
extern GIOChannel *atk_streamable_content_get_stream(AtkStreamableContent *
						     streamable,
						     const gchar *
						     mime_type);
extern GType atk_streamable_content_get_type(void);
extern const char *atk_streamable_content_get_uri(AtkStreamableContent *
						  streamable,
						  const char *mime_type);
extern gboolean atk_table_add_column_selection(AtkTable * table,
					       gint column);
extern gboolean atk_table_add_row_selection(AtkTable * table, gint row);
extern AtkObject *atk_table_get_caption(AtkTable * table);
extern gint atk_table_get_column_at_index(AtkTable * table, gint index_);
extern const gchar *atk_table_get_column_description(AtkTable * table,
						     gint column);
extern gint atk_table_get_column_extent_at(AtkTable * table, gint row,
					   gint column);
extern AtkObject *atk_table_get_column_header(AtkTable * table,
					      gint column);
extern gint atk_table_get_index_at(AtkTable * table, gint row,
				   gint column);
extern gint atk_table_get_n_columns(AtkTable * table);
extern gint atk_table_get_n_rows(AtkTable * table);
extern gint atk_table_get_row_at_index(AtkTable * table, gint index_);
extern const gchar *atk_table_get_row_description(AtkTable * table,
						  gint row);
extern gint atk_table_get_row_extent_at(AtkTable * table, gint row,
					gint column);
extern AtkObject *atk_table_get_row_header(AtkTable * table, gint row);
extern gint atk_table_get_selected_columns(AtkTable * table,
					   gint * *selected);
extern gint atk_table_get_selected_rows(AtkTable * table,
					gint * *selected);
extern AtkObject *atk_table_get_summary(AtkTable * table);
extern GType atk_table_get_type(void);
extern gboolean atk_table_is_column_selected(AtkTable * table,
					     gint column);
extern gboolean atk_table_is_row_selected(AtkTable * table, gint row);
extern gboolean atk_table_is_selected(AtkTable * table, gint row,
				      gint column);
extern AtkObject *atk_table_ref_at(AtkTable * table, gint row,
				   gint column);
extern gboolean atk_table_remove_column_selection(AtkTable * table,
						  gint column);
extern gboolean atk_table_remove_row_selection(AtkTable * table, gint row);
extern void atk_table_set_caption(AtkTable * table, AtkObject * caption);
extern void atk_table_set_column_description(AtkTable * table, gint column,
					     const gchar * description);
extern void atk_table_set_column_header(AtkTable * table, gint column,
					AtkObject * header);
extern void atk_table_set_row_description(AtkTable * table, gint row,
					  const gchar * description);
extern void atk_table_set_row_header(AtkTable * table, gint row,
				     AtkObject * header);
extern void atk_table_set_summary(AtkTable * table,
				  AtkObject * accessible);
extern gboolean atk_text_add_selection(AtkText * text, gint start_offset,
				       gint end_offset);
extern AtkTextAttribute atk_text_attribute_for_name(const gchar * name);
extern const gchar *atk_text_attribute_get_name(AtkTextAttribute attr);
extern const gchar *atk_text_attribute_get_value(AtkTextAttribute attr,
						 gint index_);
extern AtkTextAttribute atk_text_attribute_register(const gchar * name);
extern void atk_text_free_ranges(AtkTextRange * *ranges);
extern AtkTextRange **atk_text_get_bounded_ranges(AtkText * text,
						  AtkTextRectangle * rect,
						  AtkCoordType coord_type,
						  AtkTextClipType
						  x_clip_type,
						  AtkTextClipType
						  y_clip_type);
extern gint atk_text_get_caret_offset(AtkText * text);
extern gunichar atk_text_get_character_at_offset(AtkText * text,
						 gint offset);
extern gint atk_text_get_character_count(AtkText * text);
extern void atk_text_get_character_extents(AtkText * text, gint offset,
					   gint * x, gint * y,
					   gint * width, gint * height,
					   AtkCoordType coords);
extern AtkAttributeSet *atk_text_get_default_attributes(AtkText * text);
extern gint atk_text_get_n_selections(AtkText * text);
extern gint atk_text_get_offset_at_point(AtkText * text, gint x, gint y,
					 AtkCoordType coords);
extern void atk_text_get_range_extents(AtkText * text, gint start_offset,
				       gint end_offset,
				       AtkCoordType coord_type,
				       AtkTextRectangle * rect);
extern AtkAttributeSet *atk_text_get_run_attributes(AtkText * text,
						    gint offset,
						    gint * start_offset,
						    gint * end_offset);
extern gchar *atk_text_get_selection(AtkText * text, gint selection_num,
				     gint * start_offset,
				     gint * end_offset);
extern gchar *atk_text_get_text(AtkText * text, gint start_offset,
				gint end_offset);
extern gchar *atk_text_get_text_after_offset(AtkText * text, gint offset,
					     AtkTextBoundary boundary_type,
					     gint * start_offset,
					     gint * end_offset);
extern gchar *atk_text_get_text_at_offset(AtkText * text, gint offset,
					  AtkTextBoundary boundary_type,
					  gint * start_offset,
					  gint * end_offset);
extern gchar *atk_text_get_text_before_offset(AtkText * text, gint offset,
					      AtkTextBoundary
					      boundary_type,
					      gint * start_offset,
					      gint * end_offset);
extern GType atk_text_get_type(void);
extern GType atk_text_range_get_type(void);
extern gboolean atk_text_remove_selection(AtkText * text,
					  gint selection_num);
extern gboolean atk_text_set_caret_offset(AtkText * text, gint offset);
extern gboolean atk_text_set_selection(AtkText * text, gint selection_num,
				       gint start_offset, gint end_offset);
extern GType atk_util_get_type(void);
extern void atk_value_get_current_value(AtkValue * obj, GValue * value);
extern void atk_value_get_maximum_value(AtkValue * obj, GValue * value);
extern void atk_value_get_minimum_increment(AtkValue * obj,
					    GValue * value);
extern void atk_value_get_minimum_value(AtkValue * obj, GValue * value);
extern GType atk_value_get_type(void);
extern gboolean atk_value_set_current_value(AtkValue * obj,
					    const GValue * value);
</SCREEN>
</SECT2>
<SECT2>
<TITLE>atk-1.0/atk/atkplug.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define ATK_TYPE_PLUG	(atk_plug_get_type ())
#define ATK_PLUG_CLASS(klass)	(G_TYPE_CHECK_CLASS_CAST ((klass), ATK_TYPE_PLUG, AtkPlugClass))
#define ATK_IS_PLUG_CLASS(klass)	(G_TYPE_CHECK_CLASS_TYPE ((klass), ATK_TYPE_PLUG))
#define ATK_PLUG(obj)	(G_TYPE_CHECK_INSTANCE_CAST ((obj), ATK_TYPE_PLUG, AtkPlug))
#define ATK_IS_PLUG(obj)	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), ATK_TYPE_PLUG))
#define ATK_PLUG_GET_CLASS(obj)	(G_TYPE_INSTANCE_GET_CLASS ((obj), ATK_TYPE_PLUG, AtkPlugClass))

typedef struct _AtkPlug {
    AtkObject parent;
} AtkPlug;
typedef struct _AtkPlugClass {
    AtkObjectClass parent_class;
    gchar *(*get_object_id) (AtkPlug * plug);
} AtkPlugClass;
extern gchar *atk_plug_get_id(AtkPlug * plug);
extern GType atk_plug_get_type(void);
extern AtkObject *atk_plug_new(void);
</SCREEN>
</SECT2>
<SECT2>
<TITLE>atk-1.0/atk/atksocket.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define ATK_TYPE_SOCKET	(atk_socket_get_type ())
#define ATK_SOCKET_CLASS(klass)	(G_TYPE_CHECK_CLASS_CAST ((klass), ATK_TYPE_SOCKET, AtkSocketClass))
#define ATK_IS_SOCKET_CLASS(klass)	(G_TYPE_CHECK_CLASS_TYPE ((klass), ATK_TYPE_SOCKET))
#define ATK_SOCKET(obj)	(G_TYPE_CHECK_INSTANCE_CAST ((obj), ATK_TYPE_SOCKET, AtkSocket))
#define ATK_IS_SOCKET(obj)	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), ATK_TYPE_SOCKET))
#define ATK_SOCKET_GET_CLASS(obj)	(G_TYPE_INSTANCE_GET_CLASS ((obj), ATK_TYPE_SOCKET, AtkSocketClass))

typedef struct _AtkSocket {
    AtkObject parent;
    gchar *embedded_plug_id;
} AtkSocket;
typedef struct _AtkSocketClass {
    AtkObjectClass parent_class;
    void (*embed) (AtkSocket * obj, gchar * plug_id);
} AtkSocketClass;
extern void atk_socket_embed(AtkSocket * obj, gchar * plug_id);
extern GType atk_socket_get_type(void);
extern gboolean atk_socket_is_occupied(AtkSocket * obj);
extern AtkObject *atk_socket_new(void);
</SCREEN>
</SECT2>
<SECT2>
<TITLE>atk-1.0/atk/atkwindow.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define ATK_TYPE_WINDOW	(atk_window_get_type ())
#define ATK_WINDOW_GET_IFACE(obj)	(G_TYPE_INSTANCE_GET_INTERFACE ((obj), ATK_TYPE_WINDOW, AtkWindowIface))
#define ATK_WINDOW(obj)	G_TYPE_CHECK_INSTANCE_CAST ((obj), ATK_TYPE_WINDOW, AtkWindow)
#define ATK_IS_WINDOW(obj)	G_TYPE_CHECK_INSTANCE_TYPE ((obj), ATK_TYPE_WINDOW)

typedef struct _AtkWindow AtkWindow;
typedef struct _AtkWindowIface {
    GTypeInterface parent;
    gpointer _padding_dummy[16];
} AtkWindowIface;
extern GType atk_window_get_type(void);
</SCREEN>
</SECT2>
</SECT1>
<SECT1 ID=libatk-1.0man>
<TITLE>Interface Definitions for libatk-1.0</TITLE>
<PARA>
The interfaces defined on the following pages are included in libatk-1.0 and are defined
by this specification.
Unless otherwise noted, these interfaces shall be included
in the source standard.
</PARA>
<PARA>
Other interfaces listed in <XREF LINKEND=libatk-1.0> shall behave as described
in the referenced base document.
</PARA>
<!-- MISSING DEFINITION FOR atk_misc_get_instance -->
<!-- Lets just hope nobody notices -->
<!-- MISSING DEFINITION FOR atk_misc_threads_enter -->
<!-- Lets just hope nobody notices -->
<!-- MISSING DEFINITION FOR atk_misc_threads_leave -->
<!-- Lets just hope nobody notices -->
</SECT1>
<!-- End of text generated from database -->

<!-- Start of generated text - do not edit! -->
<!-- generated from the LSB specification database by mklibspec -->
<SECT1 ID=libpango-1.0>
<TITLE>Interfaces for libpango-1.0</TITLE>
<PARA>
<XREF LINKEND="lib-libpango-1.0-def"> defines the library name and shared object name
for the libpango-1.0 library
</PARA>
<TABLE id="lib-libpango-1.0-def">
<TITLE>libpango-1.0 Definition</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Library:</ENTRY>
<ENTRY>libpango-1.0</ENTRY>
</ROW>
<ROW>
<ENTRY>SONAME:</ENTRY>
<ENTRY>libpango-1.0.so.0</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The behavior of the interfaces in this library is specified by the following specifications:<SIMPLELIST COLUMNS=1>
<MEMBER ID='REFSTD.libpango.1.0.1'>
[Gobject 2.32] <XREF LINKEND="std.Gobject">
</MEMBER>
<MEMBER ID='REFSTD.libpango.1.0.2'>
[Pango 1.30] <XREF LINKEND="std.Pango">
</MEMBER>
</SIMPLELIST>
</PARA>
<!-- debug: database interface name GTK Internationalized Text Layout and Rendering library -->
<SECT2>
<!--libgroup-->
<TITLE>GTK Internationalized Text Layout and Rendering library</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Interfaces for GTK Internationalized Text Layout and Rendering library</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic functions
for GTK Internationalized Text Layout and Rendering library specified in <XREF linkend="tbl-libpango-1.0-gtk-i-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<TABLE id="tbl-libpango-1.0-gtk-i-ints">
<TITLE>libpango-1.0 - GTK Internationalized Text Layout and Rendering library Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>pango_alignment_get_type</primary></indexterm>pango_alignment_get_type <LINK LINKEND="REFSTD.libpango.1.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_attr_background_new</primary></indexterm>pango_attr_background_new <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_attr_fallback_new</primary></indexterm>pango_attr_fallback_new <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_attr_family_new</primary></indexterm>pango_attr_family_new <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_attr_font_desc_new</primary></indexterm>pango_attr_font_desc_new <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_attr_foreground_new</primary></indexterm>pango_attr_foreground_new <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_attr_gravity_hint_new</primary></indexterm>pango_attr_gravity_hint_new <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_attr_gravity_new</primary></indexterm>pango_attr_gravity_new <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_attr_iterator_copy</primary></indexterm>pango_attr_iterator_copy <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_attr_iterator_destroy</primary></indexterm>pango_attr_iterator_destroy <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_attr_iterator_get</primary></indexterm>pango_attr_iterator_get <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_attr_iterator_get_attrs</primary></indexterm>pango_attr_iterator_get_attrs <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_attr_iterator_get_font</primary></indexterm>pango_attr_iterator_get_font <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_attr_iterator_next</primary></indexterm>pango_attr_iterator_next <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_attr_iterator_range</primary></indexterm>pango_attr_iterator_range <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_attr_language_new</primary></indexterm>pango_attr_language_new <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_attr_letter_spacing_new</primary></indexterm>pango_attr_letter_spacing_new <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_attr_list_change</primary></indexterm>pango_attr_list_change <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_attr_list_copy</primary></indexterm>pango_attr_list_copy <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_attr_list_filter</primary></indexterm>pango_attr_list_filter <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_attr_list_get_iterator</primary></indexterm>pango_attr_list_get_iterator <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_attr_list_get_type</primary></indexterm>pango_attr_list_get_type <LINK LINKEND="REFSTD.libpango.1.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_attr_list_insert</primary></indexterm>pango_attr_list_insert <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_attr_list_insert_before</primary></indexterm>pango_attr_list_insert_before <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_attr_list_new</primary></indexterm>pango_attr_list_new <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_attr_list_ref</primary></indexterm>pango_attr_list_ref <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_attr_list_splice</primary></indexterm>pango_attr_list_splice <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_attr_list_unref</primary></indexterm>pango_attr_list_unref <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_attr_rise_new</primary></indexterm>pango_attr_rise_new <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_attr_scale_new</primary></indexterm>pango_attr_scale_new <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_attr_shape_new</primary></indexterm>pango_attr_shape_new <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_attr_shape_new_with_data</primary></indexterm>pango_attr_shape_new_with_data <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_attr_size_new</primary></indexterm>pango_attr_size_new <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_attr_size_new_absolute</primary></indexterm>pango_attr_size_new_absolute <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_attr_stretch_new</primary></indexterm>pango_attr_stretch_new <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_attr_strikethrough_color_new</primary></indexterm>pango_attr_strikethrough_color_new <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_attr_strikethrough_new</primary></indexterm>pango_attr_strikethrough_new <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_attr_style_new</primary></indexterm>pango_attr_style_new <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_attr_type_get_name</primary></indexterm>pango_attr_type_get_name <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_attr_type_get_type</primary></indexterm>pango_attr_type_get_type <LINK LINKEND="REFSTD.libpango.1.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_attr_type_register</primary></indexterm>pango_attr_type_register <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_attr_underline_color_new</primary></indexterm>pango_attr_underline_color_new <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_attr_underline_new</primary></indexterm>pango_attr_underline_new <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_attr_variant_new</primary></indexterm>pango_attr_variant_new <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_attr_weight_new</primary></indexterm>pango_attr_weight_new <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_attribute_copy</primary></indexterm>pango_attribute_copy <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_attribute_destroy</primary></indexterm>pango_attribute_destroy <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_attribute_equal</primary></indexterm>pango_attribute_equal <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_attribute_init</primary></indexterm>pango_attribute_init <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_bidi_type_for_unichar</primary></indexterm>pango_bidi_type_for_unichar <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_bidi_type_get_type</primary></indexterm>pango_bidi_type_get_type <LINK LINKEND="REFSTD.libpango.1.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_break</primary></indexterm>pango_break <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_color_copy</primary></indexterm>pango_color_copy <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_color_free</primary></indexterm>pango_color_free <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_color_get_type</primary></indexterm>pango_color_get_type <LINK LINKEND="REFSTD.libpango.1.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_color_parse</primary></indexterm>pango_color_parse <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_color_to_string</primary></indexterm>pango_color_to_string <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_context_get_base_dir</primary></indexterm>pango_context_get_base_dir <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_context_get_base_gravity</primary></indexterm>pango_context_get_base_gravity <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_context_get_font_description</primary></indexterm>pango_context_get_font_description <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_context_get_font_map</primary></indexterm>pango_context_get_font_map <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_context_get_gravity</primary></indexterm>pango_context_get_gravity <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_context_get_gravity_hint</primary></indexterm>pango_context_get_gravity_hint <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_context_get_language</primary></indexterm>pango_context_get_language <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_context_get_matrix</primary></indexterm>pango_context_get_matrix <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_context_get_metrics</primary></indexterm>pango_context_get_metrics <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_context_get_type</primary></indexterm>pango_context_get_type <LINK LINKEND="REFSTD.libpango.1.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_context_list_families</primary></indexterm>pango_context_list_families <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_context_load_font</primary></indexterm>pango_context_load_font <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_context_load_fontset</primary></indexterm>pango_context_load_fontset <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_context_new</primary></indexterm>pango_context_new <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_context_set_base_dir</primary></indexterm>pango_context_set_base_dir <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_context_set_base_gravity</primary></indexterm>pango_context_set_base_gravity <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_context_set_font_description</primary></indexterm>pango_context_set_font_description <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_context_set_font_map</primary></indexterm>pango_context_set_font_map <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_context_set_gravity_hint</primary></indexterm>pango_context_set_gravity_hint <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_context_set_language</primary></indexterm>pango_context_set_language <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_context_set_matrix</primary></indexterm>pango_context_set_matrix <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_coverage_copy</primary></indexterm>pango_coverage_copy <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_coverage_from_bytes</primary></indexterm>pango_coverage_from_bytes <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_coverage_get</primary></indexterm>pango_coverage_get <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_coverage_level_get_type</primary></indexterm>pango_coverage_level_get_type <LINK LINKEND="REFSTD.libpango.1.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_coverage_max</primary></indexterm>pango_coverage_max <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_coverage_new</primary></indexterm>pango_coverage_new <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_coverage_ref</primary></indexterm>pango_coverage_ref <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_coverage_set</primary></indexterm>pango_coverage_set <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_coverage_to_bytes</primary></indexterm>pango_coverage_to_bytes <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_coverage_unref</primary></indexterm>pango_coverage_unref <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_direction_get_type</primary></indexterm>pango_direction_get_type <LINK LINKEND="REFSTD.libpango.1.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_ellipsize_mode_get_type</primary></indexterm>pango_ellipsize_mode_get_type <LINK LINKEND="REFSTD.libpango.1.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_extents_to_pixels</primary></indexterm>pango_extents_to_pixels <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_find_base_dir</primary></indexterm>pango_find_base_dir <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_find_paragraph_boundary</primary></indexterm>pango_find_paragraph_boundary <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_font_describe</primary></indexterm>pango_font_describe <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_font_describe_with_absolute_size</primary></indexterm>pango_font_describe_with_absolute_size <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_font_description_better_match</primary></indexterm>pango_font_description_better_match <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_font_description_copy</primary></indexterm>pango_font_description_copy <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_font_description_copy_static</primary></indexterm>pango_font_description_copy_static <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_font_description_equal</primary></indexterm>pango_font_description_equal <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_font_description_free</primary></indexterm>pango_font_description_free <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_font_description_from_string</primary></indexterm>pango_font_description_from_string <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_font_description_get_family</primary></indexterm>pango_font_description_get_family <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_font_description_get_gravity</primary></indexterm>pango_font_description_get_gravity <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_font_description_get_set_fields</primary></indexterm>pango_font_description_get_set_fields <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_font_description_get_size</primary></indexterm>pango_font_description_get_size <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_font_description_get_size_is_absolute</primary></indexterm>pango_font_description_get_size_is_absolute <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_font_description_get_stretch</primary></indexterm>pango_font_description_get_stretch <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_font_description_get_style</primary></indexterm>pango_font_description_get_style <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_font_description_get_type</primary></indexterm>pango_font_description_get_type <LINK LINKEND="REFSTD.libpango.1.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_font_description_get_variant</primary></indexterm>pango_font_description_get_variant <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_font_description_get_weight</primary></indexterm>pango_font_description_get_weight <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_font_description_hash</primary></indexterm>pango_font_description_hash <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_font_description_merge</primary></indexterm>pango_font_description_merge <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_font_description_merge_static</primary></indexterm>pango_font_description_merge_static <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_font_description_new</primary></indexterm>pango_font_description_new <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_font_description_set_absolute_size</primary></indexterm>pango_font_description_set_absolute_size <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_font_description_set_family</primary></indexterm>pango_font_description_set_family <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_font_description_set_family_static</primary></indexterm>pango_font_description_set_family_static <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_font_description_set_gravity</primary></indexterm>pango_font_description_set_gravity <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_font_description_set_size</primary></indexterm>pango_font_description_set_size <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_font_description_set_stretch</primary></indexterm>pango_font_description_set_stretch <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_font_description_set_style</primary></indexterm>pango_font_description_set_style <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_font_description_set_variant</primary></indexterm>pango_font_description_set_variant <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_font_description_set_weight</primary></indexterm>pango_font_description_set_weight <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_font_description_to_filename</primary></indexterm>pango_font_description_to_filename <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_font_description_to_string</primary></indexterm>pango_font_description_to_string <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_font_description_unset_fields</primary></indexterm>pango_font_description_unset_fields <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_font_descriptions_free</primary></indexterm>pango_font_descriptions_free <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_font_face_describe</primary></indexterm>pango_font_face_describe <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_font_face_get_face_name</primary></indexterm>pango_font_face_get_face_name <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_font_face_get_type</primary></indexterm>pango_font_face_get_type <LINK LINKEND="REFSTD.libpango.1.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_font_face_is_synthesized</primary></indexterm>pango_font_face_is_synthesized <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_font_face_list_sizes</primary></indexterm>pango_font_face_list_sizes <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_font_family_get_name</primary></indexterm>pango_font_family_get_name <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_font_family_get_type</primary></indexterm>pango_font_family_get_type <LINK LINKEND="REFSTD.libpango.1.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_font_family_is_monospace</primary></indexterm>pango_font_family_is_monospace <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_font_family_list_faces</primary></indexterm>pango_font_family_list_faces <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_font_find_shaper</primary></indexterm>pango_font_find_shaper <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_font_get_coverage</primary></indexterm>pango_font_get_coverage <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_font_get_font_map</primary></indexterm>pango_font_get_font_map <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_font_get_glyph_extents</primary></indexterm>pango_font_get_glyph_extents <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_font_get_metrics</primary></indexterm>pango_font_get_metrics <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_font_get_type</primary></indexterm>pango_font_get_type <LINK LINKEND="REFSTD.libpango.1.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_font_map_create_context</primary></indexterm>pango_font_map_create_context <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_font_map_get_type</primary></indexterm>pango_font_map_get_type <LINK LINKEND="REFSTD.libpango.1.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_font_map_list_families</primary></indexterm>pango_font_map_list_families <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_font_map_load_font</primary></indexterm>pango_font_map_load_font <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_font_map_load_fontset</primary></indexterm>pango_font_map_load_fontset <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_font_mask_get_type</primary></indexterm>pango_font_mask_get_type <LINK LINKEND="REFSTD.libpango.1.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_font_metrics_get_approximate_char_width</primary></indexterm>pango_font_metrics_get_approximate_char_width <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_font_metrics_get_approximate_digit_width</primary></indexterm>pango_font_metrics_get_approximate_digit_width <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_font_metrics_get_ascent</primary></indexterm>pango_font_metrics_get_ascent <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_font_metrics_get_descent</primary></indexterm>pango_font_metrics_get_descent <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_font_metrics_get_strikethrough_position</primary></indexterm>pango_font_metrics_get_strikethrough_position <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_font_metrics_get_strikethrough_thickness</primary></indexterm>pango_font_metrics_get_strikethrough_thickness <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_font_metrics_get_type</primary></indexterm>pango_font_metrics_get_type <LINK LINKEND="REFSTD.libpango.1.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_font_metrics_get_underline_position</primary></indexterm>pango_font_metrics_get_underline_position <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_font_metrics_get_underline_thickness</primary></indexterm>pango_font_metrics_get_underline_thickness <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_font_metrics_ref</primary></indexterm>pango_font_metrics_ref <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_font_metrics_unref</primary></indexterm>pango_font_metrics_unref <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_fontset_foreach</primary></indexterm>pango_fontset_foreach <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_fontset_get_font</primary></indexterm>pango_fontset_get_font <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_fontset_get_metrics</primary></indexterm>pango_fontset_get_metrics <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_fontset_get_type</primary></indexterm>pango_fontset_get_type <LINK LINKEND="REFSTD.libpango.1.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_get_log_attrs</primary></indexterm>pango_get_log_attrs <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_glyph_item_apply_attrs</primary></indexterm>pango_glyph_item_apply_attrs <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_glyph_item_copy</primary></indexterm>pango_glyph_item_copy <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_glyph_item_free</primary></indexterm>pango_glyph_item_free <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_glyph_item_get_logical_widths</primary></indexterm>pango_glyph_item_get_logical_widths <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_glyph_item_get_type</primary></indexterm>pango_glyph_item_get_type <LINK LINKEND="REFSTD.libpango.1.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_glyph_item_iter_copy</primary></indexterm>pango_glyph_item_iter_copy <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_glyph_item_iter_free</primary></indexterm>pango_glyph_item_iter_free <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_glyph_item_iter_get_type</primary></indexterm>pango_glyph_item_iter_get_type <LINK LINKEND="REFSTD.libpango.1.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_glyph_item_iter_init_end</primary></indexterm>pango_glyph_item_iter_init_end <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_glyph_item_iter_init_start</primary></indexterm>pango_glyph_item_iter_init_start <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_glyph_item_iter_next_cluster</primary></indexterm>pango_glyph_item_iter_next_cluster <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_glyph_item_iter_prev_cluster</primary></indexterm>pango_glyph_item_iter_prev_cluster <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_glyph_item_letter_space</primary></indexterm>pango_glyph_item_letter_space <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_glyph_item_split</primary></indexterm>pango_glyph_item_split <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_glyph_string_copy</primary></indexterm>pango_glyph_string_copy <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_glyph_string_extents</primary></indexterm>pango_glyph_string_extents <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_glyph_string_extents_range</primary></indexterm>pango_glyph_string_extents_range <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_glyph_string_free</primary></indexterm>pango_glyph_string_free <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_glyph_string_get_logical_widths</primary></indexterm>pango_glyph_string_get_logical_widths <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_glyph_string_get_type</primary></indexterm>pango_glyph_string_get_type <LINK LINKEND="REFSTD.libpango.1.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_glyph_string_get_width</primary></indexterm>pango_glyph_string_get_width <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_glyph_string_index_to_x</primary></indexterm>pango_glyph_string_index_to_x <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_glyph_string_new</primary></indexterm>pango_glyph_string_new <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_glyph_string_set_size</primary></indexterm>pango_glyph_string_set_size <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_glyph_string_x_to_index</primary></indexterm>pango_glyph_string_x_to_index <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_gravity_get_for_matrix</primary></indexterm>pango_gravity_get_for_matrix <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_gravity_get_for_script</primary></indexterm>pango_gravity_get_for_script <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_gravity_get_for_script_and_width</primary></indexterm>pango_gravity_get_for_script_and_width <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_gravity_get_type</primary></indexterm>pango_gravity_get_type <LINK LINKEND="REFSTD.libpango.1.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_gravity_hint_get_type</primary></indexterm>pango_gravity_hint_get_type <LINK LINKEND="REFSTD.libpango.1.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_gravity_to_rotation</primary></indexterm>pango_gravity_to_rotation <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_is_zero_width</primary></indexterm>pango_is_zero_width <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_item_copy</primary></indexterm>pango_item_copy <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_item_free</primary></indexterm>pango_item_free <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_item_get_type</primary></indexterm>pango_item_get_type <LINK LINKEND="REFSTD.libpango.1.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_item_new</primary></indexterm>pango_item_new <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_item_split</primary></indexterm>pango_item_split <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_itemize</primary></indexterm>pango_itemize <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_itemize_with_base_dir</primary></indexterm>pango_itemize_with_base_dir <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_language_from_string</primary></indexterm>pango_language_from_string <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_language_get_default</primary></indexterm>pango_language_get_default <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_language_get_sample_string</primary></indexterm>pango_language_get_sample_string <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_language_get_scripts</primary></indexterm>pango_language_get_scripts <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_language_get_type</primary></indexterm>pango_language_get_type <LINK LINKEND="REFSTD.libpango.1.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_language_includes_script</primary></indexterm>pango_language_includes_script <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_language_matches</primary></indexterm>pango_language_matches <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_language_to_string</primary></indexterm>pango_language_to_string <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_layout_context_changed</primary></indexterm>pango_layout_context_changed <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_layout_copy</primary></indexterm>pango_layout_copy <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_layout_get_alignment</primary></indexterm>pango_layout_get_alignment <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_layout_get_attributes</primary></indexterm>pango_layout_get_attributes <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_layout_get_auto_dir</primary></indexterm>pango_layout_get_auto_dir <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_layout_get_baseline</primary></indexterm>pango_layout_get_baseline <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_layout_get_character_count</primary></indexterm>pango_layout_get_character_count <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_layout_get_context</primary></indexterm>pango_layout_get_context <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_layout_get_cursor_pos</primary></indexterm>pango_layout_get_cursor_pos <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_layout_get_ellipsize</primary></indexterm>pango_layout_get_ellipsize <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_layout_get_extents</primary></indexterm>pango_layout_get_extents <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_layout_get_font_description</primary></indexterm>pango_layout_get_font_description <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_layout_get_height</primary></indexterm>pango_layout_get_height <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_layout_get_indent</primary></indexterm>pango_layout_get_indent <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_layout_get_iter</primary></indexterm>pango_layout_get_iter <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_layout_get_justify</primary></indexterm>pango_layout_get_justify <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_layout_get_line</primary></indexterm>pango_layout_get_line <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_layout_get_line_count</primary></indexterm>pango_layout_get_line_count <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_layout_get_line_readonly</primary></indexterm>pango_layout_get_line_readonly <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_layout_get_lines</primary></indexterm>pango_layout_get_lines <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_layout_get_lines_readonly</primary></indexterm>pango_layout_get_lines_readonly <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_layout_get_log_attrs</primary></indexterm>pango_layout_get_log_attrs <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_layout_get_log_attrs_readonly</primary></indexterm>pango_layout_get_log_attrs_readonly <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_layout_get_pixel_extents</primary></indexterm>pango_layout_get_pixel_extents <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_layout_get_pixel_size</primary></indexterm>pango_layout_get_pixel_size <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_layout_get_single_paragraph_mode</primary></indexterm>pango_layout_get_single_paragraph_mode <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_layout_get_size</primary></indexterm>pango_layout_get_size <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_layout_get_spacing</primary></indexterm>pango_layout_get_spacing <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_layout_get_tabs</primary></indexterm>pango_layout_get_tabs <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_layout_get_text</primary></indexterm>pango_layout_get_text <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_layout_get_type</primary></indexterm>pango_layout_get_type <LINK LINKEND="REFSTD.libpango.1.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_layout_get_unknown_glyphs_count</primary></indexterm>pango_layout_get_unknown_glyphs_count <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_layout_get_width</primary></indexterm>pango_layout_get_width <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_layout_get_wrap</primary></indexterm>pango_layout_get_wrap <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_layout_index_to_line_x</primary></indexterm>pango_layout_index_to_line_x <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_layout_index_to_pos</primary></indexterm>pango_layout_index_to_pos <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_layout_is_ellipsized</primary></indexterm>pango_layout_is_ellipsized <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_layout_is_wrapped</primary></indexterm>pango_layout_is_wrapped <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_layout_iter_at_last_line</primary></indexterm>pango_layout_iter_at_last_line <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_layout_iter_copy</primary></indexterm>pango_layout_iter_copy <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_layout_iter_free</primary></indexterm>pango_layout_iter_free <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_layout_iter_get_baseline</primary></indexterm>pango_layout_iter_get_baseline <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_layout_iter_get_char_extents</primary></indexterm>pango_layout_iter_get_char_extents <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_layout_iter_get_cluster_extents</primary></indexterm>pango_layout_iter_get_cluster_extents <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_layout_iter_get_index</primary></indexterm>pango_layout_iter_get_index <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_layout_iter_get_layout</primary></indexterm>pango_layout_iter_get_layout <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_layout_iter_get_layout_extents</primary></indexterm>pango_layout_iter_get_layout_extents <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_layout_iter_get_line</primary></indexterm>pango_layout_iter_get_line <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_layout_iter_get_line_extents</primary></indexterm>pango_layout_iter_get_line_extents <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_layout_iter_get_line_readonly</primary></indexterm>pango_layout_iter_get_line_readonly <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_layout_iter_get_line_yrange</primary></indexterm>pango_layout_iter_get_line_yrange <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_layout_iter_get_run</primary></indexterm>pango_layout_iter_get_run <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_layout_iter_get_run_extents</primary></indexterm>pango_layout_iter_get_run_extents <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_layout_iter_get_run_readonly</primary></indexterm>pango_layout_iter_get_run_readonly <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_layout_iter_get_type</primary></indexterm>pango_layout_iter_get_type <LINK LINKEND="REFSTD.libpango.1.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_layout_iter_next_char</primary></indexterm>pango_layout_iter_next_char <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_layout_iter_next_cluster</primary></indexterm>pango_layout_iter_next_cluster <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_layout_iter_next_line</primary></indexterm>pango_layout_iter_next_line <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_layout_iter_next_run</primary></indexterm>pango_layout_iter_next_run <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_layout_line_get_extents</primary></indexterm>pango_layout_line_get_extents <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_layout_line_get_pixel_extents</primary></indexterm>pango_layout_line_get_pixel_extents <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_layout_line_get_type</primary></indexterm>pango_layout_line_get_type <LINK LINKEND="REFSTD.libpango.1.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_layout_line_get_x_ranges</primary></indexterm>pango_layout_line_get_x_ranges <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_layout_line_index_to_x</primary></indexterm>pango_layout_line_index_to_x <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_layout_line_ref</primary></indexterm>pango_layout_line_ref <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_layout_line_unref</primary></indexterm>pango_layout_line_unref <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_layout_line_x_to_index</primary></indexterm>pango_layout_line_x_to_index <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_layout_move_cursor_visually</primary></indexterm>pango_layout_move_cursor_visually <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_layout_new</primary></indexterm>pango_layout_new <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_layout_set_alignment</primary></indexterm>pango_layout_set_alignment <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_layout_set_attributes</primary></indexterm>pango_layout_set_attributes <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_layout_set_auto_dir</primary></indexterm>pango_layout_set_auto_dir <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_layout_set_ellipsize</primary></indexterm>pango_layout_set_ellipsize <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_layout_set_font_description</primary></indexterm>pango_layout_set_font_description <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_layout_set_height</primary></indexterm>pango_layout_set_height <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_layout_set_indent</primary></indexterm>pango_layout_set_indent <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_layout_set_justify</primary></indexterm>pango_layout_set_justify <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_layout_set_markup</primary></indexterm>pango_layout_set_markup <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_layout_set_markup_with_accel</primary></indexterm>pango_layout_set_markup_with_accel <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_layout_set_single_paragraph_mode</primary></indexterm>pango_layout_set_single_paragraph_mode <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_layout_set_spacing</primary></indexterm>pango_layout_set_spacing <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_layout_set_tabs</primary></indexterm>pango_layout_set_tabs <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_layout_set_text</primary></indexterm>pango_layout_set_text <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_layout_set_width</primary></indexterm>pango_layout_set_width <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_layout_set_wrap</primary></indexterm>pango_layout_set_wrap <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_layout_xy_to_index</primary></indexterm>pango_layout_xy_to_index <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_log2vis_get_embedding_levels</primary></indexterm>pango_log2vis_get_embedding_levels <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_matrix_concat</primary></indexterm>pango_matrix_concat <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_matrix_copy</primary></indexterm>pango_matrix_copy <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_matrix_free</primary></indexterm>pango_matrix_free <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_matrix_get_font_scale_factor</primary></indexterm>pango_matrix_get_font_scale_factor <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_matrix_get_type</primary></indexterm>pango_matrix_get_type <LINK LINKEND="REFSTD.libpango.1.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_matrix_rotate</primary></indexterm>pango_matrix_rotate <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_matrix_scale</primary></indexterm>pango_matrix_scale <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_matrix_transform_distance</primary></indexterm>pango_matrix_transform_distance <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_matrix_transform_pixel_rectangle</primary></indexterm>pango_matrix_transform_pixel_rectangle <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_matrix_transform_point</primary></indexterm>pango_matrix_transform_point <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_matrix_transform_rectangle</primary></indexterm>pango_matrix_transform_rectangle <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_matrix_translate</primary></indexterm>pango_matrix_translate <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_parse_enum</primary></indexterm>pango_parse_enum <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_parse_markup</primary></indexterm>pango_parse_markup <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_parse_stretch</primary></indexterm>pango_parse_stretch <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_parse_style</primary></indexterm>pango_parse_style <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_parse_variant</primary></indexterm>pango_parse_variant <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_parse_weight</primary></indexterm>pango_parse_weight <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_quantize_line_geometry</primary></indexterm>pango_quantize_line_geometry <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_read_line</primary></indexterm>pango_read_line <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_render_part_get_type</primary></indexterm>pango_render_part_get_type <LINK LINKEND="REFSTD.libpango.1.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_renderer_activate</primary></indexterm>pango_renderer_activate <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_renderer_deactivate</primary></indexterm>pango_renderer_deactivate <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_renderer_draw_error_underline</primary></indexterm>pango_renderer_draw_error_underline <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_renderer_draw_glyph</primary></indexterm>pango_renderer_draw_glyph <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_renderer_draw_glyph_item</primary></indexterm>pango_renderer_draw_glyph_item <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_renderer_draw_glyphs</primary></indexterm>pango_renderer_draw_glyphs <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_renderer_draw_layout</primary></indexterm>pango_renderer_draw_layout <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_renderer_draw_layout_line</primary></indexterm>pango_renderer_draw_layout_line <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_renderer_draw_rectangle</primary></indexterm>pango_renderer_draw_rectangle <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_renderer_draw_trapezoid</primary></indexterm>pango_renderer_draw_trapezoid <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_renderer_get_color</primary></indexterm>pango_renderer_get_color <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_renderer_get_layout</primary></indexterm>pango_renderer_get_layout <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_renderer_get_layout_line</primary></indexterm>pango_renderer_get_layout_line <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_renderer_get_matrix</primary></indexterm>pango_renderer_get_matrix <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_renderer_get_type</primary></indexterm>pango_renderer_get_type <LINK LINKEND="REFSTD.libpango.1.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_renderer_part_changed</primary></indexterm>pango_renderer_part_changed <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_renderer_set_color</primary></indexterm>pango_renderer_set_color <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_renderer_set_matrix</primary></indexterm>pango_renderer_set_matrix <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_reorder_items</primary></indexterm>pango_reorder_items <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_scan_int</primary></indexterm>pango_scan_int <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_scan_string</primary></indexterm>pango_scan_string <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_scan_word</primary></indexterm>pango_scan_word <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_script_for_unichar</primary></indexterm>pango_script_for_unichar <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_script_get_sample_language</primary></indexterm>pango_script_get_sample_language <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_script_get_type</primary></indexterm>pango_script_get_type <LINK LINKEND="REFSTD.libpango.1.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_script_iter_free</primary></indexterm>pango_script_iter_free <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_script_iter_get_range</primary></indexterm>pango_script_iter_get_range <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_script_iter_new</primary></indexterm>pango_script_iter_new <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_script_iter_next</primary></indexterm>pango_script_iter_next <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_shape</primary></indexterm>pango_shape <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_skip_space</primary></indexterm>pango_skip_space <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_split_file_list</primary></indexterm>pango_split_file_list <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_stretch_get_type</primary></indexterm>pango_stretch_get_type <LINK LINKEND="REFSTD.libpango.1.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_style_get_type</primary></indexterm>pango_style_get_type <LINK LINKEND="REFSTD.libpango.1.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_tab_align_get_type</primary></indexterm>pango_tab_align_get_type <LINK LINKEND="REFSTD.libpango.1.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_tab_array_copy</primary></indexterm>pango_tab_array_copy <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_tab_array_free</primary></indexterm>pango_tab_array_free <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_tab_array_get_positions_in_pixels</primary></indexterm>pango_tab_array_get_positions_in_pixels <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_tab_array_get_size</primary></indexterm>pango_tab_array_get_size <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_tab_array_get_tab</primary></indexterm>pango_tab_array_get_tab <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_tab_array_get_tabs</primary></indexterm>pango_tab_array_get_tabs <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_tab_array_get_type</primary></indexterm>pango_tab_array_get_type <LINK LINKEND="REFSTD.libpango.1.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_tab_array_new</primary></indexterm>pango_tab_array_new <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_tab_array_new_with_positions</primary></indexterm>pango_tab_array_new_with_positions <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_tab_array_resize</primary></indexterm>pango_tab_array_resize <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_tab_array_set_tab</primary></indexterm>pango_tab_array_set_tab <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_trim_string</primary></indexterm>pango_trim_string <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_underline_get_type</primary></indexterm>pango_underline_get_type <LINK LINKEND="REFSTD.libpango.1.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_unichar_direction</primary></indexterm>pango_unichar_direction <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_units_from_double</primary></indexterm>pango_units_from_double <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_units_to_double</primary></indexterm>pango_units_to_double <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_variant_get_type</primary></indexterm>pango_variant_get_type <LINK LINKEND="REFSTD.libpango.1.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_version</primary></indexterm>pango_version <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_version_check</primary></indexterm>pango_version_check <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_version_string</primary></indexterm>pango_version_string <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.30]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_weight_get_type</primary></indexterm>pango_weight_get_type <LINK LINKEND="REFSTD.libpango.1.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_wrap_mode_get_type</primary></indexterm>pango_wrap_mode_get_type <LINK LINKEND="REFSTD.libpango.1.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>
</SECT2>
</SECT1>
<SECT1 ID=libpango-1.0-ddefs>
<TITLE>Data Definitions for libpango-1.0</TITLE>
<PARA>
This section defines global identifiers and their values that are associated
with interfaces contained in libpango-1.0.
These definitions are organized into groups that
correspond to system headers. This convention is used as a
convenience for the reader, and does not imply the existence
of these headers, or their content.
Where an interface is defined as requiring a particular system header file
all of the data definitions for that system header file presented here shall be in effect.
</PARA>
<PARA>
This section gives data definitions to promote binary application
portability, not to repeat source interface definitions available
elsewhere. System providers and application developers should use this ABI
to supplement - not to replace - source interface definition specifications.
</PARA>
<PARA>
This specification uses the <XREF LINKEND='std.ISOC99'> C Language as the reference programming language, and data definitions are specified in ISO C format. The C language is used here as a convenient notation. Using a C language description of these data objects does not preclude their use by other programming languages.</PARA>
<SECT2>
<TITLE>pango-1.0/pango/pango-bidi-type.h</TITLE>
<PARA>
</PARA>
<SCREEN>

typedef enum {
    PANGO_BIDI_TYPE_L,
    PANGO_BIDI_TYPE_LRE,
    PANGO_BIDI_TYPE_LRO,
    PANGO_BIDI_TYPE_R,
    PANGO_BIDI_TYPE_AL,
    PANGO_BIDI_TYPE_RLE,
    PANGO_BIDI_TYPE_RLO,
    PANGO_BIDI_TYPE_PDF,
    PANGO_BIDI_TYPE_EN,
    PANGO_BIDI_TYPE_ES,
    PANGO_BIDI_TYPE_ET,
    PANGO_BIDI_TYPE_AN,
    PANGO_BIDI_TYPE_CS,
    PANGO_BIDI_TYPE_NSM,
    PANGO_BIDI_TYPE_BN,
    PANGO_BIDI_TYPE_B,
    PANGO_BIDI_TYPE_S,
    PANGO_BIDI_TYPE_WS,
    PANGO_BIDI_TYPE_ON
} PangoBidiType;
extern PangoBidiType pango_bidi_type_for_unichar(gunichar ch);
</SCREEN>
</SECT2>
<SECT2>
<TITLE>pango-1.0/pango/pango-utils.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define PANGO_VERSION_ENCODE(major,minor,micro)	( ((major) * 10000) + ((minor) * 100) + ((micro) * 1))
#define PANGO_VERSION_CHECK(major,minor,micro)	(PANGO_VERSION >= PANGO_VERSION_ENCODE(major,minor,micro))
#define PANGO_VERSION	PANGO_VERSION_ENCODE( PANGO_VERSION_MAJOR, PANGO_VERSION_MINOR, PANGO_VERSION_MICRO)

extern gboolean pango_is_zero_width(gunichar ch);
extern const char *pango_language_get_sample_string(PangoLanguage *
						    language);
extern guint8 *pango_log2vis_get_embedding_levels(const gchar * text,
						  int length,
						  PangoDirection *
						  pbase_dir);
extern gboolean pango_parse_enum(GType type, const char *str, int *value,
				 gboolean warn, char **possible_values);
extern gboolean pango_parse_stretch(const char *str,
				    PangoStretch * stretch, gboolean warn);
extern gboolean pango_parse_style(const char *str, PangoStyle * style,
				  gboolean warn);
extern gboolean pango_parse_variant(const char *str,
				    PangoVariant * variant, gboolean warn);
extern gboolean pango_parse_weight(const char *str, PangoWeight * weight,
				   gboolean warn);
extern void pango_quantize_line_geometry(int *thickness, int *position);
extern gint pango_read_line(FILE * stream, GString * str);
extern gboolean pango_scan_int(const char **pos, int *out);
extern gboolean pango_scan_string(const char **pos, GString * out);
extern gboolean pango_scan_word(const char **pos, GString * out);
extern gboolean pango_skip_space(const char **pos);
extern char **pango_split_file_list(const char *str);
extern char *pango_trim_string(const char *str);
extern int pango_version(void);
extern const char *pango_version_check(int required_major,
				       int required_minor,
				       int required_micro);
extern const char *pango_version_string(void);
</SCREEN>
</SECT2>
<SECT2>
<TITLE>pango-1.0/pango/pango.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define PANGO_CONTEXT_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), PANGO_TYPE_CONTEXT, \
	PangoContextClass))
#define PANGO_LAYOUT_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), PANGO_TYPE_LAYOUT, \
	PangoLayoutClass))
#define PANGO_RENDERER_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), PANGO_TYPE_RENDERER, \
	PangoRendererClass))
#define PANGO_IS_CONTEXT_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), PANGO_TYPE_CONTEXT))
#define PANGO_IS_LAYOUT_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), PANGO_TYPE_LAYOUT))
#define PANGO_IS_RENDERER_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), PANGO_TYPE_RENDERER))
#define PANGO_CONTEXT(object)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((object), PANGO_TYPE_CONTEXT, \
	PangoContext))
#define PANGO_FONT(object)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((object), PANGO_TYPE_FONT, PangoFont))
#define PANGO_FONTSET(object)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((object), PANGO_TYPE_FONTSET, \
	PangoFontset))
#define PANGO_FONT_FACE(object)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((object), PANGO_TYPE_FONT_FACE, \
	PangoFontFace))
#define PANGO_FONT_FAMILY(object)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((object), PANGO_TYPE_FONT_FAMILY, \
	PangoFontFamily))
#define PANGO_FONT_MAP(object)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((object), PANGO_TYPE_FONT_MAP, \
	PangoFontMap))
#define PANGO_LAYOUT(object)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((object), PANGO_TYPE_LAYOUT, \
	PangoLayout))
#define PANGO_RENDERER(object)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((object), PANGO_TYPE_RENDERER, \
	PangoRenderer))
#define PANGO_IS_CONTEXT(object)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((object), PANGO_TYPE_CONTEXT))
#define PANGO_IS_FONT(object)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((object), PANGO_TYPE_FONT))
#define PANGO_IS_FONTSET(object)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((object), PANGO_TYPE_FONTSET))
#define PANGO_IS_FONT_FACE(object)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((object), PANGO_TYPE_FONT_FACE))
#define PANGO_IS_FONT_FAMILY(object)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((object), PANGO_TYPE_FONT_FAMILY))
#define PANGO_IS_FONT_MAP(object)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((object), PANGO_TYPE_FONT_MAP))
#define PANGO_IS_LAYOUT(object)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((object), PANGO_TYPE_LAYOUT))
#define PANGO_IS_RENDERER(object)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((object), PANGO_TYPE_RENDERER))
#define PANGO_CONTEXT_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), PANGO_TYPE_CONTEXT, \
	PangoContextClass))
#define PANGO_LAYOUT_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), PANGO_TYPE_LAYOUT, \
	PangoLayoutClass))
#define PANGO_RENDERER_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), PANGO_TYPE_RENDERER, \
	PangoRendererClass))
#define PANGO_UNITS_ROUND(d)	(((d) + (PANGO_SCALE >> 1)) &amp; ~(PANGO_SCALE - 1))
#define PANGO_PIXELS_CEIL(d)	(((int)(d) + 1023) >> 10)
#define PANGO_PIXELS(d)	(((int)(d) + 512) >> 10)
#define PANGO_PIXELS_FLOOR(d)	(((int)(d)) >> 10)
#define pango_language_to_string(language)	((const char *)language)
#define PANGO_SCALE_XX_SMALL	((double)0.5787037037037)
#define PANGO_SCALE_X_SMALL	((double)0.6444444444444)
#define PANGO_SCALE_SMALL	((double)0.8333333333333)
#define PANGO_SCALE_MEDIUM	((double)1.0)
#define PANGO_SCALE_LARGE	((double)1.2)
#define PANGO_SCALE_X_LARGE	((double)1.4399999999999)
#define PANGO_SCALE_XX_LARGE	((double)1.728)
#define PANGO_GRAVITY_IS_VERTICAL(gravity)	((gravity) == PANGO_GRAVITY_EAST || (gravity) == PANGO_GRAVITY_WEST)
#if defined(PANGO_ENABLE_ENGINE) || defined(PANGO_ENABLE_BACKEND)
#define PANGO_GET_UNKNOWN_GLYPH(wc)	((PangoGlyph)(wc)|PANGO_GLYPH_UNKNOWN_FLAG)
#endif
#define PANGO_GLYPH_EMPTY	((PangoGlyph)0x0FFFFFFF)
#if defined(PANGO_ENABLE_ENGINE) || defined(PANGO_ENABLE_BACKEND)
#define PANGO_GLYPH_UNKNOWN_FLAG	((PangoGlyph)0x10000000)
#endif
#define PANGO_GLYPH_INVALID_INPUT	((PangoGlyph)0xFFFFFFFF)
#define PANGO_RBEARING(rect)	((rect).x + (rect).width)
#define PANGO_LBEARING(rect)	((rect).x)
#define PANGO_DESCENT(rect)	((rect).y + (rect).height)
#define PANGO_ASCENT(rect)	(-(rect).y)
#define PANGO_ANALYSIS_FLAG_CENTERED_BASELINE	(1 &lt;&lt; 0)
#define PANGO_TYPE_ALIGNMENT	(pango_alignment_get_type())
#define PANGO_TYPE_ATTR_TYPE	(pango_attr_type_get_type())
#define PANGO_TYPE_BIDI_TYPE	(pango_bidi_type_get_type())
#define PANGO_TYPE_CONTEXT	(pango_context_get_type ())
#define PANGO_TYPE_COVERAGE_LEVEL	(pango_coverage_level_get_type())
#define PANGO_TYPE_DIRECTION	(pango_direction_get_type())
#define PANGO_TYPE_ELLIPSIZE_MODE	(pango_ellipsize_mode_get_type())
#define PANGO_TYPE_FONTSET	(pango_fontset_get_type ())
#define PANGO_TYPE_FONT_DESCRIPTION	(pango_font_description_get_type ())
#define PANGO_TYPE_FONT_FACE	(pango_font_face_get_type ())
#define PANGO_TYPE_FONT_FAMILY	(pango_font_family_get_type ())
#define PANGO_TYPE_FONT	(pango_font_get_type ())
#define PANGO_TYPE_FONT_MAP	(pango_font_map_get_type ())
#define PANGO_TYPE_FONT_MASK	(pango_font_mask_get_type())
#define PANGO_TYPE_FONT_METRICS	(pango_font_metrics_get_type ())
#define PANGO_TYPE_GLYPH_ITEM	(pango_glyph_item_get_type ())
#define PANGO_TYPE_GLYPH_ITEM_ITER	(pango_glyph_item_iter_get_type ())
#define PANGO_TYPE_GLYPH_STRING	(pango_glyph_string_get_type ())
#define PANGO_TYPE_GRAVITY	(pango_gravity_get_type())
#define PANGO_TYPE_GRAVITY_HINT	(pango_gravity_hint_get_type())
#define PANGO_TYPE_ITEM	(pango_item_get_type ())
#define PANGO_TYPE_LANGUAGE	(pango_language_get_type ())
#define PANGO_TYPE_LAYOUT	(pango_layout_get_type ())
#define PANGO_TYPE_LAYOUT_ITER	(pango_layout_iter_get_type ())
#define PANGO_TYPE_LAYOUT_LINE	(pango_layout_line_get_type ())
#define PANGO_TYPE_MATRIX	(pango_matrix_get_type ())
#define PANGO_TYPE_RENDERER	(pango_renderer_get_type())
#define PANGO_TYPE_RENDER_PART	(pango_render_part_get_type())
#define PANGO_TYPE_SCRIPT	(pango_script_get_type())
#define PANGO_TYPE_STRETCH	(pango_stretch_get_type())
#define PANGO_TYPE_STYLE	(pango_style_get_type())
#define PANGO_TYPE_TAB_ALIGN	(pango_tab_align_get_type())
#define PANGO_TYPE_TAB_ARRAY	(pango_tab_array_get_type ())
#define PANGO_TYPE_UNDERLINE	(pango_underline_get_type())
#define PANGO_TYPE_VARIANT	(pango_variant_get_type())
#define PANGO_TYPE_WEIGHT	(pango_weight_get_type())
#define PANGO_TYPE_WRAP_MODE	(pango_wrap_mode_get_type())
#define PANGO_ATTR_INDEX_FROM_TEXT_BEGINNING	0
#define PANGO_VERSION_MAJOR	1
#define PANGO_VERSION_MICRO	1
#define PANGO_VERSION_STRING	"1.30.1"
#define PANGO_SCALE	1024
#define PANGO_VERSION_MINOR	30
#define PANGO_ATTR_INDEX_TO_TEXT_END	G_MAXUINT
#define PANGO_TYPE_ATTR_LIST	pango_attr_list_get_type ()
#define PANGO_TYPE_COLOR	pango_color_get_type ()
#define PANGO_MATRIX_INIT	{ 1., 0., 0., 1., 0., 0. }

typedef struct _PangoFontFace PangoFontFace;
typedef enum {
    PANGO_WRAP_WORD = 0,
    PANGO_WRAP_CHAR = 1,
    PANGO_WRAP_WORD_CHAR = 2
} PangoWrapMode;
typedef struct _PangoLayout PangoLayout;
typedef struct _PangoScriptIter PangoScriptIter;
typedef enum {
    PANGO_SCRIPT_INVALID_CODE = -1,
    PANGO_SCRIPT_COMMON = 0,
    PANGO_SCRIPT_INHERITED = 1,
    PANGO_SCRIPT_ARABIC = 2,
    PANGO_SCRIPT_ARMENIAN = 3,
    PANGO_SCRIPT_BENGALI = 4,
    PANGO_SCRIPT_BOPOMOFO = 5,
    PANGO_SCRIPT_CHEROKEE = 6,
    PANGO_SCRIPT_COPTIC = 7,
    PANGO_SCRIPT_CYRILLIC = 8,
    PANGO_SCRIPT_DESERET = 9,
    PANGO_SCRIPT_DEVANAGARI = 10,
    PANGO_SCRIPT_ETHIOPIC = 11,
    PANGO_SCRIPT_GEORGIAN = 12,
    PANGO_SCRIPT_GOTHIC = 13,
    PANGO_SCRIPT_GREEK = 14,
    PANGO_SCRIPT_GUJARATI = 15,
    PANGO_SCRIPT_GURMUKHI = 16,
    PANGO_SCRIPT_HAN = 17,
    PANGO_SCRIPT_HANGUL = 18,
    PANGO_SCRIPT_HEBREW = 19,
    PANGO_SCRIPT_HIRAGANA = 20,
    PANGO_SCRIPT_KANNADA = 21,
    PANGO_SCRIPT_KATAKANA = 22,
    PANGO_SCRIPT_KHMER = 23,
    PANGO_SCRIPT_LAO = 24,
    PANGO_SCRIPT_LATIN = 25,
    PANGO_SCRIPT_MALAYALAM = 26,
    PANGO_SCRIPT_MONGOLIAN = 27,
    PANGO_SCRIPT_MYANMAR = 28,
    PANGO_SCRIPT_OGHAM = 29,
    PANGO_SCRIPT_OLD_ITALIC = 30,
    PANGO_SCRIPT_ORIYA = 31,
    PANGO_SCRIPT_RUNIC = 32,
    PANGO_SCRIPT_SINHALA = 33,
    PANGO_SCRIPT_SYRIAC = 34,
    PANGO_SCRIPT_TAMIL = 35,
    PANGO_SCRIPT_TELUGU = 36,
    PANGO_SCRIPT_THAANA = 37,
    PANGO_SCRIPT_THAI = 38,
    PANGO_SCRIPT_TIBETAN = 39,
    PANGO_SCRIPT_CANADIAN_ABORIGINAL = 40,
    PANGO_SCRIPT_YI = 41,
    PANGO_SCRIPT_TAGALOG = 42,
    PANGO_SCRIPT_HANUNOO = 43,
    PANGO_SCRIPT_BUHID = 44,
    PANGO_SCRIPT_TAGBANWA = 45,
    PANGO_SCRIPT_BRAILLE = 46,
    PANGO_SCRIPT_CYPRIOT = 47,
    PANGO_SCRIPT_LIMBU = 48,
    PANGO_SCRIPT_OSMANYA = 49,
    PANGO_SCRIPT_SHAVIAN = 50,
    PANGO_SCRIPT_LINEAR_B = 51,
    PANGO_SCRIPT_TAI_LE = 52,
    PANGO_SCRIPT_UGARITIC = 53
} PangoScript;
typedef struct _PangoFont PangoFont;
typedef struct _PangoContext PangoContext;
typedef struct _PangoFontDescription PangoFontDescription;
typedef enum {
    PANGO_ATTR_INVALID = 0,
    PANGO_ATTR_LANGUAGE = 1,
    PANGO_ATTR_FAMILY = 2,
    PANGO_ATTR_STYLE = 3,
    PANGO_ATTR_WEIGHT = 4,
    PANGO_ATTR_VARIANT = 5,
    PANGO_ATTR_STRETCH = 6,
    PANGO_ATTR_SIZE = 7,
    PANGO_ATTR_FONT_DESC = 8,
    PANGO_ATTR_FOREGROUND = 9,
    PANGO_ATTR_BACKGROUND = 10,
    PANGO_ATTR_UNDERLINE = 11,
    PANGO_ATTR_STRIKETHROUGH = 12,
    PANGO_ATTR_RISE = 13,
    PANGO_ATTR_SHAPE = 14,
    PANGO_ATTR_SCALE = 15,
    PANGO_ATTR_FALLBACK = 16,
    PANGO_ATTR_LETTER_SPACING = 17,
    PANGO_ATTR_UNDERLINE_COLOR = 18,
    PANGO_ATTR_STRIKETHROUGH_COLOR = 19,
    PANGO_ATTR_ABSOLUTE_SIZE = 20
} PangoAttrType;
typedef struct _PangoAttribute {
    const PangoAttrClass *klass;
    guint start_index;
    guint end_index;
} PangoAttribute;
typedef struct _PangoAttrClass {
    PangoAttrType type;
    PangoAttribute *(*copy) (const PangoAttribute *);
    void (*destroy) (PangoAttribute *);
     gboolean(*equal) (const PangoAttribute *, const PangoAttribute *);
} PangoAttrClass;
typedef struct _PangoLanguage PangoLanguage;
typedef struct _PangoLogAttr {
    guint is_line_break:1;
    guint is_mandatory_break:1;
    guint is_char_break:1;
    guint is_white:1;
    guint is_cursor_position:1;
    guint is_word_start:1;
    guint is_word_end:1;
    guint is_sentence_boundary:1;
    guint is_sentence_start:1;
    guint is_sentence_end:1;
    guint backspace_deletes_character:1;
    unsigned int is_expandable_space:1;
    unsigned int is_word_boundary:1;
} PangoLogAttr;
typedef struct _PangoColor {
    guint16 red;
    guint16 green;
    guint16 blue;
} PangoColor;
typedef struct _PangoMatrix {
    double xx;
    double xy;
    double yx;
    double yy;
    double x0;
    double y0;
} PangoMatrix;
typedef struct _PangoEngineShape PangoEngineShape;
typedef struct _PangoEngineLang PangoEngineLang;
typedef struct _PangoAnalysis {
    PangoEngineShape *shape_engine;
    PangoEngineLang *lang_engine;
    PangoFont *font;
    guint8 level;
    PangoLanguage *language;
    GSList *extra_attrs;
} PangoAnalysis;
typedef struct _PangoItem {
    gint offset;
    gint length;
    gint num_chars;
    PangoAnalysis analysis;
} PangoItem;
typedef guint32 PangoGlyph;
typedef gint32 PangoGlyphUnit;
typedef struct _PangoGlyphGeometry {
    PangoGlyphUnit width;
    PangoGlyphUnit x_offset;
    PangoGlyphUnit y_offset;
} PangoGlyphGeometry;
typedef struct _PangoGlyphVisAttr {
    guint is_cluster_start:1;
} PangoGlyphVisAttr;
typedef struct _PangoGlyphInfo {
    PangoGlyph glyph;
    PangoGlyphGeometry geometry;
    PangoGlyphVisAttr attr;
} PangoGlyphInfo;
typedef struct _PangoGlyphString {
    gint num_glyphs;
    PangoGlyphInfo *glyphs;
    gint *log_clusters;
    gint space;
} PangoGlyphString;
typedef struct _PangoGlyphItem {
    PangoItem *item;
    PangoGlyphString *glyphs;
} PangoGlyphItem;
typedef PangoGlyphItem PangoLayoutRun;
typedef struct _PangoLayoutIter PangoLayoutIter;
typedef enum {
    PANGO_UNDERLINE_NONE = 0,
    PANGO_UNDERLINE_SINGLE = 1,
    PANGO_UNDERLINE_DOUBLE = 2,
    PANGO_UNDERLINE_LOW = 3,
    PANGO_UNDERLINE_ERROR = 4
} PangoUnderline;
typedef struct _PangoRendererPrivate PangoRendererPrivate;
typedef struct _PangoRenderer {
    GObject parent_instance;
    PangoUnderline underline;
    gboolean strikethrough;
    int active_count;
    PangoMatrix *matrix;
    PangoRendererPrivate *priv;
} PangoRenderer;
typedef enum {
    PANGO_RENDER_PART_FOREGROUND = 0,
    PANGO_RENDER_PART_BACKGROUND = 1,
    PANGO_RENDER_PART_UNDERLINE = 2,
    PANGO_RENDER_PART_STRIKETHROUGH = 3
} PangoRenderPart;
typedef struct _PangoAttrList PangoAttrList;
typedef struct _PangoLayoutLine {
    PangoLayout *layout;
    gint start_index;
    gint length;
    GSList *runs;
    guint is_paragraph_start:1;
    guint resolved_dir:3;
} PangoLayoutLine;
typedef enum {
    PANGO_STRETCH_ULTRA_CONDENSED = 0,
    PANGO_STRETCH_EXTRA_CONDENSED = 1,
    PANGO_STRETCH_CONDENSED = 2,
    PANGO_STRETCH_SEMI_CONDENSED = 3,
    PANGO_STRETCH_NORMAL = 4,
    PANGO_STRETCH_SEMI_EXPANDED = 5,
    PANGO_STRETCH_EXPANDED = 6,
    PANGO_STRETCH_EXTRA_EXPANDED = 7,
    PANGO_STRETCH_ULTRA_EXPANDED = 8
} PangoStretch;
typedef struct _PangoRectangle {
    int x;
    int y;
    int width;
    int height;
} PangoRectangle;
typedef struct _PangoFontFamily PangoFontFamily;
typedef struct _PangoFontMetrics PangoFontMetrics;
typedef struct _PangoTabArray PangoTabArray;
typedef enum {
    PANGO_TAB_LEFT = 0
} PangoTabAlign;
typedef enum {
    PANGO_ALIGN_LEFT = 0,
    PANGO_ALIGN_CENTER = 1,
    PANGO_ALIGN_RIGHT = 2
} PangoAlignment;
typedef struct _PangoAttrIterator PangoAttrIterator;
typedef enum {
    PANGO_FONT_MASK_FAMILY = 1,
    PANGO_FONT_MASK_STYLE = 2,
    PANGO_FONT_MASK_VARIANT = 4,
    PANGO_FONT_MASK_WEIGHT = 8,
    PANGO_FONT_MASK_STRETCH = 16,
    PANGO_FONT_MASK_SIZE = 32
} PangoFontMask;
typedef enum {
    PANGO_DIRECTION_LTR = 0,
    PANGO_DIRECTION_RTL = 1,
    PANGO_DIRECTION_TTB_LTR = 2,
    PANGO_DIRECTION_TTB_RTL = 3,
    PANGO_DIRECTION_WEAK_LTR = 4,
    PANGO_DIRECTION_WEAK_RTL = 5,
    PANGO_DIRECTION_NEUTRAL = 6
} PangoDirection;
typedef enum {
    PANGO_ELLIPSIZE_NONE = 0,
    PANGO_ELLIPSIZE_START = 1,
    PANGO_ELLIPSIZE_MIDDLE = 2,
    PANGO_ELLIPSIZE_END = 3
} PangoEllipsizeMode;
typedef struct _PangoCoverage PangoCoverage;
typedef enum {
    PANGO_STYLE_NORMAL = 0,
    PANGO_STYLE_OBLIQUE = 1,
    PANGO_STYLE_ITALIC = 2
} PangoStyle;
typedef enum {
    PANGO_COVERAGE_NONE = 0,
    PANGO_COVERAGE_FALLBACK = 1,
    PANGO_COVERAGE_APPROXIMATE = 2,
    PANGO_COVERAGE_EXACT = 3
} PangoCoverageLevel;
typedef struct _PangoFontMap PangoFontMap;
typedef gboolean(*PangoAttrFilterFunc) (PangoAttribute *, gpointer);
typedef struct _PangoFontset PangoFontset;
typedef enum {
    PANGO_WEIGHT_ULTRALIGHT = 200,
    PANGO_WEIGHT_LIGHT = 300,
    PANGO_WEIGHT_NORMAL = 400,
    PANGO_WEIGHT_SEMIBOLD = 600,
    PANGO_WEIGHT_BOLD = 700,
    PANGO_WEIGHT_ULTRABOLD = 800,
    PANGO_WEIGHT_HEAVY = 900
} PangoWeight;
typedef gboolean(*PangoFontsetForeachFunc) (PangoFontset *, PangoFont *,
					    gpointer);
typedef enum {
    PANGO_VARIANT_NORMAL = 0,
    PANGO_VARIANT_SMALL_CAPS = 1
} PangoVariant;
typedef gpointer(*PangoAttrDataCopyFunc) (gconstpointer);
typedef struct _PangoAttrShape {
    PangoAttribute attr;
    PangoRectangle ink_rect;
    PangoRectangle logical_rect;
    gpointer data;
    PangoAttrDataCopyFunc copy_func;
    GDestroyNotify destroy_func;
} PangoAttrShape;
typedef struct _PangoContextClass PangoContextClass;
typedef struct _PangoAttrString {
    PangoAttribute attr;
    char *value;
} PangoAttrString;
typedef struct _PangoAttrColor {
    PangoAttribute attr;
    PangoColor color;
} PangoAttrColor;
typedef struct _PangoAttrFontDesc {
    PangoAttribute attr;
    PangoFontDescription *desc;
} PangoAttrFontDesc;
typedef struct _PangoAttrFloat {
    PangoAttribute attr;
    double value;
} PangoAttrFloat;
typedef struct _PangoRendererClass {
    GObjectClass parent_class;
    void (*draw_glyphs) (PangoRenderer *, PangoFont *, PangoGlyphString *,
			 int, int);
    void (*draw_rectangle) (PangoRenderer *, PangoRenderPart, int, int,
			    int, int);
    void (*draw_error_underline) (PangoRenderer *, int, int, int, int);
    void (*draw_shape) (PangoRenderer *, PangoAttrShape *, int, int);
    void (*draw_trapezoid) (PangoRenderer *, PangoRenderPart, double,
			    double, double, double, double, double);
    void (*draw_glyph) (PangoRenderer *, PangoFont *, PangoGlyph, double,
			double);
    void (*part_changed) (PangoRenderer *, PangoRenderPart);
    void (*begin) (PangoRenderer *);
    void (*end) (PangoRenderer *);
    void (*prepare_run) (PangoRenderer *, PangoLayoutRun *);
    void (*draw_glyph_item) (void);
    void (*_pango_reserved2) (void);
    void (*_pango_reserved3) (void);
    void (*_pango_reserved4) (void);
} PangoRendererClass;
typedef struct _PangoAttrLanguage {
    PangoAttribute attr;
    PangoLanguage *value;
} PangoAttrLanguage;
typedef struct _PangoAttrInt {
    PangoAttribute attr;
    int value;
} PangoAttrInt;
typedef struct _PangoAttrSize {
    PangoAttribute attr;
    int size;
    guint absolute:1;
} PangoAttrSize;
typedef struct _PangoLayoutClass PangoLayoutClass;
typedef enum {
    PANGO_GRAVITY_SOUTH,
    PANGO_GRAVITY_EAST,
    PANGO_GRAVITY_NORTH,
    PANGO_GRAVITY_WEST,
    PANGO_GRAVITY_AUTO
} PangoGravity;
typedef enum {
    PANGO_GRAVITY_HINT_NATURAL,
    PANGO_GRAVITY_HINT_STRONG,
    PANGO_GRAVITY_HINT_LINE
} PangoGravityHint;
typedef struct _PangoGlyphItemIter {
    PangoGlyphItem *glyph_item;
    const gchar *text;
    int start_glyph;
    int start_index;
    int start_char;
    int end_glyph;
    int end_index;
    int end_char;
} PangoGlyphItemIter;
extern GType pango_alignment_get_type(void);
extern PangoAttribute *pango_attr_background_new(guint16 red,
						 guint16 green,
						 guint16 blue);
extern PangoAttribute *pango_attr_fallback_new(gboolean enable_fallback);
extern PangoAttribute *pango_attr_family_new(const char *family);
extern PangoAttribute *pango_attr_font_desc_new(const PangoFontDescription
						* desc);
extern PangoAttribute *pango_attr_foreground_new(guint16 red,
						 guint16 green,
						 guint16 blue);
extern PangoAttribute *pango_attr_gravity_hint_new(PangoGravityHint hint);
extern PangoAttribute *pango_attr_gravity_new(PangoGravity gravity);
extern PangoAttrIterator *pango_attr_iterator_copy(PangoAttrIterator *
						   iterator);
extern void pango_attr_iterator_destroy(PangoAttrIterator * iterator);
extern PangoAttribute *pango_attr_iterator_get(PangoAttrIterator *
					       iterator,
					       PangoAttrType type);
extern GSList *pango_attr_iterator_get_attrs(PangoAttrIterator * iterator);
extern void pango_attr_iterator_get_font(PangoAttrIterator * iterator,
					 PangoFontDescription * desc,
					 PangoLanguage * *language,
					 GSList * *extra_attrs);
extern gboolean pango_attr_iterator_next(PangoAttrIterator * iterator);
extern void pango_attr_iterator_range(PangoAttrIterator * iterator,
				      gint * start, gint * end);
extern PangoAttribute *pango_attr_language_new(PangoLanguage * language);
extern PangoAttribute *pango_attr_letter_spacing_new(int letter_spacing);
extern void pango_attr_list_change(PangoAttrList * list,
				   PangoAttribute * attr);
extern PangoAttrList *pango_attr_list_copy(PangoAttrList * list);
extern PangoAttrList *pango_attr_list_filter(PangoAttrList * list,
					     PangoAttrFilterFunc func,
					     gpointer data);
extern PangoAttrIterator *pango_attr_list_get_iterator(PangoAttrList *
						       list);
extern GType pango_attr_list_get_type(void);
extern void pango_attr_list_insert(PangoAttrList * list,
				   PangoAttribute * attr);
extern void pango_attr_list_insert_before(PangoAttrList * list,
					  PangoAttribute * attr);
extern PangoAttrList *pango_attr_list_new(void);
extern PangoAttrList *pango_attr_list_ref(PangoAttrList * list);
extern void pango_attr_list_splice(PangoAttrList * list,
				   PangoAttrList * other, gint pos,
				   gint len);
extern void pango_attr_list_unref(PangoAttrList * list);
extern PangoAttribute *pango_attr_rise_new(int rise);
extern PangoAttribute *pango_attr_scale_new(double scale_factor);
extern PangoAttribute *pango_attr_shape_new(const PangoRectangle *
					    ink_rect,
					    const PangoRectangle *
					    logical_rect);
extern PangoAttribute *pango_attr_shape_new_with_data(const PangoRectangle
						      * ink_rect,
						      const PangoRectangle
						      * logical_rect,
						      gpointer data,
						      PangoAttrDataCopyFunc
						      copy_func,
						      GDestroyNotify
						      destroy_func);
extern PangoAttribute *pango_attr_size_new(int size);
extern PangoAttribute *pango_attr_size_new_absolute(int size);
extern PangoAttribute *pango_attr_stretch_new(PangoStretch stretch);
extern PangoAttribute *pango_attr_strikethrough_color_new(guint16 red,
							  guint16 green,
							  guint16 blue);
extern PangoAttribute *pango_attr_strikethrough_new(gboolean
						    strikethrough);
extern PangoAttribute *pango_attr_style_new(PangoStyle style);
extern const char *pango_attr_type_get_name(PangoAttrType type);
extern GType pango_attr_type_get_type(void);
extern PangoAttrType pango_attr_type_register(const gchar * name);
extern PangoAttribute *pango_attr_underline_color_new(guint16 red,
						      guint16 green,
						      guint16 blue);
extern PangoAttribute *pango_attr_underline_new(PangoUnderline underline);
extern PangoAttribute *pango_attr_variant_new(PangoVariant variant);
extern PangoAttribute *pango_attr_weight_new(PangoWeight weight);
extern PangoAttribute *pango_attribute_copy(const PangoAttribute * attr);
extern void pango_attribute_destroy(PangoAttribute * attr);
extern gboolean pango_attribute_equal(const PangoAttribute * attr1,
				      const PangoAttribute * attr2);
extern void pango_attribute_init(PangoAttribute * attr,
				 const PangoAttrClass * klass);
extern GType pango_bidi_type_get_type(void);
extern void pango_break(const gchar * text, gint length,
			PangoAnalysis * analysis, PangoLogAttr * attrs,
			int attrs_len);
extern PangoColor *pango_color_copy(const PangoColor * src);
extern void pango_color_free(PangoColor * color);
extern GType pango_color_get_type(void);
extern gboolean pango_color_parse(PangoColor * color, const char *spec);
extern gchar *pango_color_to_string(const PangoColor * color);
extern PangoDirection pango_context_get_base_dir(PangoContext * context);
extern PangoGravity pango_context_get_base_gravity(PangoContext * context);
extern PangoFontDescription
    *pango_context_get_font_description(PangoContext * context);
extern PangoFontMap *pango_context_get_font_map(PangoContext * context);
extern PangoGravity pango_context_get_gravity(PangoContext * context);
extern PangoGravityHint pango_context_get_gravity_hint(PangoContext *
						       context);
extern PangoLanguage *pango_context_get_language(PangoContext * context);
extern const PangoMatrix *pango_context_get_matrix(PangoContext * context);
extern PangoFontMetrics *pango_context_get_metrics(PangoContext * context,
						   const
						   PangoFontDescription *
						   desc,
						   PangoLanguage *
						   language);
extern GType pango_context_get_type(void);
extern void pango_context_list_families(PangoContext * context,
					PangoFontFamily * **families,
					int *n_families);
extern PangoFont *pango_context_load_font(PangoContext * context,
					  const PangoFontDescription *
					  desc);
extern PangoFontset *pango_context_load_fontset(PangoContext * context,
						const PangoFontDescription
						* desc,
						PangoLanguage * language);
extern PangoContext *pango_context_new(void);
extern void pango_context_set_base_dir(PangoContext * context,
				       PangoDirection direction);
extern void pango_context_set_base_gravity(PangoContext * context,
					   PangoGravity gravity);
extern void pango_context_set_font_description(PangoContext * context,
					       const PangoFontDescription *
					       desc);
extern void pango_context_set_font_map(PangoContext * context,
				       PangoFontMap * font_map);
extern void pango_context_set_gravity_hint(PangoContext * context,
					   PangoGravityHint hint);
extern void pango_context_set_language(PangoContext * context,
				       PangoLanguage * language);
extern void pango_context_set_matrix(PangoContext * context,
				     const PangoMatrix * matrix);
extern PangoCoverage *pango_coverage_copy(PangoCoverage * coverage);
extern PangoCoverage *pango_coverage_from_bytes(guchar * bytes,
						int n_bytes);
extern PangoCoverageLevel pango_coverage_get(PangoCoverage * coverage,
					     int index_);
extern GType pango_coverage_level_get_type(void);
extern void pango_coverage_max(PangoCoverage * coverage,
			       PangoCoverage * other);
extern PangoCoverage *pango_coverage_new(void);
extern PangoCoverage *pango_coverage_ref(PangoCoverage * coverage);
extern void pango_coverage_set(PangoCoverage * coverage, int index_,
			       PangoCoverageLevel level);
extern void pango_coverage_to_bytes(PangoCoverage * coverage,
				    guchar * *bytes, int *n_bytes);
extern void pango_coverage_unref(PangoCoverage * coverage);
extern GType pango_direction_get_type(void);
extern GType pango_ellipsize_mode_get_type(void);
extern void pango_extents_to_pixels(PangoRectangle * inclusive,
				    PangoRectangle * nearest);
extern PangoDirection pango_find_base_dir(const gchar * text, gint length);
extern void pango_find_paragraph_boundary(const gchar * text, gint length,
					  gint * paragraph_delimiter_index,
					  gint * next_paragraph_start);
extern PangoFontDescription *pango_font_describe(PangoFont * font);
extern PangoFontDescription
    *pango_font_describe_with_absolute_size(PangoFont * font);
extern gboolean pango_font_description_better_match(const
						    PangoFontDescription *
						    desc,
						    const
						    PangoFontDescription *
						    old_match,
						    const
						    PangoFontDescription *
						    new_match);
extern PangoFontDescription *pango_font_description_copy(const
							 PangoFontDescription
							 * desc);
extern PangoFontDescription *pango_font_description_copy_static(const
								PangoFontDescription
								* desc);
extern gboolean pango_font_description_equal(const PangoFontDescription *
					     desc1,
					     const PangoFontDescription *
					     desc2);
extern void pango_font_description_free(PangoFontDescription * desc);
extern PangoFontDescription *pango_font_description_from_string(const char
								*str);
extern const char *pango_font_description_get_family(const
						     PangoFontDescription *
						     desc);
extern PangoGravity pango_font_description_get_gravity(const
						       PangoFontDescription
						       * desc);
extern PangoFontMask pango_font_description_get_set_fields(const
							   PangoFontDescription
							   * desc);
extern gint pango_font_description_get_size(const PangoFontDescription *
					    desc);
extern gboolean pango_font_description_get_size_is_absolute(const
							    PangoFontDescription
							    * desc);
extern PangoStretch pango_font_description_get_stretch(const
						       PangoFontDescription
						       * desc);
extern PangoStyle pango_font_description_get_style(const
						   PangoFontDescription *
						   desc);
extern GType pango_font_description_get_type(void);
extern PangoVariant pango_font_description_get_variant(const
						       PangoFontDescription
						       * desc);
extern PangoWeight pango_font_description_get_weight(const
						     PangoFontDescription *
						     desc);
extern guint pango_font_description_hash(const PangoFontDescription *
					 desc);
extern void pango_font_description_merge(PangoFontDescription * desc,
					 const PangoFontDescription *
					 desc_to_merge,
					 gboolean replace_existing);
extern void pango_font_description_merge_static(PangoFontDescription *
						desc,
						const PangoFontDescription
						* desc_to_merge,
						gboolean replace_existing);
extern PangoFontDescription *pango_font_description_new(void);
extern void pango_font_description_set_absolute_size(PangoFontDescription *
						     desc, double size);
extern void pango_font_description_set_family(PangoFontDescription * desc,
					      const char *family);
extern void pango_font_description_set_family_static(PangoFontDescription *
						     desc,
						     const char *family);
extern void pango_font_description_set_gravity(PangoFontDescription * desc,
					       PangoGravity gravity);
extern void pango_font_description_set_size(PangoFontDescription * desc,
					    gint size);
extern void pango_font_description_set_stretch(PangoFontDescription * desc,
					       PangoStretch stretch);
extern void pango_font_description_set_style(PangoFontDescription * desc,
					     PangoStyle style);
extern void pango_font_description_set_variant(PangoFontDescription * desc,
					       PangoVariant variant);
extern void pango_font_description_set_weight(PangoFontDescription * desc,
					      PangoWeight weight);
extern char *pango_font_description_to_filename(const PangoFontDescription
						* desc);
extern char *pango_font_description_to_string(const PangoFontDescription *
					      desc);
extern void pango_font_description_unset_fields(PangoFontDescription *
						desc,
						PangoFontMask to_unset);
extern void pango_font_descriptions_free(PangoFontDescription * *descs,
					 int n_descs);
extern PangoFontDescription *pango_font_face_describe(PangoFontFace *
						      face);
extern const char *pango_font_face_get_face_name(PangoFontFace * face);
extern GType pango_font_face_get_type(void);
extern gboolean pango_font_face_is_synthesized(PangoFontFace * face);
extern void pango_font_face_list_sizes(PangoFontFace * face, int **sizes,
				       int *n_sizes);
extern const char *pango_font_family_get_name(PangoFontFamily * family);
extern GType pango_font_family_get_type(void);
extern gboolean pango_font_family_is_monospace(PangoFontFamily * family);
extern void pango_font_family_list_faces(PangoFontFamily * family,
					 PangoFontFace * **faces,
					 int *n_faces);
extern PangoEngineShape *pango_font_find_shaper(PangoFont * font,
						PangoLanguage * language,
						guint32 ch);
extern PangoCoverage *pango_font_get_coverage(PangoFont * font,
					      PangoLanguage * language);
extern PangoFontMap *pango_font_get_font_map(PangoFont * font);
extern void pango_font_get_glyph_extents(PangoFont * font,
					 PangoGlyph glyph,
					 PangoRectangle * ink_rect,
					 PangoRectangle * logical_rect);
extern PangoFontMetrics *pango_font_get_metrics(PangoFont * font,
						PangoLanguage * language);
extern GType pango_font_get_type(void);
extern PangoContext *pango_font_map_create_context(PangoFontMap * fontmap);
extern GType pango_font_map_get_type(void);
extern void pango_font_map_list_families(PangoFontMap * fontmap,
					 PangoFontFamily * **families,
					 int *n_families);
extern PangoFont *pango_font_map_load_font(PangoFontMap * fontmap,
					   PangoContext * context,
					   const PangoFontDescription *
					   desc);
extern PangoFontset *pango_font_map_load_fontset(PangoFontMap * fontmap,
						 PangoContext * context,
						 const PangoFontDescription
						 * desc,
						 PangoLanguage * language);
extern GType pango_font_mask_get_type(void);
extern int pango_font_metrics_get_approximate_char_width(PangoFontMetrics *
							 metrics);
extern int pango_font_metrics_get_approximate_digit_width(PangoFontMetrics
							  * metrics);
extern int pango_font_metrics_get_ascent(PangoFontMetrics * metrics);
extern int pango_font_metrics_get_descent(PangoFontMetrics * metrics);
extern int pango_font_metrics_get_strikethrough_position(PangoFontMetrics *
							 metrics);
extern int pango_font_metrics_get_strikethrough_thickness(PangoFontMetrics
							  * metrics);
extern GType pango_font_metrics_get_type(void);
extern int pango_font_metrics_get_underline_position(PangoFontMetrics *
						     metrics);
extern int pango_font_metrics_get_underline_thickness(PangoFontMetrics *
						      metrics);
extern PangoFontMetrics *pango_font_metrics_ref(PangoFontMetrics *
						metrics);
extern void pango_font_metrics_unref(PangoFontMetrics * metrics);
extern void pango_fontset_foreach(PangoFontset *, PangoFontsetForeachFunc,
				  gpointer);
extern PangoFont *pango_fontset_get_font(PangoFontset *, guint);
extern PangoFontMetrics *pango_fontset_get_metrics(PangoFontset *);
extern GType pango_fontset_get_type(void);
extern void pango_get_log_attrs(const char *text, int length, int level,
				PangoLanguage * language,
				PangoLogAttr * log_attrs, int attrs_len);
extern GSList *pango_glyph_item_apply_attrs(PangoGlyphItem * glyph_item,
					    const char *text,
					    PangoAttrList * list);
extern PangoGlyphItem *pango_glyph_item_copy(PangoGlyphItem * orig);
extern void pango_glyph_item_free(PangoGlyphItem * glyph_item);
extern void pango_glyph_item_get_logical_widths(PangoGlyphItem *
						glyph_item,
						const char *text,
						int *logical_widths);
extern GType pango_glyph_item_get_type(void);
extern PangoGlyphItemIter *pango_glyph_item_iter_copy(PangoGlyphItemIter *
						      orig);
extern void pango_glyph_item_iter_free(PangoGlyphItemIter * iter);
extern GType pango_glyph_item_iter_get_type(void);
extern gboolean pango_glyph_item_iter_init_end(PangoGlyphItemIter * iter,
					       PangoGlyphItem * glyph_item,
					       const char *text);
extern gboolean pango_glyph_item_iter_init_start(PangoGlyphItemIter * iter,
						 PangoGlyphItem *
						 glyph_item,
						 const char *text);
extern gboolean pango_glyph_item_iter_next_cluster(PangoGlyphItemIter *
						   iter);
extern gboolean pango_glyph_item_iter_prev_cluster(PangoGlyphItemIter *
						   iter);
extern void pango_glyph_item_letter_space(PangoGlyphItem * glyph_item,
					  const char *text,
					  PangoLogAttr * log_attrs,
					  int letter_spacing);
extern PangoGlyphItem *pango_glyph_item_split(PangoGlyphItem * orig,
					      const char *text,
					      int split_index);
extern PangoGlyphString *pango_glyph_string_copy(PangoGlyphString *
						 string);
extern void pango_glyph_string_extents(PangoGlyphString * glyphs,
				       PangoFont * font,
				       PangoRectangle * ink_rect,
				       PangoRectangle * logical_rect);
extern void pango_glyph_string_extents_range(PangoGlyphString * glyphs,
					     int start, int end,
					     PangoFont * font,
					     PangoRectangle * ink_rect,
					     PangoRectangle *
					     logical_rect);
extern void pango_glyph_string_free(PangoGlyphString * string);
extern void pango_glyph_string_get_logical_widths(PangoGlyphString *
						  glyphs, const char *text,
						  int length,
						  int embedding_level,
						  int *logical_widths);
extern GType pango_glyph_string_get_type(void);
extern int pango_glyph_string_get_width(PangoGlyphString * glyphs);
extern void pango_glyph_string_index_to_x(PangoGlyphString * glyphs,
					  char *text, int length,
					  PangoAnalysis * analysis,
					  int index_, gboolean trailing,
					  int *x_pos);
extern PangoGlyphString *pango_glyph_string_new(void);
extern void pango_glyph_string_set_size(PangoGlyphString * string,
					gint new_len);
extern void pango_glyph_string_x_to_index(PangoGlyphString * glyphs,
					  char *text, int length,
					  PangoAnalysis * analysis,
					  int x_pos, int *index_,
					  gboolean * trailing);
extern PangoGravity pango_gravity_get_for_matrix(const PangoMatrix *
						 matrix);
extern PangoGravity pango_gravity_get_for_script(PangoScript script,
						 PangoGravity base_gravity,
						 PangoGravityHint hint);
extern PangoGravity pango_gravity_get_for_script_and_width(PangoScript
							   script,
							   gboolean wide,
							   PangoGravity
							   base_gravity,
							   PangoGravityHint
							   hint);
extern GType pango_gravity_get_type(void);
extern GType pango_gravity_hint_get_type(void);
extern double pango_gravity_to_rotation(PangoGravity gravity);
extern PangoItem *pango_item_copy(PangoItem * item);
extern void pango_item_free(PangoItem * item);
extern GType pango_item_get_type(void);
extern PangoItem *pango_item_new(void);
extern PangoItem *pango_item_split(PangoItem * orig, int split_index,
				   int split_offset);
extern GList *pango_itemize(PangoContext * context, const char *text,
			    int start_index, int length,
			    PangoAttrList * attrs,
			    PangoAttrIterator * cached_iter);
extern GList *pango_itemize_with_base_dir(PangoContext * context,
					  PangoDirection base_dir,
					  const char *text,
					  int start_index, int length,
					  PangoAttrList * attrs,
					  PangoAttrIterator * cached_iter);
extern PangoLanguage *pango_language_from_string(const char *language);
extern PangoLanguage *pango_language_get_default(void);
extern const PangoScript *pango_language_get_scripts(PangoLanguage *
						     language,
						     int *num_scripts);
extern GType pango_language_get_type(void);
extern gboolean pango_language_includes_script(PangoLanguage * language,
					       PangoScript script);
extern gboolean pango_language_matches(PangoLanguage * language,
				       const char *range_list);
extern const char *pango_language_to_string(PangoLanguage * language);
extern void pango_layout_context_changed(PangoLayout * layout);
extern PangoLayout *pango_layout_copy(PangoLayout * src);
extern PangoAlignment pango_layout_get_alignment(PangoLayout * layout);
extern PangoAttrList *pango_layout_get_attributes(PangoLayout * layout);
extern gboolean pango_layout_get_auto_dir(PangoLayout * layout);
extern int pango_layout_get_baseline(PangoLayout * layout);
extern gint pango_layout_get_character_count(PangoLayout * layout);
extern PangoContext *pango_layout_get_context(PangoLayout * layout);
extern void pango_layout_get_cursor_pos(PangoLayout * layout, int index_,
					PangoRectangle * strong_pos,
					PangoRectangle * weak_pos);
extern PangoEllipsizeMode pango_layout_get_ellipsize(PangoLayout * layout);
extern void pango_layout_get_extents(PangoLayout * layout,
				     PangoRectangle * ink_rect,
				     PangoRectangle * logical_rect);
extern const PangoFontDescription
    *pango_layout_get_font_description(PangoLayout * layout);
extern int pango_layout_get_height(PangoLayout * layout);
extern int pango_layout_get_indent(PangoLayout * layout);
extern PangoLayoutIter *pango_layout_get_iter(PangoLayout * layout);
extern gboolean pango_layout_get_justify(PangoLayout * layout);
extern PangoLayoutLine *pango_layout_get_line(PangoLayout * layout,
					      int line);
extern int pango_layout_get_line_count(PangoLayout * layout);
extern PangoLayoutLine *pango_layout_get_line_readonly(PangoLayout *
						       layout, int line);
extern GSList *pango_layout_get_lines(PangoLayout * layout);
extern GSList *pango_layout_get_lines_readonly(PangoLayout * layout);
extern void pango_layout_get_log_attrs(PangoLayout * layout,
				       PangoLogAttr * *attrs,
				       gint * n_attrs);
extern const PangoLogAttr *pango_layout_get_log_attrs_readonly(PangoLayout
							       * layout,
							       gint *
							       n_attrs);
extern void pango_layout_get_pixel_extents(PangoLayout * layout,
					   PangoRectangle * ink_rect,
					   PangoRectangle * logical_rect);
extern void pango_layout_get_pixel_size(PangoLayout * layout, int *width,
					int *height);
extern gboolean pango_layout_get_single_paragraph_mode(PangoLayout *
						       layout);
extern void pango_layout_get_size(PangoLayout * layout, int *width,
				  int *height);
extern int pango_layout_get_spacing(PangoLayout * layout);
extern PangoTabArray *pango_layout_get_tabs(PangoLayout * layout);
extern const char *pango_layout_get_text(PangoLayout * layout);
extern GType pango_layout_get_type(void);
extern int pango_layout_get_unknown_glyphs_count(PangoLayout * layout);
extern int pango_layout_get_width(PangoLayout * layout);
extern PangoWrapMode pango_layout_get_wrap(PangoLayout * layout);
extern void pango_layout_index_to_line_x(PangoLayout * layout, int index_,
					 gboolean trailing, int *line,
					 int *x_pos);
extern void pango_layout_index_to_pos(PangoLayout * layout, int index_,
				      PangoRectangle * pos);
extern gboolean pango_layout_is_ellipsized(PangoLayout * layout);
extern gboolean pango_layout_is_wrapped(PangoLayout * layout);
extern gboolean pango_layout_iter_at_last_line(PangoLayoutIter * iter);
extern PangoLayoutIter *pango_layout_iter_copy(PangoLayoutIter * iter);
extern void pango_layout_iter_free(PangoLayoutIter * iter);
extern int pango_layout_iter_get_baseline(PangoLayoutIter * iter);
extern void pango_layout_iter_get_char_extents(PangoLayoutIter * iter,
					       PangoRectangle *
					       logical_rect);
extern void pango_layout_iter_get_cluster_extents(PangoLayoutIter * iter,
						  PangoRectangle *
						  ink_rect,
						  PangoRectangle *
						  logical_rect);
extern int pango_layout_iter_get_index(PangoLayoutIter * iter);
extern PangoLayout *pango_layout_iter_get_layout(PangoLayoutIter * iter);
extern void pango_layout_iter_get_layout_extents(PangoLayoutIter * iter,
						 PangoRectangle * ink_rect,
						 PangoRectangle *
						 logical_rect);
extern PangoLayoutLine *pango_layout_iter_get_line(PangoLayoutIter * iter);
extern void pango_layout_iter_get_line_extents(PangoLayoutIter * iter,
					       PangoRectangle * ink_rect,
					       PangoRectangle *
					       logical_rect);
extern PangoLayoutLine *pango_layout_iter_get_line_readonly(PangoLayoutIter
							    * iter);
extern void pango_layout_iter_get_line_yrange(PangoLayoutIter * iter,
					      int *y0_, int *y1_);
extern PangoLayoutRun *pango_layout_iter_get_run(PangoLayoutIter * iter);
extern void pango_layout_iter_get_run_extents(PangoLayoutIter * iter,
					      PangoRectangle * ink_rect,
					      PangoRectangle *
					      logical_rect);
extern PangoLayoutRun *pango_layout_iter_get_run_readonly(PangoLayoutIter *
							  iter);
extern GType pango_layout_iter_get_type(void);
extern gboolean pango_layout_iter_next_char(PangoLayoutIter * iter);
extern gboolean pango_layout_iter_next_cluster(PangoLayoutIter * iter);
extern gboolean pango_layout_iter_next_line(PangoLayoutIter * iter);
extern gboolean pango_layout_iter_next_run(PangoLayoutIter * iter);
extern void pango_layout_line_get_extents(PangoLayoutLine * line,
					  PangoRectangle * ink_rect,
					  PangoRectangle * logical_rect);
extern void pango_layout_line_get_pixel_extents(PangoLayoutLine *
						layout_line,
						PangoRectangle * ink_rect,
						PangoRectangle *
						logical_rect);
extern GType pango_layout_line_get_type(void);
extern void pango_layout_line_get_x_ranges(PangoLayoutLine * line,
					   int start_index, int end_index,
					   int **ranges, int *n_ranges);
extern void pango_layout_line_index_to_x(PangoLayoutLine * line,
					 int index_, int trailing,
					 int *x_pos);
extern PangoLayoutLine *pango_layout_line_ref(PangoLayoutLine * line);
extern void pango_layout_line_unref(PangoLayoutLine * line);
extern gboolean pango_layout_line_x_to_index(PangoLayoutLine * line,
					     int x_pos, int *index_,
					     int *trailing);
extern void pango_layout_move_cursor_visually(PangoLayout * layout,
					      gboolean strong,
					      int old_index,
					      int old_trailing,
					      int direction,
					      int *new_index,
					      int *new_trailing);
extern PangoLayout *pango_layout_new(PangoContext * context);
extern void pango_layout_set_alignment(PangoLayout * layout,
				       PangoAlignment alignment);
extern void pango_layout_set_attributes(PangoLayout * layout,
					PangoAttrList * attrs);
extern void pango_layout_set_auto_dir(PangoLayout * layout,
				      gboolean auto_dir);
extern void pango_layout_set_ellipsize(PangoLayout * layout,
				       PangoEllipsizeMode ellipsize);
extern void pango_layout_set_font_description(PangoLayout * layout,
					      const PangoFontDescription *
					      desc);
extern void pango_layout_set_height(PangoLayout * layout, int height);
extern void pango_layout_set_indent(PangoLayout * layout, int indent);
extern void pango_layout_set_justify(PangoLayout * layout,
				     gboolean justify);
extern void pango_layout_set_markup(PangoLayout * layout,
				    const char *markup, int length);
extern void pango_layout_set_markup_with_accel(PangoLayout * layout,
					       const char *markup,
					       int length,
					       gunichar accel_marker,
					       gunichar * accel_char);
extern void pango_layout_set_single_paragraph_mode(PangoLayout * layout,
						   gboolean setting);
extern void pango_layout_set_spacing(PangoLayout * layout, int spacing);
extern void pango_layout_set_tabs(PangoLayout * layout,
				  PangoTabArray * tabs);
extern void pango_layout_set_text(PangoLayout * layout, const char *text,
				  int length);
extern void pango_layout_set_width(PangoLayout * layout, int width);
extern void pango_layout_set_wrap(PangoLayout * layout,
				  PangoWrapMode wrap);
extern gboolean pango_layout_xy_to_index(PangoLayout * layout, int x,
					 int y, int *index_,
					 gint * trailing);
extern void pango_matrix_concat(PangoMatrix * matrix,
				const PangoMatrix * new_matrix);
extern PangoMatrix *pango_matrix_copy(const PangoMatrix * matrix);
extern void pango_matrix_free(PangoMatrix * matrix);
extern double pango_matrix_get_font_scale_factor(const PangoMatrix *
						 matrix);
extern GType pango_matrix_get_type(void);
extern void pango_matrix_rotate(PangoMatrix * matrix, double degrees);
extern void pango_matrix_scale(PangoMatrix * matrix, double scale_x,
			       double scale_y);
extern void pango_matrix_transform_distance(const PangoMatrix * matrix,
					    double *dx, double *dy);
extern void pango_matrix_transform_pixel_rectangle(const PangoMatrix *
						   matrix,
						   PangoRectangle * rect);
extern void pango_matrix_transform_point(const PangoMatrix * matrix,
					 double *x, double *y);
extern void pango_matrix_transform_rectangle(const PangoMatrix * matrix,
					     PangoRectangle * rect);
extern void pango_matrix_translate(PangoMatrix * matrix, double tx,
				   double ty);
extern gboolean pango_parse_markup(const char *markup_text, int length,
				   gunichar accel_marker,
				   PangoAttrList * *attr_list, char **text,
				   gunichar * accel_char, GError * *error);
extern GType pango_render_part_get_type(void);
extern void pango_renderer_activate(PangoRenderer * renderer);
extern void pango_renderer_deactivate(PangoRenderer * renderer);
extern void pango_renderer_draw_error_underline(PangoRenderer * renderer,
						int x, int y, int width,
						int height);
extern void pango_renderer_draw_glyph(PangoRenderer * renderer,
				      PangoFont * font, PangoGlyph glyph,
				      double x, double y);
extern void pango_renderer_draw_glyph_item(PangoRenderer * renderer,
					   const char *text,
					   PangoGlyphItem * glyph_item,
					   int x, int y);
extern void pango_renderer_draw_glyphs(PangoRenderer * renderer,
				       PangoFont * font,
				       PangoGlyphString * glyphs, int x,
				       int y);
extern void pango_renderer_draw_layout(PangoRenderer * renderer,
				       PangoLayout * layout, int x, int y);
extern void pango_renderer_draw_layout_line(PangoRenderer * renderer,
					    PangoLayoutLine * line, int x,
					    int y);
extern void pango_renderer_draw_rectangle(PangoRenderer * renderer,
					  PangoRenderPart part, int x,
					  int y, int width, int height);
extern void pango_renderer_draw_trapezoid(PangoRenderer * renderer,
					  PangoRenderPart part, double y1_,
					  double x11, double x21,
					  double y2, double x12,
					  double x22);
extern PangoColor *pango_renderer_get_color(PangoRenderer * renderer,
					    PangoRenderPart part);
extern PangoLayout *pango_renderer_get_layout(PangoRenderer * renderer);
extern PangoLayoutLine *pango_renderer_get_layout_line(PangoRenderer *
						       renderer);
extern const PangoMatrix *pango_renderer_get_matrix(PangoRenderer *
						    renderer);
extern GType pango_renderer_get_type(void);
extern void pango_renderer_part_changed(PangoRenderer * renderer,
					PangoRenderPart part);
extern void pango_renderer_set_color(PangoRenderer * renderer,
				     PangoRenderPart part,
				     const PangoColor * color);
extern void pango_renderer_set_matrix(PangoRenderer * renderer,
				      const PangoMatrix * matrix);
extern GList *pango_reorder_items(GList * logical_items);
extern PangoScript pango_script_for_unichar(gunichar ch);
extern PangoLanguage *pango_script_get_sample_language(PangoScript script);
extern GType pango_script_get_type(void);
extern void pango_script_iter_free(PangoScriptIter * iter);
extern void pango_script_iter_get_range(PangoScriptIter * iter,
					const char **start,
					const char **end,
					PangoScript * script);
extern PangoScriptIter *pango_script_iter_new(const char *text,
					      int length);
extern gboolean pango_script_iter_next(PangoScriptIter * iter);
extern void pango_shape(const gchar * text, gint length,
			const PangoAnalysis * analysis,
			PangoGlyphString * glyphs);
extern GType pango_stretch_get_type(void);
extern GType pango_style_get_type(void);
extern GType pango_tab_align_get_type(void);
extern PangoTabArray *pango_tab_array_copy(PangoTabArray * src);
extern void pango_tab_array_free(PangoTabArray * tab_array);
extern gboolean pango_tab_array_get_positions_in_pixels(PangoTabArray *
							tab_array);
extern gint pango_tab_array_get_size(PangoTabArray * tab_array);
extern void pango_tab_array_get_tab(PangoTabArray * tab_array,
				    gint tab_index,
				    PangoTabAlign * alignment,
				    gint * location);
extern void pango_tab_array_get_tabs(PangoTabArray * tab_array,
				     PangoTabAlign * *alignments,
				     gint * *locations);
extern GType pango_tab_array_get_type(void);
extern PangoTabArray *pango_tab_array_new(gint initial_size,
					  gboolean positions_in_pixels);
extern PangoTabArray *pango_tab_array_new_with_positions(gint size,
							 gboolean
							 positions_in_pixels,
							 PangoTabAlign
							 first_alignment,
							 gint
							 first_position,
							 ...);
extern void pango_tab_array_resize(PangoTabArray * tab_array,
				   gint new_size);
extern void pango_tab_array_set_tab(PangoTabArray * tab_array,
				    gint tab_index,
				    PangoTabAlign alignment,
				    gint location);
extern GType pango_underline_get_type(void);
extern PangoDirection pango_unichar_direction(gunichar ch);
extern int pango_units_from_double(double d);
extern double pango_units_to_double(int i);
extern GType pango_variant_get_type(void);
extern GType pango_weight_get_type(void);
extern GType pango_wrap_mode_get_type(void);
</SCREEN>
</SECT2>
</SECT1>
<!-- End of text generated from database -->

<!-- Start of generated text - do not edit! -->
<!-- generated from the LSB specification database by mklibspec -->
<SECT1 ID=libpangocairo-1.0>
<TITLE>Interfaces for libpangocairo-1.0</TITLE>
<PARA>
<XREF LINKEND="lib-libpangocairo-1.0-def"> defines the library name and shared object name
for the libpangocairo-1.0 library
</PARA>
<TABLE id="lib-libpangocairo-1.0-def">
<TITLE>libpangocairo-1.0 Definition</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Library:</ENTRY>
<ENTRY>libpangocairo-1.0</ENTRY>
</ROW>
<ROW>
<ENTRY>SONAME:</ENTRY>
<ENTRY>libpangocairo-1.0.so.0</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The behavior of the interfaces in this library is specified by the following specifications:<SIMPLELIST COLUMNS=1>
<MEMBER ID='REFSTD.libpangocairo.1.0.1'>
[Gobject 2.32] <XREF LINKEND="std.Gobject">
</MEMBER>
<MEMBER ID='REFSTD.libpangocairo.1.0.2'>
[Pango 1.30] <XREF LINKEND="std.Pango">
</MEMBER>
</SIMPLELIST>
</PARA>
<!-- debug: database interface name Pango Cairo Rendering -->
<SECT2>
<!--libgroup-->
<TITLE>Pango Cairo Rendering</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Interfaces for Pango Cairo Rendering</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic functions
for Pango Cairo Rendering specified in <XREF linkend="tbl-libpangocairo-1.0-pango-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<TABLE id="tbl-libpangocairo-1.0-pango-ints">
<TITLE>libpangocairo-1.0 - Pango Cairo Rendering Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>pango_cairo_context_get_font_options</primary></indexterm>pango_cairo_context_get_font_options <LINK LINKEND="REFSTD.libpangocairo.1.0.2">[Pango 1.30]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_cairo_context_get_resolution</primary></indexterm>pango_cairo_context_get_resolution <LINK LINKEND="REFSTD.libpangocairo.1.0.2">[Pango 1.30]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_cairo_context_get_shape_renderer</primary></indexterm>pango_cairo_context_get_shape_renderer <LINK LINKEND="REFSTD.libpangocairo.1.0.2">[Pango 1.30]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_cairo_context_set_font_options</primary></indexterm>pango_cairo_context_set_font_options <LINK LINKEND="REFSTD.libpangocairo.1.0.2">[Pango 1.30]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_cairo_context_set_resolution</primary></indexterm>pango_cairo_context_set_resolution <LINK LINKEND="REFSTD.libpangocairo.1.0.2">[Pango 1.30]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_cairo_context_set_shape_renderer</primary></indexterm>pango_cairo_context_set_shape_renderer <LINK LINKEND="REFSTD.libpangocairo.1.0.2">[Pango 1.30]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_cairo_create_context</primary></indexterm>pango_cairo_create_context <LINK LINKEND="REFSTD.libpangocairo.1.0.2">[Pango 1.30]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_cairo_create_layout</primary></indexterm>pango_cairo_create_layout <LINK LINKEND="REFSTD.libpangocairo.1.0.2">[Pango 1.30]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_cairo_error_underline_path</primary></indexterm>pango_cairo_error_underline_path <LINK LINKEND="REFSTD.libpangocairo.1.0.2">[Pango 1.30]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_cairo_font_get_scaled_font</primary></indexterm>pango_cairo_font_get_scaled_font <LINK LINKEND="REFSTD.libpangocairo.1.0.2">[Pango 1.30]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_cairo_font_get_type</primary></indexterm>pango_cairo_font_get_type <LINK LINKEND="REFSTD.libpangocairo.1.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_cairo_font_map_create_context</primary></indexterm>pango_cairo_font_map_create_context <LINK LINKEND="REFSTD.libpangocairo.1.0.2">[Pango 1.30]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_cairo_font_map_get_default</primary></indexterm>pango_cairo_font_map_get_default <LINK LINKEND="REFSTD.libpangocairo.1.0.2">[Pango 1.30]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_cairo_font_map_get_font_type</primary></indexterm>pango_cairo_font_map_get_font_type <LINK LINKEND="REFSTD.libpangocairo.1.0.2">[Pango 1.30]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_cairo_font_map_get_resolution</primary></indexterm>pango_cairo_font_map_get_resolution <LINK LINKEND="REFSTD.libpangocairo.1.0.2">[Pango 1.30]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_cairo_font_map_get_type</primary></indexterm>pango_cairo_font_map_get_type <LINK LINKEND="REFSTD.libpangocairo.1.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_cairo_font_map_new</primary></indexterm>pango_cairo_font_map_new <LINK LINKEND="REFSTD.libpangocairo.1.0.2">[Pango 1.30]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_cairo_font_map_new_for_font_type</primary></indexterm>pango_cairo_font_map_new_for_font_type <LINK LINKEND="REFSTD.libpangocairo.1.0.2">[Pango 1.30]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_cairo_font_map_set_default</primary></indexterm>pango_cairo_font_map_set_default <LINK LINKEND="REFSTD.libpangocairo.1.0.2">[Pango 1.30]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_cairo_font_map_set_resolution</primary></indexterm>pango_cairo_font_map_set_resolution <LINK LINKEND="REFSTD.libpangocairo.1.0.2">[Pango 1.30]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_cairo_glyph_string_path</primary></indexterm>pango_cairo_glyph_string_path <LINK LINKEND="REFSTD.libpangocairo.1.0.2">[Pango 1.30]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_cairo_layout_line_path</primary></indexterm>pango_cairo_layout_line_path <LINK LINKEND="REFSTD.libpangocairo.1.0.2">[Pango 1.30]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_cairo_layout_path</primary></indexterm>pango_cairo_layout_path <LINK LINKEND="REFSTD.libpangocairo.1.0.2">[Pango 1.30]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_cairo_show_error_underline</primary></indexterm>pango_cairo_show_error_underline <LINK LINKEND="REFSTD.libpangocairo.1.0.2">[Pango 1.30]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_cairo_show_glyph_item</primary></indexterm>pango_cairo_show_glyph_item <LINK LINKEND="REFSTD.libpangocairo.1.0.2">[Pango 1.30]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_cairo_show_glyph_string</primary></indexterm>pango_cairo_show_glyph_string <LINK LINKEND="REFSTD.libpangocairo.1.0.2">[Pango 1.30]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_cairo_show_layout</primary></indexterm>pango_cairo_show_layout <LINK LINKEND="REFSTD.libpangocairo.1.0.2">[Pango 1.30]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_cairo_show_layout_line</primary></indexterm>pango_cairo_show_layout_line <LINK LINKEND="REFSTD.libpangocairo.1.0.2">[Pango 1.30]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_cairo_update_context</primary></indexterm>pango_cairo_update_context <LINK LINKEND="REFSTD.libpangocairo.1.0.2">[Pango 1.30]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_cairo_update_layout</primary></indexterm>pango_cairo_update_layout <LINK LINKEND="REFSTD.libpangocairo.1.0.2">[Pango 1.30]</LINK></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>
</SECT2>
</SECT1>
<SECT1 ID=libpangocairo-1.0-ddefs>
<TITLE>Data Definitions for libpangocairo-1.0</TITLE>
<PARA>
This section defines global identifiers and their values that are associated
with interfaces contained in libpangocairo-1.0.
These definitions are organized into groups that
correspond to system headers. This convention is used as a
convenience for the reader, and does not imply the existence
of these headers, or their content.
Where an interface is defined as requiring a particular system header file
all of the data definitions for that system header file presented here shall be in effect.
</PARA>
<PARA>
This section gives data definitions to promote binary application
portability, not to repeat source interface definitions available
elsewhere. System providers and application developers should use this ABI
to supplement - not to replace - source interface definition specifications.
</PARA>
<PARA>
This specification uses the <XREF LINKEND='std.ISOC99'> C Language as the reference programming language, and data definitions are specified in ISO C format. The C language is used here as a convenient notation. Using a C language description of these data objects does not preclude their use by other programming languages.</PARA>
<SECT2>
<TITLE>pango-1.0/pango/pangocairo.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define PANGO_CAIRO_FONT_MAP(object)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((object), PANGO_TYPE_CAIRO_FONT_MAP, \
	PangoCairoFontMap))
#define PANGO_IS_CAIRO_FONT_MAP(object)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((object), PANGO_TYPE_CAIRO_FONT_MAP))
#define PANGO_CAIRO_FONT(object)	(G_TYPE_CHECK_INSTANCE_CAST ((object), PANGO_TYPE_CAIRO_FONT, PangoCairoFont))
#define PANGO_IS_CAIRO_FONT(object)	(G_TYPE_CHECK_INSTANCE_TYPE ((object), PANGO_TYPE_CAIRO_FONT))
#define PANGO_TYPE_CAIRO_FONT	(pango_cairo_font_get_type ())
#define PANGO_TYPE_CAIRO_FONT_MAP	(pango_cairo_font_map_get_type ())

typedef struct _PangoCairoFont PangoCairoFont;
typedef struct _PangoCairoFontMap PangoCairoFontMap;
typedef void (*PangoCairoShapeRendererFunc) (cairo_t * cr,
					     PangoAttrShape * attr,
					     gboolean do_path,
					     gpointer data);
extern const cairo_font_options_t
    *pango_cairo_context_get_font_options(PangoContext * context);
extern double pango_cairo_context_get_resolution(PangoContext * context);
extern PangoCairoShapeRendererFunc
pango_cairo_context_get_shape_renderer(PangoContext * context,
				       gpointer * data);
extern void pango_cairo_context_set_font_options(PangoContext * context,
						 const cairo_font_options_t
						 * options);
extern void pango_cairo_context_set_resolution(PangoContext * context,
					       double dpi);
extern void pango_cairo_context_set_shape_renderer(PangoContext * context,
						   PangoCairoShapeRendererFunc
						   func, gpointer data,
						   GDestroyNotify dnotify);
extern PangoContext *pango_cairo_create_context(cairo_t * cr);
extern PangoLayout *pango_cairo_create_layout(cairo_t * cr);
extern void pango_cairo_error_underline_path(cairo_t * cr, double x,
					     double y, double width,
					     double height);
extern cairo_scaled_font_t *pango_cairo_font_get_scaled_font(PangoCairoFont
							     * font);
extern GType pango_cairo_font_get_type(void);
extern PangoContext *pango_cairo_font_map_create_context(PangoCairoFontMap
							 * fontmap);
extern PangoFontMap *pango_cairo_font_map_get_default(void);
extern cairo_font_type_t
pango_cairo_font_map_get_font_type(PangoCairoFontMap * fontmap);
extern double pango_cairo_font_map_get_resolution(PangoCairoFontMap *
						  fontmap);
extern GType pango_cairo_font_map_get_type(void);
extern PangoFontMap *pango_cairo_font_map_new(void);
extern PangoFontMap
    *pango_cairo_font_map_new_for_font_type(cairo_font_type_t fonttype);
extern void pango_cairo_font_map_set_default(PangoCairoFontMap * fontmap);
extern void pango_cairo_font_map_set_resolution(PangoCairoFontMap *
						fontmap, double dpi);
extern void pango_cairo_glyph_string_path(cairo_t * cr, PangoFont * font,
					  PangoGlyphString * glyphs);
extern void pango_cairo_layout_line_path(cairo_t * cr,
					 PangoLayoutLine * line);
extern void pango_cairo_layout_path(cairo_t * cr, PangoLayout * layout);
extern void pango_cairo_show_error_underline(cairo_t * cr, double x,
					     double y, double width,
					     double height);
extern void pango_cairo_show_glyph_item(cairo_t * cr, const char *text,
					PangoGlyphItem * glyph_item);
extern void pango_cairo_show_glyph_string(cairo_t * cr, PangoFont * font,
					  PangoGlyphString * glyphs);
extern void pango_cairo_show_layout(cairo_t * cr, PangoLayout * layout);
extern void pango_cairo_show_layout_line(cairo_t * cr,
					 PangoLayoutLine * line);
extern void pango_cairo_update_context(cairo_t * cr,
				       PangoContext * context);
extern void pango_cairo_update_layout(cairo_t * cr, PangoLayout * layout);
</SCREEN>
</SECT2>
</SECT1>
<!-- End of text generated from database -->

<!-- Start of generated text - do not edit! -->
<!-- generated from the LSB specification database by mklibspec -->
<SECT1 ID=libpangoxft-1.0>
<TITLE>Interfaces for libpangoxft-1.0</TITLE>
<PARA>
<XREF LINKEND="lib-libpangoxft-1.0-def"> defines the library name and shared object name
for the libpangoxft-1.0 library
</PARA>
<TABLE id="lib-libpangoxft-1.0-def">
<TITLE>libpangoxft-1.0 Definition</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Library:</ENTRY>
<ENTRY>libpangoxft-1.0</ENTRY>
</ROW>
<ROW>
<ENTRY>SONAME:</ENTRY>
<ENTRY>libpangoxft-1.0.so.0</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The behavior of the interfaces in this library is specified by the following specifications:<SIMPLELIST COLUMNS=1>
<MEMBER ID='REFSTD.libpangoxft.1.0.1'>
[Gobject 2.32] <XREF LINKEND="std.Gobject">
</MEMBER>
</SIMPLELIST>
</PARA>
<!-- debug: database interface name Pango Xft Fonts and Rendering library -->
<SECT2>
<!--libgroup-->
<TITLE>Pango Xft Fonts and Rendering library</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Interfaces for Pango Xft Fonts and Rendering library</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic functions
for Pango Xft Fonts and Rendering library specified in <XREF linkend="tbl-libpangoxft-1.0-pango-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<TABLE id="tbl-libpangoxft-1.0-pango-ints">
<TITLE>libpangoxft-1.0 - Pango Xft Fonts and Rendering library Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>pango_xft_font_get_type</primary></indexterm>pango_xft_font_get_type <LINK LINKEND="REFSTD.libpangoxft.1.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_xft_font_map_get_type</primary></indexterm>pango_xft_font_map_get_type <LINK LINKEND="REFSTD.libpangoxft.1.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_xft_renderer_get_type</primary></indexterm>pango_xft_renderer_get_type <LINK LINKEND="REFSTD.libpangoxft.1.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>
</SECT2>
</SECT1>
<SECT1 ID=libpangoxft-1.0-ddefs>
<TITLE>Data Definitions for libpangoxft-1.0</TITLE>
<PARA>
This section defines global identifiers and their values that are associated
with interfaces contained in libpangoxft-1.0.
These definitions are organized into groups that
correspond to system headers. This convention is used as a
convenience for the reader, and does not imply the existence
of these headers, or their content.
Where an interface is defined as requiring a particular system header file
all of the data definitions for that system header file presented here shall be in effect.
</PARA>
<PARA>
This section gives data definitions to promote binary application
portability, not to repeat source interface definitions available
elsewhere. System providers and application developers should use this ABI
to supplement - not to replace - source interface definition specifications.
</PARA>
<PARA>
This specification uses the <XREF LINKEND='std.ISOC99'> C Language as the reference programming language, and data definitions are specified in ISO C format. The C language is used here as a convenient notation. Using a C language description of these data objects does not preclude their use by other programming languages.</PARA>
<SECT2>
<TITLE>pango-1.0/pango/pangoxft.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define PANGO_XFT_RENDERER_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), PANGO_TYPE_XFT_RENDERER, \
	PangoXftRendererClass))
#define PANGO_IS_XFT_RENDERER_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), PANGO_TYPE_XFT_RENDERER))
#define PANGO_XFT_FONT(object)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((object), PANGO_TYPE_XFT_FONT, \
	PangoXftFont))
#define PANGO_XFT_FONT_MAP(object)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((object), PANGO_TYPE_XFT_FONT_MAP, \
	PangoXftFontMap))
#define PANGO_XFT_RENDERER(object)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((object), PANGO_TYPE_XFT_RENDERER, \
	PangoXftRenderer))
#define PANGO_XFT_IS_FONT(object)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((object), PANGO_TYPE_XFT_FONT))
#define PANGO_XFT_IS_FONT_MAP(object)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((object), PANGO_TYPE_XFT_FONT_MAP))
#define PANGO_IS_XFT_RENDERER(object)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((object), PANGO_TYPE_XFT_RENDERER))
#define PANGO_XFT_RENDERER_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), PANGO_TYPE_XFT_RENDERER, \
	PangoXftRendererClass))
#define PANGO_TYPE_XFT_FONT	(pango_xft_font_get_type ())
#define PANGO_TYPE_XFT_FONT_MAP	(pango_xft_font_map_get_type ())
#define PANGO_TYPE_XFT_RENDERER	(pango_xft_renderer_get_type())
#define PANGO_RENDER_TYPE_XFT	"PangoRenderXft"

typedef struct _PangoXftRenderer {
    PangoRenderer parent_instance;
    Display *display;
    int screen;
    XftDraw *draw;
    PangoXftRendererPrivate *priv;
} PangoXftRenderer;
typedef void (*PangoXftSubstituteFunc) (FcPattern * pattern,
					gpointer data);
typedef struct _PangoXftFontMap PangoXftFontMap;
typedef struct _PangoXftRendererClass {
    PangoRendererClass parent_class;
    void (*composite_trapezoids) (PangoXftRenderer * xftrenderer,
				  PangoRenderPart part,
				  XTrapezoid * trapezoids,
				  int n_trapezoids);
    void (*composite_glyphs) (PangoXftRenderer * xftrenderer,
			      XftFont * xft_font, XftGlyphSpec * glyphs,
			      int n_glyphs);
} PangoXftRendererClass;
typedef struct _PangoFcFontClass PangoFcFontClass;
typedef struct _PangoFcFont PangoFcFont;
typedef struct _PangoXftFont PangoXftFont;
typedef struct _PangoXftRendererPrivate PangoXftRendererPrivate;
extern GType pango_xft_font_get_type(void);
extern GType pango_xft_font_map_get_type(void);
extern PangoContext *pango_xft_get_context(Display * display, int screen);
extern PangoFontMap *pango_xft_get_font_map(Display * display, int screen);
extern void pango_xft_picture_render(Display * display,
				     Picture src_picture,
				     Picture dest_picture,
				     PangoFont * font,
				     PangoGlyphString * glyphs, gint x,
				     gint y);
extern void pango_xft_render(XftDraw * draw, XftColor * color,
			     PangoFont * font, PangoGlyphString * glyphs,
			     gint x, gint y);
extern void pango_xft_render_layout(XftDraw * draw, XftColor * color,
				    PangoLayout * layout, int x, int y);
extern void pango_xft_render_layout_line(XftDraw * draw, XftColor * color,
					 PangoLayoutLine * line, int x,
					 int y);
extern void pango_xft_render_transformed(XftDraw * draw, XftColor * color,
					 PangoMatrix * matrix,
					 PangoFont * font,
					 PangoGlyphString * glyphs, int x,
					 int y);
extern GType pango_xft_renderer_get_type(void);
extern PangoRenderer *pango_xft_renderer_new(Display * display,
					     int screen);
extern void pango_xft_renderer_set_default_color(PangoXftRenderer *
						 xftrenderer,
						 PangoColor *
						 default_color);
extern void pango_xft_renderer_set_draw(PangoXftRenderer * xftrenderer,
					XftDraw * draw);
extern void pango_xft_set_default_substitute(Display * display, int screen,
					     PangoXftSubstituteFunc func,
					     gpointer data,
					     GDestroyNotify notify);
extern void pango_xft_shutdown_display(Display * display, int screen);
extern void pango_xft_substitute_changed(Display * display, int screen);
</SCREEN>
</SECT2>
</SECT1>
<!-- End of text generated from database -->

<!-- Start of generated text - do not edit! -->
<!-- generated from the LSB specification database by mklibspec -->
<SECT1 ID=libpangoft2-1.0>
<TITLE>Interfaces for libpangoft2-1.0</TITLE>
<PARA>
<XREF LINKEND="lib-libpangoft2-1.0-def"> defines the library name and shared object name
for the libpangoft2-1.0 library
</PARA>
<TABLE id="lib-libpangoft2-1.0-def">
<TITLE>libpangoft2-1.0 Definition</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Library:</ENTRY>
<ENTRY>libpangoft2-1.0</ENTRY>
</ROW>
<ROW>
<ENTRY>SONAME:</ENTRY>
<ENTRY>libpangoft2-1.0.so.0</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The behavior of the interfaces in this library is specified by the following specifications:<SIMPLELIST COLUMNS=1>
<MEMBER ID='REFSTD.libpangoft2.1.0.1'>
[Gobject 2.32] <XREF LINKEND="std.Gobject">
</MEMBER>
<MEMBER ID='REFSTD.libpangoft2.1.0.2'>
[Pango 1.30] <XREF LINKEND="std.Pango">
</MEMBER>
</SIMPLELIST>
</PARA>
<!-- debug: database interface name Pango Freetype Fonts and Rendering library -->
<SECT2>
<!--libgroup-->
<TITLE>Pango Freetype Fonts and Rendering library</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Interfaces for Pango Freetype Fonts and Rendering library</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic functions
for Pango Freetype Fonts and Rendering library specified in <XREF linkend="tbl-libpangoft2-1.0-pango-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<TABLE id="tbl-libpangoft2-1.0-pango-ints">
<TITLE>libpangoft2-1.0 - Pango Freetype Fonts and Rendering library Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>pango_fc_decoder_get_charset</primary></indexterm>pango_fc_decoder_get_charset <LINK LINKEND="REFSTD.libpangoft2.1.0.2">[Pango 1.30]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_fc_decoder_get_glyph</primary></indexterm>pango_fc_decoder_get_glyph <LINK LINKEND="REFSTD.libpangoft2.1.0.2">[Pango 1.30]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_fc_decoder_get_type</primary></indexterm>pango_fc_decoder_get_type <LINK LINKEND="REFSTD.libpangoft2.1.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_fc_font_description_from_pattern</primary></indexterm>pango_fc_font_description_from_pattern <LINK LINKEND="REFSTD.libpangoft2.1.0.2">[Pango 1.30]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_fc_font_get_type</primary></indexterm>pango_fc_font_get_type <LINK LINKEND="REFSTD.libpangoft2.1.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_fc_font_lock_face</primary></indexterm>pango_fc_font_lock_face <LINK LINKEND="REFSTD.libpangoft2.1.0.2">[Pango 1.30]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_fc_font_map_add_decoder_find_func</primary></indexterm>pango_fc_font_map_add_decoder_find_func <LINK LINKEND="REFSTD.libpangoft2.1.0.2">[Pango 1.30]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_fc_font_map_cache_clear</primary></indexterm>pango_fc_font_map_cache_clear <LINK LINKEND="REFSTD.libpangoft2.1.0.2">[Pango 1.30]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_fc_font_map_find_decoder</primary></indexterm>pango_fc_font_map_find_decoder <LINK LINKEND="REFSTD.libpangoft2.1.0.2">[Pango 1.30]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_fc_font_map_get_type</primary></indexterm>pango_fc_font_map_get_type <LINK LINKEND="REFSTD.libpangoft2.1.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_fc_font_unlock_face</primary></indexterm>pango_fc_font_unlock_face <LINK LINKEND="REFSTD.libpangoft2.1.0.2">[Pango 1.30]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_ft2_font_map_create_context</primary></indexterm>pango_ft2_font_map_create_context <LINK LINKEND="REFSTD.libpangoft2.1.0.2">[Pango 1.30]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_ft2_font_map_get_type</primary></indexterm>pango_ft2_font_map_get_type <LINK LINKEND="REFSTD.libpangoft2.1.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_ft2_font_map_new</primary></indexterm>pango_ft2_font_map_new <LINK LINKEND="REFSTD.libpangoft2.1.0.2">[Pango 1.30]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_ft2_font_map_set_default_substitute</primary></indexterm>pango_ft2_font_map_set_default_substitute <LINK LINKEND="REFSTD.libpangoft2.1.0.2">[Pango 1.30]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_ft2_font_map_set_resolution</primary></indexterm>pango_ft2_font_map_set_resolution <LINK LINKEND="REFSTD.libpangoft2.1.0.2">[Pango 1.30]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_ft2_font_map_substitute_changed</primary></indexterm>pango_ft2_font_map_substitute_changed <LINK LINKEND="REFSTD.libpangoft2.1.0.2">[Pango 1.30]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_ft2_render</primary></indexterm>pango_ft2_render <LINK LINKEND="REFSTD.libpangoft2.1.0.2">[Pango 1.30]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_ft2_render_layout</primary></indexterm>pango_ft2_render_layout <LINK LINKEND="REFSTD.libpangoft2.1.0.2">[Pango 1.30]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_ft2_render_layout_line</primary></indexterm>pango_ft2_render_layout_line <LINK LINKEND="REFSTD.libpangoft2.1.0.2">[Pango 1.30]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_ft2_render_layout_line_subpixel</primary></indexterm>pango_ft2_render_layout_line_subpixel <LINK LINKEND="REFSTD.libpangoft2.1.0.2">[Pango 1.30]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_ft2_render_layout_subpixel</primary></indexterm>pango_ft2_render_layout_subpixel <LINK LINKEND="REFSTD.libpangoft2.1.0.2">[Pango 1.30]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_ft2_render_transformed</primary></indexterm>pango_ft2_render_transformed <LINK LINKEND="REFSTD.libpangoft2.1.0.2">[Pango 1.30]</LINK></ENTRY>
<ENTRY></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
An LSB conforming implementation shall provide the generic deprecated functions
for Pango Freetype Fonts and Rendering library specified in <XREF linkend="tbl-libpangoft2-1.0-pango-depints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<NOTE><PARA>These interfaces are deprecated, and applications
should avoid using them.
These interfaces may be withdrawn
in future releases of this specification.
</PARA></NOTE>
<!--libgroupdepints-->
<TABLE id="tbl-libpangoft2-1.0-pango-depints">
<TITLE>libpangoft2-1.0 - Pango Freetype Fonts and Rendering library Deprecated Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>pango_ft2_font_map_create_context</primary></indexterm>pango_ft2_font_map_create_context <LINK LINKEND="REFSTD.libpangoft2.1.0.2">[Pango 1.30]</LINK></ENTRY>
<ENTRY></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>
</SECT2>
</SECT1>
<SECT1 ID=libpangoft2-1.0-ddefs>
<TITLE>Data Definitions for libpangoft2-1.0</TITLE>
<PARA>
This section defines global identifiers and their values that are associated
with interfaces contained in libpangoft2-1.0.
These definitions are organized into groups that
correspond to system headers. This convention is used as a
convenience for the reader, and does not imply the existence
of these headers, or their content.
Where an interface is defined as requiring a particular system header file
all of the data definitions for that system header file presented here shall be in effect.
</PARA>
<PARA>
This section gives data definitions to promote binary application
portability, not to repeat source interface definitions available
elsewhere. System providers and application developers should use this ABI
to supplement - not to replace - source interface definition specifications.
</PARA>
<PARA>
This specification uses the <XREF LINKEND='std.ISOC99'> C Language as the reference programming language, and data definitions are specified in ISO C format. The C language is used here as a convenient notation. Using a C language description of these data objects does not preclude their use by other programming languages.</PARA>
<SECT2>
<TITLE>pango-1.0/pango/pangofc-decoder.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define PANGO_FC_DECODER_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), PANGO_TYPE_FC_DECODER, \
	PangoFcDecoderClass))
#define PANGO_IS_FC_DECODER_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), PANGO_TYPE_FC_DECODER))
#define PANGO_FC_DECODER(object)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((object), PANGO_TYPE_FC_DECODER, \
	PangoFcDecoder))
#define PANGO_IS_FC_DECODER(object)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((object), PANGO_TYPE_FC_DECODER))
#define PANGO_FC_DECODER_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), PANGO_TYPE_FC_DECODER, \
	PangoFcDecoderClass))
#define PANGO_TYPE_FC_DECODER	(pango_fc_decoder_get_type())

typedef struct _PangoFcDecoder {
    GObject parent_instance;
} PangoFcDecoder;
typedef struct _PangoFcDecoderClass {
    GObjectClass parent_class;
    FcCharSet *(*get_charset) (PangoFcDecoder * decoder,
			       PangoFcFont * fcfont);
     PangoGlyph(*get_glyph) (PangoFcDecoder * decoder,
			     PangoFcFont * fcfont, guint32 wc);
    void (*_pango_reserved1) (void);
    void (*_pango_reserved2) (void);
    void (*_pango_reserved3) (void);
    void (*_pango_reserved4) (void);
} PangoFcDecoderClass;
extern FcCharSet *pango_fc_decoder_get_charset(PangoFcDecoder * decoder,
					       PangoFcFont * fcfont);
extern PangoGlyph pango_fc_decoder_get_glyph(PangoFcDecoder * decoder,
					     PangoFcFont * fcfont,
					     guint32 wc);
extern GType pango_fc_decoder_get_type(void);
</SCREEN>
</SECT2>
<SECT2>
<TITLE>pango-1.0/pango/pangofc-fontmap.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define PANGO_FC_FONT_MAP(object)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((object), PANGO_TYPE_FC_FONT_MAP, \
	PangoFcFontMap))
#define PANGO_IS_FC_FONT_MAP(object)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((object), PANGO_TYPE_FC_FONT_MAP))
#define PANGO_TYPE_FC_FONT_MAP	(pango_fc_font_map_get_type ())
#define PANGO_FC_GRAVITY	"pangogravity"
#define PANGO_FC_PRGNAME	"pangoprgname"
#define PANGO_FC_VERSION	"pangoversion"

typedef struct _PangoFcFontMap PangoFcFontMap;
typedef PangoFcDecoder *(*PangoFcDecoderFindFunc) (FcPattern * pattern,
						   gpointer user_data);
typedef struct _PangoFcFontMapClass PangoFcFontMapClass;
extern PangoFontDescription
    *pango_fc_font_description_from_pattern(FcPattern * pattern,
					    gboolean include_size);
extern void pango_fc_font_map_add_decoder_find_func(PangoFcFontMap *
						    fcfontmap,
						    PangoFcDecoderFindFunc
						    findfunc,
						    gpointer user_data,
						    GDestroyNotify
						    dnotify);
extern void pango_fc_font_map_cache_clear(PangoFcFontMap * fcfontmap);
extern PangoFcDecoder *pango_fc_font_map_find_decoder(PangoFcFontMap *
						      fcfontmap,
						      FcPattern * pattern);
extern GType pango_fc_font_map_get_type(void);
</SCREEN>
</SECT2>
<SECT2>
<TITLE>pango-1.0/pango/pangoft2.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define PANGO_FC_FONT(object)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((object), PANGO_TYPE_FC_FONT, \
	PangoFcFont))
#define PANGO_FT2_FONT_MAP(object)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((object), PANGO_TYPE_FT2_FONT_MAP, \
	PangoFT2FontMap))
#define PANGO_IS_FC_FONT(object)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((object), PANGO_TYPE_FC_FONT))
#define PANGO_FT2_IS_FONT_MAP(object)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((object), PANGO_TYPE_FT2_FONT_MAP))
#define PANGO_TYPE_FC_FONT	(pango_fc_font_get_type ())
#define PANGO_TYPE_FT2_FONT_MAP	(pango_ft2_font_map_get_type ())
#define PANGO_RENDER_TYPE_FT2	"PangoRenderFT2"

typedef struct _PangoFT2FontMap PangoFT2FontMap;
typedef void (*PangoFT2SubstituteFunc) (FcPattern * pattern,
					gpointer data);
extern GType pango_fc_font_get_type(void);
extern FT_Face pango_fc_font_lock_face(PangoFcFont * font);
extern void pango_fc_font_unlock_face(PangoFcFont * font);
extern PangoContext *pango_ft2_font_map_create_context(PangoFT2FontMap *
						       fontmap);
extern GType pango_ft2_font_map_get_type(void);
extern PangoFontMap *pango_ft2_font_map_new(void);
extern void pango_ft2_font_map_set_default_substitute(PangoFT2FontMap *
						      fontmap,
						      PangoFT2SubstituteFunc
						      func, gpointer data,
						      GDestroyNotify
						      notify);
extern void pango_ft2_font_map_set_resolution(PangoFT2FontMap * fontmap,
					      double dpi_x, double dpi_y);
extern void pango_ft2_font_map_substitute_changed(PangoFT2FontMap *
						  fontmap);
extern void pango_ft2_render(FT_Bitmap * bitmap, PangoFont * font,
			     PangoGlyphString * glyphs, gint x, gint y);
extern void pango_ft2_render_layout(FT_Bitmap * bitmap,
				    PangoLayout * layout, int x, int y);
extern void pango_ft2_render_layout_line(FT_Bitmap * bitmap,
					 PangoLayoutLine * line, int x,
					 int y);
extern void pango_ft2_render_layout_line_subpixel(FT_Bitmap * bitmap,
						  PangoLayoutLine * line,
						  int x, int y);
extern void pango_ft2_render_layout_subpixel(FT_Bitmap * bitmap,
					     PangoLayout * layout, int x,
					     int y);
extern void pango_ft2_render_transformed(FT_Bitmap * bitmap,
					 const PangoMatrix * matrix,
					 PangoFont * font,
					 PangoGlyphString * glyphs, int x,
					 int y);
</SCREEN>
</SECT2>
</SECT1>
<!-- End of text generated from database -->

<!-- Start of generated text - do not edit! -->
<!-- generated from the LSB specification database by mklibspec -->
<SECT1 ID=libgdk-pixbuf-2.0>
<TITLE>Interfaces for libgdk_pixbuf-2.0</TITLE>
<PARA>
<XREF LINKEND="lib-libgdk-pixbuf-2.0-def"> defines the library name and shared object name
for the libgdk_pixbuf-2.0 library
</PARA>
<TABLE id="lib-libgdk-pixbuf-2.0-def">
<TITLE>libgdk_pixbuf-2.0 Definition</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Library:</ENTRY>
<ENTRY>libgdk_pixbuf-2.0</ENTRY>
</ROW>
<ROW>
<ENTRY>SONAME:</ENTRY>
<ENTRY>libgdk_pixbuf-2.0.so.0</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The behavior of the interfaces in this library is specified by the following specifications:<SIMPLELIST COLUMNS=1>
<MEMBER ID='REFSTD.libgdk.pixbuf.2.0.1'>
[Gdk-pixbuf 2.26] <XREF LINKEND="std.Gdk.pixbuf">
</MEMBER>
<MEMBER ID='REFSTD.libgdk.pixbuf.2.0.2'>
[Gobject 2.32] <XREF LINKEND="std.Gobject">
</MEMBER>
</SIMPLELIST>
</PARA>
<!-- debug: database interface name GDK pixbuf rendering on drawables library -->
<SECT2>
<!--libgroup-->
<TITLE>GDK pixbuf rendering on drawables library</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Interfaces for GDK pixbuf rendering on drawables library</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic functions
for GDK pixbuf rendering on drawables library specified in <XREF linkend="tbl-libgdk-pixbuf-2.0-gdk-p-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<TABLE id="tbl-libgdk-pixbuf-2.0-gdk-p-ints">
<TITLE>libgdk_pixbuf-2.0 - GDK pixbuf rendering on drawables library Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>gdk_colorspace_get_type</primary></indexterm>gdk_colorspace_get_type <LINK LINKEND="REFSTD.libgdk.pixbuf.2.0.2">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_interp_type_get_type</primary></indexterm>gdk_interp_type_get_type <LINK LINKEND="REFSTD.libgdk.pixbuf.2.0.2">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_pixbuf_alpha_mode_get_type</primary></indexterm>gdk_pixbuf_alpha_mode_get_type <LINK LINKEND="REFSTD.libgdk.pixbuf.2.0.2">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_pixbuf_animation_get_type</primary></indexterm>gdk_pixbuf_animation_get_type <LINK LINKEND="REFSTD.libgdk.pixbuf.2.0.2">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_pixbuf_animation_iter_get_type</primary></indexterm>gdk_pixbuf_animation_iter_get_type <LINK LINKEND="REFSTD.libgdk.pixbuf.2.0.2">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_pixbuf_animation_ref</primary></indexterm>gdk_pixbuf_animation_ref <LINK LINKEND="REFSTD.libgdk.pixbuf.2.0.1">[Gdk-pixbuf 2.26]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_pixbuf_animation_unref</primary></indexterm>gdk_pixbuf_animation_unref <LINK LINKEND="REFSTD.libgdk.pixbuf.2.0.1">[Gdk-pixbuf 2.26]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_pixbuf_apply_embedded_orientation</primary></indexterm>gdk_pixbuf_apply_embedded_orientation <LINK LINKEND="REFSTD.libgdk.pixbuf.2.0.1">[Gdk-pixbuf 2.26]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_pixbuf_error_get_type</primary></indexterm>gdk_pixbuf_error_get_type <LINK LINKEND="REFSTD.libgdk.pixbuf.2.0.2">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_pixbuf_format_copy</primary></indexterm>gdk_pixbuf_format_copy <LINK LINKEND="REFSTD.libgdk.pixbuf.2.0.1">[Gdk-pixbuf 2.26]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_pixbuf_format_free</primary></indexterm>gdk_pixbuf_format_free <LINK LINKEND="REFSTD.libgdk.pixbuf.2.0.1">[Gdk-pixbuf 2.26]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_pixbuf_format_get_type</primary></indexterm>gdk_pixbuf_format_get_type <LINK LINKEND="REFSTD.libgdk.pixbuf.2.0.2">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_pixbuf_get_byte_length</primary></indexterm>gdk_pixbuf_get_byte_length <LINK LINKEND="REFSTD.libgdk.pixbuf.2.0.1">[Gdk-pixbuf 2.26]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_pixbuf_get_pixels_with_length</primary></indexterm>gdk_pixbuf_get_pixels_with_length <LINK LINKEND="REFSTD.libgdk.pixbuf.2.0.1">[Gdk-pixbuf 2.26]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_pixbuf_get_type</primary></indexterm>gdk_pixbuf_get_type <LINK LINKEND="REFSTD.libgdk.pixbuf.2.0.2">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_pixbuf_loader_get_type</primary></indexterm>gdk_pixbuf_loader_get_type <LINK LINKEND="REFSTD.libgdk.pixbuf.2.0.2">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_pixbuf_new_from_resource</primary></indexterm>gdk_pixbuf_new_from_resource <LINK LINKEND="REFSTD.libgdk.pixbuf.2.0.1">[Gdk-pixbuf 2.26]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_pixbuf_new_from_resource_at_scale</primary></indexterm>gdk_pixbuf_new_from_resource_at_scale <LINK LINKEND="REFSTD.libgdk.pixbuf.2.0.1">[Gdk-pixbuf 2.26]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_pixbuf_new_from_stream</primary></indexterm>gdk_pixbuf_new_from_stream <LINK LINKEND="REFSTD.libgdk.pixbuf.2.0.1">[Gdk-pixbuf 2.26]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_pixbuf_new_from_stream_async</primary></indexterm>gdk_pixbuf_new_from_stream_async <LINK LINKEND="REFSTD.libgdk.pixbuf.2.0.1">[Gdk-pixbuf 2.26]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_pixbuf_new_from_stream_at_scale</primary></indexterm>gdk_pixbuf_new_from_stream_at_scale <LINK LINKEND="REFSTD.libgdk.pixbuf.2.0.1">[Gdk-pixbuf 2.26]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_pixbuf_new_from_stream_at_scale_async</primary></indexterm>gdk_pixbuf_new_from_stream_at_scale_async <LINK LINKEND="REFSTD.libgdk.pixbuf.2.0.1">[Gdk-pixbuf 2.26]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_pixbuf_new_from_stream_finish</primary></indexterm>gdk_pixbuf_new_from_stream_finish <LINK LINKEND="REFSTD.libgdk.pixbuf.2.0.1">[Gdk-pixbuf 2.26]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_pixbuf_ref</primary></indexterm>gdk_pixbuf_ref <LINK LINKEND="REFSTD.libgdk.pixbuf.2.0.1">[Gdk-pixbuf 2.26]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_pixbuf_rotation_get_type</primary></indexterm>gdk_pixbuf_rotation_get_type <LINK LINKEND="REFSTD.libgdk.pixbuf.2.0.2">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_pixbuf_save_to_stream</primary></indexterm>gdk_pixbuf_save_to_stream <LINK LINKEND="REFSTD.libgdk.pixbuf.2.0.1">[Gdk-pixbuf 2.26]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_pixbuf_save_to_stream_async</primary></indexterm>gdk_pixbuf_save_to_stream_async <LINK LINKEND="REFSTD.libgdk.pixbuf.2.0.1">[Gdk-pixbuf 2.26]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_pixbuf_save_to_stream_finish</primary></indexterm>gdk_pixbuf_save_to_stream_finish <LINK LINKEND="REFSTD.libgdk.pixbuf.2.0.1">[Gdk-pixbuf 2.26]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_pixbuf_simple_anim_get_loop</primary></indexterm>gdk_pixbuf_simple_anim_get_loop <LINK LINKEND="REFSTD.libgdk.pixbuf.2.0.1">[Gdk-pixbuf 2.26]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_pixbuf_simple_anim_get_type</primary></indexterm>gdk_pixbuf_simple_anim_get_type <LINK LINKEND="REFSTD.libgdk.pixbuf.2.0.2">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_pixbuf_simple_anim_iter_get_type</primary></indexterm>gdk_pixbuf_simple_anim_iter_get_type <LINK LINKEND="REFSTD.libgdk.pixbuf.2.0.2">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_pixbuf_simple_anim_set_loop</primary></indexterm>gdk_pixbuf_simple_anim_set_loop <LINK LINKEND="REFSTD.libgdk.pixbuf.2.0.1">[Gdk-pixbuf 2.26]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_pixbuf_unref</primary></indexterm>gdk_pixbuf_unref <LINK LINKEND="REFSTD.libgdk.pixbuf.2.0.1">[Gdk-pixbuf 2.26]</LINK></ENTRY>
<ENTRY></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
An LSB conforming implementation shall provide the generic deprecated functions
for GDK pixbuf rendering on drawables library specified in <XREF linkend="tbl-libgdk-pixbuf-2.0-gdk-p-depints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<NOTE><PARA>These interfaces are deprecated, and applications
should avoid using them.
These interfaces may be withdrawn
in future releases of this specification.
</PARA></NOTE>
<!--libgroupdepints-->
<TABLE id="tbl-libgdk-pixbuf-2.0-gdk-p-depints">
<TITLE>libgdk_pixbuf-2.0 - GDK pixbuf rendering on drawables library Deprecated Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>gdk_pixbuf_animation_ref</primary></indexterm>gdk_pixbuf_animation_ref <LINK LINKEND="REFSTD.libgdk.pixbuf.2.0.1">[Gdk-pixbuf 2.26]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_pixbuf_animation_unref</primary></indexterm>gdk_pixbuf_animation_unref <LINK LINKEND="REFSTD.libgdk.pixbuf.2.0.1">[Gdk-pixbuf 2.26]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_pixbuf_ref</primary></indexterm>gdk_pixbuf_ref <LINK LINKEND="REFSTD.libgdk.pixbuf.2.0.1">[Gdk-pixbuf 2.26]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_pixbuf_unref</primary></indexterm>gdk_pixbuf_unref <LINK LINKEND="REFSTD.libgdk.pixbuf.2.0.1">[Gdk-pixbuf 2.26]</LINK></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>
</SECT2>
</SECT1>
<SECT1 ID=libgdk-pixbuf-2.0-ddefs>
<TITLE>Data Definitions for libgdk_pixbuf-2.0</TITLE>
<PARA>
This section defines global identifiers and their values that are associated
with interfaces contained in libgdk_pixbuf-2.0.
These definitions are organized into groups that
correspond to system headers. This convention is used as a
convenience for the reader, and does not imply the existence
of these headers, or their content.
Where an interface is defined as requiring a particular system header file
all of the data definitions for that system header file presented here shall be in effect.
</PARA>
<PARA>
This section gives data definitions to promote binary application
portability, not to repeat source interface definitions available
elsewhere. System providers and application developers should use this ABI
to supplement - not to replace - source interface definition specifications.
</PARA>
<PARA>
This specification uses the <XREF LINKEND='std.ISOC99'> C Language as the reference programming language, and data definitions are specified in ISO C format. The C language is used here as a convenient notation. Using a C language description of these data objects does not preclude their use by other programming languages.</PARA>
<SECT2>
<TITLE>gtk-2.0/gdk-pixbuf/gdk-pixbuf.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define GDK_TYPE_PIXBUF_ANIMATION_ITER	 \
	(gdk_pixbuf_animation_iter_get_type ())
#define GDK_PIXBUF_LOADER_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GDK_TYPE_PIXBUF_LOADER, \
	GdkPixbufLoaderClass))
#define GDK_IS_PIXBUF_LOADER_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GDK_TYPE_PIXBUF_LOADER))
#define GDK_PIXBUF_LOADER(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GDK_TYPE_PIXBUF_LOADER, \
	GdkPixbufLoader))
#define GDK_PIXBUF(object)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((object), GDK_TYPE_PIXBUF, GdkPixbuf))
#define GDK_PIXBUF_ANIMATION(object)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((object), GDK_TYPE_PIXBUF_ANIMATION, \
	GdkPixbufAnimation))
#define GDK_PIXBUF_ANIMATION_ITER(object)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((object), \
	GDK_TYPE_PIXBUF_ANIMATION_ITER, GdkPixbufAnimationIter))
#define GDK_IS_PIXBUF_LOADER(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GDK_TYPE_PIXBUF_LOADER))
#define GDK_IS_PIXBUF(object)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((object), GDK_TYPE_PIXBUF))
#define GDK_IS_PIXBUF_ANIMATION(object)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((object), GDK_TYPE_PIXBUF_ANIMATION))
#define GDK_IS_PIXBUF_ANIMATION_ITER(object)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((object), \
	GDK_TYPE_PIXBUF_ANIMATION_ITER))
#define GDK_PIXBUF_LOADER_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GDK_TYPE_PIXBUF_LOADER, \
	GdkPixbufLoaderClass))
#define GDK_PIXBUF_VERSION	"2.26.0"
#define GDK_PIXBUF_MICRO	(0)
#define GDK_PIXBUF_MAJOR	(2)
#define GDK_PIXBUF_MINOR	(26)
#define GDK_TYPE_COLORSPACE	(gdk_colorspace_get_type())
#define GDK_TYPE_INTERP_TYPE	(gdk_interp_type_get_type())
#define GDK_TYPE_PIXBUF_ALPHA_MODE	(gdk_pixbuf_alpha_mode_get_type())
#define GDK_TYPE_PIXBUF_ANIMATION	(gdk_pixbuf_animation_get_type ())
#define GDK_TYPE_PIXBUF_ERROR	(gdk_pixbuf_error_get_type())
#define GDK_TYPE_PIXBUF	(gdk_pixbuf_get_type ())
#define GDK_TYPE_PIXBUF_LOADER	(gdk_pixbuf_loader_get_type ())
#define GDK_TYPE_PIXBUF_ROTATION	(gdk_pixbuf_rotation_get_type())
#define GDK_TYPE_PIXBUF_SIMPLE_ANIM	(gdk_pixbuf_simple_anim_get_type ())
#define GDK_PIXBUF_SIMPLE_ANIM_CLASS(klass)	(G_TYPE_CHECK_CLASS_CAST ((klass), GDK_TYPE_PIXBUF_SIMPLE_ANIM, GdkPixbufSimpleAnimClass))

#define GDK_IS_PIXBUF_SIMPLE_ANIM_CLASS(klass)	(G_TYPE_CHECK_CLASS_TYPE ((klass), GDK_TYPE_PIXBUF_SIMPLE_ANIM))
#define GDK_PIXBUF_SIMPLE_ANIM(object)	(G_TYPE_CHECK_INSTANCE_CAST ((object), GDK_TYPE_PIXBUF_SIMPLE_ANIM, GdkPixbufSimpleAnim))
#define GDK_IS_PIXBUF_SIMPLE_ANIM(object)	(G_TYPE_CHECK_INSTANCE_TYPE ((object), GDK_TYPE_PIXBUF_SIMPLE_ANIM))
#define GDK_PIXBUF_SIMPLE_ANIM_GET_CLASS(obj)	(G_TYPE_INSTANCE_GET_CLASS ((obj), GDK_TYPE_PIXBUF_SIMPLE_ANIM, GdkPixbufSimpleAnimClass))
#define GDK_PIXBUF_VAR	extern
#define GDK_PIXBUF_ERROR	gdk_pixbuf_error_quark ()

typedef struct _GdkPixbuf GdkPixbuf;
typedef gboolean(*GdkPixbufSaveFunc) (const gchar *, gsize, GError * *,
				      gpointer);
typedef struct _GdkPixbufLoader {
    GObject parent_instance;
    gpointer priv;
} GdkPixbufLoader;
typedef struct _GdkPixbufFormat GdkPixbufFormat;
typedef enum {
    GDK_INTERP_NEAREST = 0,
    GDK_INTERP_TILES = 1,
    GDK_INTERP_BILINEAR = 2,
    GDK_INTERP_HYPER = 3
} GdkInterpType;
typedef enum {
    GDK_COLORSPACE_RGB = 0
} GdkColorspace;
typedef void (*GdkPixbufDestroyNotify) (guchar *, gpointer);
typedef struct _GdkPixbufAnimationIter GdkPixbufAnimationIter;
typedef struct _GdkPixbufAnimation GdkPixbufAnimation;
typedef enum {
    GDK_PIXBUF_ROTATE_NONE = 0,
    GDK_PIXBUF_ROTATE_COUNTERCLOCKWISE = 90,
    GDK_PIXBUF_ROTATE_UPSIDEDOWN = 180,
    GDK_PIXBUF_ROTATE_CLOCKWISE = 270
} GdkPixbufRotation;
typedef struct _GdkPixbufLoaderClass {
    GObjectClass parent_class;
    void (*size_prepared) (GdkPixbufLoader *, int, int);
    void (*area_prepared) (GdkPixbufLoader *);
    void (*area_updated) (GdkPixbufLoader *, int, int, int, int);
    void (*closed) (GdkPixbufLoader *);
} GdkPixbufLoaderClass;
typedef enum {
    GDK_PIXBUF_ERROR_CORRUPT_IMAGE,
    GDK_PIXBUF_ERROR_INSUFFICIENT_MEMORY,
    GDK_PIXBUF_ERROR_BAD_OPTION,
    GDK_PIXBUF_ERROR_UNKNOWN_TYPE,
    GDK_PIXBUF_ERROR_UNSUPPORTED_OPERATION,
    GDK_PIXBUF_ERROR_FAILED
} GdkPixbufError;
typedef enum {
    GDK_PIXBUF_ALPHA_BILEVEL,
    GDK_PIXBUF_ALPHA_FULL
} GdkPixbufAlphaMode;
typedef struct _GdkPixbufSimpleAnim GdkPixbufSimpleAnim;
typedef struct _GdkPixbufSimpleAnimClass GdkPixbufSimpleAnimClass;
extern GType gdk_colorspace_get_type(void);
extern GType gdk_interp_type_get_type(void);
extern GdkPixbuf *gdk_pixbuf_add_alpha(const GdkPixbuf * pixbuf,
				       gboolean substitute_color, guchar r,
				       guchar g, guchar b);
extern GType gdk_pixbuf_alpha_mode_get_type(void);
extern int gdk_pixbuf_animation_get_height(GdkPixbufAnimation * animation);
extern GdkPixbufAnimationIter
    *gdk_pixbuf_animation_get_iter(GdkPixbufAnimation * animation,
				   const GTimeVal * start_time);
extern GdkPixbuf *gdk_pixbuf_animation_get_static_image(GdkPixbufAnimation
							* animation);
extern GType gdk_pixbuf_animation_get_type(void);
extern int gdk_pixbuf_animation_get_width(GdkPixbufAnimation * animation);
extern gboolean gdk_pixbuf_animation_is_static_image(GdkPixbufAnimation *
						     animation);
extern gboolean gdk_pixbuf_animation_iter_advance(GdkPixbufAnimationIter *
						  iter,
						  const GTimeVal *
						  current_time);
extern int gdk_pixbuf_animation_iter_get_delay_time(GdkPixbufAnimationIter
						    * iter);
extern GdkPixbuf
    *gdk_pixbuf_animation_iter_get_pixbuf(GdkPixbufAnimationIter * iter);
extern GType gdk_pixbuf_animation_iter_get_type(void);
extern gboolean
gdk_pixbuf_animation_iter_on_currently_loading_frame(GdkPixbufAnimationIter
						     * iter);
extern GdkPixbufAnimation *gdk_pixbuf_animation_new_from_file(const char
							      *filename,
							      GError *
							      *error);
extern GdkPixbufAnimation *gdk_pixbuf_animation_ref(GdkPixbufAnimation *
						    animation);
extern void gdk_pixbuf_animation_unref(GdkPixbufAnimation * animation);
extern GdkPixbuf *gdk_pixbuf_apply_embedded_orientation(GdkPixbuf * src);
extern void gdk_pixbuf_composite(const GdkPixbuf * src, GdkPixbuf * dest,
				 int dest_x, int dest_y, int dest_width,
				 int dest_height, double offset_x,
				 double offset_y, double scale_x,
				 double scale_y, GdkInterpType interp_type,
				 int overall_alpha);
extern void gdk_pixbuf_composite_color(const GdkPixbuf * src,
				       GdkPixbuf * dest, int dest_x,
				       int dest_y, int dest_width,
				       int dest_height, double offset_x,
				       double offset_y, double scale_x,
				       double scale_y,
				       GdkInterpType interp_type,
				       int overall_alpha, int check_x,
				       int check_y, int check_size,
				       guint32 color1, guint32 color2);
extern GdkPixbuf *gdk_pixbuf_composite_color_simple(const GdkPixbuf * src,
						    int dest_width,
						    int dest_height,
						    GdkInterpType
						    interp_type,
						    int overall_alpha,
						    int check_size,
						    guint32 color1,
						    guint32 color2);
extern GdkPixbuf *gdk_pixbuf_copy(const GdkPixbuf * pixbuf);
extern void gdk_pixbuf_copy_area(const GdkPixbuf * src_pixbuf, int src_x,
				 int src_y, int width, int height,
				 GdkPixbuf * dest_pixbuf, int dest_x,
				 int dest_y);
extern GType gdk_pixbuf_error_get_type(void);
extern GQuark gdk_pixbuf_error_quark(void);
extern void gdk_pixbuf_fill(GdkPixbuf * pixbuf, guint32 pixel);
extern GdkPixbuf *gdk_pixbuf_flip(const GdkPixbuf * src,
				  gboolean horizontal);
extern GdkPixbufFormat *gdk_pixbuf_format_copy(const GdkPixbufFormat *
					       format);
extern void gdk_pixbuf_format_free(GdkPixbufFormat * format);
extern gchar *gdk_pixbuf_format_get_description(GdkPixbufFormat * format);
extern gchar **gdk_pixbuf_format_get_extensions(GdkPixbufFormat * format);
extern gchar *gdk_pixbuf_format_get_license(GdkPixbufFormat * format);
extern gchar **gdk_pixbuf_format_get_mime_types(GdkPixbufFormat * format);
extern gchar *gdk_pixbuf_format_get_name(GdkPixbufFormat * format);
extern GType gdk_pixbuf_format_get_type(void);
extern gboolean gdk_pixbuf_format_is_disabled(GdkPixbufFormat * format);
extern gboolean gdk_pixbuf_format_is_scalable(GdkPixbufFormat * format);
extern gboolean gdk_pixbuf_format_is_writable(GdkPixbufFormat * format);
extern void gdk_pixbuf_format_set_disabled(GdkPixbufFormat * format,
					   gboolean disabled);
extern int gdk_pixbuf_get_bits_per_sample(const GdkPixbuf * pixbuf);
extern gsize gdk_pixbuf_get_byte_length(const GdkPixbuf * pixbuf);
extern GdkColorspace gdk_pixbuf_get_colorspace(const GdkPixbuf * pixbuf);
extern GdkPixbufFormat *gdk_pixbuf_get_file_info(const gchar * filename,
						 gint * width,
						 gint * height);
extern GSList *gdk_pixbuf_get_formats(void);
extern gboolean gdk_pixbuf_get_has_alpha(const GdkPixbuf * pixbuf);
extern int gdk_pixbuf_get_height(const GdkPixbuf * pixbuf);
extern int gdk_pixbuf_get_n_channels(const GdkPixbuf * pixbuf);
extern const gchar *gdk_pixbuf_get_option(GdkPixbuf * pixbuf,
					  const gchar * key);
extern guchar *gdk_pixbuf_get_pixels(const GdkPixbuf * pixbuf);
extern guchar *gdk_pixbuf_get_pixels_with_length(const GdkPixbuf * pixbuf,
						 guint * length);
extern int gdk_pixbuf_get_rowstride(const GdkPixbuf * pixbuf);
extern GType gdk_pixbuf_get_type(void);
extern int gdk_pixbuf_get_width(const GdkPixbuf * pixbuf);
extern gboolean gdk_pixbuf_loader_close(GdkPixbufLoader * loader,
					GError * *error);
extern GdkPixbufAnimation *gdk_pixbuf_loader_get_animation(GdkPixbufLoader
							   * loader);
extern GdkPixbufFormat *gdk_pixbuf_loader_get_format(GdkPixbufLoader *
						     loader);
extern GdkPixbuf *gdk_pixbuf_loader_get_pixbuf(GdkPixbufLoader * loader);
extern GType gdk_pixbuf_loader_get_type(void);
extern GdkPixbufLoader *gdk_pixbuf_loader_new(void);
extern GdkPixbufLoader *gdk_pixbuf_loader_new_with_mime_type(const char
							     *mime_type,
							     GError *
							     *error);
extern GdkPixbufLoader *gdk_pixbuf_loader_new_with_type(const char
							*image_type,
							GError * *error);
extern void gdk_pixbuf_loader_set_size(GdkPixbufLoader * loader, int width,
				       int height);
extern gboolean gdk_pixbuf_loader_write(GdkPixbufLoader * loader,
					const guchar * buf, gsize count,
					GError * *error);
extern const guint gdk_pixbuf_major_version;
extern const guint gdk_pixbuf_micro_version;
extern const guint gdk_pixbuf_minor_version;
extern GdkPixbuf *gdk_pixbuf_new(GdkColorspace colorspace,
				 gboolean has_alpha, int bits_per_sample,
				 int width, int height);
extern GdkPixbuf *gdk_pixbuf_new_from_data(const guchar * data,
					   GdkColorspace colorspace,
					   gboolean has_alpha,
					   int bits_per_sample, int width,
					   int height, int rowstride,
					   GdkPixbufDestroyNotify
					   destroy_fn,
					   gpointer destroy_fn_data);
extern GdkPixbuf *gdk_pixbuf_new_from_file(const char *filename,
					   GError * *error);
extern GdkPixbuf *gdk_pixbuf_new_from_file_at_scale(const char *filename,
						    int width, int height,
						    gboolean
						    preserve_aspect_ratio,
						    GError * *error);
extern GdkPixbuf *gdk_pixbuf_new_from_file_at_size(const char *filename,
						   int width, int height,
						   GError * *error);
extern GdkPixbuf *gdk_pixbuf_new_from_inline(gint data_length,
					     const guint8 * data,
					     gboolean copy_pixels,
					     GError * *error);
extern GdkPixbuf *gdk_pixbuf_new_from_resource(const char *resource_path,
					       GError * *error);
extern GdkPixbuf *gdk_pixbuf_new_from_resource_at_scale(const char
							*resource_path,
							int width,
							int height,
							gboolean
							preserve_aspect_ratio,
							GError * *error);
extern GdkPixbuf *gdk_pixbuf_new_from_stream(GInputStream * stream,
					     GCancellable * cancellable,
					     GError * *error);
extern void gdk_pixbuf_new_from_stream_async(GInputStream * stream,
					     GCancellable * cancellable,
					     GAsyncReadyCallback callback,
					     gpointer user_data);
extern GdkPixbuf *gdk_pixbuf_new_from_stream_at_scale(GInputStream *
						      stream, gint width,
						      gint height,
						      gboolean
						      preserve_aspect_ratio,
						      GCancellable *
						      cancellable,
						      GError * *error);
extern void gdk_pixbuf_new_from_stream_at_scale_async(GInputStream *
						      stream, gint width,
						      gint height,
						      gboolean
						      preserve_aspect_ratio,
						      GCancellable *
						      cancellable,
						      GAsyncReadyCallback
						      callback,
						      gpointer user_data);
extern GdkPixbuf *gdk_pixbuf_new_from_stream_finish(GAsyncResult *
						    async_result,
						    GError * *error);
extern GdkPixbuf *gdk_pixbuf_new_from_xpm_data(const char **data);
extern GdkPixbuf *gdk_pixbuf_new_subpixbuf(GdkPixbuf * src_pixbuf,
					   int src_x, int src_y, int width,
					   int height);
extern GdkPixbuf *gdk_pixbuf_ref(GdkPixbuf * pixbuf);
extern GdkPixbuf *gdk_pixbuf_rotate_simple(const GdkPixbuf * src,
					   GdkPixbufRotation angle);
extern GType gdk_pixbuf_rotation_get_type(void);
extern void gdk_pixbuf_saturate_and_pixelate(const GdkPixbuf * src,
					     GdkPixbuf * dest,
					     gfloat saturation,
					     gboolean pixelate);
extern gboolean gdk_pixbuf_save(GdkPixbuf * pixbuf, const char *filename,
				const char *type, GError * *error, ...);
extern gboolean gdk_pixbuf_save_to_buffer(GdkPixbuf * pixbuf,
					  gchar * *buffer,
					  gsize * buffer_size,
					  const char *type,
					  GError * *error, ...);
extern gboolean gdk_pixbuf_save_to_bufferv(GdkPixbuf * pixbuf,
					   gchar * *buffer,
					   gsize * buffer_size,
					   const char *type,
					   char **option_keys,
					   char **option_values,
					   GError * *error);
extern gboolean gdk_pixbuf_save_to_callback(GdkPixbuf * pixbuf,
					    GdkPixbufSaveFunc save_func,
					    gpointer user_data,
					    const char *type,
					    GError * *error, ...);
extern gboolean gdk_pixbuf_save_to_callbackv(GdkPixbuf * pixbuf,
					     GdkPixbufSaveFunc save_func,
					     gpointer user_data,
					     const char *type,
					     char **option_keys,
					     char **option_values,
					     GError * *error);
extern gboolean gdk_pixbuf_save_to_stream(GdkPixbuf * pixbuf,
					  GOutputStream * stream,
					  const char *type,
					  GCancellable * cancellable,
					  GError * *error, ...);
extern void gdk_pixbuf_save_to_stream_async(GdkPixbuf * pixbuf,
					    GOutputStream * stream,
					    const char *type,
					    GCancellable * cancellable,
					    GAsyncReadyCallback callback,
					    gpointer user_data, ...);
extern gboolean gdk_pixbuf_save_to_stream_finish(GAsyncResult *
						 async_result,
						 GError * *error);
extern gboolean gdk_pixbuf_savev(GdkPixbuf * pixbuf, const char *filename,
				 const char *type, char **option_keys,
				 char **option_values, GError * *error);
extern void gdk_pixbuf_scale(const GdkPixbuf * src, GdkPixbuf * dest,
			     int dest_x, int dest_y, int dest_width,
			     int dest_height, double offset_x,
			     double offset_y, double scale_x,
			     double scale_y, GdkInterpType interp_type);
extern GdkPixbuf *gdk_pixbuf_scale_simple(const GdkPixbuf * src,
					  int dest_width, int dest_height,
					  GdkInterpType interp_type);
extern void gdk_pixbuf_simple_anim_add_frame(GdkPixbufSimpleAnim *
					     animation,
					     GdkPixbuf * pixbuf);
extern gboolean gdk_pixbuf_simple_anim_get_loop(GdkPixbufSimpleAnim *
						animation);
extern GType gdk_pixbuf_simple_anim_get_type(void);
extern GType gdk_pixbuf_simple_anim_iter_get_type(void);
extern GdkPixbufSimpleAnim *gdk_pixbuf_simple_anim_new(gint width,
						       gint height,
						       gfloat rate);
extern void gdk_pixbuf_simple_anim_set_loop(GdkPixbufSimpleAnim *
					    animation, gboolean loop);
extern void gdk_pixbuf_unref(GdkPixbuf * pixbuf);
extern const char *gdk_pixbuf_version;
</SCREEN>
</SECT2>
<SECT2>
<TITLE>gtk-2.0/gdk-pixbuf/gdk-pixdata.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define GDK_PIXBUF_MAGIC_NUMBER	(0x47646b50)
#define GDK_PIXDATA_HEADER_LENGTH	(4 + 4 + 4 + 4 + 4 + 4)

typedef struct _GdkPixdata {
    guint32 magic;
    gint32 length;
    guint32 pixdata_type;
    guint32 rowstride;
    guint32 width;
    guint32 height;
    guint8 *pixel_data;
} GdkPixdata;
typedef enum {
    GDK_PIXDATA_DUMP_PIXDATA_STREAM = 0,
    GDK_PIXDATA_DUMP_PIXDATA_STRUCT = 1,
    GDK_PIXDATA_DUMP_MACROS = 2,
    GDK_PIXDATA_DUMP_GTYPES = 0,
    GDK_PIXDATA_DUMP_CTYPES = 256,
    GDK_PIXDATA_DUMP_STATIC = 512,
    GDK_PIXDATA_DUMP_CONST = 1024,
    GDK_PIXDATA_DUMP_RLE_DECODER = 65536
} GdkPixdataDumpType;
typedef enum {
    GDK_PIXDATA_COLOR_TYPE_RGB = 0x01,
    GDK_PIXDATA_COLOR_TYPE_RGBA = 0x02,
    GDK_PIXDATA_COLOR_TYPE_MASK = 0xff,
    GDK_PIXDATA_SAMPLE_WIDTH_8 = 0x01 &lt;&lt; 16,
    GDK_PIXDATA_SAMPLE_WIDTH_MASK = 0x0f &lt;&lt; 16,
    GDK_PIXDATA_ENCODING_RAW = 0x01 &lt;&lt; 24,
    GDK_PIXDATA_ENCODING_RLE = 0x02 &lt;&lt; 24,
    GDK_PIXDATA_ENCODING_MASK = 0x0f &lt;&lt; 24
} GdkPixdataType;
extern GdkPixbuf *gdk_pixbuf_from_pixdata(const GdkPixdata * pixdata,
					  gboolean copy_pixels,
					  GError * *error);
extern gboolean gdk_pixdata_deserialize(GdkPixdata * pixdata,
					guint stream_length,
					const guint8 * stream,
					GError * *error);
extern gpointer gdk_pixdata_from_pixbuf(GdkPixdata * pixdata,
					const GdkPixbuf * pixbuf,
					gboolean use_rle);
extern guint8 *gdk_pixdata_serialize(const GdkPixdata * pixdata,
				     guint * stream_length_p);
extern GString *gdk_pixdata_to_csource(GdkPixdata * pixdata,
				       const gchar * name,
				       GdkPixdataDumpType dump_type);
</SCREEN>
</SECT2>
</SECT1>
<!-- End of text generated from database -->

<!-- Start of generated text - do not edit! -->
<!-- generated from the LSB specification database by mklibspec -->
<SECT1 ID=libgdk-pixbuf-xlib-2.0>
<TITLE>Interfaces for libgdk_pixbuf_xlib-2.0</TITLE>
<PARA>
<XREF LINKEND="lib-libgdk-pixbuf-xlib-2.0-def"> defines the library name and shared object name
for the libgdk_pixbuf_xlib-2.0 library
</PARA>
<TABLE id="lib-libgdk-pixbuf-xlib-2.0-def">
<TITLE>libgdk_pixbuf_xlib-2.0 Definition</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Library:</ENTRY>
<ENTRY>libgdk_pixbuf_xlib-2.0</ENTRY>
</ROW>
<ROW>
<ENTRY>SONAME:</ENTRY>
<ENTRY>libgdk_pixbuf_xlib-2.0.so.0</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The behavior of the interfaces in this library is specified by the following specifications:<SIMPLELIST COLUMNS=1>
<MEMBER ID='REFSTD.libgdk.pixbuf.xlib.2.0.1'>
[Gdk-pixbuf 2.26] <XREF LINKEND="std.Gdk.pixbuf">
</MEMBER>
</SIMPLELIST>
</PARA>
<!-- debug: database interface name GDK pixbuf rendering to an X drawable library -->
<SECT2>
<!--libgroup-->
<TITLE>GDK pixbuf rendering to an X drawable library</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Interfaces for GDK pixbuf rendering to an X drawable library</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic functions
for GDK pixbuf rendering to an X drawable library specified in <XREF linkend="tbl-libgdk-pixbuf-xlib-2.0-gdk-p-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<TABLE id="tbl-libgdk-pixbuf-xlib-2.0-gdk-p-ints">
<TITLE>libgdk_pixbuf_xlib-2.0 - GDK pixbuf rendering to an X drawable library Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>gdk_pixbuf_xlib_get_from_drawable</primary></indexterm>gdk_pixbuf_xlib_get_from_drawable <LINK LINKEND="REFSTD.libgdk.pixbuf.xlib.2.0.1">[Gdk-pixbuf 2.26]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_pixbuf_xlib_init</primary></indexterm>gdk_pixbuf_xlib_init <LINK LINKEND="REFSTD.libgdk.pixbuf.xlib.2.0.1">[Gdk-pixbuf 2.26]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_pixbuf_xlib_init_with_depth</primary></indexterm>gdk_pixbuf_xlib_init_with_depth <LINK LINKEND="REFSTD.libgdk.pixbuf.xlib.2.0.1">[Gdk-pixbuf 2.26]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_pixbuf_xlib_render_pixmap_and_mask</primary></indexterm>gdk_pixbuf_xlib_render_pixmap_and_mask <LINK LINKEND="REFSTD.libgdk.pixbuf.xlib.2.0.1">[Gdk-pixbuf 2.26]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_pixbuf_xlib_render_threshold_alpha</primary></indexterm>gdk_pixbuf_xlib_render_threshold_alpha <LINK LINKEND="REFSTD.libgdk.pixbuf.xlib.2.0.1">[Gdk-pixbuf 2.26]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_pixbuf_xlib_render_to_drawable</primary></indexterm>gdk_pixbuf_xlib_render_to_drawable <LINK LINKEND="REFSTD.libgdk.pixbuf.xlib.2.0.1">[Gdk-pixbuf 2.26]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_pixbuf_xlib_render_to_drawable_alpha</primary></indexterm>gdk_pixbuf_xlib_render_to_drawable_alpha <LINK LINKEND="REFSTD.libgdk.pixbuf.xlib.2.0.1">[Gdk-pixbuf 2.26]</LINK></ENTRY>
<ENTRY><indexterm><primary>xlib_draw_gray_image</primary></indexterm>xlib_draw_gray_image <LINK LINKEND="REFSTD.libgdk.pixbuf.xlib.2.0.1">[Gdk-pixbuf 2.26]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>xlib_draw_indexed_image</primary></indexterm>xlib_draw_indexed_image <LINK LINKEND="REFSTD.libgdk.pixbuf.xlib.2.0.1">[Gdk-pixbuf 2.26]</LINK></ENTRY>
<ENTRY><indexterm><primary>xlib_draw_rgb_32_image</primary></indexterm>xlib_draw_rgb_32_image <LINK LINKEND="REFSTD.libgdk.pixbuf.xlib.2.0.1">[Gdk-pixbuf 2.26]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>xlib_draw_rgb_image</primary></indexterm>xlib_draw_rgb_image <LINK LINKEND="REFSTD.libgdk.pixbuf.xlib.2.0.1">[Gdk-pixbuf 2.26]</LINK></ENTRY>
<ENTRY><indexterm><primary>xlib_draw_rgb_image_dithalign</primary></indexterm>xlib_draw_rgb_image_dithalign <LINK LINKEND="REFSTD.libgdk.pixbuf.xlib.2.0.1">[Gdk-pixbuf 2.26]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>xlib_rgb_cmap_free</primary></indexterm>xlib_rgb_cmap_free <LINK LINKEND="REFSTD.libgdk.pixbuf.xlib.2.0.1">[Gdk-pixbuf 2.26]</LINK></ENTRY>
<ENTRY><indexterm><primary>xlib_rgb_cmap_new</primary></indexterm>xlib_rgb_cmap_new <LINK LINKEND="REFSTD.libgdk.pixbuf.xlib.2.0.1">[Gdk-pixbuf 2.26]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>xlib_rgb_ditherable</primary></indexterm>xlib_rgb_ditherable <LINK LINKEND="REFSTD.libgdk.pixbuf.xlib.2.0.1">[Gdk-pixbuf 2.26]</LINK></ENTRY>
<ENTRY><indexterm><primary>xlib_rgb_gc_set_background</primary></indexterm>xlib_rgb_gc_set_background <LINK LINKEND="REFSTD.libgdk.pixbuf.xlib.2.0.1">[Gdk-pixbuf 2.26]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>xlib_rgb_gc_set_foreground</primary></indexterm>xlib_rgb_gc_set_foreground <LINK LINKEND="REFSTD.libgdk.pixbuf.xlib.2.0.1">[Gdk-pixbuf 2.26]</LINK></ENTRY>
<ENTRY><indexterm><primary>xlib_rgb_get_cmap</primary></indexterm>xlib_rgb_get_cmap <LINK LINKEND="REFSTD.libgdk.pixbuf.xlib.2.0.1">[Gdk-pixbuf 2.26]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>xlib_rgb_get_depth</primary></indexterm>xlib_rgb_get_depth <LINK LINKEND="REFSTD.libgdk.pixbuf.xlib.2.0.1">[Gdk-pixbuf 2.26]</LINK></ENTRY>
<ENTRY><indexterm><primary>xlib_rgb_get_display</primary></indexterm>xlib_rgb_get_display <LINK LINKEND="REFSTD.libgdk.pixbuf.xlib.2.0.1">[Gdk-pixbuf 2.26]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>xlib_rgb_get_screen</primary></indexterm>xlib_rgb_get_screen <LINK LINKEND="REFSTD.libgdk.pixbuf.xlib.2.0.1">[Gdk-pixbuf 2.26]</LINK></ENTRY>
<ENTRY><indexterm><primary>xlib_rgb_get_visual</primary></indexterm>xlib_rgb_get_visual <LINK LINKEND="REFSTD.libgdk.pixbuf.xlib.2.0.1">[Gdk-pixbuf 2.26]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>xlib_rgb_get_visual_info</primary></indexterm>xlib_rgb_get_visual_info <LINK LINKEND="REFSTD.libgdk.pixbuf.xlib.2.0.1">[Gdk-pixbuf 2.26]</LINK></ENTRY>
<ENTRY><indexterm><primary>xlib_rgb_init</primary></indexterm>xlib_rgb_init <LINK LINKEND="REFSTD.libgdk.pixbuf.xlib.2.0.1">[Gdk-pixbuf 2.26]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>xlib_rgb_init_with_depth</primary></indexterm>xlib_rgb_init_with_depth <LINK LINKEND="REFSTD.libgdk.pixbuf.xlib.2.0.1">[Gdk-pixbuf 2.26]</LINK></ENTRY>
<ENTRY><indexterm><primary>xlib_rgb_set_install</primary></indexterm>xlib_rgb_set_install <LINK LINKEND="REFSTD.libgdk.pixbuf.xlib.2.0.1">[Gdk-pixbuf 2.26]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>xlib_rgb_set_min_colors</primary></indexterm>xlib_rgb_set_min_colors <LINK LINKEND="REFSTD.libgdk.pixbuf.xlib.2.0.1">[Gdk-pixbuf 2.26]</LINK></ENTRY>
<ENTRY><indexterm><primary>xlib_rgb_set_verbose</primary></indexterm>xlib_rgb_set_verbose <LINK LINKEND="REFSTD.libgdk.pixbuf.xlib.2.0.1">[Gdk-pixbuf 2.26]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>xlib_rgb_xpixel_from_rgb</primary></indexterm>xlib_rgb_xpixel_from_rgb <LINK LINKEND="REFSTD.libgdk.pixbuf.xlib.2.0.1">[Gdk-pixbuf 2.26]</LINK></ENTRY>
<ENTRY></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>
</SECT2>
</SECT1>
<SECT1 ID=libgdk-pixbuf-xlib-2.0-ddefs>
<TITLE>Data Definitions for libgdk_pixbuf_xlib-2.0</TITLE>
<PARA>
This section defines global identifiers and their values that are associated
with interfaces contained in libgdk_pixbuf_xlib-2.0.
These definitions are organized into groups that
correspond to system headers. This convention is used as a
convenience for the reader, and does not imply the existence
of these headers, or their content.
Where an interface is defined as requiring a particular system header file
all of the data definitions for that system header file presented here shall be in effect.
</PARA>
<PARA>
This section gives data definitions to promote binary application
portability, not to repeat source interface definitions available
elsewhere. System providers and application developers should use this ABI
to supplement - not to replace - source interface definition specifications.
</PARA>
<PARA>
This specification uses the <XREF LINKEND='std.ISOC99'> C Language as the reference programming language, and data definitions are specified in ISO C format. The C language is used here as a convenient notation. Using a C language description of these data objects does not preclude their use by other programming languages.</PARA>
<SECT2>
<TITLE>gtk-2.0/gdk-pixbuf-xlib/gdk-pixbuf-xlib.h</TITLE>
<PARA>
</PARA>
<SCREEN>

typedef enum {
    XLIB_RGB_DITHER_NONE = 0,
    XLIB_RGB_DITHER_NORMAL = 1,
    XLIB_RGB_DITHER_MAX = 2
} XlibRgbDither;
typedef struct _XlibRgbCmap {
    unsigned int colors[256];
    unsigned char lut[256];
} XlibRgbCmap;
extern GdkPixbuf *gdk_pixbuf_xlib_get_from_drawable(GdkPixbuf * dest,
						    Drawable src,
						    Colormap cmap,
						    Visual * visual,
						    int src_x, int src_y,
						    int dest_x, int dest_y,
						    int width, int height);
extern void gdk_pixbuf_xlib_init(Display * display, int screen_num);
extern void gdk_pixbuf_xlib_init_with_depth(Display * display,
					    int screen_num, int prefDepth);
extern void gdk_pixbuf_xlib_render_pixmap_and_mask(GdkPixbuf * pixbuf,
						   Pixmap * pixmap_return,
						   Pixmap * mask_return,
						   int alpha_threshold);
extern void gdk_pixbuf_xlib_render_threshold_alpha(GdkPixbuf * pixbuf,
						   Pixmap bitmap,
						   int src_x, int src_y,
						   int dest_x, int dest_y,
						   int width, int height,
						   int alpha_threshold);
extern void gdk_pixbuf_xlib_render_to_drawable(GdkPixbuf * pixbuf,
					       Drawable drawable, GC gc,
					       int src_x, int src_y,
					       int dest_x, int dest_y,
					       int width, int height,
					       XlibRgbDither dither,
					       int x_dither, int y_dither);
extern void gdk_pixbuf_xlib_render_to_drawable_alpha(GdkPixbuf * pixbuf,
						     Drawable drawable,
						     int src_x, int src_y,
						     int dest_x,
						     int dest_y, int width,
						     int height,
						     GdkPixbufAlphaMode
						     alpha_mode,
						     int alpha_threshold,
						     XlibRgbDither dither,
						     int x_dither,
						     int y_dither);
extern void xlib_draw_gray_image(Drawable drawable, GC gc, int x, int y,
				 int width, int height, XlibRgbDither dith,
				 unsigned char *buf, int rowstride);
extern void xlib_draw_indexed_image(Drawable drawable, GC gc, int x, int y,
				    int width, int height,
				    XlibRgbDither dith, unsigned char *buf,
				    int rowstride, XlibRgbCmap * cmap);
extern void xlib_draw_rgb_32_image(Drawable drawable, GC gc, int x, int y,
				   int width, int height,
				   XlibRgbDither dith, unsigned char *buf,
				   int rowstride);
extern void xlib_draw_rgb_image(Drawable drawable, GC gc, int x, int y,
				int width, int height, XlibRgbDither dith,
				unsigned char *rgb_buf, int rowstride);
extern void xlib_draw_rgb_image_dithalign(Drawable drawable, GC gc, int x,
					  int y, int width, int height,
					  XlibRgbDither dith,
					  unsigned char *rgb_buf,
					  int rowstride, int xdith,
					  int ydith);
extern void xlib_rgb_cmap_free(XlibRgbCmap * cmap);
extern XlibRgbCmap *xlib_rgb_cmap_new(guint32 * colors, int n_colors);
extern int xlib_rgb_ditherable(void);
extern void xlib_rgb_gc_set_background(GC gc, guint32 rgb);
extern void xlib_rgb_gc_set_foreground(GC gc, guint32 rgb);
extern Colormap xlib_rgb_get_cmap(void);
extern int xlib_rgb_get_depth(void);
extern Display *xlib_rgb_get_display(void);
extern Screen *xlib_rgb_get_screen(void);
extern Visual *xlib_rgb_get_visual(void);
extern XVisualInfo *xlib_rgb_get_visual_info(void);
extern void xlib_rgb_init(Display * display, Screen * screen);
extern void xlib_rgb_init_with_depth(Display * display, Screen * screen,
				     int prefDepth);
extern void xlib_rgb_set_install(int install);
extern void xlib_rgb_set_min_colors(int min_colors);
extern void xlib_rgb_set_verbose(int verbose);
extern long unsigned int xlib_rgb_xpixel_from_rgb(guint32 rgb);
</SCREEN>
</SECT2>
</SECT1>
<!-- End of text generated from database -->

<!-- Start of generated text - do not edit! -->
<!-- generated from the LSB specification database by mklibspec -->
<SECT1 ID=libgdk-x11-2.0>
<TITLE>Interfaces for libgdk-x11-2.0</TITLE>
<PARA>
<XREF LINKEND="lib-libgdk-x11-2.0-def"> defines the library name and shared object name
for the libgdk-x11-2.0 library
</PARA>
<TABLE id="lib-libgdk-x11-2.0-def">
<TITLE>libgdk-x11-2.0 Definition</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Library:</ENTRY>
<ENTRY>libgdk-x11-2.0</ENTRY>
</ROW>
<ROW>
<ENTRY>SONAME:</ENTRY>
<ENTRY>libgdk-x11-2.0.so.0</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The behavior of the interfaces in this library is specified by the following specifications:<SIMPLELIST COLUMNS=1>
<MEMBER ID='REFSTD.libgdk.x11.2.0.1'>
[Gdk 2.10] <XREF LINKEND="std.Gdk">
</MEMBER>
<MEMBER ID='REFSTD.libgdk.x11.2.0.2'>
[Gobject 2.32] <XREF LINKEND="std.Gobject">
</MEMBER>
</SIMPLELIST>
</PARA>
<!-- debug: database interface name GTK Drawing toolkit -->
<SECT2>
<!--libgroup-->
<TITLE>GTK Drawing toolkit</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Interfaces for GTK Drawing toolkit</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic functions
for GTK Drawing toolkit specified in <XREF linkend="tbl-libgdk-x11-2.0-gtk-d-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<TABLE id="tbl-libgdk-x11-2.0-gtk-d-ints">
<TITLE>libgdk-x11-2.0 - GTK Drawing toolkit Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>gdk_add_client_message_filter</primary></indexterm>gdk_add_client_message_filter <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_atom_intern</primary></indexterm>gdk_atom_intern <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_atom_intern_static_string</primary></indexterm>gdk_atom_intern_static_string <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_atom_name</primary></indexterm>gdk_atom_name <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_axis_use_get_type</primary></indexterm>gdk_axis_use_get_type <LINK LINKEND="REFSTD.libgdk.x11.2.0.2">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_beep</primary></indexterm>gdk_beep <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_bitmap_create_from_data</primary></indexterm>gdk_bitmap_create_from_data <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_byte_order_get_type</primary></indexterm>gdk_byte_order_get_type <LINK LINKEND="REFSTD.libgdk.x11.2.0.2">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_cairo_create</primary></indexterm>gdk_cairo_create <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_cairo_rectangle</primary></indexterm>gdk_cairo_rectangle <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_cairo_region</primary></indexterm>gdk_cairo_region <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_cairo_set_source_color</primary></indexterm>gdk_cairo_set_source_color <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_cairo_set_source_pixbuf</primary></indexterm>gdk_cairo_set_source_pixbuf <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_cairo_set_source_pixmap</primary></indexterm>gdk_cairo_set_source_pixmap <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_cap_style_get_type</primary></indexterm>gdk_cap_style_get_type <LINK LINKEND="REFSTD.libgdk.x11.2.0.2">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_color_copy</primary></indexterm>gdk_color_copy <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_color_equal</primary></indexterm>gdk_color_equal <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_color_free</primary></indexterm>gdk_color_free <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_color_get_type</primary></indexterm>gdk_color_get_type <LINK LINKEND="REFSTD.libgdk.x11.2.0.2">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_color_hash</primary></indexterm>gdk_color_hash <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_color_parse</primary></indexterm>gdk_color_parse <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_colormap_alloc_color</primary></indexterm>gdk_colormap_alloc_color <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_colormap_alloc_colors</primary></indexterm>gdk_colormap_alloc_colors <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_colormap_free_colors</primary></indexterm>gdk_colormap_free_colors <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_colormap_get_screen</primary></indexterm>gdk_colormap_get_screen <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_colormap_get_system</primary></indexterm>gdk_colormap_get_system <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_colormap_get_type</primary></indexterm>gdk_colormap_get_type <LINK LINKEND="REFSTD.libgdk.x11.2.0.2">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_colormap_get_visual</primary></indexterm>gdk_colormap_get_visual <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_colormap_new</primary></indexterm>gdk_colormap_new <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_colormap_query_color</primary></indexterm>gdk_colormap_query_color <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_crossing_mode_get_type</primary></indexterm>gdk_crossing_mode_get_type <LINK LINKEND="REFSTD.libgdk.x11.2.0.2">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_cursor_get_display</primary></indexterm>gdk_cursor_get_display <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_cursor_get_image</primary></indexterm>gdk_cursor_get_image <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_cursor_get_type</primary></indexterm>gdk_cursor_get_type <LINK LINKEND="REFSTD.libgdk.x11.2.0.2">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_cursor_new</primary></indexterm>gdk_cursor_new <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_cursor_new_for_display</primary></indexterm>gdk_cursor_new_for_display <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_cursor_new_from_name</primary></indexterm>gdk_cursor_new_from_name <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_cursor_new_from_pixbuf</primary></indexterm>gdk_cursor_new_from_pixbuf <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_cursor_new_from_pixmap</primary></indexterm>gdk_cursor_new_from_pixmap <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_cursor_ref</primary></indexterm>gdk_cursor_ref <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_cursor_type_get_type</primary></indexterm>gdk_cursor_type_get_type <LINK LINKEND="REFSTD.libgdk.x11.2.0.2">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_cursor_unref</primary></indexterm>gdk_cursor_unref <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_device_free_history</primary></indexterm>gdk_device_free_history <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_device_get_axis</primary></indexterm>gdk_device_get_axis <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_device_get_core_pointer</primary></indexterm>gdk_device_get_core_pointer <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_device_get_history</primary></indexterm>gdk_device_get_history <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_device_get_state</primary></indexterm>gdk_device_get_state <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_device_get_type</primary></indexterm>gdk_device_get_type <LINK LINKEND="REFSTD.libgdk.x11.2.0.2">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_device_set_axis_use</primary></indexterm>gdk_device_set_axis_use <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_device_set_key</primary></indexterm>gdk_device_set_key <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_device_set_mode</primary></indexterm>gdk_device_set_mode <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_device_set_source</primary></indexterm>gdk_device_set_source <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_devices_list</primary></indexterm>gdk_devices_list <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_display_add_client_message_filter</primary></indexterm>gdk_display_add_client_message_filter <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_display_beep</primary></indexterm>gdk_display_beep <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_display_close</primary></indexterm>gdk_display_close <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_display_flush</primary></indexterm>gdk_display_flush <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_display_get_core_pointer</primary></indexterm>gdk_display_get_core_pointer <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_display_get_default</primary></indexterm>gdk_display_get_default <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_display_get_default_cursor_size</primary></indexterm>gdk_display_get_default_cursor_size <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_display_get_default_group</primary></indexterm>gdk_display_get_default_group <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_display_get_default_screen</primary></indexterm>gdk_display_get_default_screen <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_display_get_event</primary></indexterm>gdk_display_get_event <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_display_get_maximal_cursor_size</primary></indexterm>gdk_display_get_maximal_cursor_size <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_display_get_n_screens</primary></indexterm>gdk_display_get_n_screens <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_display_get_name</primary></indexterm>gdk_display_get_name <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_display_get_pointer</primary></indexterm>gdk_display_get_pointer <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_display_get_screen</primary></indexterm>gdk_display_get_screen <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_display_get_type</primary></indexterm>gdk_display_get_type <LINK LINKEND="REFSTD.libgdk.x11.2.0.2">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_display_get_window_at_pointer</primary></indexterm>gdk_display_get_window_at_pointer <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_display_keyboard_ungrab</primary></indexterm>gdk_display_keyboard_ungrab <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_display_list_devices</primary></indexterm>gdk_display_list_devices <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_display_manager_get</primary></indexterm>gdk_display_manager_get <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_display_manager_get_default_display</primary></indexterm>gdk_display_manager_get_default_display <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_display_manager_get_type</primary></indexterm>gdk_display_manager_get_type <LINK LINKEND="REFSTD.libgdk.x11.2.0.2">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_display_manager_list_displays</primary></indexterm>gdk_display_manager_list_displays <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_display_manager_set_default_display</primary></indexterm>gdk_display_manager_set_default_display <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_display_open</primary></indexterm>gdk_display_open <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_display_peek_event</primary></indexterm>gdk_display_peek_event <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_display_pointer_is_grabbed</primary></indexterm>gdk_display_pointer_is_grabbed <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_display_pointer_ungrab</primary></indexterm>gdk_display_pointer_ungrab <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_display_put_event</primary></indexterm>gdk_display_put_event <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_display_request_selection_notification</primary></indexterm>gdk_display_request_selection_notification <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_display_set_double_click_distance</primary></indexterm>gdk_display_set_double_click_distance <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_display_set_double_click_time</primary></indexterm>gdk_display_set_double_click_time <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_display_set_pointer_hooks</primary></indexterm>gdk_display_set_pointer_hooks <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_display_store_clipboard</primary></indexterm>gdk_display_store_clipboard <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_display_supports_clipboard_persistence</primary></indexterm>gdk_display_supports_clipboard_persistence <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_display_supports_cursor_alpha</primary></indexterm>gdk_display_supports_cursor_alpha <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_display_supports_cursor_color</primary></indexterm>gdk_display_supports_cursor_color <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_display_supports_input_shapes</primary></indexterm>gdk_display_supports_input_shapes <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_display_supports_selection_notification</primary></indexterm>gdk_display_supports_selection_notification <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_display_supports_shapes</primary></indexterm>gdk_display_supports_shapes <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_display_sync</primary></indexterm>gdk_display_sync <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_display_warp_pointer</primary></indexterm>gdk_display_warp_pointer <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_drag_abort</primary></indexterm>gdk_drag_abort <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_drag_action_get_type</primary></indexterm>gdk_drag_action_get_type <LINK LINKEND="REFSTD.libgdk.x11.2.0.2">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_drag_begin</primary></indexterm>gdk_drag_begin <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_drag_context_get_type</primary></indexterm>gdk_drag_context_get_type <LINK LINKEND="REFSTD.libgdk.x11.2.0.2">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_drag_context_new</primary></indexterm>gdk_drag_context_new <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_drag_drop</primary></indexterm>gdk_drag_drop <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_drag_drop_succeeded</primary></indexterm>gdk_drag_drop_succeeded <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_drag_find_window</primary></indexterm>gdk_drag_find_window <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_drag_find_window_for_screen</primary></indexterm>gdk_drag_find_window_for_screen <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_drag_get_protocol</primary></indexterm>gdk_drag_get_protocol <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_drag_get_protocol_for_display</primary></indexterm>gdk_drag_get_protocol_for_display <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_drag_get_selection</primary></indexterm>gdk_drag_get_selection <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_drag_motion</primary></indexterm>gdk_drag_motion <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_drag_protocol_get_type</primary></indexterm>gdk_drag_protocol_get_type <LINK LINKEND="REFSTD.libgdk.x11.2.0.2">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_drag_status</primary></indexterm>gdk_drag_status <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_draw_arc</primary></indexterm>gdk_draw_arc <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_draw_drawable</primary></indexterm>gdk_draw_drawable <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_draw_glyphs</primary></indexterm>gdk_draw_glyphs <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_draw_glyphs_transformed</primary></indexterm>gdk_draw_glyphs_transformed <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_draw_gray_image</primary></indexterm>gdk_draw_gray_image <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_draw_image</primary></indexterm>gdk_draw_image <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_draw_indexed_image</primary></indexterm>gdk_draw_indexed_image <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_draw_layout</primary></indexterm>gdk_draw_layout <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_draw_layout_line</primary></indexterm>gdk_draw_layout_line <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_draw_layout_line_with_colors</primary></indexterm>gdk_draw_layout_line_with_colors <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_draw_layout_with_colors</primary></indexterm>gdk_draw_layout_with_colors <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_draw_line</primary></indexterm>gdk_draw_line <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_draw_lines</primary></indexterm>gdk_draw_lines <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_draw_pixbuf</primary></indexterm>gdk_draw_pixbuf <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_draw_point</primary></indexterm>gdk_draw_point <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_draw_points</primary></indexterm>gdk_draw_points <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_draw_polygon</primary></indexterm>gdk_draw_polygon <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_draw_rectangle</primary></indexterm>gdk_draw_rectangle <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_draw_rgb_32_image</primary></indexterm>gdk_draw_rgb_32_image <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_draw_rgb_32_image_dithalign</primary></indexterm>gdk_draw_rgb_32_image_dithalign <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_draw_rgb_image</primary></indexterm>gdk_draw_rgb_image <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_draw_rgb_image_dithalign</primary></indexterm>gdk_draw_rgb_image_dithalign <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_draw_segments</primary></indexterm>gdk_draw_segments <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_draw_trapezoids</primary></indexterm>gdk_draw_trapezoids <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_drawable_copy_to_image</primary></indexterm>gdk_drawable_copy_to_image <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_drawable_get_clip_region</primary></indexterm>gdk_drawable_get_clip_region <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_drawable_get_colormap</primary></indexterm>gdk_drawable_get_colormap <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_drawable_get_depth</primary></indexterm>gdk_drawable_get_depth <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_drawable_get_display</primary></indexterm>gdk_drawable_get_display <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_drawable_get_image</primary></indexterm>gdk_drawable_get_image <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_drawable_get_screen</primary></indexterm>gdk_drawable_get_screen <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_drawable_get_size</primary></indexterm>gdk_drawable_get_size <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_drawable_get_type</primary></indexterm>gdk_drawable_get_type <LINK LINKEND="REFSTD.libgdk.x11.2.0.2">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_drawable_get_visible_region</primary></indexterm>gdk_drawable_get_visible_region <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_drawable_get_visual</primary></indexterm>gdk_drawable_get_visual <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_drawable_set_colormap</primary></indexterm>gdk_drawable_set_colormap <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_drop_finish</primary></indexterm>gdk_drop_finish <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_drop_reply</primary></indexterm>gdk_drop_reply <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_error_trap_pop</primary></indexterm>gdk_error_trap_pop <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_error_trap_push</primary></indexterm>gdk_error_trap_push <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_event_copy</primary></indexterm>gdk_event_copy <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_event_free</primary></indexterm>gdk_event_free <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_event_get</primary></indexterm>gdk_event_get <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_event_get_axis</primary></indexterm>gdk_event_get_axis <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_event_get_coords</primary></indexterm>gdk_event_get_coords <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_event_get_graphics_expose</primary></indexterm>gdk_event_get_graphics_expose <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_event_get_root_coords</primary></indexterm>gdk_event_get_root_coords <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_event_get_screen</primary></indexterm>gdk_event_get_screen <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_event_get_state</primary></indexterm>gdk_event_get_state <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_event_get_time</primary></indexterm>gdk_event_get_time <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_event_get_type</primary></indexterm>gdk_event_get_type <LINK LINKEND="REFSTD.libgdk.x11.2.0.2">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_event_handler_set</primary></indexterm>gdk_event_handler_set <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_event_mask_get_type</primary></indexterm>gdk_event_mask_get_type <LINK LINKEND="REFSTD.libgdk.x11.2.0.2">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_event_new</primary></indexterm>gdk_event_new <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_event_peek</primary></indexterm>gdk_event_peek <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_event_put</primary></indexterm>gdk_event_put <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_event_send_client_message</primary></indexterm>gdk_event_send_client_message <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_event_send_client_message_for_display</primary></indexterm>gdk_event_send_client_message_for_display <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_event_send_clientmessage_toall</primary></indexterm>gdk_event_send_clientmessage_toall <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_event_set_screen</primary></indexterm>gdk_event_set_screen <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_event_type_get_type</primary></indexterm>gdk_event_type_get_type <LINK LINKEND="REFSTD.libgdk.x11.2.0.2">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_events_pending</primary></indexterm>gdk_events_pending <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_extension_mode_get_type</primary></indexterm>gdk_extension_mode_get_type <LINK LINKEND="REFSTD.libgdk.x11.2.0.2">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_fill_get_type</primary></indexterm>gdk_fill_get_type <LINK LINKEND="REFSTD.libgdk.x11.2.0.2">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_fill_rule_get_type</primary></indexterm>gdk_fill_rule_get_type <LINK LINKEND="REFSTD.libgdk.x11.2.0.2">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_filter_return_get_type</primary></indexterm>gdk_filter_return_get_type <LINK LINKEND="REFSTD.libgdk.x11.2.0.2">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_flush</primary></indexterm>gdk_flush <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_font_type_get_type</primary></indexterm>gdk_font_type_get_type <LINK LINKEND="REFSTD.libgdk.x11.2.0.2">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_free_compound_text</primary></indexterm>gdk_free_compound_text <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_free_text_list</primary></indexterm>gdk_free_text_list <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_function_get_type</primary></indexterm>gdk_function_get_type <LINK LINKEND="REFSTD.libgdk.x11.2.0.2">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_gc_copy</primary></indexterm>gdk_gc_copy <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_gc_get_colormap</primary></indexterm>gdk_gc_get_colormap <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_gc_get_screen</primary></indexterm>gdk_gc_get_screen <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_gc_get_type</primary></indexterm>gdk_gc_get_type <LINK LINKEND="REFSTD.libgdk.x11.2.0.2">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_gc_get_values</primary></indexterm>gdk_gc_get_values <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_gc_new</primary></indexterm>gdk_gc_new <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_gc_new_with_values</primary></indexterm>gdk_gc_new_with_values <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_gc_offset</primary></indexterm>gdk_gc_offset <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_gc_set_background</primary></indexterm>gdk_gc_set_background <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_gc_set_clip_mask</primary></indexterm>gdk_gc_set_clip_mask <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_gc_set_clip_origin</primary></indexterm>gdk_gc_set_clip_origin <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_gc_set_clip_rectangle</primary></indexterm>gdk_gc_set_clip_rectangle <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_gc_set_clip_region</primary></indexterm>gdk_gc_set_clip_region <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_gc_set_colormap</primary></indexterm>gdk_gc_set_colormap <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_gc_set_dashes</primary></indexterm>gdk_gc_set_dashes <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_gc_set_exposures</primary></indexterm>gdk_gc_set_exposures <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_gc_set_fill</primary></indexterm>gdk_gc_set_fill <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_gc_set_foreground</primary></indexterm>gdk_gc_set_foreground <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_gc_set_function</primary></indexterm>gdk_gc_set_function <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_gc_set_line_attributes</primary></indexterm>gdk_gc_set_line_attributes <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_gc_set_rgb_bg_color</primary></indexterm>gdk_gc_set_rgb_bg_color <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_gc_set_rgb_fg_color</primary></indexterm>gdk_gc_set_rgb_fg_color <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_gc_set_stipple</primary></indexterm>gdk_gc_set_stipple <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_gc_set_subwindow</primary></indexterm>gdk_gc_set_subwindow <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_gc_set_tile</primary></indexterm>gdk_gc_set_tile <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_gc_set_ts_origin</primary></indexterm>gdk_gc_set_ts_origin <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_gc_set_values</primary></indexterm>gdk_gc_set_values <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_gc_values_mask_get_type</primary></indexterm>gdk_gc_values_mask_get_type <LINK LINKEND="REFSTD.libgdk.x11.2.0.2">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_get_default_root_window</primary></indexterm>gdk_get_default_root_window <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_get_display</primary></indexterm>gdk_get_display <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_get_display_arg_name</primary></indexterm>gdk_get_display_arg_name <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_get_program_class</primary></indexterm>gdk_get_program_class <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_get_show_events</primary></indexterm>gdk_get_show_events <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_grab_status_get_type</primary></indexterm>gdk_grab_status_get_type <LINK LINKEND="REFSTD.libgdk.x11.2.0.2">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_gravity_get_type</primary></indexterm>gdk_gravity_get_type <LINK LINKEND="REFSTD.libgdk.x11.2.0.2">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_image_get_colormap</primary></indexterm>gdk_image_get_colormap <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_image_get_pixel</primary></indexterm>gdk_image_get_pixel <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_image_get_type</primary></indexterm>gdk_image_get_type <LINK LINKEND="REFSTD.libgdk.x11.2.0.2">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_image_new</primary></indexterm>gdk_image_new <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_image_put_pixel</primary></indexterm>gdk_image_put_pixel <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_image_set_colormap</primary></indexterm>gdk_image_set_colormap <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_image_type_get_type</primary></indexterm>gdk_image_type_get_type <LINK LINKEND="REFSTD.libgdk.x11.2.0.2">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_init</primary></indexterm>gdk_init <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_init_check</primary></indexterm>gdk_init_check <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_input_condition_get_type</primary></indexterm>gdk_input_condition_get_type <LINK LINKEND="REFSTD.libgdk.x11.2.0.2">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_input_mode_get_type</primary></indexterm>gdk_input_mode_get_type <LINK LINKEND="REFSTD.libgdk.x11.2.0.2">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_input_set_extension_events</primary></indexterm>gdk_input_set_extension_events <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_input_source_get_type</primary></indexterm>gdk_input_source_get_type <LINK LINKEND="REFSTD.libgdk.x11.2.0.2">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_join_style_get_type</primary></indexterm>gdk_join_style_get_type <LINK LINKEND="REFSTD.libgdk.x11.2.0.2">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_keyboard_grab</primary></indexterm>gdk_keyboard_grab <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_keyboard_ungrab</primary></indexterm>gdk_keyboard_ungrab <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_keymap_get_default</primary></indexterm>gdk_keymap_get_default <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_keymap_get_direction</primary></indexterm>gdk_keymap_get_direction <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_keymap_get_entries_for_keycode</primary></indexterm>gdk_keymap_get_entries_for_keycode <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_keymap_get_entries_for_keyval</primary></indexterm>gdk_keymap_get_entries_for_keyval <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_keymap_get_for_display</primary></indexterm>gdk_keymap_get_for_display <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_keymap_get_type</primary></indexterm>gdk_keymap_get_type <LINK LINKEND="REFSTD.libgdk.x11.2.0.2">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_keymap_lookup_key</primary></indexterm>gdk_keymap_lookup_key <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_keymap_translate_keyboard_state</primary></indexterm>gdk_keymap_translate_keyboard_state <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_keyval_convert_case</primary></indexterm>gdk_keyval_convert_case <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_keyval_from_name</primary></indexterm>gdk_keyval_from_name <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_keyval_is_lower</primary></indexterm>gdk_keyval_is_lower <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_keyval_is_upper</primary></indexterm>gdk_keyval_is_upper <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_keyval_name</primary></indexterm>gdk_keyval_name <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_keyval_to_lower</primary></indexterm>gdk_keyval_to_lower <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_keyval_to_unicode</primary></indexterm>gdk_keyval_to_unicode <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_keyval_to_upper</primary></indexterm>gdk_keyval_to_upper <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_line_style_get_type</primary></indexterm>gdk_line_style_get_type <LINK LINKEND="REFSTD.libgdk.x11.2.0.2">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_list_visuals</primary></indexterm>gdk_list_visuals <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_modifier_type_get_type</primary></indexterm>gdk_modifier_type_get_type <LINK LINKEND="REFSTD.libgdk.x11.2.0.2">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_net_wm_supports</primary></indexterm>gdk_net_wm_supports <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_notify_startup_complete</primary></indexterm>gdk_notify_startup_complete <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_notify_type_get_type</primary></indexterm>gdk_notify_type_get_type <LINK LINKEND="REFSTD.libgdk.x11.2.0.2">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_overlap_type_get_type</primary></indexterm>gdk_overlap_type_get_type <LINK LINKEND="REFSTD.libgdk.x11.2.0.2">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_owner_change_get_type</primary></indexterm>gdk_owner_change_get_type <LINK LINKEND="REFSTD.libgdk.x11.2.0.2">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_pango_attr_embossed_new</primary></indexterm>gdk_pango_attr_embossed_new <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_pango_attr_stipple_new</primary></indexterm>gdk_pango_attr_stipple_new <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_pango_context_get</primary></indexterm>gdk_pango_context_get <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_pango_context_get_for_screen</primary></indexterm>gdk_pango_context_get_for_screen <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_pango_layout_get_clip_region</primary></indexterm>gdk_pango_layout_get_clip_region <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_pango_layout_line_get_clip_region</primary></indexterm>gdk_pango_layout_line_get_clip_region <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_pango_renderer_get_default</primary></indexterm>gdk_pango_renderer_get_default <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_pango_renderer_get_type</primary></indexterm>gdk_pango_renderer_get_type <LINK LINKEND="REFSTD.libgdk.x11.2.0.2">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_pango_renderer_new</primary></indexterm>gdk_pango_renderer_new <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_pango_renderer_set_drawable</primary></indexterm>gdk_pango_renderer_set_drawable <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_pango_renderer_set_gc</primary></indexterm>gdk_pango_renderer_set_gc <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_pango_renderer_set_override_color</primary></indexterm>gdk_pango_renderer_set_override_color <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_pango_renderer_set_stipple</primary></indexterm>gdk_pango_renderer_set_stipple <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_parse_args</primary></indexterm>gdk_parse_args <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_pixbuf_get_from_drawable</primary></indexterm>gdk_pixbuf_get_from_drawable <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_pixbuf_get_from_image</primary></indexterm>gdk_pixbuf_get_from_image <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_pixbuf_render_pixmap_and_mask</primary></indexterm>gdk_pixbuf_render_pixmap_and_mask <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_pixbuf_render_pixmap_and_mask_for_colormap</primary></indexterm>gdk_pixbuf_render_pixmap_and_mask_for_colormap <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_pixbuf_render_threshold_alpha</primary></indexterm>gdk_pixbuf_render_threshold_alpha <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_pixmap_colormap_create_from_xpm</primary></indexterm>gdk_pixmap_colormap_create_from_xpm <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_pixmap_colormap_create_from_xpm_d</primary></indexterm>gdk_pixmap_colormap_create_from_xpm_d <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_pixmap_create_from_data</primary></indexterm>gdk_pixmap_create_from_data <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_pixmap_create_from_xpm</primary></indexterm>gdk_pixmap_create_from_xpm <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_pixmap_create_from_xpm_d</primary></indexterm>gdk_pixmap_create_from_xpm_d <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_pixmap_foreign_new</primary></indexterm>gdk_pixmap_foreign_new <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_pixmap_foreign_new_for_display</primary></indexterm>gdk_pixmap_foreign_new_for_display <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_pixmap_foreign_new_for_screen</primary></indexterm>gdk_pixmap_foreign_new_for_screen <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_pixmap_get_type</primary></indexterm>gdk_pixmap_get_type <LINK LINKEND="REFSTD.libgdk.x11.2.0.2">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_pixmap_lookup</primary></indexterm>gdk_pixmap_lookup <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_pixmap_lookup_for_display</primary></indexterm>gdk_pixmap_lookup_for_display <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_pixmap_new</primary></indexterm>gdk_pixmap_new <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_pointer_grab</primary></indexterm>gdk_pointer_grab <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_pointer_is_grabbed</primary></indexterm>gdk_pointer_is_grabbed <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_pointer_ungrab</primary></indexterm>gdk_pointer_ungrab <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_prop_mode_get_type</primary></indexterm>gdk_prop_mode_get_type <LINK LINKEND="REFSTD.libgdk.x11.2.0.2">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_property_change</primary></indexterm>gdk_property_change <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_property_delete</primary></indexterm>gdk_property_delete <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_property_get</primary></indexterm>gdk_property_get <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_property_state_get_type</primary></indexterm>gdk_property_state_get_type <LINK LINKEND="REFSTD.libgdk.x11.2.0.2">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_query_depths</primary></indexterm>gdk_query_depths <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_query_visual_types</primary></indexterm>gdk_query_visual_types <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_rectangle_get_type</primary></indexterm>gdk_rectangle_get_type <LINK LINKEND="REFSTD.libgdk.x11.2.0.2">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_rectangle_intersect</primary></indexterm>gdk_rectangle_intersect <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_rectangle_union</primary></indexterm>gdk_rectangle_union <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_region_copy</primary></indexterm>gdk_region_copy <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_region_destroy</primary></indexterm>gdk_region_destroy <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_region_empty</primary></indexterm>gdk_region_empty <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_region_equal</primary></indexterm>gdk_region_equal <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_region_get_clipbox</primary></indexterm>gdk_region_get_clipbox <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_region_get_rectangles</primary></indexterm>gdk_region_get_rectangles <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_region_intersect</primary></indexterm>gdk_region_intersect <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_region_new</primary></indexterm>gdk_region_new <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_region_offset</primary></indexterm>gdk_region_offset <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_region_point_in</primary></indexterm>gdk_region_point_in <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_region_polygon</primary></indexterm>gdk_region_polygon <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_region_rect_in</primary></indexterm>gdk_region_rect_in <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_region_rectangle</primary></indexterm>gdk_region_rectangle <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_region_shrink</primary></indexterm>gdk_region_shrink <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_region_spans_intersect_foreach</primary></indexterm>gdk_region_spans_intersect_foreach <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_region_subtract</primary></indexterm>gdk_region_subtract <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_region_union</primary></indexterm>gdk_region_union <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_region_union_with_rect</primary></indexterm>gdk_region_union_with_rect <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_region_xor</primary></indexterm>gdk_region_xor <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_rgb_cmap_free</primary></indexterm>gdk_rgb_cmap_free <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_rgb_cmap_new</primary></indexterm>gdk_rgb_cmap_new <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_rgb_colormap_ditherable</primary></indexterm>gdk_rgb_colormap_ditherable <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_rgb_dither_get_type</primary></indexterm>gdk_rgb_dither_get_type <LINK LINKEND="REFSTD.libgdk.x11.2.0.2">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_rgb_ditherable</primary></indexterm>gdk_rgb_ditherable <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_rgb_find_color</primary></indexterm>gdk_rgb_find_color <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_rgb_get_colormap</primary></indexterm>gdk_rgb_get_colormap <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_rgb_get_visual</primary></indexterm>gdk_rgb_get_visual <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_rgb_set_install</primary></indexterm>gdk_rgb_set_install <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_rgb_set_min_colors</primary></indexterm>gdk_rgb_set_min_colors <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_rgb_set_verbose</primary></indexterm>gdk_rgb_set_verbose <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_screen_broadcast_client_message</primary></indexterm>gdk_screen_broadcast_client_message <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_screen_get_active_window</primary></indexterm>gdk_screen_get_active_window <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_screen_get_default</primary></indexterm>gdk_screen_get_default <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_screen_get_default_colormap</primary></indexterm>gdk_screen_get_default_colormap <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_screen_get_display</primary></indexterm>gdk_screen_get_display <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_screen_get_font_options</primary></indexterm>gdk_screen_get_font_options <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_screen_get_height</primary></indexterm>gdk_screen_get_height <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_screen_get_height_mm</primary></indexterm>gdk_screen_get_height_mm <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_screen_get_monitor_at_point</primary></indexterm>gdk_screen_get_monitor_at_point <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_screen_get_monitor_at_window</primary></indexterm>gdk_screen_get_monitor_at_window <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_screen_get_monitor_geometry</primary></indexterm>gdk_screen_get_monitor_geometry <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_screen_get_n_monitors</primary></indexterm>gdk_screen_get_n_monitors <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_screen_get_number</primary></indexterm>gdk_screen_get_number <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_screen_get_resolution</primary></indexterm>gdk_screen_get_resolution <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_screen_get_rgb_colormap</primary></indexterm>gdk_screen_get_rgb_colormap <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_screen_get_rgb_visual</primary></indexterm>gdk_screen_get_rgb_visual <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_screen_get_rgba_colormap</primary></indexterm>gdk_screen_get_rgba_colormap <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_screen_get_rgba_visual</primary></indexterm>gdk_screen_get_rgba_visual <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_screen_get_root_window</primary></indexterm>gdk_screen_get_root_window <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_screen_get_setting</primary></indexterm>gdk_screen_get_setting <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_screen_get_system_colormap</primary></indexterm>gdk_screen_get_system_colormap <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_screen_get_system_visual</primary></indexterm>gdk_screen_get_system_visual <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_screen_get_toplevel_windows</primary></indexterm>gdk_screen_get_toplevel_windows <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_screen_get_type</primary></indexterm>gdk_screen_get_type <LINK LINKEND="REFSTD.libgdk.x11.2.0.2">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_screen_get_width</primary></indexterm>gdk_screen_get_width <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_screen_get_width_mm</primary></indexterm>gdk_screen_get_width_mm <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_screen_get_window_stack</primary></indexterm>gdk_screen_get_window_stack <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_screen_height</primary></indexterm>gdk_screen_height <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_screen_height_mm</primary></indexterm>gdk_screen_height_mm <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_screen_is_composited</primary></indexterm>gdk_screen_is_composited <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_screen_list_visuals</primary></indexterm>gdk_screen_list_visuals <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_screen_make_display_name</primary></indexterm>gdk_screen_make_display_name <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_screen_set_default_colormap</primary></indexterm>gdk_screen_set_default_colormap <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_screen_set_font_options</primary></indexterm>gdk_screen_set_font_options <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_screen_set_resolution</primary></indexterm>gdk_screen_set_resolution <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_screen_width</primary></indexterm>gdk_screen_width <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_screen_width_mm</primary></indexterm>gdk_screen_width_mm <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_scroll_direction_get_type</primary></indexterm>gdk_scroll_direction_get_type <LINK LINKEND="REFSTD.libgdk.x11.2.0.2">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_selection_convert</primary></indexterm>gdk_selection_convert <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_selection_owner_get</primary></indexterm>gdk_selection_owner_get <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_selection_owner_get_for_display</primary></indexterm>gdk_selection_owner_get_for_display <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_selection_owner_set</primary></indexterm>gdk_selection_owner_set <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_selection_owner_set_for_display</primary></indexterm>gdk_selection_owner_set_for_display <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_selection_property_get</primary></indexterm>gdk_selection_property_get <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_selection_send_notify</primary></indexterm>gdk_selection_send_notify <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_selection_send_notify_for_display</primary></indexterm>gdk_selection_send_notify_for_display <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_set_double_click_time</primary></indexterm>gdk_set_double_click_time <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_set_locale</primary></indexterm>gdk_set_locale <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_set_pointer_hooks</primary></indexterm>gdk_set_pointer_hooks <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_set_program_class</primary></indexterm>gdk_set_program_class <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_set_show_events</primary></indexterm>gdk_set_show_events <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_set_sm_client_id</primary></indexterm>gdk_set_sm_client_id <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_setting_action_get_type</primary></indexterm>gdk_setting_action_get_type <LINK LINKEND="REFSTD.libgdk.x11.2.0.2">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_setting_get</primary></indexterm>gdk_setting_get <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_spawn_command_line_on_screen</primary></indexterm>gdk_spawn_command_line_on_screen <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_spawn_on_screen</primary></indexterm>gdk_spawn_on_screen <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_spawn_on_screen_with_pipes</primary></indexterm>gdk_spawn_on_screen_with_pipes <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_status_get_type</primary></indexterm>gdk_status_get_type <LINK LINKEND="REFSTD.libgdk.x11.2.0.2">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_string_to_compound_text</primary></indexterm>gdk_string_to_compound_text <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_string_to_compound_text_for_display</primary></indexterm>gdk_string_to_compound_text_for_display <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_subwindow_mode_get_type</primary></indexterm>gdk_subwindow_mode_get_type <LINK LINKEND="REFSTD.libgdk.x11.2.0.2">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_synthesize_window_state</primary></indexterm>gdk_synthesize_window_state <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_text_property_to_text_list</primary></indexterm>gdk_text_property_to_text_list <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_text_property_to_text_list_for_display</primary></indexterm>gdk_text_property_to_text_list_for_display <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_text_property_to_utf8_list</primary></indexterm>gdk_text_property_to_utf8_list <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_text_property_to_utf8_list_for_display</primary></indexterm>gdk_text_property_to_utf8_list_for_display <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_threads_enter</primary></indexterm>gdk_threads_enter <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_threads_init</primary></indexterm>gdk_threads_init <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_threads_leave</primary></indexterm>gdk_threads_leave <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_threads_set_lock_functions</primary></indexterm>gdk_threads_set_lock_functions <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_unicode_to_keyval</primary></indexterm>gdk_unicode_to_keyval <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_utf8_to_compound_text</primary></indexterm>gdk_utf8_to_compound_text <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_utf8_to_compound_text_for_display</primary></indexterm>gdk_utf8_to_compound_text_for_display <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_utf8_to_string_target</primary></indexterm>gdk_utf8_to_string_target <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_visibility_state_get_type</primary></indexterm>gdk_visibility_state_get_type <LINK LINKEND="REFSTD.libgdk.x11.2.0.2">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_visual_get_best</primary></indexterm>gdk_visual_get_best <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_visual_get_best_depth</primary></indexterm>gdk_visual_get_best_depth <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_visual_get_best_type</primary></indexterm>gdk_visual_get_best_type <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_visual_get_best_with_both</primary></indexterm>gdk_visual_get_best_with_both <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_visual_get_best_with_depth</primary></indexterm>gdk_visual_get_best_with_depth <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_visual_get_best_with_type</primary></indexterm>gdk_visual_get_best_with_type <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_visual_get_screen</primary></indexterm>gdk_visual_get_screen <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_visual_get_system</primary></indexterm>gdk_visual_get_system <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_visual_get_type</primary></indexterm>gdk_visual_get_type <LINK LINKEND="REFSTD.libgdk.x11.2.0.2">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_visual_type_get_type</primary></indexterm>gdk_visual_type_get_type <LINK LINKEND="REFSTD.libgdk.x11.2.0.2">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_window_add_filter</primary></indexterm>gdk_window_add_filter <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_window_at_pointer</primary></indexterm>gdk_window_at_pointer <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_window_attributes_type_get_type</primary></indexterm>gdk_window_attributes_type_get_type <LINK LINKEND="REFSTD.libgdk.x11.2.0.2">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_window_begin_move_drag</primary></indexterm>gdk_window_begin_move_drag <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_window_begin_paint_rect</primary></indexterm>gdk_window_begin_paint_rect <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_window_begin_paint_region</primary></indexterm>gdk_window_begin_paint_region <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_window_begin_resize_drag</primary></indexterm>gdk_window_begin_resize_drag <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_window_class_get_type</primary></indexterm>gdk_window_class_get_type <LINK LINKEND="REFSTD.libgdk.x11.2.0.2">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_window_clear</primary></indexterm>gdk_window_clear <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_window_clear_area</primary></indexterm>gdk_window_clear_area <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_window_clear_area_e</primary></indexterm>gdk_window_clear_area_e <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_window_configure_finished</primary></indexterm>gdk_window_configure_finished <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_window_constrain_size</primary></indexterm>gdk_window_constrain_size <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_window_deiconify</primary></indexterm>gdk_window_deiconify <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_window_destroy</primary></indexterm>gdk_window_destroy <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_window_destroy_notify</primary></indexterm>gdk_window_destroy_notify <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_window_edge_get_type</primary></indexterm>gdk_window_edge_get_type <LINK LINKEND="REFSTD.libgdk.x11.2.0.2">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_window_enable_synchronized_configure</primary></indexterm>gdk_window_enable_synchronized_configure <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_window_end_paint</primary></indexterm>gdk_window_end_paint <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_window_focus</primary></indexterm>gdk_window_focus <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_window_foreign_new</primary></indexterm>gdk_window_foreign_new <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_window_foreign_new_for_display</primary></indexterm>gdk_window_foreign_new_for_display <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_window_freeze_updates</primary></indexterm>gdk_window_freeze_updates <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_window_fullscreen</primary></indexterm>gdk_window_fullscreen <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_window_get_children</primary></indexterm>gdk_window_get_children <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_window_get_decorations</primary></indexterm>gdk_window_get_decorations <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_window_get_events</primary></indexterm>gdk_window_get_events <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_window_get_frame_extents</primary></indexterm>gdk_window_get_frame_extents <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_window_get_geometry</primary></indexterm>gdk_window_get_geometry <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_window_get_group</primary></indexterm>gdk_window_get_group <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_window_get_internal_paint_info</primary></indexterm>gdk_window_get_internal_paint_info <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_window_get_origin</primary></indexterm>gdk_window_get_origin <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_window_get_parent</primary></indexterm>gdk_window_get_parent <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_window_get_pointer</primary></indexterm>gdk_window_get_pointer <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_window_get_position</primary></indexterm>gdk_window_get_position <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_window_get_root_origin</primary></indexterm>gdk_window_get_root_origin <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_window_get_state</primary></indexterm>gdk_window_get_state <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_window_get_toplevel</primary></indexterm>gdk_window_get_toplevel <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_window_get_toplevels</primary></indexterm>gdk_window_get_toplevels <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_window_get_type_hint</primary></indexterm>gdk_window_get_type_hint <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_window_get_update_area</primary></indexterm>gdk_window_get_update_area <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_window_get_user_data</primary></indexterm>gdk_window_get_user_data <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_window_get_window_type</primary></indexterm>gdk_window_get_window_type <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_window_hide</primary></indexterm>gdk_window_hide <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_window_hints_get_type</primary></indexterm>gdk_window_hints_get_type <LINK LINKEND="REFSTD.libgdk.x11.2.0.2">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_window_iconify</primary></indexterm>gdk_window_iconify <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_window_input_shape_combine_mask</primary></indexterm>gdk_window_input_shape_combine_mask <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_window_input_shape_combine_region</primary></indexterm>gdk_window_input_shape_combine_region <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_window_invalidate_maybe_recurse</primary></indexterm>gdk_window_invalidate_maybe_recurse <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_window_invalidate_rect</primary></indexterm>gdk_window_invalidate_rect <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_window_invalidate_region</primary></indexterm>gdk_window_invalidate_region <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_window_is_viewable</primary></indexterm>gdk_window_is_viewable <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_window_is_visible</primary></indexterm>gdk_window_is_visible <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_window_lookup</primary></indexterm>gdk_window_lookup <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_window_lookup_for_display</primary></indexterm>gdk_window_lookup_for_display <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_window_lower</primary></indexterm>gdk_window_lower <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_window_maximize</primary></indexterm>gdk_window_maximize <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_window_merge_child_input_shapes</primary></indexterm>gdk_window_merge_child_input_shapes <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_window_merge_child_shapes</primary></indexterm>gdk_window_merge_child_shapes <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_window_move</primary></indexterm>gdk_window_move <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_window_move_region</primary></indexterm>gdk_window_move_region <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_window_move_resize</primary></indexterm>gdk_window_move_resize <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_window_new</primary></indexterm>gdk_window_new <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_window_object_get_type</primary></indexterm>gdk_window_object_get_type <LINK LINKEND="REFSTD.libgdk.x11.2.0.2">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_window_peek_children</primary></indexterm>gdk_window_peek_children <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_window_process_all_updates</primary></indexterm>gdk_window_process_all_updates <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_window_process_updates</primary></indexterm>gdk_window_process_updates <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_window_raise</primary></indexterm>gdk_window_raise <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_window_register_dnd</primary></indexterm>gdk_window_register_dnd <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_window_remove_filter</primary></indexterm>gdk_window_remove_filter <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_window_reparent</primary></indexterm>gdk_window_reparent <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_window_resize</primary></indexterm>gdk_window_resize <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_window_scroll</primary></indexterm>gdk_window_scroll <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_window_set_accept_focus</primary></indexterm>gdk_window_set_accept_focus <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_window_set_back_pixmap</primary></indexterm>gdk_window_set_back_pixmap <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_window_set_background</primary></indexterm>gdk_window_set_background <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_window_set_child_input_shapes</primary></indexterm>gdk_window_set_child_input_shapes <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_window_set_child_shapes</primary></indexterm>gdk_window_set_child_shapes <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_window_set_cursor</primary></indexterm>gdk_window_set_cursor <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_window_set_debug_updates</primary></indexterm>gdk_window_set_debug_updates <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_window_set_decorations</primary></indexterm>gdk_window_set_decorations <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_window_set_events</primary></indexterm>gdk_window_set_events <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_window_set_focus_on_map</primary></indexterm>gdk_window_set_focus_on_map <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_window_set_functions</primary></indexterm>gdk_window_set_functions <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_window_set_geometry_hints</primary></indexterm>gdk_window_set_geometry_hints <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_window_set_group</primary></indexterm>gdk_window_set_group <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_window_set_icon</primary></indexterm>gdk_window_set_icon <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_window_set_icon_list</primary></indexterm>gdk_window_set_icon_list <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_window_set_icon_name</primary></indexterm>gdk_window_set_icon_name <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_window_set_keep_above</primary></indexterm>gdk_window_set_keep_above <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_window_set_keep_below</primary></indexterm>gdk_window_set_keep_below <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_window_set_modal_hint</primary></indexterm>gdk_window_set_modal_hint <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_window_set_override_redirect</primary></indexterm>gdk_window_set_override_redirect <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_window_set_role</primary></indexterm>gdk_window_set_role <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_window_set_skip_pager_hint</primary></indexterm>gdk_window_set_skip_pager_hint <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_window_set_skip_taskbar_hint</primary></indexterm>gdk_window_set_skip_taskbar_hint <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_window_set_static_gravities</primary></indexterm>gdk_window_set_static_gravities <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_window_set_title</primary></indexterm>gdk_window_set_title <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_window_set_transient_for</primary></indexterm>gdk_window_set_transient_for <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_window_set_type_hint</primary></indexterm>gdk_window_set_type_hint <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_window_set_urgency_hint</primary></indexterm>gdk_window_set_urgency_hint <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_window_set_user_data</primary></indexterm>gdk_window_set_user_data <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_window_shape_combine_mask</primary></indexterm>gdk_window_shape_combine_mask <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_window_shape_combine_region</primary></indexterm>gdk_window_shape_combine_region <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_window_show</primary></indexterm>gdk_window_show <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_window_show_unraised</primary></indexterm>gdk_window_show_unraised <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_window_state_get_type</primary></indexterm>gdk_window_state_get_type <LINK LINKEND="REFSTD.libgdk.x11.2.0.2">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_window_stick</primary></indexterm>gdk_window_stick <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_window_thaw_updates</primary></indexterm>gdk_window_thaw_updates <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_window_type_get_type</primary></indexterm>gdk_window_type_get_type <LINK LINKEND="REFSTD.libgdk.x11.2.0.2">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_window_type_hint_get_type</primary></indexterm>gdk_window_type_hint_get_type <LINK LINKEND="REFSTD.libgdk.x11.2.0.2">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_window_unfullscreen</primary></indexterm>gdk_window_unfullscreen <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_window_unmaximize</primary></indexterm>gdk_window_unmaximize <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_window_unstick</primary></indexterm>gdk_window_unstick <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_window_withdraw</primary></indexterm>gdk_window_withdraw <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_wm_decoration_get_type</primary></indexterm>gdk_wm_decoration_get_type <LINK LINKEND="REFSTD.libgdk.x11.2.0.2">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_wm_function_get_type</primary></indexterm>gdk_wm_function_get_type <LINK LINKEND="REFSTD.libgdk.x11.2.0.2">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_x11_atom_to_xatom</primary></indexterm>gdk_x11_atom_to_xatom <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_x11_atom_to_xatom_for_display</primary></indexterm>gdk_x11_atom_to_xatom_for_display <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_x11_colormap_foreign_new</primary></indexterm>gdk_x11_colormap_foreign_new <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_x11_colormap_get_xcolormap</primary></indexterm>gdk_x11_colormap_get_xcolormap <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_x11_colormap_get_xdisplay</primary></indexterm>gdk_x11_colormap_get_xdisplay <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_x11_cursor_get_xcursor</primary></indexterm>gdk_x11_cursor_get_xcursor <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_x11_cursor_get_xdisplay</primary></indexterm>gdk_x11_cursor_get_xdisplay <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_x11_display_get_user_time</primary></indexterm>gdk_x11_display_get_user_time <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_x11_display_get_xdisplay</primary></indexterm>gdk_x11_display_get_xdisplay <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_x11_display_grab</primary></indexterm>gdk_x11_display_grab <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_x11_display_set_cursor_theme</primary></indexterm>gdk_x11_display_set_cursor_theme <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_x11_display_ungrab</primary></indexterm>gdk_x11_display_ungrab <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_x11_drawable_get_xdisplay</primary></indexterm>gdk_x11_drawable_get_xdisplay <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_x11_drawable_get_xid</primary></indexterm>gdk_x11_drawable_get_xid <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_x11_gc_get_xdisplay</primary></indexterm>gdk_x11_gc_get_xdisplay <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_x11_gc_get_xgc</primary></indexterm>gdk_x11_gc_get_xgc <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_x11_get_default_root_xwindow</primary></indexterm>gdk_x11_get_default_root_xwindow <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_x11_get_default_screen</primary></indexterm>gdk_x11_get_default_screen <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_x11_get_default_xdisplay</primary></indexterm>gdk_x11_get_default_xdisplay <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_x11_get_server_time</primary></indexterm>gdk_x11_get_server_time <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_x11_get_xatom_by_name</primary></indexterm>gdk_x11_get_xatom_by_name <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_x11_get_xatom_by_name_for_display</primary></indexterm>gdk_x11_get_xatom_by_name_for_display <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_x11_get_xatom_name</primary></indexterm>gdk_x11_get_xatom_name <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_x11_get_xatom_name_for_display</primary></indexterm>gdk_x11_get_xatom_name_for_display <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_x11_grab_server</primary></indexterm>gdk_x11_grab_server <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_x11_image_get_xdisplay</primary></indexterm>gdk_x11_image_get_xdisplay <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_x11_image_get_ximage</primary></indexterm>gdk_x11_image_get_ximage <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_x11_lookup_xdisplay</primary></indexterm>gdk_x11_lookup_xdisplay <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_x11_register_standard_event_type</primary></indexterm>gdk_x11_register_standard_event_type <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_x11_screen_get_screen_number</primary></indexterm>gdk_x11_screen_get_screen_number <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_x11_screen_get_window_manager_name</primary></indexterm>gdk_x11_screen_get_window_manager_name <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_x11_screen_get_xscreen</primary></indexterm>gdk_x11_screen_get_xscreen <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_x11_screen_lookup_visual</primary></indexterm>gdk_x11_screen_lookup_visual <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_x11_screen_supports_net_wm_hint</primary></indexterm>gdk_x11_screen_supports_net_wm_hint <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_x11_ungrab_server</primary></indexterm>gdk_x11_ungrab_server <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_x11_visual_get_xvisual</primary></indexterm>gdk_x11_visual_get_xvisual <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_x11_window_move_to_current_desktop</primary></indexterm>gdk_x11_window_move_to_current_desktop <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_x11_window_set_user_time</primary></indexterm>gdk_x11_window_set_user_time <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_x11_xatom_to_atom</primary></indexterm>gdk_x11_xatom_to_atom <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_x11_xatom_to_atom_for_display</primary></indexterm>gdk_x11_xatom_to_atom_for_display <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_xid_table_lookup</primary></indexterm>gdk_xid_table_lookup <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_xid_table_lookup_for_display</primary></indexterm>gdk_xid_table_lookup_for_display <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdkx_visual_get</primary></indexterm>gdkx_visual_get <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
<ENTRY></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for GTK Drawing toolkit specified in <XREF linkend="tbl-libgdk-x11-2.0-gtk-d-data">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<TABLE id="tbl-libgdk-x11-2.0-gtk-d-data">
<TITLE>libgdk-x11-2.0 - GTK Drawing toolkit Data Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>gdk_display</primary></indexterm>gdk_display <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_threads_lock</primary></indexterm>gdk_threads_lock <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_threads_unlock</primary></indexterm>gdk_threads_unlock <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.10]</LINK></ENTRY>
<ENTRY></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>
</SECT2>
</SECT1>
<SECT1 ID=libgdk-x11-2.0-ddefs>
<TITLE>Data Definitions for libgdk-x11-2.0</TITLE>
<PARA>
This section defines global identifiers and their values that are associated
with interfaces contained in libgdk-x11-2.0.
These definitions are organized into groups that
correspond to system headers. This convention is used as a
convenience for the reader, and does not imply the existence
of these headers, or their content.
Where an interface is defined as requiring a particular system header file
all of the data definitions for that system header file presented here shall be in effect.
</PARA>
<PARA>
This section gives data definitions to promote binary application
portability, not to repeat source interface definitions available
elsewhere. System providers and application developers should use this ABI
to supplement - not to replace - source interface definition specifications.
</PARA>
<PARA>
This specification uses the <XREF LINKEND='std.ISOC99'> C Language as the reference programming language, and data definitions are specified in ISO C format. The C language is used here as a convenient notation. Using a C language description of these data objects does not preclude their use by other programming languages.</PARA>
<SECT2>
<TITLE>gtk-2.0/gdk/gdk.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define GDK_WINDOWING_X11
#define GDK_PIXMAP_OBJECT(object)	 \
	((GdkPixmapObject *) GDK_PIXMAP (object))
#define GDK_WINDOW_OBJECT(object)	 \
	((GdkWindowObject *) GDK_WINDOW (object))
#define GDK_TYPE_WINDOW_ATTRIBUTES_TYPE	 \
	(gdk_window_attributes_type_get_type())
#define GDK_COLORMAP_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GDK_TYPE_COLORMAP, \
	GdkColormapClass))
#define GDK_DEVICE_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GDK_TYPE_DEVICE, GdkDeviceClass))
#define GDK_DISPLAY_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GDK_TYPE_DISPLAY, \
	GdkDisplayClass))
#define GDK_DISPLAY_MANAGER_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GDK_TYPE_DISPLAY_MANAGER, \
	GdkDisplayManagerClass))
#define GDK_DRAG_CONTEXT_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GDK_TYPE_DRAG_CONTEXT, \
	GdkDragContextClass))
#define GDK_DRAWABLE_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GDK_TYPE_DRAWABLE, \
	GdkDrawableClass))
#define GDK_GC_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GDK_TYPE_GC, GdkGCClass))
#define GDK_IMAGE_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GDK_TYPE_IMAGE, GdkImageClass))
#define GDK_KEYMAP_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GDK_TYPE_KEYMAP, GdkKeymapClass))
#define GDK_PANGO_RENDERER_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GDK_TYPE_PANGO_RENDERER, \
	GdkPangoRendererClass))
#define GDK_PIXMAP_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GDK_TYPE_PIXMAP, \
	GdkPixmapObjectClass))
#define GDK_SCREEN_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GDK_TYPE_SCREEN, GdkScreenClass))
#define GDK_VISUAL_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GDK_TYPE_VISUAL, GdkVisualClass))
#define GDK_WINDOW_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GDK_TYPE_WINDOW, \
	GdkWindowObjectClass))
#define GDK_IS_COLORMAP_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GDK_TYPE_COLORMAP))
#define GDK_IS_DEVICE_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GDK_TYPE_DEVICE))
#define GDK_IS_DISPLAY_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GDK_TYPE_DISPLAY))
#define GDK_IS_DISPLAY_MANAGER_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GDK_TYPE_DISPLAY_MANAGER))
#define GDK_IS_DRAG_CONTEXT_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GDK_TYPE_DRAG_CONTEXT))
#define GDK_IS_DRAWABLE_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GDK_TYPE_DRAWABLE))
#define GDK_IS_GC_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GDK_TYPE_GC))
#define GDK_IS_IMAGE_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GDK_TYPE_IMAGE))
#define GDK_IS_KEYMAP_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GDK_TYPE_KEYMAP))
#define GDK_IS_PANGO_RENDERER_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GDK_TYPE_PANGO_RENDERER))
#define GDK_IS_PIXMAP_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GDK_TYPE_PIXMAP))
#define GDK_IS_SCREEN_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GDK_TYPE_SCREEN))
#define GDK_IS_VISUAL_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GDK_TYPE_VISUAL))
#define GDK_IS_WINDOW_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GDK_TYPE_WINDOW))
#define GDK_COLORMAP(object)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((object), GDK_TYPE_COLORMAP, \
	GdkColormap))
#define GDK_DEVICE(object)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((object), GDK_TYPE_DEVICE, GdkDevice))
#define GDK_DISPLAY_OBJECT(object)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((object), GDK_TYPE_DISPLAY, GdkDisplay))
#define GDK_DISPLAY_MANAGER(object)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((object), GDK_TYPE_DISPLAY_MANAGER, \
	GdkDisplayManager))
#define GDK_DRAG_CONTEXT(object)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((object), GDK_TYPE_DRAG_CONTEXT, \
	GdkDragContext))
#define GDK_DRAWABLE(object)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((object), GDK_TYPE_DRAWABLE, \
	GdkDrawable))
#define GDK_GC(object)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((object), GDK_TYPE_GC, GdkGC))
#define GDK_IMAGE(object)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((object), GDK_TYPE_IMAGE, GdkImage))
#define GDK_KEYMAP(object)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((object), GDK_TYPE_KEYMAP, GdkKeymap))
#define GDK_PANGO_RENDERER(object)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((object), GDK_TYPE_PANGO_RENDERER, \
	GdkPangoRenderer))
#define GDK_PIXMAP(object)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((object), GDK_TYPE_PIXMAP, GdkPixmap))
#define GDK_SCREEN(object)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((object), GDK_TYPE_SCREEN, GdkScreen))
#define GDK_VISUAL(object)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((object), GDK_TYPE_VISUAL, GdkVisual))
#define GDK_WINDOW(object)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((object), GDK_TYPE_WINDOW, GdkWindow))
#define GDK_IS_COLORMAP(object)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((object), GDK_TYPE_COLORMAP))
#define GDK_IS_DEVICE(object)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((object), GDK_TYPE_DEVICE))
#define GDK_IS_DISPLAY(object)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((object), GDK_TYPE_DISPLAY))
#define GDK_IS_DISPLAY_MANAGER(object)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((object), GDK_TYPE_DISPLAY_MANAGER))
#define GDK_IS_DRAG_CONTEXT(object)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((object), GDK_TYPE_DRAG_CONTEXT))
#define GDK_IS_DRAWABLE(object)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((object), GDK_TYPE_DRAWABLE))
#define GDK_IS_GC(object)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((object), GDK_TYPE_GC))
#define GDK_IS_IMAGE(object)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((object), GDK_TYPE_IMAGE))
#define GDK_IS_KEYMAP(object)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((object), GDK_TYPE_KEYMAP))
#define GDK_IS_PANGO_RENDERER(object)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((object), GDK_TYPE_PANGO_RENDERER))
#define GDK_IS_PIXMAP(object)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((object), GDK_TYPE_PIXMAP))
#define GDK_IS_SCREEN(object)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((object), GDK_TYPE_SCREEN))
#define GDK_IS_VISUAL(object)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((object), GDK_TYPE_VISUAL))
#define GDK_IS_WINDOW(object)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((object), GDK_TYPE_WINDOW))
#define GDK_COLORMAP_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GDK_TYPE_COLORMAP, \
	GdkColormapClass))
#define GDK_DEVICE_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GDK_TYPE_DEVICE, GdkDeviceClass))
#define GDK_DISPLAY_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GDK_TYPE_DISPLAY, \
	GdkDisplayClass))
#define GDK_DISPLAY_MANAGER_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GDK_TYPE_DISPLAY_MANAGER, \
	GdkDisplayManagerClass))
#define GDK_DRAG_CONTEXT_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GDK_TYPE_DRAG_CONTEXT, \
	GdkDragContextClass))
#define GDK_DRAWABLE_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GDK_TYPE_DRAWABLE, \
	GdkDrawableClass))
#define GDK_GC_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GDK_TYPE_GC, GdkGCClass))
#define GDK_IMAGE_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GDK_TYPE_IMAGE, GdkImageClass))
#define GDK_KEYMAP_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GDK_TYPE_KEYMAP, GdkKeymapClass))
#define GDK_PANGO_RENDERER_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GDK_TYPE_PANGO_RENDERER, \
	GdkPangoRendererClass))
#define GDK_PIXMAP_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GDK_TYPE_PIXMAP, \
	GdkPixmapObjectClass))
#define GDK_SCREEN_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GDK_TYPE_SCREEN, GdkScreenClass))
#define GDK_VISUAL_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GDK_TYPE_VISUAL, GdkVisualClass))
#define GDK_WINDOW_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GDK_TYPE_WINDOW, \
	GdkWindowObjectClass))
#define GDK_THREADS_ENTER()	 \
	G_STMT_START { if (gdk_threads_lock) (*gdk_threads_lock) (); } \
	G_STMT_END
#define GDK_THREADS_LEAVE()	 \
	G_STMT_START { if (gdk_threads_unlock) (*gdk_threads_unlock) (); } \
	G_STMT_END
#define GDK_POINTER_TO_ATOM(ptr)	((GdkAtom)(ptr))
#define _GDK_MAKE_ATOM(val)	((GdkAtom)GUINT_TO_POINTER(val))
#define GDK_ATOM_TO_POINTER(atom)	(atom)
#define GDK_TYPE_AXIS_USE	(gdk_axis_use_get_type())
#define GDK_TYPE_BYTE_ORDER	(gdk_byte_order_get_type())
#define GDK_TYPE_CAP_STYLE	(gdk_cap_style_get_type())
#define GDK_TYPE_COLORMAP	(gdk_colormap_get_type ())
#define GDK_TYPE_COLOR	(gdk_color_get_type ())
#define GDK_TYPE_CROSSING_MODE	(gdk_crossing_mode_get_type())
#define GDK_TYPE_CURSOR	(gdk_cursor_get_type ())
#define GDK_TYPE_CURSOR_TYPE	(gdk_cursor_type_get_type())
#define GDK_TYPE_DEVICE	(gdk_device_get_type ())
#define GDK_TYPE_DISPLAY	(gdk_display_get_type ())
#define GDK_TYPE_DISPLAY_MANAGER	(gdk_display_manager_get_type ())
#define GDK_TYPE_DRAG_ACTION	(gdk_drag_action_get_type())
#define GDK_TYPE_DRAG_CONTEXT	(gdk_drag_context_get_type ())
#define GDK_TYPE_DRAG_PROTOCOL	(gdk_drag_protocol_get_type())
#define GDK_TYPE_DRAWABLE	(gdk_drawable_get_type ())
#define GDK_TYPE_EVENT	(gdk_event_get_type ())
#define GDK_TYPE_EVENT_MASK	(gdk_event_mask_get_type())
#define GDK_TYPE_EVENT_TYPE	(gdk_event_type_get_type())
#define GDK_TYPE_EXTENSION_MODE	(gdk_extension_mode_get_type())
#define GDK_TYPE_FILL	(gdk_fill_get_type())
#define GDK_TYPE_FILL_RULE	(gdk_fill_rule_get_type())
#define GDK_TYPE_FILTER_RETURN	(gdk_filter_return_get_type())
#define GDK_TYPE_FONT_TYPE	(gdk_font_type_get_type())
#define GDK_TYPE_FUNCTION	(gdk_function_get_type())
#define GDK_TYPE_GC	(gdk_gc_get_type ())
#define GDK_TYPE_GC_VALUES_MASK	(gdk_gc_values_mask_get_type())
#define GDK_TYPE_GRAB_STATUS	(gdk_grab_status_get_type())
#define GDK_TYPE_GRAVITY	(gdk_gravity_get_type())
#define GDK_TYPE_IMAGE	(gdk_image_get_type ())
#define GDK_TYPE_IMAGE_TYPE	(gdk_image_type_get_type())
#define GDK_TYPE_INPUT_CONDITION	(gdk_input_condition_get_type())
#define GDK_TYPE_INPUT_MODE	(gdk_input_mode_get_type())
#define GDK_TYPE_INPUT_SOURCE	(gdk_input_source_get_type())
#define GDK_TYPE_JOIN_STYLE	(gdk_join_style_get_type())
#define GDK_TYPE_KEYMAP	(gdk_keymap_get_type ())
#define GDK_TYPE_LINE_STYLE	(gdk_line_style_get_type())
#define GDK_TYPE_MODIFIER_TYPE	(gdk_modifier_type_get_type())
#define GDK_TYPE_NOTIFY_TYPE	(gdk_notify_type_get_type())
#define GDK_TYPE_OVERLAP_TYPE	(gdk_overlap_type_get_type())
#define GDK_TYPE_OWNER_CHANGE	(gdk_owner_change_get_type())
#define GDK_TYPE_PANGO_RENDERER	(gdk_pango_renderer_get_type())
#define GDK_TYPE_PIXMAP	(gdk_pixmap_get_type ())
#define GDK_TYPE_PROPERTY_STATE	(gdk_property_state_get_type())
#define GDK_TYPE_PROP_MODE	(gdk_prop_mode_get_type())
#define GDK_TYPE_RECTANGLE	(gdk_rectangle_get_type ())
#define GDK_TYPE_RGB_DITHER	(gdk_rgb_dither_get_type())
#define GDK_TYPE_SCREEN	(gdk_screen_get_type ())
#define GDK_TYPE_SCROLL_DIRECTION	(gdk_scroll_direction_get_type())
#define GDK_TYPE_SETTING_ACTION	(gdk_setting_action_get_type())
#define GDK_TYPE_STATUS	(gdk_status_get_type())
#define GDK_TYPE_SUBWINDOW_MODE	(gdk_subwindow_mode_get_type())
#define GDK_TYPE_VISIBILITY_STATE	(gdk_visibility_state_get_type())
#define GDK_TYPE_VISUAL	(gdk_visual_get_type ())
#define GDK_TYPE_VISUAL_TYPE	(gdk_visual_type_get_type())
#define GDK_TYPE_WINDOW_CLASS	(gdk_window_class_get_type())
#define GDK_TYPE_WINDOW_EDGE	(gdk_window_edge_get_type())
#define GDK_TYPE_WINDOW_HINTS	(gdk_window_hints_get_type())
#define GDK_TYPE_WINDOW	(gdk_window_object_get_type ())
#define GDK_TYPE_WINDOW_STATE	(gdk_window_state_get_type())
#define GDK_TYPE_WINDOW_TYPE	(gdk_window_type_get_type())
#define GDK_TYPE_WINDOW_TYPE_HINT	(gdk_window_type_hint_get_type())
#define GDK_TYPE_WM_DECORATION	(gdk_wm_decoration_get_type())
#define GDK_TYPE_WM_FUNCTION	(gdk_wm_function_get_type())
#define GDK_PRIORITY_EVENTS	(G_PRIORITY_DEFAULT)
#define GDK_PRIORITY_REDRAW	(G_PRIORITY_HIGH_IDLE + 20)
#define GDK_CURRENT_TIME	0L
#define GDK_HAVE_WCHAR_H	1
#define GDK_HAVE_WCTYPE_H	1
#define GDK_MAX_TIMECOORD_AXES	128
#define GDK_PARENT_RELATIVE	1L
#define GDKVAR	extern
#define gdk_draw_bitmap	gdk_draw_drawable
#define GDK_NONE	_GDK_MAKE_ATOM (0)
#define GDK_SELECTION_PRIMARY	_GDK_MAKE_ATOM (1)
#define GDK_SELECTION_TYPE_DRAWABLE	_GDK_MAKE_ATOM (17)
#define GDK_TARGET_DRAWABLE	_GDK_MAKE_ATOM (17)
#define GDK_SELECTION_TYPE_INTEGER	_GDK_MAKE_ATOM (19)
#define GDK_SELECTION_SECONDARY	_GDK_MAKE_ATOM (2)
#define GDK_SELECTION_TYPE_PIXMAP	_GDK_MAKE_ATOM (20)
#define GDK_TARGET_PIXMAP	_GDK_MAKE_ATOM (20)
#define GDK_SELECTION_TYPE_STRING	_GDK_MAKE_ATOM (31)
#define GDK_TARGET_STRING	_GDK_MAKE_ATOM (31)
#define GDK_SELECTION_TYPE_WINDOW	_GDK_MAKE_ATOM (33)
#define GDK_SELECTION_TYPE_ATOM	_GDK_MAKE_ATOM (4)
#define GDK_SELECTION_TYPE_BITMAP	_GDK_MAKE_ATOM (5)
#define GDK_TARGET_BITMAP	_GDK_MAKE_ATOM (5)
#define GDK_SELECTION_CLIPBOARD	_GDK_MAKE_ATOM (69)
#define GDK_SELECTION_TYPE_COLORMAP	_GDK_MAKE_ATOM (7)
#define GDK_TARGET_COLORMAP	_GDK_MAKE_ATOM (7)

typedef struct _GdkDrawable {
    GObject parent_instance;
} GdkWindow;
typedef struct _GdkColor {
    guint32 pixel;
    guint16 red;
    guint16 green;
    guint16 blue;
} GdkColor;
typedef enum {
    GDK_VISUAL_STATIC_GRAY = 0,
    GDK_VISUAL_GRAYSCALE = 1,
    GDK_VISUAL_STATIC_COLOR = 2,
    GDK_VISUAL_PSEUDO_COLOR = 3,
    GDK_VISUAL_TRUE_COLOR = 4,
    GDK_VISUAL_DIRECT_COLOR = 5
} GdkVisualType;
typedef enum {
    GDK_LSB_FIRST = 0,
    GDK_MSB_FIRST = 1
} GdkByteOrder;
typedef struct _GdkVisual {
    GObject parent_instance;
    GdkVisualType type;
    gint depth;
    GdkByteOrder byte_order;
    gint colormap_size;
    gint bits_per_rgb;
    guint32 red_mask;
    gint red_shift;
    gint red_prec;
    guint32 green_mask;
    gint green_shift;
    gint green_prec;
    guint32 blue_mask;
    gint blue_shift;
    gint blue_prec;
} GdkVisual;
typedef struct _GdkColormap {
    GObject parent_instance;
    gint size;
    GdkColor *colors;
    GdkVisual *visual;
    gpointer windowing_data;
} GdkColormap;
typedef struct _GdkGC {
    GObject parent_instance;
    gint clip_x_origin;
    gint clip_y_origin;
    gint ts_x_origin;
    gint ts_y_origin;
    GdkColormap *colormap;
} GdkGC;
typedef struct _GdkDrawable {
    GObject parent_instance;
} GdkDrawable;
typedef enum {
    GDK_SOURCE_MOUSE = 0,
    GDK_SOURCE_PEN = 1,
    GDK_SOURCE_ERASER = 2,
    GDK_SOURCE_CURSOR = 3
} GdkInputSource;
typedef enum {
    GDK_MODE_DISABLED = 0,
    GDK_MODE_SCREEN = 1,
    GDK_MODE_WINDOW = 2
} GdkInputMode;
typedef enum {
    GDK_AXIS_IGNORE = 0,
    GDK_AXIS_X = 1,
    GDK_AXIS_Y = 2,
    GDK_AXIS_PRESSURE = 3,
    GDK_AXIS_XTILT = 4,
    GDK_AXIS_YTILT = 5,
    GDK_AXIS_WHEEL = 6,
    GDK_AXIS_LAST = 7
} GdkAxisUse;
typedef struct _GdkDeviceAxis {
    GdkAxisUse use;
    gdouble min;
    gdouble max;
} GdkDeviceAxis;
typedef enum {
    GDK_SHIFT_MASK = 1,
    GDK_LOCK_MASK = 2,
    GDK_CONTROL_MASK = 4,
    GDK_MOD1_MASK = 8,
    GDK_MOD2_MASK = 16,
    GDK_MOD3_MASK = 32,
    GDK_MOD4_MASK = 64,
    GDK_MOD5_MASK = 128,
    GDK_BUTTON1_MASK = 256,
    GDK_BUTTON2_MASK = 512,
    GDK_BUTTON3_MASK = 1024,
    GDK_BUTTON4_MASK = 2048,
    GDK_BUTTON5_MASK = 4096,
    GDK_RELEASE_MASK = 1073741824,
    GDK_MODIFIER_MASK = 1073750015
} GdkModifierType;
typedef struct _GdkDeviceKey {
    guint keyval;
    GdkModifierType modifiers;
} GdkDeviceKey;
typedef struct _GdkDevice {
    GObject parent_instance;
    gchar *name;
    GdkInputSource source;
    GdkInputMode mode;
    gboolean has_cursor;
    gint num_axes;
    GdkDeviceAxis *axes;
    gint num_keys;
    GdkDeviceKey *keys;
} GdkDevice;
typedef struct _GdkDisplay {
    GObject parent_instance;
    GList *queued_events;
    GList *queued_tail;
    guint32 button_click_time[2];
    GdkWindow *button_window[2];
    gint button_number[2];
    guint double_click_time;
    GdkDevice *core_pointer;
    const GdkDisplayPointerHooks *pointer_hooks;
    guint closed:1;
    guint double_click_distance;
    gint button_x[2];
    gint button_y[2];
} GdkDisplay;
typedef struct _GdkScreen GdkScreen;
typedef struct _GdkDisplayPointerHooks {
    void (*get_pointer) (GdkDisplay *, GdkScreen * *, gint *, gint *,
			 GdkModifierType *);
    GdkWindow *(*window_get_pointer) (GdkDisplay *, GdkWindow *, gint *,
				      gint *, GdkModifierType *);
    GdkWindow *(*window_at_pointer) (GdkDisplay *, gint *, gint *);
} GdkDisplayPointerHooks;
typedef enum {
    GDK_EXPOSURE_MASK = 2,
    GDK_POINTER_MOTION_MASK = 4,
    GDK_POINTER_MOTION_HINT_MASK = 8,
    GDK_BUTTON_MOTION_MASK = 16,
    GDK_BUTTON1_MOTION_MASK = 32,
    GDK_BUTTON2_MOTION_MASK = 64,
    GDK_BUTTON3_MOTION_MASK = 128,
    GDK_BUTTON_PRESS_MASK = 256,
    GDK_BUTTON_RELEASE_MASK = 512,
    GDK_KEY_PRESS_MASK = 1024,
    GDK_KEY_RELEASE_MASK = 2048,
    GDK_ENTER_NOTIFY_MASK = 4096,
    GDK_LEAVE_NOTIFY_MASK = 8192,
    GDK_FOCUS_CHANGE_MASK = 16384,
    GDK_STRUCTURE_MASK = 32768,
    GDK_PROPERTY_CHANGE_MASK = 65536,
    GDK_VISIBILITY_NOTIFY_MASK = 131072,
    GDK_PROXIMITY_IN_MASK = 262144,
    GDK_PROXIMITY_OUT_MASK = 524288,
    GDK_SUBSTRUCTURE_MASK = 1048576,
    GDK_SCROLL_MASK = 2097152,
    GDK_ALL_EVENTS_MASK = 4194302
} GdkEventMask;
typedef enum {
    GDK_X_CURSOR = 0,
    GDK_ARROW = 2,
    GDK_BASED_ARROW_DOWN = 4,
    GDK_BASED_ARROW_UP = 6,
    GDK_BOAT = 8,
    GDK_BOGOSITY = 10,
    GDK_BOTTOM_LEFT_CORNER = 12,
    GDK_BOTTOM_RIGHT_CORNER = 14,
    GDK_BOTTOM_SIDE = 16,
    GDK_BOTTOM_TEE = 18,
    GDK_BOX_SPIRAL = 20,
    GDK_CENTER_PTR = 22,
    GDK_CIRCLE = 24,
    GDK_CLOCK = 26,
    GDK_COFFEE_MUG = 28,
    GDK_CROSS = 30,
    GDK_CROSS_REVERSE = 32,
    GDK_CROSSHAIR = 34,
    GDK_DIAMOND_CROSS = 36,
    GDK_DOT = 38,
    GDK_DOTBOX = 40,
    GDK_DOUBLE_ARROW = 42,
    GDK_DRAFT_LARGE = 44,
    GDK_DRAFT_SMALL = 46,
    GDK_DRAPED_BOX = 48,
    GDK_EXCHANGE = 50,
    GDK_FLEUR = 52,
    GDK_GOBBLER = 54,
    GDK_GUMBY = 56,
    GDK_HAND1 = 58,
    GDK_HAND2 = 60,
    GDK_HEART = 62,
    GDK_ICON = 64,
    GDK_IRON_CROSS = 66,
    GDK_LEFT_PTR = 68,
    GDK_LEFT_SIDE = 70,
    GDK_LEFT_TEE = 72,
    GDK_LEFTBUTTON = 74,
    GDK_LL_ANGLE = 76,
    GDK_LR_ANGLE = 78,
    GDK_MAN = 80,
    GDK_MIDDLEBUTTON = 82,
    GDK_MOUSE = 84,
    GDK_PENCIL = 86,
    GDK_PIRATE = 88,
    GDK_PLUS = 90,
    GDK_QUESTION_ARROW = 92,
    GDK_RIGHT_PTR = 94,
    GDK_RIGHT_SIDE = 96,
    GDK_RIGHT_TEE = 98,
    GDK_RIGHTBUTTON = 100,
    GDK_RTL_LOGO = 102,
    GDK_SAILBOAT = 104,
    GDK_SB_DOWN_ARROW = 106,
    GDK_SB_H_DOUBLE_ARROW = 108,
    GDK_SB_LEFT_ARROW = 110,
    GDK_SB_RIGHT_ARROW = 112,
    GDK_SB_UP_ARROW = 114,
    GDK_SB_V_DOUBLE_ARROW = 116,
    GDK_SHUTTLE = 118,
    GDK_SIZING = 120,
    GDK_SPIDER = 122,
    GDK_SPRAYCAN = 124,
    GDK_STAR = 126,
    GDK_TARGET = 128,
    GDK_TCROSS = 130,
    GDK_TOP_LEFT_ARROW = 132,
    GDK_TOP_LEFT_CORNER = 134,
    GDK_TOP_RIGHT_CORNER = 136,
    GDK_TOP_SIDE = 138,
    GDK_TOP_TEE = 140,
    GDK_TREK = 142,
    GDK_UL_ANGLE = 144,
    GDK_UMBRELLA = 146,
    GDK_UR_ANGLE = 148,
    GDK_WATCH = 150,
    GDK_XTERM = 152,
    GDK_LAST_CURSOR = 153,
    GDK_CURSOR_IS_PIXMAP = -1
} GdkCursorType;
typedef struct _GdkCursor {
    GdkCursorType type;
    guint ref_count;
} GdkCursor;
typedef struct _GdkKeymap {
    GObject parent_instance;
    GdkDisplay *display;
} GdkKeymap;
typedef struct _GdkAtom *GdkAtom;
typedef enum {
    GDK_FILTER_CONTINUE = 0,
    GDK_FILTER_TRANSLATE = 1,
    GDK_FILTER_REMOVE = 2
} GdkFilterReturn;
typedef void GdkXEvent;
typedef enum {
    GDK_NOTHING = -1,
    GDK_DELETE = 0,
    GDK_DESTROY = 1,
    GDK_EXPOSE = 2,
    GDK_MOTION_NOTIFY = 3,
    GDK_BUTTON_PRESS = 4,
    GDK_2BUTTON_PRESS = 5,
    GDK_3BUTTON_PRESS = 6,
    GDK_BUTTON_RELEASE = 7,
    GDK_KEY_PRESS = 8,
    GDK_KEY_RELEASE = 9,
    GDK_ENTER_NOTIFY = 10,
    GDK_LEAVE_NOTIFY = 11,
    GDK_FOCUS_CHANGE = 12,
    GDK_CONFIGURE = 13,
    GDK_MAP = 14,
    GDK_UNMAP = 15,
    GDK_PROPERTY_NOTIFY = 16,
    GDK_SELECTION_CLEAR = 17,
    GDK_SELECTION_REQUEST = 18,
    GDK_SELECTION_NOTIFY = 19,
    GDK_PROXIMITY_IN = 20,
    GDK_PROXIMITY_OUT = 21,
    GDK_DRAG_ENTER = 22,
    GDK_DRAG_LEAVE = 23,
    GDK_DRAG_MOTION = 24,
    GDK_DRAG_STATUS = 25,
    GDK_DROP_START = 26,
    GDK_DROP_FINISHED = 27,
    GDK_CLIENT_EVENT = 28,
    GDK_VISIBILITY_NOTIFY = 29,
    GDK_NO_EXPOSE = 30,
    GDK_SCROLL = 31,
    GDK_WINDOW_STATE = 32,
    GDK_SETTING = 33,
    GDK_OWNER_CHANGE = 34
} GdkEventType;
typedef struct _GdkEventAny {
    GdkEventType type;
    GdkWindow *window;
    gint8 send_event;
} GdkEventAny;
typedef struct _GdkRectangle {
    gint x;
    gint y;
    gint width;
    gint height;
} GdkRectangle;
typedef struct _GdkRegion GdkRegion;
typedef struct _GdkEventExpose {
    GdkEventType type;
    GdkWindow *window;
    gint8 send_event;
    GdkRectangle area;
    GdkRegion *region;
    gint count;
} GdkEventExpose;
typedef struct _GdkEventNoExpose {
    GdkEventType type;
    GdkWindow *window;
    gint8 send_event;
} GdkEventNoExpose;
typedef enum {
    GDK_VISIBILITY_UNOBSCURED = 0,
    GDK_VISIBILITY_PARTIAL = 1,
    GDK_VISIBILITY_FULLY_OBSCURED = 2
} GdkVisibilityState;
typedef struct _GdkEventVisibility {
    GdkEventType type;
    GdkWindow *window;
    gint8 send_event;
    GdkVisibilityState state;
} GdkEventVisibility;
typedef struct _GdkEventMotion {
    GdkEventType type;
    GdkWindow *window;
    gint8 send_event;
    guint32 time;
    gdouble x;
    gdouble y;
    gdouble *axes;
    guint state;
    gint16 is_hint;
    GdkDevice *device;
    gdouble x_root;
    gdouble y_root;
} GdkEventMotion;
typedef struct _GdkEventButton {
    GdkEventType type;
    GdkWindow *window;
    gint8 send_event;
    guint32 time;
    gdouble x;
    gdouble y;
    gdouble *axes;
    guint state;
    guint button;
    GdkDevice *device;
    gdouble x_root;
    gdouble y_root;
} GdkEventButton;
typedef enum {
    GDK_SCROLL_UP = 0,
    GDK_SCROLL_DOWN = 1,
    GDK_SCROLL_LEFT = 2,
    GDK_SCROLL_RIGHT = 3
} GdkScrollDirection;
typedef struct _GdkEventScroll {
    GdkEventType type;
    GdkWindow *window;
    gint8 send_event;
    guint32 time;
    gdouble x;
    gdouble y;
    guint state;
    GdkScrollDirection direction;
    GdkDevice *device;
    gdouble x_root;
    gdouble y_root;
} GdkEventScroll;
typedef struct _GdkEventKey {
    GdkEventType type;
    GdkWindow *window;
    gint8 send_event;
    guint32 time;
    guint state;
    guint keyval;
    gint length;
    gchar *string;
    guint16 hardware_keycode;
    guint8 group;
} GdkEventKey;
typedef enum {
    GDK_CROSSING_NORMAL = 0,
    GDK_CROSSING_GRAB = 1,
    GDK_CROSSING_UNGRAB = 2
} GdkCrossingMode;
typedef enum {
    GDK_NOTIFY_ANCESTOR = 0,
    GDK_NOTIFY_VIRTUAL = 1,
    GDK_NOTIFY_INFERIOR = 2,
    GDK_NOTIFY_NONLINEAR = 3,
    GDK_NOTIFY_NONLINEAR_VIRTUAL = 4,
    GDK_NOTIFY_UNKNOWN = 5
} GdkNotifyType;
typedef struct _GdkEventCrossing {
    GdkEventType type;
    GdkWindow *window;
    gint8 send_event;
    GdkWindow *subwindow;
    guint32 time;
    gdouble x;
    gdouble y;
    gdouble x_root;
    gdouble y_root;
    GdkCrossingMode mode;
    GdkNotifyType detail;
    gboolean focus;
    guint state;
} GdkEventCrossing;
typedef struct _GdkEventFocus {
    GdkEventType type;
    GdkWindow *window;
    gint8 send_event;
    gint16 in;
} GdkEventFocus;
typedef struct _GdkEventConfigure {
    GdkEventType type;
    GdkWindow *window;
    gint8 send_event;
    gint x;
    gint y;
    gint width;
    gint height;
} GdkEventConfigure;
typedef struct _GdkEventProperty {
    GdkEventType type;
    GdkWindow *window;
    gint8 send_event;
    GdkAtom atom;
    guint32 time;
    guint state;
} GdkEventProperty;
typedef guint32 GdkNativeWindow;
typedef struct _GdkEventSelection {
    GdkEventType type;
    GdkWindow *window;
    gint8 send_event;
    GdkAtom selection;
    GdkAtom target;
    GdkAtom property;
    guint32 time;
    GdkNativeWindow requestor;
} GdkEventSelection;
typedef enum {
    GDK_OWNER_CHANGE_NEW_OWNER = 0,
    GDK_OWNER_CHANGE_DESTROY = 1,
    GDK_OWNER_CHANGE_CLOSE = 2
} GdkOwnerChange;
typedef struct _GdkEventOwnerChange {
    GdkEventType type;
    GdkWindow *window;
    gint8 send_event;
    GdkNativeWindow owner;
    GdkOwnerChange reason;
    GdkAtom selection;
    guint32 time;
    guint32 selection_time;
} GdkEventOwnerChange;
typedef struct _GdkEventProximity {
    GdkEventType type;
    GdkWindow *window;
    gint8 send_event;
    guint32 time;
    GdkDevice *device;
} GdkEventProximity;
typedef struct _GdkEventClient {
    GdkEventType type;
    GdkWindow *window;
    gint8 send_event;
    GdkAtom message_type;
    gushort data_format;
    union {
	char b[20];
	short int s[10];
	long int l[5];
    } data;
} GdkEventClient;
typedef enum {
    GDK_DRAG_PROTO_MOTIF = 0,
    GDK_DRAG_PROTO_XDND = 1,
    GDK_DRAG_PROTO_ROOTWIN = 2,
    GDK_DRAG_PROTO_NONE = 3,
    GDK_DRAG_PROTO_WIN32_DROPFILES = 4,
    GDK_DRAG_PROTO_OLE2 = 5,
    GDK_DRAG_PROTO_LOCAL = 6
} GdkDragProtocol;
typedef enum {
    GDK_ACTION_DEFAULT = 1,
    GDK_ACTION_COPY = 2,
    GDK_ACTION_MOVE = 4,
    GDK_ACTION_LINK = 8,
    GDK_ACTION_PRIVATE = 16,
    GDK_ACTION_ASK = 32
} GdkDragAction;
typedef struct _GdkDragContext {
    GObject parent_instance;
    GdkDragProtocol protocol;
    gboolean is_source;
    GdkWindow *source_window;
    GdkWindow *dest_window;
    GList *targets;
    GdkDragAction actions;
    GdkDragAction suggested_action;
    GdkDragAction action;
    guint32 start_time;
    gpointer windowing_data;
} GdkDragContext;
typedef short int gshort;
typedef struct _GdkEventDND {
    GdkEventType type;
    GdkWindow *window;
    gint8 send_event;
    GdkDragContext *context;
    guint32 time;
    gshort x_root;
    gshort y_root;
} GdkEventDND;
typedef enum {
    GDK_WINDOW_STATE_WITHDRAWN = 1,
    GDK_WINDOW_STATE_ICONIFIED = 2,
    GDK_WINDOW_STATE_MAXIMIZED = 4,
    GDK_WINDOW_STATE_STICKY = 8,
    GDK_WINDOW_STATE_FULLSCREEN = 16,
    GDK_WINDOW_STATE_ABOVE = 32,
    GDK_WINDOW_STATE_BELOW = 64
} GdkWindowState;
typedef struct _GdkEventWindowState {
    GdkEventType type;
    GdkWindow *window;
    gint8 send_event;
    GdkWindowState changed_mask;
    GdkWindowState new_window_state;
} GdkEventWindowState;
typedef enum {
    GDK_SETTING_ACTION_NEW = 0,
    GDK_SETTING_ACTION_CHANGED = 1,
    GDK_SETTING_ACTION_DELETED = 2
} GdkSettingAction;
typedef struct _GdkEventSetting {
    GdkEventType type;
    GdkWindow *window;
    gint8 send_event;
    GdkSettingAction action;
    char *name;
} GdkEventSetting;
typedef union _GdkEvent {
    GdkEventType type;
    GdkEventAny any;
    GdkEventExpose expose;
    GdkEventNoExpose no_expose;
    GdkEventVisibility visibility;
    GdkEventMotion motion;
    GdkEventButton button;
    GdkEventScroll scroll;
    GdkEventKey key;
    GdkEventCrossing crossing;
    GdkEventFocus focus_change;
    GdkEventConfigure configure;
    GdkEventProperty property;
    GdkEventSelection selection;
    GdkEventOwnerChange owner_change;
    GdkEventProximity proximity;
    GdkEventClient client;
    GdkEventDND dnd;
    GdkEventWindowState window_state;
    GdkEventSetting setting;
} GdkEvent;
typedef GdkFilterReturn(*GdkFilterFunc) (GdkXEvent *, GdkEvent *,
					 gpointer);
typedef struct _GdkDrawable {
    GObject parent_instance;
} GdkPixmap;
typedef struct _GdkDrawable {
    GObject parent_instance;
} GdkBitmap;
typedef struct _GdkDisplayManager GdkDisplayManager;
typedef enum {
    GDK_CLIP_BY_CHILDREN = 0,
    GDK_INCLUDE_INFERIORS = 1
} GdkSubwindowMode;
typedef enum {
    GDK_WINDOW_EDGE_NORTH_WEST = 0,
    GDK_WINDOW_EDGE_NORTH = 1,
    GDK_WINDOW_EDGE_NORTH_EAST = 2,
    GDK_WINDOW_EDGE_WEST = 3,
    GDK_WINDOW_EDGE_EAST = 4,
    GDK_WINDOW_EDGE_SOUTH_WEST = 5,
    GDK_WINDOW_EDGE_SOUTH = 6,
    GDK_WINDOW_EDGE_SOUTH_EAST = 7
} GdkWindowEdge;
typedef enum {
    GDK_IMAGE_NORMAL = 0,
    GDK_IMAGE_SHARED = 1,
    GDK_IMAGE_FASTEST = 2
} GdkImageType;
typedef struct _GdkImage {
    GObject parent_instance;
    GdkImageType type;
    GdkVisual *visual;
    GdkByteOrder byte_order;
    gint width;
    gint height;
    guint16 depth;
    guint16 bpp;
    guint16 bpl;
    guint16 bits_per_pixel;
    gpointer mem;
    GdkColormap *colormap;
    gpointer windowing_data;
} GdkImage;
typedef struct _GdkPangoRendererPrivate GdkPangoRendererPrivate;
typedef struct _GdkPangoRenderer {
    PangoRenderer parent_instance;
    GdkPangoRendererPrivate *priv;
} GdkPangoRenderer;
typedef enum {
    GDK_GRAB_SUCCESS = 0,
    GDK_GRAB_ALREADY_GRABBED = 1,
    GDK_GRAB_INVALID_TIME = 2,
    GDK_GRAB_NOT_VIEWABLE = 3,
    GDK_GRAB_FROZEN = 4
} GdkGrabStatus;
typedef enum {
    GDK_SOLID = 0,
    GDK_TILED = 1,
    GDK_STIPPLED = 2,
    GDK_OPAQUE_STIPPLED = 3
} GdkFill;
typedef enum {
    GDK_WINDOW_TYPE_HINT_NORMAL = 0,
    GDK_WINDOW_TYPE_HINT_DIALOG = 1,
    GDK_WINDOW_TYPE_HINT_MENU = 2,
    GDK_WINDOW_TYPE_HINT_TOOLBAR = 3,
    GDK_WINDOW_TYPE_HINT_SPLASHSCREEN = 4,
    GDK_WINDOW_TYPE_HINT_UTILITY = 5,
    GDK_WINDOW_TYPE_HINT_DOCK = 6,
    GDK_WINDOW_TYPE_HINT_DESKTOP = 7,
    GDK_WINDOW_TYPE_HINT_DROPDOWN_MENU,
    GDK_WINDOW_TYPE_HINT_POPUP_MENU,
    GDK_WINDOW_TYPE_HINT_TOOLTIP,
    GDK_WINDOW_TYPE_HINT_NOTIFICATION,
    GDK_WINDOW_TYPE_HINT_COMBO,
    GDK_WINDOW_TYPE_HINT_DND
} GdkWindowTypeHint;
typedef struct _GdkTimeCoord {
    guint32 time;
    gdouble axes[128];
} GdkTimeCoord;
typedef struct _GdkPoint {
    gint x;
    gint y;
} GdkPoint;
typedef struct _GdkFont GdkFont;
typedef enum {
    GDK_DECOR_ALL = 1,
    GDK_DECOR_BORDER = 2,
    GDK_DECOR_RESIZEH = 4,
    GDK_DECOR_TITLE = 8,
    GDK_DECOR_MENU = 16,
    GDK_DECOR_MINIMIZE = 32,
    GDK_DECOR_MAXIMIZE = 64
} GdkWMDecoration;
typedef enum {
    GDK_FUNC_ALL = 1,
    GDK_FUNC_RESIZE = 2,
    GDK_FUNC_MOVE = 4,
    GDK_FUNC_MINIMIZE = 8,
    GDK_FUNC_MAXIMIZE = 16,
    GDK_FUNC_CLOSE = 32
} GdkWMFunction;
typedef struct _GdkKeymapKey {
    guint keycode;
    gint group;
    gint level;
} GdkKeymapKey;
typedef enum {
    GDK_RGB_DITHER_NONE = 0,
    GDK_RGB_DITHER_NORMAL = 1,
    GDK_RGB_DITHER_MAX = 2
} GdkRgbDither;
typedef struct _GdkRgbCmap {
    guint32 colors[256];
    gint n_colors;
    GSList *info_list;
} GdkRgbCmap;
typedef enum {
    GDK_COPY = 0,
    GDK_INVERT = 1,
    GDK_XOR = 2,
    GDK_CLEAR = 3,
    GDK_AND = 4,
    GDK_AND_REVERSE = 5,
    GDK_AND_INVERT = 6,
    GDK_NOOP = 7,
    GDK_OR = 8,
    GDK_EQUIV = 9,
    GDK_OR_REVERSE = 10,
    GDK_COPY_INVERT = 11,
    GDK_OR_INVERT = 12,
    GDK_NAND = 13,
    GDK_NOR = 14,
    GDK_SET = 15
} GdkFunction;
typedef enum {
    GDK_LINE_SOLID = 0,
    GDK_LINE_ON_OFF_DASH = 1,
    GDK_LINE_DOUBLE_DASH = 2
} GdkLineStyle;
typedef enum {
    GDK_CAP_NOT_LAST = 0,
    GDK_CAP_BUTT = 1,
    GDK_CAP_ROUND = 2,
    GDK_CAP_PROJECTING = 3
} GdkCapStyle;
typedef enum {
    GDK_JOIN_MITER = 0,
    GDK_JOIN_ROUND = 1,
    GDK_JOIN_BEVEL = 2
} GdkJoinStyle;
typedef struct _GdkGCValues {
    GdkColor foreground;
    GdkColor background;
    GdkFont *font;
    GdkFunction function;
    GdkFill fill;
    GdkPixmap *tile;
    GdkPixmap *stipple;
    GdkPixmap *clip_mask;
    GdkSubwindowMode subwindow_mode;
    gint ts_x_origin;
    gint ts_y_origin;
    gint clip_x_origin;
    gint clip_y_origin;
    gint graphics_exposures;
    gint line_width;
    GdkLineStyle line_style;
    GdkCapStyle cap_style;
    GdkJoinStyle join_style;
} GdkGCValues;
typedef enum {
    GDK_GC_FOREGROUND = 1,
    GDK_GC_BACKGROUND = 2,
    GDK_GC_FONT = 4,
    GDK_GC_FUNCTION = 8,
    GDK_GC_FILL = 16,
    GDK_GC_TILE = 32,
    GDK_GC_STIPPLE = 64,
    GDK_GC_CLIP_MASK = 128,
    GDK_GC_SUBWINDOW = 256,
    GDK_GC_TS_X_ORIGIN = 512,
    GDK_GC_TS_Y_ORIGIN = 1024,
    GDK_GC_CLIP_X_ORIGIN = 2048,
    GDK_GC_CLIP_Y_ORIGIN = 4096,
    GDK_GC_EXPOSURES = 8192,
    GDK_GC_LINE_WIDTH = 16384,
    GDK_GC_LINE_STYLE = 32768,
    GDK_GC_CAP_STYLE = 65536,
    GDK_GC_JOIN_STYLE = 131072
} GdkGCValuesMask;
typedef enum {
    GDK_WINDOW_ROOT = 0,
    GDK_WINDOW_TOPLEVEL = 1,
    GDK_WINDOW_CHILD = 2,
    GDK_WINDOW_DIALOG = 3,
    GDK_WINDOW_TEMP = 4,
    GDK_WINDOW_FOREIGN = 5
} GdkWindowType;
typedef struct _GdkSpan {
    gint x;
    gint y;
    gint width;
} GdkSpan;
typedef void (*GdkSpanFunc) (GdkSpan *, gpointer);
typedef enum {
    GDK_GRAVITY_NORTH_WEST = 1,
    GDK_GRAVITY_NORTH = 2,
    GDK_GRAVITY_NORTH_EAST = 3,
    GDK_GRAVITY_WEST = 4,
    GDK_GRAVITY_CENTER = 5,
    GDK_GRAVITY_EAST = 6,
    GDK_GRAVITY_SOUTH_WEST = 7,
    GDK_GRAVITY_SOUTH = 8,
    GDK_GRAVITY_SOUTH_EAST = 9,
    GDK_GRAVITY_STATIC = 10
} GdkGravity;
typedef struct _GdkGeometry {
    gint min_width;
    gint min_height;
    gint max_width;
    gint max_height;
    gint base_width;
    gint base_height;
    gint width_inc;
    gint height_inc;
    gdouble min_aspect;
    gdouble max_aspect;
    GdkGravity win_gravity;
} GdkGeometry;
typedef enum {
    GDK_HINT_POS = 1,
    GDK_HINT_MIN_SIZE = 2,
    GDK_HINT_MAX_SIZE = 4,
    GDK_HINT_BASE_SIZE = 8,
    GDK_HINT_ASPECT = 16,
    GDK_HINT_RESIZE_INC = 32,
    GDK_HINT_WIN_GRAVITY = 64,
    GDK_HINT_USER_POS = 128,
    GDK_HINT_USER_SIZE = 256
} GdkWindowHints;
typedef void (*GdkEventFunc) (GdkEvent *, gpointer);
typedef enum {
    GDK_OVERLAP_RECTANGLE_IN = 0,
    GDK_OVERLAP_RECTANGLE_OUT = 1,
    GDK_OVERLAP_RECTANGLE_PART = 2
} GdkOverlapType;
typedef struct _GdkSegment {
    gint x1;
    gint y1;
    gint x2;
    gint y2;
} GdkSegment;
typedef enum {
    GDK_PROP_MODE_REPLACE = 0,
    GDK_PROP_MODE_PREPEND = 1,
    GDK_PROP_MODE_APPEND = 2
} GdkPropMode;
typedef enum {
    GDK_INPUT_OUTPUT = 0,
    GDK_INPUT_ONLY = 1
} GdkWindowClass;
typedef struct _GdkWindowAttr {
    gchar *title;
    gint event_mask;
    gint x;
    gint y;
    gint width;
    gint height;
    GdkWindowClass wclass;
    GdkVisual *visual;
    GdkColormap *colormap;
    GdkWindowType window_type;
    GdkCursor *cursor;
    gchar *wmclass_name;
    gchar *wmclass_class;
    gboolean override_redirect;
} GdkWindowAttr;
typedef struct _GdkTrapezoid {
    double y1;
    double x11;
    double x21;
    double y2;
    double x12;
    double x22;
} GdkTrapezoid;
typedef enum {
    GDK_EVEN_ODD_RULE = 0,
    GDK_WINDING_RULE = 1
} GdkFillRule;
typedef struct _GdkPointerHooks {
    GdkWindow *(*get_pointer) (GdkWindow *, gint *, gint *,
			       GdkModifierType *);
    GdkWindow *(*window_at_pointer) (GdkScreen *, gint *, gint *);
} GdkPointerHooks;
typedef enum {
    GDK_EXTENSION_EVENTS_NONE = 0,
    GDK_EXTENSION_EVENTS_ALL = 1,
    GDK_EXTENSION_EVENTS_CURSOR = 2
} GdkExtensionMode;
typedef struct _GdkWindowObject {
    GdkDrawable parent_instance;
    GdkDrawable *impl;
    GdkWindowObject *parent;
    gpointer user_data;
    gint x;
    gint y;
    gint extension_events;
    GList *filters;
    GList *children;
    GdkColor bg_color;
    GdkPixmap *bg_pixmap;
    GSList *paint_stack;
    GdkRegion *update_area;
    guint update_freeze_count;
    guint8 window_type;
    guint8 depth;
    guint8 resize_count;
    GdkWindowState state;
    guint guffaw_gravity:1;
    guint input_only:1;
    guint modal_hint:1;
    guint destroyed:2;
    guint accept_focus:1;
    guint focus_on_map:1;
    GdkEventMask event_mask;
} GdkWindowObject;
typedef struct _GdkScreenClass {
    GObjectClass parent_class;
    void (*size_changed) (GdkScreen *);
} GdkScreenClass;
typedef guint32 GdkWChar;
typedef struct _GdkPixmapObject {
    GdkDrawable parent_instance;
    GdkDrawable *impl;
    gint depth;
} GdkPixmapObject;
typedef enum {
    GDK_INPUT_READ = 1,
    GDK_INPUT_WRITE = 2,
    GDK_INPUT_EXCEPTION = 4
} GdkInputCondition;
typedef void (*GdkInputFunction) (gpointer, gint, GdkInputCondition);
typedef struct _GdkImageClass {
    GObjectClass parent_class;
} GdkImageClass;
typedef void (*GdkDestroyNotify) (gpointer);
typedef struct _GdkKeymapClass {
    GObjectClass parent_class;
    void (*direction_changed) (GdkKeymap *);
    void (*keys_changed) (GdkKeymap *);
} GdkKeymapClass;
typedef struct _GdkDrawableClass {
    GObjectClass parent_class;
    GdkGC *(*create_gc) (GdkDrawable *, GdkGCValues *, GdkGCValuesMask);
    void (*draw_rectangle) (GdkDrawable *, GdkGC *, gboolean, gint, gint,
			    gint, gint);
    void (*draw_arc) (GdkDrawable *, GdkGC *, gboolean, gint, gint, gint,
		      gint, gint, gint);
    void (*draw_polygon) (GdkDrawable *, GdkGC *, gboolean, GdkPoint *,
			  gint);
    void (*draw_text) (GdkDrawable *, GdkFont *, GdkGC *, gint, gint,
		       const gchar *, gint);
    void (*draw_text_wc) (GdkDrawable *, GdkFont *, GdkGC *, gint, gint,
			  const GdkWChar *, gint);
    void (*draw_drawable) (GdkDrawable *, GdkGC *, GdkDrawable *, gint,
			   gint, gint, gint, gint, gint);
    void (*draw_points) (GdkDrawable *, GdkGC *, GdkPoint *, gint);
    void (*draw_segments) (GdkDrawable *, GdkGC *, GdkSegment *, gint);
    void (*draw_lines) (GdkDrawable *, GdkGC *, GdkPoint *, gint);
    void (*draw_glyphs) (GdkDrawable *, GdkGC *, PangoFont *, gint, gint,
			 PangoGlyphString *);
    void (*draw_image) (GdkDrawable *, GdkGC *, GdkImage *, gint, gint,
			gint, gint, gint, gint);
     gint(*get_depth) (GdkDrawable *);
    void (*get_size) (GdkDrawable *, gint *, gint *);
    void (*set_colormap) (GdkDrawable *, GdkColormap *);
    GdkColormap *(*get_colormap) (GdkDrawable *);
    GdkVisual *(*get_visual) (GdkDrawable *);
    GdkScreen *(*get_screen) (GdkDrawable *);
    GdkImage *(*get_image) (GdkDrawable *, gint, gint, gint, gint);
    GdkRegion *(*get_clip_region) (GdkDrawable *);
    GdkRegion *(*get_visible_region) (GdkDrawable *);
    GdkDrawable *(*get_composite_drawable) (GdkDrawable *, gint, gint,
					    gint, gint, gint *, gint *);
    void (*draw_pixbuf) (GdkDrawable *, GdkGC *, GdkPixbuf *, gint, gint,
			 gint, gint, gint, gint, GdkRgbDither, gint, gint);
    GdkImage *(*_copy_to_image) (GdkDrawable *, GdkImage *, gint, gint,
				 gint, gint, gint, gint);
    void (*draw_glyphs_transformed) (GdkDrawable *, GdkGC *, PangoMatrix *,
				     PangoFont *, gint, gint,
				     PangoGlyphString *);
    void (*draw_trapezoids) (GdkDrawable *, GdkGC *, GdkTrapezoid *, gint);
    cairo_surface_t *(*ref_cairo_surface) (void);
    GdkDrawable *(*get_source_drawable) (void);
    void (*set_cairo_clip) (void);
    cairo_surface_t *(*create_cairo_surface) (void);
    void (*draw_drawable_with_src) (void);
    void (*_gdk_reserved9) (void);
    void (*_gdk_reserved10) (void);
    void (*_gdk_reserved11) (void);
    void (*_gdk_reserved12) (void);
    void (*_gdk_reserved13) (void);
    void (*_gdk_reserved14) (void);
    void (*_gdk_reserved15) (void);
    void (*_gdk_reserved16) (void);
} GdkDrawableClass;
typedef struct _GdkPangoAttrEmbossed {
    PangoAttribute attr;
    gboolean embossed;
} GdkPangoAttrEmbossed;
typedef struct _GdkDisplayManagerClass {
    GObjectClass parent_class;
    void (*display_opened) (GdkDisplayManager *, GdkDisplay *);
} GdkDisplayManagerClass;
typedef struct _GdkPixmapObjectClass {
    GdkDrawableClass parent_class;
} GdkPixmapObjectClass;
typedef struct _GdkPangoRendererClass {
    PangoRendererClass parent_class;
} GdkPangoRendererClass;
typedef struct _GdkDisplayClass {
    GObjectClass parent_class;
    const gchar *(*get_display_name) (GdkDisplay *);
     gint(*get_n_screens) (GdkDisplay *);
    GdkScreen *(*get_screen) (GdkDisplay *, gint);
    GdkScreen *(*get_default_screen) (GdkDisplay *);
    void (*closed) (GdkDisplay *, gboolean);
} GdkDisplayClass;
typedef struct _GdkPangoAttrStipple {
    PangoAttribute attr;
    GdkBitmap *stipple;
} GdkPangoAttrStipple;
typedef struct _GdkColormapClass {
    GObjectClass parent_class;
} GdkColormapClass;
typedef struct _GdkDragContextClass {
    GObjectClass parent_class;
} GdkDragContextClass;
typedef struct _GdkWindowObjectClass {
    GdkDrawableClass parent_class;
} GdkWindowObjectClass;
typedef struct _GdkGCClass {
    GObjectClass parent_class;
    void (*get_values) (GdkGC *, GdkGCValues *);
    void (*set_values) (GdkGC *, GdkGCValues *, GdkGCValuesMask);
    void (*set_dashes) (GdkGC *, gint, gint8 *, gint);
    void (*_gdk_reserved1) (void);
    void (*_gdk_reserved2) (void);
    void (*_gdk_reserved3) (void);
    void (*_gdk_reserved4) (void);
} GdkGCClass;
typedef struct _GdkDeviceClass GdkDeviceClass;
typedef struct _GdkVisualClass GdkVisualClass;
typedef enum {
    GDK_OK = 0,
    GDK_ERROR = -1,
    GDK_ERROR_PARAM = -2,
    GDK_ERROR_FILE = -3,
    GDK_ERROR_MEM = -4
} GdkStatus;
typedef enum {
    GDK_PROPERTY_NEW_VALUE,
    GDK_PROPERTY_DELETE
} GdkPropertyState;
typedef enum {
    GDK_WA_TITLE = 1 &lt;&lt; 1,
    GDK_WA_X = 1 &lt;&lt; 2,
    GDK_WA_Y = 1 &lt;&lt; 3,
    GDK_WA_CURSOR = 1 &lt;&lt; 4,
    GDK_WA_COLORMAP = 1 &lt;&lt; 5,
    GDK_WA_VISUAL = 1 &lt;&lt; 6,
    GDK_WA_WMCLASS = 1 &lt;&lt; 7,
    GDK_WA_NOREDIR = 1 &lt;&lt; 8
} GdkWindowAttributesType;
typedef struct _GdkEventGrabBroken {
    GdkEventType type;
    GdkWindow *window;
    gint8 send_event;
    gboolean keyboard;
    gboolean implicit;
    GdkWindow *grab_window;
} GdkEventGrabBroken;
extern void gdk_add_client_message_filter(GdkAtom message_type,
					  GdkFilterFunc func,
					  gpointer data);
extern GdkAtom gdk_atom_intern(const gchar * atom_name,
			       gboolean only_if_exists);
extern GdkAtom gdk_atom_intern_static_string(const gchar * atom_name);
extern gchar *gdk_atom_name(GdkAtom atom);
extern GType gdk_axis_use_get_type(void);
extern void gdk_beep(void);
extern struct _GdkDrawable *gdk_bitmap_create_from_data(GdkDrawable *
							drawable,
							const gchar * data,
							gint width,
							gint height);
extern GType gdk_byte_order_get_type(void);
extern GType gdk_cap_style_get_type(void);
extern GdkColor *gdk_color_copy(const GdkColor * color);
extern gboolean gdk_color_equal(const GdkColor * colora,
				const GdkColor * colorb);
extern void gdk_color_free(GdkColor * color);
extern GType gdk_color_get_type(void);
extern guint gdk_color_hash(const GdkColor * colora);
extern gint gdk_color_parse(const gchar * spec, GdkColor * color);
extern gboolean gdk_colormap_alloc_color(GdkColormap * colormap,
					 GdkColor * color,
					 gboolean writeable,
					 gboolean best_match);
extern gint gdk_colormap_alloc_colors(GdkColormap * colormap,
				      GdkColor * colors, gint ncolors,
				      gboolean writeable,
				      gboolean best_match,
				      gboolean * success);
extern void gdk_colormap_free_colors(GdkColormap * colormap,
				     const GdkColor * colors,
				     gint ncolors);
extern GdkScreen *gdk_colormap_get_screen(GdkColormap * cmap);
extern GdkColormap *gdk_colormap_get_system(void);
extern GType gdk_colormap_get_type(void);
extern GdkVisual *gdk_colormap_get_visual(GdkColormap * colormap);
extern GdkColormap *gdk_colormap_new(GdkVisual * visual,
				     gboolean allocate);
extern void gdk_colormap_query_color(GdkColormap * colormap, gulong pixel,
				     GdkColor * result);
extern GType gdk_crossing_mode_get_type(void);
extern GdkDisplay *gdk_cursor_get_display(GdkCursor * cursor);
extern GdkPixbuf *gdk_cursor_get_image(GdkCursor * cursor);
extern GType gdk_cursor_get_type(void);
extern GdkCursor *gdk_cursor_new(GdkCursorType cursor_type);
extern GdkCursor *gdk_cursor_new_for_display(GdkDisplay * display,
					     GdkCursorType cursor_type);
extern GdkCursor *gdk_cursor_new_from_name(GdkDisplay * display,
					   const gchar * name);
extern GdkCursor *gdk_cursor_new_from_pixbuf(GdkDisplay * display,
					     GdkPixbuf * pixbuf, gint x,
					     gint y);
extern GdkCursor *gdk_cursor_new_from_pixmap(GdkPixmap * source,
					     GdkPixmap * mask,
					     const GdkColor * fg,
					     const GdkColor * bg, gint x,
					     gint y);
extern GdkCursor *gdk_cursor_ref(GdkCursor * cursor);
extern GType gdk_cursor_type_get_type(void);
extern void gdk_cursor_unref(GdkCursor * cursor);
extern void gdk_device_free_history(GdkTimeCoord * *events, gint n_events);
extern gboolean gdk_device_get_axis(GdkDevice * device, gdouble * axes,
				    GdkAxisUse use, gdouble * value);
extern GdkDevice *gdk_device_get_core_pointer(void);
extern gboolean gdk_device_get_history(GdkDevice * device,
				       GdkWindow * window, guint32 start,
				       guint32 stop,
				       GdkTimeCoord * **events,
				       gint * n_events);
extern void gdk_device_get_state(GdkDevice * device, GdkWindow * window,
				 gdouble * axes, GdkModifierType * mask);
extern GType gdk_device_get_type(void);
extern void gdk_device_set_axis_use(GdkDevice * device, guint index_,
				    GdkAxisUse use);
extern void gdk_device_set_key(GdkDevice * device, guint index_,
			       guint keyval, GdkModifierType modifiers);
extern gboolean gdk_device_set_mode(GdkDevice * device, GdkInputMode mode);
extern void gdk_device_set_source(GdkDevice * device,
				  GdkInputSource source);
extern GList *gdk_devices_list(void);
extern void gdk_display_add_client_message_filter(GdkDisplay * display,
						  GdkAtom message_type,
						  GdkFilterFunc func,
						  gpointer data);
extern void gdk_display_beep(GdkDisplay * display);
extern void gdk_display_close(GdkDisplay * display);
extern void gdk_display_flush(GdkDisplay * display);
extern GdkDevice *gdk_display_get_core_pointer(GdkDisplay * display);
extern GdkDisplay *gdk_display_get_default(void);
extern guint gdk_display_get_default_cursor_size(GdkDisplay * display);
extern GdkWindow *gdk_display_get_default_group(GdkDisplay * display);
extern GdkScreen *gdk_display_get_default_screen(GdkDisplay * display);
extern GdkEvent *gdk_display_get_event(GdkDisplay * display);
extern void gdk_display_get_maximal_cursor_size(GdkDisplay * display,
						guint * width,
						guint * height);
extern gint gdk_display_get_n_screens(GdkDisplay * display);
extern const gchar *gdk_display_get_name(GdkDisplay * display);
extern void gdk_display_get_pointer(GdkDisplay * display,
				    GdkScreen * *screen, gint * x,
				    gint * y, GdkModifierType * mask);
extern GdkScreen *gdk_display_get_screen(GdkDisplay * display,
					 gint screen_num);
extern GType gdk_display_get_type(void);
extern GdkWindow *gdk_display_get_window_at_pointer(GdkDisplay * display,
						    gint * win_x,
						    gint * win_y);
extern void gdk_display_keyboard_ungrab(GdkDisplay * display,
					guint32 time_);
extern GList *gdk_display_list_devices(GdkDisplay * display);
extern GdkDisplayManager *gdk_display_manager_get(void);
extern GdkDisplay
    *gdk_display_manager_get_default_display(GdkDisplayManager *
					     display_manager);
extern GType gdk_display_manager_get_type(void);
extern GSList *gdk_display_manager_list_displays(GdkDisplayManager *
						 display_manager);
extern void gdk_display_manager_set_default_display(GdkDisplayManager *
						    display_manager,
						    GdkDisplay * display);
extern GdkDisplay *gdk_display_open(const gchar * display_name);
extern GdkEvent *gdk_display_peek_event(GdkDisplay * display);
extern gboolean gdk_display_pointer_is_grabbed(GdkDisplay * display);
extern void gdk_display_pointer_ungrab(GdkDisplay * display,
				       guint32 time_);
extern void gdk_display_put_event(GdkDisplay * display,
				  const GdkEvent * event);
extern gboolean gdk_display_request_selection_notification(GdkDisplay *
							   display,
							   GdkAtom
							   selection);
extern void gdk_display_set_double_click_distance(GdkDisplay * display,
						  guint distance);
extern void gdk_display_set_double_click_time(GdkDisplay * display,
					      guint msec);
extern GdkDisplayPointerHooks *gdk_display_set_pointer_hooks(GdkDisplay *
							     display,
							     const
							     GdkDisplayPointerHooks
							     * new_hooks);
extern void gdk_display_store_clipboard(GdkDisplay * display,
					GdkWindow * clipboard_window,
					guint32 time_,
					const GdkAtom * targets,
					gint n_targets);
extern gboolean gdk_display_supports_clipboard_persistence(GdkDisplay *
							   display);
extern gboolean gdk_display_supports_cursor_alpha(GdkDisplay * display);
extern gboolean gdk_display_supports_cursor_color(GdkDisplay * display);
extern gboolean gdk_display_supports_input_shapes(GdkDisplay * display);
extern gboolean gdk_display_supports_selection_notification(GdkDisplay *
							    display);
extern gboolean gdk_display_supports_shapes(GdkDisplay * display);
extern void gdk_display_sync(GdkDisplay * display);
extern void gdk_display_warp_pointer(GdkDisplay * display,
				     GdkScreen * screen, gint x, gint y);
extern void gdk_drag_abort(GdkDragContext * context, guint32 time_);
extern GType gdk_drag_action_get_type(void);
extern GdkDragContext *gdk_drag_begin(GdkWindow * window, GList * targets);
extern GType gdk_drag_context_get_type(void);
extern GdkDragContext *gdk_drag_context_new(void);
extern void gdk_drag_drop(GdkDragContext * context, guint32 time_);
extern gboolean gdk_drag_drop_succeeded(GdkDragContext * context);
extern void gdk_drag_find_window(GdkDragContext * context,
				 GdkWindow * drag_window, gint x_root,
				 gint y_root, GdkWindow * *dest_window,
				 GdkDragProtocol * protocol);
extern void gdk_drag_find_window_for_screen(GdkDragContext * context,
					    GdkWindow * drag_window,
					    GdkScreen * screen,
					    gint x_root, gint y_root,
					    GdkWindow * *dest_window,
					    GdkDragProtocol * protocol);
extern guint32 gdk_drag_get_protocol(guint32 xid,
				     GdkDragProtocol * protocol);
extern guint32 gdk_drag_get_protocol_for_display(GdkDisplay * display,
						 guint32 xid,
						 GdkDragProtocol *
						 protocol);
extern GdkAtom gdk_drag_get_selection(GdkDragContext * context);
extern gboolean gdk_drag_motion(GdkDragContext * context,
				GdkWindow * dest_window,
				GdkDragProtocol protocol, gint x_root,
				gint y_root,
				GdkDragAction suggested_action,
				GdkDragAction possible_actions,
				guint32 time_);
extern GType gdk_drag_protocol_get_type(void);
extern void gdk_drag_status(GdkDragContext * context, GdkDragAction action,
			    guint32 time_);
extern void gdk_draw_arc(GdkDrawable * drawable, GdkGC * gc,
			 gboolean filled, gint x, gint y, gint width,
			 gint height, gint angle1, gint angle2);
extern void gdk_draw_drawable(GdkDrawable * drawable, GdkGC * gc,
			      GdkDrawable * src, gint xsrc, gint ysrc,
			      gint xdest, gint ydest, gint width,
			      gint height);
extern void gdk_draw_glyphs(GdkDrawable * drawable, GdkGC * gc,
			    PangoFont * font, gint x, gint y,
			    PangoGlyphString * glyphs);
extern void gdk_draw_glyphs_transformed(GdkDrawable * drawable, GdkGC * gc,
					const PangoMatrix * matrix,
					PangoFont * font, gint x, gint y,
					PangoGlyphString * glyphs);
extern void gdk_draw_gray_image(GdkDrawable * drawable, GdkGC * gc, gint x,
				gint y, gint width, gint height,
				GdkRgbDither dith, const guchar * buf,
				gint rowstride);
extern void gdk_draw_image(GdkDrawable * drawable, GdkGC * gc,
			   GdkImage * image, gint xsrc, gint ysrc,
			   gint xdest, gint ydest, gint width,
			   gint height);
extern void gdk_draw_indexed_image(GdkDrawable * drawable, GdkGC * gc,
				   gint x, gint y, gint width, gint height,
				   GdkRgbDither dith, const guchar * buf,
				   gint rowstride, GdkRgbCmap * cmap);
extern void gdk_draw_layout(GdkDrawable * drawable, GdkGC * gc, int x,
			    int y, PangoLayout * layout);
extern void gdk_draw_layout_line(GdkDrawable * drawable, GdkGC * gc,
				 gint x, gint y, PangoLayoutLine * line);
extern void gdk_draw_layout_line_with_colors(GdkDrawable * drawable,
					     GdkGC * gc, gint x, gint y,
					     PangoLayoutLine * line,
					     const GdkColor * foreground,
					     const GdkColor * background);
extern void gdk_draw_layout_with_colors(GdkDrawable * drawable, GdkGC * gc,
					int x, int y, PangoLayout * layout,
					const GdkColor * foreground,
					const GdkColor * background);
extern void gdk_draw_line(GdkDrawable * drawable, GdkGC * gc, gint x1_,
			  gint y1_, gint x2_, gint y2_);
extern void gdk_draw_lines(GdkDrawable * drawable, GdkGC * gc,
			   const GdkPoint * points, gint npoints);
extern void gdk_draw_pixbuf(GdkDrawable * drawable, GdkGC * gc,
			    const GdkPixbuf * pixbuf, gint src_x,
			    gint src_y, gint dest_x, gint dest_y,
			    gint width, gint height, GdkRgbDither dither,
			    gint x_dither, gint y_dither);
extern void gdk_draw_point(GdkDrawable * drawable, GdkGC * gc, gint x,
			   gint y);
extern void gdk_draw_points(GdkDrawable * drawable, GdkGC * gc,
			    const GdkPoint * points, gint npoints);
extern void gdk_draw_polygon(GdkDrawable * drawable, GdkGC * gc,
			     gboolean filled, const GdkPoint * points,
			     gint npoints);
extern void gdk_draw_rectangle(GdkDrawable * drawable, GdkGC * gc,
			       gboolean filled, gint x, gint y, gint width,
			       gint height);
extern void gdk_draw_rgb_32_image(GdkDrawable * drawable, GdkGC * gc,
				  gint x, gint y, gint width, gint height,
				  GdkRgbDither dith, const guchar * buf,
				  gint rowstride);
extern void gdk_draw_rgb_32_image_dithalign(GdkDrawable * drawable,
					    GdkGC * gc, gint x, gint y,
					    gint width, gint height,
					    GdkRgbDither dith,
					    const guchar * buf,
					    gint rowstride, gint xdith,
					    gint ydith);
extern void gdk_draw_rgb_image(GdkDrawable * drawable, GdkGC * gc, gint x,
			       gint y, gint width, gint height,
			       GdkRgbDither dith, const guchar * rgb_buf,
			       gint rowstride);
extern void gdk_draw_rgb_image_dithalign(GdkDrawable * drawable,
					 GdkGC * gc, gint x, gint y,
					 gint width, gint height,
					 GdkRgbDither dith,
					 const guchar * rgb_buf,
					 gint rowstride, gint xdith,
					 gint ydith);
extern void gdk_draw_segments(GdkDrawable * drawable, GdkGC * gc,
			      const GdkSegment * segs, gint nsegs);
extern void gdk_draw_trapezoids(GdkDrawable * drawable, GdkGC * gc,
				const struct _GdkTrapezoid *trapezoids,
				gint n_trapezoids);
extern GdkImage *gdk_drawable_copy_to_image(GdkDrawable * drawable,
					    GdkImage * image, gint src_x,
					    gint src_y, gint dest_x,
					    gint dest_y, gint width,
					    gint height);
extern GdkRegion *gdk_drawable_get_clip_region(GdkDrawable * drawable);
extern GdkColormap *gdk_drawable_get_colormap(GdkDrawable * drawable);
extern gint gdk_drawable_get_depth(GdkDrawable * drawable);
extern GdkDisplay *gdk_drawable_get_display(GdkDrawable * drawable);
extern GdkImage *gdk_drawable_get_image(GdkDrawable * drawable, gint x,
					gint y, gint width, gint height);
extern GdkScreen *gdk_drawable_get_screen(GdkDrawable * drawable);
extern void gdk_drawable_get_size(GdkDrawable * drawable, gint * width,
				  gint * height);
extern GType gdk_drawable_get_type(void);
extern GdkRegion *gdk_drawable_get_visible_region(GdkDrawable * drawable);
extern GdkVisual *gdk_drawable_get_visual(GdkDrawable * drawable);
extern void gdk_drawable_set_colormap(GdkDrawable * drawable,
				      GdkColormap * colormap);
extern void gdk_drop_finish(GdkDragContext * context, gboolean success,
			    guint32 time_);
extern void gdk_drop_reply(GdkDragContext * context, gboolean ok,
			   guint32 time_);
extern gint gdk_error_trap_pop(void);
extern void gdk_error_trap_push(void);
extern GdkEvent *gdk_event_copy(const GdkEvent * event);
extern void gdk_event_free(GdkEvent * event);
extern GdkEvent *gdk_event_get(void);
extern gboolean gdk_event_get_axis(const GdkEvent * event,
				   GdkAxisUse axis_use, gdouble * value);
extern gboolean gdk_event_get_coords(const GdkEvent * event,
				     gdouble * x_win, gdouble * y_win);
extern GdkEvent *gdk_event_get_graphics_expose(GdkWindow * window);
extern gboolean gdk_event_get_root_coords(const GdkEvent * event,
					  gdouble * x_root,
					  gdouble * y_root);
extern GdkScreen *gdk_event_get_screen(const GdkEvent * event);
extern gboolean gdk_event_get_state(const GdkEvent * event,
				    GdkModifierType * state);
extern guint32 gdk_event_get_time(const GdkEvent * event);
extern GType gdk_event_get_type(void);
extern void gdk_event_handler_set(GdkEventFunc func, gpointer data,
				  GDestroyNotify notify);
extern GType gdk_event_mask_get_type(void);
extern GdkEvent *gdk_event_new(GdkEventType type);
extern GdkEvent *gdk_event_peek(void);
extern void gdk_event_put(const GdkEvent * event);
extern gboolean gdk_event_send_client_message(GdkEvent * event,
					      GdkNativeWindow winid);
extern gboolean gdk_event_send_client_message_for_display(GdkDisplay *
							  display,
							  GdkEvent * event,
							  GdkNativeWindow
							  winid);
extern void gdk_event_send_clientmessage_toall(GdkEvent * event);
extern void gdk_event_set_screen(GdkEvent * event, GdkScreen * screen);
extern GType gdk_event_type_get_type(void);
extern gboolean gdk_events_pending(void);
extern GType gdk_extension_mode_get_type(void);
extern GType gdk_fill_get_type(void);
extern GType gdk_fill_rule_get_type(void);
extern GType gdk_filter_return_get_type(void);
extern void gdk_flush(void);
extern GType gdk_font_type_get_type(void);
extern void gdk_free_compound_text(guchar * ctext);
extern void gdk_free_text_list(gchar * *list);
extern GType gdk_function_get_type(void);
extern void gdk_gc_copy(GdkGC * dst_gc, GdkGC * src_gc);
extern GdkColormap *gdk_gc_get_colormap(GdkGC * gc);
extern GdkScreen *gdk_gc_get_screen(GdkGC * gc);
extern GType gdk_gc_get_type(void);
extern void gdk_gc_get_values(GdkGC * gc, GdkGCValues * values);
extern GdkGC *gdk_gc_new(GdkDrawable * drawable);
extern GdkGC *gdk_gc_new_with_values(GdkDrawable * drawable,
				     GdkGCValues * values,
				     GdkGCValuesMask values_mask);
extern void gdk_gc_offset(GdkGC * gc, gint x_offset, gint y_offset);
extern void gdk_gc_set_background(GdkGC * gc, const GdkColor * color);
extern void gdk_gc_set_clip_mask(GdkGC * gc, GdkBitmap * mask);
extern void gdk_gc_set_clip_origin(GdkGC * gc, gint x, gint y);
extern void gdk_gc_set_clip_rectangle(GdkGC * gc,
				      const GdkRectangle * rectangle);
extern void gdk_gc_set_clip_region(GdkGC * gc, const GdkRegion * region);
extern void gdk_gc_set_colormap(GdkGC * gc, GdkColormap * colormap);
extern void gdk_gc_set_dashes(GdkGC * gc, gint dash_offset,
			      gint8 * dash_list, gint n);
extern void gdk_gc_set_exposures(GdkGC * gc, gboolean exposures);
extern void gdk_gc_set_fill(GdkGC * gc, GdkFill fill);
extern void gdk_gc_set_foreground(GdkGC * gc, const GdkColor * color);
extern void gdk_gc_set_function(GdkGC * gc, GdkFunction function);
extern void gdk_gc_set_line_attributes(GdkGC * gc, gint line_width,
				       GdkLineStyle line_style,
				       GdkCapStyle cap_style,
				       GdkJoinStyle join_style);
extern void gdk_gc_set_rgb_bg_color(GdkGC * gc, const GdkColor * color);
extern void gdk_gc_set_rgb_fg_color(GdkGC * gc, const GdkColor * color);
extern void gdk_gc_set_stipple(GdkGC * gc, GdkPixmap * stipple);
extern void gdk_gc_set_subwindow(GdkGC * gc, GdkSubwindowMode mode);
extern void gdk_gc_set_tile(GdkGC * gc, GdkPixmap * tile);
extern void gdk_gc_set_ts_origin(GdkGC * gc, gint x, gint y);
extern void gdk_gc_set_values(GdkGC * gc, GdkGCValues * values,
			      GdkGCValuesMask values_mask);
extern GType gdk_gc_values_mask_get_type(void);
extern GdkWindow *gdk_get_default_root_window(void);
extern gchar *gdk_get_display(void);
extern const gchar *gdk_get_display_arg_name(void);
extern const char *gdk_get_program_class(void);
extern gboolean gdk_get_show_events(void);
extern GType gdk_grab_status_get_type(void);
extern GType gdk_gravity_get_type(void);
extern GdkColormap *gdk_image_get_colormap(GdkImage * image);
extern guint32 gdk_image_get_pixel(GdkImage * image, gint x, gint y);
extern GType gdk_image_get_type(void);
extern GdkImage *gdk_image_new(GdkImageType type, GdkVisual * visual,
			       gint width, gint height);
extern void gdk_image_put_pixel(GdkImage * image, gint x, gint y,
				guint32 pixel);
extern void gdk_image_set_colormap(GdkImage * image,
				   GdkColormap * colormap);
extern GType gdk_image_type_get_type(void);
extern void gdk_init(int *argc, char ***argv);
extern gboolean gdk_init_check(int *argc, char ***argv);
extern GType gdk_input_condition_get_type(void);
extern GType gdk_input_mode_get_type(void);
extern void gdk_input_set_extension_events(GdkWindow * window, gint mask,
					   GdkExtensionMode mode);
extern GType gdk_input_source_get_type(void);
extern GType gdk_join_style_get_type(void);
extern GdkGrabStatus gdk_keyboard_grab(GdkWindow * window,
				       gboolean owner_events,
				       guint32 time_);
extern void gdk_keyboard_ungrab(guint32 time_);
extern GdkKeymap *gdk_keymap_get_default(void);
extern PangoDirection gdk_keymap_get_direction(GdkKeymap * keymap);
extern gboolean gdk_keymap_get_entries_for_keycode(GdkKeymap * keymap,
						   guint hardware_keycode,
						   GdkKeymapKey * *keys,
						   guint * *keyvals,
						   gint * n_entries);
extern gboolean gdk_keymap_get_entries_for_keyval(GdkKeymap * keymap,
						  guint keyval,
						  GdkKeymapKey * *keys,
						  gint * n_keys);
extern GdkKeymap *gdk_keymap_get_for_display(GdkDisplay * display);
extern GType gdk_keymap_get_type(void);
extern guint gdk_keymap_lookup_key(GdkKeymap * keymap,
				   const GdkKeymapKey * key);
extern gboolean gdk_keymap_translate_keyboard_state(GdkKeymap * keymap,
						    guint hardware_keycode,
						    GdkModifierType state,
						    gint group,
						    guint * keyval,
						    gint * effective_group,
						    gint * level,
						    GdkModifierType *
						    consumed_modifiers);
extern void gdk_keyval_convert_case(guint symbol, guint * lower,
				    guint * upper);
extern guint gdk_keyval_from_name(const gchar * keyval_name);
extern gboolean gdk_keyval_is_lower(guint keyval);
extern gboolean gdk_keyval_is_upper(guint keyval);
extern gchar *gdk_keyval_name(guint keyval);
extern guint gdk_keyval_to_lower(guint keyval);
extern guint32 gdk_keyval_to_unicode(guint keyval);
extern guint gdk_keyval_to_upper(guint keyval);
extern GType gdk_line_style_get_type(void);
extern GList *gdk_list_visuals(void);
extern GType gdk_modifier_type_get_type(void);
extern void gdk_notify_startup_complete(void);
extern GType gdk_notify_type_get_type(void);
extern GType gdk_overlap_type_get_type(void);
extern GType gdk_owner_change_get_type(void);
extern PangoAttribute *gdk_pango_attr_embossed_new(gboolean embossed);
extern PangoAttribute *gdk_pango_attr_stipple_new(GdkBitmap * stipple);
extern PangoContext *gdk_pango_context_get(void);
extern PangoContext *gdk_pango_context_get_for_screen(GdkScreen * screen);
extern GdkRegion *gdk_pango_layout_get_clip_region(PangoLayout * layout,
						   gint x_origin,
						   gint y_origin,
						   const gint *
						   index_ranges,
						   gint n_ranges);
extern GdkRegion *gdk_pango_layout_line_get_clip_region(PangoLayoutLine *
							line,
							gint x_origin,
							gint y_origin,
							const gint *
							index_ranges,
							gint n_ranges);
extern PangoRenderer *gdk_pango_renderer_get_default(GdkScreen * screen);
extern GType gdk_pango_renderer_get_type(void);
extern PangoRenderer *gdk_pango_renderer_new(GdkScreen * screen);
extern void gdk_pango_renderer_set_drawable(GdkPangoRenderer *
					    gdk_renderer,
					    GdkDrawable * drawable);
extern void gdk_pango_renderer_set_gc(GdkPangoRenderer * gdk_renderer,
				      GdkGC * gc);
extern void gdk_pango_renderer_set_override_color(GdkPangoRenderer *
						  gdk_renderer,
						  PangoRenderPart part,
						  const GdkColor * color);
extern void gdk_pango_renderer_set_stipple(GdkPangoRenderer * gdk_renderer,
					   PangoRenderPart part,
					   GdkBitmap * stipple);
extern void gdk_parse_args(int *argc, char ***argv);
extern GdkPixbuf *gdk_pixbuf_get_from_drawable(GdkPixbuf * dest,
					       GdkDrawable * src,
					       GdkColormap * cmap,
					       int src_x, int src_y,
					       int dest_x, int dest_y,
					       int width, int height);
extern GdkPixbuf *gdk_pixbuf_get_from_image(GdkPixbuf * dest,
					    GdkImage * src,
					    GdkColormap * cmap, int src_x,
					    int src_y, int dest_x,
					    int dest_y, int width,
					    int height);
extern void gdk_pixbuf_render_pixmap_and_mask(GdkPixbuf * pixbuf,
					      GdkPixmap * *pixmap_return,
					      GdkBitmap * *mask_return,
					      int alpha_threshold);
extern void gdk_pixbuf_render_pixmap_and_mask_for_colormap(GdkPixbuf *
							   pixbuf,
							   GdkColormap *
							   colormap,
							   GdkPixmap *
							   *pixmap_return,
							   GdkBitmap *
							   *mask_return,
							   int
							   alpha_threshold);
extern void gdk_pixbuf_render_threshold_alpha(GdkPixbuf * pixbuf,
					      GdkBitmap * bitmap,
					      int src_x, int src_y,
					      int dest_x, int dest_y,
					      int width, int height,
					      int alpha_threshold);
extern GdkPixmap *gdk_pixmap_colormap_create_from_xpm(GdkDrawable *
						      drawable,
						      GdkColormap *
						      colormap,
						      GdkBitmap * *mask,
						      const GdkColor *
						      transparent_color,
						      const gchar *
						      filename);
extern GdkPixmap *gdk_pixmap_colormap_create_from_xpm_d(GdkDrawable *
							drawable,
							GdkColormap *
							colormap,
							GdkBitmap * *mask,
							const GdkColor *
							transparent_color,
							gchar * *data);
extern GdkPixmap *gdk_pixmap_create_from_data(GdkDrawable * drawable,
					      const gchar * data,
					      gint width, gint height,
					      gint depth,
					      const GdkColor * fg,
					      const GdkColor * bg);
extern GdkPixmap *gdk_pixmap_create_from_xpm(GdkDrawable * drawable,
					     GdkBitmap * *mask,
					     const GdkColor *
					     transparent_color,
					     const gchar * filename);
extern GdkPixmap *gdk_pixmap_create_from_xpm_d(GdkDrawable * drawable,
					       GdkBitmap * *mask,
					       const GdkColor *
					       transparent_color,
					       gchar * *data);
extern GdkPixmap *gdk_pixmap_foreign_new(GdkNativeWindow anid);
extern GdkPixmap *gdk_pixmap_foreign_new_for_display(GdkDisplay * display,
						     GdkNativeWindow anid);
extern GdkPixmap *gdk_pixmap_foreign_new_for_screen(GdkScreen * screen,
						    GdkNativeWindow anid,
						    gint width,
						    gint height,
						    gint depth);
extern GType gdk_pixmap_get_type(void);
extern GdkPixmap *gdk_pixmap_lookup(GdkNativeWindow anid);
extern GdkPixmap *gdk_pixmap_lookup_for_display(GdkDisplay * display,
						GdkNativeWindow anid);
extern GdkPixmap *gdk_pixmap_new(GdkDrawable * drawable, gint width,
				 gint height, gint depth);
extern GdkGrabStatus gdk_pointer_grab(GdkWindow * window,
				      gboolean owner_events,
				      GdkEventMask event_mask,
				      GdkWindow * confine_to,
				      GdkCursor * cursor, guint32 time_);
extern gboolean gdk_pointer_is_grabbed(void);
extern void gdk_pointer_ungrab(guint32 time_);
extern GType gdk_prop_mode_get_type(void);
extern void gdk_property_change(GdkWindow * window, GdkAtom property,
				GdkAtom type, gint format,
				GdkPropMode mode, const guchar * data,
				gint nelements);
extern void gdk_property_delete(GdkWindow * window, GdkAtom property);
extern gboolean gdk_property_get(GdkWindow * window, GdkAtom property,
				 GdkAtom type, gulong offset,
				 gulong length, gint pdelete,
				 GdkAtom * actual_property_type,
				 gint * actual_format,
				 gint * actual_length, guchar * *data);
extern GType gdk_property_state_get_type(void);
extern void gdk_query_depths(gint * *depths, gint * count);
extern void gdk_query_visual_types(GdkVisualType * *visual_types,
				   gint * count);
extern GType gdk_rectangle_get_type(void);
extern gboolean gdk_rectangle_intersect(const GdkRectangle * src1,
					const GdkRectangle * src2,
					GdkRectangle * dest);
extern void gdk_rectangle_union(const GdkRectangle * src1,
				const GdkRectangle * src2,
				GdkRectangle * dest);
extern GdkRegion *gdk_region_copy(const GdkRegion * region);
extern void gdk_region_destroy(GdkRegion * region);
extern gboolean gdk_region_empty(const GdkRegion * region);
extern gboolean gdk_region_equal(const GdkRegion * region1,
				 const GdkRegion * region2);
extern void gdk_region_get_clipbox(const GdkRegion * region,
				   GdkRectangle * rectangle);
extern void gdk_region_get_rectangles(const GdkRegion * region,
				      GdkRectangle * *rectangles,
				      gint * n_rectangles);
extern void gdk_region_intersect(GdkRegion * source1,
				 const GdkRegion * source2);
extern GdkRegion *gdk_region_new(void);
extern void gdk_region_offset(GdkRegion * region, gint dx, gint dy);
extern gboolean gdk_region_point_in(const GdkRegion * region, int x,
				    int y);
extern GdkRegion *gdk_region_polygon(const GdkPoint * points, gint npoints,
				     GdkFillRule fill_rule);
extern GdkOverlapType gdk_region_rect_in(const GdkRegion * region,
					 const GdkRectangle * rectangle);
extern GdkRegion *gdk_region_rectangle(const GdkRectangle * rectangle);
extern void gdk_region_shrink(GdkRegion * region, int dx, int dy);
extern void gdk_region_spans_intersect_foreach(GdkRegion * region,
					       const GdkSpan * spans,
					       int n_spans,
					       gboolean sorted,
					       GdkSpanFunc function,
					       gpointer data);
extern void gdk_region_subtract(GdkRegion * source1,
				const GdkRegion * source2);
extern void gdk_region_union(GdkRegion * source1,
			     const GdkRegion * source2);
extern void gdk_region_union_with_rect(GdkRegion * region,
				       const GdkRectangle * rect);
extern void gdk_region_xor(GdkRegion * source1, const GdkRegion * source2);
extern void gdk_rgb_cmap_free(GdkRgbCmap * cmap);
extern GdkRgbCmap *gdk_rgb_cmap_new(guint32 * colors, gint n_colors);
extern gboolean gdk_rgb_colormap_ditherable(GdkColormap * cmap);
extern GType gdk_rgb_dither_get_type(void);
extern gboolean gdk_rgb_ditherable(void);
extern void gdk_rgb_find_color(GdkColormap * colormap, GdkColor * color);
extern GdkColormap *gdk_rgb_get_colormap(void);
extern GdkVisual *gdk_rgb_get_visual(void);
extern void gdk_rgb_set_install(gboolean install);
extern void gdk_rgb_set_min_colors(gint min_colors);
extern void gdk_rgb_set_verbose(gboolean verbose);
extern void gdk_screen_broadcast_client_message(GdkScreen * screen,
						GdkEvent * event);
extern GdkWindow *gdk_screen_get_active_window(GdkScreen * screen);
extern GdkScreen *gdk_screen_get_default(void);
extern GdkColormap *gdk_screen_get_default_colormap(GdkScreen * screen);
extern GdkDisplay *gdk_screen_get_display(GdkScreen * screen);
extern const cairo_font_options_t *gdk_screen_get_font_options(GdkScreen *
							       screen);
extern gint gdk_screen_get_height(GdkScreen * screen);
extern gint gdk_screen_get_height_mm(GdkScreen * screen);
extern gint gdk_screen_get_monitor_at_point(GdkScreen * screen, gint x,
					    gint y);
extern gint gdk_screen_get_monitor_at_window(GdkScreen * screen,
					     GdkWindow * window);
extern void gdk_screen_get_monitor_geometry(GdkScreen * screen,
					    gint monitor_num,
					    GdkRectangle * dest);
extern gint gdk_screen_get_n_monitors(GdkScreen * screen);
extern gint gdk_screen_get_number(GdkScreen * screen);
extern gdouble gdk_screen_get_resolution(GdkScreen * screen);
extern GdkColormap *gdk_screen_get_rgb_colormap(GdkScreen * screen);
extern GdkVisual *gdk_screen_get_rgb_visual(GdkScreen * screen);
extern GdkColormap *gdk_screen_get_rgba_colormap(GdkScreen * screen);
extern GdkVisual *gdk_screen_get_rgba_visual(GdkScreen * screen);
extern GdkWindow *gdk_screen_get_root_window(GdkScreen * screen);
extern gboolean gdk_screen_get_setting(GdkScreen * screen,
				       const gchar * name, GValue * value);
extern GdkColormap *gdk_screen_get_system_colormap(GdkScreen * screen);
extern GdkVisual *gdk_screen_get_system_visual(GdkScreen * screen);
extern GList *gdk_screen_get_toplevel_windows(GdkScreen * screen);
extern GType gdk_screen_get_type(void);
extern gint gdk_screen_get_width(GdkScreen * screen);
extern gint gdk_screen_get_width_mm(GdkScreen * screen);
extern GList *gdk_screen_get_window_stack(GdkScreen * screen);
extern gint gdk_screen_height(void);
extern gint gdk_screen_height_mm(void);
extern gboolean gdk_screen_is_composited(GdkScreen * screen);
extern GList *gdk_screen_list_visuals(GdkScreen * screen);
extern gchar *gdk_screen_make_display_name(GdkScreen * screen);
extern void gdk_screen_set_default_colormap(GdkScreen * screen,
					    GdkColormap * colormap);
extern void gdk_screen_set_font_options(GdkScreen * screen,
					const cairo_font_options_t *
					options);
extern void gdk_screen_set_resolution(GdkScreen * screen, gdouble dpi);
extern gint gdk_screen_width(void);
extern gint gdk_screen_width_mm(void);
extern GType gdk_scroll_direction_get_type(void);
extern void gdk_selection_convert(GdkWindow * requestor, GdkAtom selection,
				  GdkAtom target, guint32 time_);
extern GdkWindow *gdk_selection_owner_get(GdkAtom selection);
extern GdkWindow *gdk_selection_owner_get_for_display(GdkDisplay * display,
						      GdkAtom selection);
extern gboolean gdk_selection_owner_set(GdkWindow * owner,
					GdkAtom selection, guint32 time_,
					gboolean send_event);
extern gboolean gdk_selection_owner_set_for_display(GdkDisplay * display,
						    GdkWindow * owner,
						    GdkAtom selection,
						    guint32 time_,
						    gboolean send_event);
extern gboolean gdk_selection_property_get(GdkWindow * requestor,
					   guchar * *data,
					   GdkAtom * prop_type,
					   gint * prop_format);
extern void gdk_selection_send_notify(guint32 requestor, GdkAtom selection,
				      GdkAtom target, GdkAtom property,
				      guint32 time_);
extern void gdk_selection_send_notify_for_display(GdkDisplay * display,
						  guint32 requestor,
						  GdkAtom selection,
						  GdkAtom target,
						  GdkAtom property,
						  guint32 time_);
extern void gdk_set_double_click_time(guint msec);
extern gchar *gdk_set_locale(void);
extern GdkPointerHooks *gdk_set_pointer_hooks(const GdkPointerHooks *
					      new_hooks);
extern void gdk_set_program_class(const char *program_class);
extern void gdk_set_show_events(gboolean show_events);
extern void gdk_set_sm_client_id(const gchar * sm_client_id);
extern GType gdk_setting_action_get_type(void);
extern gboolean gdk_setting_get(const gchar * name, GValue * value);
extern gboolean gdk_spawn_command_line_on_screen(GdkScreen * screen,
						 const gchar *
						 command_line,
						 GError * *error);
extern gboolean gdk_spawn_on_screen(GdkScreen * screen,
				    const gchar * working_directory,
				    gchar * *argv, gchar * *envp,
				    GSpawnFlags flags,
				    GSpawnChildSetupFunc child_setup,
				    gpointer user_data, gint * child_pid,
				    GError * *error);
extern gboolean gdk_spawn_on_screen_with_pipes(GdkScreen * screen,
					       const gchar *
					       working_directory,
					       gchar * *argv,
					       gchar * *envp,
					       GSpawnFlags flags,
					       GSpawnChildSetupFunc
					       child_setup,
					       gpointer user_data,
					       gint * child_pid,
					       gint * standard_input,
					       gint * standard_output,
					       gint * standard_error,
					       GError * *error);
extern GType gdk_status_get_type(void);
extern gint gdk_string_to_compound_text(const gchar * str,
					GdkAtom * encoding, gint * format,
					guchar * *ctext, gint * length);
extern gint gdk_string_to_compound_text_for_display(GdkDisplay * display,
						    const gchar * str,
						    GdkAtom * encoding,
						    gint * format,
						    guchar * *ctext,
						    gint * length);
extern GType gdk_subwindow_mode_get_type(void);
extern gint gdk_text_property_to_text_list(GdkAtom encoding, gint format,
					   const guchar * text,
					   gint length, gchar * **list);
extern gint gdk_text_property_to_text_list_for_display(GdkDisplay *
						       display,
						       GdkAtom encoding,
						       gint format,
						       const guchar * text,
						       gint length,
						       gchar * **list);
extern gint gdk_text_property_to_utf8_list(GdkAtom encoding, gint format,
					   const guchar * text,
					   gint length, gchar * **list);
extern gint gdk_text_property_to_utf8_list_for_display(GdkDisplay *
						       display,
						       GdkAtom encoding,
						       gint format,
						       const guchar * text,
						       gint length,
						       gchar * **list);
extern void gdk_threads_enter(void);
extern void gdk_threads_init(void);
extern void gdk_threads_leave(void);
extern GCallback gdk_threads_lock;
extern void gdk_threads_set_lock_functions(GCallback enter_fn,
					   GCallback leave_fn);
extern GCallback gdk_threads_unlock;
extern guint gdk_unicode_to_keyval(guint32 wc);
extern gboolean gdk_utf8_to_compound_text(const gchar * str,
					  GdkAtom * encoding,
					  gint * format, guchar * *ctext,
					  gint * length);
extern gboolean gdk_utf8_to_compound_text_for_display(GdkDisplay * display,
						      const gchar * str,
						      GdkAtom * encoding,
						      gint * format,
						      guchar * *ctext,
						      gint * length);
extern gchar *gdk_utf8_to_string_target(const gchar * str);
extern GType gdk_visibility_state_get_type(void);
extern GdkVisual *gdk_visual_get_best(void);
extern gint gdk_visual_get_best_depth(void);
extern GdkVisualType gdk_visual_get_best_type(void);
extern GdkVisual *gdk_visual_get_best_with_both(gint depth,
						GdkVisualType visual_type);
extern GdkVisual *gdk_visual_get_best_with_depth(gint depth);
extern GdkVisual *gdk_visual_get_best_with_type(GdkVisualType visual_type);
extern GdkScreen *gdk_visual_get_screen(GdkVisual * visual);
extern GdkVisual *gdk_visual_get_system(void);
extern GType gdk_visual_get_type(void);
extern GType gdk_visual_type_get_type(void);
extern void gdk_window_add_filter(GdkWindow * window,
				  GdkFilterFunc function, gpointer data);
extern GdkWindow *gdk_window_at_pointer(gint * win_x, gint * win_y);
extern GType gdk_window_attributes_type_get_type(void);
extern void gdk_window_begin_move_drag(GdkWindow * window, gint button,
				       gint root_x, gint root_y,
				       guint32 timestamp);
extern void gdk_window_begin_paint_rect(GdkWindow * window,
					const GdkRectangle * rectangle);
extern void gdk_window_begin_paint_region(GdkWindow * window,
					  const GdkRegion * region);
extern void gdk_window_begin_resize_drag(GdkWindow * window,
					 GdkWindowEdge edge, gint button,
					 gint root_x, gint root_y,
					 guint32 timestamp);
extern GType gdk_window_class_get_type(void);
extern void gdk_window_clear(GdkWindow * window);
extern void gdk_window_clear_area(GdkWindow * window, gint x, gint y,
				  gint width, gint height);
extern void gdk_window_clear_area_e(GdkWindow * window, gint x, gint y,
				    gint width, gint height);
extern void gdk_window_configure_finished(GdkWindow * window);
extern void gdk_window_constrain_size(GdkGeometry * geometry, guint flags,
				      gint width, gint height,
				      gint * new_width, gint * new_height);
extern void gdk_window_deiconify(GdkWindow * window);
extern void gdk_window_destroy(GdkWindow * window);
extern GType gdk_window_edge_get_type(void);
extern void gdk_window_enable_synchronized_configure(GdkWindow * window);
extern void gdk_window_end_paint(GdkWindow * window);
extern void gdk_window_focus(GdkWindow * window, guint32 timestamp);
extern GdkWindow *gdk_window_foreign_new(GdkNativeWindow anid);
extern GdkWindow *gdk_window_foreign_new_for_display(GdkDisplay * display,
						     GdkNativeWindow anid);
extern void gdk_window_freeze_updates(GdkWindow * window);
extern void gdk_window_fullscreen(GdkWindow * window);
extern GList *gdk_window_get_children(GdkWindow * window);
extern gboolean gdk_window_get_decorations(GdkWindow * window,
					   GdkWMDecoration * decorations);
extern GdkEventMask gdk_window_get_events(GdkWindow * window);
extern void gdk_window_get_frame_extents(GdkWindow * window,
					 GdkRectangle * rect);
extern void gdk_window_get_geometry(GdkWindow * window, gint * x, gint * y,
				    gint * width, gint * height,
				    gint * depth);
extern GdkWindow *gdk_window_get_group(GdkWindow * window);
extern void gdk_window_get_internal_paint_info(GdkWindow * window,
					       GdkDrawable *
					       *real_drawable,
					       gint * x_offset,
					       gint * y_offset);
extern gint gdk_window_get_origin(GdkWindow * window, gint * x, gint * y);
extern GdkWindow *gdk_window_get_parent(GdkWindow * window);
extern GdkWindow *gdk_window_get_pointer(GdkWindow * window, gint * x,
					 gint * y, GdkModifierType * mask);
extern void gdk_window_get_position(GdkWindow * window, gint * x,
				    gint * y);
extern void gdk_window_get_root_origin(GdkWindow * window, gint * x,
				       gint * y);
extern GdkWindowState gdk_window_get_state(GdkWindow * window);
extern GdkWindow *gdk_window_get_toplevel(GdkWindow * window);
extern GList *gdk_window_get_toplevels(void);
extern GdkWindowTypeHint gdk_window_get_type_hint(GdkWindow * window);
extern GdkRegion *gdk_window_get_update_area(GdkWindow * window);
extern void gdk_window_get_user_data(GdkWindow * window, gpointer * data);
extern GdkWindowType gdk_window_get_window_type(GdkWindow * window);
extern void gdk_window_hide(GdkWindow * window);
extern GType gdk_window_hints_get_type(void);
extern void gdk_window_iconify(GdkWindow * window);
extern void gdk_window_input_shape_combine_mask(GdkWindow * window,
						GdkBitmap * mask, gint x,
						gint y);
extern void gdk_window_input_shape_combine_region(GdkWindow * window,
						  const GdkRegion *
						  shape_region,
						  gint offset_x,
						  gint offset_y);
extern void gdk_window_invalidate_maybe_recurse(GdkWindow * window,
						const GdkRegion * region,
						gboolean(*child_func)
						(GdkWindow *, gpointer),
						gpointer user_data);
extern void gdk_window_invalidate_rect(GdkWindow * window,
				       const GdkRectangle * rect,
				       gboolean invalidate_children);
extern void gdk_window_invalidate_region(GdkWindow * window,
					 const GdkRegion * region,
					 gboolean invalidate_children);
extern gboolean gdk_window_is_viewable(GdkWindow * window);
extern gboolean gdk_window_is_visible(GdkWindow * window);
extern GdkWindow *gdk_window_lookup(GdkNativeWindow anid);
extern GdkWindow *gdk_window_lookup_for_display(GdkDisplay * display,
						GdkNativeWindow anid);
extern void gdk_window_lower(GdkWindow * window);
extern void gdk_window_maximize(GdkWindow * window);
extern void gdk_window_merge_child_input_shapes(GdkWindow * window);
extern void gdk_window_merge_child_shapes(GdkWindow * window);
extern void gdk_window_move(GdkWindow * window, gint x, gint y);
extern void gdk_window_move_region(GdkWindow * window,
				   const GdkRegion * region, gint dx,
				   gint dy);
extern void gdk_window_move_resize(GdkWindow * window, gint x, gint y,
				   gint width, gint height);
extern GdkWindow *gdk_window_new(GdkWindow * parent,
				 GdkWindowAttr * attributes,
				 gint attributes_mask);
extern GType gdk_window_object_get_type(void);
extern GList *gdk_window_peek_children(GdkWindow * window);
extern void gdk_window_process_all_updates(void);
extern void gdk_window_process_updates(GdkWindow * window,
				       gboolean update_children);
extern void gdk_window_raise(GdkWindow * window);
extern void gdk_window_register_dnd(GdkWindow * window);
extern void gdk_window_remove_filter(GdkWindow * window,
				     GdkFilterFunc function,
				     gpointer data);
extern void gdk_window_reparent(GdkWindow * window, GdkWindow * new_parent,
				gint x, gint y);
extern void gdk_window_resize(GdkWindow * window, gint width, gint height);
extern void gdk_window_scroll(GdkWindow * window, gint dx, gint dy);
extern void gdk_window_set_accept_focus(GdkWindow * window,
					gboolean accept_focus);
extern void gdk_window_set_back_pixmap(GdkWindow * window,
				       GdkPixmap * pixmap,
				       gboolean parent_relative);
extern void gdk_window_set_background(GdkWindow * window,
				      const GdkColor * color);
extern void gdk_window_set_child_input_shapes(GdkWindow * window);
extern void gdk_window_set_child_shapes(GdkWindow * window);
extern void gdk_window_set_cursor(GdkWindow * window, GdkCursor * cursor);
extern void gdk_window_set_debug_updates(gboolean setting);
extern void gdk_window_set_decorations(GdkWindow * window,
				       GdkWMDecoration decorations);
extern void gdk_window_set_events(GdkWindow * window,
				  GdkEventMask event_mask);
extern void gdk_window_set_focus_on_map(GdkWindow * window,
					gboolean focus_on_map);
extern void gdk_window_set_functions(GdkWindow * window,
				     GdkWMFunction functions);
extern void gdk_window_set_geometry_hints(GdkWindow * window,
					  const GdkGeometry * geometry,
					  GdkWindowHints geom_mask);
extern void gdk_window_set_group(GdkWindow * window, GdkWindow * leader);
extern void gdk_window_set_icon(GdkWindow * window,
				GdkWindow * icon_window,
				GdkPixmap * pixmap, GdkBitmap * mask);
extern void gdk_window_set_icon_list(GdkWindow * window, GList * pixbufs);
extern void gdk_window_set_icon_name(GdkWindow * window,
				     const gchar * name);
extern void gdk_window_set_keep_above(GdkWindow * window,
				      gboolean setting);
extern void gdk_window_set_keep_below(GdkWindow * window,
				      gboolean setting);
extern void gdk_window_set_modal_hint(GdkWindow * window, gboolean modal);
extern void gdk_window_set_override_redirect(GdkWindow * window,
					     gboolean override_redirect);
extern void gdk_window_set_role(GdkWindow * window, const gchar * role);
extern void gdk_window_set_skip_pager_hint(GdkWindow * window,
					   gboolean skips_pager);
extern void gdk_window_set_skip_taskbar_hint(GdkWindow * window,
					     gboolean skips_taskbar);
extern gboolean gdk_window_set_static_gravities(GdkWindow * window,
						gboolean use_static);
extern void gdk_window_set_title(GdkWindow * window, const gchar * title);
extern void gdk_window_set_transient_for(GdkWindow * window,
					 GdkWindow * parent);
extern void gdk_window_set_type_hint(GdkWindow * window,
				     GdkWindowTypeHint hint);
extern void gdk_window_set_urgency_hint(GdkWindow * window,
					gboolean urgent);
extern void gdk_window_set_user_data(GdkWindow * window,
				     gpointer user_data);
extern void gdk_window_shape_combine_mask(GdkWindow * window,
					  GdkBitmap * mask, gint x,
					  gint y);
extern void gdk_window_shape_combine_region(GdkWindow * window,
					    const GdkRegion * shape_region,
					    gint offset_x, gint offset_y);
extern void gdk_window_show(GdkWindow * window);
extern void gdk_window_show_unraised(GdkWindow * window);
extern GType gdk_window_state_get_type(void);
extern void gdk_window_stick(GdkWindow * window);
extern void gdk_window_thaw_updates(GdkWindow * window);
extern GType gdk_window_type_get_type(void);
extern GType gdk_window_type_hint_get_type(void);
extern void gdk_window_unfullscreen(GdkWindow * window);
extern void gdk_window_unmaximize(GdkWindow * window);
extern void gdk_window_unstick(GdkWindow * window);
extern void gdk_window_withdraw(GdkWindow * window);
extern GType gdk_wm_decoration_get_type(void);
extern GType gdk_wm_function_get_type(void);
</SCREEN>
</SECT2>
<SECT2>
<TITLE>gtk-2.0/gdk/gdkcairo.h</TITLE>
<PARA>
</PARA>
<SCREEN>

extern cairo_t *gdk_cairo_create(GdkDrawable * drawable);
extern void gdk_cairo_rectangle(cairo_t * cr,
				const GdkRectangle * rectangle);
extern void gdk_cairo_region(cairo_t * cr, const GdkRegion * region);
extern void gdk_cairo_set_source_color(cairo_t * cr,
				       const GdkColor * color);
extern void gdk_cairo_set_source_pixbuf(cairo_t * cr,
					const GdkPixbuf * pixbuf,
					double pixbuf_x, double pixbuf_y);
extern void gdk_cairo_set_source_pixmap(cairo_t * cr, GdkPixmap * pixmap,
					double pixmap_x, double pixmap_y);
</SCREEN>
</SECT2>
<SECT2>
<TITLE>gtk-2.0/gdk/gdkkeysyms.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define GDK_space	0x020
#define GDK_exclam	0x021
#define GDK_quotedbl	0x022
#define GDK_numbersign	0x023
#define GDK_dollar	0x024
#define GDK_percent	0x025
#define GDK_ampersand	0x026
#define GDK_apostrophe	0x027
#define GDK_quoteright	0x027
#define GDK_parenleft	0x028
#define GDK_parenright	0x029
#define GDK_asterisk	0x02a
#define GDK_plus	0x02b
#define GDK_comma	0x02c
#define GDK_minus	0x02d
#define GDK_period	0x02e
#define GDK_slash	0x02f
#define GDK_0	0x030
#define GDK_1	0x031
#define GDK_2	0x032
#define GDK_3	0x033
#define GDK_4	0x034
#define GDK_5	0x035
#define GDK_6	0x036
#define GDK_7	0x037
#define GDK_8	0x038
#define GDK_9	0x039
#define GDK_colon	0x03a
#define GDK_semicolon	0x03b
#define GDK_less	0x03c
#define GDK_equal	0x03d
#define GDK_greater	0x03e
#define GDK_question	0x03f
#define GDK_at	0x040
#define GDK_A	0x041
#define GDK_B	0x042
#define GDK_C	0x043
#define GDK_D	0x044
#define GDK_E	0x045
#define GDK_F	0x046
#define GDK_G	0x047
#define GDK_H	0x048
#define GDK_I	0x049
#define GDK_J	0x04a
#define GDK_K	0x04b
#define GDK_L	0x04c
#define GDK_M	0x04d
#define GDK_N	0x04e
#define GDK_O	0x04f
#define GDK_P	0x050
#define GDK_Q	0x051
#define GDK_R	0x052
#define GDK_S	0x053
#define GDK_T	0x054
#define GDK_U	0x055
#define GDK_V	0x056
#define GDK_W	0x057
#define GDK_X	0x058
#define GDK_Y	0x059
#define GDK_Z	0x05a
#define GDK_bracketleft	0x05b
#define GDK_backslash	0x05c
#define GDK_bracketright	0x05d
#define GDK_asciicircum	0x05e
#define GDK_underscore	0x05f
#define GDK_grave	0x060
#define GDK_quoteleft	0x060
#define GDK_a	0x061
#define GDK_b	0x062
#define GDK_c	0x063
#define GDK_d	0x064
#define GDK_e	0x065
#define GDK_f	0x066
#define GDK_g	0x067
#define GDK_h	0x068
#define GDK_i	0x069
#define GDK_j	0x06a
#define GDK_k	0x06b
#define GDK_l	0x06c
#define GDK_m	0x06d
#define GDK_n	0x06e
#define GDK_o	0x06f
#define GDK_p	0x070
#define GDK_q	0x071
#define GDK_r	0x072
#define GDK_s	0x073
#define GDK_t	0x074
#define GDK_u	0x075
#define GDK_v	0x076
#define GDK_w	0x077
#define GDK_x	0x078
#define GDK_y	0x079
#define GDK_z	0x07a
#define GDK_braceleft	0x07b
#define GDK_bar	0x07c
#define GDK_braceright	0x07d
#define GDK_asciitilde	0x07e
#define GDK_nobreakspace	0x0a0
#define GDK_exclamdown	0x0a1
#define GDK_cent	0x0a2
#define GDK_sterling	0x0a3
#define GDK_currency	0x0a4
#define GDK_yen	0x0a5
#define GDK_brokenbar	0x0a6
#define GDK_section	0x0a7
#define GDK_diaeresis	0x0a8
#define GDK_copyright	0x0a9
#define GDK_ordfeminine	0x0aa
#define GDK_guillemotleft	0x0ab
#define GDK_notsign	0x0ac
#define GDK_hyphen	0x0ad
#define GDK_registered	0x0ae
#define GDK_macron	0x0af
#define GDK_degree	0x0b0
#define GDK_plusminus	0x0b1
#define GDK_twosuperior	0x0b2
#define GDK_threesuperior	0x0b3
#define GDK_acute	0x0b4
#define GDK_mu	0x0b5
#define GDK_paragraph	0x0b6
#define GDK_periodcentered	0x0b7
#define GDK_cedilla	0x0b8
#define GDK_onesuperior	0x0b9
#define GDK_masculine	0x0ba
#define GDK_guillemotright	0x0bb
#define GDK_onequarter	0x0bc
#define GDK_onehalf	0x0bd
#define GDK_threequarters	0x0be
#define GDK_questiondown	0x0bf
#define GDK_Agrave	0x0c0
#define GDK_Aacute	0x0c1
#define GDK_Acircumflex	0x0c2
#define GDK_Atilde	0x0c3
#define GDK_Adiaeresis	0x0c4
#define GDK_Aring	0x0c5
#define GDK_AE	0x0c6
#define GDK_Ccedilla	0x0c7
#define GDK_Egrave	0x0c8
#define GDK_Eacute	0x0c9
#define GDK_Ecircumflex	0x0ca
#define GDK_Ediaeresis	0x0cb
#define GDK_Igrave	0x0cc
#define GDK_Iacute	0x0cd
#define GDK_Icircumflex	0x0ce
#define GDK_Idiaeresis	0x0cf
#define GDK_ETH	0x0d0
#define GDK_Eth	0x0d0
#define GDK_Ntilde	0x0d1
#define GDK_Ograve	0x0d2
#define GDK_Oacute	0x0d3
#define GDK_Ocircumflex	0x0d4
#define GDK_Otilde	0x0d5
#define GDK_Odiaeresis	0x0d6
#define GDK_multiply	0x0d7
#define GDK_Ooblique	0x0d8
#define GDK_Ugrave	0x0d9
#define GDK_Uacute	0x0da
#define GDK_Ucircumflex	0x0db
#define GDK_Udiaeresis	0x0dc
#define GDK_Yacute	0x0dd
#define GDK_THORN	0x0de
#define GDK_Thorn	0x0de
#define GDK_ssharp	0x0df
#define GDK_agrave	0x0e0
#define GDK_aacute	0x0e1
#define GDK_acircumflex	0x0e2
#define GDK_atilde	0x0e3
#define GDK_adiaeresis	0x0e4
#define GDK_aring	0x0e5
#define GDK_ae	0x0e6
#define GDK_ccedilla	0x0e7
#define GDK_egrave	0x0e8
#define GDK_eacute	0x0e9
#define GDK_ecircumflex	0x0ea
#define GDK_ediaeresis	0x0eb
#define GDK_igrave	0x0ec
#define GDK_iacute	0x0ed
#define GDK_icircumflex	0x0ee
#define GDK_idiaeresis	0x0ef
#define GDK_eth	0x0f0
#define GDK_ntilde	0x0f1
#define GDK_ograve	0x0f2
#define GDK_oacute	0x0f3
#define GDK_ocircumflex	0x0f4
#define GDK_otilde	0x0f5
#define GDK_odiaeresis	0x0f6
#define GDK_division	0x0f7
#define GDK_oslash	0x0f8
#define GDK_ugrave	0x0f9
#define GDK_uacute	0x0fa
#define GDK_ucircumflex	0x0fb
#define GDK_udiaeresis	0x0fc
#define GDK_yacute	0x0fd
#define GDK_thorn	0x0fe
#define GDK_ydiaeresis	0x0ff
#define GDK_OE	0x13bc
#define GDK_oe	0x13bd
#define GDK_Ydiaeresis	0x13be
#define GDK_Aogonek	0x1a1
#define GDK_breve	0x1a2
#define GDK_Lstroke	0x1a3
#define GDK_Lcaron	0x1a5
#define GDK_Sacute	0x1a6
#define GDK_Scaron	0x1a9
#define GDK_Scedilla	0x1aa
#define GDK_Tcaron	0x1ab
#define GDK_Zacute	0x1ac
#define GDK_Zcaron	0x1ae
#define GDK_Zabovedot	0x1af
#define GDK_aogonek	0x1b1
#define GDK_ogonek	0x1b2
#define GDK_lstroke	0x1b3
#define GDK_lcaron	0x1b5
#define GDK_sacute	0x1b6
#define GDK_caron	0x1b7
#define GDK_scaron	0x1b9
#define GDK_scedilla	0x1ba
#define GDK_tcaron	0x1bb
#define GDK_zacute	0x1bc
#define GDK_doubleacute	0x1bd
#define GDK_zcaron	0x1be
#define GDK_zabovedot	0x1bf
#define GDK_Racute	0x1c0
#define GDK_Abreve	0x1c3
#define GDK_Lacute	0x1c5
#define GDK_Cacute	0x1c6
#define GDK_Ccaron	0x1c8
#define GDK_Eogonek	0x1ca
#define GDK_Ecaron	0x1cc
#define GDK_Dcaron	0x1cf
#define GDK_Dstroke	0x1d0
#define GDK_Nacute	0x1d1
#define GDK_Ncaron	0x1d2
#define GDK_Odoubleacute	0x1d5
#define GDK_Rcaron	0x1d8
#define GDK_Uring	0x1d9
#define GDK_Udoubleacute	0x1db
#define GDK_Tcedilla	0x1de
#define GDK_racute	0x1e0
#define GDK_abreve	0x1e3
#define GDK_lacute	0x1e5
#define GDK_cacute	0x1e6
#define GDK_ccaron	0x1e8
#define GDK_eogonek	0x1ea
#define GDK_ecaron	0x1ec
#define GDK_dcaron	0x1ef
#define GDK_dstroke	0x1f0
#define GDK_nacute	0x1f1
#define GDK_ncaron	0x1f2
#define GDK_odoubleacute	0x1f5
#define GDK_rcaron	0x1f8
#define GDK_uring	0x1f9
#define GDK_udoubleacute	0x1fb
#define GDK_tcedilla	0x1fe
#define GDK_abovedot	0x1ff
#define GDK_EcuSign	0x20a0
#define GDK_ColonSign	0x20a1
#define GDK_CruzeiroSign	0x20a2
#define GDK_FFrancSign	0x20a3
#define GDK_LiraSign	0x20a4
#define GDK_MillSign	0x20a5
#define GDK_NairaSign	0x20a6
#define GDK_PesetaSign	0x20a7
#define GDK_RupeeSign	0x20a8
#define GDK_WonSign	0x20a9
#define GDK_NewSheqelSign	0x20aa
#define GDK_DongSign	0x20ab
#define GDK_EuroSign	0x20ac
#define GDK_Hstroke	0x2a1
#define GDK_Hcircumflex	0x2a6
#define GDK_Iabovedot	0x2a9
#define GDK_Gbreve	0x2ab
#define GDK_Jcircumflex	0x2ac
#define GDK_hstroke	0x2b1
#define GDK_hcircumflex	0x2b6
#define GDK_idotless	0x2b9
#define GDK_gbreve	0x2bb
#define GDK_jcircumflex	0x2bc
#define GDK_Cabovedot	0x2c5
#define GDK_Ccircumflex	0x2c6
#define GDK_Gabovedot	0x2d5
#define GDK_Gcircumflex	0x2d8
#define GDK_Ubreve	0x2dd
#define GDK_Scircumflex	0x2de
#define GDK_cabovedot	0x2e5
#define GDK_ccircumflex	0x2e6
#define GDK_gabovedot	0x2f5
#define GDK_gcircumflex	0x2f8
#define GDK_ubreve	0x2fd
#define GDK_scircumflex	0x2fe
#define GDK_kappa	0x3a2
#define GDK_kra	0x3a2
#define GDK_Rcedilla	0x3a3
#define GDK_Itilde	0x3a5
#define GDK_Lcedilla	0x3a6
#define GDK_Emacron	0x3aa
#define GDK_Gcedilla	0x3ab
#define GDK_Tslash	0x3ac
#define GDK_rcedilla	0x3b3
#define GDK_itilde	0x3b5
#define GDK_lcedilla	0x3b6
#define GDK_emacron	0x3ba
#define GDK_gcedilla	0x3bb
#define GDK_tslash	0x3bc
#define GDK_ENG	0x3bd
#define GDK_eng	0x3bf
#define GDK_Amacron	0x3c0
#define GDK_Iogonek	0x3c7
#define GDK_Eabovedot	0x3cc
#define GDK_Imacron	0x3cf
#define GDK_Ncedilla	0x3d1
#define GDK_Omacron	0x3d2
#define GDK_Kcedilla	0x3d3
#define GDK_Uogonek	0x3d9
#define GDK_Utilde	0x3dd
#define GDK_Umacron	0x3de
#define GDK_amacron	0x3e0
#define GDK_iogonek	0x3e7
#define GDK_eabovedot	0x3ec
#define GDK_imacron	0x3ef
#define GDK_ncedilla	0x3f1
#define GDK_omacron	0x3f2
#define GDK_kcedilla	0x3f3
#define GDK_uogonek	0x3f9
#define GDK_utilde	0x3fd
#define GDK_umacron	0x3fe
#define GDK_overline	0x47e
#define GDK_kana_fullstop	0x4a1
#define GDK_kana_openingbracket	0x4a2
#define GDK_kana_closingbracket	0x4a3
#define GDK_kana_comma	0x4a4
#define GDK_kana_conjunctive	0x4a5
#define GDK_kana_middledot	0x4a5
#define GDK_kana_WO	0x4a6
#define GDK_kana_a	0x4a7
#define GDK_kana_i	0x4a8
#define GDK_kana_u	0x4a9
#define GDK_kana_e	0x4aa
#define GDK_kana_o	0x4ab
#define GDK_kana_ya	0x4ac
#define GDK_kana_yu	0x4ad
#define GDK_kana_yo	0x4ae
#define GDK_kana_tsu	0x4af
#define GDK_kana_tu	0x4af
#define GDK_prolongedsound	0x4b0
#define GDK_kana_A	0x4b1
#define GDK_kana_I	0x4b2
#define GDK_kana_U	0x4b3
#define GDK_kana_E	0x4b4
#define GDK_kana_O	0x4b5
#define GDK_kana_KA	0x4b6
#define GDK_kana_KI	0x4b7
#define GDK_kana_KU	0x4b8
#define GDK_kana_KE	0x4b9
#define GDK_kana_KO	0x4ba
#define GDK_kana_SA	0x4bb
#define GDK_kana_SHI	0x4bc
#define GDK_kana_SU	0x4bd
#define GDK_kana_SE	0x4be
#define GDK_kana_SO	0x4bf
#define GDK_kana_TA	0x4c0
#define GDK_kana_CHI	0x4c1
#define GDK_kana_TI	0x4c1
#define GDK_kana_TSU	0x4c2
#define GDK_kana_TU	0x4c2
#define GDK_kana_TE	0x4c3
#define GDK_kana_TO	0x4c4
#define GDK_kana_NA	0x4c5
#define GDK_kana_NI	0x4c6
#define GDK_kana_NU	0x4c7
#define GDK_kana_NE	0x4c8
#define GDK_kana_NO	0x4c9
#define GDK_kana_HA	0x4ca
#define GDK_kana_HI	0x4cb
#define GDK_kana_FU	0x4cc
#define GDK_kana_HU	0x4cc
#define GDK_kana_HE	0x4cd
#define GDK_kana_HO	0x4ce
#define GDK_kana_MA	0x4cf
#define GDK_kana_MI	0x4d0
#define GDK_kana_MU	0x4d1
#define GDK_kana_ME	0x4d2
#define GDK_kana_MO	0x4d3
#define GDK_kana_YA	0x4d4
#define GDK_kana_YU	0x4d5
#define GDK_kana_YO	0x4d6
#define GDK_kana_RA	0x4d7
#define GDK_kana_RI	0x4d8
#define GDK_kana_RU	0x4d9
#define GDK_kana_RE	0x4da
#define GDK_kana_RO	0x4db
#define GDK_kana_WA	0x4dc
#define GDK_kana_N	0x4dd
#define GDK_voicedsound	0x4de
#define GDK_semivoicedsound	0x4df
#define GDK_Arabic_comma	0x5ac
#define GDK_Arabic_semicolon	0x5bb
#define GDK_Arabic_question_mark	0x5bf
#define GDK_Arabic_hamza	0x5c1
#define GDK_Arabic_maddaonalef	0x5c2
#define GDK_Arabic_hamzaonalef	0x5c3
#define GDK_Arabic_hamzaonwaw	0x5c4
#define GDK_Arabic_hamzaunderalef	0x5c5
#define GDK_Arabic_hamzaonyeh	0x5c6
#define GDK_Arabic_alef	0x5c7
#define GDK_Arabic_beh	0x5c8
#define GDK_Arabic_tehmarbuta	0x5c9
#define GDK_Arabic_teh	0x5ca
#define GDK_Arabic_theh	0x5cb
#define GDK_Arabic_jeem	0x5cc
#define GDK_Arabic_hah	0x5cd
#define GDK_Arabic_khah	0x5ce
#define GDK_Arabic_dal	0x5cf
#define GDK_Arabic_thal	0x5d0
#define GDK_Arabic_ra	0x5d1
#define GDK_Arabic_zain	0x5d2
#define GDK_Arabic_seen	0x5d3
#define GDK_Arabic_sheen	0x5d4
#define GDK_Arabic_sad	0x5d5
#define GDK_Arabic_dad	0x5d6
#define GDK_Arabic_tah	0x5d7
#define GDK_Arabic_zah	0x5d8
#define GDK_Arabic_ain	0x5d9
#define GDK_Arabic_ghain	0x5da
#define GDK_Arabic_tatweel	0x5e0
#define GDK_Arabic_feh	0x5e1
#define GDK_Arabic_qaf	0x5e2
#define GDK_Arabic_kaf	0x5e3
#define GDK_Arabic_lam	0x5e4
#define GDK_Arabic_meem	0x5e5
#define GDK_Arabic_noon	0x5e6
#define GDK_Arabic_ha	0x5e7
#define GDK_Arabic_heh	0x5e7
#define GDK_Arabic_waw	0x5e8
#define GDK_Arabic_alefmaksura	0x5e9
#define GDK_Arabic_yeh	0x5ea
#define GDK_Arabic_fathatan	0x5eb
#define GDK_Arabic_dammatan	0x5ec
#define GDK_Arabic_kasratan	0x5ed
#define GDK_Arabic_fatha	0x5ee
#define GDK_Arabic_damma	0x5ef
#define GDK_Arabic_kasra	0x5f0
#define GDK_Arabic_shadda	0x5f1
#define GDK_Arabic_sukun	0x5f2
#define GDK_Serbian_dje	0x6a1
#define GDK_Macedonia_gje	0x6a2
#define GDK_Cyrillic_io	0x6a3
#define GDK_Ukrainian_ie	0x6a4
#define GDK_Ukranian_je	0x6a4
#define GDK_Macedonia_dse	0x6a5
#define GDK_Ukrainian_i	0x6a6
#define GDK_Ukranian_i	0x6a6
#define GDK_Ukrainian_yi	0x6a7
#define GDK_Ukranian_yi	0x6a7
#define GDK_Cyrillic_je	0x6a8
#define GDK_Serbian_je	0x6a8
#define GDK_Cyrillic_lje	0x6a9
#define GDK_Serbian_lje	0x6a9
#define GDK_Cyrillic_nje	0x6aa
#define GDK_Serbian_nje	0x6aa
#define GDK_Serbian_tshe	0x6ab
#define GDK_Macedonia_kje	0x6ac
#define GDK_Ukrainian_ghe_with_upturn	0x6ad
#define GDK_Byelorussian_shortu	0x6ae
#define GDK_Cyrillic_dzhe	0x6af
#define GDK_Serbian_dze	0x6af
#define GDK_numerosign	0x6b0
#define GDK_Serbian_DJE	0x6b1
#define GDK_Macedonia_GJE	0x6b2
#define GDK_Cyrillic_IO	0x6b3
#define GDK_Ukrainian_IE	0x6b4
#define GDK_Ukranian_JE	0x6b4
#define GDK_Macedonia_DSE	0x6b5
#define GDK_Ukrainian_I	0x6b6
#define GDK_Ukranian_I	0x6b6
#define GDK_Ukrainian_YI	0x6b7
#define GDK_Ukranian_YI	0x6b7
#define GDK_Cyrillic_JE	0x6b8
#define GDK_Serbian_JE	0x6b8
#define GDK_Cyrillic_LJE	0x6b9
#define GDK_Serbian_LJE	0x6b9
#define GDK_Cyrillic_NJE	0x6ba
#define GDK_Serbian_NJE	0x6ba
#define GDK_Serbian_TSHE	0x6bb
#define GDK_Macedonia_KJE	0x6bc
#define GDK_Ukrainian_GHE_WITH_UPTURN	0x6bd
#define GDK_Byelorussian_SHORTU	0x6be
#define GDK_Cyrillic_DZHE	0x6bf
#define GDK_Serbian_DZE	0x6bf
#define GDK_Cyrillic_yu	0x6c0
#define GDK_Cyrillic_a	0x6c1
#define GDK_Cyrillic_be	0x6c2
#define GDK_Cyrillic_tse	0x6c3
#define GDK_Cyrillic_de	0x6c4
#define GDK_Cyrillic_ie	0x6c5
#define GDK_Cyrillic_ef	0x6c6
#define GDK_Cyrillic_ghe	0x6c7
#define GDK_Cyrillic_ha	0x6c8
#define GDK_Cyrillic_i	0x6c9
#define GDK_Cyrillic_shorti	0x6ca
#define GDK_Cyrillic_ka	0x6cb
#define GDK_Cyrillic_el	0x6cc
#define GDK_Cyrillic_em	0x6cd
#define GDK_Cyrillic_en	0x6ce
#define GDK_Cyrillic_o	0x6cf
#define GDK_Cyrillic_pe	0x6d0
#define GDK_Cyrillic_ya	0x6d1
#define GDK_Cyrillic_er	0x6d2
#define GDK_Cyrillic_es	0x6d3
#define GDK_Cyrillic_te	0x6d4
#define GDK_Cyrillic_u	0x6d5
#define GDK_Cyrillic_zhe	0x6d6
#define GDK_Cyrillic_ve	0x6d7
#define GDK_Cyrillic_softsign	0x6d8
#define GDK_Cyrillic_yeru	0x6d9
#define GDK_Cyrillic_ze	0x6da
#define GDK_Cyrillic_sha	0x6db
#define GDK_Cyrillic_e	0x6dc
#define GDK_Cyrillic_shcha	0x6dd
#define GDK_Cyrillic_che	0x6de
#define GDK_Cyrillic_hardsign	0x6df
#define GDK_Cyrillic_YU	0x6e0
#define GDK_Cyrillic_A	0x6e1
#define GDK_Cyrillic_BE	0x6e2
#define GDK_Cyrillic_TSE	0x6e3
#define GDK_Cyrillic_DE	0x6e4
#define GDK_Cyrillic_IE	0x6e5
#define GDK_Cyrillic_EF	0x6e6
#define GDK_Cyrillic_GHE	0x6e7
#define GDK_Cyrillic_HA	0x6e8
#define GDK_Cyrillic_I	0x6e9
#define GDK_Cyrillic_SHORTI	0x6ea
#define GDK_Cyrillic_KA	0x6eb
#define GDK_Cyrillic_EL	0x6ec
#define GDK_Cyrillic_EM	0x6ed
#define GDK_Cyrillic_EN	0x6ee
#define GDK_Cyrillic_O	0x6ef
#define GDK_Cyrillic_PE	0x6f0
#define GDK_Cyrillic_YA	0x6f1
#define GDK_Cyrillic_ER	0x6f2
#define GDK_Cyrillic_ES	0x6f3
#define GDK_Cyrillic_TE	0x6f4
#define GDK_Cyrillic_U	0x6f5
#define GDK_Cyrillic_ZHE	0x6f6
#define GDK_Cyrillic_VE	0x6f7
#define GDK_Cyrillic_SOFTSIGN	0x6f8
#define GDK_Cyrillic_YERU	0x6f9
#define GDK_Cyrillic_ZE	0x6fa
#define GDK_Cyrillic_SHA	0x6fb
#define GDK_Cyrillic_E	0x6fc
#define GDK_Cyrillic_SHCHA	0x6fd
#define GDK_Cyrillic_CHE	0x6fe
#define GDK_Cyrillic_HARDSIGN	0x6ff
#define GDK_Greek_ALPHAaccent	0x7a1
#define GDK_Greek_EPSILONaccent	0x7a2
#define GDK_Greek_ETAaccent	0x7a3
#define GDK_Greek_IOTAaccent	0x7a4
#define GDK_Greek_IOTAdieresis	0x7a5
#define GDK_Greek_OMICRONaccent	0x7a7
#define GDK_Greek_UPSILONaccent	0x7a8
#define GDK_Greek_UPSILONdieresis	0x7a9
#define GDK_Greek_OMEGAaccent	0x7ab
#define GDK_Greek_accentdieresis	0x7ae
#define GDK_Greek_horizbar	0x7af
#define GDK_Greek_alphaaccent	0x7b1
#define GDK_Greek_epsilonaccent	0x7b2
#define GDK_Greek_etaaccent	0x7b3
#define GDK_Greek_iotaaccent	0x7b4
#define GDK_Greek_iotadieresis	0x7b5
#define GDK_Greek_iotaaccentdieresis	0x7b6
#define GDK_Greek_omicronaccent	0x7b7
#define GDK_Greek_upsilonaccent	0x7b8
#define GDK_Greek_upsilondieresis	0x7b9
#define GDK_Greek_upsilonaccentdieresis	0x7ba
#define GDK_Greek_omegaaccent	0x7bb
#define GDK_Greek_ALPHA	0x7c1
#define GDK_Greek_BETA	0x7c2
#define GDK_Greek_GAMMA	0x7c3
#define GDK_Greek_DELTA	0x7c4
#define GDK_Greek_EPSILON	0x7c5
#define GDK_Greek_ZETA	0x7c6
#define GDK_Greek_ETA	0x7c7
#define GDK_Greek_THETA	0x7c8
#define GDK_Greek_IOTA	0x7c9
#define GDK_Greek_KAPPA	0x7ca
#define GDK_Greek_LAMBDA	0x7cb
#define GDK_Greek_LAMDA	0x7cb
#define GDK_Greek_MU	0x7cc
#define GDK_Greek_NU	0x7cd
#define GDK_Greek_XI	0x7ce
#define GDK_Greek_OMICRON	0x7cf
#define GDK_Greek_PI	0x7d0
#define GDK_Greek_RHO	0x7d1
#define GDK_Greek_SIGMA	0x7d2
#define GDK_Greek_TAU	0x7d4
#define GDK_Greek_UPSILON	0x7d5
#define GDK_Greek_PHI	0x7d6
#define GDK_Greek_CHI	0x7d7
#define GDK_Greek_PSI	0x7d8
#define GDK_Greek_OMEGA	0x7d9
#define GDK_Greek_alpha	0x7e1
#define GDK_Greek_beta	0x7e2
#define GDK_Greek_gamma	0x7e3
#define GDK_Greek_delta	0x7e4
#define GDK_Greek_epsilon	0x7e5
#define GDK_Greek_zeta	0x7e6
#define GDK_Greek_eta	0x7e7
#define GDK_Greek_theta	0x7e8
#define GDK_Greek_iota	0x7e9
#define GDK_Greek_kappa	0x7ea
#define GDK_Greek_lambda	0x7eb
#define GDK_Greek_lamda	0x7eb
#define GDK_Greek_mu	0x7ec
#define GDK_Greek_nu	0x7ed
#define GDK_Greek_xi	0x7ee
#define GDK_Greek_omicron	0x7ef
#define GDK_Greek_pi	0x7f0
#define GDK_Greek_rho	0x7f1
#define GDK_Greek_sigma	0x7f2
#define GDK_Greek_finalsmallsigma	0x7f3
#define GDK_Greek_tau	0x7f4
#define GDK_Greek_upsilon	0x7f5
#define GDK_Greek_phi	0x7f6
#define GDK_Greek_chi	0x7f7
#define GDK_Greek_psi	0x7f8
#define GDK_Greek_omega	0x7f9
#define GDK_leftradical	0x8a1
#define GDK_topleftradical	0x8a2
#define GDK_horizconnector	0x8a3
#define GDK_topintegral	0x8a4
#define GDK_botintegral	0x8a5
#define GDK_vertconnector	0x8a6
#define GDK_topleftsqbracket	0x8a7
#define GDK_botleftsqbracket	0x8a8
#define GDK_toprightsqbracket	0x8a9
#define GDK_botrightsqbracket	0x8aa
#define GDK_topleftparens	0x8ab
#define GDK_botleftparens	0x8ac
#define GDK_toprightparens	0x8ad
#define GDK_botrightparens	0x8ae
#define GDK_leftmiddlecurlybrace	0x8af
#define GDK_rightmiddlecurlybrace	0x8b0
#define GDK_topleftsummation	0x8b1
#define GDK_botleftsummation	0x8b2
#define GDK_topvertsummationconnector	0x8b3
#define GDK_botvertsummationconnector	0x8b4
#define GDK_toprightsummation	0x8b5
#define GDK_botrightsummation	0x8b6
#define GDK_rightmiddlesummation	0x8b7
#define GDK_lessthanequal	0x8bc
#define GDK_notequal	0x8bd
#define GDK_greaterthanequal	0x8be
#define GDK_integral	0x8bf
#define GDK_therefore	0x8c0
#define GDK_variation	0x8c1
#define GDK_infinity	0x8c2
#define GDK_nabla	0x8c5
#define GDK_approximate	0x8c8
#define GDK_similarequal	0x8c9
#define GDK_ifonlyif	0x8cd
#define GDK_implies	0x8ce
#define GDK_identical	0x8cf
#define GDK_radical	0x8d6
#define GDK_includedin	0x8da
#define GDK_includes	0x8db
#define GDK_intersection	0x8dc
#define GDK_union	0x8dd
#define GDK_logicaland	0x8de
#define GDK_logicalor	0x8df
#define GDK_partialderivative	0x8ef
#define GDK_function	0x8f6
#define GDK_leftarrow	0x8fb
#define GDK_uparrow	0x8fc
#define GDK_rightarrow	0x8fd
#define GDK_downarrow	0x8fe
#define GDK_blank	0x9df
#define GDK_soliddiamond	0x9e0
#define GDK_checkerboard	0x9e1
#define GDK_ht	0x9e2
#define GDK_ff	0x9e3
#define GDK_cr	0x9e4
#define GDK_lf	0x9e5
#define GDK_nl	0x9e8
#define GDK_vt	0x9e9
#define GDK_lowrightcorner	0x9ea
#define GDK_uprightcorner	0x9eb
#define GDK_upleftcorner	0x9ec
#define GDK_lowleftcorner	0x9ed
#define GDK_crossinglines	0x9ee
#define GDK_horizlinescan1	0x9ef
#define GDK_horizlinescan3	0x9f0
#define GDK_horizlinescan5	0x9f1
#define GDK_horizlinescan7	0x9f2
#define GDK_horizlinescan9	0x9f3
#define GDK_leftt	0x9f4
#define GDK_rightt	0x9f5
#define GDK_bott	0x9f6
#define GDK_topt	0x9f7
#define GDK_vertbar	0x9f8
#define GDK_emspace	0xaa1
#define GDK_enspace	0xaa2
#define GDK_em3space	0xaa3
#define GDK_em4space	0xaa4
#define GDK_digitspace	0xaa5
#define GDK_punctspace	0xaa6
#define GDK_thinspace	0xaa7
#define GDK_hairspace	0xaa8
#define GDK_emdash	0xaa9
#define GDK_endash	0xaaa
#define GDK_signifblank	0xaac
#define GDK_ellipsis	0xaae
#define GDK_doubbaselinedot	0xaaf
#define GDK_onethird	0xab0
#define GDK_twothirds	0xab1
#define GDK_onefifth	0xab2
#define GDK_twofifths	0xab3
#define GDK_threefifths	0xab4
#define GDK_fourfifths	0xab5
#define GDK_onesixth	0xab6
#define GDK_fivesixths	0xab7
#define GDK_careof	0xab8
#define GDK_figdash	0xabb
#define GDK_leftanglebracket	0xabc
#define GDK_decimalpoint	0xabd
#define GDK_rightanglebracket	0xabe
#define GDK_marker	0xabf
#define GDK_oneeighth	0xac3
#define GDK_threeeighths	0xac4
#define GDK_fiveeighths	0xac5
#define GDK_seveneighths	0xac6
#define GDK_trademark	0xac9
#define GDK_signaturemark	0xaca
#define GDK_trademarkincircle	0xacb
#define GDK_leftopentriangle	0xacc
#define GDK_rightopentriangle	0xacd
#define GDK_emopencircle	0xace
#define GDK_emopenrectangle	0xacf
#define GDK_leftsinglequotemark	0xad0
#define GDK_rightsinglequotemark	0xad1
#define GDK_leftdoublequotemark	0xad2
#define GDK_rightdoublequotemark	0xad3
#define GDK_prescription	0xad4
#define GDK_minutes	0xad6
#define GDK_seconds	0xad7
#define GDK_latincross	0xad9
#define GDK_hexagram	0xada
#define GDK_filledrectbullet	0xadb
#define GDK_filledlefttribullet	0xadc
#define GDK_filledrighttribullet	0xadd
#define GDK_emfilledcircle	0xade
#define GDK_emfilledrect	0xadf
#define GDK_enopencircbullet	0xae0
#define GDK_enopensquarebullet	0xae1
#define GDK_openrectbullet	0xae2
#define GDK_opentribulletup	0xae3
#define GDK_opentribulletdown	0xae4
#define GDK_openstar	0xae5
#define GDK_enfilledcircbullet	0xae6
#define GDK_enfilledsqbullet	0xae7
#define GDK_filledtribulletup	0xae8
#define GDK_filledtribulletdown	0xae9
#define GDK_leftpointer	0xaea
#define GDK_rightpointer	0xaeb
#define GDK_club	0xaec
#define GDK_diamond	0xaed
#define GDK_heart	0xaee
#define GDK_maltesecross	0xaf0
#define GDK_dagger	0xaf1
#define GDK_doubledagger	0xaf2
#define GDK_checkmark	0xaf3
#define GDK_ballotcross	0xaf4
#define GDK_musicalsharp	0xaf5
#define GDK_musicalflat	0xaf6
#define GDK_malesymbol	0xaf7
#define GDK_femalesymbol	0xaf8
#define GDK_telephone	0xaf9
#define GDK_telephonerecorder	0xafa
#define GDK_phonographcopyright	0xafb
#define GDK_caret	0xafc
#define GDK_singlelowquotemark	0xafd
#define GDK_doublelowquotemark	0xafe
#define GDK_cursor	0xaff
#define GDK_leftcaret	0xba3
#define GDK_rightcaret	0xba6
#define GDK_downcaret	0xba8
#define GDK_upcaret	0xba9
#define GDK_overbar	0xbc0
#define GDK_downtack	0xbc2
#define GDK_upshoe	0xbc3
#define GDK_downstile	0xbc4
#define GDK_underbar	0xbc6
#define GDK_jot	0xbca
#define GDK_quad	0xbcc
#define GDK_uptack	0xbce
#define GDK_circle	0xbcf
#define GDK_upstile	0xbd3
#define GDK_downshoe	0xbd6
#define GDK_rightshoe	0xbd8
#define GDK_leftshoe	0xbda
#define GDK_lefttack	0xbdc
#define GDK_righttack	0xbfc
#define GDK_hebrew_doublelowline	0xcdf
#define GDK_hebrew_aleph	0xce0
#define GDK_hebrew_bet	0xce1
#define GDK_hebrew_beth	0xce1
#define GDK_hebrew_gimel	0xce2
#define GDK_hebrew_gimmel	0xce2
#define GDK_hebrew_dalet	0xce3
#define GDK_hebrew_daleth	0xce3
#define GDK_hebrew_he	0xce4
#define GDK_hebrew_waw	0xce5
#define GDK_hebrew_zain	0xce6
#define GDK_hebrew_zayin	0xce6
#define GDK_hebrew_chet	0xce7
#define GDK_hebrew_het	0xce7
#define GDK_hebrew_tet	0xce8
#define GDK_hebrew_teth	0xce8
#define GDK_hebrew_yod	0xce9
#define GDK_hebrew_finalkaph	0xcea
#define GDK_hebrew_kaph	0xceb
#define GDK_hebrew_lamed	0xcec
#define GDK_hebrew_finalmem	0xced
#define GDK_hebrew_mem	0xcee
#define GDK_hebrew_finalnun	0xcef
#define GDK_hebrew_nun	0xcf0
#define GDK_hebrew_samech	0xcf1
#define GDK_hebrew_samekh	0xcf1
#define GDK_hebrew_ayin	0xcf2
#define GDK_hebrew_finalpe	0xcf3
#define GDK_hebrew_pe	0xcf4
#define GDK_hebrew_finalzade	0xcf5
#define GDK_hebrew_finalzadi	0xcf5
#define GDK_hebrew_zade	0xcf6
#define GDK_hebrew_zadi	0xcf6
#define GDK_hebrew_kuf	0xcf7
#define GDK_hebrew_qoph	0xcf7
#define GDK_hebrew_resh	0xcf8
#define GDK_hebrew_shin	0xcf9
#define GDK_hebrew_taf	0xcfa
#define GDK_hebrew_taw	0xcfa
#define GDK_Thai_kokai	0xda1
#define GDK_Thai_khokhai	0xda2
#define GDK_Thai_khokhuat	0xda3
#define GDK_Thai_khokhwai	0xda4
#define GDK_Thai_khokhon	0xda5
#define GDK_Thai_khorakhang	0xda6
#define GDK_Thai_ngongu	0xda7
#define GDK_Thai_chochan	0xda8
#define GDK_Thai_choching	0xda9
#define GDK_Thai_chochang	0xdaa
#define GDK_Thai_soso	0xdab
#define GDK_Thai_chochoe	0xdac
#define GDK_Thai_yoying	0xdad
#define GDK_Thai_dochada	0xdae
#define GDK_Thai_topatak	0xdaf
#define GDK_Thai_thothan	0xdb0
#define GDK_Thai_thonangmontho	0xdb1
#define GDK_Thai_thophuthao	0xdb2
#define GDK_Thai_nonen	0xdb3
#define GDK_Thai_dodek	0xdb4
#define GDK_Thai_totao	0xdb5
#define GDK_Thai_thothung	0xdb6
#define GDK_Thai_thothahan	0xdb7
#define GDK_Thai_thothong	0xdb8
#define GDK_Thai_nonu	0xdb9
#define GDK_Thai_bobaimai	0xdba
#define GDK_Thai_popla	0xdbb
#define GDK_Thai_phophung	0xdbc
#define GDK_Thai_fofa	0xdbd
#define GDK_Thai_phophan	0xdbe
#define GDK_Thai_fofan	0xdbf
#define GDK_Thai_phosamphao	0xdc0
#define GDK_Thai_moma	0xdc1
#define GDK_Thai_yoyak	0xdc2
#define GDK_Thai_rorua	0xdc3
#define GDK_Thai_ru	0xdc4
#define GDK_Thai_loling	0xdc5
#define GDK_Thai_lu	0xdc6
#define GDK_Thai_wowaen	0xdc7
#define GDK_Thai_sosala	0xdc8
#define GDK_Thai_sorusi	0xdc9
#define GDK_Thai_sosua	0xdca
#define GDK_Thai_hohip	0xdcb
#define GDK_Thai_lochula	0xdcc
#define GDK_Thai_oang	0xdcd
#define GDK_Thai_honokhuk	0xdce
#define GDK_Thai_paiyannoi	0xdcf
#define GDK_Thai_saraa	0xdd0
#define GDK_Thai_maihanakat	0xdd1
#define GDK_Thai_saraaa	0xdd2
#define GDK_Thai_saraam	0xdd3
#define GDK_Thai_sarai	0xdd4
#define GDK_Thai_saraii	0xdd5
#define GDK_Thai_saraue	0xdd6
#define GDK_Thai_sarauee	0xdd7
#define GDK_Thai_sarau	0xdd8
#define GDK_Thai_sarauu	0xdd9
#define GDK_Thai_phinthu	0xdda
#define GDK_Thai_maihanakat_maitho	0xdde
#define GDK_Thai_baht	0xddf
#define GDK_Thai_sarae	0xde0
#define GDK_Thai_saraae	0xde1
#define GDK_Thai_sarao	0xde2
#define GDK_Thai_saraaimaimuan	0xde3
#define GDK_Thai_saraaimaimalai	0xde4
#define GDK_Thai_lakkhangyao	0xde5
#define GDK_Thai_maiyamok	0xde6
#define GDK_Thai_maitaikhu	0xde7
#define GDK_Thai_maiek	0xde8
#define GDK_Thai_maitho	0xde9
#define GDK_Thai_maitri	0xdea
#define GDK_Thai_maichattawa	0xdeb
#define GDK_Thai_thanthakhat	0xdec
#define GDK_Thai_nikhahit	0xded
#define GDK_Thai_leksun	0xdf0
#define GDK_Thai_leknung	0xdf1
#define GDK_Thai_leksong	0xdf2
#define GDK_Thai_leksam	0xdf3
#define GDK_Thai_leksi	0xdf4
#define GDK_Thai_lekha	0xdf5
#define GDK_Thai_lekhok	0xdf6
#define GDK_Thai_lekchet	0xdf7
#define GDK_Thai_lekpaet	0xdf8
#define GDK_Thai_lekkao	0xdf9
#define GDK_Hangul_Kiyeog	0xea1
#define GDK_Hangul_SsangKiyeog	0xea2
#define GDK_Hangul_KiyeogSios	0xea3
#define GDK_Hangul_Nieun	0xea4
#define GDK_Hangul_NieunJieuj	0xea5
#define GDK_Hangul_NieunHieuh	0xea6
#define GDK_Hangul_Dikeud	0xea7
#define GDK_Hangul_SsangDikeud	0xea8
#define GDK_Hangul_Rieul	0xea9
#define GDK_Hangul_RieulKiyeog	0xeaa
#define GDK_Hangul_RieulMieum	0xeab
#define GDK_Hangul_RieulPieub	0xeac
#define GDK_Hangul_RieulSios	0xead
#define GDK_Hangul_RieulTieut	0xeae
#define GDK_Hangul_RieulPhieuf	0xeaf
#define GDK_Hangul_RieulHieuh	0xeb0
#define GDK_Hangul_Mieum	0xeb1
#define GDK_Hangul_Pieub	0xeb2
#define GDK_Hangul_SsangPieub	0xeb3
#define GDK_Hangul_PieubSios	0xeb4
#define GDK_Hangul_Sios	0xeb5
#define GDK_Hangul_SsangSios	0xeb6
#define GDK_Hangul_Ieung	0xeb7
#define GDK_Hangul_Jieuj	0xeb8
#define GDK_Hangul_SsangJieuj	0xeb9
#define GDK_Hangul_Cieuc	0xeba
#define GDK_Hangul_Khieuq	0xebb
#define GDK_Hangul_Tieut	0xebc
#define GDK_Hangul_Phieuf	0xebd
#define GDK_Hangul_Hieuh	0xebe
#define GDK_Hangul_A	0xebf
#define GDK_Hangul_AE	0xec0
#define GDK_Hangul_YA	0xec1
#define GDK_Hangul_YAE	0xec2
#define GDK_Hangul_EO	0xec3
#define GDK_Hangul_E	0xec4
#define GDK_Hangul_YEO	0xec5
#define GDK_Hangul_YE	0xec6
#define GDK_Hangul_O	0xec7
#define GDK_Hangul_WA	0xec8
#define GDK_Hangul_WAE	0xec9
#define GDK_Hangul_OE	0xeca
#define GDK_Hangul_YO	0xecb
#define GDK_Hangul_U	0xecc
#define GDK_Hangul_WEO	0xecd
#define GDK_Hangul_WE	0xece
#define GDK_Hangul_WI	0xecf
#define GDK_Hangul_YU	0xed0
#define GDK_Hangul_EU	0xed1
#define GDK_Hangul_YI	0xed2
#define GDK_Hangul_I	0xed3
#define GDK_Hangul_J_Kiyeog	0xed4
#define GDK_Hangul_J_SsangKiyeog	0xed5
#define GDK_Hangul_J_KiyeogSios	0xed6
#define GDK_Hangul_J_Nieun	0xed7
#define GDK_Hangul_J_NieunJieuj	0xed8
#define GDK_Hangul_J_NieunHieuh	0xed9
#define GDK_Hangul_J_Dikeud	0xeda
#define GDK_Hangul_J_Rieul	0xedb
#define GDK_Hangul_J_RieulKiyeog	0xedc
#define GDK_Hangul_J_RieulMieum	0xedd
#define GDK_Hangul_J_RieulPieub	0xede
#define GDK_Hangul_J_RieulSios	0xedf
#define GDK_Hangul_J_RieulTieut	0xee0
#define GDK_Hangul_J_RieulPhieuf	0xee1
#define GDK_Hangul_J_RieulHieuh	0xee2
#define GDK_Hangul_J_Mieum	0xee3
#define GDK_Hangul_J_Pieub	0xee4
#define GDK_Hangul_J_PieubSios	0xee5
#define GDK_Hangul_J_Sios	0xee6
#define GDK_Hangul_J_SsangSios	0xee7
#define GDK_Hangul_J_Ieung	0xee8
#define GDK_Hangul_J_Jieuj	0xee9
#define GDK_Hangul_J_Cieuc	0xeea
#define GDK_Hangul_J_Khieuq	0xeeb
#define GDK_Hangul_J_Tieut	0xeec
#define GDK_Hangul_J_Phieuf	0xeed
#define GDK_Hangul_J_Hieuh	0xeee
#define GDK_Hangul_RieulYeorinHieuh	0xeef
#define GDK_Hangul_SunkyeongeumMieum	0xef0
#define GDK_Hangul_SunkyeongeumPieub	0xef1
#define GDK_Hangul_PanSios	0xef2
#define GDK_Hangul_KkogjiDalrinIeung	0xef3
#define GDK_Hangul_SunkyeongeumPhieuf	0xef4
#define GDK_Hangul_YeorinHieuh	0xef5
#define GDK_Hangul_AraeA	0xef6
#define GDK_Hangul_AraeAE	0xef7
#define GDK_Hangul_J_PanSios	0xef8
#define GDK_Hangul_J_KkogjiDalrinIeung	0xef9
#define GDK_Hangul_J_YeorinHieuh	0xefa
#define GDK_Korean_Won	0xeff
#define GDK_3270_Duplicate	0xFD01
#define GDK_3270_FieldMark	0xFD02
#define GDK_3270_Right2	0xFD03
#define GDK_3270_Left2	0xFD04
#define GDK_3270_BackTab	0xFD05
#define GDK_3270_EraseEOF	0xFD06
#define GDK_3270_EraseInput	0xFD07
#define GDK_3270_Reset	0xFD08
#define GDK_3270_Quit	0xFD09
#define GDK_3270_PA1	0xFD0A
#define GDK_3270_PA2	0xFD0B
#define GDK_3270_PA3	0xFD0C
#define GDK_3270_Test	0xFD0D
#define GDK_3270_Attn	0xFD0E
#define GDK_3270_CursorBlink	0xFD0F
#define GDK_3270_AltCursor	0xFD10
#define GDK_3270_KeyClick	0xFD11
#define GDK_3270_Jump	0xFD12
#define GDK_3270_Ident	0xFD13
#define GDK_3270_Rule	0xFD14
#define GDK_3270_Copy	0xFD15
#define GDK_3270_Play	0xFD16
#define GDK_3270_Setup	0xFD17
#define GDK_3270_Record	0xFD18
#define GDK_3270_ChangeScreen	0xFD19
#define GDK_3270_DeleteWord	0xFD1A
#define GDK_3270_ExSelect	0xFD1B
#define GDK_3270_CursorSelect	0xFD1C
#define GDK_3270_PrintScreen	0xFD1D
#define GDK_3270_Enter	0xFD1E
#define GDK_ISO_Lock	0xFE01
#define GDK_ISO_Level2_Latch	0xFE02
#define GDK_ISO_Level3_Shift	0xFE03
#define GDK_ISO_Level3_Latch	0xFE04
#define GDK_ISO_Level3_Lock	0xFE05
#define GDK_ISO_Group_Latch	0xFE06
#define GDK_ISO_Group_Lock	0xFE07
#define GDK_ISO_Next_Group	0xFE08
#define GDK_ISO_Next_Group_Lock	0xFE09
#define GDK_ISO_Prev_Group	0xFE0A
#define GDK_ISO_Prev_Group_Lock	0xFE0B
#define GDK_ISO_First_Group	0xFE0C
#define GDK_ISO_First_Group_Lock	0xFE0D
#define GDK_ISO_Last_Group	0xFE0E
#define GDK_ISO_Last_Group_Lock	0xFE0F
#define GDK_ISO_Left_Tab	0xFE20
#define GDK_ISO_Move_Line_Up	0xFE21
#define GDK_ISO_Move_Line_Down	0xFE22
#define GDK_ISO_Partial_Line_Up	0xFE23
#define GDK_ISO_Partial_Line_Down	0xFE24
#define GDK_ISO_Partial_Space_Left	0xFE25
#define GDK_ISO_Partial_Space_Right	0xFE26
#define GDK_ISO_Set_Margin_Left	0xFE27
#define GDK_ISO_Set_Margin_Right	0xFE28
#define GDK_ISO_Release_Margin_Left	0xFE29
#define GDK_ISO_Release_Margin_Right	0xFE2A
#define GDK_ISO_Release_Both_Margins	0xFE2B
#define GDK_ISO_Fast_Cursor_Left	0xFE2C
#define GDK_ISO_Fast_Cursor_Right	0xFE2D
#define GDK_ISO_Fast_Cursor_Up	0xFE2E
#define GDK_ISO_Fast_Cursor_Down	0xFE2F
#define GDK_ISO_Continuous_Underline	0xFE30
#define GDK_ISO_Discontinuous_Underline	0xFE31
#define GDK_ISO_Emphasize	0xFE32
#define GDK_ISO_Center_Object	0xFE33
#define GDK_ISO_Enter	0xFE34
#define GDK_dead_grave	0xFE50
#define GDK_dead_acute	0xFE51
#define GDK_dead_circumflex	0xFE52
#define GDK_dead_tilde	0xFE53
#define GDK_dead_macron	0xFE54
#define GDK_dead_breve	0xFE55
#define GDK_dead_abovedot	0xFE56
#define GDK_dead_diaeresis	0xFE57
#define GDK_dead_abovering	0xFE58
#define GDK_dead_doubleacute	0xFE59
#define GDK_dead_caron	0xFE5A
#define GDK_dead_cedilla	0xFE5B
#define GDK_dead_ogonek	0xFE5C
#define GDK_dead_iota	0xFE5D
#define GDK_dead_voiced_sound	0xFE5E
#define GDK_dead_semivoiced_sound	0xFE5F
#define GDK_dead_belowdot	0xFE60
#define GDK_dead_hook	0xFE61
#define GDK_dead_horn	0xFE62
#define GDK_AccessX_Enable	0xFE70
#define GDK_AccessX_Feedback_Enable	0xFE71
#define GDK_RepeatKeys_Enable	0xFE72
#define GDK_SlowKeys_Enable	0xFE73
#define GDK_BounceKeys_Enable	0xFE74
#define GDK_StickyKeys_Enable	0xFE75
#define GDK_MouseKeys_Enable	0xFE76
#define GDK_MouseKeys_Accel_Enable	0xFE77
#define GDK_Overlay1_Enable	0xFE78
#define GDK_Overlay2_Enable	0xFE79
#define GDK_AudibleBell_Enable	0xFE7A
#define GDK_First_Virtual_Screen	0xFED0
#define GDK_Prev_Virtual_Screen	0xFED1
#define GDK_Next_Virtual_Screen	0xFED2
#define GDK_Last_Virtual_Screen	0xFED4
#define GDK_Terminate_Server	0xFED5
#define GDK_Pointer_Left	0xFEE0
#define GDK_Pointer_Right	0xFEE1
#define GDK_Pointer_Up	0xFEE2
#define GDK_Pointer_Down	0xFEE3
#define GDK_Pointer_UpLeft	0xFEE4
#define GDK_Pointer_UpRight	0xFEE5
#define GDK_Pointer_DownLeft	0xFEE6
#define GDK_Pointer_DownRight	0xFEE7
#define GDK_Pointer_Button_Dflt	0xFEE8
#define GDK_Pointer_Button1	0xFEE9
#define GDK_Pointer_Button2	0xFEEA
#define GDK_Pointer_Button3	0xFEEB
#define GDK_Pointer_Button4	0xFEEC
#define GDK_Pointer_Button5	0xFEED
#define GDK_Pointer_DblClick_Dflt	0xFEEE
#define GDK_Pointer_DblClick1	0xFEEF
#define GDK_Pointer_DblClick2	0xFEF0
#define GDK_Pointer_DblClick3	0xFEF1
#define GDK_Pointer_DblClick4	0xFEF2
#define GDK_Pointer_DblClick5	0xFEF3
#define GDK_Pointer_Drag_Dflt	0xFEF4
#define GDK_Pointer_Drag1	0xFEF5
#define GDK_Pointer_Drag2	0xFEF6
#define GDK_Pointer_Drag3	0xFEF7
#define GDK_Pointer_Drag4	0xFEF8
#define GDK_Pointer_EnableKeys	0xFEF9
#define GDK_Pointer_Accelerate	0xFEFA
#define GDK_Pointer_DfltBtnNext	0xFEFB
#define GDK_Pointer_DfltBtnPrev	0xFEFC
#define GDK_Pointer_Drag5	0xFEFD
#define GDK_BackSpace	0xFF08
#define GDK_Tab	0xFF09
#define GDK_Linefeed	0xFF0A
#define GDK_Clear	0xFF0B
#define GDK_Return	0xFF0D
#define GDK_Pause	0xFF13
#define GDK_Scroll_Lock	0xFF14
#define GDK_Sys_Req	0xFF15
#define GDK_Escape	0xFF1B
#define GDK_Multi_key	0xFF20
#define GDK_Kanji	0xFF21
#define GDK_Muhenkan	0xFF22
#define GDK_Henkan	0xFF23
#define GDK_Henkan_Mode	0xFF23
#define GDK_Romaji	0xFF24
#define GDK_Hiragana	0xFF25
#define GDK_Katakana	0xFF26
#define GDK_Hiragana_Katakana	0xFF27
#define GDK_Zenkaku	0xFF28
#define GDK_Hankaku	0xFF29
#define GDK_Zenkaku_Hankaku	0xFF2A
#define GDK_Touroku	0xFF2B
#define GDK_Massyo	0xFF2C
#define GDK_Kana_Lock	0xFF2D
#define GDK_Kana_Shift	0xFF2E
#define GDK_Eisu_Shift	0xFF2F
#define GDK_Eisu_toggle	0xFF30
#define GDK_Hangul	0xff31
#define GDK_Hangul_Start	0xff32
#define GDK_Hangul_End	0xff33
#define GDK_Hangul_Hanja	0xff34
#define GDK_Hangul_Jamo	0xff35
#define GDK_Hangul_Romaja	0xff36
#define GDK_Codeinput	0xFF37
#define GDK_Hangul_Codeinput	0xff37
#define GDK_Kanji_Bangou	0xFF37
#define GDK_Hangul_Jeonja	0xff38
#define GDK_Hangul_Banja	0xff39
#define GDK_Hangul_PreHanja	0xff3a
#define GDK_Hangul_PostHanja	0xff3b
#define GDK_Hangul_SingleCandidate	0xff3c
#define GDK_SingleCandidate	0xFF3C
#define GDK_Hangul_MultipleCandidate	0xff3d
#define GDK_MultipleCandidate	0xFF3D
#define GDK_Zen_Koho	0xFF3D
#define GDK_Hangul_PreviousCandidate	0xff3e
#define GDK_Mae_Koho	0xFF3E
#define GDK_PreviousCandidate	0xFF3E
#define GDK_Hangul_Special	0xff3f
#define GDK_Home	0xFF50
#define GDK_Left	0xFF51
#define GDK_Up	0xFF52
#define GDK_Right	0xFF53
#define GDK_Down	0xFF54
#define GDK_Page_Up	0xFF55
#define GDK_Prior	0xFF55
#define GDK_Next	0xFF56
#define GDK_Page_Down	0xFF56
#define GDK_End	0xFF57
#define GDK_Begin	0xFF58
#define GDK_Select	0xFF60
#define GDK_Print	0xFF61
#define GDK_Execute	0xFF62
#define GDK_Insert	0xFF63
#define GDK_Undo	0xFF65
#define GDK_Redo	0xFF66
#define GDK_Menu	0xFF67
#define GDK_Find	0xFF68
#define GDK_Cancel	0xFF69
#define GDK_Help	0xFF6A
#define GDK_Break	0xFF6B
#define GDK_Arabic_switch	0xFF7E
#define GDK_Greek_switch	0xFF7E
#define GDK_Hangul_switch	0xFF7E
#define GDK_Hebrew_switch	0xFF7E
#define GDK_ISO_Group_Shift	0xFF7E
#define GDK_Mode_switch	0xFF7E
#define GDK_kana_switch	0xFF7E
#define GDK_script_switch	0xFF7E
#define GDK_Num_Lock	0xFF7F
#define GDK_KP_Space	0xFF80
#define GDK_KP_Tab	0xFF89
#define GDK_KP_Enter	0xFF8D
#define GDK_KP_F1	0xFF91
#define GDK_KP_F2	0xFF92
#define GDK_KP_F3	0xFF93
#define GDK_KP_F4	0xFF94
#define GDK_KP_Home	0xFF95
#define GDK_KP_Left	0xFF96
#define GDK_KP_Up	0xFF97
#define GDK_KP_Right	0xFF98
#define GDK_KP_Down	0xFF99
#define GDK_KP_Page_Up	0xFF9A
#define GDK_KP_Prior	0xFF9A
#define GDK_KP_Next	0xFF9B
#define GDK_KP_Page_Down	0xFF9B
#define GDK_KP_End	0xFF9C
#define GDK_KP_Begin	0xFF9D
#define GDK_KP_Insert	0xFF9E
#define GDK_KP_Delete	0xFF9F
#define GDK_KP_Multiply	0xFFAA
#define GDK_KP_Add	0xFFAB
#define GDK_KP_Separator	0xFFAC
#define GDK_KP_Subtract	0xFFAD
#define GDK_KP_Decimal	0xFFAE
#define GDK_KP_Divide	0xFFAF
#define GDK_KP_0	0xFFB0
#define GDK_KP_1	0xFFB1
#define GDK_KP_2	0xFFB2
#define GDK_KP_3	0xFFB3
#define GDK_KP_4	0xFFB4
#define GDK_KP_5	0xFFB5
#define GDK_KP_6	0xFFB6
#define GDK_KP_7	0xFFB7
#define GDK_KP_8	0xFFB8
#define GDK_KP_9	0xFFB9
#define GDK_KP_Equal	0xFFBD
#define GDK_F1	0xFFBE
#define GDK_F2	0xFFBF
#define GDK_F3	0xFFC0
#define GDK_F4	0xFFC1
#define GDK_F5	0xFFC2
#define GDK_F6	0xFFC3
#define GDK_F7	0xFFC4
#define GDK_F8	0xFFC5
#define GDK_F9	0xFFC6
#define GDK_F10	0xFFC7
#define GDK_F11	0xFFC8
#define GDK_L1	0xFFC8
#define GDK_F12	0xFFC9
#define GDK_L2	0xFFC9
#define GDK_F13	0xFFCA
#define GDK_L3	0xFFCA
#define GDK_F14	0xFFCB
#define GDK_L4	0xFFCB
#define GDK_F15	0xFFCC
#define GDK_L5	0xFFCC
#define GDK_F16	0xFFCD
#define GDK_L6	0xFFCD
#define GDK_F17	0xFFCE
#define GDK_L7	0xFFCE
#define GDK_F18	0xFFCF
#define GDK_L8	0xFFCF
#define GDK_F19	0xFFD0
#define GDK_L9	0xFFD0
#define GDK_F20	0xFFD1
#define GDK_L10	0xFFD1
#define GDK_F21	0xFFD2
#define GDK_R1	0xFFD2
#define GDK_F22	0xFFD3
#define GDK_R2	0xFFD3
#define GDK_F23	0xFFD4
#define GDK_R3	0xFFD4
#define GDK_F24	0xFFD5
#define GDK_R4	0xFFD5
#define GDK_F25	0xFFD6
#define GDK_R5	0xFFD6
#define GDK_F26	0xFFD7
#define GDK_R6	0xFFD7
#define GDK_F27	0xFFD8
#define GDK_R7	0xFFD8
#define GDK_F28	0xFFD9
#define GDK_R8	0xFFD9
#define GDK_F29	0xFFDA
#define GDK_R9	0xFFDA
#define GDK_F30	0xFFDB
#define GDK_R10	0xFFDB
#define GDK_F31	0xFFDC
#define GDK_R11	0xFFDC
#define GDK_F32	0xFFDD
#define GDK_R12	0xFFDD
#define GDK_F33	0xFFDE
#define GDK_R13	0xFFDE
#define GDK_F34	0xFFDF
#define GDK_R14	0xFFDF
#define GDK_F35	0xFFE0
#define GDK_R15	0xFFE0
#define GDK_Shift_L	0xFFE1
#define GDK_Shift_R	0xFFE2
#define GDK_Control_L	0xFFE3
#define GDK_Control_R	0xFFE4
#define GDK_Caps_Lock	0xFFE5
#define GDK_Shift_Lock	0xFFE6
#define GDK_Meta_L	0xFFE7
#define GDK_Meta_R	0xFFE8
#define GDK_Alt_L	0xFFE9
#define GDK_Alt_R	0xFFEA
#define GDK_Super_L	0xFFEB
#define GDK_Super_R	0xFFEC
#define GDK_Hyper_L	0xFFED
#define GDK_Hyper_R	0xFFEE
#define GDK_Delete	0xFFFF
#define GDK_VoidSymbol	0xFFFFFF
#define GDK_Greek_IOTAdiaeresis	GDK_Greek_IOTAdieresis
</SCREEN>
</SECT2>
<SECT2>
<TITLE>gtk-2.0/gdk/gdkx.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define GDK_WINDOW_DESTROYED(d)	 \
	(((GdkWindowObject*)(GDK_WINDOW (d)))->destroyed)
#define GDK_WINDOW_TYPE(d)	 \
	(((GdkWindowObject*)(GDK_WINDOW (d)))->window_type)
#define GDK_COLORMAP_XCOLORMAP(cmap)	 \
	(gdk_x11_colormap_get_xcolormap (cmap))
#define GDK_DISPLAY_XDISPLAY(display)	 \
	(gdk_x11_display_get_xdisplay (display))
#define GDK_SCREEN_XDISPLAY(screen)	 \
	(gdk_x11_display_get_xdisplay (gdk_screen_get_display (screen)))
#define GDK_PIXMAP_XDISPLAY(win)	 \
	(gdk_x11_drawable_get_xdisplay (((GdkPixmapObject *)win)->impl))
#define GDK_WINDOW_XDISPLAY(win)	 \
	(gdk_x11_drawable_get_xdisplay (((GdkWindowObject *)win)->impl))
#define GDK_SCREEN_XNUMBER(screen)	 \
	(gdk_x11_screen_get_screen_number (screen))
#define GDK_PARENT_RELATIVE_BG	((GdkPixmap *)1L)
#define GDK_NO_BG	((GdkPixmap *)2L)
#define GDK_COLORMAP_XDISPLAY(cmap)	(gdk_x11_colormap_get_xdisplay (cmap))
#define GDK_CURSOR_XCURSOR(cursor)	(gdk_x11_cursor_get_xcursor (cursor))
#define GDK_CURSOR_XDISPLAY(cursor)	(gdk_x11_cursor_get_xdisplay (cursor))
#define GDK_DRAWABLE_XDISPLAY(win)	(gdk_x11_drawable_get_xdisplay (win))
#define GDK_DRAWABLE_XID(win)	(gdk_x11_drawable_get_xid (win))
#define GDK_PIXMAP_XID(win)	(gdk_x11_drawable_get_xid (win))
#define GDK_WINDOW_XID(win)	(gdk_x11_drawable_get_xid (win))
#define GDK_WINDOW_XWINDOW(win)	(gdk_x11_drawable_get_xid (win))
#define GDK_GC_XDISPLAY(gc)	(gdk_x11_gc_get_xdisplay (gc))
#define GDK_GC_XGC(gc)	(gdk_x11_gc_get_xgc (gc))
#define GDK_ROOT_WINDOW()	(gdk_x11_get_default_root_xwindow ())
#define GDK_IMAGE_XDISPLAY(image)	(gdk_x11_image_get_xdisplay (image))
#define GDK_IMAGE_XIMAGE(image)	(gdk_x11_image_get_ximage (image))
#define GDK_SCREEN_XSCREEN(screen)	(gdk_x11_screen_get_xscreen (screen))
#define GDK_VISUAL_XVISUAL(visual)	(gdk_x11_visual_get_xvisual (visual))
#define GDK_DISPLAY()	gdk_display

extern Display *gdk_display;
extern gboolean gdk_net_wm_supports(GdkAtom property);
extern void gdk_synthesize_window_state(GdkWindow * window,
					GdkWindowState unset_flags,
					GdkWindowState set_flags);
extern void gdk_window_destroy_notify(GdkWindow * window);
extern Atom gdk_x11_atom_to_xatom(GdkAtom atom);
extern Atom gdk_x11_atom_to_xatom_for_display(GdkDisplay * display,
					      GdkAtom atom);
extern GdkColormap *gdk_x11_colormap_foreign_new(GdkVisual * visual,
						 Colormap xcolormap);
extern Colormap gdk_x11_colormap_get_xcolormap(GdkColormap * colormap);
extern Display *gdk_x11_colormap_get_xdisplay(GdkColormap * colormap);
extern Cursor gdk_x11_cursor_get_xcursor(GdkCursor * cursor);
extern Display *gdk_x11_cursor_get_xdisplay(GdkCursor * cursor);
extern guint32 gdk_x11_display_get_user_time(GdkDisplay * display);
extern Display *gdk_x11_display_get_xdisplay(GdkDisplay * display);
extern void gdk_x11_display_grab(GdkDisplay * display);
extern void gdk_x11_display_set_cursor_theme(GdkDisplay * display,
					     const gchar * theme,
					     const gint size);
extern void gdk_x11_display_ungrab(GdkDisplay * display);
extern Display *gdk_x11_drawable_get_xdisplay(GdkDrawable * drawable);
extern XID gdk_x11_drawable_get_xid(GdkDrawable * drawable);
extern Display *gdk_x11_gc_get_xdisplay(GdkGC * gc);
extern GC gdk_x11_gc_get_xgc(GdkGC * gc);
extern Window gdk_x11_get_default_root_xwindow(void);
extern gint gdk_x11_get_default_screen(void);
extern Display *gdk_x11_get_default_xdisplay(void);
extern guint32 gdk_x11_get_server_time(GdkWindow * window);
extern Atom gdk_x11_get_xatom_by_name(const gchar * atom_name);
extern Atom gdk_x11_get_xatom_by_name_for_display(GdkDisplay * display,
						  const gchar * atom_name);
extern const gchar *gdk_x11_get_xatom_name(Atom xatom);
extern const gchar *gdk_x11_get_xatom_name_for_display(GdkDisplay *
						       display,
						       Atom xatom);
extern void gdk_x11_grab_server(void);
extern Display *gdk_x11_image_get_xdisplay(GdkImage * image);
extern XImage *gdk_x11_image_get_ximage(GdkImage * image);
extern GdkDisplay *gdk_x11_lookup_xdisplay(Display * xdisplay);
extern void gdk_x11_register_standard_event_type(GdkDisplay * display,
						 gint event_base,
						 gint n_events);
extern int gdk_x11_screen_get_screen_number(GdkScreen * screen);
extern const char *gdk_x11_screen_get_window_manager_name(GdkScreen *
							  screen);
extern Screen *gdk_x11_screen_get_xscreen(GdkScreen * screen);
extern GdkVisual *gdk_x11_screen_lookup_visual(GdkScreen * screen,
					       VisualID xvisualid);
extern gboolean gdk_x11_screen_supports_net_wm_hint(GdkScreen * screen,
						    GdkAtom property);
extern void gdk_x11_ungrab_server(void);
extern Visual *gdk_x11_visual_get_xvisual(GdkVisual * visual);
extern void gdk_x11_window_move_to_current_desktop(GdkWindow * window);
extern void gdk_x11_window_set_user_time(GdkWindow * window,
					 guint32 timestamp);
extern GdkAtom gdk_x11_xatom_to_atom(Atom xatom);
extern GdkAtom gdk_x11_xatom_to_atom_for_display(GdkDisplay * display,
						 Atom xatom);
extern gpointer gdk_xid_table_lookup(XID xid);
extern gpointer gdk_xid_table_lookup_for_display(GdkDisplay * display,
						 XID xid);
extern GdkVisual *gdkx_visual_get(VisualID xvisualid);
</SCREEN>
</SECT2>
</SECT1>
<!-- End of text generated from database -->

<!-- Start of generated text - do not edit! -->
<!-- generated from the LSB specification database by mklibspec -->
<SECT1 ID=libgtk-x11-2.0>
<TITLE>Interfaces for libgtk-x11-2.0</TITLE>
<PARA>
<XREF LINKEND="lib-libgtk-x11-2.0-def"> defines the library name and shared object name
for the libgtk-x11-2.0 library
</PARA>
<TABLE id="lib-libgtk-x11-2.0-def">
<TITLE>libgtk-x11-2.0 Definition</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Library:</ENTRY>
<ENTRY>libgtk-x11-2.0</ENTRY>
</ROW>
<ROW>
<ENTRY>SONAME:</ENTRY>
<ENTRY>libgtk-x11-2.0.so.0</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The behavior of the interfaces in this library is specified by the following specifications:<SIMPLELIST COLUMNS=1>
<MEMBER ID='REFSTD.libgtk.x11.2.0.1'>
[Gobject 2.32] <XREF LINKEND="std.Gobject">
</MEMBER>
<MEMBER ID='REFSTD.libgtk.x11.2.0.2'>
[Gtk 2.10] <XREF LINKEND="std.Gtk">
</MEMBER>
<MEMBER ID='REFSTD.libgtk.x11.2.0.3'>
[LSB] <XREF LINKEND="std.LSB">
</MEMBER>
</SIMPLELIST>
</PARA>
<!-- debug: database interface name GTK main Widgets library -->
<SECT2>
<!--libgroup-->
<TITLE>GTK main Widgets library</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Interfaces for GTK main Widgets library</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic functions
for GTK main Widgets library specified in <XREF linkend="tbl-libgtk-x11-2.0-gtk-m-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<TABLE id="tbl-libgtk-x11-2.0-gtk-m-ints">
<TITLE>libgtk-x11-2.0 - GTK main Widgets library Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>gtk_about_dialog_get_artists</primary></indexterm>gtk_about_dialog_get_artists <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_about_dialog_get_authors</primary></indexterm>gtk_about_dialog_get_authors <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_about_dialog_get_comments</primary></indexterm>gtk_about_dialog_get_comments <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_about_dialog_get_copyright</primary></indexterm>gtk_about_dialog_get_copyright <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_about_dialog_get_documenters</primary></indexterm>gtk_about_dialog_get_documenters <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_about_dialog_get_license</primary></indexterm>gtk_about_dialog_get_license <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_about_dialog_get_logo</primary></indexterm>gtk_about_dialog_get_logo <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_about_dialog_get_logo_icon_name</primary></indexterm>gtk_about_dialog_get_logo_icon_name <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_about_dialog_get_name</primary></indexterm>gtk_about_dialog_get_name <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_about_dialog_get_translator_credits</primary></indexterm>gtk_about_dialog_get_translator_credits <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_about_dialog_get_type</primary></indexterm>gtk_about_dialog_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_about_dialog_get_version</primary></indexterm>gtk_about_dialog_get_version <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_about_dialog_get_website</primary></indexterm>gtk_about_dialog_get_website <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_about_dialog_get_website_label</primary></indexterm>gtk_about_dialog_get_website_label <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_about_dialog_get_wrap_license</primary></indexterm>gtk_about_dialog_get_wrap_license <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_about_dialog_new</primary></indexterm>gtk_about_dialog_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_about_dialog_set_artists</primary></indexterm>gtk_about_dialog_set_artists <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_about_dialog_set_authors</primary></indexterm>gtk_about_dialog_set_authors <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_about_dialog_set_comments</primary></indexterm>gtk_about_dialog_set_comments <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_about_dialog_set_copyright</primary></indexterm>gtk_about_dialog_set_copyright <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_about_dialog_set_documenters</primary></indexterm>gtk_about_dialog_set_documenters <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_about_dialog_set_email_hook</primary></indexterm>gtk_about_dialog_set_email_hook <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_about_dialog_set_license</primary></indexterm>gtk_about_dialog_set_license <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_about_dialog_set_logo</primary></indexterm>gtk_about_dialog_set_logo <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_about_dialog_set_logo_icon_name</primary></indexterm>gtk_about_dialog_set_logo_icon_name <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_about_dialog_set_name</primary></indexterm>gtk_about_dialog_set_name <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_about_dialog_set_translator_credits</primary></indexterm>gtk_about_dialog_set_translator_credits <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_about_dialog_set_url_hook</primary></indexterm>gtk_about_dialog_set_url_hook <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_about_dialog_set_version</primary></indexterm>gtk_about_dialog_set_version <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_about_dialog_set_website</primary></indexterm>gtk_about_dialog_set_website <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_about_dialog_set_website_label</primary></indexterm>gtk_about_dialog_set_website_label <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_about_dialog_set_wrap_license</primary></indexterm>gtk_about_dialog_set_wrap_license <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_accel_flags_get_type</primary></indexterm>gtk_accel_flags_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_accel_group_activate</primary></indexterm>gtk_accel_group_activate <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_accel_group_connect</primary></indexterm>gtk_accel_group_connect <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_accel_group_connect_by_path</primary></indexterm>gtk_accel_group_connect_by_path <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_accel_group_disconnect</primary></indexterm>gtk_accel_group_disconnect <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_accel_group_disconnect_key</primary></indexterm>gtk_accel_group_disconnect_key <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_accel_group_find</primary></indexterm>gtk_accel_group_find <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_accel_group_from_accel_closure</primary></indexterm>gtk_accel_group_from_accel_closure <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_accel_group_get_type</primary></indexterm>gtk_accel_group_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_accel_group_lock</primary></indexterm>gtk_accel_group_lock <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_accel_group_new</primary></indexterm>gtk_accel_group_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_accel_group_query</primary></indexterm>gtk_accel_group_query <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_accel_group_unlock</primary></indexterm>gtk_accel_group_unlock <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_accel_groups_activate</primary></indexterm>gtk_accel_groups_activate <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_accel_groups_from_object</primary></indexterm>gtk_accel_groups_from_object <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_accel_label_get_accel_widget</primary></indexterm>gtk_accel_label_get_accel_widget <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_accel_label_get_accel_width</primary></indexterm>gtk_accel_label_get_accel_width <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_accel_label_get_type</primary></indexterm>gtk_accel_label_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_accel_label_new</primary></indexterm>gtk_accel_label_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_accel_label_refetch</primary></indexterm>gtk_accel_label_refetch <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_accel_label_set_accel_closure</primary></indexterm>gtk_accel_label_set_accel_closure <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_accel_label_set_accel_widget</primary></indexterm>gtk_accel_label_set_accel_widget <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_accel_map_add_entry</primary></indexterm>gtk_accel_map_add_entry <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_accel_map_add_filter</primary></indexterm>gtk_accel_map_add_filter <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_accel_map_change_entry</primary></indexterm>gtk_accel_map_change_entry <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_accel_map_foreach</primary></indexterm>gtk_accel_map_foreach <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_accel_map_foreach_unfiltered</primary></indexterm>gtk_accel_map_foreach_unfiltered <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_accel_map_get</primary></indexterm>gtk_accel_map_get <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_accel_map_get_type</primary></indexterm>gtk_accel_map_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_accel_map_load</primary></indexterm>gtk_accel_map_load <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_accel_map_load_fd</primary></indexterm>gtk_accel_map_load_fd <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_accel_map_load_scanner</primary></indexterm>gtk_accel_map_load_scanner <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_accel_map_lock_path</primary></indexterm>gtk_accel_map_lock_path <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_accel_map_lookup_entry</primary></indexterm>gtk_accel_map_lookup_entry <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_accel_map_save</primary></indexterm>gtk_accel_map_save <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_accel_map_save_fd</primary></indexterm>gtk_accel_map_save_fd <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_accel_map_unlock_path</primary></indexterm>gtk_accel_map_unlock_path <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_accelerator_get_default_mod_mask</primary></indexterm>gtk_accelerator_get_default_mod_mask <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_accelerator_get_label</primary></indexterm>gtk_accelerator_get_label <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_accelerator_name</primary></indexterm>gtk_accelerator_name <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_accelerator_parse</primary></indexterm>gtk_accelerator_parse <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_accelerator_set_default_mod_mask</primary></indexterm>gtk_accelerator_set_default_mod_mask <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_accelerator_valid</primary></indexterm>gtk_accelerator_valid <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_accessible_connect_widget_destroyed</primary></indexterm>gtk_accessible_connect_widget_destroyed <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_accessible_get_type</primary></indexterm>gtk_accessible_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_action_activate</primary></indexterm>gtk_action_activate <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_action_block_activate_from</primary></indexterm>gtk_action_block_activate_from <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_action_connect_accelerator</primary></indexterm>gtk_action_connect_accelerator <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_action_connect_proxy</primary></indexterm>gtk_action_connect_proxy <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_action_create_icon</primary></indexterm>gtk_action_create_icon <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_action_create_menu_item</primary></indexterm>gtk_action_create_menu_item <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_action_create_tool_item</primary></indexterm>gtk_action_create_tool_item <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_action_disconnect_accelerator</primary></indexterm>gtk_action_disconnect_accelerator <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_action_disconnect_proxy</primary></indexterm>gtk_action_disconnect_proxy <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_action_get_accel_closure</primary></indexterm>gtk_action_get_accel_closure <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_action_get_accel_path</primary></indexterm>gtk_action_get_accel_path <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_action_get_name</primary></indexterm>gtk_action_get_name <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_action_get_proxies</primary></indexterm>gtk_action_get_proxies <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_action_get_sensitive</primary></indexterm>gtk_action_get_sensitive <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_action_get_type</primary></indexterm>gtk_action_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_action_get_visible</primary></indexterm>gtk_action_get_visible <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_action_group_add_action</primary></indexterm>gtk_action_group_add_action <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_action_group_add_action_with_accel</primary></indexterm>gtk_action_group_add_action_with_accel <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_action_group_add_actions</primary></indexterm>gtk_action_group_add_actions <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_action_group_add_actions_full</primary></indexterm>gtk_action_group_add_actions_full <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_action_group_add_radio_actions</primary></indexterm>gtk_action_group_add_radio_actions <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_action_group_add_radio_actions_full</primary></indexterm>gtk_action_group_add_radio_actions_full <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_action_group_add_toggle_actions</primary></indexterm>gtk_action_group_add_toggle_actions <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_action_group_add_toggle_actions_full</primary></indexterm>gtk_action_group_add_toggle_actions_full <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_action_group_get_action</primary></indexterm>gtk_action_group_get_action <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_action_group_get_name</primary></indexterm>gtk_action_group_get_name <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_action_group_get_sensitive</primary></indexterm>gtk_action_group_get_sensitive <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_action_group_get_type</primary></indexterm>gtk_action_group_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_action_group_get_visible</primary></indexterm>gtk_action_group_get_visible <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_action_group_list_actions</primary></indexterm>gtk_action_group_list_actions <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_action_group_new</primary></indexterm>gtk_action_group_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_action_group_remove_action</primary></indexterm>gtk_action_group_remove_action <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_action_group_set_sensitive</primary></indexterm>gtk_action_group_set_sensitive <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_action_group_set_translate_func</primary></indexterm>gtk_action_group_set_translate_func <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_action_group_set_translation_domain</primary></indexterm>gtk_action_group_set_translation_domain <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_action_group_set_visible</primary></indexterm>gtk_action_group_set_visible <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_action_group_translate_string</primary></indexterm>gtk_action_group_translate_string <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_action_is_sensitive</primary></indexterm>gtk_action_is_sensitive <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_action_is_visible</primary></indexterm>gtk_action_is_visible <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_action_new</primary></indexterm>gtk_action_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_action_set_accel_group</primary></indexterm>gtk_action_set_accel_group <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_action_set_accel_path</primary></indexterm>gtk_action_set_accel_path <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_action_set_sensitive</primary></indexterm>gtk_action_set_sensitive <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_action_set_visible</primary></indexterm>gtk_action_set_visible <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_action_unblock_activate_from</primary></indexterm>gtk_action_unblock_activate_from <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_adjustment_changed</primary></indexterm>gtk_adjustment_changed <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_adjustment_clamp_page</primary></indexterm>gtk_adjustment_clamp_page <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_adjustment_get_type</primary></indexterm>gtk_adjustment_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_adjustment_get_value</primary></indexterm>gtk_adjustment_get_value <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_adjustment_new</primary></indexterm>gtk_adjustment_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_adjustment_set_value</primary></indexterm>gtk_adjustment_set_value <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_adjustment_value_changed</primary></indexterm>gtk_adjustment_value_changed <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_alignment_get_padding</primary></indexterm>gtk_alignment_get_padding <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_alignment_get_type</primary></indexterm>gtk_alignment_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_alignment_new</primary></indexterm>gtk_alignment_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_alignment_set</primary></indexterm>gtk_alignment_set <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_alignment_set_padding</primary></indexterm>gtk_alignment_set_padding <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_alternative_dialog_button_order</primary></indexterm>gtk_alternative_dialog_button_order <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_anchor_type_get_type</primary></indexterm>gtk_anchor_type_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_arg_flags_get_type</primary></indexterm>gtk_arg_flags_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_arrow_get_type</primary></indexterm>gtk_arrow_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_arrow_new</primary></indexterm>gtk_arrow_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_arrow_set</primary></indexterm>gtk_arrow_set <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_arrow_type_get_type</primary></indexterm>gtk_arrow_type_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_aspect_frame_get_type</primary></indexterm>gtk_aspect_frame_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_aspect_frame_new</primary></indexterm>gtk_aspect_frame_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_aspect_frame_set</primary></indexterm>gtk_aspect_frame_set <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_assistant_add_action_widget</primary></indexterm>gtk_assistant_add_action_widget <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_assistant_append_page</primary></indexterm>gtk_assistant_append_page <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_assistant_get_current_page</primary></indexterm>gtk_assistant_get_current_page <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_assistant_get_n_pages</primary></indexterm>gtk_assistant_get_n_pages <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_assistant_get_nth_page</primary></indexterm>gtk_assistant_get_nth_page <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_assistant_get_page_complete</primary></indexterm>gtk_assistant_get_page_complete <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_assistant_get_page_header_image</primary></indexterm>gtk_assistant_get_page_header_image <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_assistant_get_page_side_image</primary></indexterm>gtk_assistant_get_page_side_image <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_assistant_get_page_title</primary></indexterm>gtk_assistant_get_page_title <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_assistant_get_page_type</primary></indexterm>gtk_assistant_get_page_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_assistant_get_type</primary></indexterm>gtk_assistant_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_assistant_insert_page</primary></indexterm>gtk_assistant_insert_page <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_assistant_new</primary></indexterm>gtk_assistant_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_assistant_page_type_get_type</primary></indexterm>gtk_assistant_page_type_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_assistant_prepend_page</primary></indexterm>gtk_assistant_prepend_page <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_assistant_remove_action_widget</primary></indexterm>gtk_assistant_remove_action_widget <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_assistant_set_current_page</primary></indexterm>gtk_assistant_set_current_page <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_assistant_set_forward_page_func</primary></indexterm>gtk_assistant_set_forward_page_func <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_assistant_set_page_complete</primary></indexterm>gtk_assistant_set_page_complete <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_assistant_set_page_header_image</primary></indexterm>gtk_assistant_set_page_header_image <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_assistant_set_page_side_image</primary></indexterm>gtk_assistant_set_page_side_image <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_assistant_set_page_title</primary></indexterm>gtk_assistant_set_page_title <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_assistant_set_page_type</primary></indexterm>gtk_assistant_set_page_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_assistant_update_buttons_state</primary></indexterm>gtk_assistant_update_buttons_state <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_attach_options_get_type</primary></indexterm>gtk_attach_options_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_bin_get_child</primary></indexterm>gtk_bin_get_child <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_bin_get_type</primary></indexterm>gtk_bin_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_binding_entry_add_signal</primary></indexterm>gtk_binding_entry_add_signal <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_binding_entry_add_signall</primary></indexterm>gtk_binding_entry_add_signall <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_binding_entry_clear</primary></indexterm>gtk_binding_entry_clear <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_binding_entry_remove</primary></indexterm>gtk_binding_entry_remove <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_binding_parse_binding</primary></indexterm>gtk_binding_parse_binding <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_binding_set_activate</primary></indexterm>gtk_binding_set_activate <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_binding_set_add_path</primary></indexterm>gtk_binding_set_add_path <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_binding_set_by_class</primary></indexterm>gtk_binding_set_by_class <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_binding_set_find</primary></indexterm>gtk_binding_set_find <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_binding_set_new</primary></indexterm>gtk_binding_set_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_bindings_activate</primary></indexterm>gtk_bindings_activate <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_bindings_activate_event</primary></indexterm>gtk_bindings_activate_event <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_border_copy</primary></indexterm>gtk_border_copy <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_border_free</primary></indexterm>gtk_border_free <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_border_get_type</primary></indexterm>gtk_border_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_box_get_homogeneous</primary></indexterm>gtk_box_get_homogeneous <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_box_get_spacing</primary></indexterm>gtk_box_get_spacing <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_box_get_type</primary></indexterm>gtk_box_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_box_pack_end</primary></indexterm>gtk_box_pack_end <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_box_pack_end_defaults</primary></indexterm>gtk_box_pack_end_defaults <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_box_pack_start</primary></indexterm>gtk_box_pack_start <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_box_pack_start_defaults</primary></indexterm>gtk_box_pack_start_defaults <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_box_query_child_packing</primary></indexterm>gtk_box_query_child_packing <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_box_reorder_child</primary></indexterm>gtk_box_reorder_child <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_box_set_child_packing</primary></indexterm>gtk_box_set_child_packing <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_box_set_homogeneous</primary></indexterm>gtk_box_set_homogeneous <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_box_set_spacing</primary></indexterm>gtk_box_set_spacing <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_button_box_get_child_secondary</primary></indexterm>gtk_button_box_get_child_secondary <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_button_box_get_layout</primary></indexterm>gtk_button_box_get_layout <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_button_box_get_type</primary></indexterm>gtk_button_box_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_button_box_set_child_secondary</primary></indexterm>gtk_button_box_set_child_secondary <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_button_box_set_layout</primary></indexterm>gtk_button_box_set_layout <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_button_box_style_get_type</primary></indexterm>gtk_button_box_style_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_button_clicked</primary></indexterm>gtk_button_clicked <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_button_enter</primary></indexterm>gtk_button_enter <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_button_get_alignment</primary></indexterm>gtk_button_get_alignment <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_button_get_focus_on_click</primary></indexterm>gtk_button_get_focus_on_click <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_button_get_image</primary></indexterm>gtk_button_get_image <LINK LINKEND="REFSTD.libgtk.x11.2.0.3">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_button_get_image_position</primary></indexterm>gtk_button_get_image_position <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_button_get_label</primary></indexterm>gtk_button_get_label <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_button_get_relief</primary></indexterm>gtk_button_get_relief <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_button_get_type</primary></indexterm>gtk_button_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_button_get_use_stock</primary></indexterm>gtk_button_get_use_stock <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_button_get_use_underline</primary></indexterm>gtk_button_get_use_underline <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_button_leave</primary></indexterm>gtk_button_leave <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_button_new</primary></indexterm>gtk_button_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_button_new_from_stock</primary></indexterm>gtk_button_new_from_stock <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_button_new_with_label</primary></indexterm>gtk_button_new_with_label <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_button_new_with_mnemonic</primary></indexterm>gtk_button_new_with_mnemonic <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_button_pressed</primary></indexterm>gtk_button_pressed <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_button_released</primary></indexterm>gtk_button_released <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_button_set_alignment</primary></indexterm>gtk_button_set_alignment <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_button_set_focus_on_click</primary></indexterm>gtk_button_set_focus_on_click <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_button_set_image</primary></indexterm>gtk_button_set_image <LINK LINKEND="REFSTD.libgtk.x11.2.0.3">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_button_set_image_position</primary></indexterm>gtk_button_set_image_position <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_button_set_label</primary></indexterm>gtk_button_set_label <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_button_set_relief</primary></indexterm>gtk_button_set_relief <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_button_set_use_stock</primary></indexterm>gtk_button_set_use_stock <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_button_set_use_underline</primary></indexterm>gtk_button_set_use_underline <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_buttons_type_get_type</primary></indexterm>gtk_buttons_type_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_calendar_clear_marks</primary></indexterm>gtk_calendar_clear_marks <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_calendar_display_options_get_type</primary></indexterm>gtk_calendar_display_options_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_calendar_get_date</primary></indexterm>gtk_calendar_get_date <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_calendar_get_display_options</primary></indexterm>gtk_calendar_get_display_options <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_calendar_get_type</primary></indexterm>gtk_calendar_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_calendar_mark_day</primary></indexterm>gtk_calendar_mark_day <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_calendar_new</primary></indexterm>gtk_calendar_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_calendar_select_day</primary></indexterm>gtk_calendar_select_day <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_calendar_select_month</primary></indexterm>gtk_calendar_select_month <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_calendar_set_display_options</primary></indexterm>gtk_calendar_set_display_options <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_calendar_unmark_day</primary></indexterm>gtk_calendar_unmark_day <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_cell_editable_editing_done</primary></indexterm>gtk_cell_editable_editing_done <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_cell_editable_get_type</primary></indexterm>gtk_cell_editable_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_cell_editable_remove_widget</primary></indexterm>gtk_cell_editable_remove_widget <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_cell_editable_start_editing</primary></indexterm>gtk_cell_editable_start_editing <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_cell_layout_add_attribute</primary></indexterm>gtk_cell_layout_add_attribute <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_cell_layout_clear</primary></indexterm>gtk_cell_layout_clear <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_cell_layout_clear_attributes</primary></indexterm>gtk_cell_layout_clear_attributes <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_cell_layout_get_type</primary></indexterm>gtk_cell_layout_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_cell_layout_pack_end</primary></indexterm>gtk_cell_layout_pack_end <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_cell_layout_pack_start</primary></indexterm>gtk_cell_layout_pack_start <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_cell_layout_reorder</primary></indexterm>gtk_cell_layout_reorder <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_cell_layout_set_attributes</primary></indexterm>gtk_cell_layout_set_attributes <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_cell_layout_set_cell_data_func</primary></indexterm>gtk_cell_layout_set_cell_data_func <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_cell_renderer_accel_get_type</primary></indexterm>gtk_cell_renderer_accel_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_cell_renderer_accel_mode_get_type</primary></indexterm>gtk_cell_renderer_accel_mode_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_cell_renderer_accel_new</primary></indexterm>gtk_cell_renderer_accel_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_cell_renderer_activate</primary></indexterm>gtk_cell_renderer_activate <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_cell_renderer_combo_get_type</primary></indexterm>gtk_cell_renderer_combo_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_cell_renderer_combo_new</primary></indexterm>gtk_cell_renderer_combo_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_cell_renderer_get_fixed_size</primary></indexterm>gtk_cell_renderer_get_fixed_size <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_cell_renderer_get_size</primary></indexterm>gtk_cell_renderer_get_size <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_cell_renderer_get_type</primary></indexterm>gtk_cell_renderer_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_cell_renderer_mode_get_type</primary></indexterm>gtk_cell_renderer_mode_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_cell_renderer_pixbuf_get_type</primary></indexterm>gtk_cell_renderer_pixbuf_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_cell_renderer_pixbuf_new</primary></indexterm>gtk_cell_renderer_pixbuf_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_cell_renderer_progress_get_type</primary></indexterm>gtk_cell_renderer_progress_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_cell_renderer_progress_new</primary></indexterm>gtk_cell_renderer_progress_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_cell_renderer_render</primary></indexterm>gtk_cell_renderer_render <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_cell_renderer_set_fixed_size</primary></indexterm>gtk_cell_renderer_set_fixed_size <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_cell_renderer_spin_get_type</primary></indexterm>gtk_cell_renderer_spin_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_cell_renderer_spin_new</primary></indexterm>gtk_cell_renderer_spin_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_cell_renderer_start_editing</primary></indexterm>gtk_cell_renderer_start_editing <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_cell_renderer_state_get_type</primary></indexterm>gtk_cell_renderer_state_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_cell_renderer_stop_editing</primary></indexterm>gtk_cell_renderer_stop_editing <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_cell_renderer_text_get_type</primary></indexterm>gtk_cell_renderer_text_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_cell_renderer_text_new</primary></indexterm>gtk_cell_renderer_text_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_cell_renderer_text_set_fixed_height_from_font</primary></indexterm>gtk_cell_renderer_text_set_fixed_height_from_font <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_cell_renderer_toggle_get_active</primary></indexterm>gtk_cell_renderer_toggle_get_active <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_cell_renderer_toggle_get_radio</primary></indexterm>gtk_cell_renderer_toggle_get_radio <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_cell_renderer_toggle_get_type</primary></indexterm>gtk_cell_renderer_toggle_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_cell_renderer_toggle_new</primary></indexterm>gtk_cell_renderer_toggle_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_cell_renderer_toggle_set_active</primary></indexterm>gtk_cell_renderer_toggle_set_active <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_cell_renderer_toggle_set_radio</primary></indexterm>gtk_cell_renderer_toggle_set_radio <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_cell_view_get_cell_renderers</primary></indexterm>gtk_cell_view_get_cell_renderers <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_cell_view_get_displayed_row</primary></indexterm>gtk_cell_view_get_displayed_row <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_cell_view_get_size_of_row</primary></indexterm>gtk_cell_view_get_size_of_row <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_cell_view_get_type</primary></indexterm>gtk_cell_view_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_cell_view_new</primary></indexterm>gtk_cell_view_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_cell_view_new_with_markup</primary></indexterm>gtk_cell_view_new_with_markup <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_cell_view_new_with_pixbuf</primary></indexterm>gtk_cell_view_new_with_pixbuf <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_cell_view_new_with_text</primary></indexterm>gtk_cell_view_new_with_text <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_cell_view_set_background_color</primary></indexterm>gtk_cell_view_set_background_color <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_cell_view_set_displayed_row</primary></indexterm>gtk_cell_view_set_displayed_row <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_cell_view_set_model</primary></indexterm>gtk_cell_view_set_model <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_check_button_get_type</primary></indexterm>gtk_check_button_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_check_button_new</primary></indexterm>gtk_check_button_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_check_button_new_with_label</primary></indexterm>gtk_check_button_new_with_label <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_check_button_new_with_mnemonic</primary></indexterm>gtk_check_button_new_with_mnemonic <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_check_menu_item_get_active</primary></indexterm>gtk_check_menu_item_get_active <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_check_menu_item_get_draw_as_radio</primary></indexterm>gtk_check_menu_item_get_draw_as_radio <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_check_menu_item_get_inconsistent</primary></indexterm>gtk_check_menu_item_get_inconsistent <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_check_menu_item_get_type</primary></indexterm>gtk_check_menu_item_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_check_menu_item_new</primary></indexterm>gtk_check_menu_item_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_check_menu_item_new_with_label</primary></indexterm>gtk_check_menu_item_new_with_label <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_check_menu_item_new_with_mnemonic</primary></indexterm>gtk_check_menu_item_new_with_mnemonic <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_check_menu_item_set_active</primary></indexterm>gtk_check_menu_item_set_active <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_check_menu_item_set_draw_as_radio</primary></indexterm>gtk_check_menu_item_set_draw_as_radio <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_check_menu_item_set_inconsistent</primary></indexterm>gtk_check_menu_item_set_inconsistent <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_check_menu_item_toggled</primary></indexterm>gtk_check_menu_item_toggled <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_check_version</primary></indexterm>gtk_check_version <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_clipboard_clear</primary></indexterm>gtk_clipboard_clear <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_clipboard_get</primary></indexterm>gtk_clipboard_get <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_clipboard_get_display</primary></indexterm>gtk_clipboard_get_display <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_clipboard_get_for_display</primary></indexterm>gtk_clipboard_get_for_display <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_clipboard_get_owner</primary></indexterm>gtk_clipboard_get_owner <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_clipboard_get_type</primary></indexterm>gtk_clipboard_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_clipboard_request_contents</primary></indexterm>gtk_clipboard_request_contents <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_clipboard_request_image</primary></indexterm>gtk_clipboard_request_image <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_clipboard_request_rich_text</primary></indexterm>gtk_clipboard_request_rich_text <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_clipboard_request_targets</primary></indexterm>gtk_clipboard_request_targets <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_clipboard_request_text</primary></indexterm>gtk_clipboard_request_text <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_clipboard_set_can_store</primary></indexterm>gtk_clipboard_set_can_store <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_clipboard_set_image</primary></indexterm>gtk_clipboard_set_image <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_clipboard_set_text</primary></indexterm>gtk_clipboard_set_text <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_clipboard_set_with_data</primary></indexterm>gtk_clipboard_set_with_data <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_clipboard_set_with_owner</primary></indexterm>gtk_clipboard_set_with_owner <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_clipboard_store</primary></indexterm>gtk_clipboard_store <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_clipboard_wait_for_contents</primary></indexterm>gtk_clipboard_wait_for_contents <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_clipboard_wait_for_image</primary></indexterm>gtk_clipboard_wait_for_image <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_clipboard_wait_for_rich_text</primary></indexterm>gtk_clipboard_wait_for_rich_text <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_clipboard_wait_for_targets</primary></indexterm>gtk_clipboard_wait_for_targets <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_clipboard_wait_for_text</primary></indexterm>gtk_clipboard_wait_for_text <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_clipboard_wait_is_image_available</primary></indexterm>gtk_clipboard_wait_is_image_available <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_clipboard_wait_is_rich_text_available</primary></indexterm>gtk_clipboard_wait_is_rich_text_available <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_clipboard_wait_is_target_available</primary></indexterm>gtk_clipboard_wait_is_target_available <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_clipboard_wait_is_text_available</primary></indexterm>gtk_clipboard_wait_is_text_available <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_color_button_get_alpha</primary></indexterm>gtk_color_button_get_alpha <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_color_button_get_color</primary></indexterm>gtk_color_button_get_color <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_color_button_get_title</primary></indexterm>gtk_color_button_get_title <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_color_button_get_type</primary></indexterm>gtk_color_button_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_color_button_get_use_alpha</primary></indexterm>gtk_color_button_get_use_alpha <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_color_button_new</primary></indexterm>gtk_color_button_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_color_button_new_with_color</primary></indexterm>gtk_color_button_new_with_color <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_color_button_set_alpha</primary></indexterm>gtk_color_button_set_alpha <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_color_button_set_color</primary></indexterm>gtk_color_button_set_color <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_color_button_set_title</primary></indexterm>gtk_color_button_set_title <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_color_button_set_use_alpha</primary></indexterm>gtk_color_button_set_use_alpha <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_color_selection_dialog_get_type</primary></indexterm>gtk_color_selection_dialog_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_color_selection_dialog_new</primary></indexterm>gtk_color_selection_dialog_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_color_selection_get_current_alpha</primary></indexterm>gtk_color_selection_get_current_alpha <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_color_selection_get_current_color</primary></indexterm>gtk_color_selection_get_current_color <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_color_selection_get_has_opacity_control</primary></indexterm>gtk_color_selection_get_has_opacity_control <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_color_selection_get_has_palette</primary></indexterm>gtk_color_selection_get_has_palette <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_color_selection_get_previous_alpha</primary></indexterm>gtk_color_selection_get_previous_alpha <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_color_selection_get_previous_color</primary></indexterm>gtk_color_selection_get_previous_color <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_color_selection_get_type</primary></indexterm>gtk_color_selection_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_color_selection_is_adjusting</primary></indexterm>gtk_color_selection_is_adjusting <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_color_selection_new</primary></indexterm>gtk_color_selection_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_color_selection_palette_from_string</primary></indexterm>gtk_color_selection_palette_from_string <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_color_selection_palette_to_string</primary></indexterm>gtk_color_selection_palette_to_string <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_color_selection_set_change_palette_with_screen_hook</primary></indexterm>gtk_color_selection_set_change_palette_with_screen_hook <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_color_selection_set_current_alpha</primary></indexterm>gtk_color_selection_set_current_alpha <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_color_selection_set_current_color</primary></indexterm>gtk_color_selection_set_current_color <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_color_selection_set_has_opacity_control</primary></indexterm>gtk_color_selection_set_has_opacity_control <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_color_selection_set_has_palette</primary></indexterm>gtk_color_selection_set_has_palette <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_color_selection_set_previous_alpha</primary></indexterm>gtk_color_selection_set_previous_alpha <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_color_selection_set_previous_color</primary></indexterm>gtk_color_selection_set_previous_color <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_combo_box_append_text</primary></indexterm>gtk_combo_box_append_text <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_combo_box_entry_get_text_column</primary></indexterm>gtk_combo_box_entry_get_text_column <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_combo_box_entry_get_type</primary></indexterm>gtk_combo_box_entry_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_combo_box_entry_new</primary></indexterm>gtk_combo_box_entry_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_combo_box_entry_new_text</primary></indexterm>gtk_combo_box_entry_new_text <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_combo_box_entry_new_with_model</primary></indexterm>gtk_combo_box_entry_new_with_model <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_combo_box_entry_set_text_column</primary></indexterm>gtk_combo_box_entry_set_text_column <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_combo_box_get_active</primary></indexterm>gtk_combo_box_get_active <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_combo_box_get_active_iter</primary></indexterm>gtk_combo_box_get_active_iter <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_combo_box_get_active_text</primary></indexterm>gtk_combo_box_get_active_text <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_combo_box_get_add_tearoffs</primary></indexterm>gtk_combo_box_get_add_tearoffs <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_combo_box_get_column_span_column</primary></indexterm>gtk_combo_box_get_column_span_column <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_combo_box_get_focus_on_click</primary></indexterm>gtk_combo_box_get_focus_on_click <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_combo_box_get_model</primary></indexterm>gtk_combo_box_get_model <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_combo_box_get_popup_accessible</primary></indexterm>gtk_combo_box_get_popup_accessible <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_combo_box_get_row_separator_func</primary></indexterm>gtk_combo_box_get_row_separator_func <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_combo_box_get_row_span_column</primary></indexterm>gtk_combo_box_get_row_span_column <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_combo_box_get_title</primary></indexterm>gtk_combo_box_get_title <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_combo_box_get_type</primary></indexterm>gtk_combo_box_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_combo_box_get_wrap_width</primary></indexterm>gtk_combo_box_get_wrap_width <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_combo_box_insert_text</primary></indexterm>gtk_combo_box_insert_text <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_combo_box_new</primary></indexterm>gtk_combo_box_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_combo_box_new_text</primary></indexterm>gtk_combo_box_new_text <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_combo_box_new_with_model</primary></indexterm>gtk_combo_box_new_with_model <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_combo_box_popdown</primary></indexterm>gtk_combo_box_popdown <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_combo_box_popup</primary></indexterm>gtk_combo_box_popup <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_combo_box_prepend_text</primary></indexterm>gtk_combo_box_prepend_text <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_combo_box_remove_text</primary></indexterm>gtk_combo_box_remove_text <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_combo_box_set_active</primary></indexterm>gtk_combo_box_set_active <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_combo_box_set_active_iter</primary></indexterm>gtk_combo_box_set_active_iter <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_combo_box_set_add_tearoffs</primary></indexterm>gtk_combo_box_set_add_tearoffs <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_combo_box_set_column_span_column</primary></indexterm>gtk_combo_box_set_column_span_column <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_combo_box_set_focus_on_click</primary></indexterm>gtk_combo_box_set_focus_on_click <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_combo_box_set_model</primary></indexterm>gtk_combo_box_set_model <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_combo_box_set_row_separator_func</primary></indexterm>gtk_combo_box_set_row_separator_func <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_combo_box_set_row_span_column</primary></indexterm>gtk_combo_box_set_row_span_column <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_combo_box_set_title</primary></indexterm>gtk_combo_box_set_title <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_combo_box_set_wrap_width</primary></indexterm>gtk_combo_box_set_wrap_width <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_combo_get_type</primary></indexterm>gtk_combo_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_container_add</primary></indexterm>gtk_container_add <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_container_add_with_properties</primary></indexterm>gtk_container_add_with_properties <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_container_check_resize</primary></indexterm>gtk_container_check_resize <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_container_child_get</primary></indexterm>gtk_container_child_get <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_container_child_get_property</primary></indexterm>gtk_container_child_get_property <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_container_child_get_valist</primary></indexterm>gtk_container_child_get_valist <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_container_child_set</primary></indexterm>gtk_container_child_set <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_container_child_set_property</primary></indexterm>gtk_container_child_set_property <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_container_child_set_valist</primary></indexterm>gtk_container_child_set_valist <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_container_child_type</primary></indexterm>gtk_container_child_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_container_class_find_child_property</primary></indexterm>gtk_container_class_find_child_property <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_container_class_install_child_property</primary></indexterm>gtk_container_class_install_child_property <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_container_class_list_child_properties</primary></indexterm>gtk_container_class_list_child_properties <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_container_forall</primary></indexterm>gtk_container_forall <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_container_foreach</primary></indexterm>gtk_container_foreach <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_container_get_border_width</primary></indexterm>gtk_container_get_border_width <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_container_get_children</primary></indexterm>gtk_container_get_children <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_container_get_focus_chain</primary></indexterm>gtk_container_get_focus_chain <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_container_get_focus_hadjustment</primary></indexterm>gtk_container_get_focus_hadjustment <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_container_get_focus_vadjustment</primary></indexterm>gtk_container_get_focus_vadjustment <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_container_get_resize_mode</primary></indexterm>gtk_container_get_resize_mode <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_container_get_type</primary></indexterm>gtk_container_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_container_propagate_expose</primary></indexterm>gtk_container_propagate_expose <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_container_remove</primary></indexterm>gtk_container_remove <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_container_resize_children</primary></indexterm>gtk_container_resize_children <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_container_set_border_width</primary></indexterm>gtk_container_set_border_width <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_container_set_focus_chain</primary></indexterm>gtk_container_set_focus_chain <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_container_set_focus_child</primary></indexterm>gtk_container_set_focus_child <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_container_set_focus_hadjustment</primary></indexterm>gtk_container_set_focus_hadjustment <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_container_set_focus_vadjustment</primary></indexterm>gtk_container_set_focus_vadjustment <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_container_set_reallocate_redraws</primary></indexterm>gtk_container_set_reallocate_redraws <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_container_set_resize_mode</primary></indexterm>gtk_container_set_resize_mode <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_container_unset_focus_chain</primary></indexterm>gtk_container_unset_focus_chain <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_corner_type_get_type</primary></indexterm>gtk_corner_type_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_curve_get_type</primary></indexterm>gtk_curve_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_curve_get_vector</primary></indexterm>gtk_curve_get_vector <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_curve_new</primary></indexterm>gtk_curve_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_curve_reset</primary></indexterm>gtk_curve_reset <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_curve_set_curve_type</primary></indexterm>gtk_curve_set_curve_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_curve_set_gamma</primary></indexterm>gtk_curve_set_gamma <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_curve_set_range</primary></indexterm>gtk_curve_set_range <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_curve_set_vector</primary></indexterm>gtk_curve_set_vector <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_curve_type_get_type</primary></indexterm>gtk_curve_type_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_debug_flag_get_type</primary></indexterm>gtk_debug_flag_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_delete_type_get_type</primary></indexterm>gtk_delete_type_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_dest_defaults_get_type</primary></indexterm>gtk_dest_defaults_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_dialog_add_action_widget</primary></indexterm>gtk_dialog_add_action_widget <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_dialog_add_button</primary></indexterm>gtk_dialog_add_button <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_dialog_add_buttons</primary></indexterm>gtk_dialog_add_buttons <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_dialog_flags_get_type</primary></indexterm>gtk_dialog_flags_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_dialog_get_has_separator</primary></indexterm>gtk_dialog_get_has_separator <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_dialog_get_response_for_widget</primary></indexterm>gtk_dialog_get_response_for_widget <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_dialog_get_type</primary></indexterm>gtk_dialog_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_dialog_new</primary></indexterm>gtk_dialog_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_dialog_new_with_buttons</primary></indexterm>gtk_dialog_new_with_buttons <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_dialog_response</primary></indexterm>gtk_dialog_response <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_dialog_run</primary></indexterm>gtk_dialog_run <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_dialog_set_alternative_button_order</primary></indexterm>gtk_dialog_set_alternative_button_order <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_dialog_set_alternative_button_order_from_array</primary></indexterm>gtk_dialog_set_alternative_button_order_from_array <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_dialog_set_default_response</primary></indexterm>gtk_dialog_set_default_response <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_dialog_set_has_separator</primary></indexterm>gtk_dialog_set_has_separator <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_dialog_set_response_sensitive</primary></indexterm>gtk_dialog_set_response_sensitive <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_direction_type_get_type</primary></indexterm>gtk_direction_type_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_disable_setlocale</primary></indexterm>gtk_disable_setlocale <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_drag_begin</primary></indexterm>gtk_drag_begin <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_drag_check_threshold</primary></indexterm>gtk_drag_check_threshold <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_drag_dest_add_image_targets</primary></indexterm>gtk_drag_dest_add_image_targets <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_drag_dest_add_text_targets</primary></indexterm>gtk_drag_dest_add_text_targets <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_drag_dest_add_uri_targets</primary></indexterm>gtk_drag_dest_add_uri_targets <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_drag_dest_find_target</primary></indexterm>gtk_drag_dest_find_target <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_drag_dest_get_target_list</primary></indexterm>gtk_drag_dest_get_target_list <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_drag_dest_get_track_motion</primary></indexterm>gtk_drag_dest_get_track_motion <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_drag_dest_set</primary></indexterm>gtk_drag_dest_set <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_drag_dest_set_proxy</primary></indexterm>gtk_drag_dest_set_proxy <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_drag_dest_set_target_list</primary></indexterm>gtk_drag_dest_set_target_list <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_drag_dest_set_track_motion</primary></indexterm>gtk_drag_dest_set_track_motion <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_drag_dest_unset</primary></indexterm>gtk_drag_dest_unset <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_drag_finish</primary></indexterm>gtk_drag_finish <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_drag_get_data</primary></indexterm>gtk_drag_get_data <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_drag_get_source_widget</primary></indexterm>gtk_drag_get_source_widget <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_drag_highlight</primary></indexterm>gtk_drag_highlight <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_drag_set_icon_default</primary></indexterm>gtk_drag_set_icon_default <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_drag_set_icon_name</primary></indexterm>gtk_drag_set_icon_name <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_drag_set_icon_pixbuf</primary></indexterm>gtk_drag_set_icon_pixbuf <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_drag_set_icon_pixmap</primary></indexterm>gtk_drag_set_icon_pixmap <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_drag_set_icon_stock</primary></indexterm>gtk_drag_set_icon_stock <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_drag_set_icon_widget</primary></indexterm>gtk_drag_set_icon_widget <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_drag_source_add_image_targets</primary></indexterm>gtk_drag_source_add_image_targets <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_drag_source_add_text_targets</primary></indexterm>gtk_drag_source_add_text_targets <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_drag_source_add_uri_targets</primary></indexterm>gtk_drag_source_add_uri_targets <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_drag_source_get_target_list</primary></indexterm>gtk_drag_source_get_target_list <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_drag_source_set</primary></indexterm>gtk_drag_source_set <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_drag_source_set_icon</primary></indexterm>gtk_drag_source_set_icon <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_drag_source_set_icon_name</primary></indexterm>gtk_drag_source_set_icon_name <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_drag_source_set_icon_pixbuf</primary></indexterm>gtk_drag_source_set_icon_pixbuf <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_drag_source_set_icon_stock</primary></indexterm>gtk_drag_source_set_icon_stock <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_drag_source_set_target_list</primary></indexterm>gtk_drag_source_set_target_list <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_drag_source_unset</primary></indexterm>gtk_drag_source_unset <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_drag_unhighlight</primary></indexterm>gtk_drag_unhighlight <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_draw_insertion_cursor</primary></indexterm>gtk_draw_insertion_cursor <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_drawing_area_get_type</primary></indexterm>gtk_drawing_area_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_drawing_area_new</primary></indexterm>gtk_drawing_area_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_editable_copy_clipboard</primary></indexterm>gtk_editable_copy_clipboard <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_editable_cut_clipboard</primary></indexterm>gtk_editable_cut_clipboard <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_editable_delete_selection</primary></indexterm>gtk_editable_delete_selection <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_editable_delete_text</primary></indexterm>gtk_editable_delete_text <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_editable_get_chars</primary></indexterm>gtk_editable_get_chars <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_editable_get_editable</primary></indexterm>gtk_editable_get_editable <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_editable_get_position</primary></indexterm>gtk_editable_get_position <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_editable_get_selection_bounds</primary></indexterm>gtk_editable_get_selection_bounds <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_editable_get_type</primary></indexterm>gtk_editable_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_editable_insert_text</primary></indexterm>gtk_editable_insert_text <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_editable_paste_clipboard</primary></indexterm>gtk_editable_paste_clipboard <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_editable_select_region</primary></indexterm>gtk_editable_select_region <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_editable_set_editable</primary></indexterm>gtk_editable_set_editable <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_editable_set_position</primary></indexterm>gtk_editable_set_position <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_entry_completion_complete</primary></indexterm>gtk_entry_completion_complete <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_entry_completion_delete_action</primary></indexterm>gtk_entry_completion_delete_action <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_entry_completion_get_entry</primary></indexterm>gtk_entry_completion_get_entry <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_entry_completion_get_inline_completion</primary></indexterm>gtk_entry_completion_get_inline_completion <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_entry_completion_get_minimum_key_length</primary></indexterm>gtk_entry_completion_get_minimum_key_length <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_entry_completion_get_model</primary></indexterm>gtk_entry_completion_get_model <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_entry_completion_get_popup_completion</primary></indexterm>gtk_entry_completion_get_popup_completion <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_entry_completion_get_popup_set_width</primary></indexterm>gtk_entry_completion_get_popup_set_width <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_entry_completion_get_popup_single_match</primary></indexterm>gtk_entry_completion_get_popup_single_match <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_entry_completion_get_text_column</primary></indexterm>gtk_entry_completion_get_text_column <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_entry_completion_get_type</primary></indexterm>gtk_entry_completion_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_entry_completion_insert_action_markup</primary></indexterm>gtk_entry_completion_insert_action_markup <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_entry_completion_insert_action_text</primary></indexterm>gtk_entry_completion_insert_action_text <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_entry_completion_insert_prefix</primary></indexterm>gtk_entry_completion_insert_prefix <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_entry_completion_new</primary></indexterm>gtk_entry_completion_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_entry_completion_set_inline_completion</primary></indexterm>gtk_entry_completion_set_inline_completion <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_entry_completion_set_match_func</primary></indexterm>gtk_entry_completion_set_match_func <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_entry_completion_set_minimum_key_length</primary></indexterm>gtk_entry_completion_set_minimum_key_length <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_entry_completion_set_model</primary></indexterm>gtk_entry_completion_set_model <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_entry_completion_set_popup_completion</primary></indexterm>gtk_entry_completion_set_popup_completion <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_entry_completion_set_popup_set_width</primary></indexterm>gtk_entry_completion_set_popup_set_width <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_entry_completion_set_popup_single_match</primary></indexterm>gtk_entry_completion_set_popup_single_match <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_entry_completion_set_text_column</primary></indexterm>gtk_entry_completion_set_text_column <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_entry_get_activates_default</primary></indexterm>gtk_entry_get_activates_default <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_entry_get_alignment</primary></indexterm>gtk_entry_get_alignment <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_entry_get_completion</primary></indexterm>gtk_entry_get_completion <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_entry_get_has_frame</primary></indexterm>gtk_entry_get_has_frame <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_entry_get_inner_border</primary></indexterm>gtk_entry_get_inner_border <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_entry_get_invisible_char</primary></indexterm>gtk_entry_get_invisible_char <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_entry_get_layout</primary></indexterm>gtk_entry_get_layout <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_entry_get_layout_offsets</primary></indexterm>gtk_entry_get_layout_offsets <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_entry_get_max_length</primary></indexterm>gtk_entry_get_max_length <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_entry_get_text</primary></indexterm>gtk_entry_get_text <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_entry_get_type</primary></indexterm>gtk_entry_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_entry_get_visibility</primary></indexterm>gtk_entry_get_visibility <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_entry_get_width_chars</primary></indexterm>gtk_entry_get_width_chars <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_entry_layout_index_to_text_index</primary></indexterm>gtk_entry_layout_index_to_text_index <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_entry_new</primary></indexterm>gtk_entry_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_entry_set_activates_default</primary></indexterm>gtk_entry_set_activates_default <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_entry_set_alignment</primary></indexterm>gtk_entry_set_alignment <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_entry_set_completion</primary></indexterm>gtk_entry_set_completion <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_entry_set_has_frame</primary></indexterm>gtk_entry_set_has_frame <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_entry_set_inner_border</primary></indexterm>gtk_entry_set_inner_border <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_entry_set_invisible_char</primary></indexterm>gtk_entry_set_invisible_char <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_entry_set_max_length</primary></indexterm>gtk_entry_set_max_length <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_entry_set_text</primary></indexterm>gtk_entry_set_text <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_entry_set_visibility</primary></indexterm>gtk_entry_set_visibility <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_entry_set_width_chars</primary></indexterm>gtk_entry_set_width_chars <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_entry_text_index_to_layout_index</primary></indexterm>gtk_entry_text_index_to_layout_index <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_enumerate_printers</primary></indexterm>gtk_enumerate_printers <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_event_box_get_above_child</primary></indexterm>gtk_event_box_get_above_child <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_event_box_get_type</primary></indexterm>gtk_event_box_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_event_box_get_visible_window</primary></indexterm>gtk_event_box_get_visible_window <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_event_box_new</primary></indexterm>gtk_event_box_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_event_box_set_above_child</primary></indexterm>gtk_event_box_set_above_child <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_event_box_set_visible_window</primary></indexterm>gtk_event_box_set_visible_window <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_events_pending</primary></indexterm>gtk_events_pending <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_expander_get_expanded</primary></indexterm>gtk_expander_get_expanded <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_expander_get_label</primary></indexterm>gtk_expander_get_label <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_expander_get_label_widget</primary></indexterm>gtk_expander_get_label_widget <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_expander_get_spacing</primary></indexterm>gtk_expander_get_spacing <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_expander_get_type</primary></indexterm>gtk_expander_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_expander_get_use_markup</primary></indexterm>gtk_expander_get_use_markup <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_expander_get_use_underline</primary></indexterm>gtk_expander_get_use_underline <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_expander_new</primary></indexterm>gtk_expander_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_expander_new_with_mnemonic</primary></indexterm>gtk_expander_new_with_mnemonic <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_expander_set_expanded</primary></indexterm>gtk_expander_set_expanded <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_expander_set_label</primary></indexterm>gtk_expander_set_label <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_expander_set_label_widget</primary></indexterm>gtk_expander_set_label_widget <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_expander_set_spacing</primary></indexterm>gtk_expander_set_spacing <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_expander_set_use_markup</primary></indexterm>gtk_expander_set_use_markup <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_expander_set_use_underline</primary></indexterm>gtk_expander_set_use_underline <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_expander_style_get_type</primary></indexterm>gtk_expander_style_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_false</primary></indexterm>gtk_false <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_file_chooser_action_get_type</primary></indexterm>gtk_file_chooser_action_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_file_chooser_add_filter</primary></indexterm>gtk_file_chooser_add_filter <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_file_chooser_add_shortcut_folder</primary></indexterm>gtk_file_chooser_add_shortcut_folder <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_file_chooser_add_shortcut_folder_uri</primary></indexterm>gtk_file_chooser_add_shortcut_folder_uri <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_file_chooser_button_get_focus_on_click</primary></indexterm>gtk_file_chooser_button_get_focus_on_click <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_file_chooser_button_get_title</primary></indexterm>gtk_file_chooser_button_get_title <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_file_chooser_button_get_type</primary></indexterm>gtk_file_chooser_button_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_file_chooser_button_get_width_chars</primary></indexterm>gtk_file_chooser_button_get_width_chars <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_file_chooser_button_new</primary></indexterm>gtk_file_chooser_button_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_file_chooser_button_new_with_backend</primary></indexterm>gtk_file_chooser_button_new_with_backend <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_file_chooser_button_new_with_dialog</primary></indexterm>gtk_file_chooser_button_new_with_dialog <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_file_chooser_button_set_focus_on_click</primary></indexterm>gtk_file_chooser_button_set_focus_on_click <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_file_chooser_button_set_title</primary></indexterm>gtk_file_chooser_button_set_title <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_file_chooser_button_set_width_chars</primary></indexterm>gtk_file_chooser_button_set_width_chars <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_file_chooser_dialog_get_type</primary></indexterm>gtk_file_chooser_dialog_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_file_chooser_dialog_new</primary></indexterm>gtk_file_chooser_dialog_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_file_chooser_dialog_new_with_backend</primary></indexterm>gtk_file_chooser_dialog_new_with_backend <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_file_chooser_error_get_type</primary></indexterm>gtk_file_chooser_error_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_file_chooser_error_quark</primary></indexterm>gtk_file_chooser_error_quark <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_file_chooser_get_action</primary></indexterm>gtk_file_chooser_get_action <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_file_chooser_get_current_folder</primary></indexterm>gtk_file_chooser_get_current_folder <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_file_chooser_get_current_folder_uri</primary></indexterm>gtk_file_chooser_get_current_folder_uri <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_file_chooser_get_do_overwrite_confirmation</primary></indexterm>gtk_file_chooser_get_do_overwrite_confirmation <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_file_chooser_get_extra_widget</primary></indexterm>gtk_file_chooser_get_extra_widget <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_file_chooser_get_filename</primary></indexterm>gtk_file_chooser_get_filename <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_file_chooser_get_filenames</primary></indexterm>gtk_file_chooser_get_filenames <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_file_chooser_get_filter</primary></indexterm>gtk_file_chooser_get_filter <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_file_chooser_get_local_only</primary></indexterm>gtk_file_chooser_get_local_only <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_file_chooser_get_preview_filename</primary></indexterm>gtk_file_chooser_get_preview_filename <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_file_chooser_get_preview_uri</primary></indexterm>gtk_file_chooser_get_preview_uri <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_file_chooser_get_preview_widget</primary></indexterm>gtk_file_chooser_get_preview_widget <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_file_chooser_get_preview_widget_active</primary></indexterm>gtk_file_chooser_get_preview_widget_active <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_file_chooser_get_select_multiple</primary></indexterm>gtk_file_chooser_get_select_multiple <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_file_chooser_get_show_hidden</primary></indexterm>gtk_file_chooser_get_show_hidden <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_file_chooser_get_type</primary></indexterm>gtk_file_chooser_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_file_chooser_get_uri</primary></indexterm>gtk_file_chooser_get_uri <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_file_chooser_get_uris</primary></indexterm>gtk_file_chooser_get_uris <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_file_chooser_get_use_preview_label</primary></indexterm>gtk_file_chooser_get_use_preview_label <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_file_chooser_list_filters</primary></indexterm>gtk_file_chooser_list_filters <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_file_chooser_list_shortcut_folder_uris</primary></indexterm>gtk_file_chooser_list_shortcut_folder_uris <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_file_chooser_list_shortcut_folders</primary></indexterm>gtk_file_chooser_list_shortcut_folders <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_file_chooser_remove_filter</primary></indexterm>gtk_file_chooser_remove_filter <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_file_chooser_remove_shortcut_folder</primary></indexterm>gtk_file_chooser_remove_shortcut_folder <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_file_chooser_remove_shortcut_folder_uri</primary></indexterm>gtk_file_chooser_remove_shortcut_folder_uri <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_file_chooser_select_all</primary></indexterm>gtk_file_chooser_select_all <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_file_chooser_select_filename</primary></indexterm>gtk_file_chooser_select_filename <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_file_chooser_select_uri</primary></indexterm>gtk_file_chooser_select_uri <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_file_chooser_set_action</primary></indexterm>gtk_file_chooser_set_action <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_file_chooser_set_current_folder</primary></indexterm>gtk_file_chooser_set_current_folder <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_file_chooser_set_current_folder_uri</primary></indexterm>gtk_file_chooser_set_current_folder_uri <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_file_chooser_set_current_name</primary></indexterm>gtk_file_chooser_set_current_name <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_file_chooser_set_do_overwrite_confirmation</primary></indexterm>gtk_file_chooser_set_do_overwrite_confirmation <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_file_chooser_set_extra_widget</primary></indexterm>gtk_file_chooser_set_extra_widget <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_file_chooser_set_filename</primary></indexterm>gtk_file_chooser_set_filename <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_file_chooser_set_filter</primary></indexterm>gtk_file_chooser_set_filter <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_file_chooser_set_local_only</primary></indexterm>gtk_file_chooser_set_local_only <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_file_chooser_set_preview_widget</primary></indexterm>gtk_file_chooser_set_preview_widget <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_file_chooser_set_preview_widget_active</primary></indexterm>gtk_file_chooser_set_preview_widget_active <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_file_chooser_set_select_multiple</primary></indexterm>gtk_file_chooser_set_select_multiple <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_file_chooser_set_show_hidden</primary></indexterm>gtk_file_chooser_set_show_hidden <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_file_chooser_set_uri</primary></indexterm>gtk_file_chooser_set_uri <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_file_chooser_set_use_preview_label</primary></indexterm>gtk_file_chooser_set_use_preview_label <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_file_chooser_unselect_all</primary></indexterm>gtk_file_chooser_unselect_all <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_file_chooser_unselect_filename</primary></indexterm>gtk_file_chooser_unselect_filename <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_file_chooser_unselect_uri</primary></indexterm>gtk_file_chooser_unselect_uri <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_file_chooser_widget_get_type</primary></indexterm>gtk_file_chooser_widget_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_file_chooser_widget_new</primary></indexterm>gtk_file_chooser_widget_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_file_chooser_widget_new_with_backend</primary></indexterm>gtk_file_chooser_widget_new_with_backend <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_file_filter_add_custom</primary></indexterm>gtk_file_filter_add_custom <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_file_filter_add_mime_type</primary></indexterm>gtk_file_filter_add_mime_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_file_filter_add_pattern</primary></indexterm>gtk_file_filter_add_pattern <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_file_filter_add_pixbuf_formats</primary></indexterm>gtk_file_filter_add_pixbuf_formats <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_file_filter_filter</primary></indexterm>gtk_file_filter_filter <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_file_filter_flags_get_type</primary></indexterm>gtk_file_filter_flags_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_file_filter_get_name</primary></indexterm>gtk_file_filter_get_name <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_file_filter_get_needed</primary></indexterm>gtk_file_filter_get_needed <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_file_filter_get_type</primary></indexterm>gtk_file_filter_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_file_filter_new</primary></indexterm>gtk_file_filter_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_file_filter_set_name</primary></indexterm>gtk_file_filter_set_name <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_file_selection_complete</primary></indexterm>gtk_file_selection_complete <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_file_selection_get_filename</primary></indexterm>gtk_file_selection_get_filename <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_file_selection_get_select_multiple</primary></indexterm>gtk_file_selection_get_select_multiple <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_file_selection_get_selections</primary></indexterm>gtk_file_selection_get_selections <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_file_selection_get_type</primary></indexterm>gtk_file_selection_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_file_selection_hide_fileop_buttons</primary></indexterm>gtk_file_selection_hide_fileop_buttons <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_file_selection_new</primary></indexterm>gtk_file_selection_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_file_selection_set_filename</primary></indexterm>gtk_file_selection_set_filename <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_file_selection_set_select_multiple</primary></indexterm>gtk_file_selection_set_select_multiple <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_file_selection_show_fileop_buttons</primary></indexterm>gtk_file_selection_show_fileop_buttons <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_fixed_get_has_window</primary></indexterm>gtk_fixed_get_has_window <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_fixed_get_type</primary></indexterm>gtk_fixed_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_fixed_move</primary></indexterm>gtk_fixed_move <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_fixed_new</primary></indexterm>gtk_fixed_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_fixed_put</primary></indexterm>gtk_fixed_put <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_fixed_set_has_window</primary></indexterm>gtk_fixed_set_has_window <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_font_button_get_font_name</primary></indexterm>gtk_font_button_get_font_name <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_font_button_get_show_size</primary></indexterm>gtk_font_button_get_show_size <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_font_button_get_show_style</primary></indexterm>gtk_font_button_get_show_style <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_font_button_get_title</primary></indexterm>gtk_font_button_get_title <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_font_button_get_type</primary></indexterm>gtk_font_button_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_font_button_get_use_font</primary></indexterm>gtk_font_button_get_use_font <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_font_button_get_use_size</primary></indexterm>gtk_font_button_get_use_size <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_font_button_new</primary></indexterm>gtk_font_button_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_font_button_new_with_font</primary></indexterm>gtk_font_button_new_with_font <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_font_button_set_font_name</primary></indexterm>gtk_font_button_set_font_name <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_font_button_set_show_size</primary></indexterm>gtk_font_button_set_show_size <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_font_button_set_show_style</primary></indexterm>gtk_font_button_set_show_style <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_font_button_set_title</primary></indexterm>gtk_font_button_set_title <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_font_button_set_use_font</primary></indexterm>gtk_font_button_set_use_font <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_font_button_set_use_size</primary></indexterm>gtk_font_button_set_use_size <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_font_selection_dialog_get_font_name</primary></indexterm>gtk_font_selection_dialog_get_font_name <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_font_selection_dialog_get_preview_text</primary></indexterm>gtk_font_selection_dialog_get_preview_text <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_font_selection_dialog_get_type</primary></indexterm>gtk_font_selection_dialog_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_font_selection_dialog_new</primary></indexterm>gtk_font_selection_dialog_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_font_selection_dialog_set_font_name</primary></indexterm>gtk_font_selection_dialog_set_font_name <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_font_selection_dialog_set_preview_text</primary></indexterm>gtk_font_selection_dialog_set_preview_text <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_font_selection_get_font_name</primary></indexterm>gtk_font_selection_get_font_name <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_font_selection_get_preview_text</primary></indexterm>gtk_font_selection_get_preview_text <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_font_selection_get_type</primary></indexterm>gtk_font_selection_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_font_selection_new</primary></indexterm>gtk_font_selection_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_font_selection_set_font_name</primary></indexterm>gtk_font_selection_set_font_name <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_font_selection_set_preview_text</primary></indexterm>gtk_font_selection_set_preview_text <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_frame_get_label</primary></indexterm>gtk_frame_get_label <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_frame_get_label_align</primary></indexterm>gtk_frame_get_label_align <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_frame_get_label_widget</primary></indexterm>gtk_frame_get_label_widget <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_frame_get_shadow_type</primary></indexterm>gtk_frame_get_shadow_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_frame_get_type</primary></indexterm>gtk_frame_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_frame_new</primary></indexterm>gtk_frame_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_frame_set_label</primary></indexterm>gtk_frame_set_label <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_frame_set_label_align</primary></indexterm>gtk_frame_set_label_align <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_frame_set_label_widget</primary></indexterm>gtk_frame_set_label_widget <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_frame_set_shadow_type</primary></indexterm>gtk_frame_set_shadow_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_gamma_curve_get_type</primary></indexterm>gtk_gamma_curve_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_gamma_curve_new</primary></indexterm>gtk_gamma_curve_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_gc_get</primary></indexterm>gtk_gc_get <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_gc_release</primary></indexterm>gtk_gc_release <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_get_current_event</primary></indexterm>gtk_get_current_event <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_get_current_event_state</primary></indexterm>gtk_get_current_event_state <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_get_current_event_time</primary></indexterm>gtk_get_current_event_time <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_get_default_language</primary></indexterm>gtk_get_default_language <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_get_event_widget</primary></indexterm>gtk_get_event_widget <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_get_option_group</primary></indexterm>gtk_get_option_group <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_grab_add</primary></indexterm>gtk_grab_add <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_grab_get_current</primary></indexterm>gtk_grab_get_current <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_grab_remove</primary></indexterm>gtk_grab_remove <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_handle_box_get_handle_position</primary></indexterm>gtk_handle_box_get_handle_position <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_handle_box_get_shadow_type</primary></indexterm>gtk_handle_box_get_shadow_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_handle_box_get_snap_edge</primary></indexterm>gtk_handle_box_get_snap_edge <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_handle_box_get_type</primary></indexterm>gtk_handle_box_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_handle_box_new</primary></indexterm>gtk_handle_box_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_handle_box_set_handle_position</primary></indexterm>gtk_handle_box_set_handle_position <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_handle_box_set_shadow_type</primary></indexterm>gtk_handle_box_set_shadow_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_handle_box_set_snap_edge</primary></indexterm>gtk_handle_box_set_snap_edge <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_hbox_get_type</primary></indexterm>gtk_hbox_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_hbox_new</primary></indexterm>gtk_hbox_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_hbutton_box_get_type</primary></indexterm>gtk_hbutton_box_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_hbutton_box_new</primary></indexterm>gtk_hbutton_box_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_hpaned_get_type</primary></indexterm>gtk_hpaned_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_hpaned_new</primary></indexterm>gtk_hpaned_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_hruler_get_type</primary></indexterm>gtk_hruler_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_hruler_new</primary></indexterm>gtk_hruler_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_hscale_get_type</primary></indexterm>gtk_hscale_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_hscale_new</primary></indexterm>gtk_hscale_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_hscale_new_with_range</primary></indexterm>gtk_hscale_new_with_range <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_hscrollbar_get_type</primary></indexterm>gtk_hscrollbar_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_hscrollbar_new</primary></indexterm>gtk_hscrollbar_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_hseparator_get_type</primary></indexterm>gtk_hseparator_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_hseparator_new</primary></indexterm>gtk_hseparator_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_icon_factory_add</primary></indexterm>gtk_icon_factory_add <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_icon_factory_add_default</primary></indexterm>gtk_icon_factory_add_default <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_icon_factory_get_type</primary></indexterm>gtk_icon_factory_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_icon_factory_lookup</primary></indexterm>gtk_icon_factory_lookup <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_icon_factory_lookup_default</primary></indexterm>gtk_icon_factory_lookup_default <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_icon_factory_new</primary></indexterm>gtk_icon_factory_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_icon_factory_remove_default</primary></indexterm>gtk_icon_factory_remove_default <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_icon_info_copy</primary></indexterm>gtk_icon_info_copy <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_icon_info_free</primary></indexterm>gtk_icon_info_free <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_icon_info_get_attach_points</primary></indexterm>gtk_icon_info_get_attach_points <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_icon_info_get_base_size</primary></indexterm>gtk_icon_info_get_base_size <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_icon_info_get_builtin_pixbuf</primary></indexterm>gtk_icon_info_get_builtin_pixbuf <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_icon_info_get_display_name</primary></indexterm>gtk_icon_info_get_display_name <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_icon_info_get_embedded_rect</primary></indexterm>gtk_icon_info_get_embedded_rect <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_icon_info_get_filename</primary></indexterm>gtk_icon_info_get_filename <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_icon_info_get_type</primary></indexterm>gtk_icon_info_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_icon_info_load_icon</primary></indexterm>gtk_icon_info_load_icon <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_icon_info_set_raw_coordinates</primary></indexterm>gtk_icon_info_set_raw_coordinates <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_icon_lookup_flags_get_type</primary></indexterm>gtk_icon_lookup_flags_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_icon_set_add_source</primary></indexterm>gtk_icon_set_add_source <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_icon_set_copy</primary></indexterm>gtk_icon_set_copy <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_icon_set_get_sizes</primary></indexterm>gtk_icon_set_get_sizes <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_icon_set_get_type</primary></indexterm>gtk_icon_set_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_icon_set_new</primary></indexterm>gtk_icon_set_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_icon_set_new_from_pixbuf</primary></indexterm>gtk_icon_set_new_from_pixbuf <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_icon_set_ref</primary></indexterm>gtk_icon_set_ref <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_icon_set_render_icon</primary></indexterm>gtk_icon_set_render_icon <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_icon_set_unref</primary></indexterm>gtk_icon_set_unref <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_icon_size_from_name</primary></indexterm>gtk_icon_size_from_name <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_icon_size_get_name</primary></indexterm>gtk_icon_size_get_name <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_icon_size_get_type</primary></indexterm>gtk_icon_size_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_icon_size_lookup</primary></indexterm>gtk_icon_size_lookup <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_icon_size_lookup_for_settings</primary></indexterm>gtk_icon_size_lookup_for_settings <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_icon_size_register</primary></indexterm>gtk_icon_size_register <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_icon_size_register_alias</primary></indexterm>gtk_icon_size_register_alias <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_icon_source_copy</primary></indexterm>gtk_icon_source_copy <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_icon_source_free</primary></indexterm>gtk_icon_source_free <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_icon_source_get_direction</primary></indexterm>gtk_icon_source_get_direction <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_icon_source_get_direction_wildcarded</primary></indexterm>gtk_icon_source_get_direction_wildcarded <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_icon_source_get_filename</primary></indexterm>gtk_icon_source_get_filename <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_icon_source_get_icon_name</primary></indexterm>gtk_icon_source_get_icon_name <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_icon_source_get_pixbuf</primary></indexterm>gtk_icon_source_get_pixbuf <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_icon_source_get_size</primary></indexterm>gtk_icon_source_get_size <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_icon_source_get_size_wildcarded</primary></indexterm>gtk_icon_source_get_size_wildcarded <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_icon_source_get_state</primary></indexterm>gtk_icon_source_get_state <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_icon_source_get_state_wildcarded</primary></indexterm>gtk_icon_source_get_state_wildcarded <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_icon_source_get_type</primary></indexterm>gtk_icon_source_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_icon_source_new</primary></indexterm>gtk_icon_source_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_icon_source_set_direction</primary></indexterm>gtk_icon_source_set_direction <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_icon_source_set_direction_wildcarded</primary></indexterm>gtk_icon_source_set_direction_wildcarded <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_icon_source_set_filename</primary></indexterm>gtk_icon_source_set_filename <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_icon_source_set_icon_name</primary></indexterm>gtk_icon_source_set_icon_name <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_icon_source_set_pixbuf</primary></indexterm>gtk_icon_source_set_pixbuf <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_icon_source_set_size</primary></indexterm>gtk_icon_source_set_size <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_icon_source_set_size_wildcarded</primary></indexterm>gtk_icon_source_set_size_wildcarded <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_icon_source_set_state</primary></indexterm>gtk_icon_source_set_state <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_icon_source_set_state_wildcarded</primary></indexterm>gtk_icon_source_set_state_wildcarded <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_icon_theme_add_builtin_icon</primary></indexterm>gtk_icon_theme_add_builtin_icon <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_icon_theme_append_search_path</primary></indexterm>gtk_icon_theme_append_search_path <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_icon_theme_error_get_type</primary></indexterm>gtk_icon_theme_error_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_icon_theme_error_quark</primary></indexterm>gtk_icon_theme_error_quark <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_icon_theme_get_default</primary></indexterm>gtk_icon_theme_get_default <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_icon_theme_get_example_icon_name</primary></indexterm>gtk_icon_theme_get_example_icon_name <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_icon_theme_get_for_screen</primary></indexterm>gtk_icon_theme_get_for_screen <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_icon_theme_get_icon_sizes</primary></indexterm>gtk_icon_theme_get_icon_sizes <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_icon_theme_get_search_path</primary></indexterm>gtk_icon_theme_get_search_path <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_icon_theme_get_type</primary></indexterm>gtk_icon_theme_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_icon_theme_has_icon</primary></indexterm>gtk_icon_theme_has_icon <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_icon_theme_list_icons</primary></indexterm>gtk_icon_theme_list_icons <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_icon_theme_load_icon</primary></indexterm>gtk_icon_theme_load_icon <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_icon_theme_lookup_icon</primary></indexterm>gtk_icon_theme_lookup_icon <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_icon_theme_new</primary></indexterm>gtk_icon_theme_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_icon_theme_prepend_search_path</primary></indexterm>gtk_icon_theme_prepend_search_path <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_icon_theme_rescan_if_needed</primary></indexterm>gtk_icon_theme_rescan_if_needed <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_icon_theme_set_custom_theme</primary></indexterm>gtk_icon_theme_set_custom_theme <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_icon_theme_set_screen</primary></indexterm>gtk_icon_theme_set_screen <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_icon_theme_set_search_path</primary></indexterm>gtk_icon_theme_set_search_path <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_icon_view_create_drag_icon</primary></indexterm>gtk_icon_view_create_drag_icon <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_icon_view_enable_model_drag_dest</primary></indexterm>gtk_icon_view_enable_model_drag_dest <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_icon_view_enable_model_drag_source</primary></indexterm>gtk_icon_view_enable_model_drag_source <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_icon_view_get_column_spacing</primary></indexterm>gtk_icon_view_get_column_spacing <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_icon_view_get_columns</primary></indexterm>gtk_icon_view_get_columns <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_icon_view_get_cursor</primary></indexterm>gtk_icon_view_get_cursor <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_icon_view_get_dest_item_at_pos</primary></indexterm>gtk_icon_view_get_dest_item_at_pos <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_icon_view_get_drag_dest_item</primary></indexterm>gtk_icon_view_get_drag_dest_item <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_icon_view_get_item_at_pos</primary></indexterm>gtk_icon_view_get_item_at_pos <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_icon_view_get_item_width</primary></indexterm>gtk_icon_view_get_item_width <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_icon_view_get_margin</primary></indexterm>gtk_icon_view_get_margin <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_icon_view_get_markup_column</primary></indexterm>gtk_icon_view_get_markup_column <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_icon_view_get_model</primary></indexterm>gtk_icon_view_get_model <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_icon_view_get_orientation</primary></indexterm>gtk_icon_view_get_orientation <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_icon_view_get_path_at_pos</primary></indexterm>gtk_icon_view_get_path_at_pos <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_icon_view_get_pixbuf_column</primary></indexterm>gtk_icon_view_get_pixbuf_column <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_icon_view_get_reorderable</primary></indexterm>gtk_icon_view_get_reorderable <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_icon_view_get_row_spacing</primary></indexterm>gtk_icon_view_get_row_spacing <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_icon_view_get_selected_items</primary></indexterm>gtk_icon_view_get_selected_items <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_icon_view_get_selection_mode</primary></indexterm>gtk_icon_view_get_selection_mode <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_icon_view_get_spacing</primary></indexterm>gtk_icon_view_get_spacing <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_icon_view_get_text_column</primary></indexterm>gtk_icon_view_get_text_column <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_icon_view_get_type</primary></indexterm>gtk_icon_view_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_icon_view_get_visible_range</primary></indexterm>gtk_icon_view_get_visible_range <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_icon_view_item_activated</primary></indexterm>gtk_icon_view_item_activated <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_icon_view_new</primary></indexterm>gtk_icon_view_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_icon_view_new_with_model</primary></indexterm>gtk_icon_view_new_with_model <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_icon_view_path_is_selected</primary></indexterm>gtk_icon_view_path_is_selected <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_icon_view_scroll_to_path</primary></indexterm>gtk_icon_view_scroll_to_path <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_icon_view_select_all</primary></indexterm>gtk_icon_view_select_all <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_icon_view_select_path</primary></indexterm>gtk_icon_view_select_path <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_icon_view_selected_foreach</primary></indexterm>gtk_icon_view_selected_foreach <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_icon_view_set_column_spacing</primary></indexterm>gtk_icon_view_set_column_spacing <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_icon_view_set_columns</primary></indexterm>gtk_icon_view_set_columns <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_icon_view_set_cursor</primary></indexterm>gtk_icon_view_set_cursor <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_icon_view_set_drag_dest_item</primary></indexterm>gtk_icon_view_set_drag_dest_item <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_icon_view_set_item_width</primary></indexterm>gtk_icon_view_set_item_width <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_icon_view_set_margin</primary></indexterm>gtk_icon_view_set_margin <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_icon_view_set_markup_column</primary></indexterm>gtk_icon_view_set_markup_column <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_icon_view_set_model</primary></indexterm>gtk_icon_view_set_model <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_icon_view_set_orientation</primary></indexterm>gtk_icon_view_set_orientation <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_icon_view_set_pixbuf_column</primary></indexterm>gtk_icon_view_set_pixbuf_column <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_icon_view_set_reorderable</primary></indexterm>gtk_icon_view_set_reorderable <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_icon_view_set_row_spacing</primary></indexterm>gtk_icon_view_set_row_spacing <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_icon_view_set_selection_mode</primary></indexterm>gtk_icon_view_set_selection_mode <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_icon_view_set_spacing</primary></indexterm>gtk_icon_view_set_spacing <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_icon_view_set_text_column</primary></indexterm>gtk_icon_view_set_text_column <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_icon_view_unselect_all</primary></indexterm>gtk_icon_view_unselect_all <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_icon_view_unselect_path</primary></indexterm>gtk_icon_view_unselect_path <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_icon_view_unset_model_drag_dest</primary></indexterm>gtk_icon_view_unset_model_drag_dest <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_icon_view_unset_model_drag_source</primary></indexterm>gtk_icon_view_unset_model_drag_source <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_identifier_get_type</primary></indexterm>gtk_identifier_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_im_context_delete_surrounding</primary></indexterm>gtk_im_context_delete_surrounding <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_im_context_filter_keypress</primary></indexterm>gtk_im_context_filter_keypress <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_im_context_focus_in</primary></indexterm>gtk_im_context_focus_in <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_im_context_focus_out</primary></indexterm>gtk_im_context_focus_out <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_im_context_get_preedit_string</primary></indexterm>gtk_im_context_get_preedit_string <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_im_context_get_surrounding</primary></indexterm>gtk_im_context_get_surrounding <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_im_context_get_type</primary></indexterm>gtk_im_context_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_im_context_reset</primary></indexterm>gtk_im_context_reset <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_im_context_set_client_window</primary></indexterm>gtk_im_context_set_client_window <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_im_context_set_cursor_location</primary></indexterm>gtk_im_context_set_cursor_location <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_im_context_set_surrounding</primary></indexterm>gtk_im_context_set_surrounding <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_im_context_set_use_preedit</primary></indexterm>gtk_im_context_set_use_preedit <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_im_context_simple_add_table</primary></indexterm>gtk_im_context_simple_add_table <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_im_context_simple_get_type</primary></indexterm>gtk_im_context_simple_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_im_context_simple_new</primary></indexterm>gtk_im_context_simple_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_im_multicontext_append_menuitems</primary></indexterm>gtk_im_multicontext_append_menuitems <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_im_multicontext_get_type</primary></indexterm>gtk_im_multicontext_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_im_multicontext_new</primary></indexterm>gtk_im_multicontext_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_im_preedit_style_get_type</primary></indexterm>gtk_im_preedit_style_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_im_status_style_get_type</primary></indexterm>gtk_im_status_style_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_image_clear</primary></indexterm>gtk_image_clear <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_image_get_animation</primary></indexterm>gtk_image_get_animation <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_image_get_icon_name</primary></indexterm>gtk_image_get_icon_name <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_image_get_icon_set</primary></indexterm>gtk_image_get_icon_set <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_image_get_image</primary></indexterm>gtk_image_get_image <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_image_get_pixbuf</primary></indexterm>gtk_image_get_pixbuf <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_image_get_pixel_size</primary></indexterm>gtk_image_get_pixel_size <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_image_get_pixmap</primary></indexterm>gtk_image_get_pixmap <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_image_get_stock</primary></indexterm>gtk_image_get_stock <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_image_get_storage_type</primary></indexterm>gtk_image_get_storage_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_image_get_type</primary></indexterm>gtk_image_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_image_menu_item_get_image</primary></indexterm>gtk_image_menu_item_get_image <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_image_menu_item_get_type</primary></indexterm>gtk_image_menu_item_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_image_menu_item_new</primary></indexterm>gtk_image_menu_item_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_image_menu_item_new_from_stock</primary></indexterm>gtk_image_menu_item_new_from_stock <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_image_menu_item_new_with_label</primary></indexterm>gtk_image_menu_item_new_with_label <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_image_menu_item_new_with_mnemonic</primary></indexterm>gtk_image_menu_item_new_with_mnemonic <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_image_menu_item_set_image</primary></indexterm>gtk_image_menu_item_set_image <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_image_new</primary></indexterm>gtk_image_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_image_new_from_animation</primary></indexterm>gtk_image_new_from_animation <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_image_new_from_file</primary></indexterm>gtk_image_new_from_file <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_image_new_from_icon_name</primary></indexterm>gtk_image_new_from_icon_name <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_image_new_from_icon_set</primary></indexterm>gtk_image_new_from_icon_set <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_image_new_from_image</primary></indexterm>gtk_image_new_from_image <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_image_new_from_pixbuf</primary></indexterm>gtk_image_new_from_pixbuf <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_image_new_from_pixmap</primary></indexterm>gtk_image_new_from_pixmap <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_image_new_from_stock</primary></indexterm>gtk_image_new_from_stock <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_image_set_from_animation</primary></indexterm>gtk_image_set_from_animation <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_image_set_from_file</primary></indexterm>gtk_image_set_from_file <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_image_set_from_icon_name</primary></indexterm>gtk_image_set_from_icon_name <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_image_set_from_icon_set</primary></indexterm>gtk_image_set_from_icon_set <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_image_set_from_image</primary></indexterm>gtk_image_set_from_image <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_image_set_from_pixbuf</primary></indexterm>gtk_image_set_from_pixbuf <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_image_set_from_pixmap</primary></indexterm>gtk_image_set_from_pixmap <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_image_set_from_stock</primary></indexterm>gtk_image_set_from_stock <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_image_set_pixel_size</primary></indexterm>gtk_image_set_pixel_size <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_image_type_get_type</primary></indexterm>gtk_image_type_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_init</primary></indexterm>gtk_init <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_init_add</primary></indexterm>gtk_init_add <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_init_check</primary></indexterm>gtk_init_check <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_init_with_args</primary></indexterm>gtk_init_with_args <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_input_dialog_get_type</primary></indexterm>gtk_input_dialog_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_input_dialog_new</primary></indexterm>gtk_input_dialog_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_invisible_get_screen</primary></indexterm>gtk_invisible_get_screen <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_invisible_get_type</primary></indexterm>gtk_invisible_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_invisible_new</primary></indexterm>gtk_invisible_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_invisible_new_for_screen</primary></indexterm>gtk_invisible_new_for_screen <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_invisible_set_screen</primary></indexterm>gtk_invisible_set_screen <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_item_deselect</primary></indexterm>gtk_item_deselect <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_item_get_type</primary></indexterm>gtk_item_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_item_select</primary></indexterm>gtk_item_select <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_item_toggle</primary></indexterm>gtk_item_toggle <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_justification_get_type</primary></indexterm>gtk_justification_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_key_snooper_install</primary></indexterm>gtk_key_snooper_install <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_key_snooper_remove</primary></indexterm>gtk_key_snooper_remove <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_label_get_angle</primary></indexterm>gtk_label_get_angle <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_label_get_attributes</primary></indexterm>gtk_label_get_attributes <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_label_get_ellipsize</primary></indexterm>gtk_label_get_ellipsize <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_label_get_justify</primary></indexterm>gtk_label_get_justify <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_label_get_label</primary></indexterm>gtk_label_get_label <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_label_get_layout</primary></indexterm>gtk_label_get_layout <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_label_get_layout_offsets</primary></indexterm>gtk_label_get_layout_offsets <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_label_get_line_wrap</primary></indexterm>gtk_label_get_line_wrap <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_label_get_line_wrap_mode</primary></indexterm>gtk_label_get_line_wrap_mode <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_label_get_max_width_chars</primary></indexterm>gtk_label_get_max_width_chars <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_label_get_mnemonic_keyval</primary></indexterm>gtk_label_get_mnemonic_keyval <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_label_get_mnemonic_widget</primary></indexterm>gtk_label_get_mnemonic_widget <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_label_get_selectable</primary></indexterm>gtk_label_get_selectable <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_label_get_selection_bounds</primary></indexterm>gtk_label_get_selection_bounds <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_label_get_single_line_mode</primary></indexterm>gtk_label_get_single_line_mode <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_label_get_text</primary></indexterm>gtk_label_get_text <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_label_get_type</primary></indexterm>gtk_label_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_label_get_use_markup</primary></indexterm>gtk_label_get_use_markup <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_label_get_use_underline</primary></indexterm>gtk_label_get_use_underline <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_label_get_width_chars</primary></indexterm>gtk_label_get_width_chars <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_label_new</primary></indexterm>gtk_label_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_label_new_with_mnemonic</primary></indexterm>gtk_label_new_with_mnemonic <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_label_select_region</primary></indexterm>gtk_label_select_region <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_label_set_angle</primary></indexterm>gtk_label_set_angle <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_label_set_attributes</primary></indexterm>gtk_label_set_attributes <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_label_set_ellipsize</primary></indexterm>gtk_label_set_ellipsize <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_label_set_justify</primary></indexterm>gtk_label_set_justify <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_label_set_label</primary></indexterm>gtk_label_set_label <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_label_set_line_wrap</primary></indexterm>gtk_label_set_line_wrap <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_label_set_line_wrap_mode</primary></indexterm>gtk_label_set_line_wrap_mode <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_label_set_markup</primary></indexterm>gtk_label_set_markup <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_label_set_markup_with_mnemonic</primary></indexterm>gtk_label_set_markup_with_mnemonic <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_label_set_max_width_chars</primary></indexterm>gtk_label_set_max_width_chars <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_label_set_mnemonic_widget</primary></indexterm>gtk_label_set_mnemonic_widget <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_label_set_pattern</primary></indexterm>gtk_label_set_pattern <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_label_set_selectable</primary></indexterm>gtk_label_set_selectable <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_label_set_single_line_mode</primary></indexterm>gtk_label_set_single_line_mode <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_label_set_text</primary></indexterm>gtk_label_set_text <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_label_set_text_with_mnemonic</primary></indexterm>gtk_label_set_text_with_mnemonic <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_label_set_use_markup</primary></indexterm>gtk_label_set_use_markup <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_label_set_use_underline</primary></indexterm>gtk_label_set_use_underline <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_label_set_width_chars</primary></indexterm>gtk_label_set_width_chars <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_layout_get_hadjustment</primary></indexterm>gtk_layout_get_hadjustment <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_layout_get_size</primary></indexterm>gtk_layout_get_size <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_layout_get_type</primary></indexterm>gtk_layout_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_layout_get_vadjustment</primary></indexterm>gtk_layout_get_vadjustment <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_layout_move</primary></indexterm>gtk_layout_move <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_layout_new</primary></indexterm>gtk_layout_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_layout_put</primary></indexterm>gtk_layout_put <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_layout_set_hadjustment</primary></indexterm>gtk_layout_set_hadjustment <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_layout_set_size</primary></indexterm>gtk_layout_set_size <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_layout_set_vadjustment</primary></indexterm>gtk_layout_set_vadjustment <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_link_button_get_type</primary></indexterm>gtk_link_button_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_link_button_get_uri</primary></indexterm>gtk_link_button_get_uri <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_link_button_new</primary></indexterm>gtk_link_button_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_link_button_new_with_label</primary></indexterm>gtk_link_button_new_with_label <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_link_button_set_uri</primary></indexterm>gtk_link_button_set_uri <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_link_button_set_uri_hook</primary></indexterm>gtk_link_button_set_uri_hook <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_list_store_append</primary></indexterm>gtk_list_store_append <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_list_store_clear</primary></indexterm>gtk_list_store_clear <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_list_store_get_type</primary></indexterm>gtk_list_store_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_list_store_insert</primary></indexterm>gtk_list_store_insert <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_list_store_insert_after</primary></indexterm>gtk_list_store_insert_after <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_list_store_insert_before</primary></indexterm>gtk_list_store_insert_before <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_list_store_insert_with_values</primary></indexterm>gtk_list_store_insert_with_values <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_list_store_insert_with_valuesv</primary></indexterm>gtk_list_store_insert_with_valuesv <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_list_store_iter_is_valid</primary></indexterm>gtk_list_store_iter_is_valid <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_list_store_move_after</primary></indexterm>gtk_list_store_move_after <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_list_store_move_before</primary></indexterm>gtk_list_store_move_before <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_list_store_new</primary></indexterm>gtk_list_store_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_list_store_newv</primary></indexterm>gtk_list_store_newv <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_list_store_prepend</primary></indexterm>gtk_list_store_prepend <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_list_store_remove</primary></indexterm>gtk_list_store_remove <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_list_store_reorder</primary></indexterm>gtk_list_store_reorder <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_list_store_set</primary></indexterm>gtk_list_store_set <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_list_store_set_column_types</primary></indexterm>gtk_list_store_set_column_types <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_list_store_set_valist</primary></indexterm>gtk_list_store_set_valist <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_list_store_set_value</primary></indexterm>gtk_list_store_set_value <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_list_store_swap</primary></indexterm>gtk_list_store_swap <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_main</primary></indexterm>gtk_main <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_main_do_event</primary></indexterm>gtk_main_do_event <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_main_iteration</primary></indexterm>gtk_main_iteration <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_main_iteration_do</primary></indexterm>gtk_main_iteration_do <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_main_level</primary></indexterm>gtk_main_level <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_main_quit</primary></indexterm>gtk_main_quit <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_match_type_get_type</primary></indexterm>gtk_match_type_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_menu_attach</primary></indexterm>gtk_menu_attach <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_menu_attach_to_widget</primary></indexterm>gtk_menu_attach_to_widget <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_menu_bar_get_child_pack_direction</primary></indexterm>gtk_menu_bar_get_child_pack_direction <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_menu_bar_get_pack_direction</primary></indexterm>gtk_menu_bar_get_pack_direction <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_menu_bar_get_type</primary></indexterm>gtk_menu_bar_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_menu_bar_new</primary></indexterm>gtk_menu_bar_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_menu_bar_set_child_pack_direction</primary></indexterm>gtk_menu_bar_set_child_pack_direction <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_menu_bar_set_pack_direction</primary></indexterm>gtk_menu_bar_set_pack_direction <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_menu_detach</primary></indexterm>gtk_menu_detach <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_menu_direction_type_get_type</primary></indexterm>gtk_menu_direction_type_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_menu_get_accel_group</primary></indexterm>gtk_menu_get_accel_group <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_menu_get_active</primary></indexterm>gtk_menu_get_active <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_menu_get_attach_widget</primary></indexterm>gtk_menu_get_attach_widget <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_menu_get_for_attach_widget</primary></indexterm>gtk_menu_get_for_attach_widget <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_menu_get_tearoff_state</primary></indexterm>gtk_menu_get_tearoff_state <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_menu_get_title</primary></indexterm>gtk_menu_get_title <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_menu_get_type</primary></indexterm>gtk_menu_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_menu_item_activate</primary></indexterm>gtk_menu_item_activate <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_menu_item_deselect</primary></indexterm>gtk_menu_item_deselect <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_menu_item_get_right_justified</primary></indexterm>gtk_menu_item_get_right_justified <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_menu_item_get_submenu</primary></indexterm>gtk_menu_item_get_submenu <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_menu_item_get_type</primary></indexterm>gtk_menu_item_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_menu_item_new</primary></indexterm>gtk_menu_item_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_menu_item_new_with_label</primary></indexterm>gtk_menu_item_new_with_label <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_menu_item_new_with_mnemonic</primary></indexterm>gtk_menu_item_new_with_mnemonic <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_menu_item_remove_submenu</primary></indexterm>gtk_menu_item_remove_submenu <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_menu_item_select</primary></indexterm>gtk_menu_item_select <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_menu_item_set_accel_path</primary></indexterm>gtk_menu_item_set_accel_path <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_menu_item_set_right_justified</primary></indexterm>gtk_menu_item_set_right_justified <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_menu_item_set_submenu</primary></indexterm>gtk_menu_item_set_submenu <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_menu_item_toggle_size_allocate</primary></indexterm>gtk_menu_item_toggle_size_allocate <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_menu_item_toggle_size_request</primary></indexterm>gtk_menu_item_toggle_size_request <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_menu_new</primary></indexterm>gtk_menu_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_menu_popdown</primary></indexterm>gtk_menu_popdown <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_menu_popup</primary></indexterm>gtk_menu_popup <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_menu_reorder_child</primary></indexterm>gtk_menu_reorder_child <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_menu_reposition</primary></indexterm>gtk_menu_reposition <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_menu_set_accel_group</primary></indexterm>gtk_menu_set_accel_group <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_menu_set_accel_path</primary></indexterm>gtk_menu_set_accel_path <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_menu_set_active</primary></indexterm>gtk_menu_set_active <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_menu_set_monitor</primary></indexterm>gtk_menu_set_monitor <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_menu_set_screen</primary></indexterm>gtk_menu_set_screen <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_menu_set_tearoff_state</primary></indexterm>gtk_menu_set_tearoff_state <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_menu_set_title</primary></indexterm>gtk_menu_set_title <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_menu_shell_activate_item</primary></indexterm>gtk_menu_shell_activate_item <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_menu_shell_append</primary></indexterm>gtk_menu_shell_append <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_menu_shell_cancel</primary></indexterm>gtk_menu_shell_cancel <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_menu_shell_deactivate</primary></indexterm>gtk_menu_shell_deactivate <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_menu_shell_deselect</primary></indexterm>gtk_menu_shell_deselect <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_menu_shell_get_take_focus</primary></indexterm>gtk_menu_shell_get_take_focus <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_menu_shell_get_type</primary></indexterm>gtk_menu_shell_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_menu_shell_insert</primary></indexterm>gtk_menu_shell_insert <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_menu_shell_prepend</primary></indexterm>gtk_menu_shell_prepend <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_menu_shell_select_first</primary></indexterm>gtk_menu_shell_select_first <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_menu_shell_select_item</primary></indexterm>gtk_menu_shell_select_item <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_menu_shell_set_take_focus</primary></indexterm>gtk_menu_shell_set_take_focus <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_menu_tool_button_get_menu</primary></indexterm>gtk_menu_tool_button_get_menu <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_menu_tool_button_get_type</primary></indexterm>gtk_menu_tool_button_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_menu_tool_button_new</primary></indexterm>gtk_menu_tool_button_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_menu_tool_button_new_from_stock</primary></indexterm>gtk_menu_tool_button_new_from_stock <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_menu_tool_button_set_arrow_tooltip</primary></indexterm>gtk_menu_tool_button_set_arrow_tooltip <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_menu_tool_button_set_menu</primary></indexterm>gtk_menu_tool_button_set_menu <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_message_dialog_format_secondary_markup</primary></indexterm>gtk_message_dialog_format_secondary_markup <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_message_dialog_format_secondary_text</primary></indexterm>gtk_message_dialog_format_secondary_text <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_message_dialog_get_type</primary></indexterm>gtk_message_dialog_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_message_dialog_new</primary></indexterm>gtk_message_dialog_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_message_dialog_new_with_markup</primary></indexterm>gtk_message_dialog_new_with_markup <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_message_dialog_set_image</primary></indexterm>gtk_message_dialog_set_image <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_message_dialog_set_markup</primary></indexterm>gtk_message_dialog_set_markup <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_message_type_get_type</primary></indexterm>gtk_message_type_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_metric_type_get_type</primary></indexterm>gtk_metric_type_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_misc_get_alignment</primary></indexterm>gtk_misc_get_alignment <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_misc_get_padding</primary></indexterm>gtk_misc_get_padding <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_misc_get_type</primary></indexterm>gtk_misc_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_misc_set_alignment</primary></indexterm>gtk_misc_set_alignment <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_misc_set_padding</primary></indexterm>gtk_misc_set_padding <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_movement_step_get_type</primary></indexterm>gtk_movement_step_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_notebook_append_page</primary></indexterm>gtk_notebook_append_page <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_notebook_append_page_menu</primary></indexterm>gtk_notebook_append_page_menu <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_notebook_get_current_page</primary></indexterm>gtk_notebook_get_current_page <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_notebook_get_menu_label</primary></indexterm>gtk_notebook_get_menu_label <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_notebook_get_menu_label_text</primary></indexterm>gtk_notebook_get_menu_label_text <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_notebook_get_n_pages</primary></indexterm>gtk_notebook_get_n_pages <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_notebook_get_nth_page</primary></indexterm>gtk_notebook_get_nth_page <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_notebook_get_scrollable</primary></indexterm>gtk_notebook_get_scrollable <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_notebook_get_show_border</primary></indexterm>gtk_notebook_get_show_border <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_notebook_get_show_tabs</primary></indexterm>gtk_notebook_get_show_tabs <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_notebook_get_tab_detachable</primary></indexterm>gtk_notebook_get_tab_detachable <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_notebook_get_tab_label</primary></indexterm>gtk_notebook_get_tab_label <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_notebook_get_tab_label_text</primary></indexterm>gtk_notebook_get_tab_label_text <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_notebook_get_tab_pos</primary></indexterm>gtk_notebook_get_tab_pos <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_notebook_get_tab_reorderable</primary></indexterm>gtk_notebook_get_tab_reorderable <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_notebook_get_type</primary></indexterm>gtk_notebook_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_notebook_insert_page</primary></indexterm>gtk_notebook_insert_page <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_notebook_insert_page_menu</primary></indexterm>gtk_notebook_insert_page_menu <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_notebook_new</primary></indexterm>gtk_notebook_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_notebook_next_page</primary></indexterm>gtk_notebook_next_page <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_notebook_page_num</primary></indexterm>gtk_notebook_page_num <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_notebook_popup_disable</primary></indexterm>gtk_notebook_popup_disable <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_notebook_popup_enable</primary></indexterm>gtk_notebook_popup_enable <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_notebook_prepend_page</primary></indexterm>gtk_notebook_prepend_page <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_notebook_prepend_page_menu</primary></indexterm>gtk_notebook_prepend_page_menu <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_notebook_prev_page</primary></indexterm>gtk_notebook_prev_page <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_notebook_query_tab_label_packing</primary></indexterm>gtk_notebook_query_tab_label_packing <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_notebook_remove_page</primary></indexterm>gtk_notebook_remove_page <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_notebook_reorder_child</primary></indexterm>gtk_notebook_reorder_child <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_notebook_set_current_page</primary></indexterm>gtk_notebook_set_current_page <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_notebook_set_menu_label</primary></indexterm>gtk_notebook_set_menu_label <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_notebook_set_menu_label_text</primary></indexterm>gtk_notebook_set_menu_label_text <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_notebook_set_scrollable</primary></indexterm>gtk_notebook_set_scrollable <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_notebook_set_show_border</primary></indexterm>gtk_notebook_set_show_border <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_notebook_set_show_tabs</primary></indexterm>gtk_notebook_set_show_tabs <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_notebook_set_tab_detachable</primary></indexterm>gtk_notebook_set_tab_detachable <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_notebook_set_tab_label</primary></indexterm>gtk_notebook_set_tab_label <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_notebook_set_tab_label_packing</primary></indexterm>gtk_notebook_set_tab_label_packing <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_notebook_set_tab_label_text</primary></indexterm>gtk_notebook_set_tab_label_text <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_notebook_set_tab_pos</primary></indexterm>gtk_notebook_set_tab_pos <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_notebook_set_tab_reorderable</primary></indexterm>gtk_notebook_set_tab_reorderable <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_notebook_set_window_creation_hook</primary></indexterm>gtk_notebook_set_window_creation_hook <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_notebook_tab_get_type</primary></indexterm>gtk_notebook_tab_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_object_destroy</primary></indexterm>gtk_object_destroy <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_object_flags_get_type</primary></indexterm>gtk_object_flags_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_object_get_type</primary></indexterm>gtk_object_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_object_sink</primary></indexterm>gtk_object_sink <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_orientation_get_type</primary></indexterm>gtk_orientation_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_pack_direction_get_type</primary></indexterm>gtk_pack_direction_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_pack_type_get_type</primary></indexterm>gtk_pack_type_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_page_orientation_get_type</primary></indexterm>gtk_page_orientation_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_page_set_get_type</primary></indexterm>gtk_page_set_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_page_setup_copy</primary></indexterm>gtk_page_setup_copy <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_page_setup_get_bottom_margin</primary></indexterm>gtk_page_setup_get_bottom_margin <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_page_setup_get_left_margin</primary></indexterm>gtk_page_setup_get_left_margin <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_page_setup_get_orientation</primary></indexterm>gtk_page_setup_get_orientation <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_page_setup_get_page_height</primary></indexterm>gtk_page_setup_get_page_height <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_page_setup_get_page_width</primary></indexterm>gtk_page_setup_get_page_width <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_page_setup_get_paper_height</primary></indexterm>gtk_page_setup_get_paper_height <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_page_setup_get_paper_size</primary></indexterm>gtk_page_setup_get_paper_size <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_page_setup_get_paper_width</primary></indexterm>gtk_page_setup_get_paper_width <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_page_setup_get_right_margin</primary></indexterm>gtk_page_setup_get_right_margin <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_page_setup_get_top_margin</primary></indexterm>gtk_page_setup_get_top_margin <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_page_setup_get_type</primary></indexterm>gtk_page_setup_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_page_setup_new</primary></indexterm>gtk_page_setup_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_page_setup_set_bottom_margin</primary></indexterm>gtk_page_setup_set_bottom_margin <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_page_setup_set_left_margin</primary></indexterm>gtk_page_setup_set_left_margin <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_page_setup_set_orientation</primary></indexterm>gtk_page_setup_set_orientation <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_page_setup_set_paper_size</primary></indexterm>gtk_page_setup_set_paper_size <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_page_setup_set_paper_size_and_default_margins</primary></indexterm>gtk_page_setup_set_paper_size_and_default_margins <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_page_setup_set_right_margin</primary></indexterm>gtk_page_setup_set_right_margin <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_page_setup_set_top_margin</primary></indexterm>gtk_page_setup_set_top_margin <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_page_setup_unix_dialog_get_page_setup</primary></indexterm>gtk_page_setup_unix_dialog_get_page_setup <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_page_setup_unix_dialog_get_print_settings</primary></indexterm>gtk_page_setup_unix_dialog_get_print_settings <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_page_setup_unix_dialog_get_type</primary></indexterm>gtk_page_setup_unix_dialog_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_page_setup_unix_dialog_new</primary></indexterm>gtk_page_setup_unix_dialog_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_page_setup_unix_dialog_set_page_setup</primary></indexterm>gtk_page_setup_unix_dialog_set_page_setup <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_page_setup_unix_dialog_set_print_settings</primary></indexterm>gtk_page_setup_unix_dialog_set_print_settings <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_paint_arrow</primary></indexterm>gtk_paint_arrow <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_paint_box</primary></indexterm>gtk_paint_box <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_paint_box_gap</primary></indexterm>gtk_paint_box_gap <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_paint_check</primary></indexterm>gtk_paint_check <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_paint_diamond</primary></indexterm>gtk_paint_diamond <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_paint_expander</primary></indexterm>gtk_paint_expander <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_paint_extension</primary></indexterm>gtk_paint_extension <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_paint_flat_box</primary></indexterm>gtk_paint_flat_box <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_paint_focus</primary></indexterm>gtk_paint_focus <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_paint_handle</primary></indexterm>gtk_paint_handle <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_paint_hline</primary></indexterm>gtk_paint_hline <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_paint_layout</primary></indexterm>gtk_paint_layout <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_paint_option</primary></indexterm>gtk_paint_option <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_paint_polygon</primary></indexterm>gtk_paint_polygon <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_paint_resize_grip</primary></indexterm>gtk_paint_resize_grip <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_paint_shadow</primary></indexterm>gtk_paint_shadow <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_paint_shadow_gap</primary></indexterm>gtk_paint_shadow_gap <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_paint_slider</primary></indexterm>gtk_paint_slider <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_paint_tab</primary></indexterm>gtk_paint_tab <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_paint_vline</primary></indexterm>gtk_paint_vline <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_paned_add1</primary></indexterm>gtk_paned_add1 <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_paned_add2</primary></indexterm>gtk_paned_add2 <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_paned_get_child1</primary></indexterm>gtk_paned_get_child1 <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_paned_get_child2</primary></indexterm>gtk_paned_get_child2 <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_paned_get_position</primary></indexterm>gtk_paned_get_position <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_paned_get_type</primary></indexterm>gtk_paned_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_paned_pack1</primary></indexterm>gtk_paned_pack1 <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_paned_pack2</primary></indexterm>gtk_paned_pack2 <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_paned_set_position</primary></indexterm>gtk_paned_set_position <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_paper_size_copy</primary></indexterm>gtk_paper_size_copy <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_paper_size_free</primary></indexterm>gtk_paper_size_free <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_paper_size_get_default</primary></indexterm>gtk_paper_size_get_default <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_paper_size_get_default_bottom_margin</primary></indexterm>gtk_paper_size_get_default_bottom_margin <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_paper_size_get_default_left_margin</primary></indexterm>gtk_paper_size_get_default_left_margin <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_paper_size_get_default_right_margin</primary></indexterm>gtk_paper_size_get_default_right_margin <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_paper_size_get_default_top_margin</primary></indexterm>gtk_paper_size_get_default_top_margin <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_paper_size_get_display_name</primary></indexterm>gtk_paper_size_get_display_name <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_paper_size_get_height</primary></indexterm>gtk_paper_size_get_height <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_paper_size_get_name</primary></indexterm>gtk_paper_size_get_name <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_paper_size_get_ppd_name</primary></indexterm>gtk_paper_size_get_ppd_name <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_paper_size_get_type</primary></indexterm>gtk_paper_size_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_paper_size_get_width</primary></indexterm>gtk_paper_size_get_width <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_paper_size_is_custom</primary></indexterm>gtk_paper_size_is_custom <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_paper_size_is_equal</primary></indexterm>gtk_paper_size_is_equal <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_paper_size_new</primary></indexterm>gtk_paper_size_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_paper_size_new_custom</primary></indexterm>gtk_paper_size_new_custom <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_paper_size_new_from_ppd</primary></indexterm>gtk_paper_size_new_from_ppd <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_paper_size_set_size</primary></indexterm>gtk_paper_size_set_size <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_parse_args</primary></indexterm>gtk_parse_args <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_path_priority_type_get_type</primary></indexterm>gtk_path_priority_type_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_path_type_get_type</primary></indexterm>gtk_path_type_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_plug_construct</primary></indexterm>gtk_plug_construct <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_plug_construct_for_display</primary></indexterm>gtk_plug_construct_for_display <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_plug_get_id</primary></indexterm>gtk_plug_get_id <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_plug_get_type</primary></indexterm>gtk_plug_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_plug_new</primary></indexterm>gtk_plug_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_plug_new_for_display</primary></indexterm>gtk_plug_new_for_display <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_policy_type_get_type</primary></indexterm>gtk_policy_type_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_position_type_get_type</primary></indexterm>gtk_position_type_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_print_capabilities_get_type</primary></indexterm>gtk_print_capabilities_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_print_context_create_pango_context</primary></indexterm>gtk_print_context_create_pango_context <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_print_context_create_pango_layout</primary></indexterm>gtk_print_context_create_pango_layout <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_print_context_get_cairo_context</primary></indexterm>gtk_print_context_get_cairo_context <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_print_context_get_dpi_x</primary></indexterm>gtk_print_context_get_dpi_x <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_print_context_get_dpi_y</primary></indexterm>gtk_print_context_get_dpi_y <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_print_context_get_height</primary></indexterm>gtk_print_context_get_height <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_print_context_get_page_setup</primary></indexterm>gtk_print_context_get_page_setup <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_print_context_get_pango_fontmap</primary></indexterm>gtk_print_context_get_pango_fontmap <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_print_context_get_type</primary></indexterm>gtk_print_context_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_print_context_get_width</primary></indexterm>gtk_print_context_get_width <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_print_context_set_cairo_context</primary></indexterm>gtk_print_context_set_cairo_context <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_print_duplex_get_type</primary></indexterm>gtk_print_duplex_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_print_error_get_type</primary></indexterm>gtk_print_error_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_print_error_quark</primary></indexterm>gtk_print_error_quark <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_print_job_get_printer</primary></indexterm>gtk_print_job_get_printer <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_print_job_get_settings</primary></indexterm>gtk_print_job_get_settings <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_print_job_get_status</primary></indexterm>gtk_print_job_get_status <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_print_job_get_surface</primary></indexterm>gtk_print_job_get_surface <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_print_job_get_title</primary></indexterm>gtk_print_job_get_title <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_print_job_get_track_print_status</primary></indexterm>gtk_print_job_get_track_print_status <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_print_job_get_type</primary></indexterm>gtk_print_job_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_print_job_new</primary></indexterm>gtk_print_job_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_print_job_send</primary></indexterm>gtk_print_job_send <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_print_job_set_source_file</primary></indexterm>gtk_print_job_set_source_file <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_print_job_set_track_print_status</primary></indexterm>gtk_print_job_set_track_print_status <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_print_operation_action_get_type</primary></indexterm>gtk_print_operation_action_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_print_operation_cancel</primary></indexterm>gtk_print_operation_cancel <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_print_operation_get_default_page_setup</primary></indexterm>gtk_print_operation_get_default_page_setup <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_print_operation_get_error</primary></indexterm>gtk_print_operation_get_error <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_print_operation_get_print_settings</primary></indexterm>gtk_print_operation_get_print_settings <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_print_operation_get_status</primary></indexterm>gtk_print_operation_get_status <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_print_operation_get_status_string</primary></indexterm>gtk_print_operation_get_status_string <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_print_operation_get_type</primary></indexterm>gtk_print_operation_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_print_operation_is_finished</primary></indexterm>gtk_print_operation_is_finished <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_print_operation_new</primary></indexterm>gtk_print_operation_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_print_operation_preview_end_preview</primary></indexterm>gtk_print_operation_preview_end_preview <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_print_operation_preview_get_type</primary></indexterm>gtk_print_operation_preview_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_print_operation_preview_is_selected</primary></indexterm>gtk_print_operation_preview_is_selected <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_print_operation_preview_render_page</primary></indexterm>gtk_print_operation_preview_render_page <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_print_operation_result_get_type</primary></indexterm>gtk_print_operation_result_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_print_operation_run</primary></indexterm>gtk_print_operation_run <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_print_operation_set_allow_async</primary></indexterm>gtk_print_operation_set_allow_async <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_print_operation_set_current_page</primary></indexterm>gtk_print_operation_set_current_page <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_print_operation_set_custom_tab_label</primary></indexterm>gtk_print_operation_set_custom_tab_label <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_print_operation_set_default_page_setup</primary></indexterm>gtk_print_operation_set_default_page_setup <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_print_operation_set_export_filename</primary></indexterm>gtk_print_operation_set_export_filename <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_print_operation_set_job_name</primary></indexterm>gtk_print_operation_set_job_name <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_print_operation_set_n_pages</primary></indexterm>gtk_print_operation_set_n_pages <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_print_operation_set_print_settings</primary></indexterm>gtk_print_operation_set_print_settings <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_print_operation_set_show_progress</primary></indexterm>gtk_print_operation_set_show_progress <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_print_operation_set_track_print_status</primary></indexterm>gtk_print_operation_set_track_print_status <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_print_operation_set_unit</primary></indexterm>gtk_print_operation_set_unit <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_print_operation_set_use_full_page</primary></indexterm>gtk_print_operation_set_use_full_page <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_print_pages_get_type</primary></indexterm>gtk_print_pages_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_print_quality_get_type</primary></indexterm>gtk_print_quality_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_print_run_page_setup_dialog</primary></indexterm>gtk_print_run_page_setup_dialog <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_print_run_page_setup_dialog_async</primary></indexterm>gtk_print_run_page_setup_dialog_async <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_print_settings_copy</primary></indexterm>gtk_print_settings_copy <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_print_settings_foreach</primary></indexterm>gtk_print_settings_foreach <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_print_settings_get</primary></indexterm>gtk_print_settings_get <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_print_settings_get_bool</primary></indexterm>gtk_print_settings_get_bool <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_print_settings_get_collate</primary></indexterm>gtk_print_settings_get_collate <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_print_settings_get_default_source</primary></indexterm>gtk_print_settings_get_default_source <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_print_settings_get_dither</primary></indexterm>gtk_print_settings_get_dither <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_print_settings_get_double</primary></indexterm>gtk_print_settings_get_double <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_print_settings_get_double_with_default</primary></indexterm>gtk_print_settings_get_double_with_default <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_print_settings_get_duplex</primary></indexterm>gtk_print_settings_get_duplex <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_print_settings_get_finishings</primary></indexterm>gtk_print_settings_get_finishings <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_print_settings_get_int</primary></indexterm>gtk_print_settings_get_int <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_print_settings_get_int_with_default</primary></indexterm>gtk_print_settings_get_int_with_default <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_print_settings_get_length</primary></indexterm>gtk_print_settings_get_length <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_print_settings_get_media_type</primary></indexterm>gtk_print_settings_get_media_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_print_settings_get_n_copies</primary></indexterm>gtk_print_settings_get_n_copies <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_print_settings_get_number_up</primary></indexterm>gtk_print_settings_get_number_up <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_print_settings_get_orientation</primary></indexterm>gtk_print_settings_get_orientation <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_print_settings_get_output_bin</primary></indexterm>gtk_print_settings_get_output_bin <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_print_settings_get_page_ranges</primary></indexterm>gtk_print_settings_get_page_ranges <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_print_settings_get_page_set</primary></indexterm>gtk_print_settings_get_page_set <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_print_settings_get_paper_height</primary></indexterm>gtk_print_settings_get_paper_height <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_print_settings_get_paper_size</primary></indexterm>gtk_print_settings_get_paper_size <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_print_settings_get_paper_width</primary></indexterm>gtk_print_settings_get_paper_width <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_print_settings_get_print_pages</primary></indexterm>gtk_print_settings_get_print_pages <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_print_settings_get_printer</primary></indexterm>gtk_print_settings_get_printer <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_print_settings_get_quality</primary></indexterm>gtk_print_settings_get_quality <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_print_settings_get_resolution</primary></indexterm>gtk_print_settings_get_resolution <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_print_settings_get_reverse</primary></indexterm>gtk_print_settings_get_reverse <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_print_settings_get_scale</primary></indexterm>gtk_print_settings_get_scale <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_print_settings_get_type</primary></indexterm>gtk_print_settings_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_print_settings_get_use_color</primary></indexterm>gtk_print_settings_get_use_color <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_print_settings_has_key</primary></indexterm>gtk_print_settings_has_key <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_print_settings_new</primary></indexterm>gtk_print_settings_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_print_settings_set</primary></indexterm>gtk_print_settings_set <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_print_settings_set_bool</primary></indexterm>gtk_print_settings_set_bool <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_print_settings_set_collate</primary></indexterm>gtk_print_settings_set_collate <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_print_settings_set_default_source</primary></indexterm>gtk_print_settings_set_default_source <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_print_settings_set_dither</primary></indexterm>gtk_print_settings_set_dither <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_print_settings_set_double</primary></indexterm>gtk_print_settings_set_double <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_print_settings_set_duplex</primary></indexterm>gtk_print_settings_set_duplex <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_print_settings_set_finishings</primary></indexterm>gtk_print_settings_set_finishings <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_print_settings_set_int</primary></indexterm>gtk_print_settings_set_int <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_print_settings_set_length</primary></indexterm>gtk_print_settings_set_length <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_print_settings_set_media_type</primary></indexterm>gtk_print_settings_set_media_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_print_settings_set_n_copies</primary></indexterm>gtk_print_settings_set_n_copies <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_print_settings_set_number_up</primary></indexterm>gtk_print_settings_set_number_up <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_print_settings_set_orientation</primary></indexterm>gtk_print_settings_set_orientation <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_print_settings_set_output_bin</primary></indexterm>gtk_print_settings_set_output_bin <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_print_settings_set_page_ranges</primary></indexterm>gtk_print_settings_set_page_ranges <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_print_settings_set_page_set</primary></indexterm>gtk_print_settings_set_page_set <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_print_settings_set_paper_height</primary></indexterm>gtk_print_settings_set_paper_height <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_print_settings_set_paper_size</primary></indexterm>gtk_print_settings_set_paper_size <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_print_settings_set_paper_width</primary></indexterm>gtk_print_settings_set_paper_width <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_print_settings_set_print_pages</primary></indexterm>gtk_print_settings_set_print_pages <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_print_settings_set_printer</primary></indexterm>gtk_print_settings_set_printer <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_print_settings_set_quality</primary></indexterm>gtk_print_settings_set_quality <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_print_settings_set_resolution</primary></indexterm>gtk_print_settings_set_resolution <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_print_settings_set_reverse</primary></indexterm>gtk_print_settings_set_reverse <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_print_settings_set_scale</primary></indexterm>gtk_print_settings_set_scale <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_print_settings_set_use_color</primary></indexterm>gtk_print_settings_set_use_color <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_print_settings_unset</primary></indexterm>gtk_print_settings_unset <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_print_status_get_type</primary></indexterm>gtk_print_status_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_print_unix_dialog_add_custom_tab</primary></indexterm>gtk_print_unix_dialog_add_custom_tab <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_print_unix_dialog_get_current_page</primary></indexterm>gtk_print_unix_dialog_get_current_page <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_print_unix_dialog_get_page_setup</primary></indexterm>gtk_print_unix_dialog_get_page_setup <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_print_unix_dialog_get_selected_printer</primary></indexterm>gtk_print_unix_dialog_get_selected_printer <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_print_unix_dialog_get_settings</primary></indexterm>gtk_print_unix_dialog_get_settings <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_print_unix_dialog_get_type</primary></indexterm>gtk_print_unix_dialog_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_print_unix_dialog_new</primary></indexterm>gtk_print_unix_dialog_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_print_unix_dialog_set_current_page</primary></indexterm>gtk_print_unix_dialog_set_current_page <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_print_unix_dialog_set_manual_capabilities</primary></indexterm>gtk_print_unix_dialog_set_manual_capabilities <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_print_unix_dialog_set_page_setup</primary></indexterm>gtk_print_unix_dialog_set_page_setup <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_print_unix_dialog_set_settings</primary></indexterm>gtk_print_unix_dialog_set_settings <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_printer_accepts_pdf</primary></indexterm>gtk_printer_accepts_pdf <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_printer_accepts_ps</primary></indexterm>gtk_printer_accepts_ps <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_printer_compare</primary></indexterm>gtk_printer_compare <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_printer_get_backend</primary></indexterm>gtk_printer_get_backend <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_printer_get_description</primary></indexterm>gtk_printer_get_description <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_printer_get_icon_name</primary></indexterm>gtk_printer_get_icon_name <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_printer_get_job_count</primary></indexterm>gtk_printer_get_job_count <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_printer_get_location</primary></indexterm>gtk_printer_get_location <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_printer_get_name</primary></indexterm>gtk_printer_get_name <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_printer_get_state_message</primary></indexterm>gtk_printer_get_state_message <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_printer_get_type</primary></indexterm>gtk_printer_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_printer_is_active</primary></indexterm>gtk_printer_is_active <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_printer_is_default</primary></indexterm>gtk_printer_is_default <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_printer_is_virtual</primary></indexterm>gtk_printer_is_virtual <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_printer_new</primary></indexterm>gtk_printer_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_progress_bar_get_ellipsize</primary></indexterm>gtk_progress_bar_get_ellipsize <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_progress_bar_get_fraction</primary></indexterm>gtk_progress_bar_get_fraction <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_progress_bar_get_orientation</primary></indexterm>gtk_progress_bar_get_orientation <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_progress_bar_get_pulse_step</primary></indexterm>gtk_progress_bar_get_pulse_step <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_progress_bar_get_text</primary></indexterm>gtk_progress_bar_get_text <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_progress_bar_get_type</primary></indexterm>gtk_progress_bar_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_progress_bar_new</primary></indexterm>gtk_progress_bar_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_progress_bar_orientation_get_type</primary></indexterm>gtk_progress_bar_orientation_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_progress_bar_pulse</primary></indexterm>gtk_progress_bar_pulse <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_progress_bar_set_ellipsize</primary></indexterm>gtk_progress_bar_set_ellipsize <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_progress_bar_set_fraction</primary></indexterm>gtk_progress_bar_set_fraction <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_progress_bar_set_orientation</primary></indexterm>gtk_progress_bar_set_orientation <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_progress_bar_set_pulse_step</primary></indexterm>gtk_progress_bar_set_pulse_step <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_progress_bar_set_text</primary></indexterm>gtk_progress_bar_set_text <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_progress_bar_style_get_type</primary></indexterm>gtk_progress_bar_style_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_propagate_event</primary></indexterm>gtk_propagate_event <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_quit_add</primary></indexterm>gtk_quit_add <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_quit_add_destroy</primary></indexterm>gtk_quit_add_destroy <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_quit_add_full</primary></indexterm>gtk_quit_add_full <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_quit_remove</primary></indexterm>gtk_quit_remove <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_quit_remove_by_data</primary></indexterm>gtk_quit_remove_by_data <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_radio_action_get_current_value</primary></indexterm>gtk_radio_action_get_current_value <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_radio_action_get_group</primary></indexterm>gtk_radio_action_get_group <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_radio_action_get_type</primary></indexterm>gtk_radio_action_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_radio_action_new</primary></indexterm>gtk_radio_action_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_radio_action_set_current_value</primary></indexterm>gtk_radio_action_set_current_value <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_radio_action_set_group</primary></indexterm>gtk_radio_action_set_group <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_radio_button_get_group</primary></indexterm>gtk_radio_button_get_group <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_radio_button_get_type</primary></indexterm>gtk_radio_button_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_radio_button_new</primary></indexterm>gtk_radio_button_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_radio_button_new_from_widget</primary></indexterm>gtk_radio_button_new_from_widget <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_radio_button_new_with_label</primary></indexterm>gtk_radio_button_new_with_label <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_radio_button_new_with_label_from_widget</primary></indexterm>gtk_radio_button_new_with_label_from_widget <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_radio_button_new_with_mnemonic</primary></indexterm>gtk_radio_button_new_with_mnemonic <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_radio_button_new_with_mnemonic_from_widget</primary></indexterm>gtk_radio_button_new_with_mnemonic_from_widget <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_radio_button_set_group</primary></indexterm>gtk_radio_button_set_group <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_radio_menu_item_get_group</primary></indexterm>gtk_radio_menu_item_get_group <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_radio_menu_item_get_type</primary></indexterm>gtk_radio_menu_item_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_radio_menu_item_new</primary></indexterm>gtk_radio_menu_item_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_radio_menu_item_new_from_widget</primary></indexterm>gtk_radio_menu_item_new_from_widget <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_radio_menu_item_new_with_label</primary></indexterm>gtk_radio_menu_item_new_with_label <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_radio_menu_item_new_with_label_from_widget</primary></indexterm>gtk_radio_menu_item_new_with_label_from_widget <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_radio_menu_item_new_with_mnemonic</primary></indexterm>gtk_radio_menu_item_new_with_mnemonic <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_radio_menu_item_new_with_mnemonic_from_widget</primary></indexterm>gtk_radio_menu_item_new_with_mnemonic_from_widget <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_radio_menu_item_set_group</primary></indexterm>gtk_radio_menu_item_set_group <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_radio_tool_button_get_group</primary></indexterm>gtk_radio_tool_button_get_group <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_radio_tool_button_get_type</primary></indexterm>gtk_radio_tool_button_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_radio_tool_button_new</primary></indexterm>gtk_radio_tool_button_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_radio_tool_button_new_from_stock</primary></indexterm>gtk_radio_tool_button_new_from_stock <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_radio_tool_button_new_from_widget</primary></indexterm>gtk_radio_tool_button_new_from_widget <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_radio_tool_button_new_with_stock_from_widget</primary></indexterm>gtk_radio_tool_button_new_with_stock_from_widget <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_radio_tool_button_set_group</primary></indexterm>gtk_radio_tool_button_set_group <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_range_get_adjustment</primary></indexterm>gtk_range_get_adjustment <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_range_get_inverted</primary></indexterm>gtk_range_get_inverted <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_range_get_lower_stepper_sensitivity</primary></indexterm>gtk_range_get_lower_stepper_sensitivity <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_range_get_type</primary></indexterm>gtk_range_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_range_get_update_policy</primary></indexterm>gtk_range_get_update_policy <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_range_get_upper_stepper_sensitivity</primary></indexterm>gtk_range_get_upper_stepper_sensitivity <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_range_get_value</primary></indexterm>gtk_range_get_value <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_range_set_adjustment</primary></indexterm>gtk_range_set_adjustment <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_range_set_increments</primary></indexterm>gtk_range_set_increments <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_range_set_inverted</primary></indexterm>gtk_range_set_inverted <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_range_set_lower_stepper_sensitivity</primary></indexterm>gtk_range_set_lower_stepper_sensitivity <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_range_set_range</primary></indexterm>gtk_range_set_range <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_range_set_update_policy</primary></indexterm>gtk_range_set_update_policy <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_range_set_upper_stepper_sensitivity</primary></indexterm>gtk_range_set_upper_stepper_sensitivity <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_range_set_value</primary></indexterm>gtk_range_set_value <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_rc_add_default_file</primary></indexterm>gtk_rc_add_default_file <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_rc_find_module_in_path</primary></indexterm>gtk_rc_find_module_in_path <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_rc_find_pixmap_in_path</primary></indexterm>gtk_rc_find_pixmap_in_path <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_rc_flags_get_type</primary></indexterm>gtk_rc_flags_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_rc_get_default_files</primary></indexterm>gtk_rc_get_default_files <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_rc_get_im_module_file</primary></indexterm>gtk_rc_get_im_module_file <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_rc_get_im_module_path</primary></indexterm>gtk_rc_get_im_module_path <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_rc_get_module_dir</primary></indexterm>gtk_rc_get_module_dir <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_rc_get_style</primary></indexterm>gtk_rc_get_style <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_rc_get_style_by_paths</primary></indexterm>gtk_rc_get_style_by_paths <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_rc_get_theme_dir</primary></indexterm>gtk_rc_get_theme_dir <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_rc_parse</primary></indexterm>gtk_rc_parse <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_rc_parse_color</primary></indexterm>gtk_rc_parse_color <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_rc_parse_priority</primary></indexterm>gtk_rc_parse_priority <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_rc_parse_state</primary></indexterm>gtk_rc_parse_state <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_rc_parse_string</primary></indexterm>gtk_rc_parse_string <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_rc_property_parse_border</primary></indexterm>gtk_rc_property_parse_border <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_rc_property_parse_color</primary></indexterm>gtk_rc_property_parse_color <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_rc_property_parse_enum</primary></indexterm>gtk_rc_property_parse_enum <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_rc_property_parse_flags</primary></indexterm>gtk_rc_property_parse_flags <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_rc_property_parse_requisition</primary></indexterm>gtk_rc_property_parse_requisition <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_rc_reparse_all</primary></indexterm>gtk_rc_reparse_all <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_rc_reparse_all_for_settings</primary></indexterm>gtk_rc_reparse_all_for_settings <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_rc_reset_styles</primary></indexterm>gtk_rc_reset_styles <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_rc_scanner_new</primary></indexterm>gtk_rc_scanner_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_rc_set_default_files</primary></indexterm>gtk_rc_set_default_files <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_rc_style_copy</primary></indexterm>gtk_rc_style_copy <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_rc_style_get_type</primary></indexterm>gtk_rc_style_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_rc_style_new</primary></indexterm>gtk_rc_style_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_rc_style_ref</primary></indexterm>gtk_rc_style_ref <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_rc_style_unref</primary></indexterm>gtk_rc_style_unref <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_rc_token_type_get_type</primary></indexterm>gtk_rc_token_type_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_recent_chooser_add_filter</primary></indexterm>gtk_recent_chooser_add_filter <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_recent_chooser_dialog_get_type</primary></indexterm>gtk_recent_chooser_dialog_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_recent_chooser_dialog_new</primary></indexterm>gtk_recent_chooser_dialog_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_recent_chooser_dialog_new_for_manager</primary></indexterm>gtk_recent_chooser_dialog_new_for_manager <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_recent_chooser_error_get_type</primary></indexterm>gtk_recent_chooser_error_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_recent_chooser_error_quark</primary></indexterm>gtk_recent_chooser_error_quark <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_recent_chooser_get_current_item</primary></indexterm>gtk_recent_chooser_get_current_item <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_recent_chooser_get_current_uri</primary></indexterm>gtk_recent_chooser_get_current_uri <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_recent_chooser_get_filter</primary></indexterm>gtk_recent_chooser_get_filter <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_recent_chooser_get_items</primary></indexterm>gtk_recent_chooser_get_items <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_recent_chooser_get_limit</primary></indexterm>gtk_recent_chooser_get_limit <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_recent_chooser_get_local_only</primary></indexterm>gtk_recent_chooser_get_local_only <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_recent_chooser_get_select_multiple</primary></indexterm>gtk_recent_chooser_get_select_multiple <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_recent_chooser_get_show_icons</primary></indexterm>gtk_recent_chooser_get_show_icons <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_recent_chooser_get_show_not_found</primary></indexterm>gtk_recent_chooser_get_show_not_found <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_recent_chooser_get_show_private</primary></indexterm>gtk_recent_chooser_get_show_private <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_recent_chooser_get_show_tips</primary></indexterm>gtk_recent_chooser_get_show_tips <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_recent_chooser_get_sort_type</primary></indexterm>gtk_recent_chooser_get_sort_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_recent_chooser_get_type</primary></indexterm>gtk_recent_chooser_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_recent_chooser_get_uris</primary></indexterm>gtk_recent_chooser_get_uris <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_recent_chooser_list_filters</primary></indexterm>gtk_recent_chooser_list_filters <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_recent_chooser_menu_get_show_numbers</primary></indexterm>gtk_recent_chooser_menu_get_show_numbers <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_recent_chooser_menu_get_type</primary></indexterm>gtk_recent_chooser_menu_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_recent_chooser_menu_new</primary></indexterm>gtk_recent_chooser_menu_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_recent_chooser_menu_new_for_manager</primary></indexterm>gtk_recent_chooser_menu_new_for_manager <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_recent_chooser_menu_set_show_numbers</primary></indexterm>gtk_recent_chooser_menu_set_show_numbers <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_recent_chooser_remove_filter</primary></indexterm>gtk_recent_chooser_remove_filter <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_recent_chooser_select_all</primary></indexterm>gtk_recent_chooser_select_all <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_recent_chooser_select_uri</primary></indexterm>gtk_recent_chooser_select_uri <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_recent_chooser_set_current_uri</primary></indexterm>gtk_recent_chooser_set_current_uri <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_recent_chooser_set_filter</primary></indexterm>gtk_recent_chooser_set_filter <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_recent_chooser_set_limit</primary></indexterm>gtk_recent_chooser_set_limit <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_recent_chooser_set_local_only</primary></indexterm>gtk_recent_chooser_set_local_only <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_recent_chooser_set_select_multiple</primary></indexterm>gtk_recent_chooser_set_select_multiple <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_recent_chooser_set_show_icons</primary></indexterm>gtk_recent_chooser_set_show_icons <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_recent_chooser_set_show_not_found</primary></indexterm>gtk_recent_chooser_set_show_not_found <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_recent_chooser_set_show_private</primary></indexterm>gtk_recent_chooser_set_show_private <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_recent_chooser_set_show_tips</primary></indexterm>gtk_recent_chooser_set_show_tips <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_recent_chooser_set_sort_func</primary></indexterm>gtk_recent_chooser_set_sort_func <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_recent_chooser_set_sort_type</primary></indexterm>gtk_recent_chooser_set_sort_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_recent_chooser_unselect_all</primary></indexterm>gtk_recent_chooser_unselect_all <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_recent_chooser_unselect_uri</primary></indexterm>gtk_recent_chooser_unselect_uri <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_recent_chooser_widget_get_type</primary></indexterm>gtk_recent_chooser_widget_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_recent_chooser_widget_new</primary></indexterm>gtk_recent_chooser_widget_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_recent_chooser_widget_new_for_manager</primary></indexterm>gtk_recent_chooser_widget_new_for_manager <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_recent_filter_add_age</primary></indexterm>gtk_recent_filter_add_age <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_recent_filter_add_application</primary></indexterm>gtk_recent_filter_add_application <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_recent_filter_add_custom</primary></indexterm>gtk_recent_filter_add_custom <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_recent_filter_add_group</primary></indexterm>gtk_recent_filter_add_group <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_recent_filter_add_mime_type</primary></indexterm>gtk_recent_filter_add_mime_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_recent_filter_add_pattern</primary></indexterm>gtk_recent_filter_add_pattern <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_recent_filter_add_pixbuf_formats</primary></indexterm>gtk_recent_filter_add_pixbuf_formats <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_recent_filter_filter</primary></indexterm>gtk_recent_filter_filter <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_recent_filter_flags_get_type</primary></indexterm>gtk_recent_filter_flags_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_recent_filter_get_name</primary></indexterm>gtk_recent_filter_get_name <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_recent_filter_get_needed</primary></indexterm>gtk_recent_filter_get_needed <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_recent_filter_get_type</primary></indexterm>gtk_recent_filter_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_recent_filter_new</primary></indexterm>gtk_recent_filter_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_recent_filter_set_name</primary></indexterm>gtk_recent_filter_set_name <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_recent_info_exists</primary></indexterm>gtk_recent_info_exists <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_recent_info_get_added</primary></indexterm>gtk_recent_info_get_added <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_recent_info_get_age</primary></indexterm>gtk_recent_info_get_age <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_recent_info_get_application_info</primary></indexterm>gtk_recent_info_get_application_info <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_recent_info_get_applications</primary></indexterm>gtk_recent_info_get_applications <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_recent_info_get_description</primary></indexterm>gtk_recent_info_get_description <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_recent_info_get_display_name</primary></indexterm>gtk_recent_info_get_display_name <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_recent_info_get_groups</primary></indexterm>gtk_recent_info_get_groups <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_recent_info_get_icon</primary></indexterm>gtk_recent_info_get_icon <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_recent_info_get_mime_type</primary></indexterm>gtk_recent_info_get_mime_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_recent_info_get_modified</primary></indexterm>gtk_recent_info_get_modified <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_recent_info_get_private_hint</primary></indexterm>gtk_recent_info_get_private_hint <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_recent_info_get_short_name</primary></indexterm>gtk_recent_info_get_short_name <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_recent_info_get_type</primary></indexterm>gtk_recent_info_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_recent_info_get_uri</primary></indexterm>gtk_recent_info_get_uri <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_recent_info_get_uri_display</primary></indexterm>gtk_recent_info_get_uri_display <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_recent_info_get_visited</primary></indexterm>gtk_recent_info_get_visited <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_recent_info_has_application</primary></indexterm>gtk_recent_info_has_application <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_recent_info_has_group</primary></indexterm>gtk_recent_info_has_group <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_recent_info_is_local</primary></indexterm>gtk_recent_info_is_local <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_recent_info_last_application</primary></indexterm>gtk_recent_info_last_application <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_recent_info_match</primary></indexterm>gtk_recent_info_match <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_recent_info_ref</primary></indexterm>gtk_recent_info_ref <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_recent_info_unref</primary></indexterm>gtk_recent_info_unref <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_recent_manager_add_full</primary></indexterm>gtk_recent_manager_add_full <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_recent_manager_add_item</primary></indexterm>gtk_recent_manager_add_item <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_recent_manager_error_get_type</primary></indexterm>gtk_recent_manager_error_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_recent_manager_error_quark</primary></indexterm>gtk_recent_manager_error_quark <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_recent_manager_get_default</primary></indexterm>gtk_recent_manager_get_default <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_recent_manager_get_items</primary></indexterm>gtk_recent_manager_get_items <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_recent_manager_get_limit</primary></indexterm>gtk_recent_manager_get_limit <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_recent_manager_get_type</primary></indexterm>gtk_recent_manager_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_recent_manager_has_item</primary></indexterm>gtk_recent_manager_has_item <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_recent_manager_lookup_item</primary></indexterm>gtk_recent_manager_lookup_item <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_recent_manager_move_item</primary></indexterm>gtk_recent_manager_move_item <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_recent_manager_new</primary></indexterm>gtk_recent_manager_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_recent_manager_purge_items</primary></indexterm>gtk_recent_manager_purge_items <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_recent_manager_remove_item</primary></indexterm>gtk_recent_manager_remove_item <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_recent_manager_set_limit</primary></indexterm>gtk_recent_manager_set_limit <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_recent_sort_type_get_type</primary></indexterm>gtk_recent_sort_type_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_relief_style_get_type</primary></indexterm>gtk_relief_style_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_requisition_copy</primary></indexterm>gtk_requisition_copy <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_requisition_free</primary></indexterm>gtk_requisition_free <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_requisition_get_type</primary></indexterm>gtk_requisition_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_resize_mode_get_type</primary></indexterm>gtk_resize_mode_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_response_type_get_type</primary></indexterm>gtk_response_type_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_ruler_draw_pos</primary></indexterm>gtk_ruler_draw_pos <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_ruler_draw_ticks</primary></indexterm>gtk_ruler_draw_ticks <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_ruler_get_metric</primary></indexterm>gtk_ruler_get_metric <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_ruler_get_range</primary></indexterm>gtk_ruler_get_range <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_ruler_get_type</primary></indexterm>gtk_ruler_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_ruler_set_metric</primary></indexterm>gtk_ruler_set_metric <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_ruler_set_range</primary></indexterm>gtk_ruler_set_range <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_scale_get_digits</primary></indexterm>gtk_scale_get_digits <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_scale_get_draw_value</primary></indexterm>gtk_scale_get_draw_value <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_scale_get_layout</primary></indexterm>gtk_scale_get_layout <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_scale_get_layout_offsets</primary></indexterm>gtk_scale_get_layout_offsets <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_scale_get_type</primary></indexterm>gtk_scale_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_scale_get_value_pos</primary></indexterm>gtk_scale_get_value_pos <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_scale_set_digits</primary></indexterm>gtk_scale_set_digits <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_scale_set_draw_value</primary></indexterm>gtk_scale_set_draw_value <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_scale_set_value_pos</primary></indexterm>gtk_scale_set_value_pos <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_scroll_step_get_type</primary></indexterm>gtk_scroll_step_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_scroll_type_get_type</primary></indexterm>gtk_scroll_type_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_scrollbar_get_type</primary></indexterm>gtk_scrollbar_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_scrolled_window_add_with_viewport</primary></indexterm>gtk_scrolled_window_add_with_viewport <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_scrolled_window_get_hadjustment</primary></indexterm>gtk_scrolled_window_get_hadjustment <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_scrolled_window_get_hscrollbar</primary></indexterm>gtk_scrolled_window_get_hscrollbar <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_scrolled_window_get_placement</primary></indexterm>gtk_scrolled_window_get_placement <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_scrolled_window_get_policy</primary></indexterm>gtk_scrolled_window_get_policy <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_scrolled_window_get_shadow_type</primary></indexterm>gtk_scrolled_window_get_shadow_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_scrolled_window_get_type</primary></indexterm>gtk_scrolled_window_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_scrolled_window_get_vadjustment</primary></indexterm>gtk_scrolled_window_get_vadjustment <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_scrolled_window_get_vscrollbar</primary></indexterm>gtk_scrolled_window_get_vscrollbar <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_scrolled_window_new</primary></indexterm>gtk_scrolled_window_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_scrolled_window_set_hadjustment</primary></indexterm>gtk_scrolled_window_set_hadjustment <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_scrolled_window_set_placement</primary></indexterm>gtk_scrolled_window_set_placement <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_scrolled_window_set_policy</primary></indexterm>gtk_scrolled_window_set_policy <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_scrolled_window_set_shadow_type</primary></indexterm>gtk_scrolled_window_set_shadow_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_scrolled_window_set_vadjustment</primary></indexterm>gtk_scrolled_window_set_vadjustment <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_scrolled_window_unset_placement</primary></indexterm>gtk_scrolled_window_unset_placement <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_selection_add_target</primary></indexterm>gtk_selection_add_target <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_selection_add_targets</primary></indexterm>gtk_selection_add_targets <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_selection_clear_targets</primary></indexterm>gtk_selection_clear_targets <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_selection_convert</primary></indexterm>gtk_selection_convert <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_selection_data_copy</primary></indexterm>gtk_selection_data_copy <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_selection_data_free</primary></indexterm>gtk_selection_data_free <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_selection_data_get_pixbuf</primary></indexterm>gtk_selection_data_get_pixbuf <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_selection_data_get_targets</primary></indexterm>gtk_selection_data_get_targets <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_selection_data_get_text</primary></indexterm>gtk_selection_data_get_text <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_selection_data_get_type</primary></indexterm>gtk_selection_data_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_selection_data_get_uris</primary></indexterm>gtk_selection_data_get_uris <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_selection_data_set</primary></indexterm>gtk_selection_data_set <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_selection_data_set_pixbuf</primary></indexterm>gtk_selection_data_set_pixbuf <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_selection_data_set_text</primary></indexterm>gtk_selection_data_set_text <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_selection_data_set_uris</primary></indexterm>gtk_selection_data_set_uris <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_selection_data_targets_include_image</primary></indexterm>gtk_selection_data_targets_include_image <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_selection_data_targets_include_rich_text</primary></indexterm>gtk_selection_data_targets_include_rich_text <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_selection_data_targets_include_text</primary></indexterm>gtk_selection_data_targets_include_text <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_selection_data_targets_include_uri</primary></indexterm>gtk_selection_data_targets_include_uri <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_selection_mode_get_type</primary></indexterm>gtk_selection_mode_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_selection_owner_set</primary></indexterm>gtk_selection_owner_set <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_selection_owner_set_for_display</primary></indexterm>gtk_selection_owner_set_for_display <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_selection_remove_all</primary></indexterm>gtk_selection_remove_all <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_sensitivity_type_get_type</primary></indexterm>gtk_sensitivity_type_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_separator_get_type</primary></indexterm>gtk_separator_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_separator_menu_item_get_type</primary></indexterm>gtk_separator_menu_item_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_separator_menu_item_new</primary></indexterm>gtk_separator_menu_item_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_separator_tool_item_get_draw</primary></indexterm>gtk_separator_tool_item_get_draw <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_separator_tool_item_get_type</primary></indexterm>gtk_separator_tool_item_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_separator_tool_item_new</primary></indexterm>gtk_separator_tool_item_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_separator_tool_item_set_draw</primary></indexterm>gtk_separator_tool_item_set_draw <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_set_locale</primary></indexterm>gtk_set_locale <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_settings_get_default</primary></indexterm>gtk_settings_get_default <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_settings_get_for_screen</primary></indexterm>gtk_settings_get_for_screen <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_settings_get_type</primary></indexterm>gtk_settings_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_settings_install_property</primary></indexterm>gtk_settings_install_property <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_settings_install_property_parser</primary></indexterm>gtk_settings_install_property_parser <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_settings_set_double_property</primary></indexterm>gtk_settings_set_double_property <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_settings_set_long_property</primary></indexterm>gtk_settings_set_long_property <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_settings_set_property_value</primary></indexterm>gtk_settings_set_property_value <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_settings_set_string_property</primary></indexterm>gtk_settings_set_string_property <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_shadow_type_get_type</primary></indexterm>gtk_shadow_type_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_show_about_dialog</primary></indexterm>gtk_show_about_dialog <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_side_type_get_type</primary></indexterm>gtk_side_type_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_signal_run_type_get_type</primary></indexterm>gtk_signal_run_type_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_size_group_add_widget</primary></indexterm>gtk_size_group_add_widget <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_size_group_get_ignore_hidden</primary></indexterm>gtk_size_group_get_ignore_hidden <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_size_group_get_mode</primary></indexterm>gtk_size_group_get_mode <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_size_group_get_type</primary></indexterm>gtk_size_group_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_size_group_get_widgets</primary></indexterm>gtk_size_group_get_widgets <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_size_group_mode_get_type</primary></indexterm>gtk_size_group_mode_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_size_group_new</primary></indexterm>gtk_size_group_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_size_group_remove_widget</primary></indexterm>gtk_size_group_remove_widget <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_size_group_set_ignore_hidden</primary></indexterm>gtk_size_group_set_ignore_hidden <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_size_group_set_mode</primary></indexterm>gtk_size_group_set_mode <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_socket_add_id</primary></indexterm>gtk_socket_add_id <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_socket_get_id</primary></indexterm>gtk_socket_get_id <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_socket_get_type</primary></indexterm>gtk_socket_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_socket_new</primary></indexterm>gtk_socket_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_sort_type_get_type</primary></indexterm>gtk_sort_type_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_spin_button_configure</primary></indexterm>gtk_spin_button_configure <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_spin_button_get_adjustment</primary></indexterm>gtk_spin_button_get_adjustment <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_spin_button_get_digits</primary></indexterm>gtk_spin_button_get_digits <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_spin_button_get_increments</primary></indexterm>gtk_spin_button_get_increments <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_spin_button_get_numeric</primary></indexterm>gtk_spin_button_get_numeric <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_spin_button_get_range</primary></indexterm>gtk_spin_button_get_range <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_spin_button_get_snap_to_ticks</primary></indexterm>gtk_spin_button_get_snap_to_ticks <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_spin_button_get_type</primary></indexterm>gtk_spin_button_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_spin_button_get_update_policy</primary></indexterm>gtk_spin_button_get_update_policy <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_spin_button_get_value</primary></indexterm>gtk_spin_button_get_value <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_spin_button_get_value_as_int</primary></indexterm>gtk_spin_button_get_value_as_int <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_spin_button_get_wrap</primary></indexterm>gtk_spin_button_get_wrap <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_spin_button_new</primary></indexterm>gtk_spin_button_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_spin_button_new_with_range</primary></indexterm>gtk_spin_button_new_with_range <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_spin_button_set_adjustment</primary></indexterm>gtk_spin_button_set_adjustment <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_spin_button_set_digits</primary></indexterm>gtk_spin_button_set_digits <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_spin_button_set_increments</primary></indexterm>gtk_spin_button_set_increments <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_spin_button_set_numeric</primary></indexterm>gtk_spin_button_set_numeric <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_spin_button_set_range</primary></indexterm>gtk_spin_button_set_range <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_spin_button_set_snap_to_ticks</primary></indexterm>gtk_spin_button_set_snap_to_ticks <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_spin_button_set_update_policy</primary></indexterm>gtk_spin_button_set_update_policy <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_spin_button_set_value</primary></indexterm>gtk_spin_button_set_value <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_spin_button_set_wrap</primary></indexterm>gtk_spin_button_set_wrap <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_spin_button_spin</primary></indexterm>gtk_spin_button_spin <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_spin_button_update</primary></indexterm>gtk_spin_button_update <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_spin_button_update_policy_get_type</primary></indexterm>gtk_spin_button_update_policy_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_spin_type_get_type</primary></indexterm>gtk_spin_type_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_state_type_get_type</primary></indexterm>gtk_state_type_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_status_icon_get_blinking</primary></indexterm>gtk_status_icon_get_blinking <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_status_icon_get_geometry</primary></indexterm>gtk_status_icon_get_geometry <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_status_icon_get_icon_name</primary></indexterm>gtk_status_icon_get_icon_name <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_status_icon_get_pixbuf</primary></indexterm>gtk_status_icon_get_pixbuf <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_status_icon_get_size</primary></indexterm>gtk_status_icon_get_size <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_status_icon_get_stock</primary></indexterm>gtk_status_icon_get_stock <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_status_icon_get_storage_type</primary></indexterm>gtk_status_icon_get_storage_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_status_icon_get_type</primary></indexterm>gtk_status_icon_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_status_icon_get_visible</primary></indexterm>gtk_status_icon_get_visible <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_status_icon_is_embedded</primary></indexterm>gtk_status_icon_is_embedded <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_status_icon_new</primary></indexterm>gtk_status_icon_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_status_icon_new_from_file</primary></indexterm>gtk_status_icon_new_from_file <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_status_icon_new_from_icon_name</primary></indexterm>gtk_status_icon_new_from_icon_name <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_status_icon_new_from_pixbuf</primary></indexterm>gtk_status_icon_new_from_pixbuf <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_status_icon_new_from_stock</primary></indexterm>gtk_status_icon_new_from_stock <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_status_icon_position_menu</primary></indexterm>gtk_status_icon_position_menu <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_status_icon_set_blinking</primary></indexterm>gtk_status_icon_set_blinking <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_status_icon_set_from_file</primary></indexterm>gtk_status_icon_set_from_file <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_status_icon_set_from_icon_name</primary></indexterm>gtk_status_icon_set_from_icon_name <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_status_icon_set_from_pixbuf</primary></indexterm>gtk_status_icon_set_from_pixbuf <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_status_icon_set_from_stock</primary></indexterm>gtk_status_icon_set_from_stock <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_status_icon_set_tooltip</primary></indexterm>gtk_status_icon_set_tooltip <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_status_icon_set_visible</primary></indexterm>gtk_status_icon_set_visible <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_statusbar_get_context_id</primary></indexterm>gtk_statusbar_get_context_id <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_statusbar_get_has_resize_grip</primary></indexterm>gtk_statusbar_get_has_resize_grip <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_statusbar_get_type</primary></indexterm>gtk_statusbar_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_statusbar_new</primary></indexterm>gtk_statusbar_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_statusbar_pop</primary></indexterm>gtk_statusbar_pop <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_statusbar_push</primary></indexterm>gtk_statusbar_push <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_statusbar_remove</primary></indexterm>gtk_statusbar_remove <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_statusbar_set_has_resize_grip</primary></indexterm>gtk_statusbar_set_has_resize_grip <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_stock_add</primary></indexterm>gtk_stock_add <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_stock_add_static</primary></indexterm>gtk_stock_add_static <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_stock_item_copy</primary></indexterm>gtk_stock_item_copy <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_stock_item_free</primary></indexterm>gtk_stock_item_free <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_stock_list_ids</primary></indexterm>gtk_stock_list_ids <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_stock_lookup</primary></indexterm>gtk_stock_lookup <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_stock_set_translate_func</primary></indexterm>gtk_stock_set_translate_func <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_style_apply_default_background</primary></indexterm>gtk_style_apply_default_background <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_style_attach</primary></indexterm>gtk_style_attach <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_style_copy</primary></indexterm>gtk_style_copy <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_style_detach</primary></indexterm>gtk_style_detach <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_style_get_type</primary></indexterm>gtk_style_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_style_lookup_color</primary></indexterm>gtk_style_lookup_color <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_style_lookup_icon_set</primary></indexterm>gtk_style_lookup_icon_set <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_style_new</primary></indexterm>gtk_style_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_style_render_icon</primary></indexterm>gtk_style_render_icon <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_style_set_background</primary></indexterm>gtk_style_set_background <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_submenu_direction_get_type</primary></indexterm>gtk_submenu_direction_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_submenu_placement_get_type</primary></indexterm>gtk_submenu_placement_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_table_attach</primary></indexterm>gtk_table_attach <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_table_attach_defaults</primary></indexterm>gtk_table_attach_defaults <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_table_get_col_spacing</primary></indexterm>gtk_table_get_col_spacing <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_table_get_default_col_spacing</primary></indexterm>gtk_table_get_default_col_spacing <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_table_get_default_row_spacing</primary></indexterm>gtk_table_get_default_row_spacing <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_table_get_homogeneous</primary></indexterm>gtk_table_get_homogeneous <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_table_get_row_spacing</primary></indexterm>gtk_table_get_row_spacing <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_table_get_type</primary></indexterm>gtk_table_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_table_new</primary></indexterm>gtk_table_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_table_resize</primary></indexterm>gtk_table_resize <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_table_set_col_spacing</primary></indexterm>gtk_table_set_col_spacing <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_table_set_col_spacings</primary></indexterm>gtk_table_set_col_spacings <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_table_set_homogeneous</primary></indexterm>gtk_table_set_homogeneous <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_table_set_row_spacing</primary></indexterm>gtk_table_set_row_spacing <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_table_set_row_spacings</primary></indexterm>gtk_table_set_row_spacings <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_target_flags_get_type</primary></indexterm>gtk_target_flags_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_target_list_add</primary></indexterm>gtk_target_list_add <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_target_list_add_image_targets</primary></indexterm>gtk_target_list_add_image_targets <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_target_list_add_rich_text_targets</primary></indexterm>gtk_target_list_add_rich_text_targets <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_target_list_add_table</primary></indexterm>gtk_target_list_add_table <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_target_list_add_text_targets</primary></indexterm>gtk_target_list_add_text_targets <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_target_list_add_uri_targets</primary></indexterm>gtk_target_list_add_uri_targets <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_target_list_find</primary></indexterm>gtk_target_list_find <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_target_list_get_type</primary></indexterm>gtk_target_list_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_target_list_new</primary></indexterm>gtk_target_list_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_target_list_ref</primary></indexterm>gtk_target_list_ref <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_target_list_remove</primary></indexterm>gtk_target_list_remove <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_target_list_unref</primary></indexterm>gtk_target_list_unref <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_target_table_free</primary></indexterm>gtk_target_table_free <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_target_table_new_from_list</primary></indexterm>gtk_target_table_new_from_list <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_targets_include_image</primary></indexterm>gtk_targets_include_image <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_targets_include_rich_text</primary></indexterm>gtk_targets_include_rich_text <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_targets_include_text</primary></indexterm>gtk_targets_include_text <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_targets_include_uri</primary></indexterm>gtk_targets_include_uri <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tearoff_menu_item_get_type</primary></indexterm>gtk_tearoff_menu_item_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tearoff_menu_item_new</primary></indexterm>gtk_tearoff_menu_item_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_text_attributes_copy</primary></indexterm>gtk_text_attributes_copy <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_text_attributes_copy_values</primary></indexterm>gtk_text_attributes_copy_values <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_text_attributes_get_type</primary></indexterm>gtk_text_attributes_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_text_attributes_new</primary></indexterm>gtk_text_attributes_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_text_attributes_ref</primary></indexterm>gtk_text_attributes_ref <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_text_attributes_unref</primary></indexterm>gtk_text_attributes_unref <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_text_buffer_add_selection_clipboard</primary></indexterm>gtk_text_buffer_add_selection_clipboard <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_text_buffer_apply_tag</primary></indexterm>gtk_text_buffer_apply_tag <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_text_buffer_apply_tag_by_name</primary></indexterm>gtk_text_buffer_apply_tag_by_name <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_text_buffer_backspace</primary></indexterm>gtk_text_buffer_backspace <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_text_buffer_begin_user_action</primary></indexterm>gtk_text_buffer_begin_user_action <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_text_buffer_copy_clipboard</primary></indexterm>gtk_text_buffer_copy_clipboard <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_text_buffer_create_child_anchor</primary></indexterm>gtk_text_buffer_create_child_anchor <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_text_buffer_create_mark</primary></indexterm>gtk_text_buffer_create_mark <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_text_buffer_create_tag</primary></indexterm>gtk_text_buffer_create_tag <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_text_buffer_cut_clipboard</primary></indexterm>gtk_text_buffer_cut_clipboard <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_text_buffer_delete</primary></indexterm>gtk_text_buffer_delete <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_text_buffer_delete_interactive</primary></indexterm>gtk_text_buffer_delete_interactive <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_text_buffer_delete_mark</primary></indexterm>gtk_text_buffer_delete_mark <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_text_buffer_delete_mark_by_name</primary></indexterm>gtk_text_buffer_delete_mark_by_name <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_text_buffer_delete_selection</primary></indexterm>gtk_text_buffer_delete_selection <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_text_buffer_deserialize</primary></indexterm>gtk_text_buffer_deserialize <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_text_buffer_deserialize_get_can_create_tags</primary></indexterm>gtk_text_buffer_deserialize_get_can_create_tags <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_text_buffer_deserialize_set_can_create_tags</primary></indexterm>gtk_text_buffer_deserialize_set_can_create_tags <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_text_buffer_end_user_action</primary></indexterm>gtk_text_buffer_end_user_action <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_text_buffer_get_bounds</primary></indexterm>gtk_text_buffer_get_bounds <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_text_buffer_get_char_count</primary></indexterm>gtk_text_buffer_get_char_count <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_text_buffer_get_copy_target_list</primary></indexterm>gtk_text_buffer_get_copy_target_list <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_text_buffer_get_deserialize_formats</primary></indexterm>gtk_text_buffer_get_deserialize_formats <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_text_buffer_get_end_iter</primary></indexterm>gtk_text_buffer_get_end_iter <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_text_buffer_get_has_selection</primary></indexterm>gtk_text_buffer_get_has_selection <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_text_buffer_get_insert</primary></indexterm>gtk_text_buffer_get_insert <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_text_buffer_get_iter_at_child_anchor</primary></indexterm>gtk_text_buffer_get_iter_at_child_anchor <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_text_buffer_get_iter_at_line</primary></indexterm>gtk_text_buffer_get_iter_at_line <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_text_buffer_get_iter_at_line_index</primary></indexterm>gtk_text_buffer_get_iter_at_line_index <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_text_buffer_get_iter_at_line_offset</primary></indexterm>gtk_text_buffer_get_iter_at_line_offset <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_text_buffer_get_iter_at_mark</primary></indexterm>gtk_text_buffer_get_iter_at_mark <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_text_buffer_get_iter_at_offset</primary></indexterm>gtk_text_buffer_get_iter_at_offset <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_text_buffer_get_line_count</primary></indexterm>gtk_text_buffer_get_line_count <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_text_buffer_get_mark</primary></indexterm>gtk_text_buffer_get_mark <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_text_buffer_get_modified</primary></indexterm>gtk_text_buffer_get_modified <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_text_buffer_get_paste_target_list</primary></indexterm>gtk_text_buffer_get_paste_target_list <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_text_buffer_get_selection_bound</primary></indexterm>gtk_text_buffer_get_selection_bound <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_text_buffer_get_selection_bounds</primary></indexterm>gtk_text_buffer_get_selection_bounds <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_text_buffer_get_serialize_formats</primary></indexterm>gtk_text_buffer_get_serialize_formats <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_text_buffer_get_slice</primary></indexterm>gtk_text_buffer_get_slice <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_text_buffer_get_start_iter</primary></indexterm>gtk_text_buffer_get_start_iter <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_text_buffer_get_tag_table</primary></indexterm>gtk_text_buffer_get_tag_table <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_text_buffer_get_text</primary></indexterm>gtk_text_buffer_get_text <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_text_buffer_get_type</primary></indexterm>gtk_text_buffer_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_text_buffer_insert</primary></indexterm>gtk_text_buffer_insert <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_text_buffer_insert_at_cursor</primary></indexterm>gtk_text_buffer_insert_at_cursor <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_text_buffer_insert_child_anchor</primary></indexterm>gtk_text_buffer_insert_child_anchor <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_text_buffer_insert_interactive</primary></indexterm>gtk_text_buffer_insert_interactive <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_text_buffer_insert_interactive_at_cursor</primary></indexterm>gtk_text_buffer_insert_interactive_at_cursor <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_text_buffer_insert_pixbuf</primary></indexterm>gtk_text_buffer_insert_pixbuf <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_text_buffer_insert_range</primary></indexterm>gtk_text_buffer_insert_range <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_text_buffer_insert_range_interactive</primary></indexterm>gtk_text_buffer_insert_range_interactive <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_text_buffer_insert_with_tags</primary></indexterm>gtk_text_buffer_insert_with_tags <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_text_buffer_insert_with_tags_by_name</primary></indexterm>gtk_text_buffer_insert_with_tags_by_name <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_text_buffer_move_mark</primary></indexterm>gtk_text_buffer_move_mark <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_text_buffer_move_mark_by_name</primary></indexterm>gtk_text_buffer_move_mark_by_name <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_text_buffer_new</primary></indexterm>gtk_text_buffer_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_text_buffer_paste_clipboard</primary></indexterm>gtk_text_buffer_paste_clipboard <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_text_buffer_place_cursor</primary></indexterm>gtk_text_buffer_place_cursor <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_text_buffer_register_deserialize_format</primary></indexterm>gtk_text_buffer_register_deserialize_format <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_text_buffer_register_deserialize_tagset</primary></indexterm>gtk_text_buffer_register_deserialize_tagset <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_text_buffer_register_serialize_format</primary></indexterm>gtk_text_buffer_register_serialize_format <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_text_buffer_register_serialize_tagset</primary></indexterm>gtk_text_buffer_register_serialize_tagset <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_text_buffer_remove_all_tags</primary></indexterm>gtk_text_buffer_remove_all_tags <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_text_buffer_remove_selection_clipboard</primary></indexterm>gtk_text_buffer_remove_selection_clipboard <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_text_buffer_remove_tag</primary></indexterm>gtk_text_buffer_remove_tag <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_text_buffer_remove_tag_by_name</primary></indexterm>gtk_text_buffer_remove_tag_by_name <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_text_buffer_select_range</primary></indexterm>gtk_text_buffer_select_range <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_text_buffer_serialize</primary></indexterm>gtk_text_buffer_serialize <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_text_buffer_set_modified</primary></indexterm>gtk_text_buffer_set_modified <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_text_buffer_set_text</primary></indexterm>gtk_text_buffer_set_text <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_text_buffer_target_info_get_type</primary></indexterm>gtk_text_buffer_target_info_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_text_buffer_unregister_deserialize_format</primary></indexterm>gtk_text_buffer_unregister_deserialize_format <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_text_buffer_unregister_serialize_format</primary></indexterm>gtk_text_buffer_unregister_serialize_format <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_text_child_anchor_get_deleted</primary></indexterm>gtk_text_child_anchor_get_deleted <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_text_child_anchor_get_type</primary></indexterm>gtk_text_child_anchor_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_text_child_anchor_get_widgets</primary></indexterm>gtk_text_child_anchor_get_widgets <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_text_child_anchor_new</primary></indexterm>gtk_text_child_anchor_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_text_direction_get_type</primary></indexterm>gtk_text_direction_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_text_iter_backward_char</primary></indexterm>gtk_text_iter_backward_char <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_text_iter_backward_chars</primary></indexterm>gtk_text_iter_backward_chars <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_text_iter_backward_cursor_position</primary></indexterm>gtk_text_iter_backward_cursor_position <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_text_iter_backward_cursor_positions</primary></indexterm>gtk_text_iter_backward_cursor_positions <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_text_iter_backward_find_char</primary></indexterm>gtk_text_iter_backward_find_char <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_text_iter_backward_line</primary></indexterm>gtk_text_iter_backward_line <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_text_iter_backward_lines</primary></indexterm>gtk_text_iter_backward_lines <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_text_iter_backward_search</primary></indexterm>gtk_text_iter_backward_search <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_text_iter_backward_sentence_start</primary></indexterm>gtk_text_iter_backward_sentence_start <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_text_iter_backward_sentence_starts</primary></indexterm>gtk_text_iter_backward_sentence_starts <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_text_iter_backward_to_tag_toggle</primary></indexterm>gtk_text_iter_backward_to_tag_toggle <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_text_iter_backward_visible_cursor_position</primary></indexterm>gtk_text_iter_backward_visible_cursor_position <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_text_iter_backward_visible_cursor_positions</primary></indexterm>gtk_text_iter_backward_visible_cursor_positions <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_text_iter_backward_visible_line</primary></indexterm>gtk_text_iter_backward_visible_line <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_text_iter_backward_visible_lines</primary></indexterm>gtk_text_iter_backward_visible_lines <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_text_iter_backward_visible_word_start</primary></indexterm>gtk_text_iter_backward_visible_word_start <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_text_iter_backward_visible_word_starts</primary></indexterm>gtk_text_iter_backward_visible_word_starts <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_text_iter_backward_word_start</primary></indexterm>gtk_text_iter_backward_word_start <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_text_iter_backward_word_starts</primary></indexterm>gtk_text_iter_backward_word_starts <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_text_iter_begins_tag</primary></indexterm>gtk_text_iter_begins_tag <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_text_iter_can_insert</primary></indexterm>gtk_text_iter_can_insert <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_text_iter_compare</primary></indexterm>gtk_text_iter_compare <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_text_iter_copy</primary></indexterm>gtk_text_iter_copy <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_text_iter_editable</primary></indexterm>gtk_text_iter_editable <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_text_iter_ends_line</primary></indexterm>gtk_text_iter_ends_line <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_text_iter_ends_sentence</primary></indexterm>gtk_text_iter_ends_sentence <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_text_iter_ends_tag</primary></indexterm>gtk_text_iter_ends_tag <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_text_iter_ends_word</primary></indexterm>gtk_text_iter_ends_word <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_text_iter_equal</primary></indexterm>gtk_text_iter_equal <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_text_iter_forward_char</primary></indexterm>gtk_text_iter_forward_char <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_text_iter_forward_chars</primary></indexterm>gtk_text_iter_forward_chars <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_text_iter_forward_cursor_position</primary></indexterm>gtk_text_iter_forward_cursor_position <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_text_iter_forward_cursor_positions</primary></indexterm>gtk_text_iter_forward_cursor_positions <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_text_iter_forward_find_char</primary></indexterm>gtk_text_iter_forward_find_char <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_text_iter_forward_line</primary></indexterm>gtk_text_iter_forward_line <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_text_iter_forward_lines</primary></indexterm>gtk_text_iter_forward_lines <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_text_iter_forward_search</primary></indexterm>gtk_text_iter_forward_search <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_text_iter_forward_sentence_end</primary></indexterm>gtk_text_iter_forward_sentence_end <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_text_iter_forward_sentence_ends</primary></indexterm>gtk_text_iter_forward_sentence_ends <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_text_iter_forward_to_end</primary></indexterm>gtk_text_iter_forward_to_end <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_text_iter_forward_to_line_end</primary></indexterm>gtk_text_iter_forward_to_line_end <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_text_iter_forward_to_tag_toggle</primary></indexterm>gtk_text_iter_forward_to_tag_toggle <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_text_iter_forward_visible_cursor_position</primary></indexterm>gtk_text_iter_forward_visible_cursor_position <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_text_iter_forward_visible_cursor_positions</primary></indexterm>gtk_text_iter_forward_visible_cursor_positions <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_text_iter_forward_visible_line</primary></indexterm>gtk_text_iter_forward_visible_line <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_text_iter_forward_visible_lines</primary></indexterm>gtk_text_iter_forward_visible_lines <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_text_iter_forward_visible_word_end</primary></indexterm>gtk_text_iter_forward_visible_word_end <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_text_iter_forward_visible_word_ends</primary></indexterm>gtk_text_iter_forward_visible_word_ends <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_text_iter_forward_word_end</primary></indexterm>gtk_text_iter_forward_word_end <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_text_iter_forward_word_ends</primary></indexterm>gtk_text_iter_forward_word_ends <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_text_iter_free</primary></indexterm>gtk_text_iter_free <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_text_iter_get_attributes</primary></indexterm>gtk_text_iter_get_attributes <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_text_iter_get_buffer</primary></indexterm>gtk_text_iter_get_buffer <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_text_iter_get_bytes_in_line</primary></indexterm>gtk_text_iter_get_bytes_in_line <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_text_iter_get_char</primary></indexterm>gtk_text_iter_get_char <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_text_iter_get_chars_in_line</primary></indexterm>gtk_text_iter_get_chars_in_line <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_text_iter_get_child_anchor</primary></indexterm>gtk_text_iter_get_child_anchor <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_text_iter_get_language</primary></indexterm>gtk_text_iter_get_language <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_text_iter_get_line</primary></indexterm>gtk_text_iter_get_line <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_text_iter_get_line_index</primary></indexterm>gtk_text_iter_get_line_index <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_text_iter_get_line_offset</primary></indexterm>gtk_text_iter_get_line_offset <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_text_iter_get_marks</primary></indexterm>gtk_text_iter_get_marks <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_text_iter_get_offset</primary></indexterm>gtk_text_iter_get_offset <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_text_iter_get_pixbuf</primary></indexterm>gtk_text_iter_get_pixbuf <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_text_iter_get_slice</primary></indexterm>gtk_text_iter_get_slice <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_text_iter_get_tags</primary></indexterm>gtk_text_iter_get_tags <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_text_iter_get_text</primary></indexterm>gtk_text_iter_get_text <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_text_iter_get_toggled_tags</primary></indexterm>gtk_text_iter_get_toggled_tags <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_text_iter_get_type</primary></indexterm>gtk_text_iter_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_text_iter_get_visible_line_index</primary></indexterm>gtk_text_iter_get_visible_line_index <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_text_iter_get_visible_line_offset</primary></indexterm>gtk_text_iter_get_visible_line_offset <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_text_iter_get_visible_slice</primary></indexterm>gtk_text_iter_get_visible_slice <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_text_iter_get_visible_text</primary></indexterm>gtk_text_iter_get_visible_text <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_text_iter_has_tag</primary></indexterm>gtk_text_iter_has_tag <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_text_iter_in_range</primary></indexterm>gtk_text_iter_in_range <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_text_iter_inside_sentence</primary></indexterm>gtk_text_iter_inside_sentence <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_text_iter_inside_word</primary></indexterm>gtk_text_iter_inside_word <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_text_iter_is_cursor_position</primary></indexterm>gtk_text_iter_is_cursor_position <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_text_iter_is_end</primary></indexterm>gtk_text_iter_is_end <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_text_iter_is_start</primary></indexterm>gtk_text_iter_is_start <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_text_iter_order</primary></indexterm>gtk_text_iter_order <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_text_iter_set_line</primary></indexterm>gtk_text_iter_set_line <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_text_iter_set_line_index</primary></indexterm>gtk_text_iter_set_line_index <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_text_iter_set_line_offset</primary></indexterm>gtk_text_iter_set_line_offset <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_text_iter_set_offset</primary></indexterm>gtk_text_iter_set_offset <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_text_iter_set_visible_line_index</primary></indexterm>gtk_text_iter_set_visible_line_index <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_text_iter_set_visible_line_offset</primary></indexterm>gtk_text_iter_set_visible_line_offset <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_text_iter_starts_line</primary></indexterm>gtk_text_iter_starts_line <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_text_iter_starts_sentence</primary></indexterm>gtk_text_iter_starts_sentence <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_text_iter_starts_word</primary></indexterm>gtk_text_iter_starts_word <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_text_iter_toggles_tag</primary></indexterm>gtk_text_iter_toggles_tag <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_text_mark_get_buffer</primary></indexterm>gtk_text_mark_get_buffer <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_text_mark_get_deleted</primary></indexterm>gtk_text_mark_get_deleted <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_text_mark_get_left_gravity</primary></indexterm>gtk_text_mark_get_left_gravity <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_text_mark_get_name</primary></indexterm>gtk_text_mark_get_name <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_text_mark_get_type</primary></indexterm>gtk_text_mark_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_text_mark_get_visible</primary></indexterm>gtk_text_mark_get_visible <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_text_mark_set_visible</primary></indexterm>gtk_text_mark_set_visible <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_text_search_flags_get_type</primary></indexterm>gtk_text_search_flags_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_text_tag_event</primary></indexterm>gtk_text_tag_event <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_text_tag_get_priority</primary></indexterm>gtk_text_tag_get_priority <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_text_tag_get_type</primary></indexterm>gtk_text_tag_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_text_tag_new</primary></indexterm>gtk_text_tag_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_text_tag_set_priority</primary></indexterm>gtk_text_tag_set_priority <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_text_tag_table_add</primary></indexterm>gtk_text_tag_table_add <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_text_tag_table_foreach</primary></indexterm>gtk_text_tag_table_foreach <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_text_tag_table_get_size</primary></indexterm>gtk_text_tag_table_get_size <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_text_tag_table_get_type</primary></indexterm>gtk_text_tag_table_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_text_tag_table_lookup</primary></indexterm>gtk_text_tag_table_lookup <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_text_tag_table_new</primary></indexterm>gtk_text_tag_table_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_text_tag_table_remove</primary></indexterm>gtk_text_tag_table_remove <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_text_view_add_child_at_anchor</primary></indexterm>gtk_text_view_add_child_at_anchor <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_text_view_add_child_in_window</primary></indexterm>gtk_text_view_add_child_in_window <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_text_view_backward_display_line</primary></indexterm>gtk_text_view_backward_display_line <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_text_view_backward_display_line_start</primary></indexterm>gtk_text_view_backward_display_line_start <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_text_view_buffer_to_window_coords</primary></indexterm>gtk_text_view_buffer_to_window_coords <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_text_view_forward_display_line</primary></indexterm>gtk_text_view_forward_display_line <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_text_view_forward_display_line_end</primary></indexterm>gtk_text_view_forward_display_line_end <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_text_view_get_accepts_tab</primary></indexterm>gtk_text_view_get_accepts_tab <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_text_view_get_border_window_size</primary></indexterm>gtk_text_view_get_border_window_size <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_text_view_get_buffer</primary></indexterm>gtk_text_view_get_buffer <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_text_view_get_cursor_visible</primary></indexterm>gtk_text_view_get_cursor_visible <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_text_view_get_default_attributes</primary></indexterm>gtk_text_view_get_default_attributes <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_text_view_get_editable</primary></indexterm>gtk_text_view_get_editable <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_text_view_get_indent</primary></indexterm>gtk_text_view_get_indent <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_text_view_get_iter_at_location</primary></indexterm>gtk_text_view_get_iter_at_location <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_text_view_get_iter_at_position</primary></indexterm>gtk_text_view_get_iter_at_position <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_text_view_get_iter_location</primary></indexterm>gtk_text_view_get_iter_location <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_text_view_get_justification</primary></indexterm>gtk_text_view_get_justification <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_text_view_get_left_margin</primary></indexterm>gtk_text_view_get_left_margin <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_text_view_get_line_at_y</primary></indexterm>gtk_text_view_get_line_at_y <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_text_view_get_line_yrange</primary></indexterm>gtk_text_view_get_line_yrange <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_text_view_get_overwrite</primary></indexterm>gtk_text_view_get_overwrite <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_text_view_get_pixels_above_lines</primary></indexterm>gtk_text_view_get_pixels_above_lines <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_text_view_get_pixels_below_lines</primary></indexterm>gtk_text_view_get_pixels_below_lines <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_text_view_get_pixels_inside_wrap</primary></indexterm>gtk_text_view_get_pixels_inside_wrap <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_text_view_get_right_margin</primary></indexterm>gtk_text_view_get_right_margin <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_text_view_get_tabs</primary></indexterm>gtk_text_view_get_tabs <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_text_view_get_type</primary></indexterm>gtk_text_view_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_text_view_get_visible_rect</primary></indexterm>gtk_text_view_get_visible_rect <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_text_view_get_window</primary></indexterm>gtk_text_view_get_window <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_text_view_get_window_type</primary></indexterm>gtk_text_view_get_window_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_text_view_get_wrap_mode</primary></indexterm>gtk_text_view_get_wrap_mode <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_text_view_move_child</primary></indexterm>gtk_text_view_move_child <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_text_view_move_mark_onscreen</primary></indexterm>gtk_text_view_move_mark_onscreen <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_text_view_move_visually</primary></indexterm>gtk_text_view_move_visually <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_text_view_new</primary></indexterm>gtk_text_view_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_text_view_new_with_buffer</primary></indexterm>gtk_text_view_new_with_buffer <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_text_view_place_cursor_onscreen</primary></indexterm>gtk_text_view_place_cursor_onscreen <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_text_view_scroll_mark_onscreen</primary></indexterm>gtk_text_view_scroll_mark_onscreen <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_text_view_scroll_to_iter</primary></indexterm>gtk_text_view_scroll_to_iter <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_text_view_scroll_to_mark</primary></indexterm>gtk_text_view_scroll_to_mark <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_text_view_set_accepts_tab</primary></indexterm>gtk_text_view_set_accepts_tab <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_text_view_set_border_window_size</primary></indexterm>gtk_text_view_set_border_window_size <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_text_view_set_buffer</primary></indexterm>gtk_text_view_set_buffer <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_text_view_set_cursor_visible</primary></indexterm>gtk_text_view_set_cursor_visible <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_text_view_set_editable</primary></indexterm>gtk_text_view_set_editable <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_text_view_set_indent</primary></indexterm>gtk_text_view_set_indent <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_text_view_set_justification</primary></indexterm>gtk_text_view_set_justification <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_text_view_set_left_margin</primary></indexterm>gtk_text_view_set_left_margin <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_text_view_set_overwrite</primary></indexterm>gtk_text_view_set_overwrite <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_text_view_set_pixels_above_lines</primary></indexterm>gtk_text_view_set_pixels_above_lines <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_text_view_set_pixels_below_lines</primary></indexterm>gtk_text_view_set_pixels_below_lines <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_text_view_set_pixels_inside_wrap</primary></indexterm>gtk_text_view_set_pixels_inside_wrap <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_text_view_set_right_margin</primary></indexterm>gtk_text_view_set_right_margin <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_text_view_set_tabs</primary></indexterm>gtk_text_view_set_tabs <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_text_view_set_wrap_mode</primary></indexterm>gtk_text_view_set_wrap_mode <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_text_view_starts_display_line</primary></indexterm>gtk_text_view_starts_display_line <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_text_view_window_to_buffer_coords</primary></indexterm>gtk_text_view_window_to_buffer_coords <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_text_window_type_get_type</primary></indexterm>gtk_text_window_type_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_toggle_action_get_active</primary></indexterm>gtk_toggle_action_get_active <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_toggle_action_get_draw_as_radio</primary></indexterm>gtk_toggle_action_get_draw_as_radio <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_toggle_action_get_type</primary></indexterm>gtk_toggle_action_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_toggle_action_new</primary></indexterm>gtk_toggle_action_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_toggle_action_set_active</primary></indexterm>gtk_toggle_action_set_active <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_toggle_action_set_draw_as_radio</primary></indexterm>gtk_toggle_action_set_draw_as_radio <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_toggle_action_toggled</primary></indexterm>gtk_toggle_action_toggled <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_toggle_button_get_active</primary></indexterm>gtk_toggle_button_get_active <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_toggle_button_get_inconsistent</primary></indexterm>gtk_toggle_button_get_inconsistent <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_toggle_button_get_mode</primary></indexterm>gtk_toggle_button_get_mode <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_toggle_button_get_type</primary></indexterm>gtk_toggle_button_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_toggle_button_new</primary></indexterm>gtk_toggle_button_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_toggle_button_new_with_label</primary></indexterm>gtk_toggle_button_new_with_label <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_toggle_button_new_with_mnemonic</primary></indexterm>gtk_toggle_button_new_with_mnemonic <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_toggle_button_set_active</primary></indexterm>gtk_toggle_button_set_active <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_toggle_button_set_inconsistent</primary></indexterm>gtk_toggle_button_set_inconsistent <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_toggle_button_set_mode</primary></indexterm>gtk_toggle_button_set_mode <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_toggle_button_toggled</primary></indexterm>gtk_toggle_button_toggled <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_toggle_tool_button_get_active</primary></indexterm>gtk_toggle_tool_button_get_active <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_toggle_tool_button_get_type</primary></indexterm>gtk_toggle_tool_button_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_toggle_tool_button_new</primary></indexterm>gtk_toggle_tool_button_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_toggle_tool_button_new_from_stock</primary></indexterm>gtk_toggle_tool_button_new_from_stock <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_toggle_tool_button_set_active</primary></indexterm>gtk_toggle_tool_button_set_active <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tool_button_get_icon_name</primary></indexterm>gtk_tool_button_get_icon_name <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tool_button_get_icon_widget</primary></indexterm>gtk_tool_button_get_icon_widget <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tool_button_get_label</primary></indexterm>gtk_tool_button_get_label <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tool_button_get_label_widget</primary></indexterm>gtk_tool_button_get_label_widget <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tool_button_get_stock_id</primary></indexterm>gtk_tool_button_get_stock_id <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tool_button_get_type</primary></indexterm>gtk_tool_button_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tool_button_get_use_underline</primary></indexterm>gtk_tool_button_get_use_underline <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tool_button_new</primary></indexterm>gtk_tool_button_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tool_button_new_from_stock</primary></indexterm>gtk_tool_button_new_from_stock <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tool_button_set_icon_name</primary></indexterm>gtk_tool_button_set_icon_name <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tool_button_set_icon_widget</primary></indexterm>gtk_tool_button_set_icon_widget <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tool_button_set_label</primary></indexterm>gtk_tool_button_set_label <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tool_button_set_label_widget</primary></indexterm>gtk_tool_button_set_label_widget <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tool_button_set_stock_id</primary></indexterm>gtk_tool_button_set_stock_id <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tool_button_set_use_underline</primary></indexterm>gtk_tool_button_set_use_underline <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tool_item_get_expand</primary></indexterm>gtk_tool_item_get_expand <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tool_item_get_homogeneous</primary></indexterm>gtk_tool_item_get_homogeneous <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tool_item_get_icon_size</primary></indexterm>gtk_tool_item_get_icon_size <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tool_item_get_is_important</primary></indexterm>gtk_tool_item_get_is_important <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tool_item_get_orientation</primary></indexterm>gtk_tool_item_get_orientation <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tool_item_get_proxy_menu_item</primary></indexterm>gtk_tool_item_get_proxy_menu_item <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tool_item_get_relief_style</primary></indexterm>gtk_tool_item_get_relief_style <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tool_item_get_toolbar_style</primary></indexterm>gtk_tool_item_get_toolbar_style <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tool_item_get_type</primary></indexterm>gtk_tool_item_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tool_item_get_use_drag_window</primary></indexterm>gtk_tool_item_get_use_drag_window <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tool_item_get_visible_horizontal</primary></indexterm>gtk_tool_item_get_visible_horizontal <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tool_item_get_visible_vertical</primary></indexterm>gtk_tool_item_get_visible_vertical <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tool_item_new</primary></indexterm>gtk_tool_item_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tool_item_rebuild_menu</primary></indexterm>gtk_tool_item_rebuild_menu <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tool_item_retrieve_proxy_menu_item</primary></indexterm>gtk_tool_item_retrieve_proxy_menu_item <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tool_item_set_expand</primary></indexterm>gtk_tool_item_set_expand <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tool_item_set_homogeneous</primary></indexterm>gtk_tool_item_set_homogeneous <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tool_item_set_is_important</primary></indexterm>gtk_tool_item_set_is_important <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tool_item_set_proxy_menu_item</primary></indexterm>gtk_tool_item_set_proxy_menu_item <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tool_item_set_tooltip</primary></indexterm>gtk_tool_item_set_tooltip <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tool_item_set_use_drag_window</primary></indexterm>gtk_tool_item_set_use_drag_window <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tool_item_set_visible_horizontal</primary></indexterm>gtk_tool_item_set_visible_horizontal <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tool_item_set_visible_vertical</primary></indexterm>gtk_tool_item_set_visible_vertical <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_toolbar_child_type_get_type</primary></indexterm>gtk_toolbar_child_type_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_toolbar_get_drop_index</primary></indexterm>gtk_toolbar_get_drop_index <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_toolbar_get_icon_size</primary></indexterm>gtk_toolbar_get_icon_size <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_toolbar_get_item_index</primary></indexterm>gtk_toolbar_get_item_index <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_toolbar_get_n_items</primary></indexterm>gtk_toolbar_get_n_items <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_toolbar_get_nth_item</primary></indexterm>gtk_toolbar_get_nth_item <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_toolbar_get_orientation</primary></indexterm>gtk_toolbar_get_orientation <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_toolbar_get_relief_style</primary></indexterm>gtk_toolbar_get_relief_style <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_toolbar_get_show_arrow</primary></indexterm>gtk_toolbar_get_show_arrow <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_toolbar_get_style</primary></indexterm>gtk_toolbar_get_style <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_toolbar_get_tooltips</primary></indexterm>gtk_toolbar_get_tooltips <LINK LINKEND="REFSTD.libgtk.x11.2.0.3">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_toolbar_get_type</primary></indexterm>gtk_toolbar_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_toolbar_insert</primary></indexterm>gtk_toolbar_insert <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_toolbar_new</primary></indexterm>gtk_toolbar_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_toolbar_set_drop_highlight_item</primary></indexterm>gtk_toolbar_set_drop_highlight_item <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_toolbar_set_icon_size</primary></indexterm>gtk_toolbar_set_icon_size <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_toolbar_set_orientation</primary></indexterm>gtk_toolbar_set_orientation <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_toolbar_set_show_arrow</primary></indexterm>gtk_toolbar_set_show_arrow <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_toolbar_set_style</primary></indexterm>gtk_toolbar_set_style <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_toolbar_set_tooltips</primary></indexterm>gtk_toolbar_set_tooltips <LINK LINKEND="REFSTD.libgtk.x11.2.0.3">[LSB]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_toolbar_space_style_get_type</primary></indexterm>gtk_toolbar_space_style_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_toolbar_style_get_type</primary></indexterm>gtk_toolbar_style_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_toolbar_unset_style</primary></indexterm>gtk_toolbar_unset_style <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tooltips_data_get</primary></indexterm>gtk_tooltips_data_get <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tooltips_disable</primary></indexterm>gtk_tooltips_disable <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tooltips_enable</primary></indexterm>gtk_tooltips_enable <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tooltips_force_window</primary></indexterm>gtk_tooltips_force_window <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tooltips_get_info_from_tip_window</primary></indexterm>gtk_tooltips_get_info_from_tip_window <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tooltips_get_type</primary></indexterm>gtk_tooltips_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tooltips_new</primary></indexterm>gtk_tooltips_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tooltips_set_tip</primary></indexterm>gtk_tooltips_set_tip <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_drag_dest_drag_data_received</primary></indexterm>gtk_tree_drag_dest_drag_data_received <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_drag_dest_get_type</primary></indexterm>gtk_tree_drag_dest_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_drag_dest_row_drop_possible</primary></indexterm>gtk_tree_drag_dest_row_drop_possible <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_drag_source_drag_data_delete</primary></indexterm>gtk_tree_drag_source_drag_data_delete <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_drag_source_drag_data_get</primary></indexterm>gtk_tree_drag_source_drag_data_get <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_drag_source_get_type</primary></indexterm>gtk_tree_drag_source_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_drag_source_row_draggable</primary></indexterm>gtk_tree_drag_source_row_draggable <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_get_row_drag_data</primary></indexterm>gtk_tree_get_row_drag_data <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_iter_copy</primary></indexterm>gtk_tree_iter_copy <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_iter_free</primary></indexterm>gtk_tree_iter_free <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_iter_get_type</primary></indexterm>gtk_tree_iter_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_model_filter_clear_cache</primary></indexterm>gtk_tree_model_filter_clear_cache <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_model_filter_convert_child_iter_to_iter</primary></indexterm>gtk_tree_model_filter_convert_child_iter_to_iter <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_model_filter_convert_child_path_to_path</primary></indexterm>gtk_tree_model_filter_convert_child_path_to_path <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_model_filter_convert_iter_to_child_iter</primary></indexterm>gtk_tree_model_filter_convert_iter_to_child_iter <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_model_filter_convert_path_to_child_path</primary></indexterm>gtk_tree_model_filter_convert_path_to_child_path <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_model_filter_get_model</primary></indexterm>gtk_tree_model_filter_get_model <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_model_filter_get_type</primary></indexterm>gtk_tree_model_filter_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_model_filter_new</primary></indexterm>gtk_tree_model_filter_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_model_filter_refilter</primary></indexterm>gtk_tree_model_filter_refilter <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_model_filter_set_modify_func</primary></indexterm>gtk_tree_model_filter_set_modify_func <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_model_filter_set_visible_column</primary></indexterm>gtk_tree_model_filter_set_visible_column <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_model_filter_set_visible_func</primary></indexterm>gtk_tree_model_filter_set_visible_func <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_model_flags_get_type</primary></indexterm>gtk_tree_model_flags_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_model_foreach</primary></indexterm>gtk_tree_model_foreach <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_model_get</primary></indexterm>gtk_tree_model_get <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_model_get_column_type</primary></indexterm>gtk_tree_model_get_column_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_model_get_flags</primary></indexterm>gtk_tree_model_get_flags <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_model_get_iter</primary></indexterm>gtk_tree_model_get_iter <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_model_get_iter_first</primary></indexterm>gtk_tree_model_get_iter_first <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_model_get_iter_from_string</primary></indexterm>gtk_tree_model_get_iter_from_string <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_model_get_n_columns</primary></indexterm>gtk_tree_model_get_n_columns <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_model_get_path</primary></indexterm>gtk_tree_model_get_path <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_model_get_string_from_iter</primary></indexterm>gtk_tree_model_get_string_from_iter <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_model_get_type</primary></indexterm>gtk_tree_model_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_model_get_valist</primary></indexterm>gtk_tree_model_get_valist <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_model_get_value</primary></indexterm>gtk_tree_model_get_value <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_model_iter_children</primary></indexterm>gtk_tree_model_iter_children <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_model_iter_has_child</primary></indexterm>gtk_tree_model_iter_has_child <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_model_iter_n_children</primary></indexterm>gtk_tree_model_iter_n_children <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_model_iter_next</primary></indexterm>gtk_tree_model_iter_next <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_model_iter_nth_child</primary></indexterm>gtk_tree_model_iter_nth_child <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_model_iter_parent</primary></indexterm>gtk_tree_model_iter_parent <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_model_ref_node</primary></indexterm>gtk_tree_model_ref_node <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_model_row_changed</primary></indexterm>gtk_tree_model_row_changed <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_model_row_deleted</primary></indexterm>gtk_tree_model_row_deleted <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_model_row_has_child_toggled</primary></indexterm>gtk_tree_model_row_has_child_toggled <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_model_row_inserted</primary></indexterm>gtk_tree_model_row_inserted <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_model_rows_reordered</primary></indexterm>gtk_tree_model_rows_reordered <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_model_sort_clear_cache</primary></indexterm>gtk_tree_model_sort_clear_cache <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_model_sort_convert_child_iter_to_iter</primary></indexterm>gtk_tree_model_sort_convert_child_iter_to_iter <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_model_sort_convert_child_path_to_path</primary></indexterm>gtk_tree_model_sort_convert_child_path_to_path <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_model_sort_convert_iter_to_child_iter</primary></indexterm>gtk_tree_model_sort_convert_iter_to_child_iter <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_model_sort_convert_path_to_child_path</primary></indexterm>gtk_tree_model_sort_convert_path_to_child_path <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_model_sort_get_model</primary></indexterm>gtk_tree_model_sort_get_model <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_model_sort_get_type</primary></indexterm>gtk_tree_model_sort_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_model_sort_iter_is_valid</primary></indexterm>gtk_tree_model_sort_iter_is_valid <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_model_sort_new_with_model</primary></indexterm>gtk_tree_model_sort_new_with_model <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_model_sort_reset_default_sort_func</primary></indexterm>gtk_tree_model_sort_reset_default_sort_func <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_model_unref_node</primary></indexterm>gtk_tree_model_unref_node <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_path_append_index</primary></indexterm>gtk_tree_path_append_index <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_path_compare</primary></indexterm>gtk_tree_path_compare <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_path_copy</primary></indexterm>gtk_tree_path_copy <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_path_down</primary></indexterm>gtk_tree_path_down <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_path_free</primary></indexterm>gtk_tree_path_free <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_path_get_depth</primary></indexterm>gtk_tree_path_get_depth <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_path_get_indices</primary></indexterm>gtk_tree_path_get_indices <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_path_get_type</primary></indexterm>gtk_tree_path_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_path_is_ancestor</primary></indexterm>gtk_tree_path_is_ancestor <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_path_is_descendant</primary></indexterm>gtk_tree_path_is_descendant <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_path_new</primary></indexterm>gtk_tree_path_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_path_new_first</primary></indexterm>gtk_tree_path_new_first <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_path_new_from_indices</primary></indexterm>gtk_tree_path_new_from_indices <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_path_new_from_string</primary></indexterm>gtk_tree_path_new_from_string <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_path_next</primary></indexterm>gtk_tree_path_next <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_path_prepend_index</primary></indexterm>gtk_tree_path_prepend_index <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_path_prev</primary></indexterm>gtk_tree_path_prev <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_path_to_string</primary></indexterm>gtk_tree_path_to_string <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_path_up</primary></indexterm>gtk_tree_path_up <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_row_reference_copy</primary></indexterm>gtk_tree_row_reference_copy <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_row_reference_deleted</primary></indexterm>gtk_tree_row_reference_deleted <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_row_reference_free</primary></indexterm>gtk_tree_row_reference_free <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_row_reference_get_model</primary></indexterm>gtk_tree_row_reference_get_model <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_row_reference_get_path</primary></indexterm>gtk_tree_row_reference_get_path <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_row_reference_get_type</primary></indexterm>gtk_tree_row_reference_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_row_reference_inserted</primary></indexterm>gtk_tree_row_reference_inserted <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_row_reference_new</primary></indexterm>gtk_tree_row_reference_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_row_reference_new_proxy</primary></indexterm>gtk_tree_row_reference_new_proxy <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_row_reference_reordered</primary></indexterm>gtk_tree_row_reference_reordered <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_row_reference_valid</primary></indexterm>gtk_tree_row_reference_valid <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_selection_count_selected_rows</primary></indexterm>gtk_tree_selection_count_selected_rows <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_selection_get_mode</primary></indexterm>gtk_tree_selection_get_mode <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_selection_get_selected</primary></indexterm>gtk_tree_selection_get_selected <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_selection_get_selected_rows</primary></indexterm>gtk_tree_selection_get_selected_rows <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_selection_get_tree_view</primary></indexterm>gtk_tree_selection_get_tree_view <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_selection_get_type</primary></indexterm>gtk_tree_selection_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_selection_get_user_data</primary></indexterm>gtk_tree_selection_get_user_data <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_selection_iter_is_selected</primary></indexterm>gtk_tree_selection_iter_is_selected <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_selection_path_is_selected</primary></indexterm>gtk_tree_selection_path_is_selected <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_selection_select_all</primary></indexterm>gtk_tree_selection_select_all <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_selection_select_iter</primary></indexterm>gtk_tree_selection_select_iter <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_selection_select_path</primary></indexterm>gtk_tree_selection_select_path <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_selection_select_range</primary></indexterm>gtk_tree_selection_select_range <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_selection_selected_foreach</primary></indexterm>gtk_tree_selection_selected_foreach <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_selection_set_mode</primary></indexterm>gtk_tree_selection_set_mode <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_selection_set_select_function</primary></indexterm>gtk_tree_selection_set_select_function <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_selection_unselect_all</primary></indexterm>gtk_tree_selection_unselect_all <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_selection_unselect_iter</primary></indexterm>gtk_tree_selection_unselect_iter <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_selection_unselect_path</primary></indexterm>gtk_tree_selection_unselect_path <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_selection_unselect_range</primary></indexterm>gtk_tree_selection_unselect_range <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_set_row_drag_data</primary></indexterm>gtk_tree_set_row_drag_data <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_sortable_get_sort_column_id</primary></indexterm>gtk_tree_sortable_get_sort_column_id <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_sortable_get_type</primary></indexterm>gtk_tree_sortable_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_sortable_has_default_sort_func</primary></indexterm>gtk_tree_sortable_has_default_sort_func <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_sortable_set_default_sort_func</primary></indexterm>gtk_tree_sortable_set_default_sort_func <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_sortable_set_sort_column_id</primary></indexterm>gtk_tree_sortable_set_sort_column_id <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_sortable_set_sort_func</primary></indexterm>gtk_tree_sortable_set_sort_func <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_sortable_sort_column_changed</primary></indexterm>gtk_tree_sortable_sort_column_changed <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_store_append</primary></indexterm>gtk_tree_store_append <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_store_clear</primary></indexterm>gtk_tree_store_clear <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_store_get_type</primary></indexterm>gtk_tree_store_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_store_insert</primary></indexterm>gtk_tree_store_insert <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_store_insert_after</primary></indexterm>gtk_tree_store_insert_after <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_store_insert_before</primary></indexterm>gtk_tree_store_insert_before <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_store_insert_with_values</primary></indexterm>gtk_tree_store_insert_with_values <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_store_insert_with_valuesv</primary></indexterm>gtk_tree_store_insert_with_valuesv <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_store_is_ancestor</primary></indexterm>gtk_tree_store_is_ancestor <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_store_iter_depth</primary></indexterm>gtk_tree_store_iter_depth <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_store_iter_is_valid</primary></indexterm>gtk_tree_store_iter_is_valid <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_store_move_after</primary></indexterm>gtk_tree_store_move_after <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_store_move_before</primary></indexterm>gtk_tree_store_move_before <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_store_new</primary></indexterm>gtk_tree_store_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_store_newv</primary></indexterm>gtk_tree_store_newv <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_store_prepend</primary></indexterm>gtk_tree_store_prepend <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_store_remove</primary></indexterm>gtk_tree_store_remove <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_store_reorder</primary></indexterm>gtk_tree_store_reorder <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_store_set</primary></indexterm>gtk_tree_store_set <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_store_set_column_types</primary></indexterm>gtk_tree_store_set_column_types <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_store_set_valist</primary></indexterm>gtk_tree_store_set_valist <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_store_set_value</primary></indexterm>gtk_tree_store_set_value <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_store_swap</primary></indexterm>gtk_tree_store_swap <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_view_append_column</primary></indexterm>gtk_tree_view_append_column <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_view_collapse_all</primary></indexterm>gtk_tree_view_collapse_all <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_view_collapse_row</primary></indexterm>gtk_tree_view_collapse_row <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_view_column_add_attribute</primary></indexterm>gtk_tree_view_column_add_attribute <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_view_column_cell_get_position</primary></indexterm>gtk_tree_view_column_cell_get_position <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_view_column_cell_get_size</primary></indexterm>gtk_tree_view_column_cell_get_size <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_view_column_cell_is_visible</primary></indexterm>gtk_tree_view_column_cell_is_visible <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_view_column_cell_set_cell_data</primary></indexterm>gtk_tree_view_column_cell_set_cell_data <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_view_column_clear</primary></indexterm>gtk_tree_view_column_clear <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_view_column_clear_attributes</primary></indexterm>gtk_tree_view_column_clear_attributes <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_view_column_clicked</primary></indexterm>gtk_tree_view_column_clicked <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_view_column_focus_cell</primary></indexterm>gtk_tree_view_column_focus_cell <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_view_column_get_alignment</primary></indexterm>gtk_tree_view_column_get_alignment <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_view_column_get_cell_renderers</primary></indexterm>gtk_tree_view_column_get_cell_renderers <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_view_column_get_clickable</primary></indexterm>gtk_tree_view_column_get_clickable <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_view_column_get_expand</primary></indexterm>gtk_tree_view_column_get_expand <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_view_column_get_fixed_width</primary></indexterm>gtk_tree_view_column_get_fixed_width <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_view_column_get_max_width</primary></indexterm>gtk_tree_view_column_get_max_width <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_view_column_get_min_width</primary></indexterm>gtk_tree_view_column_get_min_width <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_view_column_get_reorderable</primary></indexterm>gtk_tree_view_column_get_reorderable <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_view_column_get_resizable</primary></indexterm>gtk_tree_view_column_get_resizable <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_view_column_get_sizing</primary></indexterm>gtk_tree_view_column_get_sizing <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_view_column_get_sort_column_id</primary></indexterm>gtk_tree_view_column_get_sort_column_id <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_view_column_get_sort_indicator</primary></indexterm>gtk_tree_view_column_get_sort_indicator <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_view_column_get_sort_order</primary></indexterm>gtk_tree_view_column_get_sort_order <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_view_column_get_spacing</primary></indexterm>gtk_tree_view_column_get_spacing <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_view_column_get_title</primary></indexterm>gtk_tree_view_column_get_title <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_view_column_get_type</primary></indexterm>gtk_tree_view_column_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_view_column_get_visible</primary></indexterm>gtk_tree_view_column_get_visible <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_view_column_get_widget</primary></indexterm>gtk_tree_view_column_get_widget <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_view_column_get_width</primary></indexterm>gtk_tree_view_column_get_width <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_view_column_new</primary></indexterm>gtk_tree_view_column_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_view_column_new_with_attributes</primary></indexterm>gtk_tree_view_column_new_with_attributes <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_view_column_pack_end</primary></indexterm>gtk_tree_view_column_pack_end <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_view_column_pack_start</primary></indexterm>gtk_tree_view_column_pack_start <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_view_column_queue_resize</primary></indexterm>gtk_tree_view_column_queue_resize <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_view_column_set_alignment</primary></indexterm>gtk_tree_view_column_set_alignment <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_view_column_set_attributes</primary></indexterm>gtk_tree_view_column_set_attributes <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_view_column_set_cell_data_func</primary></indexterm>gtk_tree_view_column_set_cell_data_func <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_view_column_set_clickable</primary></indexterm>gtk_tree_view_column_set_clickable <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_view_column_set_expand</primary></indexterm>gtk_tree_view_column_set_expand <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_view_column_set_fixed_width</primary></indexterm>gtk_tree_view_column_set_fixed_width <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_view_column_set_max_width</primary></indexterm>gtk_tree_view_column_set_max_width <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_view_column_set_min_width</primary></indexterm>gtk_tree_view_column_set_min_width <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_view_column_set_reorderable</primary></indexterm>gtk_tree_view_column_set_reorderable <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_view_column_set_resizable</primary></indexterm>gtk_tree_view_column_set_resizable <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_view_column_set_sizing</primary></indexterm>gtk_tree_view_column_set_sizing <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_view_column_set_sort_column_id</primary></indexterm>gtk_tree_view_column_set_sort_column_id <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_view_column_set_sort_indicator</primary></indexterm>gtk_tree_view_column_set_sort_indicator <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_view_column_set_sort_order</primary></indexterm>gtk_tree_view_column_set_sort_order <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_view_column_set_spacing</primary></indexterm>gtk_tree_view_column_set_spacing <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_view_column_set_title</primary></indexterm>gtk_tree_view_column_set_title <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_view_column_set_visible</primary></indexterm>gtk_tree_view_column_set_visible <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_view_column_set_widget</primary></indexterm>gtk_tree_view_column_set_widget <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_view_column_sizing_get_type</primary></indexterm>gtk_tree_view_column_sizing_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_view_columns_autosize</primary></indexterm>gtk_tree_view_columns_autosize <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_view_create_row_drag_icon</primary></indexterm>gtk_tree_view_create_row_drag_icon <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_view_drop_position_get_type</primary></indexterm>gtk_tree_view_drop_position_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_view_enable_model_drag_dest</primary></indexterm>gtk_tree_view_enable_model_drag_dest <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_view_enable_model_drag_source</primary></indexterm>gtk_tree_view_enable_model_drag_source <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_view_expand_all</primary></indexterm>gtk_tree_view_expand_all <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_view_expand_row</primary></indexterm>gtk_tree_view_expand_row <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_view_expand_to_path</primary></indexterm>gtk_tree_view_expand_to_path <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_view_get_background_area</primary></indexterm>gtk_tree_view_get_background_area <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_view_get_bin_window</primary></indexterm>gtk_tree_view_get_bin_window <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_view_get_cell_area</primary></indexterm>gtk_tree_view_get_cell_area <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_view_get_column</primary></indexterm>gtk_tree_view_get_column <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_view_get_columns</primary></indexterm>gtk_tree_view_get_columns <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_view_get_cursor</primary></indexterm>gtk_tree_view_get_cursor <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_view_get_dest_row_at_pos</primary></indexterm>gtk_tree_view_get_dest_row_at_pos <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_view_get_drag_dest_row</primary></indexterm>gtk_tree_view_get_drag_dest_row <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_view_get_enable_search</primary></indexterm>gtk_tree_view_get_enable_search <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_view_get_enable_tree_lines</primary></indexterm>gtk_tree_view_get_enable_tree_lines <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_view_get_expander_column</primary></indexterm>gtk_tree_view_get_expander_column <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_view_get_fixed_height_mode</primary></indexterm>gtk_tree_view_get_fixed_height_mode <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_view_get_grid_lines</primary></indexterm>gtk_tree_view_get_grid_lines <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_view_get_hadjustment</primary></indexterm>gtk_tree_view_get_hadjustment <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_view_get_headers_clickable</primary></indexterm>gtk_tree_view_get_headers_clickable <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_view_get_headers_visible</primary></indexterm>gtk_tree_view_get_headers_visible <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_view_get_hover_expand</primary></indexterm>gtk_tree_view_get_hover_expand <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_view_get_hover_selection</primary></indexterm>gtk_tree_view_get_hover_selection <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_view_get_model</primary></indexterm>gtk_tree_view_get_model <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_view_get_path_at_pos</primary></indexterm>gtk_tree_view_get_path_at_pos <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_view_get_reorderable</primary></indexterm>gtk_tree_view_get_reorderable <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_view_get_row_separator_func</primary></indexterm>gtk_tree_view_get_row_separator_func <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_view_get_rubber_banding</primary></indexterm>gtk_tree_view_get_rubber_banding <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_view_get_rules_hint</primary></indexterm>gtk_tree_view_get_rules_hint <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_view_get_search_column</primary></indexterm>gtk_tree_view_get_search_column <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_view_get_search_entry</primary></indexterm>gtk_tree_view_get_search_entry <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_view_get_search_equal_func</primary></indexterm>gtk_tree_view_get_search_equal_func <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_view_get_search_position_func</primary></indexterm>gtk_tree_view_get_search_position_func <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_view_get_selection</primary></indexterm>gtk_tree_view_get_selection <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_view_get_type</primary></indexterm>gtk_tree_view_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_view_get_vadjustment</primary></indexterm>gtk_tree_view_get_vadjustment <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_view_get_visible_range</primary></indexterm>gtk_tree_view_get_visible_range <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_view_get_visible_rect</primary></indexterm>gtk_tree_view_get_visible_rect <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_view_grid_lines_get_type</primary></indexterm>gtk_tree_view_grid_lines_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_view_insert_column</primary></indexterm>gtk_tree_view_insert_column <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_view_insert_column_with_attributes</primary></indexterm>gtk_tree_view_insert_column_with_attributes <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_view_insert_column_with_data_func</primary></indexterm>gtk_tree_view_insert_column_with_data_func <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_view_map_expanded_rows</primary></indexterm>gtk_tree_view_map_expanded_rows <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_view_mode_get_type</primary></indexterm>gtk_tree_view_mode_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_view_move_column_after</primary></indexterm>gtk_tree_view_move_column_after <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_view_new</primary></indexterm>gtk_tree_view_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_view_new_with_model</primary></indexterm>gtk_tree_view_new_with_model <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_view_remove_column</primary></indexterm>gtk_tree_view_remove_column <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_view_row_activated</primary></indexterm>gtk_tree_view_row_activated <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_view_row_expanded</primary></indexterm>gtk_tree_view_row_expanded <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_view_scroll_to_cell</primary></indexterm>gtk_tree_view_scroll_to_cell <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_view_scroll_to_point</primary></indexterm>gtk_tree_view_scroll_to_point <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_view_set_column_drag_function</primary></indexterm>gtk_tree_view_set_column_drag_function <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_view_set_cursor</primary></indexterm>gtk_tree_view_set_cursor <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_view_set_cursor_on_cell</primary></indexterm>gtk_tree_view_set_cursor_on_cell <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_view_set_destroy_count_func</primary></indexterm>gtk_tree_view_set_destroy_count_func <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_view_set_drag_dest_row</primary></indexterm>gtk_tree_view_set_drag_dest_row <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_view_set_enable_search</primary></indexterm>gtk_tree_view_set_enable_search <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_view_set_enable_tree_lines</primary></indexterm>gtk_tree_view_set_enable_tree_lines <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_view_set_expander_column</primary></indexterm>gtk_tree_view_set_expander_column <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_view_set_fixed_height_mode</primary></indexterm>gtk_tree_view_set_fixed_height_mode <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_view_set_grid_lines</primary></indexterm>gtk_tree_view_set_grid_lines <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_view_set_hadjustment</primary></indexterm>gtk_tree_view_set_hadjustment <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_view_set_headers_clickable</primary></indexterm>gtk_tree_view_set_headers_clickable <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_view_set_headers_visible</primary></indexterm>gtk_tree_view_set_headers_visible <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_view_set_hover_expand</primary></indexterm>gtk_tree_view_set_hover_expand <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_view_set_hover_selection</primary></indexterm>gtk_tree_view_set_hover_selection <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_view_set_model</primary></indexterm>gtk_tree_view_set_model <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_view_set_reorderable</primary></indexterm>gtk_tree_view_set_reorderable <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_view_set_row_separator_func</primary></indexterm>gtk_tree_view_set_row_separator_func <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_view_set_rubber_banding</primary></indexterm>gtk_tree_view_set_rubber_banding <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_view_set_rules_hint</primary></indexterm>gtk_tree_view_set_rules_hint <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_view_set_search_column</primary></indexterm>gtk_tree_view_set_search_column <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_view_set_search_entry</primary></indexterm>gtk_tree_view_set_search_entry <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_view_set_search_equal_func</primary></indexterm>gtk_tree_view_set_search_equal_func <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_view_set_search_position_func</primary></indexterm>gtk_tree_view_set_search_position_func <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_view_set_vadjustment</primary></indexterm>gtk_tree_view_set_vadjustment <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_view_tree_to_widget_coords</primary></indexterm>gtk_tree_view_tree_to_widget_coords <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_view_unset_rows_drag_dest</primary></indexterm>gtk_tree_view_unset_rows_drag_dest <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_view_unset_rows_drag_source</primary></indexterm>gtk_tree_view_unset_rows_drag_source <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_view_widget_to_tree_coords</primary></indexterm>gtk_tree_view_widget_to_tree_coords <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_true</primary></indexterm>gtk_true <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_type_class</primary></indexterm>gtk_type_class <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_ui_manager_add_ui</primary></indexterm>gtk_ui_manager_add_ui <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_ui_manager_add_ui_from_file</primary></indexterm>gtk_ui_manager_add_ui_from_file <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_ui_manager_add_ui_from_string</primary></indexterm>gtk_ui_manager_add_ui_from_string <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_ui_manager_ensure_update</primary></indexterm>gtk_ui_manager_ensure_update <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_ui_manager_get_accel_group</primary></indexterm>gtk_ui_manager_get_accel_group <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_ui_manager_get_action</primary></indexterm>gtk_ui_manager_get_action <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_ui_manager_get_action_groups</primary></indexterm>gtk_ui_manager_get_action_groups <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_ui_manager_get_add_tearoffs</primary></indexterm>gtk_ui_manager_get_add_tearoffs <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_ui_manager_get_toplevels</primary></indexterm>gtk_ui_manager_get_toplevels <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_ui_manager_get_type</primary></indexterm>gtk_ui_manager_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_ui_manager_get_ui</primary></indexterm>gtk_ui_manager_get_ui <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_ui_manager_get_widget</primary></indexterm>gtk_ui_manager_get_widget <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_ui_manager_insert_action_group</primary></indexterm>gtk_ui_manager_insert_action_group <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_ui_manager_item_type_get_type</primary></indexterm>gtk_ui_manager_item_type_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_ui_manager_new</primary></indexterm>gtk_ui_manager_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_ui_manager_new_merge_id</primary></indexterm>gtk_ui_manager_new_merge_id <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_ui_manager_remove_action_group</primary></indexterm>gtk_ui_manager_remove_action_group <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_ui_manager_remove_ui</primary></indexterm>gtk_ui_manager_remove_ui <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_ui_manager_set_add_tearoffs</primary></indexterm>gtk_ui_manager_set_add_tearoffs <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_unit_get_type</primary></indexterm>gtk_unit_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_update_type_get_type</primary></indexterm>gtk_update_type_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_vbox_get_type</primary></indexterm>gtk_vbox_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_vbox_new</primary></indexterm>gtk_vbox_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_vbutton_box_get_type</primary></indexterm>gtk_vbutton_box_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_vbutton_box_new</primary></indexterm>gtk_vbutton_box_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_viewport_get_hadjustment</primary></indexterm>gtk_viewport_get_hadjustment <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_viewport_get_shadow_type</primary></indexterm>gtk_viewport_get_shadow_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_viewport_get_type</primary></indexterm>gtk_viewport_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_viewport_get_vadjustment</primary></indexterm>gtk_viewport_get_vadjustment <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_viewport_new</primary></indexterm>gtk_viewport_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_viewport_set_hadjustment</primary></indexterm>gtk_viewport_set_hadjustment <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_viewport_set_shadow_type</primary></indexterm>gtk_viewport_set_shadow_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_viewport_set_vadjustment</primary></indexterm>gtk_viewport_set_vadjustment <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_visibility_get_type</primary></indexterm>gtk_visibility_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_vpaned_get_type</primary></indexterm>gtk_vpaned_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_vpaned_new</primary></indexterm>gtk_vpaned_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_vruler_get_type</primary></indexterm>gtk_vruler_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_vruler_new</primary></indexterm>gtk_vruler_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_vscale_get_type</primary></indexterm>gtk_vscale_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_vscale_new</primary></indexterm>gtk_vscale_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_vscale_new_with_range</primary></indexterm>gtk_vscale_new_with_range <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_vscrollbar_get_type</primary></indexterm>gtk_vscrollbar_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_vscrollbar_new</primary></indexterm>gtk_vscrollbar_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_vseparator_get_type</primary></indexterm>gtk_vseparator_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_vseparator_new</primary></indexterm>gtk_vseparator_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_widget_activate</primary></indexterm>gtk_widget_activate <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_widget_add_accelerator</primary></indexterm>gtk_widget_add_accelerator <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_widget_add_events</primary></indexterm>gtk_widget_add_events <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_widget_add_mnemonic_label</primary></indexterm>gtk_widget_add_mnemonic_label <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_widget_can_activate_accel</primary></indexterm>gtk_widget_can_activate_accel <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_widget_child_focus</primary></indexterm>gtk_widget_child_focus <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_widget_child_notify</primary></indexterm>gtk_widget_child_notify <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_widget_class_find_style_property</primary></indexterm>gtk_widget_class_find_style_property <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_widget_class_install_style_property</primary></indexterm>gtk_widget_class_install_style_property <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_widget_class_install_style_property_parser</primary></indexterm>gtk_widget_class_install_style_property_parser <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_widget_class_list_style_properties</primary></indexterm>gtk_widget_class_list_style_properties <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_widget_class_path</primary></indexterm>gtk_widget_class_path <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_widget_create_pango_context</primary></indexterm>gtk_widget_create_pango_context <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_widget_create_pango_layout</primary></indexterm>gtk_widget_create_pango_layout <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_widget_destroy</primary></indexterm>gtk_widget_destroy <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_widget_destroyed</primary></indexterm>gtk_widget_destroyed <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_widget_ensure_style</primary></indexterm>gtk_widget_ensure_style <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_widget_event</primary></indexterm>gtk_widget_event <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_widget_flags_get_type</primary></indexterm>gtk_widget_flags_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_widget_freeze_child_notify</primary></indexterm>gtk_widget_freeze_child_notify <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_widget_get_accessible</primary></indexterm>gtk_widget_get_accessible <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_widget_get_action</primary></indexterm>gtk_widget_get_action <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_widget_get_ancestor</primary></indexterm>gtk_widget_get_ancestor <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_widget_get_child_requisition</primary></indexterm>gtk_widget_get_child_requisition <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_widget_get_child_visible</primary></indexterm>gtk_widget_get_child_visible <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_widget_get_clipboard</primary></indexterm>gtk_widget_get_clipboard <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_widget_get_colormap</primary></indexterm>gtk_widget_get_colormap <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_widget_get_composite_name</primary></indexterm>gtk_widget_get_composite_name <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_widget_get_default_colormap</primary></indexterm>gtk_widget_get_default_colormap <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_widget_get_default_direction</primary></indexterm>gtk_widget_get_default_direction <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_widget_get_default_style</primary></indexterm>gtk_widget_get_default_style <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_widget_get_default_visual</primary></indexterm>gtk_widget_get_default_visual <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_widget_get_direction</primary></indexterm>gtk_widget_get_direction <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_widget_get_display</primary></indexterm>gtk_widget_get_display <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_widget_get_events</primary></indexterm>gtk_widget_get_events <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_widget_get_extension_events</primary></indexterm>gtk_widget_get_extension_events <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_widget_get_modifier_style</primary></indexterm>gtk_widget_get_modifier_style <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_widget_get_name</primary></indexterm>gtk_widget_get_name <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_widget_get_no_show_all</primary></indexterm>gtk_widget_get_no_show_all <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_widget_get_pango_context</primary></indexterm>gtk_widget_get_pango_context <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_widget_get_parent</primary></indexterm>gtk_widget_get_parent <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_widget_get_parent_window</primary></indexterm>gtk_widget_get_parent_window <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_widget_get_pointer</primary></indexterm>gtk_widget_get_pointer <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_widget_get_root_window</primary></indexterm>gtk_widget_get_root_window <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_widget_get_screen</primary></indexterm>gtk_widget_get_screen <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_widget_get_settings</primary></indexterm>gtk_widget_get_settings <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_widget_get_size_request</primary></indexterm>gtk_widget_get_size_request <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_widget_get_style</primary></indexterm>gtk_widget_get_style <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_widget_get_toplevel</primary></indexterm>gtk_widget_get_toplevel <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_widget_get_type</primary></indexterm>gtk_widget_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_widget_get_visual</primary></indexterm>gtk_widget_get_visual <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_widget_grab_default</primary></indexterm>gtk_widget_grab_default <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_widget_grab_focus</primary></indexterm>gtk_widget_grab_focus <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_widget_has_screen</primary></indexterm>gtk_widget_has_screen <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_widget_help_type_get_type</primary></indexterm>gtk_widget_help_type_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_widget_hide</primary></indexterm>gtk_widget_hide <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_widget_hide_all</primary></indexterm>gtk_widget_hide_all <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_widget_hide_on_delete</primary></indexterm>gtk_widget_hide_on_delete <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_widget_input_shape_combine_mask</primary></indexterm>gtk_widget_input_shape_combine_mask <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_widget_intersect</primary></indexterm>gtk_widget_intersect <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_widget_is_ancestor</primary></indexterm>gtk_widget_is_ancestor <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_widget_is_composited</primary></indexterm>gtk_widget_is_composited <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_widget_is_focus</primary></indexterm>gtk_widget_is_focus <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_widget_list_accel_closures</primary></indexterm>gtk_widget_list_accel_closures <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_widget_list_mnemonic_labels</primary></indexterm>gtk_widget_list_mnemonic_labels <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_widget_map</primary></indexterm>gtk_widget_map <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_widget_mnemonic_activate</primary></indexterm>gtk_widget_mnemonic_activate <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_widget_modify_base</primary></indexterm>gtk_widget_modify_base <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_widget_modify_bg</primary></indexterm>gtk_widget_modify_bg <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_widget_modify_fg</primary></indexterm>gtk_widget_modify_fg <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_widget_modify_font</primary></indexterm>gtk_widget_modify_font <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_widget_modify_style</primary></indexterm>gtk_widget_modify_style <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_widget_modify_text</primary></indexterm>gtk_widget_modify_text <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_widget_new</primary></indexterm>gtk_widget_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_widget_path</primary></indexterm>gtk_widget_path <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_widget_pop_colormap</primary></indexterm>gtk_widget_pop_colormap <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_widget_pop_composite_child</primary></indexterm>gtk_widget_pop_composite_child <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_widget_push_colormap</primary></indexterm>gtk_widget_push_colormap <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_widget_push_composite_child</primary></indexterm>gtk_widget_push_composite_child <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_widget_queue_draw</primary></indexterm>gtk_widget_queue_draw <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_widget_queue_draw_area</primary></indexterm>gtk_widget_queue_draw_area <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_widget_queue_resize</primary></indexterm>gtk_widget_queue_resize <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_widget_queue_resize_no_redraw</primary></indexterm>gtk_widget_queue_resize_no_redraw <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_widget_realize</primary></indexterm>gtk_widget_realize <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_widget_ref</primary></indexterm>gtk_widget_ref <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_widget_region_intersect</primary></indexterm>gtk_widget_region_intersect <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_widget_remove_accelerator</primary></indexterm>gtk_widget_remove_accelerator <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_widget_remove_mnemonic_label</primary></indexterm>gtk_widget_remove_mnemonic_label <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_widget_render_icon</primary></indexterm>gtk_widget_render_icon <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_widget_reparent</primary></indexterm>gtk_widget_reparent <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_widget_reset_rc_styles</primary></indexterm>gtk_widget_reset_rc_styles <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_widget_reset_shapes</primary></indexterm>gtk_widget_reset_shapes <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_widget_send_expose</primary></indexterm>gtk_widget_send_expose <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_widget_set_accel_path</primary></indexterm>gtk_widget_set_accel_path <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_widget_set_app_paintable</primary></indexterm>gtk_widget_set_app_paintable <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_widget_set_child_visible</primary></indexterm>gtk_widget_set_child_visible <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_widget_set_colormap</primary></indexterm>gtk_widget_set_colormap <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_widget_set_composite_name</primary></indexterm>gtk_widget_set_composite_name <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_widget_set_default_colormap</primary></indexterm>gtk_widget_set_default_colormap <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_widget_set_default_direction</primary></indexterm>gtk_widget_set_default_direction <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_widget_set_direction</primary></indexterm>gtk_widget_set_direction <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_widget_set_double_buffered</primary></indexterm>gtk_widget_set_double_buffered <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_widget_set_events</primary></indexterm>gtk_widget_set_events <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_widget_set_extension_events</primary></indexterm>gtk_widget_set_extension_events <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_widget_set_name</primary></indexterm>gtk_widget_set_name <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_widget_set_no_show_all</primary></indexterm>gtk_widget_set_no_show_all <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_widget_set_parent</primary></indexterm>gtk_widget_set_parent <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_widget_set_parent_window</primary></indexterm>gtk_widget_set_parent_window <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_widget_set_redraw_on_allocate</primary></indexterm>gtk_widget_set_redraw_on_allocate <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_widget_set_scroll_adjustments</primary></indexterm>gtk_widget_set_scroll_adjustments <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_widget_set_sensitive</primary></indexterm>gtk_widget_set_sensitive <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_widget_set_size_request</primary></indexterm>gtk_widget_set_size_request <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_widget_set_state</primary></indexterm>gtk_widget_set_state <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_widget_set_style</primary></indexterm>gtk_widget_set_style <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_widget_shape_combine_mask</primary></indexterm>gtk_widget_shape_combine_mask <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_widget_show</primary></indexterm>gtk_widget_show <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_widget_show_all</primary></indexterm>gtk_widget_show_all <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_widget_show_now</primary></indexterm>gtk_widget_show_now <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_widget_size_allocate</primary></indexterm>gtk_widget_size_allocate <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_widget_size_request</primary></indexterm>gtk_widget_size_request <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_widget_style_get</primary></indexterm>gtk_widget_style_get <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_widget_style_get_property</primary></indexterm>gtk_widget_style_get_property <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_widget_style_get_valist</primary></indexterm>gtk_widget_style_get_valist <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_widget_thaw_child_notify</primary></indexterm>gtk_widget_thaw_child_notify <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_widget_translate_coordinates</primary></indexterm>gtk_widget_translate_coordinates <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_widget_unmap</primary></indexterm>gtk_widget_unmap <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_widget_unparent</primary></indexterm>gtk_widget_unparent <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_widget_unrealize</primary></indexterm>gtk_widget_unrealize <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_widget_unref</primary></indexterm>gtk_widget_unref <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_window_activate_default</primary></indexterm>gtk_window_activate_default <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_window_activate_focus</primary></indexterm>gtk_window_activate_focus <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_window_activate_key</primary></indexterm>gtk_window_activate_key <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_window_add_accel_group</primary></indexterm>gtk_window_add_accel_group <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_window_add_mnemonic</primary></indexterm>gtk_window_add_mnemonic <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_window_begin_move_drag</primary></indexterm>gtk_window_begin_move_drag <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_window_begin_resize_drag</primary></indexterm>gtk_window_begin_resize_drag <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_window_deiconify</primary></indexterm>gtk_window_deiconify <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_window_fullscreen</primary></indexterm>gtk_window_fullscreen <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_window_get_accept_focus</primary></indexterm>gtk_window_get_accept_focus <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_window_get_decorated</primary></indexterm>gtk_window_get_decorated <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_window_get_default_icon_list</primary></indexterm>gtk_window_get_default_icon_list <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_window_get_default_size</primary></indexterm>gtk_window_get_default_size <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_window_get_deletable</primary></indexterm>gtk_window_get_deletable <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_window_get_destroy_with_parent</primary></indexterm>gtk_window_get_destroy_with_parent <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_window_get_focus</primary></indexterm>gtk_window_get_focus <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_window_get_focus_on_map</primary></indexterm>gtk_window_get_focus_on_map <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_window_get_frame_dimensions</primary></indexterm>gtk_window_get_frame_dimensions <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_window_get_gravity</primary></indexterm>gtk_window_get_gravity <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_window_get_group</primary></indexterm>gtk_window_get_group <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_window_get_has_frame</primary></indexterm>gtk_window_get_has_frame <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_window_get_icon</primary></indexterm>gtk_window_get_icon <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_window_get_icon_list</primary></indexterm>gtk_window_get_icon_list <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_window_get_icon_name</primary></indexterm>gtk_window_get_icon_name <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_window_get_mnemonic_modifier</primary></indexterm>gtk_window_get_mnemonic_modifier <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_window_get_modal</primary></indexterm>gtk_window_get_modal <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_window_get_position</primary></indexterm>gtk_window_get_position <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_window_get_resizable</primary></indexterm>gtk_window_get_resizable <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_window_get_role</primary></indexterm>gtk_window_get_role <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_window_get_screen</primary></indexterm>gtk_window_get_screen <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_window_get_size</primary></indexterm>gtk_window_get_size <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_window_get_skip_pager_hint</primary></indexterm>gtk_window_get_skip_pager_hint <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_window_get_skip_taskbar_hint</primary></indexterm>gtk_window_get_skip_taskbar_hint <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_window_get_title</primary></indexterm>gtk_window_get_title <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_window_get_transient_for</primary></indexterm>gtk_window_get_transient_for <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_window_get_type</primary></indexterm>gtk_window_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_window_get_type_hint</primary></indexterm>gtk_window_get_type_hint <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_window_get_urgency_hint</primary></indexterm>gtk_window_get_urgency_hint <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_window_group_add_window</primary></indexterm>gtk_window_group_add_window <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_window_group_get_type</primary></indexterm>gtk_window_group_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_window_group_new</primary></indexterm>gtk_window_group_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_window_group_remove_window</primary></indexterm>gtk_window_group_remove_window <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_window_has_toplevel_focus</primary></indexterm>gtk_window_has_toplevel_focus <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_window_iconify</primary></indexterm>gtk_window_iconify <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_window_is_active</primary></indexterm>gtk_window_is_active <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_window_list_toplevels</primary></indexterm>gtk_window_list_toplevels <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_window_maximize</primary></indexterm>gtk_window_maximize <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_window_mnemonic_activate</primary></indexterm>gtk_window_mnemonic_activate <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_window_move</primary></indexterm>gtk_window_move <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_window_new</primary></indexterm>gtk_window_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_window_parse_geometry</primary></indexterm>gtk_window_parse_geometry <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_window_position_get_type</primary></indexterm>gtk_window_position_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_window_present</primary></indexterm>gtk_window_present <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_window_present_with_time</primary></indexterm>gtk_window_present_with_time <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_window_propagate_key_event</primary></indexterm>gtk_window_propagate_key_event <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_window_remove_accel_group</primary></indexterm>gtk_window_remove_accel_group <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_window_remove_mnemonic</primary></indexterm>gtk_window_remove_mnemonic <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_window_reshow_with_initial_size</primary></indexterm>gtk_window_reshow_with_initial_size <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_window_resize</primary></indexterm>gtk_window_resize <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_window_set_accept_focus</primary></indexterm>gtk_window_set_accept_focus <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_window_set_auto_startup_notification</primary></indexterm>gtk_window_set_auto_startup_notification <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_window_set_decorated</primary></indexterm>gtk_window_set_decorated <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_window_set_default</primary></indexterm>gtk_window_set_default <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_window_set_default_icon</primary></indexterm>gtk_window_set_default_icon <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_window_set_default_icon_from_file</primary></indexterm>gtk_window_set_default_icon_from_file <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_window_set_default_icon_list</primary></indexterm>gtk_window_set_default_icon_list <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_window_set_default_icon_name</primary></indexterm>gtk_window_set_default_icon_name <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_window_set_default_size</primary></indexterm>gtk_window_set_default_size <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_window_set_deletable</primary></indexterm>gtk_window_set_deletable <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_window_set_destroy_with_parent</primary></indexterm>gtk_window_set_destroy_with_parent <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_window_set_focus</primary></indexterm>gtk_window_set_focus <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_window_set_focus_on_map</primary></indexterm>gtk_window_set_focus_on_map <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_window_set_frame_dimensions</primary></indexterm>gtk_window_set_frame_dimensions <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_window_set_geometry_hints</primary></indexterm>gtk_window_set_geometry_hints <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_window_set_gravity</primary></indexterm>gtk_window_set_gravity <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_window_set_has_frame</primary></indexterm>gtk_window_set_has_frame <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_window_set_icon</primary></indexterm>gtk_window_set_icon <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_window_set_icon_from_file</primary></indexterm>gtk_window_set_icon_from_file <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_window_set_icon_list</primary></indexterm>gtk_window_set_icon_list <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_window_set_icon_name</primary></indexterm>gtk_window_set_icon_name <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_window_set_keep_above</primary></indexterm>gtk_window_set_keep_above <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_window_set_keep_below</primary></indexterm>gtk_window_set_keep_below <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_window_set_mnemonic_modifier</primary></indexterm>gtk_window_set_mnemonic_modifier <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_window_set_modal</primary></indexterm>gtk_window_set_modal <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_window_set_position</primary></indexterm>gtk_window_set_position <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_window_set_resizable</primary></indexterm>gtk_window_set_resizable <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_window_set_role</primary></indexterm>gtk_window_set_role <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_window_set_screen</primary></indexterm>gtk_window_set_screen <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_window_set_skip_pager_hint</primary></indexterm>gtk_window_set_skip_pager_hint <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_window_set_skip_taskbar_hint</primary></indexterm>gtk_window_set_skip_taskbar_hint <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_window_set_title</primary></indexterm>gtk_window_set_title <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_window_set_transient_for</primary></indexterm>gtk_window_set_transient_for <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_window_set_type_hint</primary></indexterm>gtk_window_set_type_hint <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_window_set_urgency_hint</primary></indexterm>gtk_window_set_urgency_hint <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_window_set_wmclass</primary></indexterm>gtk_window_set_wmclass <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_window_stick</primary></indexterm>gtk_window_stick <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_window_type_get_type</primary></indexterm>gtk_window_type_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_window_unfullscreen</primary></indexterm>gtk_window_unfullscreen <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_window_unmaximize</primary></indexterm>gtk_window_unmaximize <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_window_unstick</primary></indexterm>gtk_window_unstick <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_wrap_mode_get_type</primary></indexterm>gtk_wrap_mode_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.32]</LINK></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
An LSB conforming implementation shall provide the generic deprecated functions
for GTK main Widgets library specified in <XREF linkend="tbl-libgtk-x11-2.0-gtk-m-depints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<NOTE><PARA>These interfaces are deprecated, and applications
should avoid using them.
These interfaces may be withdrawn
in future releases of this specification.
</PARA></NOTE>
<!--libgroupdepints-->
<TABLE id="tbl-libgtk-x11-2.0-gtk-m-depints">
<TITLE>libgtk-x11-2.0 - GTK main Widgets library Deprecated Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>gtk_binding_parse_binding</primary></indexterm>gtk_binding_parse_binding <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_file_selection_complete</primary></indexterm>gtk_file_selection_complete <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_file_selection_get_filename</primary></indexterm>gtk_file_selection_get_filename <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_file_selection_get_select_multiple</primary></indexterm>gtk_file_selection_get_select_multiple <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_file_selection_get_selections</primary></indexterm>gtk_file_selection_get_selections <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_file_selection_hide_fileop_buttons</primary></indexterm>gtk_file_selection_hide_fileop_buttons <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_file_selection_new</primary></indexterm>gtk_file_selection_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_file_selection_set_filename</primary></indexterm>gtk_file_selection_set_filename <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_file_selection_set_select_multiple</primary></indexterm>gtk_file_selection_set_select_multiple <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_file_selection_show_fileop_buttons</primary></indexterm>gtk_file_selection_show_fileop_buttons <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_menu_item_remove_submenu</primary></indexterm>gtk_menu_item_remove_submenu <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_rc_style_ref</primary></indexterm>gtk_rc_style_ref <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_rc_style_unref</primary></indexterm>gtk_rc_style_unref <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_toolbar_get_tooltips</primary></indexterm>gtk_toolbar_get_tooltips <LINK LINKEND="REFSTD.libgtk.x11.2.0.3">[LSB]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_toolbar_set_tooltips</primary></indexterm>gtk_toolbar_set_tooltips <LINK LINKEND="REFSTD.libgtk.x11.2.0.3">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_view_tree_to_widget_coords</primary></indexterm>gtk_tree_view_tree_to_widget_coords <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_view_widget_to_tree_coords</primary></indexterm>gtk_tree_view_widget_to_tree_coords <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_widget_ref</primary></indexterm>gtk_widget_ref <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_widget_unref</primary></indexterm>gtk_widget_unref <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for GTK main Widgets library specified in <XREF linkend="tbl-libgtk-x11-2.0-gtk-m-data">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<TABLE id="tbl-libgtk-x11-2.0-gtk-m-data">
<TITLE>libgtk-x11-2.0 - GTK main Widgets library Data Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>gtk_binary_age</primary></indexterm>gtk_binary_age <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_debug_flags</primary></indexterm>gtk_debug_flags <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_interface_age</primary></indexterm>gtk_interface_age <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_major_version</primary></indexterm>gtk_major_version <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_micro_version</primary></indexterm>gtk_micro_version <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_minor_version</primary></indexterm>gtk_minor_version <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.10]</LINK></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>
</SECT2>
</SECT1>
<SECT1 ID=libgtk-x11-2.0-ddefs>
<TITLE>Data Definitions for libgtk-x11-2.0</TITLE>
<PARA>
This section defines global identifiers and their values that are associated
with interfaces contained in libgtk-x11-2.0.
These definitions are organized into groups that
correspond to system headers. This convention is used as a
convenience for the reader, and does not imply the existence
of these headers, or their content.
Where an interface is defined as requiring a particular system header file
all of the data definitions for that system header file presented here shall be in effect.
</PARA>
<PARA>
This section gives data definitions to promote binary application
portability, not to repeat source interface definitions available
elsewhere. System providers and application developers should use this ABI
to supplement - not to replace - source interface definition specifications.
</PARA>
<PARA>
This specification uses the <XREF LINKEND='std.ISOC99'> C Language as the reference programming language, and data definitions are specified in ISO C format. The C language is used here as a convenient notation. Using a C language description of these data objects does not preclude their use by other programming languages.</PARA>
<SECT2>
<TITLE>gtk-2.0/gtk/gtk.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define GTK_NOTE(type,action)
#define __GTK_ASSISTANT_H__
#define __GTK_PAGE_SETUP_H__
#define __GTK_PAPER_SIZE_H__
#define __GTK_PRINT_CONTEXT_H__
#define __GTK_PRINT_OPERATION_H__
#define __GTK_PRINT_SETTINGS_H__
#define __GTK_RECENT_CHOOSER_DIALOG_H__
#define __GTK_RECENT_CHOOSER_H__
#define __GTK_RECENT_CHOOSER_MENU_H__
#define __GTK_RECENT_CHOOSER_WIDGET_H__
#define GTK_OBJECT_FLOATING(obj)	 \
	((GTK_OBJECT_FLAGS (obj) &amp; GTK_FLOATING) != 0)
#define GTK_WIDGET_APP_PAINTABLE(wid)	 \
	((GTK_WIDGET_FLAGS (wid) &amp; GTK_APP_PAINTABLE) != 0)
#define GTK_WIDGET_CAN_DEFAULT(wid)	 \
	((GTK_WIDGET_FLAGS (wid) &amp; GTK_CAN_DEFAULT) != 0)
#define GTK_WIDGET_CAN_FOCUS(wid)	 \
	((GTK_WIDGET_FLAGS (wid) &amp; GTK_CAN_FOCUS) != 0)
#define GTK_WIDGET_COMPOSITE_CHILD(wid)	 \
	((GTK_WIDGET_FLAGS (wid) &amp; GTK_COMPOSITE_CHILD) != 0)
#define GTK_WIDGET_DOUBLE_BUFFERED(wid)	 \
	((GTK_WIDGET_FLAGS (wid) &amp; GTK_DOUBLE_BUFFERED) != 0)
#define GTK_WIDGET_HAS_DEFAULT(wid)	 \
	((GTK_WIDGET_FLAGS (wid) &amp; GTK_HAS_DEFAULT) != 0)
#define GTK_WIDGET_HAS_FOCUS(wid)	 \
	((GTK_WIDGET_FLAGS (wid) &amp; GTK_HAS_FOCUS) != 0)
#define GTK_WIDGET_HAS_GRAB(wid)	 \
	((GTK_WIDGET_FLAGS (wid) &amp; GTK_HAS_GRAB) != 0)
#define GTK_WIDGET_MAPPED(wid)	 \
	((GTK_WIDGET_FLAGS (wid) &amp; GTK_MAPPED) != 0)
#define GTK_WIDGET_NO_WINDOW(wid)	 \
	((GTK_WIDGET_FLAGS (wid) &amp; GTK_NO_WINDOW) != 0)
#define GTK_WIDGET_PARENT_SENSITIVE(wid)	 \
	((GTK_WIDGET_FLAGS (wid) &amp; GTK_PARENT_SENSITIVE) != 0)
#define GTK_WIDGET_RC_STYLE(wid)	 \
	((GTK_WIDGET_FLAGS (wid) &amp; GTK_RC_STYLE) != 0)
#define GTK_WIDGET_REALIZED(wid)	 \
	((GTK_WIDGET_FLAGS (wid) &amp; GTK_REALIZED) != 0)
#define GTK_WIDGET_RECEIVES_DEFAULT(wid)	 \
	((GTK_WIDGET_FLAGS (wid) &amp; GTK_RECEIVES_DEFAULT) != 0)
#define GTK_WIDGET_SENSITIVE(wid)	 \
	((GTK_WIDGET_FLAGS (wid) &amp; GTK_SENSITIVE) != 0)
#define GTK_WIDGET_TOPLEVEL(wid)	 \
	((GTK_WIDGET_FLAGS (wid) &amp; GTK_TOPLEVEL) != 0)
#define GTK_WIDGET_VISIBLE(wid)	 \
	((GTK_WIDGET_FLAGS (wid) &amp; GTK_VISIBLE) != 0)
#define GTK_TYPE_CALENDAR_DISPLAY_OPTIONS	 \
	(gtk_calendar_display_options_get_type())
#define GTK_TYPE_CELL_RENDERER_PIXBUF	 \
	(gtk_cell_renderer_pixbuf_get_type ())
#define GTK_TYPE_CELL_RENDERER_PROGRESS	 \
	(gtk_cell_renderer_progress_get_type ())
#define GTK_TYPE_CELL_RENDERER_TOGGLE	 \
	(gtk_cell_renderer_toggle_get_type ())
#define GTK_ICON_VIEW(obj)	 \
	(GTK_CHECK_CAST ((obj), GTK_TYPE_ICON_VIEW, GtkIconView))
#define GTK_OBJECT(object)	 \
	(GTK_CHECK_CAST ((object), GTK_TYPE_OBJECT, GtkObject))
#define GTK_ICON_VIEW_CLASS(klass)	 \
	(GTK_CHECK_CLASS_CAST ((klass), GTK_TYPE_ICON_VIEW, \
	GtkIconViewClass))
#define GTK_LIST_CLASS(klass)	 \
	(GTK_CHECK_CLASS_CAST ((klass), GTK_TYPE_LIST, GtkListClass))
#define GTK_OBJECT_CLASS(klass)	 \
	(GTK_CHECK_CLASS_CAST ((klass), GTK_TYPE_OBJECT, GtkObjectClass))
#define GTK_IS_ICON_VIEW_CLASS(klass)	 \
	(GTK_CHECK_CLASS_TYPE ((klass), GTK_TYPE_ICON_VIEW))
#define GTK_IS_LIST_CLASS(klass)	 \
	(GTK_CHECK_CLASS_TYPE ((klass), GTK_TYPE_LIST))
#define GTK_IS_OBJECT_CLASS(klass)	 \
	(GTK_CHECK_CLASS_TYPE ((klass), GTK_TYPE_OBJECT))
#define GTK_ICON_VIEW_GET_CLASS(obj)	 \
	(GTK_CHECK_GET_CLASS ((obj), GTK_TYPE_ICON_VIEW, GtkIconViewClass))
#define GTK_LIST_GET_CLASS(obj)	 \
	(GTK_CHECK_GET_CLASS ((obj), GTK_TYPE_LIST, GtkListClass))
#define GTK_OBJECT_GET_CLASS(object)	 \
	(GTK_CHECK_GET_CLASS ((object), GTK_TYPE_OBJECT, GtkObjectClass))
#define GTK_TYPE_COLOR_SELECTION_DIALOG	 \
	(gtk_color_selection_dialog_get_type ())
#define GTK_TYPE_FONT_SELECTION_DIALOG	 \
	(gtk_font_selection_dialog_get_type ())
#define GTK_IS_RESIZE_CONTAINER(widget)	 \
	(GTK_IS_CONTAINER (widget) &amp;&amp; ((GtkContainer*) (widget))->resize_mode \
	!= GTK_RESIZE_PARENT)
#define GTK_CHECK_VERSION(major,minor,micro)	 \
	(GTK_MAJOR_VERSION > (major) || (GTK_MAJOR_VERSION == (major) &amp;&amp; \
	GTK_MINOR_VERSION > (minor)) || (GTK_MAJOR_VERSION == (major) &amp;&amp; \
	GTK_MINOR_VERSION == (minor) &amp;&amp; GTK_MICRO_VERSION >= (micro)))
#define GTK_TYPE_PROGRESS_BAR_ORIENTATION	 \
	(gtk_progress_bar_orientation_get_type())
#define GTK_TYPE_SPIN_BUTTON_UPDATE_POLICY	 \
	(gtk_spin_button_update_policy_get_type())
#define GTK_TYPE_TREE_VIEW_COLUMN_SIZING	 \
	(gtk_tree_view_column_sizing_get_type())
#define GTK_TYPE_TREE_VIEW_DROP_POSITION	 \
	(gtk_tree_view_drop_position_get_type())
#define GTK_TYPE_UI_MANAGER_ITEM_TYPE	 \
	(gtk_ui_manager_item_type_get_type())
#define GTK_WIDGET_IS_SENSITIVE(wid)	 \
	(GTK_WIDGET_SENSITIVE (wid) &amp;&amp; GTK_WIDGET_PARENT_SENSITIVE (wid))
#define GTK_WIDGET_DRAWABLE(wid)	 \
	(GTK_WIDGET_VISIBLE (wid) &amp;&amp; GTK_WIDGET_MAPPED (wid))
#define GTK_ABOUT_DIALOG_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_ABOUT_DIALOG, \
	GtkAboutDialogClass))
#define GTK_ACCEL_GROUP_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_ACCEL_GROUP, \
	GtkAccelGroupClass))
#define GTK_ACCEL_LABEL_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_ACCEL_LABEL, \
	GtkAccelLabelClass))
#define GTK_ACCEL_MAP_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_ACCEL_MAP, \
	GtkAccelMapClass))
#define GTK_ACCESSIBLE_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_ACCESSIBLE, \
	GtkAccessibleClass))
#define GTK_ACTION_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_ACTION, GtkActionClass))
#define GTK_ADJUSTMENT_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_ADJUSTMENT, \
	GtkAdjustmentClass))
#define GTK_ALIGNMENT_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_ALIGNMENT, \
	GtkAlignmentClass))
#define GTK_ARROW_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_ARROW, GtkArrowClass))
#define GTK_ASPECT_FRAME_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_ASPECT_FRAME, \
	GtkAspectFrameClass))
#define GTK_BIN_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_BIN, GtkBinClass))
#define GTK_BOX_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_BOX, GtkBoxClass))
#define GTK_BUTTON_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_BUTTON, GtkButtonClass))
#define GTK_BUTTON_BOX_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_BUTTON_BOX, \
	GtkButtonBoxClass))
#define GTK_CALENDAR_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_CALENDAR, \
	GtkCalendarClass))
#define GTK_CELL_RENDERER_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_CELL_RENDERER, \
	GtkCellRendererClass))
#define GTK_CELL_RENDERER_COMBO_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_CELL_RENDERER_COMBO, \
	GtkCellRendererComboClass))
#define GTK_CELL_RENDERER_PIXBUF_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_CELL_RENDERER_PIXBUF, \
	GtkCellRendererPixbufClass))
#define GTK_CELL_RENDERER_PROGRESS_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_CELL_RENDERER_PROGRESS, \
	GtkCellRendererProgressClass))
#define GTK_CELL_RENDERER_TEXT_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_CELL_RENDERER_TEXT, \
	GtkCellRendererTextClass))
#define GTK_CELL_RENDERER_TOGGLE_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_CELL_RENDERER_TOGGLE, \
	GtkCellRendererToggleClass))
#define GTK_CHECK_BUTTON_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_CHECK_BUTTON, \
	GtkCheckButtonClass))
#define GTK_CHECK_MENU_ITEM_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_CHECK_MENU_ITEM, \
	GtkCheckMenuItemClass))
#define GTK_COLOR_BUTTON_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_COLOR_BUTTON, \
	GtkColorButtonClass))
#define GTK_COLOR_SELECTION_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_COLOR_SELECTION, \
	GtkColorSelectionClass))
#define GTK_COLOR_SELECTION_DIALOG_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_COLOR_SELECTION_DIALOG, \
	GtkColorSelectionDialogClass))
#define GTK_CONTAINER_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_CONTAINER, \
	GtkContainerClass))
#define GTK_CURVE_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_CURVE, GtkCurveClass))
#define GTK_DIALOG_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_DIALOG, GtkDialogClass))
#define GTK_DRAWING_AREA_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_DRAWING_AREA, \
	GtkDrawingAreaClass))
#define GTK_ENTRY_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_ENTRY, GtkEntryClass))
#define GTK_ENTRY_COMPLETION_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_ENTRY_COMPLETION, \
	GtkEntryCompletionClass))
#define GTK_EVENT_BOX_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_EVENT_BOX, \
	GtkEventBoxClass))
#define GTK_EXPANDER_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_EXPANDER, \
	GtkExpanderClass))
#define GTK_FILE_CHOOSER_BUTTON_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_FILE_CHOOSER_BUTTON, \
	GtkFileChooserButtonClass))
#define GTK_FILE_CHOOSER_DIALOG_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_FILE_CHOOSER_DIALOG, \
	GtkFileChooserDialogClass))
#define GTK_FILE_CHOOSER_WIDGET_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_FILE_CHOOSER_WIDGET, \
	GtkFileChooserWidgetClass))
#define GTK_FILE_SELECTION_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_FILE_SELECTION, \
	GtkFileSelectionClass))
#define GTK_FIXED_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_FIXED, GtkFixedClass))
#define GTK_FONT_BUTTON_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_FONT_BUTTON, \
	GtkFontButtonClass))
#define GTK_FONT_SELECTION_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_FONT_SELECTION, \
	GtkFontSelectionClass))
#define GTK_FONT_SELECTION_DIALOG_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_FONT_SELECTION_DIALOG, \
	GtkFontSelectionDialogClass))
#define GTK_FRAME_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_FRAME, GtkFrameClass))
#define GTK_GAMMA_CURVE_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_GAMMA_CURVE, \
	GtkGammaCurveClass))
#define GTK_HANDLE_BOX_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_HANDLE_BOX, \
	GtkHandleBoxClass))
#define GTK_HBOX_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_HBOX, GtkHBoxClass))
#define GTK_HBUTTON_BOX_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_HBUTTON_BOX, \
	GtkHButtonBoxClass))
#define GTK_HPANED_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_HPANED, GtkHPanedClass))
#define GTK_HRULER_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_HRULER, GtkHRulerClass))
#define GTK_HSCALE_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_HSCALE, GtkHScaleClass))
#define GTK_HSCROLLBAR_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_HSCROLLBAR, \
	GtkHScrollbarClass))
#define GTK_HSEPARATOR_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_HSEPARATOR, \
	GtkHSeparatorClass))
#define GTK_ICON_FACTORY_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_ICON_FACTORY, \
	GtkIconFactoryClass))
#define GTK_ICON_THEME_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_ICON_THEME, \
	GtkIconThemeClass))
#define GTK_IMAGE_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_IMAGE, GtkImageClass))
#define GTK_IMAGE_MENU_ITEM_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_IMAGE_MENU_ITEM, \
	GtkImageMenuItemClass))
#define GTK_IM_CONTEXT_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_IM_CONTEXT, \
	GtkIMContextClass))
#define GTK_IM_CONTEXT_SIMPLE_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_IM_CONTEXT_SIMPLE, \
	GtkIMContextSimpleClass))
#define GTK_IM_MULTICONTEXT_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_IM_MULTICONTEXT, \
	GtkIMMulticontextClass))
#define GTK_INPUT_DIALOG_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_INPUT_DIALOG, \
	GtkInputDialogClass))
#define GTK_INVISIBLE_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_INVISIBLE, \
	GtkInvisibleClass))
#define GTK_ITEM_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_ITEM, GtkItemClass))
#define GTK_LABEL_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_LABEL, GtkLabelClass))
#define GTK_LAYOUT_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_LAYOUT, GtkLayoutClass))
#define GTK_LIST_STORE_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_LIST_STORE, \
	GtkListStoreClass))
#define GTK_MENU_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_MENU, GtkMenuClass))
#define GTK_MENU_BAR_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_MENU_BAR, \
	GtkMenuBarClass))
#define GTK_MENU_ITEM_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_MENU_ITEM, \
	GtkMenuItemClass))
#define GTK_MENU_SHELL_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_MENU_SHELL, \
	GtkMenuShellClass))
#define GTK_MESSAGE_DIALOG_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_MESSAGE_DIALOG, \
	GtkMessageDialogClass))
#define GTK_MISC_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_MISC, GtkMiscClass))
#define GTK_NOTEBOOK_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_NOTEBOOK, \
	GtkNotebookClass))
#define GTK_PANED_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_PANED, GtkPanedClass))
#define GTK_PLUG_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_PLUG, GtkPlugClass))
#define GTK_PROGRESS_BAR_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_PROGRESS_BAR, \
	GtkProgressBarClass))
#define GTK_RADIO_ACTION_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_RADIO_ACTION, \
	GtkRadioActionClass))
#define GTK_RADIO_BUTTON_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_RADIO_BUTTON, \
	GtkRadioButtonClass))
#define GTK_RADIO_MENU_ITEM_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_RADIO_MENU_ITEM, \
	GtkRadioMenuItemClass))
#define GTK_RADIO_TOOL_BUTTON_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_RADIO_TOOL_BUTTON, \
	GtkRadioToolButtonClass))
#define GTK_RANGE_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_RANGE, GtkRangeClass))
#define GTK_RC_STYLE_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_RC_STYLE, \
	GtkRcStyleClass))
#define GTK_RULER_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_RULER, GtkRulerClass))
#define GTK_SCALE_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_SCALE, GtkScaleClass))
#define GTK_SCROLLBAR_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_SCROLLBAR, \
	GtkScrollbarClass))
#define GTK_SCROLLED_WINDOW_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_SCROLLED_WINDOW, \
	GtkScrolledWindowClass))
#define GTK_SEPARATOR_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_SEPARATOR, \
	GtkSeparatorClass))
#define GTK_SEPARATOR_MENU_ITEM_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_SEPARATOR_MENU_ITEM, \
	GtkSeparatorMenuItemClass))
#define GTK_SEPARATOR_TOOL_ITEM_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_SEPARATOR_TOOL_ITEM, \
	GtkSeparatorToolItemClass))
#define GTK_SETTINGS_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_SETTINGS, \
	GtkSettingsClass))
#define GTK_SIZE_GROUP_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_SIZE_GROUP, \
	GtkSizeGroupClass))
#define GTK_SOCKET_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_SOCKET, GtkSocketClass))
#define GTK_SPIN_BUTTON_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_SPIN_BUTTON, \
	GtkSpinButtonClass))
#define GTK_STATUSBAR_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_STATUSBAR, \
	GtkStatusbarClass))
#define GTK_STYLE_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_STYLE, GtkStyleClass))
#define GTK_TABLE_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_TABLE, GtkTableClass))
#define GTK_TEAROFF_MENU_ITEM_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_TEAROFF_MENU_ITEM, \
	GtkTearoffMenuItemClass))
#define GTK_TEXT_BUFFER_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_TEXT_BUFFER, \
	GtkTextBufferClass))
#define GTK_TEXT_CHILD_ANCHOR_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_TEXT_CHILD_ANCHOR, \
	GtkTextChildAnchorClass))
#define GTK_TEXT_MARK_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_TEXT_MARK, \
	GtkTextMarkClass))
#define GTK_TEXT_TAG_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_TEXT_TAG, \
	GtkTextTagClass))
#define GTK_TEXT_TAG_TABLE_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_TEXT_TAG_TABLE, \
	GtkTextTagTableClass))
#define GTK_TEXT_VIEW_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_TEXT_VIEW, \
	GtkTextViewClass))
#define GTK_TOGGLE_ACTION_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_TOGGLE_ACTION, \
	GtkToggleActionClass))
#define GTK_TOGGLE_BUTTON_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_TOGGLE_BUTTON, \
	GtkToggleButtonClass))
#define GTK_TOGGLE_TOOL_BUTTON_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_TOGGLE_TOOL_BUTTON, \
	GtkToggleToolButtonClass))
#define GTK_TOOLBAR_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_TOOLBAR, \
	GtkToolbarClass))
#define GTK_TOOLTIPS_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_TOOLTIPS, \
	GtkTooltipsClass))
#define GTK_TOOL_BUTTON_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_TOOL_BUTTON, \
	GtkToolButtonClass))
#define GTK_TOOL_ITEM_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_TOOL_ITEM, \
	GtkToolItemClass))
#define GTK_TREE_MODEL_SORT_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_TREE_MODEL_SORT, \
	GtkTreeModelSortClass))
#define GTK_TREE_SELECTION_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_TREE_SELECTION, \
	GtkTreeSelectionClass))
#define GTK_TREE_STORE_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_TREE_STORE, \
	GtkTreeStoreClass))
#define GTK_TREE_VIEW_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_TREE_VIEW, \
	GtkTreeViewClass))
#define GTK_TREE_VIEW_COLUMN_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_TREE_VIEW_COLUMN, \
	GtkTreeViewColumnClass))
#define GTK_UI_MANAGER_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_UI_MANAGER, \
	GtkUIManagerClass))
#define GTK_VBOX_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_VBOX, GtkVBoxClass))
#define GTK_VBUTTON_BOX_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_VBUTTON_BOX, \
	GtkVButtonBoxClass))
#define GTK_VIEWPORT_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_VIEWPORT, \
	GtkViewportClass))
#define GTK_VPANED_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_VPANED, GtkVPanedClass))
#define GTK_VRULER_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_VRULER, GtkVRulerClass))
#define GTK_VSCALE_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_VSCALE, GtkVScaleClass))
#define GTK_VSCROLLBAR_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_VSCROLLBAR, \
	GtkVScrollbarClass))
#define GTK_VSEPARATOR_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_VSEPARATOR, \
	GtkVSeparatorClass))
#define GTK_WIDGET_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_WIDGET, GtkWidgetClass))
#define GTK_WINDOW_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_WINDOW, GtkWindowClass))
#define GTK_WINDOW_GROUP_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_WINDOW_GROUP, \
	GtkWindowGroupClass))
#define GTK_CELL_EDITABLE_CLASS(obj)	 \
	(G_TYPE_CHECK_CLASS_CAST ((obj), GTK_TYPE_CELL_EDITABLE, \
	GtkCellEditableIface))
#define GTK_TREE_SORTABLE_CLASS(obj)	 \
	(G_TYPE_CHECK_CLASS_CAST ((obj), GTK_TYPE_TREE_SORTABLE, \
	GtkTreeSortableIface))
#define GTK_ACTION_GROUP_CLASS(vtable)	 \
	(G_TYPE_CHECK_CLASS_CAST ((vtable), GTK_TYPE_ACTION_GROUP, \
	GtkActionGroupClass))
#define GTK_CELL_VIEW_CLASS(vtable)	 \
	(G_TYPE_CHECK_CLASS_CAST ((vtable), GTK_TYPE_CELL_VIEW, \
	GtkCellViewClass))
#define GTK_COMBO_BOX_CLASS(vtable)	 \
	(G_TYPE_CHECK_CLASS_CAST ((vtable), GTK_TYPE_COMBO_BOX, \
	GtkComboBoxClass))
#define GTK_COMBO_BOX_ENTRY_CLASS(vtable)	 \
	(G_TYPE_CHECK_CLASS_CAST ((vtable), GTK_TYPE_COMBO_BOX_ENTRY, \
	GtkComboBoxEntryClass))
#define GTK_EDITABLE_CLASS(vtable)	 \
	(G_TYPE_CHECK_CLASS_CAST ((vtable), GTK_TYPE_EDITABLE, \
	GtkEditableClass))
#define GTK_TREE_MODEL_FILTER_CLASS(vtable)	 \
	(G_TYPE_CHECK_CLASS_CAST ((vtable), GTK_TYPE_TREE_MODEL_FILTER, \
	GtkTreeModelFilterClass))
#define GTK_MENU_TOOL_BUTTON_CLASS(k)	 \
	(G_TYPE_CHECK_CLASS_CAST((k), GTK_TYPE_MENU_TOOL_BUTTON, \
	GtkMenuToolButtonClass))
#define GTK_IS_MENU_TOOL_BUTTON_CLASS(k)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((k), GTK_TYPE_MENU_TOOL_BUTTON))
#define GTK_IS_ABOUT_DIALOG_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_ABOUT_DIALOG))
#define GTK_IS_ACCEL_GROUP_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_ACCEL_GROUP))
#define GTK_IS_ACCEL_LABEL_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_ACCEL_LABEL))
#define GTK_IS_ACCEL_MAP_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_ACCEL_MAP))
#define GTK_IS_ACCESSIBLE_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_ACCESSIBLE))
#define GTK_IS_ACTION_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_ACTION))
#define GTK_IS_ADJUSTMENT_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_ADJUSTMENT))
#define GTK_IS_ALIGNMENT_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_ALIGNMENT))
#define GTK_IS_ARROW_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_ARROW))
#define GTK_IS_ASPECT_FRAME_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_ASPECT_FRAME))
#define GTK_IS_BIN_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_BIN))
#define GTK_IS_BOX_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_BOX))
#define GTK_IS_BUTTON_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_BUTTON))
#define GTK_IS_BUTTON_BOX_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_BUTTON_BOX))
#define GTK_IS_CALENDAR_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_CALENDAR))
#define GTK_IS_CELL_RENDERER_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_CELL_RENDERER))
#define GTK_IS_CELL_RENDERER_COMBO_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_CELL_RENDERER_COMBO))
#define GTK_IS_CELL_RENDERER_PIXBUF_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_CELL_RENDERER_PIXBUF))
#define GTK_IS_CELL_RENDERER_PROGRESS_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_CELL_RENDERER_PROGRESS))
#define GTK_IS_CELL_RENDERER_TEXT_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_CELL_RENDERER_TEXT))
#define GTK_IS_CELL_RENDERER_TOGGLE_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_CELL_RENDERER_TOGGLE))
#define GTK_IS_CHECK_BUTTON_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_CHECK_BUTTON))
#define GTK_IS_CHECK_MENU_ITEM_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_CHECK_MENU_ITEM))
#define GTK_IS_COLOR_BUTTON_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_COLOR_BUTTON))
#define GTK_IS_COLOR_SELECTION_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_COLOR_SELECTION))
#define GTK_IS_COLOR_SELECTION_DIALOG_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_COLOR_SELECTION_DIALOG))
#define GTK_IS_CONTAINER_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_CONTAINER))
#define GTK_IS_CURVE_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_CURVE))
#define GTK_IS_DIALOG_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_DIALOG))
#define GTK_IS_DRAWING_AREA_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_DRAWING_AREA))
#define GTK_IS_ENTRY_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_ENTRY))
#define GTK_IS_ENTRY_COMPLETION_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_ENTRY_COMPLETION))
#define GTK_IS_EVENT_BOX_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_EVENT_BOX))
#define GTK_IS_EXPANDER_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_EXPANDER))
#define GTK_IS_FILE_CHOOSER_BUTTON_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_FILE_CHOOSER_BUTTON))
#define GTK_IS_FILE_CHOOSER_DIALOG_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_FILE_CHOOSER_DIALOG))
#define GTK_IS_FILE_CHOOSER_WIDGET_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_FILE_CHOOSER_WIDGET))
#define GTK_IS_FILE_SELECTION_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_FILE_SELECTION))
#define GTK_IS_FIXED_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_FIXED))
#define GTK_IS_FONT_BUTTON_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_FONT_BUTTON))
#define GTK_IS_FONT_SELECTION_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_FONT_SELECTION))
#define GTK_IS_FONT_SELECTION_DIALOG_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_FONT_SELECTION_DIALOG))
#define GTK_IS_FRAME_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_FRAME))
#define GTK_IS_GAMMA_CURVE_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_GAMMA_CURVE))
#define GTK_IS_HANDLE_BOX_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_HANDLE_BOX))
#define GTK_IS_HBOX_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_HBOX))
#define GTK_IS_HBUTTON_BOX_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_HBUTTON_BOX))
#define GTK_IS_HPANED_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_HPANED))
#define GTK_IS_HRULER_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_HRULER))
#define GTK_IS_HSCALE_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_HSCALE))
#define GTK_IS_HSCROLLBAR_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_HSCROLLBAR))
#define GTK_IS_HSEPARATOR_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_HSEPARATOR))
#define GTK_IS_ICON_FACTORY_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_ICON_FACTORY))
#define GTK_IS_ICON_THEME_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_ICON_THEME))
#define GTK_IS_IMAGE_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_IMAGE))
#define GTK_IS_IMAGE_MENU_ITEM_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_IMAGE_MENU_ITEM))
#define GTK_IS_IM_CONTEXT_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_IM_CONTEXT))
#define GTK_IS_IM_CONTEXT_SIMPLE_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_IM_CONTEXT_SIMPLE))
#define GTK_IS_IM_MULTICONTEXT_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_IM_MULTICONTEXT))
#define GTK_IS_INPUT_DIALOG_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_INPUT_DIALOG))
#define GTK_IS_INVISIBLE_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_INVISIBLE))
#define GTK_IS_ITEM_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_ITEM))
#define GTK_IS_LABEL_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_LABEL))
#define GTK_IS_LAYOUT_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_LAYOUT))
#define GTK_IS_LIST_STORE_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_LIST_STORE))
#define GTK_IS_MENU_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_MENU))
#define GTK_IS_MENU_BAR_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_MENU_BAR))
#define GTK_IS_MENU_ITEM_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_MENU_ITEM))
#define GTK_IS_MENU_SHELL_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_MENU_SHELL))
#define GTK_IS_MESSAGE_DIALOG_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_MESSAGE_DIALOG))
#define GTK_IS_MISC_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_MISC))
#define GTK_IS_NOTEBOOK_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_NOTEBOOK))
#define GTK_IS_PANED_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_PANED))
#define GTK_IS_PLUG_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_PLUG))
#define GTK_IS_PROGRESS_BAR_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_PROGRESS_BAR))
#define GTK_IS_RADIO_ACTION_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_RADIO_ACTION))
#define GTK_IS_RADIO_BUTTON_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_RADIO_BUTTON))
#define GTK_IS_RADIO_MENU_ITEM_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_RADIO_MENU_ITEM))
#define GTK_IS_RADIO_TOOL_BUTTON_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_RADIO_TOOL_BUTTON))
#define GTK_IS_RANGE_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_RANGE))
#define GTK_IS_RC_STYLE_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_RC_STYLE))
#define GTK_IS_RULER_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_RULER))
#define GTK_IS_SCALE_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_SCALE))
#define GTK_IS_SCROLLBAR_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_SCROLLBAR))
#define GTK_IS_SCROLLED_WINDOW_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_SCROLLED_WINDOW))
#define GTK_IS_SEPARATOR_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_SEPARATOR))
#define GTK_IS_SEPARATOR_MENU_ITEM_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_SEPARATOR_MENU_ITEM))
#define GTK_IS_SEPARATOR_TOOL_ITEM_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_SEPARATOR_TOOL_ITEM))
#define GTK_IS_SETTINGS_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_SETTINGS))
#define GTK_IS_SIZE_GROUP_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_SIZE_GROUP))
#define GTK_IS_SOCKET_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_SOCKET))
#define GTK_IS_SPIN_BUTTON_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_SPIN_BUTTON))
#define GTK_IS_STATUSBAR_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_STATUSBAR))
#define GTK_IS_STYLE_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_STYLE))
#define GTK_IS_TABLE_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_TABLE))
#define GTK_IS_TEAROFF_MENU_ITEM_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_TEAROFF_MENU_ITEM))
#define GTK_IS_TEXT_BUFFER_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_TEXT_BUFFER))
#define GTK_IS_TEXT_CHILD_ANCHOR_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_TEXT_CHILD_ANCHOR))
#define GTK_IS_TEXT_MARK_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_TEXT_MARK))
#define GTK_IS_TEXT_TAG_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_TEXT_TAG))
#define GTK_IS_TEXT_TAG_TABLE_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_TEXT_TAG_TABLE))
#define GTK_IS_TEXT_VIEW_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_TEXT_VIEW))
#define GTK_IS_TOGGLE_ACTION_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_TOGGLE_ACTION))
#define GTK_IS_TOGGLE_BUTTON_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_TOGGLE_BUTTON))
#define GTK_IS_TOGGLE_TOOL_BUTTON_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_TOGGLE_TOOL_BUTTON))
#define GTK_IS_TOOLBAR_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_TOOLBAR))
#define GTK_IS_TOOLTIPS_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_TOOLTIPS))
#define GTK_IS_TOOL_BUTTON_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_TOOL_BUTTON))
#define GTK_IS_TOOL_ITEM_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_TOOL_ITEM))
#define GTK_IS_TREE_MODEL_SORT_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_TREE_MODEL_SORT))
#define GTK_IS_TREE_SELECTION_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_TREE_SELECTION))
#define GTK_IS_TREE_STORE_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_TREE_STORE))
#define GTK_IS_TREE_VIEW_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_TREE_VIEW))
#define GTK_IS_TREE_VIEW_COLUMN_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_TREE_VIEW_COLUMN))
#define GTK_IS_UI_MANAGER_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_UI_MANAGER))
#define GTK_IS_VBOX_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_VBOX))
#define GTK_IS_VBUTTON_BOX_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_VBUTTON_BOX))
#define GTK_IS_VIEWPORT_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_VIEWPORT))
#define GTK_IS_VPANED_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_VPANED))
#define GTK_IS_VRULER_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_VRULER))
#define GTK_IS_VSCALE_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_VSCALE))
#define GTK_IS_VSCROLLBAR_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_VSCROLLBAR))
#define GTK_IS_VSEPARATOR_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_VSEPARATOR))
#define GTK_IS_WIDGET_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_WIDGET))
#define GTK_IS_WINDOW_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_WINDOW))
#define GTK_IS_WINDOW_GROUP_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_WINDOW_GROUP))
#define GTK_IS_ACTION_GROUP_CLASS(vtable)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((vtable), GTK_TYPE_ACTION_GROUP))
#define GTK_IS_CELL_VIEW_CLASS(vtable)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((vtable), GTK_TYPE_CELL_VIEW))
#define GTK_IS_COMBO_BOX_CLASS(vtable)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((vtable), GTK_TYPE_COMBO_BOX))
#define GTK_IS_COMBO_BOX_ENTRY_CLASS(vtable)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((vtable), GTK_TYPE_COMBO_BOX_ENTRY))
#define GTK_IS_EDITABLE_CLASS(vtable)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((vtable), GTK_TYPE_EDITABLE))
#define GTK_IS_TREE_MODEL_FILTER_CLASS(vtable)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((vtable), GTK_TYPE_TREE_MODEL_FILTER))
#define GTK_ACCEL_MAP(accel_map)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((accel_map), GTK_TYPE_ACCEL_MAP, \
	GtkAccelMap))
#define GTK_MENU_TOOL_BUTTON(o)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((o), GTK_TYPE_MENU_TOOL_BUTTON, \
	GtkMenuToolButton))
#define GTK_TOOL_ITEM(o)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((o), GTK_TYPE_TOOL_ITEM, GtkToolItem))
#define GTK_ACCEL_LABEL(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_ACCEL_LABEL, \
	GtkAccelLabel))
#define GTK_ACCESSIBLE(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_ACCESSIBLE, \
	GtkAccessible))
#define GTK_ACTION(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_ACTION, GtkAction))
#define GTK_ACTION_GROUP(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_ACTION_GROUP, \
	GtkActionGroup))
#define GTK_ADJUSTMENT(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_ADJUSTMENT, \
	GtkAdjustment))
#define GTK_ALIGNMENT(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_ALIGNMENT, \
	GtkAlignment))
#define GTK_ARROW(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_ARROW, GtkArrow))
#define GTK_ASPECT_FRAME(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_ASPECT_FRAME, \
	GtkAspectFrame))
#define GTK_BIN(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_BIN, GtkBin))
#define GTK_BOX(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_BOX, GtkBox))
#define GTK_BUTTON(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_BUTTON, GtkButton))
#define GTK_BUTTON_BOX(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_BUTTON_BOX, \
	GtkButtonBox))
#define GTK_CALENDAR(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_CALENDAR, GtkCalendar))
#define GTK_CELL_EDITABLE(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_CELL_EDITABLE, \
	GtkCellEditable))
#define GTK_CELL_LAYOUT(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_CELL_LAYOUT, \
	GtkCellLayout))
#define GTK_CELL_RENDERER(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_CELL_RENDERER, \
	GtkCellRenderer))
#define GTK_CELL_RENDERER_COMBO(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_CELL_RENDERER_COMBO, \
	GtkCellRendererCombo))
#define GTK_CELL_RENDERER_PIXBUF(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_CELL_RENDERER_PIXBUF, \
	GtkCellRendererPixbuf))
#define GTK_CELL_RENDERER_PROGRESS(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_CELL_RENDERER_PROGRESS, \
	GtkCellRendererProgress))
#define GTK_CELL_RENDERER_TEXT(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_CELL_RENDERER_TEXT, \
	GtkCellRendererText))
#define GTK_CELL_RENDERER_TOGGLE(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_CELL_RENDERER_TOGGLE, \
	GtkCellRendererToggle))
#define GTK_CELL_VIEW(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_CELL_VIEW, GtkCellView))
#define GTK_CHECK_BUTTON(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_CHECK_BUTTON, \
	GtkCheckButton))
#define GTK_CHECK_MENU_ITEM(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_CHECK_MENU_ITEM, \
	GtkCheckMenuItem))
#define GTK_CLIPBOARD(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_CLIPBOARD, \
	GtkClipboard))
#define GTK_COLOR_BUTTON(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_COLOR_BUTTON, \
	GtkColorButton))
#define GTK_COLOR_SELECTION(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_COLOR_SELECTION, \
	GtkColorSelection))
#define GTK_COLOR_SELECTION_DIALOG(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_COLOR_SELECTION_DIALOG, \
	GtkColorSelectionDialog))
#define GTK_COMBO_BOX(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_COMBO_BOX, GtkComboBox))
#define GTK_COMBO_BOX_ENTRY(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_COMBO_BOX_ENTRY, \
	GtkComboBoxEntry))
#define GTK_CONTAINER(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_CONTAINER, \
	GtkContainer))
#define GTK_CURVE(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_CURVE, GtkCurve))
#define GTK_DIALOG(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_DIALOG, GtkDialog))
#define GTK_DRAWING_AREA(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_DRAWING_AREA, \
	GtkDrawingArea))
#define GTK_EDITABLE(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_EDITABLE, GtkEditable))
#define GTK_ENTRY(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_ENTRY, GtkEntry))
#define GTK_ENTRY_COMPLETION(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_ENTRY_COMPLETION, \
	GtkEntryCompletion))
#define GTK_EVENT_BOX(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_EVENT_BOX, GtkEventBox))
#define GTK_EXPANDER(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_EXPANDER, GtkExpander))
#define GTK_FILE_CHOOSER(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_FILE_CHOOSER, \
	GtkFileChooser))
#define GTK_FILE_CHOOSER_DIALOG(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_FILE_CHOOSER_DIALOG, \
	GtkFileChooserDialog))
#define GTK_FILE_CHOOSER_WIDGET(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_FILE_CHOOSER_WIDGET, \
	GtkFileChooserWidget))
#define GTK_FILE_FILTER(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_FILE_FILTER, \
	GtkFileFilter))
#define GTK_FILE_SELECTION(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_FILE_SELECTION, \
	GtkFileSelection))
#define GTK_FIXED(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_FIXED, GtkFixed))
#define GTK_FONT_BUTTON(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_FONT_BUTTON, \
	GtkFontButton))
#define GTK_FONT_SELECTION(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_FONT_SELECTION, \
	GtkFontSelection))
#define GTK_FONT_SELECTION_DIALOG(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_FONT_SELECTION_DIALOG, \
	GtkFontSelectionDialog))
#define GTK_FRAME(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_FRAME, GtkFrame))
#define GTK_GAMMA_CURVE(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_GAMMA_CURVE, \
	GtkGammaCurve))
#define GTK_HANDLE_BOX(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_HANDLE_BOX, \
	GtkHandleBox))
#define GTK_HBOX(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_HBOX, GtkHBox))
#define GTK_HBUTTON_BOX(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_HBUTTON_BOX, \
	GtkHButtonBox))
#define GTK_HPANED(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_HPANED, GtkHPaned))
#define GTK_HRULER(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_HRULER, GtkHRuler))
#define GTK_HSCALE(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_HSCALE, GtkHScale))
#define GTK_HSCROLLBAR(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_HSCROLLBAR, \
	GtkHScrollbar))
#define GTK_HSEPARATOR(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_HSEPARATOR, \
	GtkHSeparator))
#define GTK_ICON_THEME(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_ICON_THEME, \
	GtkIconTheme))
#define GTK_IMAGE(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_IMAGE, GtkImage))
#define GTK_IMAGE_MENU_ITEM(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_IMAGE_MENU_ITEM, \
	GtkImageMenuItem))
#define GTK_IM_CONTEXT(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_IM_CONTEXT, \
	GtkIMContext))
#define GTK_IM_CONTEXT_SIMPLE(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_IM_CONTEXT_SIMPLE, \
	GtkIMContextSimple))
#define GTK_IM_MULTICONTEXT(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_IM_MULTICONTEXT, \
	GtkIMMulticontext))
#define GTK_INPUT_DIALOG(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_INPUT_DIALOG, \
	GtkInputDialog))
#define GTK_INVISIBLE(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_INVISIBLE, \
	GtkInvisible))
#define GTK_ITEM(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_ITEM, GtkItem))
#define GTK_LABEL(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_LABEL, GtkLabel))
#define GTK_LAYOUT(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_LAYOUT, GtkLayout))
#define GTK_LIST_STORE(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_LIST_STORE, \
	GtkListStore))
#define GTK_MENU(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_MENU, GtkMenu))
#define GTK_MENU_BAR(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_MENU_BAR, GtkMenuBar))
#define GTK_MENU_ITEM(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_MENU_ITEM, GtkMenuItem))
#define GTK_MENU_SHELL(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_MENU_SHELL, \
	GtkMenuShell))
#define GTK_MESSAGE_DIALOG(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_MESSAGE_DIALOG, \
	GtkMessageDialog))
#define GTK_MISC(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_MISC, GtkMisc))
#define GTK_NOTEBOOK(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_NOTEBOOK, GtkNotebook))
#define GTK_PANED(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_PANED, GtkPaned))
#define GTK_PLUG(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_PLUG, GtkPlug))
#define GTK_PROGRESS_BAR(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_PROGRESS_BAR, \
	GtkProgressBar))
#define GTK_RADIO_ACTION(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_RADIO_ACTION, \
	GtkRadioAction))
#define GTK_RADIO_BUTTON(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_RADIO_BUTTON, \
	GtkRadioButton))
#define GTK_RADIO_MENU_ITEM(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_RADIO_MENU_ITEM, \
	GtkRadioMenuItem))
#define GTK_RADIO_TOOL_BUTTON(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_RADIO_TOOL_BUTTON, \
	GtkRadioToolButton))
#define GTK_RANGE(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_RANGE, GtkRange))
#define GTK_RULER(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_RULER, GtkRuler))
#define GTK_SCALE(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_SCALE, GtkScale))
#define GTK_SCROLLBAR(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_SCROLLBAR, \
	GtkScrollbar))
#define GTK_SCROLLED_WINDOW(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_SCROLLED_WINDOW, \
	GtkScrolledWindow))
#define GTK_SEPARATOR(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_SEPARATOR, \
	GtkSeparator))
#define GTK_SEPARATOR_MENU_ITEM(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_SEPARATOR_MENU_ITEM, \
	GtkSeparatorMenuItem))
#define GTK_SEPARATOR_TOOL_ITEM(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_SEPARATOR_TOOL_ITEM, \
	GtkSeparatorToolItem))
#define GTK_SETTINGS(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_SETTINGS, GtkSettings))
#define GTK_SIZE_GROUP(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_SIZE_GROUP, \
	GtkSizeGroup))
#define GTK_SOCKET(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_SOCKET, GtkSocket))
#define GTK_SPIN_BUTTON(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_SPIN_BUTTON, \
	GtkSpinButton))
#define GTK_STATUSBAR(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_STATUSBAR, \
	GtkStatusbar))
#define GTK_TABLE(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_TABLE, GtkTable))
#define GTK_TEAROFF_MENU_ITEM(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_TEAROFF_MENU_ITEM, \
	GtkTearoffMenuItem))
#define GTK_TEXT_BUFFER(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_TEXT_BUFFER, \
	GtkTextBuffer))
#define GTK_TEXT_TAG(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_TEXT_TAG, GtkTextTag))
#define GTK_TEXT_TAG_TABLE(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_TEXT_TAG_TABLE, \
	GtkTextTagTable))
#define GTK_TEXT_VIEW(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_TEXT_VIEW, GtkTextView))
#define GTK_TOGGLE_ACTION(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_TOGGLE_ACTION, \
	GtkToggleAction))
#define GTK_TOGGLE_BUTTON(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_TOGGLE_BUTTON, \
	GtkToggleButton))
#define GTK_TOGGLE_TOOL_BUTTON(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_TOGGLE_TOOL_BUTTON, \
	GtkToggleToolButton))
#define GTK_TOOLBAR(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_TOOLBAR, GtkToolbar))
#define GTK_TOOLTIPS(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_TOOLTIPS, GtkTooltips))
#define GTK_TOOL_BUTTON(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_TOOL_BUTTON, \
	GtkToolButton))
#define GTK_TREE_DRAG_DEST(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_TREE_DRAG_DEST, \
	GtkTreeDragDest))
#define GTK_TREE_DRAG_SOURCE(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_TREE_DRAG_SOURCE, \
	GtkTreeDragSource))
#define GTK_TREE_MODEL(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_TREE_MODEL, \
	GtkTreeModel))
#define GTK_TREE_MODEL_FILTER(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_TREE_MODEL_FILTER, \
	GtkTreeModelFilter))
#define GTK_TREE_MODEL_SORT(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_TREE_MODEL_SORT, \
	GtkTreeModelSort))
#define GTK_TREE_SELECTION(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_TREE_SELECTION, \
	GtkTreeSelection))
#define GTK_TREE_SORTABLE(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_TREE_SORTABLE, \
	GtkTreeSortable))
#define GTK_TREE_STORE(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_TREE_STORE, \
	GtkTreeStore))
#define GTK_TREE_VIEW(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_TREE_VIEW, GtkTreeView))
#define GTK_TREE_VIEW_COLUMN(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_TREE_VIEW_COLUMN, \
	GtkTreeViewColumn))
#define GTK_UI_MANAGER(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_UI_MANAGER, \
	GtkUIManager))
#define GTK_VBOX(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_VBOX, GtkVBox))
#define GTK_VBUTTON_BOX(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_VBUTTON_BOX, \
	GtkVButtonBox))
#define GTK_VIEWPORT(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_VIEWPORT, GtkViewport))
#define GTK_VPANED(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_VPANED, GtkVPaned))
#define GTK_VRULER(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_VRULER, GtkVRuler))
#define GTK_VSCALE(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_VSCALE, GtkVScale))
#define GTK_VSCROLLBAR(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_VSCROLLBAR, \
	GtkVScrollbar))
#define GTK_VSEPARATOR(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_VSEPARATOR, \
	GtkVSeparator))
#define GTK_WINDOW(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_WINDOW, GtkWindow))
#define GTK_ABOUT_DIALOG(object)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((object), GTK_TYPE_ABOUT_DIALOG, \
	GtkAboutDialog))
#define GTK_ACCEL_GROUP(object)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((object), GTK_TYPE_ACCEL_GROUP, \
	GtkAccelGroup))
#define GTK_FILE_CHOOSER_BUTTON(object)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((object), GTK_TYPE_FILE_CHOOSER_BUTTON, \
	GtkFileChooserButton))
#define GTK_ICON_FACTORY(object)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((object), GTK_TYPE_ICON_FACTORY, \
	GtkIconFactory))
#define GTK_RC_STYLE(object)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((object), GTK_TYPE_RC_STYLE, \
	GtkRcStyle))
#define GTK_STYLE(object)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((object), GTK_TYPE_STYLE, GtkStyle))
#define GTK_TEXT_CHILD_ANCHOR(object)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((object), GTK_TYPE_TEXT_CHILD_ANCHOR, \
	GtkTextChildAnchor))
#define GTK_TEXT_MARK(object)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((object), GTK_TYPE_TEXT_MARK, \
	GtkTextMark))
#define GTK_WINDOW_GROUP(object)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((object), GTK_TYPE_WINDOW_GROUP, \
	GtkWindowGroup))
#define GTK_WIDGET(widget)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((widget), GTK_TYPE_WIDGET, GtkWidget))
#define GTK_IS_ACCEL_MAP(accel_map)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((accel_map), GTK_TYPE_ACCEL_MAP))
#define GTK_IS_MENU_TOOL_BUTTON(o)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((o), GTK_TYPE_MENU_TOOL_BUTTON))
#define GTK_IS_TOOL_ITEM(o)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((o), GTK_TYPE_TOOL_ITEM))
#define GTK_IS_ACCEL_LABEL(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_ACCEL_LABEL))
#define GTK_IS_ACCESSIBLE(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_ACCESSIBLE))
#define GTK_IS_ACTION(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_ACTION))
#define GTK_IS_ACTION_GROUP(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_ACTION_GROUP))
#define GTK_IS_ADJUSTMENT(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_ADJUSTMENT))
#define GTK_IS_ALIGNMENT(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_ALIGNMENT))
#define GTK_IS_ARROW(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_ARROW))
#define GTK_IS_ASPECT_FRAME(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_ASPECT_FRAME))
#define GTK_IS_BUTTON(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_BUTTON))
#define GTK_IS_BUTTON_BOX(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_BUTTON_BOX))
#define GTK_IS_CALENDAR(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_CALENDAR))
#define GTK_IS_CELL_EDITABLE(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_CELL_EDITABLE))
#define GTK_IS_CELL_LAYOUT(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_CELL_LAYOUT))
#define GTK_IS_CELL_RENDERER(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_CELL_RENDERER))
#define GTK_IS_CELL_RENDERER_COMBO(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_CELL_RENDERER_COMBO))
#define GTK_IS_CELL_RENDERER_PIXBUF(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_CELL_RENDERER_PIXBUF))
#define GTK_IS_CELL_RENDERER_PROGRESS(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_CELL_RENDERER_PROGRESS))
#define GTK_IS_CELL_RENDERER_TEXT(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_CELL_RENDERER_TEXT))
#define GTK_IS_CELL_RENDERER_TOGGLE(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_CELL_RENDERER_TOGGLE))
#define GTK_IS_CELL_VIEW(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_CELL_VIEW))
#define GTK_IS_CHECK_BUTTON(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_CHECK_BUTTON))
#define GTK_IS_CHECK_MENU_ITEM(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_CHECK_MENU_ITEM))
#define GTK_IS_CLIPBOARD(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_CLIPBOARD))
#define GTK_IS_COLOR_BUTTON(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_COLOR_BUTTON))
#define GTK_IS_COLOR_SELECTION(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_COLOR_SELECTION))
#define GTK_IS_COLOR_SELECTION_DIALOG(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_COLOR_SELECTION_DIALOG))
#define GTK_IS_COMBO_BOX(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_COMBO_BOX))
#define GTK_IS_COMBO_BOX_ENTRY(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_COMBO_BOX_ENTRY))
#define GTK_IS_CONTAINER(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_CONTAINER))
#define GTK_IS_CURVE(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_CURVE))
#define GTK_IS_DIALOG(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_DIALOG))
#define GTK_IS_DRAWING_AREA(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_DRAWING_AREA))
#define GTK_IS_EDITABLE(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_EDITABLE))
#define GTK_IS_ENTRY(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_ENTRY))
#define GTK_IS_ENTRY_COMPLETION(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_ENTRY_COMPLETION))
#define GTK_IS_EVENT_BOX(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_EVENT_BOX))
#define GTK_IS_EXPANDER(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_EXPANDER))
#define GTK_IS_FILE_CHOOSER(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_FILE_CHOOSER))
#define GTK_IS_FILE_CHOOSER_DIALOG(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_FILE_CHOOSER_DIALOG))
#define GTK_IS_FILE_CHOOSER_WIDGET(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_FILE_CHOOSER_WIDGET))
#define GTK_IS_FILE_FILTER(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_FILE_FILTER))
#define GTK_IS_FILE_SELECTION(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_FILE_SELECTION))
#define GTK_IS_FIXED(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_FIXED))
#define GTK_IS_FONT_BUTTON(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_FONT_BUTTON))
#define GTK_IS_FONT_SELECTION(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_FONT_SELECTION))
#define GTK_IS_FONT_SELECTION_DIALOG(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_FONT_SELECTION_DIALOG))
#define GTK_IS_FRAME(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_FRAME))
#define GTK_IS_GAMMA_CURVE(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_GAMMA_CURVE))
#define GTK_IS_HANDLE_BOX(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_HANDLE_BOX))
#define GTK_IS_HBOX(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_HBOX))
#define GTK_IS_HBUTTON_BOX(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_HBUTTON_BOX))
#define GTK_IS_HPANED(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_HPANED))
#define GTK_IS_HRULER(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_HRULER))
#define GTK_IS_HSCALE(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_HSCALE))
#define GTK_IS_HSCROLLBAR(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_HSCROLLBAR))
#define GTK_IS_HSEPARATOR(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_HSEPARATOR))
#define GTK_IS_ICON_THEME(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_ICON_THEME))
#define GTK_IS_IMAGE(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_IMAGE))
#define GTK_IS_IMAGE_MENU_ITEM(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_IMAGE_MENU_ITEM))
#define GTK_IS_IM_CONTEXT(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_IM_CONTEXT))
#define GTK_IS_IM_CONTEXT_SIMPLE(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_IM_CONTEXT_SIMPLE))
#define GTK_IS_IM_MULTICONTEXT(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_IM_MULTICONTEXT))
#define GTK_IS_INPUT_DIALOG(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_INPUT_DIALOG))
#define GTK_IS_INVISIBLE(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_INVISIBLE))
#define GTK_IS_ITEM(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_ITEM))
#define GTK_IS_LABEL(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_LABEL))
#define GTK_IS_LAYOUT(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_LAYOUT))
#define GTK_IS_LIST_STORE(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_LIST_STORE))
#define GTK_IS_MENU(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_MENU))
#define GTK_IS_MENU_BAR(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_MENU_BAR))
#define GTK_IS_MENU_ITEM(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_MENU_ITEM))
#define GTK_IS_MENU_SHELL(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_MENU_SHELL))
#define GTK_IS_MESSAGE_DIALOG(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_MESSAGE_DIALOG))
#define GTK_IS_MISC(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_MISC))
#define GTK_IS_NOTEBOOK(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_NOTEBOOK))
#define GTK_IS_PANED(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_PANED))
#define GTK_IS_PLUG(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_PLUG))
#define GTK_IS_PROGRESS_BAR(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_PROGRESS_BAR))
#define GTK_IS_RADIO_ACTION(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_RADIO_ACTION))
#define GTK_IS_RADIO_BUTTON(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_RADIO_BUTTON))
#define GTK_IS_RADIO_MENU_ITEM(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_RADIO_MENU_ITEM))
#define GTK_IS_RADIO_TOOL_BUTTON(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_RADIO_TOOL_BUTTON))
#define GTK_IS_RANGE(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_RANGE))
#define GTK_IS_RULER(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_RULER))
#define GTK_IS_SCALE(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_SCALE))
#define GTK_IS_SCROLLBAR(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_SCROLLBAR))
#define GTK_IS_SCROLLED_WINDOW(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_SCROLLED_WINDOW))
#define GTK_IS_SEPARATOR(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_SEPARATOR))
#define GTK_IS_SEPARATOR_MENU_ITEM(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_SEPARATOR_MENU_ITEM))
#define GTK_IS_SEPARATOR_TOOL_ITEM(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_SEPARATOR_TOOL_ITEM))
#define GTK_IS_SETTINGS(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_SETTINGS))
#define GTK_IS_SIZE_GROUP(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_SIZE_GROUP))
#define GTK_IS_SOCKET(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_SOCKET))
#define GTK_IS_SPIN_BUTTON(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_SPIN_BUTTON))
#define GTK_IS_STATUSBAR(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_STATUSBAR))
#define GTK_IS_TABLE(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_TABLE))
#define GTK_IS_TEAROFF_MENU_ITEM(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_TEAROFF_MENU_ITEM))
#define GTK_IS_TEXT_BUFFER(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_TEXT_BUFFER))
#define GTK_IS_TEXT_TAG(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_TEXT_TAG))
#define GTK_IS_TEXT_TAG_TABLE(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_TEXT_TAG_TABLE))
#define GTK_IS_TEXT_VIEW(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_TEXT_VIEW))
#define GTK_IS_TOGGLE_ACTION(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_TOGGLE_ACTION))
#define GTK_IS_TOGGLE_BUTTON(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_TOGGLE_BUTTON))
#define GTK_IS_TOGGLE_TOOL_BUTTON(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_TOGGLE_TOOL_BUTTON))
#define GTK_IS_TOOLBAR(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_TOOLBAR))
#define GTK_IS_TOOLTIPS(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_TOOLTIPS))
#define GTK_IS_TOOL_BUTTON(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_TOOL_BUTTON))
#define GTK_IS_TREE_DRAG_DEST(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_TREE_DRAG_DEST))
#define GTK_IS_TREE_DRAG_SOURCE(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_TREE_DRAG_SOURCE))
#define GTK_IS_TREE_MODEL(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_TREE_MODEL))
#define GTK_IS_TREE_MODEL_FILTER(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_TREE_MODEL_FILTER))
#define GTK_IS_TREE_MODEL_SORT(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_TREE_MODEL_SORT))
#define GTK_IS_TREE_SELECTION(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_TREE_SELECTION))
#define GTK_IS_TREE_SORTABLE(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_TREE_SORTABLE))
#define GTK_IS_TREE_STORE(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_TREE_STORE))
#define GTK_IS_TREE_VIEW(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_TREE_VIEW))
#define GTK_IS_TREE_VIEW_COLUMN(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_TREE_VIEW_COLUMN))
#define GTK_IS_UI_MANAGER(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_UI_MANAGER))
#define GTK_IS_VBOX(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_VBOX))
#define GTK_IS_VBUTTON_BOX(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_VBUTTON_BOX))
#define GTK_IS_VIEWPORT(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_VIEWPORT))
#define GTK_IS_VPANED(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_VPANED))
#define GTK_IS_VRULER(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_VRULER))
#define GTK_IS_VSCALE(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_VSCALE))
#define GTK_IS_VSCROLLBAR(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_VSCROLLBAR))
#define GTK_IS_VSEPARATOR(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_VSEPARATOR))
#define GTK_IS_WINDOW(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_WINDOW))
#define GTK_IS_ABOUT_DIALOG(object)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((object), GTK_TYPE_ABOUT_DIALOG))
#define GTK_IS_ACCEL_GROUP(object)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((object), GTK_TYPE_ACCEL_GROUP))
#define GTK_IS_FILE_CHOOSER_BUTTON(object)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((object), GTK_TYPE_FILE_CHOOSER_BUTTON))
#define GTK_IS_ICON_FACTORY(object)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((object), GTK_TYPE_ICON_FACTORY))
#define GTK_IS_RC_STYLE(object)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((object), GTK_TYPE_RC_STYLE))
#define GTK_IS_STYLE(object)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((object), GTK_TYPE_STYLE))
#define GTK_IS_TEXT_CHILD_ANCHOR(object)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((object), GTK_TYPE_TEXT_CHILD_ANCHOR))
#define GTK_IS_TEXT_MARK(object)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((object), GTK_TYPE_TEXT_MARK))
#define GTK_IS_WINDOW_GROUP(object)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((object), GTK_TYPE_WINDOW_GROUP))
#define GTK_IS_WIDGET(widget)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((widget), GTK_TYPE_WIDGET))
#define GTK_ACTION_GROUP_GET_CLASS(inst)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((inst), GTK_TYPE_ACTION_GROUP, \
	GtkActionGroupClass))
#define GTK_CELL_VIEW_GET_CLASS(inst)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((inst), GTK_TYPE_CELL_VIEW, \
	GtkCellViewClass))
#define GTK_COMBO_BOX_GET_CLASS(inst)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((inst), GTK_TYPE_COMBO_BOX, \
	GtkComboBoxClass))
#define GTK_COMBO_BOX_ENTRY_GET_CLASS(inst)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((inst), GTK_TYPE_COMBO_BOX_ENTRY, \
	GtkComboBoxEntryClass))
#define GTK_MENU_TOOL_BUTTON_GET_CLASS(o)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((o), GTK_TYPE_MENU_TOOL_BUTTON, \
	GtkMenuToolButtonClass))
#define GTK_ABOUT_DIALOG_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GTK_TYPE_ABOUT_DIALOG, \
	GtkAboutDialogClass))
#define GTK_ACCEL_GROUP_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GTK_TYPE_ACCEL_GROUP, \
	GtkAccelGroupClass))
#define GTK_ACCEL_LABEL_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GTK_TYPE_ACCEL_LABEL, \
	GtkAccelLabelClass))
#define GTK_ACCEL_MAP_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GTK_TYPE_ACCEL_MAP, \
	GtkAccelMapClass))
#define GTK_ACCESSIBLE_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GTK_TYPE_ACCESSIBLE, \
	GtkAccessibleClass))
#define GTK_ADJUSTMENT_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GTK_TYPE_ADJUSTMENT, \
	GtkAdjustmentClass))
#define GTK_ALIGNMENT_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GTK_TYPE_ALIGNMENT, \
	GtkAlignmentClass))
#define GTK_ARROW_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GTK_TYPE_ARROW, GtkArrowClass))
#define GTK_ASPECT_FRAME_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GTK_TYPE_ASPECT_FRAME, \
	GtkAspectFrameClass))
#define GTK_BIN_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GTK_TYPE_BIN, GtkBinClass))
#define GTK_BOX_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GTK_TYPE_BOX, GtkBoxClass))
#define GTK_BUTTON_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GTK_TYPE_BUTTON, GtkButtonClass))
#define GTK_BUTTON_BOX_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GTK_TYPE_BUTTON_BOX, \
	GtkButtonBoxClass))
#define GTK_CALENDAR_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GTK_TYPE_CALENDAR, \
	GtkCalendarClass))
#define GTK_CELL_RENDERER_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GTK_TYPE_CELL_RENDERER, \
	GtkCellRendererClass))
#define GTK_CELL_RENDERER_COMBO_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GTK_TYPE_CELL_RENDERER_COMBO, \
	GtkCellRendererTextClass))
#define GTK_CELL_RENDERER_PIXBUF_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GTK_TYPE_CELL_RENDERER_PIXBUF, \
	GtkCellRendererPixbufClass))
#define GTK_CELL_RENDERER_PROGRESS_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GTK_TYPE_CELL_RENDERER_PROGRESS, \
	GtkCellRendererProgressClass))
#define GTK_CELL_RENDERER_TEXT_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GTK_TYPE_CELL_RENDERER_TEXT, \
	GtkCellRendererTextClass))
#define GTK_CELL_RENDERER_TOGGLE_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GTK_TYPE_CELL_RENDERER_TOGGLE, \
	GtkCellRendererToggleClass))
#define GTK_CHECK_BUTTON_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GTK_TYPE_CHECK_BUTTON, \
	GtkCheckButtonClass))
#define GTK_CHECK_MENU_ITEM_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GTK_TYPE_CHECK_MENU_ITEM, \
	GtkCheckMenuItemClass))
#define GTK_COLOR_BUTTON_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GTK_TYPE_COLOR_BUTTON, \
	GtkColorButtonClass))
#define GTK_COLOR_SELECTION_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GTK_TYPE_COLOR_SELECTION, \
	GtkColorSelectionClass))
#define GTK_COLOR_SELECTION_DIALOG_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GTK_TYPE_COLOR_SELECTION_DIALOG, \
	GtkColorSelectionDialogClass))
#define GTK_CONTAINER_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GTK_TYPE_CONTAINER, \
	GtkContainerClass))
#define GTK_CURVE_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GTK_TYPE_CURVE, GtkCurveClass))
#define GTK_DIALOG_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GTK_TYPE_DIALOG, GtkDialogClass))
#define GTK_DRAWING_AREA_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GTK_TYPE_DRAWING_AREA, \
	GtkDrawingAreaClass))
#define GTK_ENTRY_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GTK_TYPE_ENTRY, GtkEntryClass))
#define GTK_ENTRY_COMPLETION_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GTK_TYPE_ENTRY_COMPLETION, \
	GtkEntryCompletionClass))
#define GTK_EVENT_BOX_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GTK_TYPE_EVENT_BOX, \
	GtkEventBoxClass))
#define GTK_EXPANDER_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GTK_TYPE_EXPANDER, \
	GtkExpanderClass))
#define GTK_FILE_CHOOSER_DIALOG_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GTK_TYPE_FILE_CHOOSER_DIALOG, \
	GtkFileChooserDialogClass))
#define GTK_FILE_CHOOSER_WIDGET_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GTK_TYPE_FILE_CHOOSER_WIDGET, \
	GtkFileChooserWidgetClass))
#define GTK_FILE_SELECTION_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GTK_TYPE_FILE_SELECTION, \
	GtkFileSelectionClass))
#define GTK_FIXED_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GTK_TYPE_FIXED, GtkFixedClass))
#define GTK_FONT_BUTTON_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GTK_TYPE_FONT_BUTTON, \
	GtkFontButtonClass))
#define GTK_FONT_SELECTION_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GTK_TYPE_FONT_SELECTION, \
	GtkFontSelectionClass))
#define GTK_FONT_SELECTION_DIALOG_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GTK_TYPE_FONT_SELECTION_DIALOG, \
	GtkFontSelectionDialogClass))
#define GTK_FRAME_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GTK_TYPE_FRAME, GtkFrameClass))
#define GTK_GAMMA_CURVE_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GTK_TYPE_GAMMA_CURVE, \
	GtkGammaCurveClass))
#define GTK_HANDLE_BOX_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GTK_TYPE_HANDLE_BOX, \
	GtkHandleBoxClass))
#define GTK_HBOX_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GTK_TYPE_HBOX, GtkHBoxClass))
#define GTK_HBUTTON_BOX_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GTK_TYPE_HBUTTON_BOX, \
	GtkHButtonBoxClass))
#define GTK_HPANED_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GTK_TYPE_HPANED, GtkHPanedClass))
#define GTK_HRULER_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GTK_TYPE_HRULER, GtkHRulerClass))
#define GTK_HSCALE_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GTK_TYPE_HSCALE, GtkHScaleClass))
#define GTK_HSCROLLBAR_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GTK_TYPE_HSCROLLBAR, \
	GtkHScrollbarClass))
#define GTK_HSEPARATOR_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GTK_TYPE_HSEPARATOR, \
	GtkHSeparatorClass))
#define GTK_ICON_FACTORY_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GTK_TYPE_ICON_FACTORY, \
	GtkIconFactoryClass))
#define GTK_ICON_THEME_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GTK_TYPE_ICON_THEME, \
	GtkIconThemeClass))
#define GTK_IMAGE_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GTK_TYPE_IMAGE, GtkImageClass))
#define GTK_IMAGE_MENU_ITEM_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GTK_TYPE_IMAGE_MENU_ITEM, \
	GtkImageMenuItemClass))
#define GTK_IM_CONTEXT_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GTK_TYPE_IM_CONTEXT, \
	GtkIMContextClass))
#define GTK_IM_CONTEXT_SIMPLE_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GTK_TYPE_IM_CONTEXT_SIMPLE, \
	GtkIMContextSimpleClass))
#define GTK_IM_MULTICONTEXT_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GTK_TYPE_IM_MULTICONTEXT, \
	GtkIMMulticontextClass))
#define GTK_INPUT_DIALOG_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GTK_TYPE_INPUT_DIALOG, \
	GtkInputDialogClass))
#define GTK_INVISIBLE_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GTK_TYPE_INVISIBLE, \
	GtkInvisibleClass))
#define GTK_ITEM_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GTK_TYPE_ITEM, GtkItemClass))
#define GTK_LABEL_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GTK_TYPE_LABEL, GtkLabelClass))
#define GTK_LAYOUT_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GTK_TYPE_LAYOUT, GtkLayoutClass))
#define GTK_LIST_STORE_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GTK_TYPE_LIST_STORE, \
	GtkListStoreClass))
#define GTK_MENU_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GTK_TYPE_MENU, GtkMenuClass))
#define GTK_MENU_BAR_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GTK_TYPE_MENU_BAR, \
	GtkMenuBarClass))
#define GTK_MENU_ITEM_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GTK_TYPE_MENU_ITEM, \
	GtkMenuItemClass))
#define GTK_MENU_SHELL_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GTK_TYPE_MENU_SHELL, \
	GtkMenuShellClass))
#define GTK_MESSAGE_DIALOG_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GTK_TYPE_MESSAGE_DIALOG, \
	GtkMessageDialogClass))
#define GTK_MISC_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GTK_TYPE_MISC, GtkMiscClass))
#define GTK_NOTEBOOK_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GTK_TYPE_NOTEBOOK, \
	GtkNotebookClass))
#define GTK_PANED_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GTK_TYPE_PANED, GtkPanedClass))
#define GTK_PLUG_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GTK_TYPE_PLUG, GtkPlugClass))
#define GTK_PROGRESS_BAR_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GTK_TYPE_PROGRESS_BAR, \
	GtkProgressBarClass))
#define GTK_RADIO_BUTTON_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GTK_TYPE_RADIO_BUTTON, \
	GtkRadioButtonClass))
#define GTK_RADIO_MENU_ITEM_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GTK_TYPE_RADIO_MENU_ITEM, \
	GtkRadioMenuItemClass))
#define GTK_RANGE_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GTK_TYPE_RANGE, GtkRangeClass))
#define GTK_RC_STYLE_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GTK_TYPE_RC_STYLE, \
	GtkRcStyleClass))
#define GTK_RULER_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GTK_TYPE_RULER, GtkRulerClass))
#define GTK_SCALE_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GTK_TYPE_SCALE, GtkScaleClass))
#define GTK_SCROLLBAR_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GTK_TYPE_SCROLLBAR, \
	GtkScrollbarClass))
#define GTK_SCROLLED_WINDOW_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GTK_TYPE_SCROLLED_WINDOW, \
	GtkScrolledWindowClass))
#define GTK_SEPARATOR_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GTK_TYPE_SEPARATOR, \
	GtkSeparatorClass))
#define GTK_SEPARATOR_MENU_ITEM_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GTK_TYPE_SEPARATOR_MENU_ITEM, \
	GtkSeparatorMenuItemClass))
#define GTK_SETTINGS_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GTK_TYPE_SETTINGS, \
	GtkSettingsClass))
#define GTK_SIZE_GROUP_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GTK_TYPE_SIZE_GROUP, \
	GtkSizeGroupClass))
#define GTK_SOCKET_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GTK_TYPE_SOCKET, GtkSocketClass))
#define GTK_SPIN_BUTTON_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GTK_TYPE_SPIN_BUTTON, \
	GtkSpinButtonClass))
#define GTK_STATUSBAR_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GTK_TYPE_STATUSBAR, \
	GtkStatusbarClass))
#define GTK_STYLE_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GTK_TYPE_STYLE, GtkStyleClass))
#define GTK_TABLE_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GTK_TYPE_TABLE, GtkTableClass))
#define GTK_TEAROFF_MENU_ITEM_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GTK_TYPE_TEAROFF_MENU_ITEM, \
	GtkTearoffMenuItemClass))
#define GTK_TEXT_BUFFER_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GTK_TYPE_TEXT_BUFFER, \
	GtkTextBufferClass))
#define GTK_TEXT_CHILD_ANCHOR_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GTK_TYPE_TEXT_CHILD_ANCHOR, \
	GtkTextChildAnchorClass))
#define GTK_TEXT_MARK_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GTK_TYPE_TEXT_MARK, \
	GtkTextMarkClass))
#define GTK_TEXT_TAG_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GTK_TYPE_TEXT_TAG, \
	GtkTextTagClass))
#define GTK_TEXT_TAG_TABLE_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GTK_TYPE_TEXT_TAG_TABLE, \
	GtkTextTagTableClass))
#define GTK_TEXT_VIEW_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GTK_TYPE_TEXT_VIEW, \
	GtkTextViewClass))
#define GTK_TOGGLE_BUTTON_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GTK_TYPE_TOGGLE_BUTTON, \
	GtkToggleButtonClass))
#define GTK_TOOLBAR_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GTK_TYPE_TOOLBAR, \
	GtkToolbarClass))
#define GTK_TOOLTIPS_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GTK_TYPE_TOOLTIPS, \
	GtkTooltipsClass))
#define GTK_TREE_MODEL_FILTER_GET_CLASS(inst)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GTK_TYPE_TREE_MODEL_FILTER, \
	GtkTreeModelFilterClass))
#define GTK_TREE_MODEL_SORT_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GTK_TYPE_TREE_MODEL_SORT, \
	GtkTreeModelSortClass))
#define GTK_TREE_SELECTION_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GTK_TYPE_TREE_SELECTION, \
	GtkTreeSelectionClass))
#define GTK_TREE_STORE_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GTK_TYPE_TREE_STORE, \
	GtkTreeStoreClass))
#define GTK_TREE_VIEW_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GTK_TYPE_TREE_VIEW, \
	GtkTreeViewClass))
#define GTK_TREE_VIEW_COLUMN_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GTK_TYPE_TREE_VIEW_COLUMN, \
	GtkTreeViewColumnClass))
#define GTK_VBOX_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GTK_TYPE_VBOX, GtkVBoxClass))
#define GTK_VBUTTON_BOX_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GTK_TYPE_VBUTTON_BOX, \
	GtkVButtonBoxClass))
#define GTK_VIEWPORT_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GTK_TYPE_VIEWPORT, \
	GtkViewportClass))
#define GTK_VPANED_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GTK_TYPE_VPANED, GtkVPanedClass))
#define GTK_VRULER_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GTK_TYPE_VRULER, GtkVRulerClass))
#define GTK_VSCALE_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GTK_TYPE_VSCALE, GtkVScaleClass))
#define GTK_VSCROLLBAR_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GTK_TYPE_VSCROLLBAR, \
	GtkVScrollbarClass))
#define GTK_VSEPARATOR_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GTK_TYPE_VSEPARATOR, \
	GtkVSeparatorClass))
#define GTK_WIDGET_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GTK_TYPE_WIDGET, GtkWidgetClass))
#define GTK_WINDOW_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GTK_TYPE_WINDOW, GtkWindowClass))
#define GTK_WINDOW_GROUP_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GTK_TYPE_WINDOW_GROUP, \
	GtkWindowGroupClass))
#define GTK_FILE_CHOOSER_BUTTON_GET_CLASS(object)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((object), GTK_TYPE_FILE_CHOOSER_BUTTON, \
	GtkFileChooserButtonClass))
#define GTK_TOOL_ITEM_GET_CLASS(o)	 \
	(G_TYPE_INSTANCE_GET_CLASS((o), GTK_TYPE_TOOL_ITEM, \
	GtkToolItemClass))
#define GTK_ACTION_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS((obj), GTK_TYPE_ACTION, GtkActionClass))
#define GTK_RADIO_ACTION_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS((obj), GTK_TYPE_RADIO_ACTION, \
	GtkRadioActionClass))
#define GTK_RADIO_TOOL_BUTTON_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS((obj), GTK_TYPE_RADIO_TOOL_BUTTON, \
	GtkRadioToolButtonClass))
#define GTK_SEPARATOR_TOOL_ITEM_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS((obj), GTK_TYPE_SEPARATOR_TOOL_ITEM, \
	GtkSeparatorToolItemClass))
#define GTK_TOGGLE_ACTION_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS((obj), GTK_TYPE_TOGGLE_ACTION, \
	GtkToggleActionClass))
#define GTK_TOGGLE_TOOL_BUTTON_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS((obj), GTK_TYPE_TOGGLE_TOOL_BUTTON, \
	GtkToggleToolButtonClass))
#define GTK_TOOL_BUTTON_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS((obj), GTK_TYPE_TOOL_BUTTON, \
	GtkToolButtonClass))
#define GTK_UI_MANAGER_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS((obj), GTK_TYPE_UI_MANAGER, \
	GtkUIManagerClass))
#define GTK_EDITABLE_GET_CLASS(inst)	 \
	(G_TYPE_INSTANCE_GET_INTERFACE ((inst), GTK_TYPE_EDITABLE, \
	GtkEditableClass))
#define GTK_CELL_EDITABLE_GET_IFACE(obj)	 \
	(G_TYPE_INSTANCE_GET_INTERFACE ((obj), GTK_TYPE_CELL_EDITABLE, \
	GtkCellEditableIface))
#define GTK_CELL_LAYOUT_GET_IFACE(obj)	 \
	(G_TYPE_INSTANCE_GET_INTERFACE ((obj), GTK_TYPE_CELL_LAYOUT, \
	GtkCellLayoutIface))
#define GTK_TREE_DRAG_DEST_GET_IFACE(obj)	 \
	(G_TYPE_INSTANCE_GET_INTERFACE ((obj), GTK_TYPE_TREE_DRAG_DEST, \
	GtkTreeDragDestIface))
#define GTK_TREE_DRAG_SOURCE_GET_IFACE(obj)	 \
	(G_TYPE_INSTANCE_GET_INTERFACE ((obj), GTK_TYPE_TREE_DRAG_SOURCE, \
	GtkTreeDragSourceIface))
#define GTK_TREE_MODEL_GET_IFACE(obj)	 \
	(G_TYPE_INSTANCE_GET_INTERFACE ((obj), GTK_TYPE_TREE_MODEL, \
	GtkTreeModelIface))
#define GTK_TREE_SORTABLE_GET_IFACE(obj)	 \
	(G_TYPE_INSTANCE_GET_INTERFACE ((obj), GTK_TYPE_TREE_SORTABLE, \
	GtkTreeSortableIface))
#define GTK_OBJECT_TYPE_NAME(object)	 \
	(g_type_name (GTK_OBJECT_TYPE (object)))
#define GTK_CONTAINER_WARN_INVALID_CHILD_PROPERTY_ID(object,property_id,pspec)	 \
	G_OBJECT_WARN_INVALID_PSPEC ((object), "child property id", \
	(property_id), (pspec))
#define GTK_OBJECT_UNSET_FLAGS(obj,flag)	 \
	G_STMT_START{ (GTK_OBJECT_FLAGS (obj) &amp;= ~(flag)); }G_STMT_END
#define GTK_OBJECT_SET_FLAGS(obj,flag)	 \
	G_STMT_START{ (GTK_OBJECT_FLAGS (obj) |= (flag)); }G_STMT_END
#define GTK_WIDGET_UNSET_FLAGS(wid,flag)	 \
	G_STMT_START{ (GTK_WIDGET_FLAGS (wid) &amp;= ~(flag)); }G_STMT_END
#define GTK_WIDGET_SET_FLAGS(wid,flag)	 \
	G_STMT_START{ (GTK_WIDGET_FLAGS (wid) |= (flag)); }G_STMT_END
#define GTK_MAJOR_VERSION	(2)
#define GTK_TEXT_VIEW_PRIORITY_VALIDATE	(GDK_PRIORITY_REDRAW + 5)
#define GTK_TYPE_ABOUT_DIALOG	(gtk_about_dialog_get_type ())
#define GTK_TYPE_ACCEL_FLAGS	(gtk_accel_flags_get_type())
#define GTK_TYPE_ACCEL_GROUP	(gtk_accel_group_get_type ())
#define GTK_TYPE_ACCEL_LABEL	(gtk_accel_label_get_type ())
#define GTK_TYPE_ACCEL_MAP	(gtk_accel_map_get_type ())
#define GTK_TYPE_ACCESSIBLE	(gtk_accessible_get_type ())
#define GTK_TYPE_ACTION	(gtk_action_get_type ())
#define GTK_TYPE_ACTION_GROUP	(gtk_action_group_get_type ())
#define GTK_TYPE_ADJUSTMENT	(gtk_adjustment_get_type ())
#define GTK_TYPE_ALIGNMENT	(gtk_alignment_get_type ())
#define GTK_TYPE_ANCHOR_TYPE	(gtk_anchor_type_get_type())
#define GTK_TYPE_ARG_FLAGS	(gtk_arg_flags_get_type())
#define GTK_TYPE_ARROW	(gtk_arrow_get_type ())
#define GTK_TYPE_ARROW_TYPE	(gtk_arrow_type_get_type())
#define GTK_TYPE_ASPECT_FRAME	(gtk_aspect_frame_get_type ())
#define GTK_TYPE_ASSISTANT	(gtk_assistant_get_type ())
#define GTK_TYPE_ATTACH_OPTIONS	(gtk_attach_options_get_type())
#define GTK_TYPE_BIN	(gtk_bin_get_type ())
#define GTK_TYPE_BORDER	(gtk_border_get_type ())
#define GTK_TYPE_BOX	(gtk_box_get_type ())
#define GTK_TYPE_BUTTONS_TYPE	(gtk_buttons_type_get_type())
#define GTK_TYPE_BUTTON_BOX	(gtk_button_box_get_type ())
#define GTK_TYPE_BUTTON_BOX_STYLE	(gtk_button_box_style_get_type())
#define GTK_TYPE_BUTTON	(gtk_button_get_type ())
#define GTK_TYPE_CALENDAR	(gtk_calendar_get_type ())
#define GTK_TYPE_CELL_EDITABLE	(gtk_cell_editable_get_type ())
#define GTK_TYPE_CELL_LAYOUT	(gtk_cell_layout_get_type ())
#define GTK_TYPE_CELL_RENDERER_ACCEL	(gtk_cell_renderer_accel_get_type ())
#define GTK_TYPE_CELL_RENDERER_ACCEL_MODE	(gtk_cell_renderer_accel_mode_get_type ())
#define GTK_TYPE_CELL_RENDERER_COMBO	(gtk_cell_renderer_combo_get_type ())
#define GTK_TYPE_CELL_RENDERER	(gtk_cell_renderer_get_type ())
#define GTK_TYPE_CELL_RENDERER_MODE	(gtk_cell_renderer_mode_get_type())
#define GTK_TYPE_CELL_RENDERER_SPIN	(gtk_cell_renderer_spin_get_type ())
#define GTK_TYPE_CELL_RENDERER_STATE	(gtk_cell_renderer_state_get_type())
#define GTK_TYPE_CELL_RENDERER_TEXT	(gtk_cell_renderer_text_get_type ())
#define GTK_TYPE_CELL_VIEW	(gtk_cell_view_get_type ())
#define GTK_TYPE_CHECK_BUTTON	(gtk_check_button_get_type ())
#define GTK_LIST(obj)	(GTK_CHECK_CAST ((obj), GTK_TYPE_LIST, GtkList))
#define GTK_TYPE_CHECK_MENU_ITEM	(gtk_check_menu_item_get_type ())
#define GTK_IS_ICON_VIEW(obj)	(GTK_CHECK_TYPE ((obj), GTK_TYPE_ICON_VIEW))
#define GTK_IS_LIST(obj)	(GTK_CHECK_TYPE ((obj), GTK_TYPE_LIST))
#define GTK_IS_OBJECT(object)	(GTK_CHECK_TYPE ((object), GTK_TYPE_OBJECT))
#define GTK_TYPE_CLIPBOARD	(gtk_clipboard_get_type ())
#define GTK_TYPE_COLOR_BUTTON	(gtk_color_button_get_type ())
#define GTK_TYPE_COLOR_SELECTION	(gtk_color_selection_get_type ())
#define GTK_TYPE_COMBO_BOX_ENTRY	(gtk_combo_box_entry_get_type ())
#define GTK_TYPE_COMBO_BOX	(gtk_combo_box_get_type ())
#define GTK_TYPE_CONTAINER	(gtk_container_get_type ())
#define GTK_TYPE_CORNER_TYPE	(gtk_corner_type_get_type())
#define GTK_TYPE_CURVE	(gtk_curve_get_type ())
#define GTK_TYPE_CURVE_TYPE	(gtk_curve_type_get_type())
#define GTK_TYPE_DEBUG_FLAG	(gtk_debug_flag_get_type())
#define GTK_TYPE_DELETE_TYPE	(gtk_delete_type_get_type())
#define GTK_TYPE_DEST_DEFAULTS	(gtk_dest_defaults_get_type())
#define GTK_TYPE_DIALOG_FLAGS	(gtk_dialog_flags_get_type())
#define GTK_TYPE_DIALOG	(gtk_dialog_get_type ())
#define GTK_TYPE_DIRECTION_TYPE	(gtk_direction_type_get_type())
#define GTK_TYPE_DRAWING_AREA	(gtk_drawing_area_get_type ())
#define GTK_TYPE_EDITABLE	(gtk_editable_get_type ())
#define GTK_TYPE_ENTRY_COMPLETION	(gtk_entry_completion_get_type ())
#define GTK_TYPE_ENTRY	(gtk_entry_get_type ())
#define GTK_TYPE_EVENT_BOX	(gtk_event_box_get_type ())
#define GTK_TYPE_EXPANDER	(gtk_expander_get_type ())
#define GTK_TYPE_EXPANDER_STYLE	(gtk_expander_style_get_type())
#define GTK_TYPE_FILE_CHOOSER_ACTION	(gtk_file_chooser_action_get_type())
#define GTK_TYPE_FILE_CHOOSER_BUTTON	(gtk_file_chooser_button_get_type ())
#define GTK_TYPE_FILE_CHOOSER_DIALOG	(gtk_file_chooser_dialog_get_type ())
#define GTK_TYPE_FILE_CHOOSER_ERROR	(gtk_file_chooser_error_get_type())
#define GTK_FILE_CHOOSER_ERROR	(gtk_file_chooser_error_quark ())
#define GTK_TYPE_FILE_CHOOSER	(gtk_file_chooser_get_type ())
#define GTK_TYPE_FILE_CHOOSER_WIDGET	(gtk_file_chooser_widget_get_type ())
#define GTK_TYPE_FILE_FILTER_FLAGS	(gtk_file_filter_flags_get_type())
#define GTK_TYPE_FILE_FILTER	(gtk_file_filter_get_type ())
#define GTK_TYPE_FILE_SELECTION	(gtk_file_selection_get_type ())
#define GTK_TYPE_FIXED	(gtk_fixed_get_type ())
#define GTK_TYPE_FONT_BUTTON	(gtk_font_button_get_type ())
#define GTK_TYPE_FONT_SELECTION	(gtk_font_selection_get_type ())
#define GTK_TYPE_FRAME	(gtk_frame_get_type ())
#define GTK_TYPE_GAMMA_CURVE	(gtk_gamma_curve_get_type ())
#define GTK_TYPE_HANDLE_BOX	(gtk_handle_box_get_type ())
#define GTK_TYPE_HBOX	(gtk_hbox_get_type ())
#define GTK_TYPE_HBUTTON_BOX	(gtk_hbutton_box_get_type ())
#define GTK_TYPE_HPANED	(gtk_hpaned_get_type ())
#define GTK_TYPE_HRULER	(gtk_hruler_get_type ())
#define GTK_TYPE_HSCALE	(gtk_hscale_get_type ())
#define GTK_TYPE_HSCROLLBAR	(gtk_hscrollbar_get_type ())
#define GTK_TYPE_HSEPARATOR	(gtk_hseparator_get_type ())
#define GTK_TYPE_ICON_FACTORY	(gtk_icon_factory_get_type ())
#define GTK_TYPE_ICON_INFO	(gtk_icon_info_get_type ())
#define GTK_TYPE_ICON_LOOKUP_FLAGS	(gtk_icon_lookup_flags_get_type())
#define GTK_TYPE_ICON_SET	(gtk_icon_set_get_type ())
#define GTK_TYPE_ICON_SIZE	(gtk_icon_size_get_type())
#define GTK_TYPE_ICON_SOURCE	(gtk_icon_source_get_type ())
#define GTK_TYPE_ICON_THEME_ERROR	(gtk_icon_theme_error_get_type())
#define GTK_TYPE_ICON_THEME	(gtk_icon_theme_get_type ())
#define GTK_TYPE_ICON_VIEW	(gtk_icon_view_get_type ())
#define GTK_TYPE_IDENTIFIER	(gtk_identifier_get_type ())
#define GTK_TYPE_IMAGE	(gtk_image_get_type ())
#define GTK_TYPE_IMAGE_MENU_ITEM	(gtk_image_menu_item_get_type ())
#define GTK_TYPE_IMAGE_TYPE	(gtk_image_type_get_type())
#define GTK_TYPE_IM_CONTEXT	(gtk_im_context_get_type ())
#define GTK_TYPE_IM_CONTEXT_SIMPLE	(gtk_im_context_simple_get_type ())
#define GTK_TYPE_IM_MULTICONTEXT	(gtk_im_multicontext_get_type ())
#define GTK_TYPE_IM_PREEDIT_STYLE	(gtk_im_preedit_style_get_type())
#define GTK_TYPE_IM_STATUS_STYLE	(gtk_im_status_style_get_type())
#define GTK_TYPE_INPUT_DIALOG	(gtk_input_dialog_get_type ())
#define GTK_TYPE_INVISIBLE	(gtk_invisible_get_type ())
#define GTK_TYPE_ITEM	(gtk_item_get_type ())
#define GTK_TYPE_JUSTIFICATION	(gtk_justification_get_type())
#define GTK_TYPE_LABEL	(gtk_label_get_type ())
#define GTK_TYPE_LAYOUT	(gtk_layout_get_type ())
#define GTK_TYPE_LINK_BUTTON	(gtk_link_button_get_type ())
#define __GTK_LINK_BUTTON_H__	(gtk_link_button_get_type ())
#define GTK_TYPE_LIST	(gtk_list_get_type ())
#define GTK_TYPE_LIST_STORE	(gtk_list_store_get_type ())
#define GTK_TYPE_MATCH_TYPE	(gtk_match_type_get_type())
#define GTK_TYPE_MENU_BAR	(gtk_menu_bar_get_type ())
#define GTK_TYPE_MENU_DIRECTION_TYPE	(gtk_menu_direction_type_get_type())
#define GTK_TYPE_MENU	(gtk_menu_get_type ())
#define GTK_TYPE_MENU_ITEM	(gtk_menu_item_get_type ())
#define GTK_TYPE_MENU_SHELL	(gtk_menu_shell_get_type ())
#define GTK_TYPE_MENU_TOOL_BUTTON	(gtk_menu_tool_button_get_type ())
#define GTK_TYPE_MESSAGE_DIALOG	(gtk_message_dialog_get_type ())
#define GTK_TYPE_MESSAGE_TYPE	(gtk_message_type_get_type())
#define GTK_TYPE_METRIC_TYPE	(gtk_metric_type_get_type())
#define GTK_TYPE_MISC	(gtk_misc_get_type ())
#define GTK_TYPE_MOVEMENT_STEP	(gtk_movement_step_get_type())
#define GTK_TYPE_NOTEBOOK	(gtk_notebook_get_type ())
#define GTK_TYPE_NOTEBOOK_TAB	(gtk_notebook_tab_get_type())
#define GTK_OBJECT_FLAGS(obj)	(GTK_OBJECT (obj)->flags)
#define GTK_WIDGET_FLAGS(wid)	(GTK_OBJECT_FLAGS (wid))
#define GTK_TYPE_OBJECT_FLAGS	(gtk_object_flags_get_type())
#define GTK_TYPE_OBJECT	(gtk_object_get_type ())
#define GTK_WIDGET_TYPE(wid)	(GTK_OBJECT_TYPE (wid))
#define GTK_TYPE_ORIENTATION	(gtk_orientation_get_type())
#define GTK_TYPE_PACK_TYPE	(gtk_pack_type_get_type())
#define GTK_TYPE_PAGE_ORIENTATION	(gtk_page_orientation_get_type ())
#define GTK_TYPE_PAGE_SETUP	(gtk_page_setup_get_type ())
#define GTK_TYPE_PAGE_SET	(gtk_page_set_get_type ())
#define GTK_TYPE_PANED	(gtk_paned_get_type ())
#define GTK_TYPE_PAPER_SIZE	(gtk_paper_size_get_type ())
#define GTK_TYPE_PATH_PRIORITY_TYPE	(gtk_path_priority_type_get_type())
#define GTK_TYPE_PATH_TYPE	(gtk_path_type_get_type())
#define GTK_TYPE_PLUG	(gtk_plug_get_type ())
#define GTK_TYPE_POLICY_TYPE	(gtk_policy_type_get_type())
#define GTK_TYPE_POSITION_TYPE	(gtk_position_type_get_type())
#define GTK_TYPE_PRINT_CONTEXT	(gtk_print_context_get_type ())
#define GTK_TYPE_PRINT_DUPLEX	(gtk_print_duplex_get_type ())
#define GTK_TYPE_PRINT_ERROR	(gtk_print_error_get_type ())
#define GTK_TYPE_PRINT_OPERATION_ACTION	(gtk_print_operation_action_get_type ())
#define GTK_TYPE_PRINT_OPERATION	(gtk_print_operation_get_type ())
#define GTK_TYPE_PRINT_OPERATION_RESULT	(gtk_print_operation_result_get_type ())
#define GTK_TYPE_PRINT_PAGES	(gtk_print_pages_get_type ())
#define GTK_TYPE_PRINT_QUALITY	(gtk_print_quality_get_type ())
#define GTK_TYPE_PRINT_SETTINGS	(gtk_print_settings_get_type ())
#define GTK_TYPE_PRINT_STATUS	(gtk_print_status_get_type ())
#define GTK_TYPE_PROGRESS_BAR	(gtk_progress_bar_get_type ())
#define GTK_TYPE_PROGRESS_BAR_STYLE	(gtk_progress_bar_style_get_type())
#define GTK_TYPE_RADIO_ACTION	(gtk_radio_action_get_type ())
#define GTK_TYPE_RADIO_BUTTON	(gtk_radio_button_get_type ())
#define GTK_TYPE_RADIO_MENU_ITEM	(gtk_radio_menu_item_get_type ())
#define GTK_TYPE_RADIO_TOOL_BUTTON	(gtk_radio_tool_button_get_type ())
#define GTK_TYPE_RANGE	(gtk_range_get_type ())
#define GTK_TYPE_RC_FLAGS	(gtk_rc_flags_get_type())
#define GTK_TYPE_RC_STYLE	(gtk_rc_style_get_type ())
#define GTK_TYPE_RC_TOKEN_TYPE	(gtk_rc_token_type_get_type())
#define GTK_TYPE_RECENT_CHOOSER_DIALOG	(gtk_recent_chooser_dialog_get_type ())
#define GTK_TYPE_RECENT_CHOOSER_ERROR	(gtk_recent_chooser_error_get_type ())
#define GTK_RECENT_CHOOSER_ERROR	(gtk_recent_chooser_error_quark ())
#define GTK_TYPE_RECENT_CHOOSER	(gtk_recent_chooser_get_type ())
#define GTK_TYPE_RECENT_CHOOSER_MENU	(gtk_recent_chooser_menu_get_type ())
#define GTK_TYPE_RECENT_CHOOSER_WIDGET	(gtk_recent_chooser_widget_get_type ())
#define GTK_TYPE_RECENT_FILTER_FLAGS	(gtk_recent_filter_flags_get_type ())
#define GTK_TYPE_RECENT_MANAGER_ERROR	(gtk_recent_manager_error_get_type ())
#define GTK_TYPE_RECENT_SORT_TYPE	(gtk_recent_sort_type_get_type ())
#define GTK_TYPE_RELIEF_STYLE	(gtk_relief_style_get_type())
#define GTK_TYPE_REQUISITION	(gtk_requisition_get_type ())
#define GTK_TYPE_RESIZE_MODE	(gtk_resize_mode_get_type())
#define GTK_TYPE_RESPONSE_TYPE	(gtk_response_type_get_type())
#define GTK_TYPE_RULER	(gtk_ruler_get_type ())
#define GTK_TYPE_SCALE	(gtk_scale_get_type ())
#define GTK_TYPE_SCROLLBAR	(gtk_scrollbar_get_type ())
#define GTK_TYPE_SCROLLED_WINDOW	(gtk_scrolled_window_get_type ())
#define GTK_TYPE_SCROLL_STEP	(gtk_scroll_step_get_type())
#define GTK_TYPE_SCROLL_TYPE	(gtk_scroll_type_get_type())
#define GTK_TYPE_SELECTION_DATA	(gtk_selection_data_get_type ())
#define GTK_TYPE_SELECTION_MODE	(gtk_selection_mode_get_type())
#define GTK_TYPE_SENSITIVITY_TYPE	(gtk_sensitivity_type_get_type ())
#define GTK_TYPE_SEPARATOR	(gtk_separator_get_type ())
#define GTK_TYPE_SEPARATOR_MENU_ITEM	(gtk_separator_menu_item_get_type ())
#define GTK_TYPE_SEPARATOR_TOOL_ITEM	(gtk_separator_tool_item_get_type ())
#define GTK_TYPE_SETTINGS	(gtk_settings_get_type ())
#define GTK_TYPE_SHADOW_TYPE	(gtk_shadow_type_get_type())
#define GTK_TYPE_SIDE_TYPE	(gtk_side_type_get_type())
#define GTK_TYPE_SIGNAL_RUN_TYPE	(gtk_signal_run_type_get_type())
#define GTK_TYPE_SIZE_GROUP	(gtk_size_group_get_type ())
#define GTK_TYPE_SIZE_GROUP_MODE	(gtk_size_group_mode_get_type())
#define GTK_TYPE_SOCKET	(gtk_socket_get_type ())
#define GTK_TYPE_SORT_TYPE	(gtk_sort_type_get_type())
#define GTK_TYPE_SPIN_BUTTON	(gtk_spin_button_get_type ())
#define GTK_TYPE_SPIN_TYPE	(gtk_spin_type_get_type())
#define GTK_TYPE_STATE_TYPE	(gtk_state_type_get_type())
#define GTK_TYPE_STATUSBAR	(gtk_statusbar_get_type ())
#define GTK_STYLE_ATTACHED(style)	(GTK_STYLE (style)->attach_count > 0)
#define GTK_TYPE_STYLE	(gtk_style_get_type ())
#define GTK_TYPE_SUBMENU_DIRECTION	(gtk_submenu_direction_get_type())
#define GTK_TYPE_SUBMENU_PLACEMENT	(gtk_submenu_placement_get_type())
#define GTK_TYPE_TABLE	(gtk_table_get_type ())
#define GTK_TYPE_TARGET_FLAGS	(gtk_target_flags_get_type())
#define GTK_TYPE_TARGET_LIST	(gtk_target_list_get_type ())
#define GTK_TYPE_TEAROFF_MENU_ITEM	(gtk_tearoff_menu_item_get_type ())
#define GTK_TYPE_TEXT_ATTRIBUTES	(gtk_text_attributes_get_type ())
#define GTK_TYPE_TEXT_BUFFER	(gtk_text_buffer_get_type ())
#define GTK_TYPE_TEXT_BUFFER_TARGET_INFO	(gtk_text_buffer_target_info_get_type ())
#define GTK_TYPE_TEXT_CHILD_ANCHOR	(gtk_text_child_anchor_get_type ())
#define GTK_TYPE_TEXT_DIRECTION	(gtk_text_direction_get_type())
#define GTK_TYPE_TEXT_ITER	(gtk_text_iter_get_type ())
#define GTK_TYPE_TEXT_MARK	(gtk_text_mark_get_type ())
#define GTK_TYPE_TEXT_SEARCH_FLAGS	(gtk_text_search_flags_get_type())
#define GTK_TYPE_TEXT_TAG	(gtk_text_tag_get_type ())
#define GTK_TYPE_TEXT_TAG_TABLE	(gtk_text_tag_table_get_type ())
#define GTK_TYPE_TEXT_VIEW	(gtk_text_view_get_type ())
#define GTK_TYPE_TEXT_WINDOW_TYPE	(gtk_text_window_type_get_type())
#define GTK_TYPE_TOGGLE_ACTION	(gtk_toggle_action_get_type ())
#define GTK_TYPE_TOGGLE_BUTTON	(gtk_toggle_button_get_type ())
#define GTK_TYPE_TOGGLE_TOOL_BUTTON	(gtk_toggle_tool_button_get_type ())
#define GTK_TYPE_TOOLBAR_CHILD_TYPE	(gtk_toolbar_child_type_get_type())
#define GTK_TYPE_TOOLBAR	(gtk_toolbar_get_type ())
#define GTK_TYPE_TOOLBAR_SPACE_STYLE	(gtk_toolbar_space_style_get_type())
#define GTK_TYPE_TOOLBAR_STYLE	(gtk_toolbar_style_get_type())
#define GTK_TYPE_TOOLTIPS	(gtk_tooltips_get_type ())
#define GTK_TYPE_TOOL_BUTTON	(gtk_tool_button_get_type ())
#define GTK_TYPE_TOOL_ITEM	(gtk_tool_item_get_type ())
#define GTK_TYPE_TREE_DRAG_DEST	(gtk_tree_drag_dest_get_type ())
#define GTK_TYPE_TREE_DRAG_SOURCE	(gtk_tree_drag_source_get_type ())
#define GTK_TYPE_TREE_ITER	(gtk_tree_iter_get_type ())
#define GTK_TYPE_TREE_MODEL_FILTER	(gtk_tree_model_filter_get_type ())
#define GTK_TYPE_TREE_MODEL_FLAGS	(gtk_tree_model_flags_get_type())
#define GTK_TYPE_TREE_MODEL	(gtk_tree_model_get_type ())
#define GTK_TYPE_TREE_MODEL_SORT	(gtk_tree_model_sort_get_type ())
#define GTK_TYPE_TREE_PATH	(gtk_tree_path_get_type ())
#define GTK_TYPE_TREE_ROW_REFERENCE	(gtk_tree_row_reference_get_type ())
#define GTK_TYPE_TREE_SELECTION	(gtk_tree_selection_get_type ())
#define GTK_TYPE_TREE_SORTABLE	(gtk_tree_sortable_get_type ())
#define GTK_TYPE_TREE_STORE	(gtk_tree_store_get_type ())
#define GTK_TYPE_TREE_VIEW_COLUMN	(gtk_tree_view_column_get_type ())
#define GTK_TYPE_TREE_VIEW	(gtk_tree_view_get_type ())
#define GTK_TYPE_TREE_VIEW_GRID_LINES	(gtk_tree_view_grid_lines_get_type ())
#define GTK_TYPE_TREE_VIEW_MODE	(gtk_tree_view_mode_get_type())
#define GTK_TYPE_UI_MANAGER	(gtk_ui_manager_get_type ())
#define GTK_TYPE_UNIT	(gtk_unit_get_type ())
#define GTK_TYPE_UPDATE_TYPE	(gtk_update_type_get_type())
#define GTK_TYPE_VBOX	(gtk_vbox_get_type ())
#define GTK_TYPE_VBUTTON_BOX	(gtk_vbutton_box_get_type ())
#define GTK_TYPE_VIEWPORT	(gtk_viewport_get_type ())
#define GTK_TYPE_VISIBILITY	(gtk_visibility_get_type())
#define GTK_TYPE_VPANED	(gtk_vpaned_get_type ())
#define GTK_TYPE_VRULER	(gtk_vruler_get_type ())
#define GTK_TYPE_VSCALE	(gtk_vscale_get_type ())
#define GTK_TYPE_VSCROLLBAR	(gtk_vscrollbar_get_type ())
#define GTK_TYPE_VSEPARATOR	(gtk_vseparator_get_type ())
#define GTK_WIDGET_SAVED_STATE(wid)	(GTK_WIDGET (wid)->saved_state)
#define GTK_WIDGET_STATE(wid)	(GTK_WIDGET (wid)->state)
#define GTK_TYPE_WIDGET_FLAGS	(gtk_widget_flags_get_type())
#define GTK_TYPE_WIDGET	(gtk_widget_get_type ())
#define GTK_TYPE_WIDGET_HELP_TYPE	(gtk_widget_help_type_get_type())
#define GTK_TYPE_WINDOW	(gtk_window_get_type ())
#define GTK_TYPE_WINDOW_GROUP	(gtk_window_group_get_type ())
#define GTK_TYPE_WINDOW_POSITION	(gtk_window_position_get_type())
#define GTK_TYPE_WINDOW_TYPE	(gtk_window_type_get_type())
#define GTK_TYPE_WRAP_MODE	(gtk_wrap_mode_get_type())
#define GTK_PRIORITY_RESIZE	(G_PRIORITY_HIGH_IDLE + 10)
#define GTK_ASSISTANT_CLASS(c)	(G_TYPE_CHECK_CLASS_CAST ((c), GTK_TYPE_ASSISTANT, GtkAssistantClass))
#define GTK_CELL_RENDERER_ACCEL_CLASS(klass)	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_CELL_RENDERER_ACCEL, GtkCellRendererAccelClass))
#define GTK_CELL_RENDERER_SPIN_CLASS(klass)	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_CELL_RENDERER_SPIN, GtkCellRendererSpinClass))
#define GTK_LINK_BUTTON_CLASS(klass)	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_LINK_BUTTON, GtkLinkButtonClass))
#define GTK_PRINT_OPERATION_CLASS(klass)	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_PRINT_OPERATION, GtkPrintOperationClass))
#define GTK_RECENT_CHOOSER_DIALOG_CLASS(klass)	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_RECENT_CHOOSER_DIALOG, GtkRecentChooserDialogClass))
#define GTK_RECENT_CHOOSER_MENU_CLASS(klass)	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_RECENT_CHOOSER_MENU, GtkRecentChooserMenuClass))
#define GTK_RECENT_CHOOSER_WIDGET_CLASS(klass)	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_RECENT_CHOOSER_WIDGET, GtkRecentChooserWidgetClass))
#define GTK_IS_ASSISTANT_CLASS(c)	(G_TYPE_CHECK_CLASS_TYPE ((c), GTK_TYPE_ASSISTANT))
#define GTK_IS_CELL_RENDERER_ACCEL_CLASS(klass)	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_CELL_RENDERER_ACCEL))
#define GTK_IS_CELL_RENDERER_SPIN_CLASS(klass)	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_CELL_RENDERER_SPIN))
#define GTK_IS_LINK_BUTTON_CLASS(klass)	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_LINK_BUTTON))
#define GTK_IS_PRINT_OPERATION_CLASS(klass)	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_PRINT_OPERATION))
#define GTK_IS_RECENT_CHOOSER_DIALOG_CLASS(klass)	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_RECENT_CHOOSER_DIALOG))
#define GTK_IS_RECENT_CHOOSER_MENU_CLASS(klass)	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_RECENT_CHOOSER_MENU))
#define GTK_IS_RECENT_CHOOSER_WIDGET_CLASS(klass)	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_RECENT_CHOOSER_WIDGET))
#define GTK_ASSISTANT(o)	(G_TYPE_CHECK_INSTANCE_CAST ((o), GTK_TYPE_ASSISTANT, GtkAssistant))
#define GTK_CELL_RENDERER_ACCEL(obj)	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_CELL_RENDERER_ACCEL, GtkCellRendererAccel))
#define GTK_CELL_RENDERER_SPIN(obj)	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_CELL_RENDERER_SPIN, GtkCellRendererSpin))
#define GTK_LINK_BUTTON(obj)	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_LINK_BUTTON, GtkLinkButton))
#define GTK_PAGE_SETUP(obj)	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_PAGE_SETUP, GtkPageSetup))
#define GTK_PRINT_CONTEXT(obj)	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_PRINT_CONTEXT, GtkPrintContext))
#define GTK_PRINT_OPERATION(obj)	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_PRINT_OPERATION, GtkPrintOperation))
#define GTK_PRINT_SETTINGS(obj)	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_PRINT_SETTINGS, GtkPrintSettings))
#define GTK_RECENT_CHOOSER(obj)	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_RECENT_CHOOSER, GtkRecentChooser))
#define GTK_RECENT_CHOOSER_DIALOG(obj)	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_RECENT_CHOOSER_DIALOG, GtkRecentChooserDialog))
#define GTK_RECENT_CHOOSER_MENU(obj)	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_RECENT_CHOOSER_MENU, GtkRecentChooserMenu))
#define GTK_RECENT_CHOOSER_WIDGET(obj)	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_RECENT_CHOOSER_WIDGET, GtkRecentChooserWidget))
#define GTK_IS_ASSISTANT(o)	(G_TYPE_CHECK_INSTANCE_TYPE ((o), GTK_TYPE_ASSISTANT))
#define GTK_IS_BIN(obj)	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_BIN))
#define GTK_IS_BOX(obj)	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_BOX))
#define GTK_IS_CELL_RENDERER_ACCEL(obj)	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_CELL_RENDERER_ACCEL))
#define GTK_IS_CELL_RENDERER_SPIN(obj)	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_CELL_RENDERER_SPIN))
#define GTK_IS_LINK_BUTTON(obj)	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_LINK_BUTTON))
#define GTK_IS_PAGE_SETUP(obj)	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_PAGE_SETUP))
#define GTK_IS_PRINT_CONTEXT(obj)	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_PRINT_CONTEXT))
#define GTK_IS_PRINT_OPERATION(obj)	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_PRINT_OPERATION))
#define GTK_IS_PRINT_SETTINGS(obj)	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_PRINT_SETTINGS))
#define GTK_IS_RECENT_CHOOSER(obj)	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_RECENT_CHOOSER))
#define GTK_IS_RECENT_CHOOSER_DIALOG(obj)	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_RECENT_CHOOSER_DIALOG))
#define GTK_IS_RECENT_CHOOSER_MENU(obj)	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_RECENT_CHOOSER_MENU))
#define GTK_IS_RECENT_CHOOSER_WIDGET(obj)	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_RECENT_CHOOSER_WIDGET))
#define GTK_OBJECT_TYPE(object)	(G_TYPE_FROM_INSTANCE (object))
#define GTK_ASSISTANT_GET_CLASS(o)	(G_TYPE_INSTANCE_GET_CLASS ((o), GTK_TYPE_ASSISTANT, GtkAssistantClass))
#define GTK_CELL_RENDERER_ACCEL_GET_CLASS(obj)	(G_TYPE_INSTANCE_GET_CLASS ((obj), GTK_TYPE_CELL_RENDERER_ACCEL, GtkCellRendererAccelClass))
#define GTK_CELL_RENDERER_SPIN_GET_CLASS(obj)	(G_TYPE_INSTANCE_GET_CLASS ((obj), GTK_TYPE_CELL_RENDERER_SPIN, GtkCellRendererTextClass))
#define GTK_LINK_BUTTON_GET_CLASS(obj)	(G_TYPE_INSTANCE_GET_CLASS ((obj), GTK_TYPE_LINK_BUTTON, GtkLinkButtonClass))
#define GTK_PRINT_OPERATION_GET_CLASS(obj)	(G_TYPE_INSTANCE_GET_CLASS ((obj), GTK_TYPE_PRINT_OPERATION, GtkPrintOperationClass))
#define GTK_RECENT_CHOOSER_DIALOG_GET_CLASS(obj)	(G_TYPE_INSTANCE_GET_CLASS ((obj), GTK_TYPE_RECENT_CHOOSER_DIALOG, GtkRecentChooserDialogClass))
#define GTK_RECENT_CHOOSER_MENU_GET_CLASS(obj)	(G_TYPE_INSTANCE_GET_CLASS ((obj), GTK_TYPE_RECENT_CHOOSER_MENU, GtkRecentChooserMenuClass))
#define GTK_RECENT_CHOOSER_WIDGET_GET_CLASS(obj)	(G_TYPE_INSTANCE_GET_CLASS ((obj), GTK_TYPE_RECENT_CHOOSER_WIDGET, GtkRecentChooserWidgetClass))
#define GTK_RECENT_CHOOSER_GET_IFACE(inst)	(G_TYPE_INSTANCE_GET_INTERFACE ((inst), GTK_TYPE_RECENT_CHOOSER, GtkRecentChooserIface))
#define GTK_BUTTONBOX_DEFAULT	-1
#define GTK_INPUT_ERROR	-1
#define GTK_PATH_PRIO_MASK	0x0f
#define GTK_MINOR_VERSION	10
#define GTK_BINARY_AGE	1004
#define GTK_INTERFACE_AGE	4
#define GTK_MICRO_VERSION	4
#define GTK_MAX_COMPOSE_LEN	7
#define GTK_PRINT_SETTINGS_COLLATE	"collate"
#define GTK_PRINT_SETTINGS_DEFAULT_SOURCE	"default-source"
#define GTK_PRINT_SETTINGS_DITHER	"dither"
#define GTK_PRINT_SETTINGS_DUPLEX	"duplex"
#define GTKMAIN_C_VAR	extern
#define GTKVAR	extern
#define GTK_PRINT_SETTINGS_FINISHINGS	"finishings"
#define GTK_STOCK_ABOUT	"gtk-about"
#define GTK_STOCK_ADD	"gtk-add"
#define GTK_STOCK_APPLY	"gtk-apply"
#define GTK_STOCK_BOLD	"gtk-bold"
#define GTK_STOCK_CANCEL	"gtk-cancel"
#define GTK_STOCK_CDROM	"gtk-cdrom"
#define GTK_STOCK_CLEAR	"gtk-clear"
#define GTK_STOCK_CLOSE	"gtk-close"
#define GTK_STOCK_COLOR_PICKER	"gtk-color-picker"
#define GTK_STOCK_CONNECT	"gtk-connect"
#define GTK_STOCK_CONVERT	"gtk-convert"
#define GTK_STOCK_COPY	"gtk-copy"
#define GTK_STOCK_CUT	"gtk-cut"
#define GTK_STOCK_DELETE	"gtk-delete"
#define GTK_STOCK_DIALOG_AUTHENTICATION	"gtk-dialog-authentication"
#define GTK_STOCK_DIALOG_ERROR	"gtk-dialog-error"
#define GTK_STOCK_DIALOG_INFO	"gtk-dialog-info"
#define GTK_STOCK_DIALOG_QUESTION	"gtk-dialog-question"
#define GTK_STOCK_DIALOG_WARNING	"gtk-dialog-warning"
#define GTK_STOCK_DIRECTORY	"gtk-directory"
#define GTK_STOCK_DISCONNECT	"gtk-disconnect"
#define GTK_STOCK_DND	"gtk-dnd"
#define GTK_STOCK_DND_MULTIPLE	"gtk-dnd-multiple"
#define GTK_STOCK_EDIT	"gtk-edit"
#define GTK_STOCK_EXECUTE	"gtk-execute"
#define GTK_STOCK_FILE	"gtk-file"
#define GTK_STOCK_FIND	"gtk-find"
#define GTK_STOCK_FIND_AND_REPLACE	"gtk-find-and-replace"
#define GTK_STOCK_FLOPPY	"gtk-floppy"
#define GTK_STOCK_FULLSCREEN	"gtk-fullscreen"
#define GTK_STOCK_GO_BACK	"gtk-go-back"
#define GTK_STOCK_GO_DOWN	"gtk-go-down"
#define GTK_STOCK_GO_FORWARD	"gtk-go-forward"
#define GTK_STOCK_GO_UP	"gtk-go-up"
#define GTK_STOCK_GOTO_BOTTOM	"gtk-goto-bottom"
#define GTK_STOCK_GOTO_FIRST	"gtk-goto-first"
#define GTK_STOCK_GOTO_LAST	"gtk-goto-last"
#define GTK_STOCK_GOTO_TOP	"gtk-goto-top"
#define GTK_STOCK_HARDDISK	"gtk-harddisk"
#define GTK_STOCK_HELP	"gtk-help"
#define GTK_STOCK_HOME	"gtk-home"
#define GTK_STOCK_INDENT	"gtk-indent"
#define GTK_STOCK_INDEX	"gtk-index"
#define GTK_STOCK_INFO	"gtk-info"
#define GTK_STOCK_ITALIC	"gtk-italic"
#define GTK_STOCK_JUMP_TO	"gtk-jump-to"
#define GTK_STOCK_JUSTIFY_CENTER	"gtk-justify-center"
#define GTK_STOCK_JUSTIFY_FILL	"gtk-justify-fill"
#define GTK_STOCK_JUSTIFY_LEFT	"gtk-justify-left"
#define GTK_STOCK_JUSTIFY_RIGHT	"gtk-justify-right"
#define GTK_STOCK_LEAVE_FULLSCREEN	"gtk-leave-fullscreen"
#define GTK_STOCK_MEDIA_FORWARD	"gtk-media-forward"
#define GTK_STOCK_MEDIA_NEXT	"gtk-media-next"
#define GTK_STOCK_MEDIA_PAUSE	"gtk-media-pause"
#define GTK_STOCK_MEDIA_PLAY	"gtk-media-play"
#define GTK_STOCK_MEDIA_PREVIOUS	"gtk-media-previous"
#define GTK_STOCK_MEDIA_RECORD	"gtk-media-record"
#define GTK_STOCK_MEDIA_REWIND	"gtk-media-rewind"
#define GTK_STOCK_MEDIA_STOP	"gtk-media-stop"
#define GTK_STOCK_MISSING_IMAGE	"gtk-missing-image"
#define GTK_STOCK_NETWORK	"gtk-network"
#define GTK_STOCK_NEW	"gtk-new"
#define GTK_STOCK_NO	"gtk-no"
#define GTK_STOCK_OK	"gtk-ok"
#define GTK_STOCK_OPEN	"gtk-open"
#define GTK_STOCK_PASTE	"gtk-paste"
#define GTK_STOCK_PREFERENCES	"gtk-preferences"
#define GTK_STOCK_PRINT	"gtk-print"
#define GTK_STOCK_PRINT_PREVIEW	"gtk-print-preview"
#define GTK_STOCK_PROPERTIES	"gtk-properties"
#define GTK_STOCK_QUIT	"gtk-quit"
#define GTK_STOCK_REDO	"gtk-redo"
#define GTK_STOCK_REFRESH	"gtk-refresh"
#define GTK_STOCK_REMOVE	"gtk-remove"
#define GTK_STOCK_REVERT_TO_SAVED	"gtk-revert-to-saved"
#define GTK_STOCK_SAVE	"gtk-save"
#define GTK_STOCK_SAVE_AS	"gtk-save-as"
#define GTK_STOCK_SELECT_ALL	"gtk-select-all"
#define GTK_STOCK_SELECT_COLOR	"gtk-select-color"
#define GTK_STOCK_SELECT_FONT	"gtk-select-font"
#define GTK_STOCK_SORT_ASCENDING	"gtk-sort-ascending"
#define GTK_STOCK_SORT_DESCENDING	"gtk-sort-descending"
#define GTK_STOCK_SPELL_CHECK	"gtk-spell-check"
#define GTK_STOCK_STOP	"gtk-stop"
#define GTK_STOCK_STRIKETHROUGH	"gtk-strikethrough"
#define GTK_STOCK_UNDELETE	"gtk-undelete"
#define GTK_STOCK_UNDERLINE	"gtk-underline"
#define GTK_STOCK_UNDO	"gtk-undo"
#define GTK_STOCK_UNINDENT	"gtk-unindent"
#define GTK_STOCK_YES	"gtk-yes"
#define GTK_STOCK_ZOOM_100	"gtk-zoom-100"
#define GTK_STOCK_ZOOM_FIT	"gtk-zoom-fit"
#define GTK_STOCK_ZOOM_IN	"gtk-zoom-in"
#define GTK_STOCK_ZOOM_OUT	"gtk-zoom-out"
#define gtk_accel_label_accelerator_width	gtk_accel_label_get_accel_width
#define gtk_binding_entry_add	gtk_binding_entry_clear
#define GTK_ICON_THEME_ERROR	gtk_icon_theme_error_quark ()
#define GTK_PRINT_ERROR	gtk_print_error_quark ()
#define GTK_SIGNAL_FUNC(f)	G_CALLBACK(f)
#define GTK_CHECK_CLASS_CAST	G_TYPE_CHECK_CLASS_CAST
#define GTK_CHECK_CLASS_TYPE	G_TYPE_CHECK_CLASS_TYPE
#define GTK_CHECK_CAST	G_TYPE_CHECK_INSTANCE_CAST
#define GTK_CHECK_TYPE	G_TYPE_CHECK_INSTANCE_TYPE
#define GTK_CHECK_GET_CLASS	G_TYPE_INSTANCE_GET_CLASS
#define GTK_PAPER_NAME_A3	"iso_a3"
#define GTK_PAPER_NAME_A4	"iso_a4"
#define GTK_PAPER_NAME_A5	"iso_a5"
#define GTK_PAPER_NAME_B5	"iso_b5"
#define GTK_PRINT_SETTINGS_MEDIA_TYPE	"media-type"
#define GTK_PRINT_SETTINGS_N_COPIES	"n-copies"
#define GTK_PAPER_NAME_EXECUTIVE	"na_executive"
#define GTK_PAPER_NAME_LEGAL	"na_legal"
#define GTK_PAPER_NAME_LETTER	"na_letter"
#define GTK_PRINT_SETTINGS_NUMBER_UP	"number-up"
#define GTK_PRINT_SETTINGS_NUMBER_UP_LAYOUT	"number-up-layout"
#define GTK_PRINT_SETTINGS_ORIENTATION	"orientation"
#define GTK_PRINT_SETTINGS_OUTPUT_BIN	"output-bin"
#define GTK_PRINT_SETTINGS_OUTPUT_FILE_FORMAT	"output-file-format"
#define GTK_PRINT_SETTINGS_OUTPUT_URI	"output-uri"
#define GTK_PRINT_SETTINGS_PAGE_RANGES	"page-ranges"
#define GTK_PRINT_SETTINGS_PAGE_SET	"page-set"
#define GTK_PRINT_SETTINGS_PAPER_FORMAT	"paper-format"
#define GTK_PRINT_SETTINGS_PAPER_HEIGHT	"paper-height"
#define GTK_PRINT_SETTINGS_PAPER_WIDTH	"paper-width"
#define GTK_PRINT_SETTINGS_PRINT_PAGES	"print-pages"
#define GTK_PRINT_SETTINGS_PRINTER	"printer"
#define GTK_PRINT_SETTINGS_PRINTER_LPI	"printer-lpi"
#define GTK_PRINT_SETTINGS_QUALITY	"quality"
#define GTK_PRINT_SETTINGS_RESOLUTION	"resolution"
#define GTK_PRINT_SETTINGS_RESOLUTION_X	"resolution-x"
#define GTK_PRINT_SETTINGS_RESOLUTION_Y	"resolution-y"
#define GTK_PRINT_SETTINGS_REVERSE	"reverse"
#define GTK_PRINT_SETTINGS_SCALE	"scale"
#define GTK_PRINT_SETTINGS_USE_COLOR	"use-color"
#define GTK_PRINT_SETTINGS_WIN32_DRIVER_EXTRA	"win32-driver-extra"
#define GTK_PRINT_SETTINGS_WIN32_DRIVER_VERSION	"win32-driver-version"

typedef struct _GtkIconSet GtkIconSet;
typedef struct _GtkObject {
    GObject parent_instance;
    guint32 flags;
} GtkObject;
typedef enum {
    GTK_RC_FG = 1,
    GTK_RC_BG = 2,
    GTK_RC_TEXT = 4,
    GTK_RC_BASE = 8
} GtkRcFlags;
typedef struct _GtkRcStyle {
    GObject parent_instance;
    gchar *name;
    gchar *bg_pixmap_name[5];
    PangoFontDescription *font_desc;
    GtkRcFlags color_flags[5];
    GdkColor fg[5];
    GdkColor bg[5];
    GdkColor text[5];
    GdkColor base[5];
    gint xthickness;
    gint ythickness;
    GArray *rc_properties;
    GSList *rc_style_lists;
    GSList *icon_factories;
    guint engine_specified:1;
} GtkRcStyle;
typedef struct _GtkStyle {
    GObject parent_instance;
    GdkColor fg[5];
    GdkColor bg[5];
    GdkColor light[5];
    GdkColor dark[5];
    GdkColor mid[5];
    GdkColor text[5];
    GdkColor base[5];
    GdkColor text_aa[5];
    GdkColor black;
    GdkColor white;
    PangoFontDescription *font_desc;
    gint xthickness;
    gint ythickness;
    GdkGC *fg_gc[5];
    GdkGC *bg_gc[5];
    GdkGC *light_gc[5];
    GdkGC *dark_gc[5];
    GdkGC *mid_gc[5];
    GdkGC *text_gc[5];
    GdkGC *base_gc[5];
    GdkGC *text_aa_gc[5];
    GdkGC *black_gc;
    GdkGC *white_gc;
    GdkPixmap *bg_pixmap[5];
    gint attach_count;
    gint depth;
    GdkColormap *colormap;
    GdkFont *private_font;
    PangoFontDescription *private_font_desc;
    GtkRcStyle *rc_style;
    GSList *styles;
    GArray *property_cache;
    GSList *icon_factories;
} GtkStyle;
typedef struct _GtkRequisition {
    gint width;
    gint height;
} GtkRequisition;
typedef GdkRectangle GtkAllocation;
typedef struct _GtkWidget {
    GtkObject object;
    guint16 private_flags;
    guint8 state;
    guint8 saved_state;
    gchar *name;
    GtkStyle *style;
    GtkRequisition requisition;
    GtkAllocation allocation;
    GdkWindow *window;
    GtkWidget *parent;
} GtkWidget;
typedef struct _GtkAdjustment {
    GtkObject parent_instance;
    gdouble lower;
    gdouble upper;
    gdouble value;
    gdouble step_increment;
    gdouble page_increment;
    gdouble page_size;
} GtkAdjustment;
typedef struct _GtkProgress {
    GtkWidget widget;
    GtkAdjustment *adjustment;
    GdkPixmap *offscreen_pixmap;
    gchar *format;
    gfloat x_align;
    gfloat y_align;
    guint show_text:1;
    guint activity_mode:1;
    guint use_text_format:1;
} GtkProgress;
typedef enum {
    GTK_PROGRESS_CONTINUOUS = 0,
    GTK_PROGRESS_DISCRETE = 1
} GtkProgressBarStyle;
typedef enum {
    GTK_PROGRESS_LEFT_TO_RIGHT = 0,
    GTK_PROGRESS_RIGHT_TO_LEFT = 1,
    GTK_PROGRESS_BOTTOM_TO_TOP = 2,
    GTK_PROGRESS_TOP_TO_BOTTOM = 3
} GtkProgressBarOrientation;
typedef struct _GtkProgressBar {
    GtkProgress progress;
    GtkProgressBarStyle bar_style;
    GtkProgressBarOrientation orientation;
    guint blocks;
    gint in_block;
    gint activity_pos;
    guint activity_step;
    guint activity_blocks;
    gdouble pulse_fraction;
    guint activity_dir:1;
    guint ellipsize:3;
} GtkProgressBar;
typedef struct _GtkTextTagTable {
    GObject parent_instance;
    GHashTable *hash;
    GSList *anonymous;
    gint anon_count;
    GSList *buffers;
} GtkTextTagTable;
typedef struct _GtkTextBTree GtkTextBTree;
typedef struct _GtkTextLogAttrCache GtkTextLogAttrCache;
typedef struct _GtkTextBuffer {
    GObject parent_instance;
    GtkTextTagTable *tag_table;
    GtkTextBTree *btree;
    GSList *clipboard_contents_buffers;
    GSList *selection_clipboards;
    GtkTextLogAttrCache *log_attr_cache;
    guint user_action_count;
    guint modified:1;
} GtkTextBuffer;
typedef struct _GtkTextIter {
    gpointer dummy1;
    gpointer dummy2;
    gint dummy3;
    gint dummy4;
    gint dummy5;
    gint dummy6;
    gint dummy7;
    gint dummy8;
    gpointer dummy9;
    gpointer dummy10;
    gint dummy11;
    gint dummy12;
    gint dummy13;
    gpointer dummy14;
} GtkTextIter;
typedef GType GtkType;
typedef struct _GtkContainer {
    GtkWidget widget;
    GtkWidget *focus_child;
    guint border_width:16;
    guint need_resize:1;
    guint resize_mode:2;
    guint reallocate_redraws:1;
    guint has_focus_chain:1;
} GtkContainer;
typedef struct _GtkBin {
    GtkContainer container;
    GtkWidget *child;
} GtkBin;
typedef struct _GtkComboBoxPrivate GtkComboBoxPrivate;
typedef struct _GtkComboBox {
    GtkBin parent_instance;
    GtkComboBoxPrivate *priv;
} GtkComboBox;
typedef struct _GtkMisc {
    GtkWidget widget;
    gfloat xalign;
    gfloat yalign;
    guint16 xpad;
    guint16 ypad;
} GtkMisc;
typedef struct _GtkBox {
    GtkContainer container;
    GList *children;
    gint16 spacing;
    guint homogeneous:1;
} GtkBox;
typedef struct _GtkHBox {
    GtkBox box;
} GtkHBox;
typedef struct _GtkStatusbar {
    GtkHBox parent_widget;
    GtkWidget *frame;
    GtkWidget *label;
    GSList *messages;
    GSList *keys;
    guint seq_context_id;
    guint seq_message_id;
    GdkWindow *grip_window;
    guint has_resize_grip:1;
} GtkStatusbar;
typedef struct _GtkTargetList {
    GList *list;
    guint ref_count;
} GtkTargetList;
typedef struct _GtkWindow {
    GtkBin bin;
    gchar *title;
    gchar *wmclass_name;
    gchar *wmclass_class;
    gchar *wm_role;
    GtkWidget *focus_widget;
    GtkWidget *default_widget;
    GtkWindow *transient_parent;
    GtkWindowGeometryInfo *geometry_info;
    GdkWindow *frame;
    GtkWindowGroup *group;
    guint16 configure_request_count;
    guint allow_shrink:1;
    guint allow_grow:1;
    guint configure_notify_received:1;
    guint need_default_position:1;
    guint need_default_size:1;
    guint position:3;
    guint type:4;
    guint has_user_ref_count:1;
    guint has_focus:1;
    guint modal:1;
    guint destroy_with_parent:1;
    guint has_frame:1;
    guint iconify_initially:1;
    guint stick_initially:1;
    guint maximize_initially:1;
    guint decorated:1;
    guint type_hint:3;
    guint gravity:5;
    guint is_active:1;
    guint has_toplevel_focus:1;
    guint frame_left;
    guint frame_top;
    guint frame_right;
    guint frame_bottom;
    guint keys_changed_handler;
    GdkModifierType mnemonic_modifier;
    GdkScreen *screen;
} GtkWindow;
typedef struct _GtkWindowGeometryInfo GtkWindowGeometryInfo;
typedef struct _GtkWindowGroup {
    GObject parent_instance;
    GSList *grabs;
} GtkWindowGroup;
typedef struct _GtkTreeRowReference GtkTreeRowReference;
typedef enum {
    GTK_TREE_MODEL_ITERS_PERSIST = 1,
    GTK_TREE_MODEL_LIST_ONLY = 2
} GtkTreeModelFlags;
typedef struct _GtkTreeModel GtkTreeModel;
typedef struct _GtkTargetEntry {
    gchar *target;
    guint flags;
    guint info;
} GtkTargetEntry;
typedef struct _GtkIMContext {
    GObject parent_instance;
} GtkIMContext;
typedef struct _GtkEntry {
    GtkWidget widget;
    gchar *text;
    guint editable:1;
    guint visible:1;
    guint overwrite_mode:1;
    guint in_drag:1;
    guint16 text_length;
    guint16 text_max_length;
    GdkWindow *text_area;
    GtkIMContext *im_context;
    GtkWidget *popup_menu;
    gint current_pos;
    gint selection_bound;
    PangoLayout *cached_layout;
    guint cache_includes_preedit:1;
    guint need_im_reset:1;
    guint has_frame:1;
    guint activates_default:1;
    guint cursor_visible:1;
    guint in_click:1;
    guint is_cell_renderer:1;
    guint editing_canceled:1;
    guint mouse_cursor_obscured:1;
    guint select_words:1;
    guint select_lines:1;
    guint resolved_dir:4;
    guint truncate_multiline:1;
    guint button;
    guint blink_timeout;
    guint recompute_idle;
    gint scroll_offset;
    gint ascent;
    gint descent;
    guint16 text_size;
    guint16 n_bytes;
    guint16 preedit_length;
    guint16 preedit_cursor;
    gint dnd_position;
    gint drag_start_x;
    gint drag_start_y;
    gunichar invisible_char;
    gint width_chars;
} GtkEntry;
typedef struct _GtkComboBoxEntryPrivate GtkComboBoxEntryPrivate;
typedef struct _GtkComboBoxEntry {
    GtkComboBox parent_instance;
    GtkComboBoxEntryPrivate *priv;
} GtkComboBoxEntry;
typedef struct _GtkLayout {
    GtkContainer container;
    GList *children;
    guint width;
    guint height;
    GtkAdjustment *hadjustment;
    GtkAdjustment *vadjustment;
    GdkWindow *bin_window;
    GdkVisibilityState visibility;
    gint scroll_x;
    gint scroll_y;
    guint freeze_count;
} GtkLayout;
typedef struct _GtkTreeIter {
    gint stamp;
    gpointer user_data;
    gpointer user_data2;
    gpointer user_data3;
} GtkTreeIter;
typedef gint(*GtkTreeIterCompareFunc) (GtkTreeModel *, GtkTreeIter *,
				       GtkTreeIter *, gpointer);
typedef void (*GtkDestroyNotify) (gpointer);
typedef struct _GtkTreeStore {
    GObject parent;
    gint stamp;
    gpointer root;
    gpointer last;
    gint n_columns;
    gint sort_column_id;
    GList *sort_list;
    GtkSortType order;
    GType *column_headers;
    GtkTreeIterCompareFunc default_sort_func;
    gpointer default_sort_data;
    GtkDestroyNotify default_sort_destroy;
    guint columns_dirty:1;
} GtkTreeStore;
typedef struct _GtkDialog {
    GtkWindow window;
    GtkWidget *vbox;
    GtkWidget *action_area;
    GtkWidget *separator;
} GtkDialog;
typedef struct _GtkAboutDialog {
    GtkDialog parent_instance;
    gpointer private_data;
} GtkAboutDialog;
typedef void (*GtkAboutDialogActivateLinkFunc) (GtkAboutDialog *,
						const gchar *, gpointer);
typedef struct _GtkTreeSortable GtkTreeSortable;
typedef struct _GtkRangeLayout GtkRangeLayout;
typedef struct _GtkRangeStepTimer GtkRangeStepTimer;
typedef struct _GtkRange {
    GtkWidget widget;
    GtkAdjustment *adjustment;
    GtkUpdateType update_policy;
    guint inverted:1;
    guint flippable:1;
    guint has_stepper_a:1;
    guint has_stepper_b:1;
    guint has_stepper_c:1;
    guint has_stepper_d:1;
    guint need_recalc:1;
    guint slider_size_fixed:1;
    gint min_slider_size;
    GtkOrientation orientation;
    GdkRectangle range_rect;
    gint slider_start;
    gint slider_end;
    gint round_digits;
    guint trough_click_forward:1;
    guint update_pending:1;
    GtkRangeLayout *layout;
    GtkRangeStepTimer *timer;
    gint slide_initial_slider_position;
    gint slide_initial_coordinate;
    guint update_timeout_id;
    GdkWindow *event_window;
} GtkRange;
typedef struct _GtkAccelKey {
    guint accel_key;
    GdkModifierType accel_mods;
    guint accel_flags:16;
} GtkAccelKey;
typedef struct _GtkAccelGroupEntry {
    GtkAccelKey key;
    GClosure *closure;
    GQuark accel_path_quark;
} GtkAccelGroupEntry;
typedef struct _GtkAccelGroup {
    GObject parent;
    guint lock_count;
    GdkModifierType modifier_mask;
    GSList *acceleratables;
    guint n_accels;
    GtkAccelGroupEntry *priv_accels;
} GtkAccelGroup;
typedef struct _GtkSocket {
    GtkContainer container;
    guint16 request_width;
    guint16 request_height;
    guint16 current_width;
    guint16 current_height;
    GdkWindow *plug_window;
    GtkWidget *plug_widget;
    gshort xembed_version;
    guint same_app:1;
    guint focus_in:1;
    guint have_size:1;
    guint need_map:1;
    guint is_mapped:1;
    guint active:1;
    GtkAccelGroup *accel_group;
    GtkWidget *toplevel;
} GtkSocket;
typedef struct _GtkCellEditable GtkCellEditable;
typedef enum {
    GTK_TREE_VIEW_COLUMN_GROW_ONLY = 0,
    GTK_TREE_VIEW_COLUMN_AUTOSIZE = 1,
    GTK_TREE_VIEW_COLUMN_FIXED = 2
} GtkTreeViewColumnSizing;
typedef struct _GtkTreeViewColumn {
    GtkObject parent;
    GtkWidget *tree_view;
    GtkWidget *button;
    GtkWidget *child;
    GtkWidget *arrow;
    GtkWidget *alignment;
    GdkWindow *window;
    GtkCellEditable *editable_widget;
    gfloat xalign;
    guint property_changed_signal;
    gint spacing;
    GtkTreeViewColumnSizing column_type;
    gint requested_width;
    gint button_request;
    gint resized_width;
    gint width;
    gint fixed_width;
    gint min_width;
    gint max_width;
    gint drag_x;
    gint drag_y;
    gchar *title;
    GList *cell_list;
    guint sort_clicked_signal;
    guint sort_column_changed_signal;
    gint sort_column_id;
    GtkSortType sort_order;
    guint visible:1;
    guint resizable:1;
    guint clickable:1;
    guint dirty:1;
    guint show_sort_indicator:1;
    guint maybe_reordered:1;
    guint reorderable:1;
    guint use_resized_width:1;
    guint expand:1;
} GtkTreeViewColumn;
typedef struct _GtkCellRenderer {
    GtkObject parent;
    gfloat xalign;
    gfloat yalign;
    gint width;
    gint height;
    guint16 xpad;
    guint16 ypad;
    guint mode:2;
    guint visible:1;
    guint is_expander:1;
    guint is_expanded:1;
    guint cell_background_set:1;
    guint sensitive:1;
    guint editing:1;
} GtkCellRenderer;
typedef struct _GtkButtonBox {
    GtkBox box;
    gint child_min_width;
    gint child_min_height;
    gint child_ipad_x;
    gint child_ipad_y;
    GtkButtonBoxStyle layout_style;
} GtkButtonBox;
typedef struct _GtkActionPrivate GtkActionPrivate;
typedef struct _GtkAction {
    GObject object;
    GtkActionPrivate *private_data;
} GtkAction;
typedef struct _GtkToggleActionPrivate GtkToggleActionPrivate;
typedef struct _GtkToggleAction {
    GtkAction parent;
    GtkToggleActionPrivate *private_data;
} GtkToggleAction;
typedef struct _GtkTextAppearance {
    GdkColor bg_color;
    GdkColor fg_color;
    GdkBitmap *bg_stipple;
    GdkBitmap *fg_stipple;
    gint rise;
    gpointer padding1;
    guint underline:4;
    guint strikethrough:1;
    guint draw_bg:1;
    guint inside_selection:1;
    guint is_text:1;
    guint pad1:1;
    guint pad2:1;
    guint pad3:1;
    guint pad4:1;
} GtkTextAppearance;
typedef struct _GtkTextAttributes {
    guint refcount;
    GtkTextAppearance appearance;
    GtkJustification justification;
    GtkTextDirection direction;
    PangoFontDescription *font;
    gdouble font_scale;
    gint left_margin;
    gint indent;
    gint right_margin;
    gint pixels_above_lines;
    gint pixels_below_lines;
    gint pixels_inside_wrap;
    PangoTabArray *tabs;
    GtkWrapMode wrap_mode;
    PangoLanguage *language;
    GdkColor *pg_bg_color;
    guint invisible:1;
    guint bg_full_height:1;
    guint editable:1;
    guint realized:1;
    guint pad1:1;
    guint pad2:1;
    guint pad3:1;
    guint pad4:1;
} GtkTextAttributes;
typedef struct _GtkTextTag {
    GObject parent_instance;
    GtkTextTagTable *table;
    char *name;
    int priority;
    GtkTextAttributes *values;
    guint bg_color_set:1;
    guint bg_stipple_set:1;
    guint fg_color_set:1;
    guint scale_set:1;
    guint fg_stipple_set:1;
    guint justification_set:1;
    guint left_margin_set:1;
    guint indent_set:1;
    guint rise_set:1;
    guint strikethrough_set:1;
    guint right_margin_set:1;
    guint pixels_above_lines_set:1;
    guint pixels_below_lines_set:1;
    guint pixels_inside_wrap_set:1;
    guint tabs_set:1;
    guint underline_set:1;
    guint wrap_mode_set:1;
    guint bg_full_height_set:1;
    guint invisible_set:1;
    guint editable_set:1;
    guint language_set:1;
    guint pad1:1;
    guint pad2:1;
    guint pad3:1;
} GtkTextTag;
typedef struct _GtkFileFilter GtkFileFilter;
typedef enum {
    GTK_FILE_FILTER_FILENAME = 1,
    GTK_FILE_FILTER_URI = 2,
    GTK_FILE_FILTER_DISPLAY_NAME = 4,
    GTK_FILE_FILTER_MIME_TYPE = 8
} GtkFileFilterFlags;
typedef struct _GtkFileFilterInfo {
    GtkFileFilterFlags contains;
    const gchar *filename;
    const gchar *uri;
    const gchar *display_name;
    const gchar *mime_type;
} GtkFileFilterInfo;
typedef struct _GtkIconSource GtkIconSource;
typedef struct _GtkToolItemPrivate GtkToolItemPrivate;
typedef struct _GtkToolItem {
    GtkBin parent;
    GtkToolItemPrivate *priv;
} GtkToolItem;
typedef struct _GtkToolButtonPrivate GtkToolButtonPrivate;
typedef struct _GtkToolButton {
    GtkToolItem parent;
    GtkToolButtonPrivate *priv;
} GtkToolButton;
typedef struct _GtkIconViewPrivate GtkIconViewPrivate;
typedef struct _GtkIconView {
    GtkContainer parent;
    GtkIconViewPrivate *priv;
} GtkIconView;
typedef struct _GtkLabelSelectionInfo GtkLabelSelectionInfo;
typedef struct _GtkLabel {
    GtkMisc misc;
    gchar *label;
    guint jtype:2;
    guint wrap:1;
    guint use_underline:1;
    guint use_markup:1;
    guint ellipsize:3;
    guint mnemonic_keyval;
    gchar *text;
    PangoAttrList *attrs;
    PangoAttrList *effective_attrs;
    PangoLayout *layout;
    GtkWidget *mnemonic_widget;
    GtkWindow *mnemonic_window;
    GtkLabelSelectionInfo *select_info;
} GtkLabel;
typedef struct _GtkSettingsPropertyValue GtkSettingsPropertyValue;
typedef struct _GtkRcContext GtkRcContext;
typedef struct _GtkSettings {
    GObject parent_instance;
    GData *queued_settings;
    GtkSettingsPropertyValue *property_values;
    GtkRcContext *rc_context;
    GdkScreen *screen;
} GtkSettings;
typedef struct _GtkUIManagerPrivate GtkUIManagerPrivate;
typedef struct _GtkUIManager {
    GObject parent;
    GtkUIManagerPrivate *private_data;
} GtkUIManager;
typedef struct _GtkItem {
    GtkBin bin;
} GtkItem;
typedef struct _GtkMenuItem {
    GtkItem item;
    GtkWidget *submenu;
    GdkWindow *event_window;
    guint16 toggle_size;
    guint16 accelerator_width;
    gchar *accel_path;
    guint show_submenu_indicator:1;
    guint submenu_placement:1;
    guint submenu_direction:1;
    guint right_justify:1;
    guint timer_from_keypress:1;
    guint timer;
} GtkMenuItem;
typedef struct _GtkCheckMenuItem {
    GtkMenuItem menu_item;
    guint active:1;
    guint always_show_toggle:1;
    guint inconsistent:1;
    guint draw_as_radio:1;
} GtkCheckMenuItem;
typedef struct _GtkRadioMenuItem {
    GtkCheckMenuItem check_menu_item;
    GSList *group;
} GtkRadioMenuItem;
typedef struct _GtkCellViewPrivate GtkCellViewPrivate;
typedef struct _GtkCellView {
    GtkWidget parent_instance;
    GtkCellViewPrivate *priv;
} GtkCellView;
typedef struct _GtkSelectionData {
    GdkAtom selection;
    GdkAtom target;
    GdkAtom type;
    gint format;
    guchar *data;
    gint length;
    GdkDisplay *display;
} GtkSelectionData;
typedef struct _GtkFileChooser GtkFileChooser;
typedef struct _GtkDrawingArea {
    GtkWidget widget;
    gpointer draw_data;
} GtkDrawingArea;
typedef struct _GtkCurve {
    GtkDrawingArea graph;
    gint cursor_type;
    gfloat min_x;
    gfloat max_x;
    gfloat min_y;
    gfloat max_y;
    GdkPixmap *pixmap;
    GtkCurveType curve_type;
    gint height;
    gint grab_point;
    gint last;
    gint num_points;
    GdkPoint *point;
    gint num_ctlpoints;
    gfloat *(ctlpoint)[2];
} GtkCurve;
typedef struct _GtkNotebookPage GtkNotebookPage;
typedef struct _GtkNotebook {
    GtkContainer container;
    GtkNotebookPage *cur_page;
    GList *children;
    GList *first_tab;
    GList *focus_tab;
    GtkWidget *menu;
    GdkWindow *event_window;
    guint32 timer;
    guint16 tab_hborder;
    guint16 tab_vborder;
    guint show_tabs:1;
    guint homogeneous:1;
    guint show_border:1;
    guint tab_pos:2;
    guint scrollable:1;
    guint in_child:3;
    guint click_child:3;
    guint button:2;
    guint need_timer:1;
    guint child_has_focus:1;
    guint have_visible_child:1;
    guint focus_out:1;
    guint has_before_previous:1;
    guint has_before_next:1;
    guint has_after_previous:1;
    guint has_after_next:1;
} GtkNotebook;
typedef struct _GtkIconFactory {
    GObject parent_instance;
    GHashTable *icons;
} GtkIconFactory;
typedef struct _GtkRadioActionPrivate GtkRadioActionPrivate;
typedef struct _GtkRadioAction {
    GtkToggleAction parent;
    GtkRadioActionPrivate *private_data;
} GtkRadioAction;
typedef struct _GtkTextMark {
    GObject parent_instance;
    gpointer segment;
} GtkTextMark;
typedef struct _GtkVBox {
    GtkBox box;
} GtkVBox;
typedef struct _GtkColorSelection {
    GtkVBox parent_instance;
    gpointer private_data;
} GtkColorSelection;
typedef enum {
    GTK_CALENDAR_SHOW_HEADING = 1,
    GTK_CALENDAR_SHOW_DAY_NAMES = 2,
    GTK_CALENDAR_NO_MONTH_CHANGE = 4,
    GTK_CALENDAR_SHOW_WEEK_NUMBERS = 8,
    GTK_CALENDAR_WEEK_START_MONDAY = 16
} GtkCalendarDisplayOptions;
typedef struct _GtkCalendar {
    GtkWidget widget;
    GtkStyle *header_style;
    GtkStyle *label_style;
    gint month;
    gint year;
    gint selected_day;
    gint day_month[6][7];
    gint day[6][7];
    gint num_marked_dates;
    gint marked_date[31];
    GtkCalendarDisplayOptions display_flags;
    GdkColor marked_date_color[31];
    GdkGC *gc;
    GdkGC *xor_gc;
    gint focus_row;
    gint focus_col;
    gint highlight_row;
    gint highlight_col;
    gpointer private_data;
    gchar grow_space[32];
    void (*_gtk_reserved1) (void);
    void (*_gtk_reserved2) (void);
    void (*_gtk_reserved3) (void);
    void (*_gtk_reserved4) (void);
} GtkCalendar;
typedef struct _GtkIconInfo GtkIconInfo;
typedef struct _GtkTreePath GtkTreePath;
typedef struct _GtkTreeDragSource GtkTreeDragSource;
typedef struct _GtkTableRowCol {
    guint16 requisition;
    guint16 allocation;
    guint16 spacing;
    guint need_expand:1;
    guint need_shrink:1;
    guint expand:1;
    guint shrink:1;
    guint empty:1;
} GtkTableRowCol;
typedef struct _GtkTable {
    GtkContainer container;
    GList *children;
    GtkTableRowCol *rows;
    GtkTableRowCol *cols;
    guint16 nrows;
    guint16 ncols;
    guint16 column_spacing;
    guint16 row_spacing;
    guint homogeneous:1;
} GtkTable;
typedef gboolean(*GtkFunction) (gpointer);
typedef void (*GtkSignalFunc) (void);
typedef struct _GtkArg GtkArg;
typedef void (*GtkCallbackMarshal) (GtkObject *, gpointer, guint,
				    GtkArg *);
typedef struct _GtkMenuShell {
    GtkContainer container;
    GList *children;
    GtkWidget *active_menu_item;
    GtkWidget *parent_menu_shell;
    guint button;
    guint32 activate_time;
    guint active:1;
    guint have_grab:1;
    guint have_xgrab:1;
    guint ignore_leave:1;
    guint menu_flag:1;
    guint ignore_enter:1;
} GtkMenuShell;
typedef struct _GtkMenu {
    GtkMenuShell menu_shell;
    GtkWidget *parent_menu_item;
    GtkWidget *old_active_menu_item;
    GtkAccelGroup *accel_group;
    gchar *accel_path;
    GtkMenuPositionFunc position_func;
    gpointer position_func_data;
    guint toggle_size;
    GtkWidget *toplevel;
    GtkWidget *tearoff_window;
    GtkWidget *tearoff_hbox;
    GtkWidget *tearoff_scrollbar;
    GtkAdjustment *tearoff_adjustment;
    GdkWindow *view_window;
    GdkWindow *bin_window;
    gint scroll_offset;
    gint saved_scroll_offset;
    gint scroll_step;
    guint timeout_id;
    GdkRegion *navigation_region;
    guint navigation_timeout;
    guint needs_destruction_ref_count:1;
    guint torn_off:1;
    guint tearoff_active:1;
    guint scroll_fast:1;
    guint upper_arrow_visible:1;
    guint lower_arrow_visible:1;
    guint upper_arrow_prelight:1;
    guint lower_arrow_prelight:1;
} GtkMenu;
typedef void (*GtkMenuPositionFunc) (GtkMenu *, gint *, gint *, gboolean *,
				     gpointer);
typedef struct _GtkButton {
    GtkBin bin;
    GdkWindow *event_window;
    gchar *label_text;
    guint activate_timeout;
    guint constructed:1;
    guint in_button:1;
    guint button_down:1;
    guint relief:2;
    guint use_underline:1;
    guint use_stock:1;
    guint depressed:1;
    guint depress_on_activate:1;
    guint focus_on_click:1;
} GtkButton;
typedef struct _GtkToggleButton {
    GtkButton button;
    guint active:1;
    guint draw_indicator:1;
    guint inconsistent:1;
} GtkToggleButton;
typedef struct _GtkIconThemePrivate GtkIconThemePrivate;
typedef struct _GtkIconTheme {
    GObject parent_instance;
    GtkIconThemePrivate *priv;
} GtkIconTheme;
typedef struct _GtkTextWindow GtkTextWindow;
typedef struct _GtkTextPendingScroll GtkTextPendingScroll;
typedef struct _GtkTextView {
    GtkContainer parent_instance;
    struct _GtkTextLayout *layout;
    GtkTextBuffer *buffer;
    guint selection_drag_handler;
    guint scroll_timeout;
    gint pixels_above_lines;
    gint pixels_below_lines;
    gint pixels_inside_wrap;
    GtkWrapMode wrap_mode;
    GtkJustification justify;
    gint left_margin;
    gint right_margin;
    gint indent;
    PangoTabArray *tabs;
    guint editable:1;
    guint overwrite_mode:1;
    guint cursor_visible:1;
    guint need_im_reset:1;
    guint accepts_tab:1;
    guint reserved:1;
    guint onscreen_validated:1;
    guint mouse_cursor_obscured:1;
    GtkTextWindow *text_window;
    GtkTextWindow *left_window;
    GtkTextWindow *right_window;
    GtkTextWindow *top_window;
    GtkTextWindow *bottom_window;
    GtkAdjustment *hadjustment;
    GtkAdjustment *vadjustment;
    gint xoffset;
    gint yoffset;
    gint width;
    gint height;
    gint virtual_cursor_x;
    gint virtual_cursor_y;
    GtkTextMark *first_para_mark;
    gint first_para_pixels;
    GtkTextMark *dnd_mark;
    guint blink_timeout;
    guint first_validate_idle;
    guint incremental_validate_idle;
    GtkIMContext *im_context;
    GtkWidget *popup_menu;
    gint drag_start_x;
    gint drag_start_y;
    GSList *children;
    GtkTextPendingScroll *pending_scroll;
    gint pending_place_cursor_button;
} GtkTextView;
typedef enum {
    GTK_TEXT_WINDOW_PRIVATE = 0,
    GTK_TEXT_WINDOW_WIDGET = 1,
    GTK_TEXT_WINDOW_TEXT = 2,
    GTK_TEXT_WINDOW_LEFT = 3,
    GTK_TEXT_WINDOW_RIGHT = 4,
    GTK_TEXT_WINDOW_TOP = 5,
    GTK_TEXT_WINDOW_BOTTOM = 6
} GtkTextWindowType;
typedef struct _GtkObjectClass {
    GObjectClass parent_class;
    void (*set_arg) (GtkObject *, GtkArg *, guint);
    void (*get_arg) (GtkObject *, GtkArg *, guint);
    void (*destroy) (GtkObject *);
} GtkObjectClass;
typedef enum {
    GTK_WIDGET_HELP_TOOLTIP = 0,
    GTK_WIDGET_HELP_WHATS_THIS = 1
} GtkWidgetHelpType;
typedef struct _GtkWidgetClass {
    GtkObjectClass parent_class;
    guint activate_signal;
    guint set_scroll_adjustments_signal;
    void (*dispatch_child_properties_changed) (GtkWidget *, guint,
					       GParamSpec * *);
    void (*show) (GtkWidget *);
    void (*show_all) (GtkWidget *);
    void (*hide) (GtkWidget *);
    void (*hide_all) (GtkWidget *);
    void (*map) (GtkWidget *);
    void (*unmap) (GtkWidget *);
    void (*realize) (GtkWidget *);
    void (*unrealize) (GtkWidget *);
    void (*size_request) (GtkWidget *, GtkRequisition *);
    void (*size_allocate) (GtkWidget *, GtkAllocation *);
    void (*state_changed) (GtkWidget *, GtkStateType);
    void (*parent_set) (GtkWidget *, GtkWidget *);
    void (*hierarchy_changed) (GtkWidget *, GtkWidget *);
    void (*style_set) (GtkWidget *, GtkStyle *);
    void (*direction_changed) (GtkWidget *, GtkTextDirection);
    void (*grab_notify) (GtkWidget *, gboolean);
    void (*child_notify) (GtkWidget *, GParamSpec *);
     gboolean(*mnemonic_activate) (GtkWidget *, gboolean);
    void (*grab_focus) (GtkWidget *);
     gboolean(*focus) (GtkWidget *, GtkDirectionType);
     gboolean(*event) (GtkWidget *, GdkEvent *);
     gboolean(*button_press_event) (GtkWidget *, GdkEventButton *);
     gboolean(*button_release_event) (GtkWidget *, GdkEventButton *);
     gboolean(*scroll_event) (GtkWidget *, GdkEventScroll *);
     gboolean(*motion_notify_event) (GtkWidget *, GdkEventMotion *);
     gboolean(*delete_event) (GtkWidget *, GdkEventAny *);
     gboolean(*destroy_event) (GtkWidget *, GdkEventAny *);
     gboolean(*expose_event) (GtkWidget *, GdkEventExpose *);
     gboolean(*key_press_event) (GtkWidget *, GdkEventKey *);
     gboolean(*key_release_event) (GtkWidget *, GdkEventKey *);
     gboolean(*enter_notify_event) (GtkWidget *, GdkEventCrossing *);
     gboolean(*leave_notify_event) (GtkWidget *, GdkEventCrossing *);
     gboolean(*configure_event) (GtkWidget *, GdkEventConfigure *);
     gboolean(*focus_in_event) (GtkWidget *, GdkEventFocus *);
     gboolean(*focus_out_event) (GtkWidget *, GdkEventFocus *);
     gboolean(*map_event) (GtkWidget *, GdkEventAny *);
     gboolean(*unmap_event) (GtkWidget *, GdkEventAny *);
     gboolean(*property_notify_event) (GtkWidget *, GdkEventProperty *);
     gboolean(*selection_clear_event) (GtkWidget *, GdkEventSelection *);
     gboolean(*selection_request_event) (GtkWidget *, GdkEventSelection *);
     gboolean(*selection_notify_event) (GtkWidget *, GdkEventSelection *);
     gboolean(*proximity_in_event) (GtkWidget *, GdkEventProximity *);
     gboolean(*proximity_out_event) (GtkWidget *, GdkEventProximity *);
     gboolean(*visibility_notify_event) (GtkWidget *,
					 GdkEventVisibility *);
     gboolean(*client_event) (GtkWidget *, GdkEventClient *);
     gboolean(*no_expose_event) (GtkWidget *, GdkEventAny *);
     gboolean(*window_state_event) (GtkWidget *, GdkEventWindowState *);
    void (*selection_get) (GtkWidget *, GtkSelectionData *, guint, guint);
    void (*selection_received) (GtkWidget *, GtkSelectionData *, guint);
    void (*drag_begin) (GtkWidget *, GdkDragContext *);
    void (*drag_end) (GtkWidget *, GdkDragContext *);
    void (*drag_data_get) (GtkWidget *, GdkDragContext *,
			   GtkSelectionData *, guint, guint);
    void (*drag_data_delete) (GtkWidget *, GdkDragContext *);
    void (*drag_leave) (GtkWidget *, GdkDragContext *, guint);
     gboolean(*drag_motion) (GtkWidget *, GdkDragContext *, gint, gint,
			     guint);
     gboolean(*drag_drop) (GtkWidget *, GdkDragContext *, gint, gint,
			   guint);
    void (*drag_data_received) (GtkWidget *, GdkDragContext *, gint, gint,
				GtkSelectionData *, guint, guint);
     gboolean(*popup_menu) (GtkWidget *);
     gboolean(*show_help) (GtkWidget *, GtkWidgetHelpType);
    AtkObject *(*get_accessible) (GtkWidget *);
    void (*screen_changed) (GtkWidget *, GdkScreen *);
     gboolean(*can_activate_accel) (GtkWidget *, guint);
     gboolean(*grab_broken_event) (void);
    void (*composited_changed) (GtkWidget *);
     gboolean(*query_tooltip) (GtkWidget *, gint, gint, gboolean,
			       GtkTooltip *);
    void (*_gtk_reserved5) (void);
    void (*_gtk_reserved6) (void);
    void (*_gtk_reserved7) (void);
} GtkWidgetClass;
typedef gboolean(*GtkRcPropertyParser) (const GParamSpec *,
					const GString *, GValue *);
typedef enum {
    GTK_IMAGE_EMPTY = 0,
    GTK_IMAGE_PIXMAP = 1,
    GTK_IMAGE_IMAGE = 2,
    GTK_IMAGE_PIXBUF = 3,
    GTK_IMAGE_STOCK = 4,
    GTK_IMAGE_ICON_SET = 5,
    GTK_IMAGE_ANIMATION = 6,
    GTK_IMAGE_ICON_NAME = 7
} GtkImageType;
typedef struct _GtkImagePixmapData {
    GdkPixmap *pixmap;
} GtkImagePixmapData;
typedef struct _GtkImageImageData {
    GdkImage *image;
} GtkImageImageData;
typedef struct _GtkImagePixbufData {
    GdkPixbuf *pixbuf;
} GtkImagePixbufData;
typedef struct _GtkImageStockData {
    gchar *stock_id;
} GtkImageStockData;
typedef struct _GtkImageIconSetData {
    GtkIconSet *icon_set;
} GtkImageIconSetData;
typedef struct _GtkImageAnimationData {
    GdkPixbufAnimation *anim;
    GdkPixbufAnimationIter *iter;
    guint frame_timeout;
} GtkImageAnimationData;
typedef struct _GtkImageIconNameData {
    gchar *icon_name;
    GdkPixbuf *pixbuf;
    guint theme_change_id;
} GtkImageIconNameData;
typedef struct _GtkImage {
    GtkMisc misc;
    GtkImageType storage_type;
    union {
	GtkImagePixmapData pixmap;
	GtkImageImageData image;
	GtkImagePixbufData pixbuf;
	GtkImageStockData stock;
	GtkImageIconSetData icon_set;
	GtkImageAnimationData anim;
	GtkImageIconNameData name;
    } data;
    GdkBitmap *mask;
    GtkIconSize icon_size;
} GtkImage;
typedef struct _GtkTreeViewPrivate GtkTreeViewPrivate;
typedef struct _GtkTreeView {
    GtkContainer parent;
    GtkTreeViewPrivate *priv;
} GtkTreeView;
typedef enum {
    GTK_UPDATE_ALWAYS = 0,
    GTK_UPDATE_IF_VALID = 1
} GtkSpinButtonUpdatePolicy;
typedef struct _GtkSpinButton {
    GtkEntry entry;
    GtkAdjustment *adjustment;
    GdkWindow *panel;
    guint32 timer;
    gdouble climb_rate;
    gdouble timer_step;
    GtkSpinButtonUpdatePolicy update_policy;
    guint in_child:2;
    guint click_child:2;
    guint button:2;
    guint need_timer:1;
    guint timer_calls:3;
    guint digits:10;
    guint numeric:1;
    guint wrap:1;
    guint snap_to_ticks:1;
} GtkSpinButton;
typedef struct _GtkCellLayout GtkCellLayout;
typedef struct _GtkFileSelection {
    GtkDialog parent_instance;
    GtkWidget *dir_list;
    GtkWidget *file_list;
    GtkWidget *selection_entry;
    GtkWidget *selection_text;
    GtkWidget *main_vbox;
    GtkWidget *ok_button;
    GtkWidget *cancel_button;
    GtkWidget *help_button;
    GtkWidget *history_pulldown;
    GtkWidget *history_menu;
    GList *history_list;
    GtkWidget *fileop_dialog;
    GtkWidget *fileop_entry;
    gchar *fileop_file;
    gpointer cmpl_state;
    GtkWidget *fileop_c_dir;
    GtkWidget *fileop_del_file;
    GtkWidget *fileop_ren_file;
    GtkWidget *button_area;
    GtkWidget *action_area;
    GPtrArray *selected_names;
    gchar *last_selected;
} GtkFileSelection;
typedef struct _GtkTooltips {
    GtkObject parent_instance;
    GtkWidget *tip_window;
    GtkWidget *tip_label;
    GtkTooltipsData *active_tips_data;
    GList *tips_data_list;
    guint delay:30;
    guint enabled:1;
    guint have_grab:1;
    guint use_sticky_delay:1;
    gint timer_tag;
    GTimeVal last_popdown;
} GtkTooltips;
typedef struct _GtkTooltipsData {
    GtkTooltips *tooltips;
    GtkWidget *widget;
    gchar *tip_text;
    gchar *tip_private;
} GtkTooltipsData;
typedef gboolean(*GtkTreeViewRowSeparatorFunc) (GtkTreeModel *,
						GtkTreeIter *, gpointer);
typedef struct _GtkEntryCompletionPrivate GtkEntryCompletionPrivate;
typedef struct _GtkEntryCompletion {
    GObject parent_instance;
    GtkEntryCompletionPrivate *priv;
} GtkEntryCompletion;
typedef struct _GtkClipboard GtkClipboard;
typedef struct _GtkTreeModelFilterPrivate GtkTreeModelFilterPrivate;
typedef struct _GtkTreeModelFilter {
    GObject parent;
    GtkTreeModelFilterPrivate *priv;
} GtkTreeModelFilter;
typedef struct _GtkTreeModelSort {
    GObject parent;
    gpointer root;
    gint stamp;
    guint child_flags;
    GtkTreeModel *child_model;
    gint zero_ref_count;
    GList *sort_list;
    gint sort_column_id;
    GtkSortType order;
    GtkTreeIterCompareFunc default_sort_func;
    gpointer default_sort_data;
    GtkDestroyNotify default_sort_destroy;
    guint changed_id;
    guint inserted_id;
    guint has_child_toggled_id;
    guint deleted_id;
    guint reordered_id;
} GtkTreeModelSort;
typedef void (*GtkTreeCellDataFunc) (GtkTreeViewColumn *,
				     GtkCellRenderer *, GtkTreeModel *,
				     GtkTreeIter *, gpointer);
typedef struct _GtkColorButtonPrivate GtkColorButtonPrivate;
typedef struct _GtkColorButton {
    GtkButton button;
    GtkColorButtonPrivate *priv;
} GtkColorButton;
typedef enum {
    GTK_FILE_CHOOSER_ACTION_OPEN = 0,
    GTK_FILE_CHOOSER_ACTION_SAVE = 1,
    GTK_FILE_CHOOSER_ACTION_SELECT_FOLDER = 2,
    GTK_FILE_CHOOSER_ACTION_CREATE_FOLDER = 3
} GtkFileChooserAction;
typedef void (*GtkCallback) (GtkWidget *, gpointer);
typedef struct _GtkHandleBox {
    GtkBin bin;
    GdkWindow *bin_window;
    GdkWindow *float_window;
    GtkShadowType shadow_type;
    guint handle_position:2;
    guint float_window_mapped:1;
    guint child_detached:1;
    guint in_drag:1;
    guint shrink_on_detach:1;
    int snap_edge:3;
    gint deskoff_x;
    gint deskoff_y;
    GtkAllocation attach_allocation;
    GtkAllocation float_allocation;
} GtkHandleBox;
typedef struct _GtkActionGroupPrivate GtkActionGroupPrivate;
typedef struct _GtkActionGroup {
    GObject parent;
    GtkActionGroupPrivate *private_data;
} GtkActionGroup;
typedef struct _GtkBindingSet {
    gchar *set_name;
    gint priority;
    GSList *widget_path_pspecs;
    GSList *widget_class_pspecs;
    GSList *class_branch_pspecs;
    GtkBindingEntry *entries;
    GtkBindingEntry *current;
    guint parsed:1;
} GtkBindingSet;
typedef struct _GtkBindingEntry {
    guint keyval;
    GdkModifierType modifiers;
    GtkBindingSet *binding_set;
    guint destroyed:1;
    guint in_emission:1;
    GtkBindingEntry *set_next;
    GtkBindingEntry *hash_next;
    GtkBindingSignal *signals;
} GtkBindingEntry;
typedef struct _GtkBindingSignal {
    GtkBindingSignal *next;
    gchar *signal_name;
    guint n_args;
    GtkBindingArg *args;
} GtkBindingSignal;
typedef struct _GtkBindingArg {
    GType arg_type;
    union {
	glong long_data;
	gdouble double_data;
	gchar *string_data;
    } d;
} GtkBindingArg;
typedef struct _GtkScrolledWindow {
    GtkBin container;
    GtkWidget *hscrollbar;
    GtkWidget *vscrollbar;
    guint hscrollbar_policy:2;
    guint vscrollbar_policy:2;
    guint hscrollbar_visible:1;
    guint vscrollbar_visible:1;
    guint window_placement:2;
    guint focus_out:1;
    guint16 shadow_type;
} GtkScrolledWindow;
typedef struct _GtkFrame {
    GtkBin bin;
    GtkWidget *label_widget;
    gint16 shadow_type;
    gfloat label_xalign;
    gfloat label_yalign;
    GtkAllocation child_allocation;
} GtkFrame;
typedef struct _GtkTextChildAnchor {
    GObject parent_instance;
    gpointer segment;
} GtkTextChildAnchor;
typedef struct _GtkSeparatorToolItemPrivate GtkSeparatorToolItemPrivate;
typedef struct _GtkSeparatorToolItem {
    GtkToolItem parent;
    GtkSeparatorToolItemPrivate *priv;
} GtkSeparatorToolItem;
typedef struct _GtkTreeSelection {
    GObject parent;
    GtkTreeView *tree_view;
    GtkSelectionMode type;
    GtkTreeSelectionFunc user_func;
    gpointer user_data;
    GtkDestroyNotify destroy;
} GtkTreeSelection;
typedef gboolean(*GtkTreeSelectionFunc) (GtkTreeSelection *,
					 GtkTreeModel *, GtkTreePath *,
					 gboolean, gpointer);
typedef struct _GtkExpanderPrivate GtkExpanderPrivate;
typedef struct _GtkExpander {
    GtkBin bin;
    GtkExpanderPrivate *priv;
} GtkExpander;
typedef enum {
    GTK_UI_MANAGER_AUTO = 0,
    GTK_UI_MANAGER_MENUBAR = 1,
    GTK_UI_MANAGER_MENU = 2,
    GTK_UI_MANAGER_TOOLBAR = 4,
    GTK_UI_MANAGER_PLACEHOLDER = 8,
    GTK_UI_MANAGER_POPUP = 16,
    GTK_UI_MANAGER_MENUITEM = 32,
    GTK_UI_MANAGER_TOOLITEM = 64,
    GTK_UI_MANAGER_SEPARATOR = 128,
    GTK_UI_MANAGER_ACCELERATOR = 256
} GtkUIManagerItemType;
typedef struct _GtkFontSelectionDialog {
    GtkDialog parent_instance;
    GtkWidget *fontsel;
    GtkWidget *main_vbox;
    GtkWidget *action_area;
    GtkWidget *ok_button;
    GtkWidget *apply_button;
    GtkWidget *cancel_button;
    gint dialog_width;
    gboolean auto_resize;
} GtkFontSelectionDialog;
typedef struct _GtkPanedPrivate GtkPanedPrivate;
typedef struct _GtkPaned {
    GtkContainer container;
    GtkWidget *child1;
    GtkWidget *child2;
    GdkWindow *handle;
    GdkGC *xor_gc;
    GdkCursorType cursor_type;
    GdkRectangle handle_pos;
    gint child1_size;
    gint last_allocation;
    gint min_position;
    gint max_position;
    guint position_set:1;
    guint in_drag:1;
    guint child1_shrink:1;
    guint child1_resize:1;
    guint child2_shrink:1;
    guint child2_resize:1;
    guint orientation:1;
    guint in_recursion:1;
    guint handle_prelit:1;
    GtkWidget *last_child1_focus;
    GtkWidget *last_child2_focus;
    GtkPanedPrivate *priv;
    gint drag_pos;
    gint original_position;
} GtkPaned;
typedef struct _GtkViewport {
    GtkBin bin;
    GtkShadowType shadow_type;
    GdkWindow *view_window;
    GdkWindow *bin_window;
    GtkAdjustment *hadjustment;
    GtkAdjustment *vadjustment;
} GtkViewport;
typedef struct _GtkScale {
    GtkRange range;
    gint digits;
    guint draw_value:1;
    guint value_pos:2;
} GtkScale;
typedef struct _GtkListStore {
    GObject parent;
    gint stamp;
    gpointer seq;
    gpointer _gtk_reserved1;
    GList *sort_list;
    gint n_columns;
    gint sort_column_id;
    GtkSortType order;
    GType *column_headers;
    gint length;
    GtkTreeIterCompareFunc default_sort_func;
    gpointer default_sort_data;
    GtkDestroyNotify default_sort_destroy;
    guint columns_dirty:1;
} GtkListStore;
typedef struct _GtkEditable GtkEditable;
typedef void (*GtkClipboardGetFunc) (GtkClipboard *, GtkSelectionData *,
				     guint, gpointer);
typedef void (*GtkClipboardClearFunc) (GtkClipboard *, gpointer);
typedef struct _GtkRadioActionEntry {
    const gchar *name;
    const gchar *stock_id;
    const gchar *label;
    const gchar *accelerator;
    const gchar *tooltip;
    gint value;
} GtkRadioActionEntry;
typedef gboolean(*GtkTreeViewColumnDropFunc) (GtkTreeView *,
					      GtkTreeViewColumn *,
					      GtkTreeViewColumn *,
					      GtkTreeViewColumn *,
					      gpointer);
typedef struct _GtkEventBox {
    GtkBin bin;
} GtkEventBox;
typedef struct _GtkTreeDragDest GtkTreeDragDest;
typedef struct _GtkToggleActionEntry {
    const gchar *name;
    const gchar *stock_id;
    const gchar *label;
    const gchar *accelerator;
    const gchar *tooltip;
    GCallback callback;
    gboolean is_active;
} GtkToggleActionEntry;
typedef struct _GtkAccelLabel {
    GtkLabel label;
    guint gtk_reserved;
    guint accel_padding;
    GtkWidget *accel_widget;
    GClosure *accel_closure;
    GtkAccelGroup *accel_group;
    gchar *accel_string;
    guint16 accel_string_width;
} GtkAccelLabel;
typedef struct _GtkImageMenuItem {
    GtkMenuItem menu_item;
    GtkWidget *image;
} GtkImageMenuItem;
typedef struct _GtkPlug {
    GtkWindow window;
    GdkWindow *socket_window;
    GtkWidget *modality_window;
    GtkWindowGroup *modality_group;
    GHashTable *grabbed_keys;
    guint same_app:1;
} GtkPlug;
typedef struct _GtkFileChooserButtonPrivate GtkFileChooserButtonPrivate;
typedef struct _GtkFileChooserButton {
    GtkHBox parent;
    GtkFileChooserButtonPrivate *priv;
} GtkFileChooserButton;
typedef struct _GtkStockItem {
    gchar *stock_id;
    gchar *label;
    GdkModifierType modifier;
    guint keyval;
    gchar *translation_domain;
} GtkStockItem;
typedef gchar *(*GtkTranslateFunc) (const gchar *, gpointer);
typedef struct _GtkToolbar {
    GtkContainer container;
    gint num_children;
    GList *children;
    GtkOrientation orientation;
    GtkToolbarStyle style;
    GtkIconSize icon_size;
    GtkTooltips *tooltips;
    gint button_maxw;
    gint button_maxh;
    guint style_set_connection;
    guint icon_size_connection;
    guint style_set:1;
    guint icon_size_set:1;
} GtkToolbar;
typedef void (*GtkCellLayoutDataFunc) (GtkCellLayout *, GtkCellRenderer *,
				       GtkTreeModel *, GtkTreeIter *,
				       gpointer);
typedef struct _GtkCellRendererToggle {
    GtkCellRenderer parent;
    guint active:1;
    guint activatable:1;
    guint radio:1;
} GtkCellRendererToggle;
typedef void (*GtkClipboardImageReceivedFunc) (GtkClipboard *, GdkPixbuf *,
					       gpointer);
typedef enum {
    GTK_CELL_RENDERER_SELECTED = 1,
    GTK_CELL_RENDERER_PRELIT = 2,
    GTK_CELL_RENDERER_INSENSITIVE = 4,
    GTK_CELL_RENDERER_SORTED = 8,
    GTK_CELL_RENDERER_FOCUSED = 16
} GtkCellRendererState;
typedef struct _GtkActionEntry {
    const gchar *name;
    const gchar *stock_id;
    const gchar *label;
    const gchar *accelerator;
    const gchar *tooltip;
    GCallback callback;
} GtkActionEntry;
typedef struct _GtkCheckButton {
    GtkToggleButton toggle_button;
} GtkCheckButton;
typedef struct _GtkRadioButton {
    GtkCheckButton check_button;
    GSList *group;
} GtkRadioButton;
typedef struct _GtkAlignment {
    GtkBin bin;
    gfloat xalign;
    gfloat yalign;
    gfloat xscale;
    gfloat yscale;
} GtkAlignment;
typedef struct _GtkContainerClass {
    GtkWidgetClass parent_class;
    void (*add) (GtkContainer *, GtkWidget *);
    void (*remove) (GtkContainer *, GtkWidget *);
    void (*check_resize) (GtkContainer *);
    void (*forall) (GtkContainer *, gboolean, GtkCallback, gpointer);
    void (*set_focus_child) (GtkContainer *, GtkWidget *);
     GType(*child_type) (GtkContainer *);
    gchar *(*composite_name) (GtkContainer *, GtkWidget *);
    void (*set_child_property) (GtkContainer *, GtkWidget *, guint,
				const GValue *, GParamSpec *);
    void (*get_child_property) (GtkContainer *, GtkWidget *, guint,
				GValue *, GParamSpec *);
    void (*_gtk_reserved1) (void);
    void (*_gtk_reserved2) (void);
    void (*_gtk_reserved3) (void);
    void (*_gtk_reserved4) (void);
} GtkContainerClass;
typedef struct _GtkFontButtonPrivate GtkFontButtonPrivate;
typedef struct _GtkFontButton {
    GtkButton button;
    GtkFontButtonPrivate *priv;
} GtkFontButton;
typedef struct _GtkBorder {
    gint left;
    gint right;
    gint top;
    gint bottom;
} GtkBorder;
typedef struct _GtkMessageDialog {
    GtkDialog parent_instance;
    GtkWidget *image;
    GtkWidget *label;
} GtkMessageDialog;
typedef struct _GtkRulerMetric {
    gchar *metric_name;
    gchar *abbrev;
    gdouble pixels_per_unit;
    gdouble ruler_scale[10];
    gint subdivide[5];
} GtkRulerMetric;
typedef struct _GtkRuler {
    GtkWidget widget;
    GdkPixmap *backing_store;
    GdkGC *non_gr_exp_gc;
    GtkRulerMetric *metric;
    gint xsrc;
    gint ysrc;
    gint slider_size;
    gdouble lower;
    gdouble upper;
    gdouble position;
    gdouble max_size;
} GtkRuler;
typedef enum {
    GTK_ACCEL_VISIBLE = 1,
    GTK_ACCEL_LOCKED = 2,
    GTK_ACCEL_MASK = 7
} GtkAccelFlags;
typedef gboolean(*GtkTextCharPredicate) (gunichar, gpointer);
typedef struct _GtkMenuToolButtonPrivate GtkMenuToolButtonPrivate;
typedef struct _GtkMenuToolButton {
    GtkToolButton parent;
    GtkMenuToolButtonPrivate *priv;
} GtkMenuToolButton;
typedef struct _GtkToggleToolButtonPrivate GtkToggleToolButtonPrivate;
typedef struct _GtkToggleToolButton {
    GtkToolButton parent;
    GtkToggleToolButtonPrivate *priv;
} GtkToggleToolButton;
typedef struct _GtkRadioToolButton {
    GtkToggleToolButton parent;
} GtkRadioToolButton;
typedef struct _GtkSizeGroup {
    GObject parent_instance;
    GSList *widgets;
    guint8 mode;
    guint have_width:1;
    guint have_height:1;
    GtkRequisition requisition;
} GtkSizeGroup;
typedef enum {
    GTK_SIZE_GROUP_NONE = 0,
    GTK_SIZE_GROUP_HORIZONTAL = 1,
    GTK_SIZE_GROUP_VERTICAL = 2,
    GTK_SIZE_GROUP_BOTH = 3
} GtkSizeGroupMode;
typedef enum {
    GTK_DIALOG_MODAL = 1,
    GTK_DIALOG_DESTROY_WITH_PARENT = 2,
    GTK_DIALOG_NO_SEPARATOR = 4
} GtkDialogFlags;
typedef void (*GtkTreeSelectionForeachFunc) (GtkTreeModel *, GtkTreePath *,
					     GtkTreeIter *, gpointer);
typedef enum {
    GTK_ICON_LOOKUP_NO_SVG = 1,
    GTK_ICON_LOOKUP_FORCE_SVG = 2,
    GTK_ICON_LOOKUP_USE_BUILTIN = 4
} GtkIconLookupFlags;
typedef gboolean(*GtkTreeViewSearchEqualFunc) (GtkTreeModel *, gint,
					       const gchar *,
					       GtkTreeIter *, gpointer);
typedef struct _GtkIMContextSimple {
    GtkIMContext object;
    GSList *tables;
    guint compose_buffer[8];
    gunichar tentative_match;
    gint tentative_match_len;
    guint in_hex_sequence:1;
} GtkIMContextSimple;
typedef void (*GtkClipboardTargetsReceivedFunc) (GtkClipboard *, GdkAtom *,
						 gint, gpointer);
typedef struct _GtkFontSelection {
    GtkVBox parent_instance;
    GtkWidget *font_entry;
    GtkWidget *family_list;
    GtkWidget *font_style_entry;
    GtkWidget *face_list;
    GtkWidget *size_entry;
    GtkWidget *size_list;
    GtkWidget *pixels_button;
    GtkWidget *points_button;
    GtkWidget *filter_button;
    GtkWidget *preview_entry;
    PangoFontFamily *family;
    PangoFontFace *face;
    gint size;
    GdkFont *font;
} GtkFontSelection;
typedef void (*GtkClipboardTextReceivedFunc) (GtkClipboard *,
					      const gchar *, gpointer);
typedef gboolean(*GtkAccelGroupFindFunc) (GtkAccelKey *, GClosure *,
					  gpointer);
typedef void (*GtkTreeDestroyCountFunc) (GtkTreeView *, GtkTreePath *,
					 gint, gpointer);
typedef enum {
    GTK_TREE_VIEW_DROP_BEFORE = 0,
    GTK_TREE_VIEW_DROP_AFTER = 1,
    GTK_TREE_VIEW_DROP_INTO_OR_BEFORE = 2,
    GTK_TREE_VIEW_DROP_INTO_OR_AFTER = 3
} GtkTreeViewDropPosition;
typedef struct _GtkAspectFrame {
    GtkFrame frame;
    gfloat xalign;
    gfloat yalign;
    gfloat ratio;
    gboolean obey_child;
    GtkAllocation center_allocation;
} GtkAspectFrame;
typedef gboolean(*GtkFileFilterFunc) (const GtkFileFilterInfo *, gpointer);
typedef struct _GtkIMMulticontextPrivate GtkIMMulticontextPrivate;
typedef struct _GtkIMMulticontext {
    GtkIMContext object;
    GtkIMContext *slave;
    GtkIMMulticontextPrivate *priv;
    const gchar *context_id;
} GtkIMMulticontext;
typedef enum {
    GTK_BUTTONS_NONE = 0,
    GTK_BUTTONS_OK = 1,
    GTK_BUTTONS_CLOSE = 2,
    GTK_BUTTONS_CANCEL = 3,
    GTK_BUTTONS_YES_NO = 4,
    GTK_BUTTONS_OK_CANCEL = 5
} GtkButtonsType;
typedef void (*GtkAccelMapForeach) (gpointer, const gchar *, guint,
				    GdkModifierType, gboolean);
typedef void (*GtkColorSelectionChangePaletteWithScreenFunc) (GdkScreen *,
							      const
							      GdkColor *,
							      gint);
typedef void (*GtkClipboardReceivedFunc) (GtkClipboard *,
					  GtkSelectionData *, gpointer);
typedef void (*GtkTreeViewMappingFunc) (GtkTreeView *, GtkTreePath *,
					gpointer);
typedef gboolean(*GtkTreeModelFilterVisibleFunc) (GtkTreeModel *,
						  GtkTreeIter *, gpointer);
typedef enum {
    GTK_TEXT_SEARCH_VISIBLE_ONLY = 1,
    GTK_TEXT_SEARCH_TEXT_ONLY = 2
} GtkTextSearchFlags;
typedef struct _GtkFixed {
    GtkContainer container;
    GList *children;
} GtkFixed;
typedef enum {
    GTK_DEST_DEFAULT_MOTION = 1,
    GTK_DEST_DEFAULT_HIGHLIGHT = 2,
    GTK_DEST_DEFAULT_DROP = 4,
    GTK_DEST_DEFAULT_ALL = 7
} GtkDestDefaults;
typedef gint(*GtkKeySnoopFunc) (GtkWidget *, GdkEventKey *, gpointer);
typedef enum {
    GTK_SPIN_STEP_FORWARD = 0,
    GTK_SPIN_STEP_BACKWARD = 1,
    GTK_SPIN_PAGE_FORWARD = 2,
    GTK_SPIN_PAGE_BACKWARD = 3,
    GTK_SPIN_HOME = 4,
    GTK_SPIN_END = 5,
    GTK_SPIN_USER_DEFINED = 6
} GtkSpinType;
typedef void (*GtkMenuDetachFunc) (GtkWidget *, GtkMenu *);
typedef struct _GtkInvisible {
    GtkWidget widget;
    gboolean has_user_ref_count;
    GdkScreen *screen;
} GtkInvisible;
typedef void (*GtkTextTagTableForeach) (GtkTextTag *, gpointer);
typedef gboolean(*GtkEntryCompletionMatchFunc) (GtkEntryCompletion *,
						const gchar *,
						GtkTreeIter *, gpointer);
typedef struct _GtkAccessible {
    AtkObject parent;
    GtkWidget *widget;
} GtkAccessible;
typedef struct _GtkArrow {
    GtkMisc misc;
    gint16 arrow_type;
    gint16 shadow_type;
} GtkArrow;
typedef void (*GtkIconViewForeachFunc) (GtkIconView *, GtkTreePath *,
					gpointer);
typedef void (*GtkTreeModelFilterModifyFunc) (GtkTreeModel *,
					      GtkTreeIter *, GValue *,
					      gint, gpointer);
typedef struct _GtkCellRendererText {
    GtkCellRenderer parent;
    gchar *text;
    PangoFontDescription *font;
    gdouble font_scale;
    PangoColor foreground;
    PangoColor background;
    PangoAttrList *extra_attrs;
    PangoUnderline underline_style;
    gint rise;
    gint fixed_height_rows;
    guint strikethrough:1;
    guint editable:1;
    guint scale_set:1;
    guint foreground_set:1;
    guint background_set:1;
    guint underline_set:1;
    guint rise_set:1;
    guint strikethrough_set:1;
    guint editable_set:1;
    guint calc_fixed_height:1;
} GtkCellRendererText;
typedef gboolean(*GtkTreeModelForeachFunc) (GtkTreeModel *, GtkTreePath *,
					    GtkTreeIter *, gpointer);
typedef struct _GtkSettingsValue {
    gchar *origin;
    GValue value;
} GtkSettingsValue;
typedef struct _GtkAccelMap GtkAccelMap;
typedef struct _GtkBinClass {
    GtkContainerClass parent_class;
} GtkBinClass;
typedef struct _GtkWindowClass {
    GtkBinClass parent_class;
    void (*set_focus) (GtkWindow *, GtkWidget *);
     gboolean(*frame_event) (GtkWindow *, GdkEvent *);
    void (*activate_focus) (GtkWindow *);
    void (*activate_default) (GtkWindow *);
    void (*move_focus) (GtkWindow *, GtkDirectionType);
    void (*keys_changed) (GtkWindow *);
    void (*_gtk_reserved1) (void);
    void (*_gtk_reserved2) (void);
    void (*_gtk_reserved3) (void);
    void (*_gtk_reserved4) (void);
} GtkWindowClass;
typedef struct _GtkRangeClass {
    GtkWidgetClass parent_class;
    gchar *slider_detail;
    gchar *stepper_detail;
    void (*value_changed) (GtkRange *);
    void (*adjust_bounds) (GtkRange *, gdouble);
    void (*move_slider) (GtkRange *, GtkScrollType);
    void (*get_range_border) (GtkRange *, GtkBorder *);
     gboolean(*change_value) (GtkRange *, GtkScrollType, gdouble);
    void (*_gtk_reserved1) (void);
    void (*_gtk_reserved2) (void);
    void (*_gtk_reserved3) (void);
} GtkRangeClass;
typedef struct _GtkScaleClass {
    GtkRangeClass parent_class;
    gchar *(*format_value) (GtkScale *, gdouble);
    void (*draw_value) (GtkScale *);
    void (*get_layout_offsets) (GtkScale *, gint *, gint *);
    void (*_gtk_reserved2) (void);
    void (*_gtk_reserved3) (void);
    void (*_gtk_reserved4) (void);
} GtkScaleClass;
typedef struct _GtkBoxClass {
    GtkContainerClass parent_class;
} GtkBoxClass;
typedef struct _GtkMiscClass {
    GtkWidgetClass parent_class;
} GtkMiscClass;
typedef struct _GtkHRuler {
    GtkRuler ruler;
} GtkHRuler;
typedef struct _GtkHBoxClass {
    GtkBoxClass parent_class;
} GtkHBoxClass;
typedef struct _GtkPanedClass {
    GtkContainerClass parent_class;
     gboolean(*cycle_child_focus) (GtkPaned *, gboolean);
     gboolean(*toggle_handle_focus) (GtkPaned *);
     gboolean(*move_handle) (GtkPaned *, GtkScrollType);
     gboolean(*cycle_handle_focus) (GtkPaned *, gboolean);
     gboolean(*accept_position) (GtkPaned *);
     gboolean(*cancel_position) (GtkPaned *);
    void (*_gtk_reserved1) (void);
    void (*_gtk_reserved2) (void);
    void (*_gtk_reserved3) (void);
    void (*_gtk_reserved4) (void);
} GtkPanedClass;
typedef struct _GtkHPanedClass {
    GtkPanedClass parent_class;
} GtkHPanedClass;
typedef struct _GtkSizeGroupClass {
    GObjectClass parent_class;
    void (*_gtk_reserved1) (void);
    void (*_gtk_reserved2) (void);
    void (*_gtk_reserved3) (void);
    void (*_gtk_reserved4) (void);
} GtkSizeGroupClass;
typedef struct _GtkViewportClass {
    GtkBinClass parent_class;
    void (*set_scroll_adjustments) (GtkViewport *, GtkAdjustment *,
				    GtkAdjustment *);
} GtkViewportClass;
typedef struct _GtkEditableClass {
    GTypeInterface base_iface;
    void (*insert_text) (GtkEditable *, const gchar *, gint, gint *);
    void (*delete_text) (GtkEditable *, gint, gint);
    void (*changed) (GtkEditable *);
    void (*do_insert_text) (GtkEditable *, const gchar *, gint, gint *);
    void (*do_delete_text) (GtkEditable *, gint, gint);
    gchar *(*get_chars) (GtkEditable *, gint, gint);
    void (*set_selection_bounds) (GtkEditable *, gint, gint);
     gboolean(*get_selection_bounds) (GtkEditable *, gint *, gint *);
    void (*set_position) (GtkEditable *, gint);
     gint(*get_position) (GtkEditable *);
} GtkEditableClass;
typedef enum {
    GTK_NOTEBOOK_TAB_FIRST = 0,
    GTK_NOTEBOOK_TAB_LAST = 1
} GtkNotebookTab;
typedef struct _GtkDialogClass {
    GtkWindowClass parent_class;
    void (*response) (GtkDialog *, gint);
    void (*close) (GtkDialog *);
    void (*_gtk_reserved1) (void);
    void (*_gtk_reserved2) (void);
    void (*_gtk_reserved3) (void);
    void (*_gtk_reserved4) (void);
} GtkDialogClass;
typedef struct _GtkCellRendererPixbuf {
    GtkCellRenderer parent;
    GdkPixbuf *pixbuf;
    GdkPixbuf *pixbuf_expander_open;
    GdkPixbuf *pixbuf_expander_closed;
} GtkCellRendererPixbuf;
typedef struct _GtkTreeViewColumnClass {
    GtkObjectClass parent_class;
    void (*clicked) (GtkTreeViewColumn *);
    void (*_gtk_reserved1) (void);
    void (*_gtk_reserved2) (void);
    void (*_gtk_reserved3) (void);
    void (*_gtk_reserved4) (void);
} GtkTreeViewColumnClass;
typedef struct _GtkRulerClass {
    GtkWidgetClass parent_class;
    void (*draw_ticks) (GtkRuler *);
    void (*draw_pos) (GtkRuler *);
    void (*_gtk_reserved1) (void);
    void (*_gtk_reserved2) (void);
    void (*_gtk_reserved3) (void);
    void (*_gtk_reserved4) (void);
} GtkRulerClass;
typedef struct _GtkHRulerClass {
    GtkRulerClass parent_class;
} GtkHRulerClass;
typedef struct _GtkAccelMapClass GtkAccelMapClass;
typedef struct _GtkInvisibleClass {
    GtkWidgetClass parent_class;
    void (*_gtk_reserved1) (void);
    void (*_gtk_reserved2) (void);
    void (*_gtk_reserved3) (void);
    void (*_gtk_reserved4) (void);
} GtkInvisibleClass;
typedef struct _GtkVRulerClass {
    GtkRulerClass parent_class;
} GtkVRulerClass;
typedef struct _GtkToolItemClass {
    GtkBinClass parent_class;
     gboolean(*create_menu_proxy) (GtkToolItem *);
    void (*toolbar_reconfigured) (GtkToolItem *);
     gboolean(*set_tooltip) (GtkToolItem *, GtkTooltips *, const gchar *,
			     const gchar *);
    void (*_gtk_reserved1) (void);
    void (*_gtk_reserved2) (void);
    void (*_gtk_reserved3) (void);
    void (*_gtk_reserved4) (void);
} GtkToolItemClass;
typedef struct _GtkWindowGroupClass {
    GObjectClass parent_class;
    void (*_gtk_reserved1) (void);
    void (*_gtk_reserved2) (void);
    void (*_gtk_reserved3) (void);
    void (*_gtk_reserved4) (void);
} GtkWindowGroupClass;
typedef struct _GtkWidgetAuxInfo {
    gint x;
    gint y;
    gint width;
    gint height;
    guint x_set:1;
    guint y_set:1;
} GtkWidgetAuxInfo;
typedef struct _GtkItemClass {
    GtkBinClass parent_class;
    void (*select) (GtkItem *);
    void (*deselect) (GtkItem *);
    void (*toggle) (GtkItem *);
    void (*_gtk_reserved1) (void);
    void (*_gtk_reserved2) (void);
    void (*_gtk_reserved3) (void);
    void (*_gtk_reserved4) (void);
} GtkItemClass;
typedef struct _GtkMenuItemClass {
    GtkItemClass parent_class;
    guint hide_on_activate:1;
    void (*activate) (GtkMenuItem *);
    void (*activate_item) (GtkMenuItem *);
    void (*toggle_size_request) (GtkMenuItem *, gint *);
    void (*toggle_size_allocate) (GtkMenuItem *, gint);
    void (*set_label) (void);
    const gchar *(*get_label) (void);
    void (*_gtk_reserved3) (void);
    void (*_gtk_reserved4) (void);
} GtkMenuItemClass;
typedef struct _GtkCheckMenuItemClass {
    GtkMenuItemClass parent_class;
    void (*toggled) (GtkCheckMenuItem *);
    void (*draw_indicator) (GtkCheckMenuItem *, GdkRectangle *);
    void (*_gtk_reserved1) (void);
    void (*_gtk_reserved2) (void);
    void (*_gtk_reserved3) (void);
    void (*_gtk_reserved4) (void);
} GtkCheckMenuItemClass;
typedef struct _GtkRcProperty {
    GQuark type_name;
    GQuark property_name;
    gchar *origin;
    GValue value;
} GtkRcProperty;
typedef struct _GtkFontSelectionDialogClass {
    GtkDialogClass parent_class;
    void (*_gtk_reserved1) (void);
    void (*_gtk_reserved2) (void);
    void (*_gtk_reserved3) (void);
    void (*_gtk_reserved4) (void);
} GtkFontSelectionDialogClass;
typedef struct _GtkFileChooserDialogPrivate GtkFileChooserDialogPrivate;
typedef struct _GtkFileChooserDialog {
    GtkDialog parent_instance;
    GtkFileChooserDialogPrivate *priv;
} GtkFileChooserDialog;
typedef struct _GtkActionClass {
    GObjectClass parent_class;
    void (*activate) (GtkAction *);
    GType menu_item_type;
    GType toolbar_item_type;
    GtkWidget *(*create_menu_item) (GtkAction *);
    GtkWidget *(*create_tool_item) (GtkAction *);
    void (*connect_proxy) (GtkAction *, GtkWidget *);
    void (*disconnect_proxy) (GtkAction *, GtkWidget *);
    GtkWidget *(*create_menu) (GtkAction *);
    void (*_gtk_reserved2) (void);
    void (*_gtk_reserved3) (void);
    void (*_gtk_reserved4) (void);
} GtkActionClass;
typedef struct _GtkToggleActionClass {
    GtkActionClass parent_class;
    void (*toggled) (GtkToggleAction *);
    void (*_gtk_reserved1) (void);
    void (*_gtk_reserved2) (void);
    void (*_gtk_reserved3) (void);
    void (*_gtk_reserved4) (void);
} GtkToggleActionClass;
typedef struct _GtkVBoxClass {
    GtkBoxClass parent_class;
} GtkVBoxClass;
typedef struct _GtkButtonBoxClass {
    GtkBoxClass parent_class;
} GtkButtonBoxClass;
typedef struct _GtkHButtonBoxClass {
    GtkButtonBoxClass parent_class;
} GtkHButtonBoxClass;
typedef struct _GtkThemeEngine GtkThemeEngine;
typedef struct _GtkTreeStoreClass {
    GObjectClass parent_class;
    void (*_gtk_reserved1) (void);
    void (*_gtk_reserved2) (void);
    void (*_gtk_reserved3) (void);
    void (*_gtk_reserved4) (void);
} GtkTreeStoreClass;
typedef struct _GtkBoxChild {
    GtkWidget *widget;
    guint16 padding;
    guint expand:1;
    guint fill:1;
    guint pack:1;
    guint is_secondary:1;
} GtkBoxChild;
typedef struct _GtkHButtonBox {
    GtkButtonBox button_box;
} GtkHButtonBox;
typedef struct _GtkAccelGroupClass {
    GObjectClass parent_class;
    void (*accel_changed) (GtkAccelGroup *, guint, GdkModifierType,
			   GClosure *);
    void (*_gtk_reserved1) (void);
    void (*_gtk_reserved2) (void);
    void (*_gtk_reserved3) (void);
    void (*_gtk_reserved4) (void);
} GtkAccelGroupClass;
typedef struct _GtkSeparator {
    GtkWidget widget;
} GtkSeparator;
typedef struct _GtkButtonClass {
    GtkBinClass parent_class;
    void (*pressed) (GtkButton *);
    void (*released) (GtkButton *);
    void (*clicked) (GtkButton *);
    void (*enter) (GtkButton *);
    void (*leave) (GtkButton *);
    void (*activate) (GtkButton *);
    void (*_gtk_reserved1) (void);
    void (*_gtk_reserved2) (void);
    void (*_gtk_reserved3) (void);
    void (*_gtk_reserved4) (void);
} GtkButtonClass;
typedef void (*GtkWindowKeysForeachFunc) (GtkWindow *, guint,
					  GdkModifierType, gboolean,
					  gpointer);
typedef struct _GtkIconFactoryClass {
    GObjectClass parent_class;
    void (*_gtk_reserved1) (void);
    void (*_gtk_reserved2) (void);
    void (*_gtk_reserved3) (void);
    void (*_gtk_reserved4) (void);
} GtkIconFactoryClass;
typedef struct _GtkTreeSelectionClass {
    GObjectClass parent_class;
    void (*changed) (GtkTreeSelection *);
    void (*_gtk_reserved1) (void);
    void (*_gtk_reserved2) (void);
    void (*_gtk_reserved3) (void);
    void (*_gtk_reserved4) (void);
} GtkTreeSelectionClass;
typedef struct _GtkMenuShellClass {
    GtkContainerClass parent_class;
    guint submenu_placement:1;
    void (*deactivate) (GtkMenuShell *);
    void (*selection_done) (GtkMenuShell *);
    void (*move_current) (GtkMenuShell *, GtkMenuDirectionType);
    void (*activate_current) (GtkMenuShell *, gboolean);
    void (*cancel) (GtkMenuShell *);
    void (*select_item) (GtkMenuShell *, GtkWidget *);
    void (*insert) (GtkMenuShell *, GtkWidget *, gint);
     gint(*get_popup_delay) (GtkMenuShell *);
     gboolean(*move_selected) (void);
    void (*_gtk_reserved2) (void);
    void (*_gtk_reserved3) (void);
} GtkMenuShellClass;
typedef struct _GtkTreeDragSourceIface {
    GTypeInterface g_iface;
     gboolean(*row_draggable) (GtkTreeDragSource *, GtkTreePath *);
     gboolean(*drag_data_get) (GtkTreeDragSource *, GtkTreePath *,
			       GtkSelectionData *);
     gboolean(*drag_data_delete) (GtkTreeDragSource *, GtkTreePath *);
} GtkTreeDragSourceIface;
typedef struct _GtkLabelClass {
    GtkMiscClass parent_class;
    void (*move_cursor) (GtkLabel *, GtkMovementStep, gint, gboolean);
    void (*copy_clipboard) (GtkLabel *);
    void (*populate_popup) (GtkLabel *, GtkMenu *);
     gboolean(*activate_link) (void);
    void (*_gtk_reserved2) (void);
    void (*_gtk_reserved3) (void);
    void (*_gtk_reserved4) (void);
} GtkLabelClass;
typedef struct _GtkScrollbar {
    GtkRange range;
} GtkScrollbar;
typedef struct _GtkWidgetShapeInfo {
    gint16 offset_x;
    gint16 offset_y;
    GdkBitmap *shape_mask;
} GtkWidgetShapeInfo;
typedef struct _GtkActionGroupClass {
    GObjectClass parent_class;
    GtkAction *(*get_action) (GtkActionGroup *, const gchar *);
    void (*_gtk_reserved1) (void);
    void (*_gtk_reserved2) (void);
    void (*_gtk_reserved3) (void);
    void (*_gtk_reserved4) (void);
} GtkActionGroupClass;
typedef struct _GtkSettingsClass {
    GObjectClass parent_class;
} GtkSettingsClass;
typedef struct _GtkIMContextClass {
    GtkObjectClass parent_class;
    void (*preedit_start) (GtkIMContext *);
    void (*preedit_end) (GtkIMContext *);
    void (*preedit_changed) (GtkIMContext *);
    void (*commit) (GtkIMContext *, const gchar *);
     gboolean(*retrieve_surrounding) (GtkIMContext *);
     gboolean(*delete_surrounding) (GtkIMContext *, gint, gint);
    void (*set_client_window) (GtkIMContext *, GdkWindow *);
    void (*get_preedit_string) (GtkIMContext *, gchar * *,
				PangoAttrList * *, gint *);
     gboolean(*filter_keypress) (GtkIMContext *, GdkEventKey *);
    void (*focus_in) (GtkIMContext *);
    void (*focus_out) (GtkIMContext *);
    void (*reset) (GtkIMContext *);
    void (*set_cursor_location) (GtkIMContext *, GdkRectangle *);
    void (*set_use_preedit) (GtkIMContext *, gboolean);
    void (*set_surrounding) (GtkIMContext *, const gchar *, gint, gint);
     gboolean(*get_surrounding) (GtkIMContext *, gchar * *, gint *);
    void (*_gtk_reserved1) (void);
    void (*_gtk_reserved2) (void);
    void (*_gtk_reserved3) (void);
    void (*_gtk_reserved4) (void);
    void (*_gtk_reserved5) (void);
    void (*_gtk_reserved6) (void);
} GtkIMContextClass;
typedef struct _GtkCellRendererClass {
    GtkObjectClass parent_class;
    void (*get_size) (GtkCellRenderer *, GtkWidget *, GdkRectangle *,
		      gint *, gint *, gint *, gint *);
    void (*render) (GtkCellRenderer *, GdkDrawable *, GtkWidget *,
		    GdkRectangle *, GdkRectangle *, GdkRectangle *,
		    GtkCellRendererState);
     gboolean(*activate) (GtkCellRenderer *, GdkEvent *, GtkWidget *,
			  const gchar *, GdkRectangle *, GdkRectangle *,
			  GtkCellRendererState);
    GtkCellEditable *(*start_editing) (GtkCellRenderer *, GdkEvent *,
				       GtkWidget *, const gchar *,
				       GdkRectangle *, GdkRectangle *,
				       GtkCellRendererState);
    void (*editing_canceled) (GtkCellRenderer *);
    void (*editing_started) (GtkCellRenderer *, GtkCellEditable *,
			     const gchar *);
    void (*_gtk_reserved1) (void);
    void (*_gtk_reserved2) (void);
} GtkCellRendererClass;
typedef struct _GtkToolButtonClass {
    GtkToolItemClass parent_class;
    GType button_type;
    void (*clicked) (GtkToolButton *);
    void (*_gtk_reserved1) (void);
    void (*_gtk_reserved2) (void);
    void (*_gtk_reserved3) (void);
    void (*_gtk_reserved4) (void);
} GtkToolButtonClass;
typedef struct _GtkMenuToolButtonClass {
    GtkToolButtonClass parent_class;
    void (*show_menu) (GtkMenuToolButton *);
    void (*_gtk_reserved1) (void);
    void (*_gtk_reserved2) (void);
    void (*_gtk_reserved3) (void);
    void (*_gtk_reserved4) (void);
} GtkMenuToolButtonClass;
typedef struct _GtkVSeparator {
    GtkSeparator separator;
} GtkVSeparator;
typedef struct _GtkDrawingAreaClass {
    GtkWidgetClass parent_class;
    void (*_gtk_reserved1) (void);
    void (*_gtk_reserved2) (void);
    void (*_gtk_reserved3) (void);
    void (*_gtk_reserved4) (void);
} GtkDrawingAreaClass;
typedef struct _GtkTargetPair {
    GdkAtom target;
    guint flags;
    guint info;
} GtkTargetPair;
typedef struct _GtkCellViewClass {
    GtkWidgetClass parent_class;
} GtkCellViewClass;
typedef struct _GtkCellLayoutIface {
    GTypeInterface g_iface;
    void (*pack_start) (GtkCellLayout *, GtkCellRenderer *, gboolean);
    void (*pack_end) (GtkCellLayout *, GtkCellRenderer *, gboolean);
    void (*clear) (GtkCellLayout *);
    void (*add_attribute) (GtkCellLayout *, GtkCellRenderer *,
			   const gchar *, gint);
    void (*set_cell_data_func) (GtkCellLayout *, GtkCellRenderer *,
				GtkCellLayoutDataFunc, gpointer,
				GDestroyNotify);
    void (*clear_attributes) (GtkCellLayout *, GtkCellRenderer *);
    void (*reorder) (GtkCellLayout *, GtkCellRenderer *, gint);
} GtkCellLayoutIface;
typedef struct _GtkAlignmentPrivate GtkAlignmentPrivate;
typedef struct _GtkFixedClass {
    GtkContainerClass parent_class;
} GtkFixedClass;
typedef struct _GtkHScaleClass {
    GtkScaleClass parent_class;
} GtkHScaleClass;
typedef struct _GtkScrollbarClass {
    GtkRangeClass parent_class;
    void (*_gtk_reserved1) (void);
    void (*_gtk_reserved2) (void);
    void (*_gtk_reserved3) (void);
    void (*_gtk_reserved4) (void);
} GtkScrollbarClass;
typedef struct _GtkAccelLabelClass {
    GtkLabelClass parent_class;
    gchar *signal_quote1;
    gchar *signal_quote2;
    gchar *mod_name_shift;
    gchar *mod_name_control;
    gchar *mod_name_alt;
    gchar *mod_separator;
    gchar *accel_seperator;
    guint latin1_to_char:1;
    void (*_gtk_reserved1) (void);
    void (*_gtk_reserved2) (void);
    void (*_gtk_reserved3) (void);
    void (*_gtk_reserved4) (void);
} GtkAccelLabelClass;
typedef void (*GtkModuleDisplayInitFunc) (GdkDisplay *);
typedef struct _GtkTextBufferClass {
    GObjectClass parent_class;
    void (*insert_text) (GtkTextBuffer *, GtkTextIter *, const gchar *,
			 gint);
    void (*insert_pixbuf) (GtkTextBuffer *, GtkTextIter *, GdkPixbuf *);
    void (*insert_child_anchor) (GtkTextBuffer *, GtkTextIter *,
				 GtkTextChildAnchor *);
    void (*delete_range) (GtkTextBuffer *, GtkTextIter *, GtkTextIter *);
    void (*changed) (GtkTextBuffer *);
    void (*modified_changed) (GtkTextBuffer *);
    void (*mark_set) (GtkTextBuffer *, const GtkTextIter *, GtkTextMark *);
    void (*mark_deleted) (GtkTextBuffer *, GtkTextMark *);
    void (*apply_tag) (GtkTextBuffer *, GtkTextTag *, const GtkTextIter *,
		       const GtkTextIter *);
    void (*remove_tag) (GtkTextBuffer *, GtkTextTag *, const GtkTextIter *,
			const GtkTextIter *);
    void (*begin_user_action) (GtkTextBuffer *);
    void (*end_user_action) (GtkTextBuffer *);
    void (*paste_done) (void);
    void (*_gtk_reserved2) (void);
    void (*_gtk_reserved3) (void);
    void (*_gtk_reserved4) (void);
    void (*_gtk_reserved5) (void);
    void (*_gtk_reserved6) (void);
} GtkTextBufferClass;
typedef struct _GtkVRuler {
    GtkRuler ruler;
} GtkVRuler;
typedef struct _GtkSocketClass {
    GtkContainerClass parent_class;
    void (*plug_added) (GtkSocket *);
     gboolean(*plug_removed) (GtkSocket *);
    void (*_gtk_reserved1) (void);
    void (*_gtk_reserved2) (void);
    void (*_gtk_reserved3) (void);
    void (*_gtk_reserved4) (void);
} GtkSocketClass;
typedef struct _GtkIconThemeClass {
    GObjectClass parent_class;
    void (*changed) (GtkIconTheme *);
} GtkIconThemeClass;
typedef struct _GtkVPaned {
    GtkPaned paned;
} GtkVPaned;
typedef struct _GtkTableChild {
    GtkWidget *widget;
    guint16 left_attach;
    guint16 right_attach;
    guint16 top_attach;
    guint16 bottom_attach;
    guint16 xpadding;
    guint16 ypadding;
    guint xexpand:1;
    guint yexpand:1;
    guint xshrink:1;
    guint yshrink:1;
    guint xfill:1;
    guint yfill:1;
} GtkTableChild;
typedef struct _GtkArrowClass {
    GtkMiscClass parent_class;
} GtkArrowClass;
typedef struct _GtkHScrollbar {
    GtkScrollbar scrollbar;
} GtkHScrollbar;
typedef struct _GtkFileChooserWidgetPrivate GtkFileChooserWidgetPrivate;
typedef struct _GtkFileChooserWidget {
    GtkVBox parent_instance;
    GtkFileChooserWidgetPrivate *priv;
} GtkFileChooserWidget;
typedef struct _GtkPlugClass {
    GtkWindowClass parent_class;
    void (*embedded) (GtkPlug *);
    void (*_gtk_reserved1) (void);
    void (*_gtk_reserved2) (void);
    void (*_gtk_reserved3) (void);
    void (*_gtk_reserved4) (void);
} GtkPlugClass;
typedef struct _GtkCellRendererPixbufClass {
    GtkCellRendererClass parent_class;
    void (*_gtk_reserved1) (void);
    void (*_gtk_reserved2) (void);
    void (*_gtk_reserved3) (void);
    void (*_gtk_reserved4) (void);
} GtkCellRendererPixbufClass;
typedef struct _GtkVButtonBoxClass {
    GtkButtonBoxClass parent_class;
} GtkVButtonBoxClass;
typedef struct _GtkTextChildAnchorClass {
    GObjectClass parent_class;
    void (*_gtk_reserved1) (void);
    void (*_gtk_reserved2) (void);
    void (*_gtk_reserved3) (void);
    void (*_gtk_reserved4) (void);
} GtkTextChildAnchorClass;
typedef struct _GtkCellRendererCombo {
    GtkCellRendererText parent;
    GtkTreeModel *model;
    gint text_column;
    gboolean has_entry;
    guint focus_out_id;
} GtkCellRendererCombo;
typedef struct _GtkTreeModelIface {
    GTypeInterface g_iface;
    void (*row_changed) (GtkTreeModel *, GtkTreePath *, GtkTreeIter *);
    void (*row_inserted) (GtkTreeModel *, GtkTreePath *, GtkTreeIter *);
    void (*row_has_child_toggled) (GtkTreeModel *, GtkTreePath *,
				   GtkTreeIter *);
    void (*row_deleted) (GtkTreeModel *, GtkTreePath *);
    void (*rows_reordered) (GtkTreeModel *, GtkTreePath *, GtkTreeIter *,
			    gint *);
     GtkTreeModelFlags(*get_flags) (GtkTreeModel *);
     gint(*get_n_columns) (GtkTreeModel *);
     GType(*get_column_type) (GtkTreeModel *, gint);
     gboolean(*get_iter) (GtkTreeModel *, GtkTreeIter *, GtkTreePath *);
    GtkTreePath *(*get_path) (GtkTreeModel *, GtkTreeIter *);
    void (*get_value) (GtkTreeModel *, GtkTreeIter *, gint, GValue *);
     gboolean(*iter_next) (GtkTreeModel *, GtkTreeIter *);
     gboolean(*iter_children) (GtkTreeModel *, GtkTreeIter *,
			       GtkTreeIter *);
     gboolean(*iter_has_child) (GtkTreeModel *, GtkTreeIter *);
     gint(*iter_n_children) (GtkTreeModel *, GtkTreeIter *);
     gboolean(*iter_nth_child) (GtkTreeModel *, GtkTreeIter *,
				GtkTreeIter *, gint);
     gboolean(*iter_parent) (GtkTreeModel *, GtkTreeIter *, GtkTreeIter *);
    void (*ref_node) (GtkTreeModel *, GtkTreeIter *);
    void (*unref_node) (GtkTreeModel *, GtkTreeIter *);
} GtkTreeModelIface;
typedef struct _GtkAccessibleClass {
    AtkObjectClass parent_class;
    void (*connect_widget_destroyed) (GtkAccessible *);
    void (*_gtk_reserved1) (void);
    void (*_gtk_reserved2) (void);
    void (*_gtk_reserved3) (void);
    void (*_gtk_reserved4) (void);
} GtkAccessibleClass;
typedef struct _GtkCellRendererTextClass {
    GtkCellRendererClass parent_class;
    void (*edited) (GtkCellRendererText *, const gchar *, const gchar *);
    void (*_gtk_reserved1) (void);
    void (*_gtk_reserved2) (void);
    void (*_gtk_reserved3) (void);
    void (*_gtk_reserved4) (void);
} GtkCellRendererTextClass;
typedef struct _GtkVScaleClass {
    GtkScaleClass parent_class;
} GtkVScaleClass;
typedef struct _GtkCurveClass {
    GtkDrawingAreaClass parent_class;
    void (*curve_type_changed) (GtkCurve *);
    void (*_gtk_reserved1) (void);
    void (*_gtk_reserved2) (void);
    void (*_gtk_reserved3) (void);
    void (*_gtk_reserved4) (void);
} GtkCurveClass;
typedef struct _GtkSeparatorToolItemClass {
    GtkToolItemClass parent_class;
    void (*_gtk_reserved1) (void);
    void (*_gtk_reserved2) (void);
    void (*_gtk_reserved3) (void);
    void (*_gtk_reserved4) (void);
} GtkSeparatorToolItemClass;
typedef struct _GtkStyleClass {
    GObjectClass parent_class;
    void (*realize) (GtkStyle *);
    void (*unrealize) (GtkStyle *);
    void (*copy) (GtkStyle *, GtkStyle *);
    GtkStyle *(*clone) (GtkStyle *);
    void (*init_from_rc) (GtkStyle *, GtkRcStyle *);
    void (*set_background) (GtkStyle *, GdkWindow *, GtkStateType);
    GdkPixbuf *(*render_icon) (GtkStyle *, const GtkIconSource *,
			       GtkTextDirection, GtkStateType, GtkIconSize,
			       GtkWidget *, const gchar *);
    void (*draw_hline) (GtkStyle *, GdkWindow *, GtkStateType,
			GdkRectangle *, GtkWidget *, const gchar *, gint,
			gint, gint);
    void (*draw_vline) (GtkStyle *, GdkWindow *, GtkStateType,
			GdkRectangle *, GtkWidget *, const gchar *, gint,
			gint, gint);
    void (*draw_shadow) (GtkStyle *, GdkWindow *, GtkStateType,
			 GtkShadowType, GdkRectangle *, GtkWidget *,
			 const gchar *, gint, gint, gint, gint);
    void (*draw_polygon) (GtkStyle *, GdkWindow *, GtkStateType,
			  GtkShadowType, GdkRectangle *, GtkWidget *,
			  const gchar *, GdkPoint *, gint, gboolean);
    void (*draw_arrow) (GtkStyle *, GdkWindow *, GtkStateType,
			GtkShadowType, GdkRectangle *, GtkWidget *,
			const gchar *, GtkArrowType, gboolean, gint, gint,
			gint, gint);
    void (*draw_diamond) (GtkStyle *, GdkWindow *, GtkStateType,
			  GtkShadowType, GdkRectangle *, GtkWidget *,
			  const gchar *, gint, gint, gint, gint);
    void (*draw_string) (GtkStyle *, GdkWindow *, GtkStateType,
			 GdkRectangle *, GtkWidget *, const gchar *, gint,
			 gint, const gchar *);
    void (*draw_box) (GtkStyle *, GdkWindow *, GtkStateType, GtkShadowType,
		      GdkRectangle *, GtkWidget *, const gchar *, gint,
		      gint, gint, gint);
    void (*draw_flat_box) (GtkStyle *, GdkWindow *, GtkStateType,
			   GtkShadowType, GdkRectangle *, GtkWidget *,
			   const gchar *, gint, gint, gint, gint);
    void (*draw_check) (GtkStyle *, GdkWindow *, GtkStateType,
			GtkShadowType, GdkRectangle *, GtkWidget *,
			const gchar *, gint, gint, gint, gint);
    void (*draw_option) (GtkStyle *, GdkWindow *, GtkStateType,
			 GtkShadowType, GdkRectangle *, GtkWidget *,
			 const gchar *, gint, gint, gint, gint);
    void (*draw_tab) (GtkStyle *, GdkWindow *, GtkStateType, GtkShadowType,
		      GdkRectangle *, GtkWidget *, const gchar *, gint,
		      gint, gint, gint);
    void (*draw_shadow_gap) (GtkStyle *, GdkWindow *, GtkStateType,
			     GtkShadowType, GdkRectangle *, GtkWidget *,
			     const gchar *, gint, gint, gint, gint,
			     GtkPositionType, gint, gint);
    void (*draw_box_gap) (GtkStyle *, GdkWindow *, GtkStateType,
			  GtkShadowType, GdkRectangle *, GtkWidget *,
			  const gchar *, gint, gint, gint, gint,
			  GtkPositionType, gint, gint);
    void (*draw_extension) (GtkStyle *, GdkWindow *, GtkStateType,
			    GtkShadowType, GdkRectangle *, GtkWidget *,
			    const gchar *, gint, gint, gint, gint,
			    GtkPositionType);
    void (*draw_focus) (GtkStyle *, GdkWindow *, GtkStateType,
			GdkRectangle *, GtkWidget *, const gchar *, gint,
			gint, gint, gint);
    void (*draw_slider) (GtkStyle *, GdkWindow *, GtkStateType,
			 GtkShadowType, GdkRectangle *, GtkWidget *,
			 const gchar *, gint, gint, gint, gint,
			 GtkOrientation);
    void (*draw_handle) (GtkStyle *, GdkWindow *, GtkStateType,
			 GtkShadowType, GdkRectangle *, GtkWidget *,
			 const gchar *, gint, gint, gint, gint,
			 GtkOrientation);
    void (*draw_expander) (GtkStyle *, GdkWindow *, GtkStateType,
			   GdkRectangle *, GtkWidget *, const gchar *,
			   gint, gint, GtkExpanderStyle);
    void (*draw_layout) (GtkStyle *, GdkWindow *, GtkStateType, gboolean,
			 GdkRectangle *, GtkWidget *, const gchar *, gint,
			 gint, PangoLayout *);
    void (*draw_resize_grip) (GtkStyle *, GdkWindow *, GtkStateType,
			      GdkRectangle *, GtkWidget *, const gchar *,
			      GdkWindowEdge, gint, gint, gint, gint);
    void (*get_text_area_size) (void);
    void (*_gtk_reserved2) (void);
    void (*_gtk_reserved3) (void);
    void (*_gtk_reserved4) (void);
    void (*_gtk_reserved5) (void);
    void (*_gtk_reserved6) (void);
    void (*_gtk_reserved7) (void);
    void (*_gtk_reserved8) (void);
    void (*_gtk_reserved9) (void);
    void (*_gtk_reserved10) (void);
    void (*_gtk_reserved11) (void);
    void (*_gtk_reserved12) (void);
} GtkStyleClass;
typedef struct _GtkSeparatorMenuItemClass {
    GtkMenuItemClass parent_class;
} GtkSeparatorMenuItemClass;
typedef struct _GtkIMMulticontextClass {
    GtkIMContextClass parent_class;
    void (*_gtk_reserved1) (void);
    void (*_gtk_reserved2) (void);
    void (*_gtk_reserved3) (void);
    void (*_gtk_reserved4) (void);
} GtkIMMulticontextClass;
typedef struct _GtkToggleToolButtonClass {
    GtkToolButtonClass parent_class;
    void (*toggled) (GtkToggleToolButton *);
    void (*_gtk_reserved1) (void);
    void (*_gtk_reserved2) (void);
    void (*_gtk_reserved3) (void);
    void (*_gtk_reserved4) (void);
} GtkToggleToolButtonClass;
typedef struct _GtkRadioToolButtonClass {
    GtkToggleToolButtonClass parent_class;
    void (*_gtk_reserved1) (void);
    void (*_gtk_reserved2) (void);
    void (*_gtk_reserved3) (void);
    void (*_gtk_reserved4) (void);
} GtkRadioToolButtonClass;
typedef struct _GtkCellRendererProgressClass {
    GtkCellRendererClass parent_class;
    void (*_gtk_reserved1) (void);
    void (*_gtk_reserved2) (void);
    void (*_gtk_reserved3) (void);
    void (*_gtk_reserved4) (void);
} GtkCellRendererProgressClass;
typedef struct _GtkVScrollbar {
    GtkScrollbar scrollbar;
} GtkVScrollbar;
typedef struct _GtkVPanedClass {
    GtkPanedClass parent_class;
} GtkVPanedClass;
typedef struct _GtkToggleButtonClass {
    GtkButtonClass parent_class;
    void (*toggled) (GtkToggleButton *);
    void (*_gtk_reserved1) (void);
    void (*_gtk_reserved2) (void);
    void (*_gtk_reserved3) (void);
    void (*_gtk_reserved4) (void);
} GtkToggleButtonClass;
typedef struct _GtkCellRendererToggleClass {
    GtkCellRendererClass parent_class;
    void (*toggled) (GtkCellRendererToggle *, const gchar *);
    void (*_gtk_reserved1) (void);
    void (*_gtk_reserved2) (void);
    void (*_gtk_reserved3) (void);
    void (*_gtk_reserved4) (void);
} GtkCellRendererToggleClass;
typedef struct _GtkVButtonBox {
    GtkButtonBox button_box;
} GtkVButtonBox;
typedef struct _GtkTreeDragDestIface {
    GTypeInterface g_iface;
     gboolean(*drag_data_received) (GtkTreeDragDest *, GtkTreePath *,
				    GtkSelectionData *);
     gboolean(*row_drop_possible) (GtkTreeDragDest *, GtkTreePath *,
				   GtkSelectionData *);
} GtkTreeDragDestIface;
typedef struct _GtkColorSelectionClass {
    GtkVBoxClass parent_class;
    void (*color_changed) (GtkColorSelection *);
    void (*_gtk_reserved1) (void);
    void (*_gtk_reserved2) (void);
    void (*_gtk_reserved3) (void);
    void (*_gtk_reserved4) (void);
} GtkColorSelectionClass;
typedef struct _GtkCellRendererProgressPrivate
    GtkCellRendererProgressPrivate;
typedef struct _GtkCellRendererProgress {
    GtkCellRenderer parent_instance;
    GtkCellRendererProgressPrivate *priv;
} GtkCellRendererProgress;
typedef struct _GtkImageClass {
    GtkMiscClass parent_class;
    void (*_gtk_reserved1) (void);
    void (*_gtk_reserved2) (void);
    void (*_gtk_reserved3) (void);
    void (*_gtk_reserved4) (void);
} GtkImageClass;
typedef struct _GtkMessageDialogClass {
    GtkDialogClass parent_class;
    void (*_gtk_reserved1) (void);
    void (*_gtk_reserved2) (void);
    void (*_gtk_reserved3) (void);
    void (*_gtk_reserved4) (void);
} GtkMessageDialogClass;
typedef struct _GtkTreeSortableIface {
    GTypeInterface g_iface;
    void (*sort_column_changed) (GtkTreeSortable *);
     gboolean(*get_sort_column_id) (GtkTreeSortable *, gint *,
				    GtkSortType *);
    void (*set_sort_column_id) (GtkTreeSortable *, gint, GtkSortType);
    void (*set_sort_func) (GtkTreeSortable *, gint, GtkTreeIterCompareFunc,
			   gpointer, GtkDestroyNotify);
    void (*set_default_sort_func) (GtkTreeSortable *,
				   GtkTreeIterCompareFunc, gpointer,
				   GtkDestroyNotify);
     gboolean(*has_default_sort_func) (GtkTreeSortable *);
} GtkTreeSortableIface;
typedef struct _GtkCalendarClass {
    GtkWidgetClass parent_class;
    void (*month_changed) (GtkCalendar *);
    void (*day_selected) (GtkCalendar *);
    void (*day_selected_double_click) (GtkCalendar *);
    void (*prev_month) (GtkCalendar *);
    void (*next_month) (GtkCalendar *);
    void (*prev_year) (GtkCalendar *);
    void (*next_year) (GtkCalendar *);
} GtkCalendarClass;
typedef struct _GtkEntryClass {
    GtkWidgetClass parent_class;
    void (*populate_popup) (GtkEntry *, GtkMenu *);
    void (*activate) (GtkEntry *);
    void (*move_cursor) (GtkEntry *, GtkMovementStep, gint, gboolean);
    void (*insert_at_cursor) (GtkEntry *, const gchar *);
    void (*delete_from_cursor) (GtkEntry *, GtkDeleteType, gint);
    void (*backspace) (GtkEntry *);
    void (*cut_clipboard) (GtkEntry *);
    void (*copy_clipboard) (GtkEntry *);
    void (*paste_clipboard) (GtkEntry *);
    void (*toggle_overwrite) (GtkEntry *);
    void (*get_text_area_size) (void);
    void (*_gtk_reserved2) (void);
    void (*_gtk_reserved3) (void);
} GtkEntryClass;
typedef struct _GtkSpinButtonClass {
    GtkEntryClass parent_class;
     gint(*input) (GtkSpinButton *, gdouble *);
     gint(*output) (GtkSpinButton *);
    void (*value_changed) (GtkSpinButton *);
    void (*change_value) (GtkSpinButton *, GtkScrollType);
    void (*cursor_on_match) (GtkSpinButton *);
    void (*_gtk_reserved2) (void);
    void (*_gtk_reserved3) (void);
    void (*_gtk_reserved4) (void);
} GtkSpinButtonClass;
typedef struct _GtkInputDialog {
    GtkDialog dialog;
    GtkWidget *axis_list;
    GtkWidget *axis_listbox;
    GtkWidget *mode_optionmenu;
    GtkWidget *close_button;
    GtkWidget *save_button;
    GtkWidget *axis_items[7];
    GdkDevice *current_device;
    GtkWidget *keys_list;
    GtkWidget *keys_listbox;
} GtkInputDialog;
typedef struct _GtkInputDialogClass {
    GtkDialogClass parent_class;
    void (*enable_device) (GtkInputDialog *, GdkDevice *);
    void (*disable_device) (GtkInputDialog *, GdkDevice *);
    void (*_gtk_reserved1) (void);
    void (*_gtk_reserved2) (void);
    void (*_gtk_reserved3) (void);
    void (*_gtk_reserved4) (void);
} GtkInputDialogClass;
typedef struct _GtkEntryCompletionClass {
    GObjectClass parent_class;
     gboolean(*match_selected) (GtkEntryCompletion *, GtkTreeModel *,
				GtkTreeIter *);
    void (*action_activated) (GtkEntryCompletion *, gint);
     gboolean(*insert_prefix) (GtkEntryCompletion *, const gchar *);
     gboolean(*cursor_on_match) (GtkEntryCompletion *, GtkTreeModel *,
				 GtkTreeIter *);
    void (*_gtk_reserved1) (void);
    void (*_gtk_reserved2) (void);
} GtkEntryCompletionClass;
typedef struct _GtkAlignmentClass {
    GtkBinClass parent_class;
} GtkAlignmentClass;
typedef struct _GtkTreeModelFilterClass {
    GObjectClass parent_class;
    void (*_gtk_reserved0) (void);
    void (*_gtk_reserved1) (void);
    void (*_gtk_reserved2) (void);
    void (*_gtk_reserved3) (void);
} GtkTreeModelFilterClass;
typedef struct _GtkRcStyleClass {
    GObjectClass parent_class;
    GtkRcStyle *(*create_rc_style) (GtkRcStyle *);
     guint(*parse) (GtkRcStyle *, GtkSettings *, GScanner *);
    void (*merge) (GtkRcStyle *, GtkRcStyle *);
    GtkStyle *(*create_style) (GtkRcStyle *);
    void (*_gtk_reserved1) (void);
    void (*_gtk_reserved2) (void);
    void (*_gtk_reserved3) (void);
    void (*_gtk_reserved4) (void);
} GtkRcStyleClass;
typedef struct _GtkUIManagerClass {
    GObjectClass parent_class;
    void (*add_widget) (GtkUIManager *, GtkWidget *);
    void (*actions_changed) (GtkUIManager *);
    void (*connect_proxy) (GtkUIManager *, GtkAction *, GtkWidget *);
    void (*disconnect_proxy) (GtkUIManager *, GtkAction *, GtkWidget *);
    void (*pre_activate) (GtkUIManager *, GtkAction *);
    void (*post_activate) (GtkUIManager *, GtkAction *);
    GtkWidget *(*get_widget) (GtkUIManager *, const gchar *);
    GtkAction *(*get_action) (GtkUIManager *, const gchar *);
    void (*_gtk_reserved1) (void);
    void (*_gtk_reserved2) (void);
} GtkUIManagerClass;
typedef struct _GtkSeparatorClass {
    GtkWidgetClass parent_class;
} GtkSeparatorClass;
typedef struct _GtkVSeparatorClass {
    GtkSeparatorClass parent_class;
} GtkVSeparatorClass;
typedef struct _GtkCheckButtonClass {
    GtkToggleButtonClass parent_class;
    void (*draw_indicator) (GtkCheckButton *, GdkRectangle *);
    void (*_gtk_reserved1) (void);
    void (*_gtk_reserved2) (void);
    void (*_gtk_reserved3) (void);
    void (*_gtk_reserved4) (void);
} GtkCheckButtonClass;
typedef struct _GtkRadioMenuItemClass {
    GtkCheckMenuItemClass parent_class;
    void (*group_changed) (GtkRadioMenuItem *);
    void (*_gtk_reserved2) (void);
    void (*_gtk_reserved3) (void);
    void (*_gtk_reserved4) (void);
} GtkRadioMenuItemClass;
typedef struct _GtkTextViewClass {
    GtkContainerClass parent_class;
    void (*set_scroll_adjustments) (GtkTextView *, GtkAdjustment *,
				    GtkAdjustment *);
    void (*populate_popup) (GtkTextView *, GtkMenu *);
    void (*move_cursor) (GtkTextView *, GtkMovementStep, gint, gboolean);
    void (*page_horizontally) (GtkTextView *, gint, gboolean);
    void (*set_anchor) (GtkTextView *);
    void (*insert_at_cursor) (GtkTextView *, const gchar *);
    void (*delete_from_cursor) (GtkTextView *, GtkDeleteType, gint);
    void (*backspace) (GtkTextView *);
    void (*cut_clipboard) (GtkTextView *);
    void (*copy_clipboard) (GtkTextView *);
    void (*paste_clipboard) (GtkTextView *);
    void (*toggle_overwrite) (GtkTextView *);
    void (*move_focus) (GtkTextView *, GtkDirectionType);
    void (*_gtk_reserved1) (void);
    void (*_gtk_reserved2) (void);
    void (*_gtk_reserved3) (void);
    void (*_gtk_reserved4) (void);
    void (*_gtk_reserved5) (void);
    void (*_gtk_reserved6) (void);
    void (*_gtk_reserved7) (void);
} GtkTextViewClass;
typedef void (*GtkColorSelectionChangePaletteFunc) (const GdkColor *,
						    gint);
typedef struct _GtkTreeModelSortClass {
    GObjectClass parent_class;
    void (*_gtk_reserved1) (void);
    void (*_gtk_reserved2) (void);
    void (*_gtk_reserved3) (void);
    void (*_gtk_reserved4) (void);
} GtkTreeModelSortClass;
typedef struct _GtkCellEditableIface {
    GTypeInterface g_iface;
    void (*editing_done) (GtkCellEditable *);
    void (*remove_widget) (GtkCellEditable *);
    void (*start_editing) (GtkCellEditable *, GdkEvent *);
} GtkCellEditableIface;
typedef struct _GtkToolbarClass {
    GtkContainerClass parent_class;
    void (*orientation_changed) (GtkToolbar *, GtkOrientation);
    void (*style_changed) (GtkToolbar *, GtkToolbarStyle);
     gboolean(*popup_context_menu) (GtkToolbar *, gint, gint, gint);
    void (*_gtk_reserved1) (void);
    void (*_gtk_reserved2) (void);
    void (*_gtk_reserved3) (void);
} GtkToolbarClass;
typedef struct _GtkHandleBoxClass {
    GtkBinClass parent_class;
    void (*child_attached) (GtkHandleBox *, GtkWidget *);
    void (*child_detached) (GtkHandleBox *, GtkWidget *);
    void (*_gtk_reserved1) (void);
    void (*_gtk_reserved2) (void);
    void (*_gtk_reserved3) (void);
    void (*_gtk_reserved4) (void);
} GtkHandleBoxClass;
typedef struct _GtkHSeparator {
    GtkSeparator separator;
} GtkHSeparator;
typedef struct _GtkTextTagTableClass {
    GObjectClass parent_class;
    void (*tag_changed) (GtkTextTagTable *, GtkTextTag *, gboolean);
    void (*tag_added) (GtkTextTagTable *, GtkTextTag *);
    void (*tag_removed) (GtkTextTagTable *, GtkTextTag *);
    void (*_gtk_reserved1) (void);
    void (*_gtk_reserved2) (void);
    void (*_gtk_reserved3) (void);
    void (*_gtk_reserved4) (void);
} GtkTextTagTableClass;
typedef struct _GtkComboBoxClass {
    GtkBinClass parent_class;
    void (*changed) (GtkComboBox *);
    gchar *(*get_active_text) (GtkComboBox *);
    void (*_gtk_reserved0) (void);
    void (*_gtk_reserved1) (void);
    void (*_gtk_reserved2) (void);
} GtkComboBoxClass;
typedef struct _GtkComboBoxEntryClass {
    GtkComboBoxClass parent_class;
    void (*_gtk_reserved0) (void);
    void (*_gtk_reserved1) (void);
    void (*_gtk_reserved2) (void);
    void (*_gtk_reserved3) (void);
} GtkComboBoxEntryClass;
typedef struct _GtkFontSelectionClass {
    GtkVBoxClass parent_class;
    void (*_gtk_reserved1) (void);
    void (*_gtk_reserved2) (void);
    void (*_gtk_reserved3) (void);
    void (*_gtk_reserved4) (void);
} GtkFontSelectionClass;
typedef struct _GtkFrameClass {
    GtkBinClass parent_class;
    void (*compute_child_allocation) (GtkFrame *, GtkAllocation *);
} GtkFrameClass;
typedef struct _GtkHScrollbarClass {
    GtkScrollbarClass parent_class;
} GtkHScrollbarClass;
typedef struct _GtkFileSelectionClass {
    GtkDialogClass parent_class;
    void (*_gtk_reserved1) (void);
    void (*_gtk_reserved2) (void);
    void (*_gtk_reserved3) (void);
    void (*_gtk_reserved4) (void);
} GtkFileSelectionClass;
typedef struct _GtkScrolledWindowClass {
    GtkBinClass parent_class;
    gint scrollbar_spacing;
    void (*scroll_child) (GtkScrolledWindow *, GtkScrollType, gboolean);
    void (*move_focus_out) (GtkScrolledWindow *, GtkDirectionType);
    void (*_gtk_reserved1) (void);
    void (*_gtk_reserved2) (void);
    void (*_gtk_reserved3) (void);
    void (*_gtk_reserved4) (void);
} GtkScrolledWindowClass;
typedef struct _GtkTextMarkClass {
    GObjectClass parent_class;
    void (*_gtk_reserved1) (void);
    void (*_gtk_reserved2) (void);
    void (*_gtk_reserved3) (void);
    void (*_gtk_reserved4) (void);
} GtkTextMarkClass;
typedef struct _GtkToolbarPrivate GtkToolbarPrivate;
typedef struct _GtkVScale {
    GtkScale scale;
} GtkVScale;
typedef struct _GtkFixedChild {
    GtkWidget *widget;
    gint x;
    gint y;
} GtkFixedChild;
typedef struct _GtkLayoutClass {
    GtkContainerClass parent_class;
    void (*set_scroll_adjustments) (GtkLayout *, GtkAdjustment *,
				    GtkAdjustment *);
    void (*_gtk_reserved1) (void);
    void (*_gtk_reserved2) (void);
    void (*_gtk_reserved3) (void);
    void (*_gtk_reserved4) (void);
} GtkLayoutClass;
typedef struct _GtkEventBoxClass {
    GtkBinClass parent_class;
} GtkEventBoxClass;
typedef struct _GtkIMContextSimpleClass {
    GtkIMContextClass parent_class;
} GtkIMContextSimpleClass;
typedef struct _GtkExpanderClass {
    GtkBinClass parent_class;
    void (*activate) (GtkExpander *);
} GtkExpanderClass;
typedef struct _GtkProgressClass {
    GtkWidgetClass parent_class;
    void (*paint) (GtkProgress *);
    void (*update) (GtkProgress *);
    void (*act_mode_enter) (GtkProgress *);
    void (*_gtk_reserved1) (void);
    void (*_gtk_reserved2) (void);
    void (*_gtk_reserved3) (void);
    void (*_gtk_reserved4) (void);
} GtkProgressClass;
typedef void (*GtkModuleInitFunc) (gint *, gchar * **);
typedef struct _GtkFileChooserDialogClass {
    GtkDialogClass parent_class;
} GtkFileChooserDialogClass;
typedef struct _GtkVScrollbarClass {
    GtkScrollbarClass parent_class;
} GtkVScrollbarClass;
typedef struct _GtkTableClass {
    GtkContainerClass parent_class;
} GtkTableClass;
typedef struct _GtkFontButtonClass {
    GtkButtonClass parent_class;
    void (*font_set) (GtkFontButton *);
    void (*_gtk_reserved1) (void);
    void (*_gtk_reserved2) (void);
    void (*_gtk_reserved3) (void);
    void (*_gtk_reserved4) (void);
} GtkFontButtonClass;
typedef struct _GtkHSeparatorClass {
    GtkSeparatorClass parent_class;
} GtkHSeparatorClass;
typedef struct _GtkColorSelectionDialogClass {
    GtkDialogClass parent_class;
    void (*_gtk_reserved1) (void);
    void (*_gtk_reserved2) (void);
    void (*_gtk_reserved3) (void);
    void (*_gtk_reserved4) (void);
} GtkColorSelectionDialogClass;
typedef struct _GtkColorButtonClass {
    GtkButtonClass parent_class;
    void (*color_set) (GtkColorButton *);
    void (*_gtk_reserved1) (void);
    void (*_gtk_reserved2) (void);
    void (*_gtk_reserved3) (void);
    void (*_gtk_reserved4) (void);
} GtkColorButtonClass;
typedef struct _GtkMenuBar {
    GtkMenuShell menu_shell;
} GtkMenuBar;
typedef struct _GtkMenuBarClass {
    GtkMenuShellClass parent_class;
    void (*_gtk_reserved1) (void);
    void (*_gtk_reserved2) (void);
    void (*_gtk_reserved3) (void);
    void (*_gtk_reserved4) (void);
} GtkMenuBarClass;
typedef struct _GtkColorSelectionDialog {
    GtkDialog parent_instance;
    GtkWidget *colorsel;
    GtkWidget *ok_button;
    GtkWidget *cancel_button;
    GtkWidget *help_button;
} GtkColorSelectionDialog;
typedef struct _GtkStatusbarClass {
    GtkHBoxClass parent_class;
    gpointer reserved;
    void (*text_pushed) (GtkStatusbar *, guint, const gchar *);
    void (*text_popped) (GtkStatusbar *, guint, const gchar *);
    void (*_gtk_reserved1) (void);
    void (*_gtk_reserved2) (void);
    void (*_gtk_reserved3) (void);
    void (*_gtk_reserved4) (void);
} GtkStatusbarClass;
typedef struct _GtkSeparatorMenuItem {
    GtkMenuItem menu_item;
} GtkSeparatorMenuItem;
typedef struct _GtkAboutDialogClass {
    GtkDialogClass parent_class;
     gboolean(*activate_link) (void);
    void (*_gtk_reserved2) (void);
    void (*_gtk_reserved3) (void);
    void (*_gtk_reserved4) (void);
} GtkAboutDialogClass;
typedef struct _GtkListStoreClass {
    GObjectClass parent_class;
    void (*_gtk_reserved1) (void);
    void (*_gtk_reserved2) (void);
    void (*_gtk_reserved3) (void);
    void (*_gtk_reserved4) (void);
} GtkListStoreClass;
typedef struct _GtkFileChooserButtonClass {
    GtkHBoxClass parent_class;
    void (*file_set) (void);
    void *__gtk_reserved2;
    void *__gtk_reserved3;
    void *__gtk_reserved4;
    void *__gtk_reserved5;
    void *__gtk_reserved6;
    void *__gtk_reserved7;
    void *__gtk_reserved8;
} GtkFileChooserButtonClass;
typedef enum {
    GTK_TOOLBAR_SPACE_EMPTY = 0,
    GTK_TOOLBAR_SPACE_LINE = 1
} GtkToolbarSpaceStyle;
typedef struct _GtkMenuClass {
    GtkMenuShellClass parent_class;
    void (*_gtk_reserved1) (void);
    void (*_gtk_reserved2) (void);
    void (*_gtk_reserved3) (void);
    void (*_gtk_reserved4) (void);
} GtkMenuClass;
typedef struct _GtkHScale {
    GtkScale scale;
} GtkHScale;
typedef struct _GtkGammaCurveClass {
    GtkVBoxClass parent_class;
    void (*_gtk_reserved1) (void);
    void (*_gtk_reserved2) (void);
    void (*_gtk_reserved3) (void);
    void (*_gtk_reserved4) (void);
} GtkGammaCurveClass;
typedef struct _GtkCellRendererComboClass {
    GtkCellRendererTextClass parent;
} GtkCellRendererComboClass;
typedef struct _GtkTearoffMenuItem {
    GtkMenuItem menu_item;
    guint torn_off:1;
} GtkTearoffMenuItem;
typedef struct _GtkNotebookClass {
    GtkContainerClass parent_class;
    void (*switch_page) (GtkNotebook *, GtkNotebookPage *, guint);
     gboolean(*select_page) (GtkNotebook *, gboolean);
     gboolean(*focus_tab) (GtkNotebook *, GtkNotebookTab);
    void (*change_current_page) (GtkNotebook *, gint);
    void (*move_focus_out) (GtkNotebook *, GtkDirectionType);
     gboolean(*reorder_tab) (void);
     gint(*insert_page) (void);
    GtkNotebook *(*create_window) (void);
    void (*_gtk_reserved4) (void);
} GtkNotebookClass;
typedef struct _GtkImageMenuItemClass {
    GtkMenuItemClass parent_class;
} GtkImageMenuItemClass;
typedef struct _GtkTooltipsClass {
    GtkObjectClass parent_class;
    void (*_gtk_reserved1) (void);
    void (*_gtk_reserved2) (void);
    void (*_gtk_reserved3) (void);
    void (*_gtk_reserved4) (void);
} GtkTooltipsClass;
typedef struct _GtkTreeViewClass {
    GtkContainerClass parent_class;
    void (*set_scroll_adjustments) (GtkTreeView *, GtkAdjustment *,
				    GtkAdjustment *);
    void (*row_activated) (GtkTreeView *, GtkTreePath *,
			   GtkTreeViewColumn *);
     gboolean(*test_expand_row) (GtkTreeView *, GtkTreeIter *,
				 GtkTreePath *);
     gboolean(*test_collapse_row) (GtkTreeView *, GtkTreeIter *,
				   GtkTreePath *);
    void (*row_expanded) (GtkTreeView *, GtkTreeIter *, GtkTreePath *);
    void (*row_collapsed) (GtkTreeView *, GtkTreeIter *, GtkTreePath *);
    void (*columns_changed) (GtkTreeView *);
    void (*cursor_changed) (GtkTreeView *);
     gboolean(*move_cursor) (GtkTreeView *, GtkMovementStep, gint);
     gboolean(*select_all) (GtkTreeView *);
     gboolean(*unselect_all) (GtkTreeView *);
     gboolean(*select_cursor_row) (GtkTreeView *, gboolean);
     gboolean(*toggle_cursor_row) (GtkTreeView *);
     gboolean(*expand_collapse_cursor_row) (GtkTreeView *, gboolean,
					    gboolean, gboolean);
     gboolean(*select_cursor_parent) (GtkTreeView *);
     gboolean(*start_interactive_search) (GtkTreeView *);
    void (*_gtk_reserved0) (void);
    void (*_gtk_reserved1) (void);
    void (*_gtk_reserved2) (void);
    void (*_gtk_reserved3) (void);
    void (*_gtk_reserved4) (void);
} GtkTreeViewClass;
typedef struct _GtkFileChooserWidgetClass {
    GtkVBoxClass parent_class;
} GtkFileChooserWidgetClass;
typedef struct _GtkTearoffMenuItemClass {
    GtkMenuItemClass parent_class;
    void (*_gtk_reserved1) (void);
    void (*_gtk_reserved2) (void);
    void (*_gtk_reserved3) (void);
    void (*_gtk_reserved4) (void);
} GtkTearoffMenuItemClass;
typedef struct _GtkRadioButtonClass {
    GtkCheckButtonClass parent_class;
    void (*group_changed) (GtkRadioButton *);
    void (*_gtk_reserved2) (void);
    void (*_gtk_reserved3) (void);
    void (*_gtk_reserved4) (void);
} GtkRadioButtonClass;
typedef struct _GtkAdjustmentClass {
    GtkObjectClass parent_class;
    void (*changed) (GtkAdjustment *);
    void (*value_changed) (GtkAdjustment *);
    void (*_gtk_reserved1) (void);
    void (*_gtk_reserved2) (void);
    void (*_gtk_reserved3) (void);
    void (*_gtk_reserved4) (void);
} GtkAdjustmentClass;
typedef struct _GtkHPaned {
    GtkPaned paned;
} GtkHPaned;
typedef struct _GtkRadioActionClass {
    GtkToggleActionClass parent_class;
    void (*changed) (GtkRadioAction *, GtkRadioAction *);
    void (*_gtk_reserved1) (void);
    void (*_gtk_reserved2) (void);
    void (*_gtk_reserved3) (void);
    void (*_gtk_reserved4) (void);
} GtkRadioActionClass;
typedef struct _GtkTextTagClass {
    GObjectClass parent_class;
     gboolean(*event) (GtkTextTag *, GObject *, GdkEvent *,
		       const GtkTextIter *);
    void (*_gtk_reserved1) (void);
    void (*_gtk_reserved2) (void);
    void (*_gtk_reserved3) (void);
    void (*_gtk_reserved4) (void);
} GtkTextTagClass;
typedef struct _GtkIconViewClass {
    GtkContainerClass parent_class;
    void (*set_scroll_adjustments) (GtkIconView *, GtkAdjustment *,
				    GtkAdjustment *);
    void (*item_activated) (GtkIconView *, GtkTreePath *);
    void (*selection_changed) (GtkIconView *);
    void (*select_all) (GtkIconView *);
    void (*unselect_all) (GtkIconView *);
    void (*select_cursor_item) (GtkIconView *);
    void (*toggle_cursor_item) (GtkIconView *);
     gboolean(*move_cursor) (GtkIconView *, GtkMovementStep, gint);
     gboolean(*activate_cursor_item) (GtkIconView *);
} GtkIconViewClass;
typedef struct _GtkProgressBarClass {
    GtkProgressClass parent_class;
    void (*_gtk_reserved1) (void);
    void (*_gtk_reserved2) (void);
    void (*_gtk_reserved3) (void);
    void (*_gtk_reserved4) (void);
} GtkProgressBarClass;
typedef struct _GtkAspectFrameClass {
    GtkFrameClass parent_class;
} GtkAspectFrameClass;
typedef struct _GtkGammaCurve {
    GtkVBox vbox;
    GtkWidget *table;
    GtkWidget *curve;
    GtkWidget *button[5];
    gfloat gamma;
    GtkWidget *gamma_dialog;
    GtkWidget *gamma_text;
} GtkGammaCurve;
typedef gboolean(*GtkAccelGroupActivate) (GtkAccelGroup *, GObject *,
					  guint, GdkModifierType);
enum {
    GTK_TREE_SORTABLE_DEFAULT_SORT_COLUMN_ID = -1,
    GTK_TREE_SORTABLE_UNSORTED_SORT_COLUMN_ID = -2
};
typedef enum {
    GTK_DEBUG_MISC = 1 &lt;&lt; 0,
    GTK_DEBUG_PLUGSOCKET = 1 &lt;&lt; 1,
    GTK_DEBUG_TEXT = 1 &lt;&lt; 2,
    GTK_DEBUG_TREE = 1 &lt;&lt; 3,
    GTK_DEBUG_UPDATES = 1 &lt;&lt; 4,
    GTK_DEBUG_KEYBINDINGS = 1 &lt;&lt; 5,
    GTK_DEBUG_MULTIHEAD = 1 &lt;&lt; 6,
    GTK_DEBUG_MODULES = 1 &lt;&lt; 7,
    GTK_DEBUG_GEOMETRY = 1 &lt;&lt; 8,
    GTK_DEBUG_ICONTHEME = 1 &lt;&lt; 9
} GtkDebugFlag;
typedef enum {
    GTK_CELL_RENDERER_MODE_INERT,
    GTK_CELL_RENDERER_MODE_ACTIVATABLE,
    GTK_CELL_RENDERER_MODE_EDITABLE
} GtkCellRendererMode;
typedef enum {
    GTK_ICON_THEME_NOT_FOUND,
    GTK_ICON_THEME_FAILED
} GtkIconThemeError;
typedef enum {
    GTK_RESPONSE_NONE = -1,
    GTK_RESPONSE_REJECT = -2,
    GTK_RESPONSE_ACCEPT = -3,
    GTK_RESPONSE_DELETE_EVENT = -4,
    GTK_RESPONSE_OK = -5,
    GTK_RESPONSE_CANCEL = -6,
    GTK_RESPONSE_CLOSE = -7,
    GTK_RESPONSE_YES = -8,
    GTK_RESPONSE_NO = -9,
    GTK_RESPONSE_APPLY = -10,
    GTK_RESPONSE_HELP = -11
} GtkResponseType;
typedef enum {
    GTK_TARGET_SAME_APP = 1 &lt;&lt; 0,
    GTK_TARGET_SAME_WIDGET = 1 &lt;&lt; 1
} GtkTargetFlags;
typedef enum {
    GTK_FILE_CHOOSER_ERROR_NONEXISTENT,
    GTK_FILE_CHOOSER_ERROR_BAD_FILENAME
} GtkFileChooserError;
typedef enum {
    GTK_IN_DESTRUCTION = 1 &lt;&lt; 0,
    GTK_FLOATING = 1 &lt;&lt; 1,
    GTK_RESERVED_1 = 1 &lt;&lt; 2,
    GTK_RESERVED_2 = 1 &lt;&lt; 3
} GtkObjectFlags;
typedef enum {
    GTK_RC_TOKEN_INVALID = G_TOKEN_LAST,
    GTK_RC_TOKEN_INCLUDE,
    GTK_RC_TOKEN_NORMAL,
    GTK_RC_TOKEN_ACTIVE,
    GTK_RC_TOKEN_PRELIGHT,
    GTK_RC_TOKEN_SELECTED,
    GTK_RC_TOKEN_INSENSITIVE,
    GTK_RC_TOKEN_FG,
    GTK_RC_TOKEN_BG,
    GTK_RC_TOKEN_TEXT,
    GTK_RC_TOKEN_BASE,
    GTK_RC_TOKEN_XTHICKNESS,
    GTK_RC_TOKEN_YTHICKNESS,
    GTK_RC_TOKEN_FONT,
    GTK_RC_TOKEN_FONTSET,
    GTK_RC_TOKEN_FONT_NAME,
    GTK_RC_TOKEN_BG_PIXMAP,
    GTK_RC_TOKEN_PIXMAP_PATH,
    GTK_RC_TOKEN_STYLE,
    GTK_RC_TOKEN_BINDING,
    GTK_RC_TOKEN_BIND,
    GTK_RC_TOKEN_WIDGET,
    GTK_RC_TOKEN_WIDGET_CLASS,
    GTK_RC_TOKEN_CLASS,
    GTK_RC_TOKEN_LOWEST,
    GTK_RC_TOKEN_GTK,
    GTK_RC_TOKEN_APPLICATION,
    GTK_RC_TOKEN_THEME,
    GTK_RC_TOKEN_RC,
    GTK_RC_TOKEN_HIGHEST,
    GTK_RC_TOKEN_ENGINE,
    GTK_RC_TOKEN_MODULE_PATH,
    GTK_RC_TOKEN_IM_MODULE_PATH,
    GTK_RC_TOKEN_IM_MODULE_FILE,
    GTK_RC_TOKEN_STOCK,
    GTK_RC_TOKEN_LTR,
    GTK_RC_TOKEN_RTL,
    GTK_RC_TOKEN_LAST
} GtkRcTokenType;
typedef enum {
    GTK_TOPLEVEL = 1 &lt;&lt; 4,
    GTK_NO_WINDOW = 1 &lt;&lt; 5,
    GTK_REALIZED = 1 &lt;&lt; 6,
    GTK_MAPPED = 1 &lt;&lt; 7,
    GTK_VISIBLE = 1 &lt;&lt; 8,
    GTK_SENSITIVE = 1 &lt;&lt; 9,
    GTK_PARENT_SENSITIVE = 1 &lt;&lt; 10,
    GTK_CAN_FOCUS = 1 &lt;&lt; 11,
    GTK_HAS_FOCUS = 1 &lt;&lt; 12,
    GTK_CAN_DEFAULT = 1 &lt;&lt; 13,
    GTK_HAS_DEFAULT = 1 &lt;&lt; 14,
    GTK_HAS_GRAB = 1 &lt;&lt; 15,
    GTK_RC_STYLE = 1 &lt;&lt; 16,
    GTK_COMPOSITE_CHILD = 1 &lt;&lt; 17,
    GTK_NO_REPARENT = 1 &lt;&lt; 18,
    GTK_APP_PAINTABLE = 1 &lt;&lt; 19,
    GTK_RECEIVES_DEFAULT = 1 &lt;&lt; 20,
    GTK_DOUBLE_BUFFERED = 1 &lt;&lt; 21,
    GTK_NO_SHOW_ALL = 1 &lt;&lt; 22
} GtkWidgetFlags;
typedef enum {
    GTK_ICON_VIEW_NO_DROP,
    GTK_ICON_VIEW_DROP_INTO,
    GTK_ICON_VIEW_DROP_LEFT,
    GTK_ICON_VIEW_DROP_RIGHT,
    GTK_ICON_VIEW_DROP_ABOVE,
    GTK_ICON_VIEW_DROP_BELOW
} GtkIconViewDropPosition;
typedef struct _GtkPageSetup GtkPageSetup;
typedef struct _GtkPrintContext GtkPrintContext;
typedef struct _GtkPaperSize GtkPaperSize;
typedef struct _GtkPrintOperationClass {
    GObjectClass parent_class;
    void (*done) (void);
    void (*begin_print) (void);
     gboolean(*paginate) (void);
    void (*request_page_setup) (void);
    void (*draw_page) (void);
    void (*end_print) (void);
    void (*status_changed) (void);
    GtkWidget *(*create_custom_widget) (void);
    void (*custom_widget_apply) (void);
     gboolean(*preview) (void);
    void (*update_custom_widget) (void);
    void (*_gtk_reserved2) (void);
    void (*_gtk_reserved3) (void);
    void (*_gtk_reserved4) (void);
    void (*_gtk_reserved5) (void);
    void (*_gtk_reserved6) (void);
    void (*_gtk_reserved7) (void);
} GtkPrintOperationClass;
typedef struct _GtkPrintOperationPrivate GtkPrintOperationPrivate;
typedef struct _GtkPrintOperation {
    GObject parent_instance;
    GtkPrintOperationPrivate *priv;
} GtkPrintOperation;
typedef enum {
    GTK_PRINT_STATUS_INITIAL,
    GTK_PRINT_STATUS_PREPARING,
    GTK_PRINT_STATUS_GENERATING_DATA,
    GTK_PRINT_STATUS_SENDING_DATA,
    GTK_PRINT_STATUS_PENDING,
    GTK_PRINT_STATUS_PENDING_ISSUE,
    GTK_PRINT_STATUS_PRINTING,
    GTK_PRINT_STATUS_FINISHED,
    GTK_PRINT_STATUS_FINISHED_ABORTED
} GtkPrintStatus;
typedef enum {
    GTK_PRINT_OPERATION_RESULT_ERROR,
    GTK_PRINT_OPERATION_RESULT_APPLY,
    GTK_PRINT_OPERATION_RESULT_CANCEL,
    GTK_PRINT_OPERATION_RESULT_IN_PROGRESS
} GtkPrintOperationResult;
typedef enum {
    GTK_PRINT_OPERATION_ACTION_PRINT_DIALOG,
    GTK_PRINT_OPERATION_ACTION_PRINT,
    GTK_PRINT_OPERATION_ACTION_PREVIEW,
    GTK_PRINT_OPERATION_ACTION_EXPORT
} GtkPrintOperationAction;
typedef enum {
    GTK_PRINT_ERROR_GENERAL,
    GTK_PRINT_ERROR_INTERNAL_ERROR,
    GTK_PRINT_ERROR_NOMEM,
    GTK_PRINT_ERROR_INVALID_FILE
} GtkPrintError;
typedef void (*GtkPageSetupDoneFunc) (GtkPageSetup *, gpointer);
typedef struct _GtkPrintSettings GtkPrintSettings;
typedef void (*GtkPrintSettingsFunc) (const char *, const char *,
				      gpointer);
typedef struct _GtkPageRange {
    gint start;
    gint end;
} GtkPageRange;
typedef struct _GtkLinkButton {
    GtkButton parent_instance;
    GtkLinkButtonPrivate *priv;
} GtkLinkButton;
typedef struct _GtkLinkButtonClass {
    GtkButtonClass parent_class;
    void (*_gtk_padding1) (void);
    void (*_gtk_padding2) (void);
    void (*_gtk_padding3) (void);
    void (*_gtk_padding4) (void);
} GtkLinkButtonClass;
typedef struct _GtkLinkButtonPrivate GtkLinkButtonPrivate;
typedef void (*GtkLinkButtonUriFunc) (GtkLinkButton *, const char *,
				      gpointer);
typedef GtkNotebook *(*GtkNotebookWindowCreationFunc) (GtkNotebook *,
						       GtkWidget *, gint,
						       gint, gpointer);
typedef enum {
    GTK_ASSISTANT_PAGE_CONTENT,
    GTK_ASSISTANT_PAGE_INTRO,
    GTK_ASSISTANT_PAGE_CONFIRM,
    GTK_ASSISTANT_PAGE_SUMMARY,
    GTK_ASSISTANT_PAGE_PROGRESS
} GtkAssistantPageType;
typedef struct _GtkAssistant {
    GtkWindow parent;
    GtkWidget *cancel;
    GtkWidget *forward;
    GtkWidget *back;
    GtkWidget *apply;
    GtkWidget *close;
    GtkWidget *last;
    GtkAssistantPrivate *priv;
} GtkAssistant;
typedef struct _GtkAssistantPrivate GtkAssistantPrivate;
typedef struct _GtkAssistantClass {
    GtkWindowClass parent_class;
    void (*prepare) (void);
    void (*apply) (void);
    void (*close) (void);
    void (*cancel) (void);
    void (*_gtk_reserved1) (void);
    void (*_gtk_reserved2) (void);
    void (*_gtk_reserved3) (void);
    void (*_gtk_reserved4) (void);
    void (*_gtk_reserved5) (void);
} GtkAssistantClass;
typedef gint(*GtkAssistantPageFunc) (gint, gpointer);
typedef enum {
    GTK_RECENT_SORT_NONE,
    GTK_RECENT_SORT_MRU,
    GTK_RECENT_SORT_LRU,
    GTK_RECENT_SORT_CUSTOM
} GtkRecentSortType;
typedef gint(*GtkRecentSortFunc) (GtkRecentInfo *, GtkRecentInfo *,
				  gpointer);
typedef struct _GtkRecentChooser GtkRecentChooser;
typedef struct _GtkRecentChooserIface {
    GTypeInterface base_iface;
     gboolean(*set_current_uri) (void);
    gchar *(*get_current_uri) (void);
     gboolean(*select_uri) (void);
    void (*unselect_uri) (void);
    void (*select_all) (void);
    void (*unselect_all) (void);
    GList *(*get_items) (void);
    GtkRecentManager *(*get_recent_manager) (void);
    void (*add_filter) (void);
    void (*remove_filter) (void);
    GSList *(*list_filters) (void);
    void (*set_sort_func) (void);
    void (*item_activated) (void);
    void (*selection_changed) (void);
} GtkRecentChooserIface;
typedef enum {
    GTK_RECENT_CHOOSER_ERROR_NOT_FOUND,
    GTK_RECENT_CHOOSER_ERROR_INVALID_URI
} GtkRecentChooserError;
typedef struct _GtkRecentChooserDialog {
    GtkDialog parent_instance;
    GtkRecentChooserDialogPrivate *priv;
} GtkRecentChooserDialog;
typedef struct _GtkRecentChooserDialogClass {
    GtkDialogClass parent_class;
} GtkRecentChooserDialogClass;
typedef struct _GtkRecentChooserDialogPrivate
    GtkRecentChooserDialogPrivate;
typedef struct _GtkRecentChooserWidget {
    GtkVBox parent_instance;
    GtkRecentChooserWidgetPrivate *priv;
} GtkRecentChooserWidget;
typedef struct _GtkRecentChooserWidgetClass {
    GtkVBoxClass parent_class;
} GtkRecentChooserWidgetClass;
typedef struct _GtkRecentChooserWidgetPrivate
    GtkRecentChooserWidgetPrivate;
typedef struct _GtkRecentChooserMenu {
    GtkMenu parent_instance;
    GtkRecentChooserMenuPrivate *priv;
} GtkRecentChooserMenu;
typedef struct _GtkRecentChooserMenuClass {
    GtkMenuClass parent_class;
    void (*gtk_recent1) (void);
    void (*gtk_recent2) (void);
    void (*gtk_recent3) (void);
    void (*gtk_recent4) (void);
} GtkRecentChooserMenuClass;
typedef struct _GtkRecentChooserMenuPrivate GtkRecentChooserMenuPrivate;
typedef void (*GtkClipboardRichTextReceivedFunc) (GtkClipboard *, GdkAtom,
						  const unsigned char *,
						  gsize, gpointer);
typedef struct _GtkCellRendererSpin {
    GtkCellRendererText parent;
} GtkCellRendererSpin;
typedef struct _GtkCellRendererSpinClass {
    GtkCellRendererTextClass parent;
} GtkCellRendererSpinClass;
typedef struct _GtkCellRendererSpinPrivate GtkCellRendererSpinPrivate;
typedef struct _GtkCellRendererAccel {
    GtkCellRendererText parent;
    guint accel_key;
    GdkModifierType accel_mods;
    guint keycode;
    GtkCellRendererAccelMode accel_mode;
    GtkWidget *edit_widget;
    GtkWidget *grab_widget;
    GtkWidget *sizing_label;
} GtkCellRendererAccel;
typedef struct _GtkCellRendererAccelClass {
    GtkCellRendererTextClass parent_class;
    void (*accel_edited) (void);
    void (*accel_cleared) (void);
    void (*_gtk_reserved0) (void);
    void (*_gtk_reserved1) (void);
    void (*_gtk_reserved2) (void);
    void (*_gtk_reserved3) (void);
    void (*_gtk_reserved4) (void);
} GtkCellRendererAccelClass;
typedef enum {
    GTK_CELL_RENDERER_ACCEL_MODE_GTK,
    GTK_CELL_RENDERER_ACCEL_MODE_OTHER
} GtkCellRendererAccelMode;
typedef void (*GtkTreeViewSearchPositionFunc) (GtkTreeView *, GtkWidget *,
					       gpointer);
typedef struct _GtkTooltip GtkTooltip;
extern const gchar *const *gtk_about_dialog_get_artists(GtkAboutDialog *
							about);
extern const gchar *const *gtk_about_dialog_get_authors(GtkAboutDialog *
							about);
extern const gchar *gtk_about_dialog_get_comments(GtkAboutDialog * about);
extern const gchar *gtk_about_dialog_get_copyright(GtkAboutDialog * about);
extern const gchar *const *gtk_about_dialog_get_documenters(GtkAboutDialog
							    * about);
extern const gchar *gtk_about_dialog_get_license(GtkAboutDialog * about);
extern GdkPixbuf *gtk_about_dialog_get_logo(GtkAboutDialog * about);
extern const gchar *gtk_about_dialog_get_logo_icon_name(GtkAboutDialog *
							about);
extern const gchar *gtk_about_dialog_get_name(GtkAboutDialog * about);
extern const gchar *gtk_about_dialog_get_translator_credits(GtkAboutDialog
							    * about);
extern GType gtk_about_dialog_get_type(void);
extern const gchar *gtk_about_dialog_get_version(GtkAboutDialog * about);
extern const gchar *gtk_about_dialog_get_website(GtkAboutDialog * about);
extern const gchar *gtk_about_dialog_get_website_label(GtkAboutDialog *
						       about);
extern gboolean gtk_about_dialog_get_wrap_license(GtkAboutDialog * about);
extern GtkWidget *gtk_about_dialog_new(void);
extern void gtk_about_dialog_set_artists(GtkAboutDialog * about,
					 const gchar * *artists);
extern void gtk_about_dialog_set_authors(GtkAboutDialog * about,
					 const gchar * *authors);
extern void gtk_about_dialog_set_comments(GtkAboutDialog * about,
					  const gchar * comments);
extern void gtk_about_dialog_set_copyright(GtkAboutDialog * about,
					   const gchar * copyright);
extern void gtk_about_dialog_set_documenters(GtkAboutDialog * about,
					     const gchar * *documenters);
extern GtkAboutDialogActivateLinkFunc
gtk_about_dialog_set_email_hook(GtkAboutDialogActivateLinkFunc func,
				gpointer data, GDestroyNotify destroy);
extern void gtk_about_dialog_set_license(GtkAboutDialog * about,
					 const gchar * license);
extern void gtk_about_dialog_set_logo(GtkAboutDialog * about,
				      GdkPixbuf * logo);
extern void gtk_about_dialog_set_logo_icon_name(GtkAboutDialog * about,
						const gchar * icon_name);
extern void gtk_about_dialog_set_name(GtkAboutDialog * about,
				      const gchar * name);
extern void gtk_about_dialog_set_translator_credits(GtkAboutDialog * about,
						    const gchar *
						    translator_credits);
extern GtkAboutDialogActivateLinkFunc
gtk_about_dialog_set_url_hook(GtkAboutDialogActivateLinkFunc func,
			      gpointer data, GDestroyNotify destroy);
extern void gtk_about_dialog_set_version(GtkAboutDialog * about,
					 const gchar * version);
extern void gtk_about_dialog_set_website(GtkAboutDialog * about,
					 const gchar * website);
extern void gtk_about_dialog_set_website_label(GtkAboutDialog * about,
					       const gchar *
					       website_label);
extern void gtk_about_dialog_set_wrap_license(GtkAboutDialog * about,
					      gboolean wrap_license);
extern GType gtk_accel_flags_get_type(void);
extern gboolean gtk_accel_group_activate(GtkAccelGroup * accel_group,
					 GQuark accel_quark,
					 GObject * acceleratable,
					 guint accel_key,
					 GdkModifierType accel_mods);
extern void gtk_accel_group_connect(GtkAccelGroup * accel_group,
				    guint accel_key,
				    GdkModifierType accel_mods,
				    GtkAccelFlags accel_flags,
				    GClosure * closure);
extern void gtk_accel_group_connect_by_path(GtkAccelGroup * accel_group,
					    const gchar * accel_path,
					    GClosure * closure);
extern gboolean gtk_accel_group_disconnect(GtkAccelGroup * accel_group,
					   GClosure * closure);
extern gboolean gtk_accel_group_disconnect_key(GtkAccelGroup * accel_group,
					       guint accel_key,
					       GdkModifierType accel_mods);
extern GtkAccelKey *gtk_accel_group_find(GtkAccelGroup * accel_group,
					 GtkAccelGroupFindFunc find_func,
					 gpointer data);
extern GtkAccelGroup *gtk_accel_group_from_accel_closure(GClosure *
							 closure);
extern GType gtk_accel_group_get_type(void);
extern void gtk_accel_group_lock(GtkAccelGroup * accel_group);
extern GtkAccelGroup *gtk_accel_group_new(void);
extern GtkAccelGroupEntry *gtk_accel_group_query(GtkAccelGroup *
						 accel_group,
						 guint accel_key,
						 GdkModifierType
						 accel_mods,
						 guint * n_entries);
extern void gtk_accel_group_unlock(GtkAccelGroup * accel_group);
extern gboolean gtk_accel_groups_activate(GObject * object,
					  guint accel_key,
					  GdkModifierType accel_mods);
extern GSList *gtk_accel_groups_from_object(GObject * object);
extern GtkWidget *gtk_accel_label_get_accel_widget(GtkAccelLabel *
						   accel_label);
extern guint gtk_accel_label_get_accel_width(GtkAccelLabel * accel_label);
extern GType gtk_accel_label_get_type(void);
extern GtkWidget *gtk_accel_label_new(const gchar * string);
extern gboolean gtk_accel_label_refetch(GtkAccelLabel * accel_label);
extern void gtk_accel_label_set_accel_closure(GtkAccelLabel * accel_label,
					      GClosure * accel_closure);
extern void gtk_accel_label_set_accel_widget(GtkAccelLabel * accel_label,
					     GtkWidget * accel_widget);
extern void gtk_accel_map_add_entry(const gchar * accel_path,
				    guint accel_key,
				    GdkModifierType accel_mods);
extern void gtk_accel_map_add_filter(const gchar * filter_pattern);
extern gboolean gtk_accel_map_change_entry(const gchar * accel_path,
					   guint accel_key,
					   GdkModifierType accel_mods,
					   gboolean replace);
extern void gtk_accel_map_foreach(gpointer data,
				  GtkAccelMapForeach foreach_func);
extern void gtk_accel_map_foreach_unfiltered(gpointer data,
					     GtkAccelMapForeach
					     foreach_func);
extern GtkAccelMap *gtk_accel_map_get(void);
extern GType gtk_accel_map_get_type(void);
extern void gtk_accel_map_load(const gchar * file_name);
extern void gtk_accel_map_load_fd(gint fd);
extern void gtk_accel_map_load_scanner(GScanner * scanner);
extern void gtk_accel_map_lock_path(const gchar * accel_path);
extern gboolean gtk_accel_map_lookup_entry(const gchar * accel_path,
					   GtkAccelKey * key);
extern void gtk_accel_map_save(const gchar * file_name);
extern void gtk_accel_map_save_fd(gint fd);
extern void gtk_accel_map_unlock_path(const gchar * accel_path);
extern guint gtk_accelerator_get_default_mod_mask(void);
extern gchar *gtk_accelerator_get_label(guint accelerator_key,
					GdkModifierType accelerator_mods);
extern gchar *gtk_accelerator_name(guint accelerator_key,
				   GdkModifierType accelerator_mods);
extern void gtk_accelerator_parse(const gchar * accelerator,
				  guint * accelerator_key,
				  GdkModifierType * accelerator_mods);
extern void gtk_accelerator_set_default_mod_mask(GdkModifierType
						 default_mod_mask);
extern gboolean gtk_accelerator_valid(guint keyval,
				      GdkModifierType modifiers);
extern void gtk_accessible_connect_widget_destroyed(GtkAccessible *
						    accessible);
extern GType gtk_accessible_get_type(void);
extern void gtk_action_activate(GtkAction * action);
extern void gtk_action_block_activate_from(GtkAction * action,
					   GtkWidget * proxy);
extern void gtk_action_connect_accelerator(GtkAction * action);
extern void gtk_action_connect_proxy(GtkAction * action,
				     GtkWidget * proxy);
extern GtkWidget *gtk_action_create_icon(GtkAction * action,
					 GtkIconSize icon_size);
extern GtkWidget *gtk_action_create_menu_item(GtkAction * action);
extern GtkWidget *gtk_action_create_tool_item(GtkAction * action);
extern void gtk_action_disconnect_accelerator(GtkAction * action);
extern void gtk_action_disconnect_proxy(GtkAction * action,
					GtkWidget * proxy);
extern GClosure *gtk_action_get_accel_closure(GtkAction * action);
extern const gchar *gtk_action_get_accel_path(GtkAction * action);
extern const gchar *gtk_action_get_name(GtkAction * action);
extern GSList *gtk_action_get_proxies(GtkAction * action);
extern gboolean gtk_action_get_sensitive(GtkAction * action);
extern GType gtk_action_get_type(void);
extern gboolean gtk_action_get_visible(GtkAction * action);
extern void gtk_action_group_add_action(GtkActionGroup * action_group,
					GtkAction * action);
extern void gtk_action_group_add_action_with_accel(GtkActionGroup *
						   action_group,
						   GtkAction * action,
						   const gchar *
						   accelerator);
extern void gtk_action_group_add_actions(GtkActionGroup * action_group,
					 const GtkActionEntry * entries,
					 guint n_entries,
					 gpointer user_data);
extern void gtk_action_group_add_actions_full(GtkActionGroup *
					      action_group,
					      const GtkActionEntry *
					      entries, guint n_entries,
					      gpointer user_data,
					      GDestroyNotify destroy);
extern void gtk_action_group_add_radio_actions(GtkActionGroup *
					       action_group,
					       const GtkRadioActionEntry *
					       entries, guint n_entries,
					       gint value,
					       GCallback on_change,
					       gpointer user_data);
extern void gtk_action_group_add_radio_actions_full(GtkActionGroup *
						    action_group,
						    const
						    GtkRadioActionEntry *
						    entries,
						    guint n_entries,
						    gint value,
						    GCallback on_change,
						    gpointer user_data,
						    GDestroyNotify
						    destroy);
extern void gtk_action_group_add_toggle_actions(GtkActionGroup *
						action_group,
						const GtkToggleActionEntry
						* entries, guint n_entries,
						gpointer user_data);
extern void gtk_action_group_add_toggle_actions_full(GtkActionGroup *
						     action_group,
						     const
						     GtkToggleActionEntry *
						     entries,
						     guint n_entries,
						     gpointer user_data,
						     GDestroyNotify
						     destroy);
extern GtkAction *gtk_action_group_get_action(GtkActionGroup *
					      action_group,
					      const gchar * action_name);
extern const gchar *gtk_action_group_get_name(GtkActionGroup *
					      action_group);
extern gboolean gtk_action_group_get_sensitive(GtkActionGroup *
					       action_group);
extern GType gtk_action_group_get_type(void);
extern gboolean gtk_action_group_get_visible(GtkActionGroup *
					     action_group);
extern GList *gtk_action_group_list_actions(GtkActionGroup * action_group);
extern GtkActionGroup *gtk_action_group_new(const gchar * name);
extern void gtk_action_group_remove_action(GtkActionGroup * action_group,
					   GtkAction * action);
extern void gtk_action_group_set_sensitive(GtkActionGroup * action_group,
					   gboolean sensitive);
extern void gtk_action_group_set_translate_func(GtkActionGroup *
						action_group,
						GtkTranslateFunc func,
						gpointer data,
						GtkDestroyNotify notify);
extern void gtk_action_group_set_translation_domain(GtkActionGroup *
						    action_group,
						    const gchar * domain);
extern void gtk_action_group_set_visible(GtkActionGroup * action_group,
					 gboolean visible);
extern const gchar *gtk_action_group_translate_string(GtkActionGroup *
						      action_group,
						      const gchar *
						      string);
extern gboolean gtk_action_is_sensitive(GtkAction * action);
extern gboolean gtk_action_is_visible(GtkAction * action);
extern GtkAction *gtk_action_new(const gchar * name, const gchar * label,
				 const gchar * tooltip,
				 const gchar * stock_id);
extern void gtk_action_set_accel_group(GtkAction * action,
				       GtkAccelGroup * accel_group);
extern void gtk_action_set_accel_path(GtkAction * action,
				      const gchar * accel_path);
extern void gtk_action_set_sensitive(GtkAction * action,
				     gboolean sensitive);
extern void gtk_action_set_visible(GtkAction * action, gboolean visible);
extern void gtk_action_unblock_activate_from(GtkAction * action,
					     GtkWidget * proxy);
extern void gtk_adjustment_changed(GtkAdjustment * adjustment);
extern void gtk_adjustment_clamp_page(GtkAdjustment * adjustment,
				      gdouble lower, gdouble upper);
extern GType gtk_adjustment_get_type(void);
extern gdouble gtk_adjustment_get_value(GtkAdjustment * adjustment);
extern GtkObject *gtk_adjustment_new(gdouble value, gdouble lower,
				     gdouble upper, gdouble step_increment,
				     gdouble page_increment,
				     gdouble page_size);
extern void gtk_adjustment_set_value(GtkAdjustment * adjustment,
				     gdouble value);
extern void gtk_adjustment_value_changed(GtkAdjustment * adjustment);
extern void gtk_alignment_get_padding(GtkAlignment * alignment,
				      guint * padding_top,
				      guint * padding_bottom,
				      guint * padding_left,
				      guint * padding_right);
extern GType gtk_alignment_get_type(void);
extern GtkWidget *gtk_alignment_new(gfloat xalign, gfloat yalign,
				    gfloat xscale, gfloat yscale);
extern void gtk_alignment_set(GtkAlignment * alignment, gfloat xalign,
			      gfloat yalign, gfloat xscale, gfloat yscale);
extern void gtk_alignment_set_padding(GtkAlignment * alignment,
				      guint padding_top,
				      guint padding_bottom,
				      guint padding_left,
				      guint padding_right);
extern gboolean gtk_alternative_dialog_button_order(GdkScreen * screen);
extern GType gtk_anchor_type_get_type(void);
extern GType gtk_arg_flags_get_type(void);
extern GType gtk_arrow_get_type(void);
extern GtkWidget *gtk_arrow_new(GtkArrowType arrow_type,
				GtkShadowType shadow_type);
extern void gtk_arrow_set(GtkArrow * arrow, GtkArrowType arrow_type,
			  GtkShadowType shadow_type);
extern GType gtk_arrow_type_get_type(void);
extern GType gtk_aspect_frame_get_type(void);
extern GtkWidget *gtk_aspect_frame_new(const gchar * label, gfloat xalign,
				       gfloat yalign, gfloat ratio,
				       gboolean obey_child);
extern void gtk_aspect_frame_set(GtkAspectFrame * aspect_frame,
				 gfloat xalign, gfloat yalign,
				 gfloat ratio, gboolean obey_child);
extern void gtk_assistant_add_action_widget(GtkAssistant * assistant,
					    GtkWidget * child);
extern gint gtk_assistant_append_page(GtkAssistant * assistant,
				      GtkWidget * page);
extern gint gtk_assistant_get_current_page(GtkAssistant * assistant);
extern gint gtk_assistant_get_n_pages(GtkAssistant * assistant);
extern GtkWidget *gtk_assistant_get_nth_page(GtkAssistant * assistant,
					     gint page_num);
extern gboolean gtk_assistant_get_page_complete(GtkAssistant * assistant,
						GtkWidget * page);
extern GdkPixbuf *gtk_assistant_get_page_header_image(GtkAssistant *
						      assistant,
						      GtkWidget * page);
extern GdkPixbuf *gtk_assistant_get_page_side_image(GtkAssistant *
						    assistant,
						    GtkWidget * page);
extern const char *gtk_assistant_get_page_title(GtkAssistant * assistant,
						GtkWidget * page);
extern GtkAssistantPageType gtk_assistant_get_page_type(GtkAssistant *
							assistant,
							GtkWidget * page);
extern GType gtk_assistant_get_type(void);
extern gint gtk_assistant_insert_page(GtkAssistant * assistant,
				      GtkWidget * page, gint position);
extern GtkWidget *gtk_assistant_new(void);
extern GType gtk_assistant_page_type_get_type(void);
extern gint gtk_assistant_prepend_page(GtkAssistant * assistant,
				       GtkWidget * page);
extern void gtk_assistant_remove_action_widget(GtkAssistant * assistant,
					       GtkWidget * child);
extern void gtk_assistant_set_current_page(GtkAssistant * assistant,
					   gint page_num);
extern void gtk_assistant_set_forward_page_func(GtkAssistant * assistant,
						GtkAssistantPageFunc
						page_func, gpointer data,
						GDestroyNotify destroy);
extern void gtk_assistant_set_page_complete(GtkAssistant * assistant,
					    GtkWidget * page,
					    gboolean complete);
extern void gtk_assistant_set_page_header_image(GtkAssistant * assistant,
						GtkWidget * page,
						GdkPixbuf * pixbuf);
extern void gtk_assistant_set_page_side_image(GtkAssistant * assistant,
					      GtkWidget * page,
					      GdkPixbuf * pixbuf);
extern void gtk_assistant_set_page_title(GtkAssistant * assistant,
					 GtkWidget * page,
					 const char *title);
extern void gtk_assistant_set_page_type(GtkAssistant * assistant,
					GtkWidget * page,
					GtkAssistantPageType type);
extern void gtk_assistant_update_buttons_state(GtkAssistant * assistant);
extern GType gtk_attach_options_get_type(void);
extern GtkWidget *gtk_bin_get_child(GtkBin * bin);
extern GType gtk_bin_get_type(void);
extern const guint gtk_binary_age;
extern void gtk_binding_entry_add_signal(GtkBindingSet * binding_set,
					 guint keyval,
					 GdkModifierType modifiers,
					 const gchar * signal_name,
					 guint n_args, ...);
extern void gtk_binding_entry_add_signall(GtkBindingSet * binding_set,
					  guint keyval,
					  GdkModifierType modifiers,
					  const gchar * signal_name,
					  GSList * binding_args);
extern void gtk_binding_entry_clear(GtkBindingSet * binding_set,
				    guint keyval,
				    GdkModifierType modifiers);
extern void gtk_binding_entry_remove(GtkBindingSet * binding_set,
				     guint keyval,
				     GdkModifierType modifiers);
extern guint gtk_binding_parse_binding(GScanner * scanner);
extern gboolean gtk_binding_set_activate(GtkBindingSet * binding_set,
					 guint keyval,
					 GdkModifierType modifiers,
					 GtkObject * object);
extern void gtk_binding_set_add_path(GtkBindingSet * binding_set,
				     GtkPathType path_type,
				     const gchar * path_pattern,
				     GtkPathPriorityType priority);
extern GtkBindingSet *gtk_binding_set_by_class(gpointer object_class);
extern GtkBindingSet *gtk_binding_set_find(const gchar * set_name);
extern GtkBindingSet *gtk_binding_set_new(const gchar * set_name);
extern gboolean gtk_bindings_activate(GtkObject * object, guint keyval,
				      GdkModifierType modifiers);
extern gboolean gtk_bindings_activate_event(GtkObject * object,
					    GdkEventKey * event);
extern GtkBorder *gtk_border_copy(const GtkBorder * border_);
extern void gtk_border_free(GtkBorder * border_);
extern GType gtk_border_get_type(void);
extern gboolean gtk_box_get_homogeneous(GtkBox * box);
extern gint gtk_box_get_spacing(GtkBox * box);
extern GType gtk_box_get_type(void);
extern void gtk_box_pack_end(GtkBox * box, GtkWidget * child,
			     gboolean expand, gboolean fill,
			     guint padding);
extern void gtk_box_pack_end_defaults(GtkBox * box, GtkWidget * widget);
extern void gtk_box_pack_start(GtkBox * box, GtkWidget * child,
			       gboolean expand, gboolean fill,
			       guint padding);
extern void gtk_box_pack_start_defaults(GtkBox * box, GtkWidget * widget);
extern void gtk_box_query_child_packing(GtkBox * box, GtkWidget * child,
					gboolean * expand, gboolean * fill,
					guint * padding,
					GtkPackType * pack_type);
extern void gtk_box_reorder_child(GtkBox * box, GtkWidget * child,
				  gint position);
extern void gtk_box_set_child_packing(GtkBox * box, GtkWidget * child,
				      gboolean expand, gboolean fill,
				      guint padding,
				      GtkPackType pack_type);
extern void gtk_box_set_homogeneous(GtkBox * box, gboolean homogeneous);
extern void gtk_box_set_spacing(GtkBox * box, gint spacing);
extern gboolean gtk_button_box_get_child_secondary(GtkButtonBox * widget,
						   GtkWidget * child);
extern GtkButtonBoxStyle gtk_button_box_get_layout(GtkButtonBox * widget);
extern GType gtk_button_box_get_type(void);
extern void gtk_button_box_set_child_secondary(GtkButtonBox * widget,
					       GtkWidget * child,
					       gboolean is_secondary);
extern void gtk_button_box_set_layout(GtkButtonBox * widget,
				      GtkButtonBoxStyle layout_style);
extern GType gtk_button_box_style_get_type(void);
extern void gtk_button_clicked(GtkButton * button);
extern void gtk_button_enter(GtkButton * button);
extern void gtk_button_get_alignment(GtkButton * button, gfloat * xalign,
				     gfloat * yalign);
extern gboolean gtk_button_get_focus_on_click(GtkButton * button);
extern GtkWidget *gtk_button_get_image(GtkButton * button);
extern GtkPositionType gtk_button_get_image_position(GtkButton * button);
extern const gchar *gtk_button_get_label(GtkButton * button);
extern GtkReliefStyle gtk_button_get_relief(GtkButton * button);
extern GType gtk_button_get_type(void);
extern gboolean gtk_button_get_use_stock(GtkButton * button);
extern gboolean gtk_button_get_use_underline(GtkButton * button);
extern void gtk_button_leave(GtkButton * button);
extern GtkWidget *gtk_button_new(void);
extern GtkWidget *gtk_button_new_from_stock(const gchar * stock_id);
extern GtkWidget *gtk_button_new_with_label(const gchar * label);
extern GtkWidget *gtk_button_new_with_mnemonic(const gchar * label);
extern void gtk_button_pressed(GtkButton * button);
extern void gtk_button_released(GtkButton * button);
extern void gtk_button_set_alignment(GtkButton * button, gfloat xalign,
				     gfloat yalign);
extern void gtk_button_set_focus_on_click(GtkButton * button,
					  gboolean focus_on_click);
extern void gtk_button_set_image(GtkButton * button, GtkWidget * image);
extern void gtk_button_set_image_position(GtkButton * button,
					  GtkPositionType position);
extern void gtk_button_set_label(GtkButton * button, const gchar * label);
extern void gtk_button_set_relief(GtkButton * button,
				  GtkReliefStyle newstyle);
extern void gtk_button_set_use_stock(GtkButton * button,
				     gboolean use_stock);
extern void gtk_button_set_use_underline(GtkButton * button,
					 gboolean use_underline);
extern GType gtk_buttons_type_get_type(void);
extern void gtk_calendar_clear_marks(GtkCalendar * calendar);
extern GType gtk_calendar_display_options_get_type(void);
extern void gtk_calendar_get_date(GtkCalendar * calendar, guint * year,
				  guint * month, guint * day);
extern GtkCalendarDisplayOptions
gtk_calendar_get_display_options(GtkCalendar * calendar);
extern GType gtk_calendar_get_type(void);
extern gboolean gtk_calendar_mark_day(GtkCalendar * calendar, guint day);
extern GtkWidget *gtk_calendar_new(void);
extern void gtk_calendar_select_day(GtkCalendar * calendar, guint day);
extern gboolean gtk_calendar_select_month(GtkCalendar * calendar,
					  guint month, guint year);
extern void gtk_calendar_set_display_options(GtkCalendar * calendar,
					     GtkCalendarDisplayOptions
					     flags);
extern gboolean gtk_calendar_unmark_day(GtkCalendar * calendar, guint day);
extern void gtk_cell_editable_editing_done(GtkCellEditable *
					   cell_editable);
extern GType gtk_cell_editable_get_type(void);
extern void gtk_cell_editable_remove_widget(GtkCellEditable *
					    cell_editable);
extern void gtk_cell_editable_start_editing(GtkCellEditable *
					    cell_editable,
					    GdkEvent * event);
extern void gtk_cell_layout_add_attribute(GtkCellLayout * cell_layout,
					  GtkCellRenderer * cell,
					  const gchar * attribute,
					  gint column);
extern void gtk_cell_layout_clear(GtkCellLayout * cell_layout);
extern void gtk_cell_layout_clear_attributes(GtkCellLayout * cell_layout,
					     GtkCellRenderer * cell);
extern GType gtk_cell_layout_get_type(void);
extern void gtk_cell_layout_pack_end(GtkCellLayout * cell_layout,
				     GtkCellRenderer * cell,
				     gboolean expand);
extern void gtk_cell_layout_pack_start(GtkCellLayout * cell_layout,
				       GtkCellRenderer * cell,
				       gboolean expand);
extern void gtk_cell_layout_reorder(GtkCellLayout * cell_layout,
				    GtkCellRenderer * cell, gint position);
extern void gtk_cell_layout_set_attributes(GtkCellLayout * cell_layout,
					   GtkCellRenderer * cell, ...);
extern void gtk_cell_layout_set_cell_data_func(GtkCellLayout * cell_layout,
					       GtkCellRenderer * cell,
					       GtkCellLayoutDataFunc func,
					       gpointer func_data,
					       GDestroyNotify destroy);
extern GType gtk_cell_renderer_accel_get_type(void);
extern GType gtk_cell_renderer_accel_mode_get_type(void);
extern GtkCellRenderer *gtk_cell_renderer_accel_new(void);
extern gboolean gtk_cell_renderer_activate(GtkCellRenderer * cell,
					   GdkEvent * event,
					   GtkWidget * widget,
					   const gchar * path,
					   const GdkRectangle *
					   background_area,
					   const GdkRectangle * cell_area,
					   GtkCellRendererState flags);
extern GType gtk_cell_renderer_combo_get_type(void);
extern GtkCellRenderer *gtk_cell_renderer_combo_new(void);
extern void gtk_cell_renderer_get_fixed_size(GtkCellRenderer * cell,
					     gint * width, gint * height);
extern void gtk_cell_renderer_get_size(GtkCellRenderer * cell,
				       GtkWidget * widget,
				       const GdkRectangle * cell_area,
				       gint * x_offset, gint * y_offset,
				       gint * width, gint * height);
extern GType gtk_cell_renderer_get_type(void);
extern GType gtk_cell_renderer_mode_get_type(void);
extern GType gtk_cell_renderer_pixbuf_get_type(void);
extern GtkCellRenderer *gtk_cell_renderer_pixbuf_new(void);
extern GType gtk_cell_renderer_progress_get_type(void);
extern GtkCellRenderer *gtk_cell_renderer_progress_new(void);
extern void gtk_cell_renderer_render(GtkCellRenderer * cell,
				     GdkWindow * window,
				     GtkWidget * widget,
				     const GdkRectangle * background_area,
				     const GdkRectangle * cell_area,
				     const GdkRectangle * expose_area,
				     GtkCellRendererState flags);
extern void gtk_cell_renderer_set_fixed_size(GtkCellRenderer * cell,
					     gint width, gint height);
extern GType gtk_cell_renderer_spin_get_type(void);
extern GtkCellRenderer *gtk_cell_renderer_spin_new(void);
extern GtkCellEditable *gtk_cell_renderer_start_editing(GtkCellRenderer *
							cell,
							GdkEvent * event,
							GtkWidget * widget,
							const gchar * path,
							const GdkRectangle
							* background_area,
							const GdkRectangle
							* cell_area,
							GtkCellRendererState
							flags);
extern GType gtk_cell_renderer_state_get_type(void);
extern void gtk_cell_renderer_stop_editing(GtkCellRenderer * cell,
					   gboolean canceled);
extern GType gtk_cell_renderer_text_get_type(void);
extern GtkCellRenderer *gtk_cell_renderer_text_new(void);
extern void
gtk_cell_renderer_text_set_fixed_height_from_font(GtkCellRendererText *
						  renderer,
						  gint number_of_rows);
extern gboolean gtk_cell_renderer_toggle_get_active(GtkCellRendererToggle *
						    toggle);
extern gboolean gtk_cell_renderer_toggle_get_radio(GtkCellRendererToggle *
						   toggle);
extern GType gtk_cell_renderer_toggle_get_type(void);
extern GtkCellRenderer *gtk_cell_renderer_toggle_new(void);
extern void gtk_cell_renderer_toggle_set_active(GtkCellRendererToggle *
						toggle, gboolean setting);
extern void gtk_cell_renderer_toggle_set_radio(GtkCellRendererToggle *
					       toggle, gboolean radio);
extern GList *gtk_cell_view_get_cell_renderers(GtkCellView * cell_view);
extern GtkTreePath *gtk_cell_view_get_displayed_row(GtkCellView *
						    cell_view);
extern gboolean gtk_cell_view_get_size_of_row(GtkCellView * cell_view,
					      GtkTreePath * path,
					      GtkRequisition *
					      requisition);
extern GType gtk_cell_view_get_type(void);
extern GtkWidget *gtk_cell_view_new(void);
extern GtkWidget *gtk_cell_view_new_with_markup(const gchar * markup);
extern GtkWidget *gtk_cell_view_new_with_pixbuf(GdkPixbuf * pixbuf);
extern GtkWidget *gtk_cell_view_new_with_text(const gchar * text);
extern void gtk_cell_view_set_background_color(GtkCellView * cell_view,
					       const GdkColor * color);
extern void gtk_cell_view_set_displayed_row(GtkCellView * cell_view,
					    GtkTreePath * path);
extern void gtk_cell_view_set_model(GtkCellView * cell_view,
				    GtkTreeModel * model);
extern GType gtk_check_button_get_type(void);
extern GtkWidget *gtk_check_button_new(void);
extern GtkWidget *gtk_check_button_new_with_label(const gchar * label);
extern GtkWidget *gtk_check_button_new_with_mnemonic(const gchar * label);
extern gboolean gtk_check_menu_item_get_active(GtkCheckMenuItem *
					       check_menu_item);
extern gboolean gtk_check_menu_item_get_draw_as_radio(GtkCheckMenuItem *
						      check_menu_item);
extern gboolean gtk_check_menu_item_get_inconsistent(GtkCheckMenuItem *
						     check_menu_item);
extern GType gtk_check_menu_item_get_type(void);
extern GtkWidget *gtk_check_menu_item_new(void);
extern GtkWidget *gtk_check_menu_item_new_with_label(const gchar * label);
extern GtkWidget *gtk_check_menu_item_new_with_mnemonic(const gchar *
							label);
extern void gtk_check_menu_item_set_active(GtkCheckMenuItem *
					   check_menu_item,
					   gboolean is_active);
extern void gtk_check_menu_item_set_draw_as_radio(GtkCheckMenuItem *
						  check_menu_item,
						  gboolean draw_as_radio);
extern void gtk_check_menu_item_set_inconsistent(GtkCheckMenuItem *
						 check_menu_item,
						 gboolean setting);
extern void gtk_check_menu_item_toggled(GtkCheckMenuItem *
					check_menu_item);
extern const gchar *gtk_check_version(guint required_major,
				      guint required_minor,
				      guint required_micro);
extern void gtk_clipboard_clear(GtkClipboard * clipboard);
extern GtkClipboard *gtk_clipboard_get(GdkAtom selection);
extern GdkDisplay *gtk_clipboard_get_display(GtkClipboard * clipboard);
extern GtkClipboard *gtk_clipboard_get_for_display(GdkDisplay * display,
						   GdkAtom selection);
extern GObject *gtk_clipboard_get_owner(GtkClipboard * clipboard);
extern GType gtk_clipboard_get_type(void);
extern void gtk_clipboard_request_contents(GtkClipboard * clipboard,
					   GdkAtom target,
					   GtkClipboardReceivedFunc
					   callback, gpointer user_data);
extern void gtk_clipboard_request_image(GtkClipboard * clipboard,
					GtkClipboardImageReceivedFunc
					callback, gpointer user_data);
extern void gtk_clipboard_request_rich_text(GtkClipboard * clipboard,
					    GtkTextBuffer * buffer,
					    GtkClipboardRichTextReceivedFunc
					    callback, gpointer user_data);
extern void gtk_clipboard_request_targets(GtkClipboard * clipboard,
					  GtkClipboardTargetsReceivedFunc
					  callback, gpointer user_data);
extern void gtk_clipboard_request_text(GtkClipboard * clipboard,
				       GtkClipboardTextReceivedFunc
				       callback, gpointer user_data);
extern void gtk_clipboard_set_can_store(GtkClipboard * clipboard,
					const GtkTargetEntry * targets,
					gint n_targets);
extern void gtk_clipboard_set_image(GtkClipboard * clipboard,
				    GdkPixbuf * pixbuf);
extern void gtk_clipboard_set_text(GtkClipboard * clipboard,
				   const gchar * text, gint len);
extern gboolean gtk_clipboard_set_with_data(GtkClipboard * clipboard,
					    const GtkTargetEntry * targets,
					    guint n_targets,
					    GtkClipboardGetFunc get_func,
					    GtkClipboardClearFunc
					    clear_func,
					    gpointer user_data);
extern gboolean gtk_clipboard_set_with_owner(GtkClipboard * clipboard,
					     const GtkTargetEntry *
					     targets, guint n_targets,
					     GtkClipboardGetFunc get_func,
					     GtkClipboardClearFunc
					     clear_func, GObject * owner);
extern void gtk_clipboard_store(GtkClipboard * clipboard);
extern GtkSelectionData *gtk_clipboard_wait_for_contents(GtkClipboard *
							 clipboard,
							 GdkAtom target);
extern GdkPixbuf *gtk_clipboard_wait_for_image(GtkClipboard * clipboard);
extern guint8 *gtk_clipboard_wait_for_rich_text(GtkClipboard * clipboard,
						GtkTextBuffer * buffer,
						GdkAtom * format,
						gsize * length);
extern gboolean gtk_clipboard_wait_for_targets(GtkClipboard * clipboard,
					       GdkAtom * *targets,
					       gint * n_targets);
extern gchar *gtk_clipboard_wait_for_text(GtkClipboard * clipboard);
extern gboolean gtk_clipboard_wait_is_image_available(GtkClipboard *
						      clipboard);
extern gboolean gtk_clipboard_wait_is_rich_text_available(GtkClipboard *
							  clipboard,
							  GtkTextBuffer *
							  buffer);
extern gboolean gtk_clipboard_wait_is_target_available(GtkClipboard *
						       clipboard,
						       GdkAtom target);
extern gboolean gtk_clipboard_wait_is_text_available(GtkClipboard *
						     clipboard);
extern guint16 gtk_color_button_get_alpha(GtkColorButton * color_button);
extern void gtk_color_button_get_color(GtkColorButton * color_button,
				       GdkColor * color);
extern const gchar *gtk_color_button_get_title(GtkColorButton *
					       color_button);
extern GType gtk_color_button_get_type(void);
extern gboolean gtk_color_button_get_use_alpha(GtkColorButton *
					       color_button);
extern GtkWidget *gtk_color_button_new(void);
extern GtkWidget *gtk_color_button_new_with_color(const GdkColor * color);
extern void gtk_color_button_set_alpha(GtkColorButton * color_button,
				       guint16 alpha);
extern void gtk_color_button_set_color(GtkColorButton * color_button,
				       const GdkColor * color);
extern void gtk_color_button_set_title(GtkColorButton * color_button,
				       const gchar * title);
extern void gtk_color_button_set_use_alpha(GtkColorButton * color_button,
					   gboolean use_alpha);
extern GType gtk_color_selection_dialog_get_type(void);
extern GtkWidget *gtk_color_selection_dialog_new(const gchar * title);
extern guint16 gtk_color_selection_get_current_alpha(GtkColorSelection *
						     colorsel);
extern void gtk_color_selection_get_current_color(GtkColorSelection *
						  colorsel,
						  GdkColor * color);
extern gboolean
gtk_color_selection_get_has_opacity_control(GtkColorSelection * colorsel);
extern gboolean gtk_color_selection_get_has_palette(GtkColorSelection *
						    colorsel);
extern guint16 gtk_color_selection_get_previous_alpha(GtkColorSelection *
						      colorsel);
extern void gtk_color_selection_get_previous_color(GtkColorSelection *
						   colorsel,
						   GdkColor * color);
extern GType gtk_color_selection_get_type(void);
extern gboolean gtk_color_selection_is_adjusting(GtkColorSelection *
						 colorsel);
extern GtkWidget *gtk_color_selection_new(void);
extern gboolean gtk_color_selection_palette_from_string(const gchar * str,
							GdkColor * *colors,
							gint * n_colors);
extern gchar *gtk_color_selection_palette_to_string(const GdkColor *
						    colors, gint n_colors);
extern GtkColorSelectionChangePaletteWithScreenFunc
gtk_color_selection_set_change_palette_with_screen_hook
(GtkColorSelectionChangePaletteWithScreenFunc func);
extern void gtk_color_selection_set_current_alpha(GtkColorSelection *
						  colorsel, guint16 alpha);
extern void gtk_color_selection_set_current_color(GtkColorSelection *
						  colorsel,
						  const GdkColor * color);
extern void gtk_color_selection_set_has_opacity_control(GtkColorSelection *
							colorsel,
							gboolean
							has_opacity);
extern void gtk_color_selection_set_has_palette(GtkColorSelection *
						colorsel,
						gboolean has_palette);
extern void gtk_color_selection_set_previous_alpha(GtkColorSelection *
						   colorsel,
						   guint16 alpha);
extern void gtk_color_selection_set_previous_color(GtkColorSelection *
						   colorsel,
						   const GdkColor * color);
extern void gtk_combo_box_append_text(GtkComboBox * combo_box,
				      const gchar * text);
extern gint gtk_combo_box_entry_get_text_column(GtkComboBoxEntry *
						entry_box);
extern GType gtk_combo_box_entry_get_type(void);
extern GtkWidget *gtk_combo_box_entry_new(void);
extern GtkWidget *gtk_combo_box_entry_new_text(void);
extern GtkWidget *gtk_combo_box_entry_new_with_model(GtkTreeModel * model,
						     gint text_column);
extern void gtk_combo_box_entry_set_text_column(GtkComboBoxEntry *
						entry_box,
						gint text_column);
extern gint gtk_combo_box_get_active(GtkComboBox * combo_box);
extern gboolean gtk_combo_box_get_active_iter(GtkComboBox * combo_box,
					      GtkTreeIter * iter);
extern gchar *gtk_combo_box_get_active_text(GtkComboBox * combo_box);
extern gboolean gtk_combo_box_get_add_tearoffs(GtkComboBox * combo_box);
extern gint gtk_combo_box_get_column_span_column(GtkComboBox * combo_box);
extern gboolean gtk_combo_box_get_focus_on_click(GtkComboBox * combo);
extern GtkTreeModel *gtk_combo_box_get_model(GtkComboBox * combo_box);
extern AtkObject *gtk_combo_box_get_popup_accessible(GtkComboBox *
						     combo_box);
extern GtkTreeViewRowSeparatorFunc
gtk_combo_box_get_row_separator_func(GtkComboBox * combo_box);
extern gint gtk_combo_box_get_row_span_column(GtkComboBox * combo_box);
extern const gchar *gtk_combo_box_get_title(GtkComboBox * combo_box);
extern GType gtk_combo_box_get_type(void);
extern gint gtk_combo_box_get_wrap_width(GtkComboBox * combo_box);
extern void gtk_combo_box_insert_text(GtkComboBox * combo_box,
				      gint position, const gchar * text);
extern GtkWidget *gtk_combo_box_new(void);
extern GtkWidget *gtk_combo_box_new_text(void);
extern GtkWidget *gtk_combo_box_new_with_model(GtkTreeModel * model);
extern void gtk_combo_box_popdown(GtkComboBox * combo_box);
extern void gtk_combo_box_popup(GtkComboBox * combo_box);
extern void gtk_combo_box_prepend_text(GtkComboBox * combo_box,
				       const gchar * text);
extern void gtk_combo_box_remove_text(GtkComboBox * combo_box,
				      gint position);
extern void gtk_combo_box_set_active(GtkComboBox * combo_box, gint index_);
extern void gtk_combo_box_set_active_iter(GtkComboBox * combo_box,
					  GtkTreeIter * iter);
extern void gtk_combo_box_set_add_tearoffs(GtkComboBox * combo_box,
					   gboolean add_tearoffs);
extern void gtk_combo_box_set_column_span_column(GtkComboBox * combo_box,
						 gint column_span);
extern void gtk_combo_box_set_focus_on_click(GtkComboBox * combo,
					     gboolean focus_on_click);
extern void gtk_combo_box_set_model(GtkComboBox * combo_box,
				    GtkTreeModel * model);
extern void gtk_combo_box_set_row_separator_func(GtkComboBox * combo_box,
						 GtkTreeViewRowSeparatorFunc
						 func, gpointer data,
						 GtkDestroyNotify destroy);
extern void gtk_combo_box_set_row_span_column(GtkComboBox * combo_box,
					      gint row_span);
extern void gtk_combo_box_set_title(GtkComboBox * combo_box,
				    const gchar * title);
extern void gtk_combo_box_set_wrap_width(GtkComboBox * combo_box,
					 gint width);
extern GType gtk_combo_get_type(void);
extern void gtk_container_add(GtkContainer * container,
			      GtkWidget * widget);
extern void gtk_container_add_with_properties(GtkContainer * container,
					      GtkWidget * widget,
					      const gchar *
					      first_prop_name, ...);
extern void gtk_container_check_resize(GtkContainer * container);
extern void gtk_container_child_get(GtkContainer * container,
				    GtkWidget * child,
				    const gchar * first_prop_name, ...);
extern void gtk_container_child_get_property(GtkContainer * container,
					     GtkWidget * child,
					     const gchar * property_name,
					     GValue * value);
extern void gtk_container_child_get_valist(GtkContainer * container,
					   GtkWidget * child,
					   const gchar *
					   first_property_name,
					   va_list var_args);
extern void gtk_container_child_set(GtkContainer * container,
				    GtkWidget * child,
				    const gchar * first_prop_name, ...);
extern void gtk_container_child_set_property(GtkContainer * container,
					     GtkWidget * child,
					     const gchar * property_name,
					     const GValue * value);
extern void gtk_container_child_set_valist(GtkContainer * container,
					   GtkWidget * child,
					   const gchar *
					   first_property_name,
					   va_list var_args);
extern GType gtk_container_child_type(GtkContainer * container);
extern GParamSpec *gtk_container_class_find_child_property(GObjectClass *
							   cclass,
							   const gchar *
							   property_name);
extern void gtk_container_class_install_child_property(GtkContainerClass *
						       cclass,
						       guint property_id,
						       GParamSpec * pspec);
extern GParamSpec **gtk_container_class_list_child_properties(GObjectClass
							      * cclass,
							      guint *
							      n_properties);
extern void gtk_container_forall(GtkContainer * container,
				 GtkCallback callback,
				 gpointer callback_data);
extern void gtk_container_foreach(GtkContainer * container,
				  GtkCallback callback,
				  gpointer callback_data);
extern guint gtk_container_get_border_width(GtkContainer * container);
extern GList *gtk_container_get_children(GtkContainer * container);
extern gboolean gtk_container_get_focus_chain(GtkContainer * container,
					      GList * *focusable_widgets);
extern GtkAdjustment *gtk_container_get_focus_hadjustment(GtkContainer *
							  container);
extern GtkAdjustment *gtk_container_get_focus_vadjustment(GtkContainer *
							  container);
extern GtkResizeMode gtk_container_get_resize_mode(GtkContainer *
						   container);
extern GType gtk_container_get_type(void);
extern void gtk_container_propagate_expose(GtkContainer * container,
					   GtkWidget * child,
					   GdkEventExpose * event);
extern void gtk_container_remove(GtkContainer * container,
				 GtkWidget * widget);
extern void gtk_container_resize_children(GtkContainer * container);
extern void gtk_container_set_border_width(GtkContainer * container,
					   guint border_width);
extern void gtk_container_set_focus_chain(GtkContainer * container,
					  GList * focusable_widgets);
extern void gtk_container_set_focus_child(GtkContainer * container,
					  GtkWidget * child);
extern void gtk_container_set_focus_hadjustment(GtkContainer * container,
						GtkAdjustment *
						adjustment);
extern void gtk_container_set_focus_vadjustment(GtkContainer * container,
						GtkAdjustment *
						adjustment);
extern void gtk_container_set_reallocate_redraws(GtkContainer * container,
						 gboolean needs_redraws);
extern void gtk_container_set_resize_mode(GtkContainer * container,
					  GtkResizeMode resize_mode);
extern void gtk_container_unset_focus_chain(GtkContainer * container);
extern GType gtk_corner_type_get_type(void);
extern GType gtk_curve_get_type(void);
extern void gtk_curve_get_vector(GtkCurve * curve, int veclen,
				 gfloat * vector);
extern GtkWidget *gtk_curve_new(void);
extern void gtk_curve_reset(GtkCurve * curve);
extern void gtk_curve_set_curve_type(GtkCurve * curve, GtkCurveType type);
extern void gtk_curve_set_gamma(GtkCurve * curve, gfloat gamma_);
extern void gtk_curve_set_range(GtkCurve * curve, gfloat min_x,
				gfloat max_x, gfloat min_y, gfloat max_y);
extern void gtk_curve_set_vector(GtkCurve * curve, int veclen,
				 gfloat * vector);
extern GType gtk_curve_type_get_type(void);
extern GType gtk_debug_flag_get_type(void);
extern guint gtk_debug_flags;
extern GType gtk_delete_type_get_type(void);
extern GType gtk_dest_defaults_get_type(void);
extern void gtk_dialog_add_action_widget(GtkDialog * dialog,
					 GtkWidget * child,
					 gint response_id);
extern GtkWidget *gtk_dialog_add_button(GtkDialog * dialog,
					const gchar * button_text,
					gint response_id);
extern void gtk_dialog_add_buttons(GtkDialog * dialog,
				   const gchar * first_button_text, ...);
extern GType gtk_dialog_flags_get_type(void);
extern gboolean gtk_dialog_get_has_separator(GtkDialog * dialog);
extern gint gtk_dialog_get_response_for_widget(GtkDialog * dialog,
					       GtkWidget * widget);
extern GType gtk_dialog_get_type(void);
extern GtkWidget *gtk_dialog_new(void);
extern GtkWidget *gtk_dialog_new_with_buttons(const gchar * title,
					      GtkWindow * parent,
					      GtkDialogFlags flags,
					      const gchar *
					      first_button_text, ...);
extern void gtk_dialog_response(GtkDialog * dialog, gint response_id);
extern gint gtk_dialog_run(GtkDialog * dialog);
extern void gtk_dialog_set_alternative_button_order(GtkDialog * dialog,
						    gint first_response_id,
						    ...);
extern void gtk_dialog_set_alternative_button_order_from_array(GtkDialog *
							       dialog,
							       gint
							       n_params,
							       gint *
							       new_order);
extern void gtk_dialog_set_default_response(GtkDialog * dialog,
					    gint response_id);
extern void gtk_dialog_set_has_separator(GtkDialog * dialog,
					 gboolean setting);
extern void gtk_dialog_set_response_sensitive(GtkDialog * dialog,
					      gint response_id,
					      gboolean setting);
extern GType gtk_direction_type_get_type(void);
extern void gtk_disable_setlocale(void);
extern GdkDragContext *gtk_drag_begin(GtkWidget * widget,
				      GtkTargetList * targets,
				      GdkDragAction actions, gint button,
				      GdkEvent * event);
extern gboolean gtk_drag_check_threshold(GtkWidget * widget, gint start_x,
					 gint start_y, gint current_x,
					 gint current_y);
extern void gtk_drag_dest_add_image_targets(GtkWidget * widget);
extern void gtk_drag_dest_add_text_targets(GtkWidget * widget);
extern void gtk_drag_dest_add_uri_targets(GtkWidget * widget);
extern GdkAtom gtk_drag_dest_find_target(GtkWidget * widget,
					 GdkDragContext * context,
					 GtkTargetList * target_list);
extern GtkTargetList *gtk_drag_dest_get_target_list(GtkWidget * widget);
extern gboolean gtk_drag_dest_get_track_motion(GtkWidget * widget);
extern void gtk_drag_dest_set(GtkWidget * widget, GtkDestDefaults flags,
			      const GtkTargetEntry * targets,
			      gint n_targets, GdkDragAction actions);
extern void gtk_drag_dest_set_proxy(GtkWidget * widget,
				    GdkWindow * proxy_window,
				    GdkDragProtocol protocol,
				    gboolean use_coordinates);
extern void gtk_drag_dest_set_target_list(GtkWidget * widget,
					  GtkTargetList * target_list);
extern void gtk_drag_dest_set_track_motion(GtkWidget * widget,
					   gboolean track_motion);
extern void gtk_drag_dest_unset(GtkWidget * widget);
extern void gtk_drag_finish(GdkDragContext * context, gboolean success,
			    gboolean del, guint32 time_);
extern void gtk_drag_get_data(GtkWidget * widget, GdkDragContext * context,
			      GdkAtom target, guint32 time_);
extern GtkWidget *gtk_drag_get_source_widget(GdkDragContext * context);
extern void gtk_drag_highlight(GtkWidget * widget);
extern void gtk_drag_set_icon_default(GdkDragContext * context);
extern void gtk_drag_set_icon_name(GdkDragContext * context,
				   const gchar * icon_name, gint hot_x,
				   gint hot_y);
extern void gtk_drag_set_icon_pixbuf(GdkDragContext * context,
				     GdkPixbuf * pixbuf, gint hot_x,
				     gint hot_y);
extern void gtk_drag_set_icon_pixmap(GdkDragContext * context,
				     GdkColormap * colormap,
				     GdkPixmap * pixmap, GdkBitmap * mask,
				     gint hot_x, gint hot_y);
extern void gtk_drag_set_icon_stock(GdkDragContext * context,
				    const gchar * stock_id, gint hot_x,
				    gint hot_y);
extern void gtk_drag_set_icon_widget(GdkDragContext * context,
				     GtkWidget * widget, gint hot_x,
				     gint hot_y);
extern void gtk_drag_source_add_image_targets(GtkWidget * widget);
extern void gtk_drag_source_add_text_targets(GtkWidget * widget);
extern void gtk_drag_source_add_uri_targets(GtkWidget * widget);
extern GtkTargetList *gtk_drag_source_get_target_list(GtkWidget * widget);
extern void gtk_drag_source_set(GtkWidget * widget,
				GdkModifierType start_button_mask,
				const GtkTargetEntry * targets,
				gint n_targets, GdkDragAction actions);
extern void gtk_drag_source_set_icon(GtkWidget * widget,
				     GdkColormap * colormap,
				     GdkPixmap * pixmap, GdkBitmap * mask);
extern void gtk_drag_source_set_icon_name(GtkWidget * widget,
					  const gchar * icon_name);
extern void gtk_drag_source_set_icon_pixbuf(GtkWidget * widget,
					    GdkPixbuf * pixbuf);
extern void gtk_drag_source_set_icon_stock(GtkWidget * widget,
					   const gchar * stock_id);
extern void gtk_drag_source_set_target_list(GtkWidget * widget,
					    GtkTargetList * target_list);
extern void gtk_drag_source_unset(GtkWidget * widget);
extern void gtk_drag_unhighlight(GtkWidget * widget);
extern void gtk_draw_insertion_cursor(GtkWidget * widget,
				      GdkDrawable * drawable,
				      const GdkRectangle * area,
				      const GdkRectangle * location,
				      gboolean is_primary,
				      GtkTextDirection direction,
				      gboolean draw_arrow);
extern GType gtk_drawing_area_get_type(void);
extern GtkWidget *gtk_drawing_area_new(void);
extern void gtk_editable_copy_clipboard(GtkEditable * editable);
extern void gtk_editable_cut_clipboard(GtkEditable * editable);
extern void gtk_editable_delete_selection(GtkEditable * editable);
extern void gtk_editable_delete_text(GtkEditable * editable,
				     gint start_pos, gint end_pos);
extern gchar *gtk_editable_get_chars(GtkEditable * editable,
				     gint start_pos, gint end_pos);
extern gboolean gtk_editable_get_editable(GtkEditable * editable);
extern gint gtk_editable_get_position(GtkEditable * editable);
extern gboolean gtk_editable_get_selection_bounds(GtkEditable * editable,
						  gint * start,
						  gint * end);
extern GType gtk_editable_get_type(void);
extern void gtk_editable_insert_text(GtkEditable * editable,
				     const gchar * new_text,
				     gint new_text_length,
				     gint * position);
extern void gtk_editable_paste_clipboard(GtkEditable * editable);
extern void gtk_editable_select_region(GtkEditable * editable, gint start,
				       gint end);
extern void gtk_editable_set_editable(GtkEditable * editable,
				      gboolean is_editable);
extern void gtk_editable_set_position(GtkEditable * editable,
				      gint position);
extern void gtk_entry_completion_complete(GtkEntryCompletion * completion);
extern void gtk_entry_completion_delete_action(GtkEntryCompletion *
					       completion, gint index_);
extern GtkWidget *gtk_entry_completion_get_entry(GtkEntryCompletion *
						 completion);
extern gboolean
gtk_entry_completion_get_inline_completion(GtkEntryCompletion *
					   completion);
extern gint gtk_entry_completion_get_minimum_key_length(GtkEntryCompletion
							* completion);
extern GtkTreeModel *gtk_entry_completion_get_model(GtkEntryCompletion *
						    completion);
extern gboolean
gtk_entry_completion_get_popup_completion(GtkEntryCompletion * completion);
extern gboolean gtk_entry_completion_get_popup_set_width(GtkEntryCompletion
							 * completion);
extern gboolean
gtk_entry_completion_get_popup_single_match(GtkEntryCompletion *
					    completion);
extern gint gtk_entry_completion_get_text_column(GtkEntryCompletion *
						 completion);
extern GType gtk_entry_completion_get_type(void);
extern void gtk_entry_completion_insert_action_markup(GtkEntryCompletion *
						      completion,
						      gint index_,
						      const gchar *
						      markup);
extern void gtk_entry_completion_insert_action_text(GtkEntryCompletion *
						    completion,
						    gint index_,
						    const gchar * text);
extern void gtk_entry_completion_insert_prefix(GtkEntryCompletion *
					       completion);
extern GtkEntryCompletion *gtk_entry_completion_new(void);
extern void gtk_entry_completion_set_inline_completion(GtkEntryCompletion *
						       completion,
						       gboolean
						       inline_completion);
extern void gtk_entry_completion_set_match_func(GtkEntryCompletion *
						completion,
						GtkEntryCompletionMatchFunc
						func, gpointer func_data,
						GDestroyNotify
						func_notify);
extern void gtk_entry_completion_set_minimum_key_length(GtkEntryCompletion
							* completion,
							gint length);
extern void gtk_entry_completion_set_model(GtkEntryCompletion * completion,
					   GtkTreeModel * model);
extern void gtk_entry_completion_set_popup_completion(GtkEntryCompletion *
						      completion,
						      gboolean
						      popup_completion);
extern void gtk_entry_completion_set_popup_set_width(GtkEntryCompletion *
						     completion,
						     gboolean
						     popup_set_width);
extern void gtk_entry_completion_set_popup_single_match(GtkEntryCompletion
							* completion,
							gboolean
							popup_single_match);
extern void gtk_entry_completion_set_text_column(GtkEntryCompletion *
						 completion, gint column);
extern gboolean gtk_entry_get_activates_default(GtkEntry * entry);
extern gfloat gtk_entry_get_alignment(GtkEntry * entry);
extern GtkEntryCompletion *gtk_entry_get_completion(GtkEntry * entry);
extern gboolean gtk_entry_get_has_frame(GtkEntry * entry);
extern const GtkBorder *gtk_entry_get_inner_border(GtkEntry * entry);
extern gunichar gtk_entry_get_invisible_char(GtkEntry * entry);
extern PangoLayout *gtk_entry_get_layout(GtkEntry * entry);
extern void gtk_entry_get_layout_offsets(GtkEntry * entry, gint * x,
					 gint * y);
extern gint gtk_entry_get_max_length(GtkEntry * entry);
extern const gchar *gtk_entry_get_text(GtkEntry * entry);
extern GType gtk_entry_get_type(void);
extern gboolean gtk_entry_get_visibility(GtkEntry * entry);
extern gint gtk_entry_get_width_chars(GtkEntry * entry);
extern gint gtk_entry_layout_index_to_text_index(GtkEntry * entry,
						 gint layout_index);
extern GtkWidget *gtk_entry_new(void);
extern void gtk_entry_set_activates_default(GtkEntry * entry,
					    gboolean setting);
extern void gtk_entry_set_alignment(GtkEntry * entry, gfloat xalign);
extern void gtk_entry_set_completion(GtkEntry * entry,
				     GtkEntryCompletion * completion);
extern void gtk_entry_set_has_frame(GtkEntry * entry, gboolean setting);
extern void gtk_entry_set_inner_border(GtkEntry * entry,
				       const GtkBorder * border);
extern void gtk_entry_set_invisible_char(GtkEntry * entry, gunichar ch);
extern void gtk_entry_set_max_length(GtkEntry * entry, gint max);
extern void gtk_entry_set_text(GtkEntry * entry, const gchar * text);
extern void gtk_entry_set_visibility(GtkEntry * entry, gboolean visible);
extern void gtk_entry_set_width_chars(GtkEntry * entry, gint n_chars);
extern gint gtk_entry_text_index_to_layout_index(GtkEntry * entry,
						 gint text_index);
extern gboolean gtk_event_box_get_above_child(GtkEventBox * event_box);
extern GType gtk_event_box_get_type(void);
extern gboolean gtk_event_box_get_visible_window(GtkEventBox * event_box);
extern GtkWidget *gtk_event_box_new(void);
extern void gtk_event_box_set_above_child(GtkEventBox * event_box,
					  gboolean above_child);
extern void gtk_event_box_set_visible_window(GtkEventBox * event_box,
					     gboolean visible_window);
extern gboolean gtk_events_pending(void);
extern gboolean gtk_expander_get_expanded(GtkExpander * expander);
extern const char *gtk_expander_get_label(GtkExpander * expander);
extern GtkWidget *gtk_expander_get_label_widget(GtkExpander * expander);
extern gint gtk_expander_get_spacing(GtkExpander * expander);
extern GType gtk_expander_get_type(void);
extern gboolean gtk_expander_get_use_markup(GtkExpander * expander);
extern gboolean gtk_expander_get_use_underline(GtkExpander * expander);
extern GtkWidget *gtk_expander_new(const gchar * label);
extern GtkWidget *gtk_expander_new_with_mnemonic(const gchar * label);
extern void gtk_expander_set_expanded(GtkExpander * expander,
				      gboolean expanded);
extern void gtk_expander_set_label(GtkExpander * expander,
				   const gchar * label);
extern void gtk_expander_set_label_widget(GtkExpander * expander,
					  GtkWidget * label_widget);
extern void gtk_expander_set_spacing(GtkExpander * expander, gint spacing);
extern void gtk_expander_set_use_markup(GtkExpander * expander,
					gboolean use_markup);
extern void gtk_expander_set_use_underline(GtkExpander * expander,
					   gboolean use_underline);
extern GType gtk_expander_style_get_type(void);
extern gboolean gtk_false(void);
extern GType gtk_file_chooser_action_get_type(void);
extern void gtk_file_chooser_add_filter(GtkFileChooser * chooser,
					GtkFileFilter * filter);
extern gboolean gtk_file_chooser_add_shortcut_folder(GtkFileChooser *
						     chooser,
						     const char *folder,
						     GError * *error);
extern gboolean gtk_file_chooser_add_shortcut_folder_uri(GtkFileChooser *
							 chooser,
							 const char *uri,
							 GError * *error);
extern gboolean
gtk_file_chooser_button_get_focus_on_click(GtkFileChooserButton * button);
extern const gchar *gtk_file_chooser_button_get_title(GtkFileChooserButton
						      * button);
extern GType gtk_file_chooser_button_get_type(void);
extern gint gtk_file_chooser_button_get_width_chars(GtkFileChooserButton *
						    button);
extern GtkWidget *gtk_file_chooser_button_new(const gchar * title,
					      GtkFileChooserAction action);
extern GtkWidget *gtk_file_chooser_button_new_with_backend(const gchar *
							   title,
							   GtkFileChooserAction
							   action,
							   const gchar *
							   backend);
extern GtkWidget *gtk_file_chooser_button_new_with_dialog(GtkWidget *
							  dialog);
extern void gtk_file_chooser_button_set_focus_on_click(GtkFileChooserButton
						       * button,
						       gboolean
						       focus_on_click);
extern void gtk_file_chooser_button_set_title(GtkFileChooserButton *
					      button, const gchar * title);
extern void gtk_file_chooser_button_set_width_chars(GtkFileChooserButton *
						    button, gint n_chars);
extern GType gtk_file_chooser_dialog_get_type(void);
extern GtkWidget *gtk_file_chooser_dialog_new(const gchar * title,
					      GtkWindow * parent,
					      GtkFileChooserAction action,
					      const gchar *
					      first_button_text, ...);
extern GtkWidget *gtk_file_chooser_dialog_new_with_backend(const gchar *
							   title,
							   GtkWindow *
							   parent,
							   GtkFileChooserAction
							   action,
							   const gchar *
							   backend,
							   const gchar *
							   first_button_text,
							   ...);
extern GType gtk_file_chooser_error_get_type(void);
extern GQuark gtk_file_chooser_error_quark(void);
extern GtkFileChooserAction gtk_file_chooser_get_action(GtkFileChooser *
							chooser);
extern gchar *gtk_file_chooser_get_current_folder(GtkFileChooser *
						  chooser);
extern gchar *gtk_file_chooser_get_current_folder_uri(GtkFileChooser *
						      chooser);
extern gboolean
gtk_file_chooser_get_do_overwrite_confirmation(GtkFileChooser * chooser);
extern GtkWidget *gtk_file_chooser_get_extra_widget(GtkFileChooser *
						    chooser);
extern gchar *gtk_file_chooser_get_filename(GtkFileChooser * chooser);
extern GSList *gtk_file_chooser_get_filenames(GtkFileChooser * chooser);
extern GtkFileFilter *gtk_file_chooser_get_filter(GtkFileChooser *
						  chooser);
extern gboolean gtk_file_chooser_get_local_only(GtkFileChooser * chooser);
extern char *gtk_file_chooser_get_preview_filename(GtkFileChooser *
						   chooser);
extern char *gtk_file_chooser_get_preview_uri(GtkFileChooser * chooser);
extern GtkWidget *gtk_file_chooser_get_preview_widget(GtkFileChooser *
						      chooser);
extern gboolean gtk_file_chooser_get_preview_widget_active(GtkFileChooser *
							   chooser);
extern gboolean gtk_file_chooser_get_select_multiple(GtkFileChooser *
						     chooser);
extern gboolean gtk_file_chooser_get_show_hidden(GtkFileChooser * chooser);
extern GType gtk_file_chooser_get_type(void);
extern gchar *gtk_file_chooser_get_uri(GtkFileChooser * chooser);
extern GSList *gtk_file_chooser_get_uris(GtkFileChooser * chooser);
extern gboolean gtk_file_chooser_get_use_preview_label(GtkFileChooser *
						       chooser);
extern GSList *gtk_file_chooser_list_filters(GtkFileChooser * chooser);
extern GSList *gtk_file_chooser_list_shortcut_folder_uris(GtkFileChooser *
							  chooser);
extern GSList *gtk_file_chooser_list_shortcut_folders(GtkFileChooser *
						      chooser);
extern void gtk_file_chooser_remove_filter(GtkFileChooser * chooser,
					   GtkFileFilter * filter);
extern gboolean gtk_file_chooser_remove_shortcut_folder(GtkFileChooser *
							chooser,
							const char *folder,
							GError * *error);
extern gboolean gtk_file_chooser_remove_shortcut_folder_uri(GtkFileChooser
							    * chooser,
							    const char
							    *uri,
							    GError *
							    *error);
extern void gtk_file_chooser_select_all(GtkFileChooser * chooser);
extern gboolean gtk_file_chooser_select_filename(GtkFileChooser * chooser,
						 const gchar * filename);
extern gboolean gtk_file_chooser_select_uri(GtkFileChooser * chooser,
					    const char *uri);
extern void gtk_file_chooser_set_action(GtkFileChooser * chooser,
					GtkFileChooserAction action);
extern gboolean gtk_file_chooser_set_current_folder(GtkFileChooser *
						    chooser,
						    const gchar *
						    filename);
extern gboolean gtk_file_chooser_set_current_folder_uri(GtkFileChooser *
							chooser,
							const gchar * uri);
extern void gtk_file_chooser_set_current_name(GtkFileChooser * chooser,
					      const gchar * name);
extern void gtk_file_chooser_set_do_overwrite_confirmation(GtkFileChooser *
							   chooser,
							   gboolean
							   do_overwrite_confirmation);
extern void gtk_file_chooser_set_extra_widget(GtkFileChooser * chooser,
					      GtkWidget * extra_widget);
extern gboolean gtk_file_chooser_set_filename(GtkFileChooser * chooser,
					      const gchar * filename);
extern void gtk_file_chooser_set_filter(GtkFileChooser * chooser,
					GtkFileFilter * filter);
extern void gtk_file_chooser_set_local_only(GtkFileChooser * chooser,
					    gboolean local_only);
extern void gtk_file_chooser_set_preview_widget(GtkFileChooser * chooser,
						GtkWidget *
						preview_widget);
extern void gtk_file_chooser_set_preview_widget_active(GtkFileChooser *
						       chooser,
						       gboolean active);
extern void gtk_file_chooser_set_select_multiple(GtkFileChooser * chooser,
						 gboolean select_multiple);
extern void gtk_file_chooser_set_show_hidden(GtkFileChooser * chooser,
					     gboolean show_hidden);
extern gboolean gtk_file_chooser_set_uri(GtkFileChooser * chooser,
					 const char *uri);
extern void gtk_file_chooser_set_use_preview_label(GtkFileChooser *
						   chooser,
						   gboolean use_label);
extern void gtk_file_chooser_unselect_all(GtkFileChooser * chooser);
extern void gtk_file_chooser_unselect_filename(GtkFileChooser * chooser,
					       const char *filename);
extern void gtk_file_chooser_unselect_uri(GtkFileChooser * chooser,
					  const char *uri);
extern GType gtk_file_chooser_widget_get_type(void);
extern GtkWidget *gtk_file_chooser_widget_new(GtkFileChooserAction action);
extern GtkWidget
    *gtk_file_chooser_widget_new_with_backend(GtkFileChooserAction action,
					      const gchar * backend);
extern void gtk_file_filter_add_custom(GtkFileFilter * filter,
				       GtkFileFilterFlags needed,
				       GtkFileFilterFunc func,
				       gpointer data,
				       GDestroyNotify notify);
extern void gtk_file_filter_add_mime_type(GtkFileFilter * filter,
					  const gchar * mime_type);
extern void gtk_file_filter_add_pattern(GtkFileFilter * filter,
					const gchar * pattern);
extern void gtk_file_filter_add_pixbuf_formats(GtkFileFilter * filter);
extern gboolean gtk_file_filter_filter(GtkFileFilter * filter,
				       const GtkFileFilterInfo *
				       filter_info);
extern GType gtk_file_filter_flags_get_type(void);
extern const gchar *gtk_file_filter_get_name(GtkFileFilter * filter);
extern GtkFileFilterFlags gtk_file_filter_get_needed(GtkFileFilter *
						     filter);
extern GType gtk_file_filter_get_type(void);
extern GtkFileFilter *gtk_file_filter_new(void);
extern void gtk_file_filter_set_name(GtkFileFilter * filter,
				     const gchar * name);
extern void gtk_file_selection_complete(GtkFileSelection * filesel,
					const gchar * pattern);
extern const gchar *gtk_file_selection_get_filename(GtkFileSelection *
						    filesel);
extern gboolean gtk_file_selection_get_select_multiple(GtkFileSelection *
						       filesel);
extern gchar **gtk_file_selection_get_selections(GtkFileSelection *
						 filesel);
extern GType gtk_file_selection_get_type(void);
extern void gtk_file_selection_hide_fileop_buttons(GtkFileSelection *
						   filesel);
extern GtkWidget *gtk_file_selection_new(const gchar * title);
extern void gtk_file_selection_set_filename(GtkFileSelection * filesel,
					    const gchar * filename);
extern void gtk_file_selection_set_select_multiple(GtkFileSelection *
						   filesel,
						   gboolean
						   select_multiple);
extern void gtk_file_selection_show_fileop_buttons(GtkFileSelection *
						   filesel);
extern gboolean gtk_fixed_get_has_window(GtkFixed * fixed);
extern GType gtk_fixed_get_type(void);
extern void gtk_fixed_move(GtkFixed * fixed, GtkWidget * widget, gint x,
			   gint y);
extern GtkWidget *gtk_fixed_new(void);
extern void gtk_fixed_put(GtkFixed * fixed, GtkWidget * widget, gint x,
			  gint y);
extern void gtk_fixed_set_has_window(GtkFixed * fixed,
				     gboolean has_window);
extern const gchar *gtk_font_button_get_font_name(GtkFontButton *
						  font_button);
extern gboolean gtk_font_button_get_show_size(GtkFontButton * font_button);
extern gboolean gtk_font_button_get_show_style(GtkFontButton *
					       font_button);
extern const gchar *gtk_font_button_get_title(GtkFontButton * font_button);
extern GType gtk_font_button_get_type(void);
extern gboolean gtk_font_button_get_use_font(GtkFontButton * font_button);
extern gboolean gtk_font_button_get_use_size(GtkFontButton * font_button);
extern GtkWidget *gtk_font_button_new(void);
extern GtkWidget *gtk_font_button_new_with_font(const gchar * fontname);
extern gboolean gtk_font_button_set_font_name(GtkFontButton * font_button,
					      const gchar * fontname);
extern void gtk_font_button_set_show_size(GtkFontButton * font_button,
					  gboolean show_size);
extern void gtk_font_button_set_show_style(GtkFontButton * font_button,
					   gboolean show_style);
extern void gtk_font_button_set_title(GtkFontButton * font_button,
				      const gchar * title);
extern void gtk_font_button_set_use_font(GtkFontButton * font_button,
					 gboolean use_font);
extern void gtk_font_button_set_use_size(GtkFontButton * font_button,
					 gboolean use_size);
extern gchar
    *gtk_font_selection_dialog_get_font_name(GtkFontSelectionDialog * fsd);
extern const gchar
    *gtk_font_selection_dialog_get_preview_text(GtkFontSelectionDialog *
						fsd);
extern GType gtk_font_selection_dialog_get_type(void);
extern GtkWidget *gtk_font_selection_dialog_new(const gchar * title);
extern gboolean
gtk_font_selection_dialog_set_font_name(GtkFontSelectionDialog * fsd,
					const gchar * fontname);
extern void
gtk_font_selection_dialog_set_preview_text(GtkFontSelectionDialog * fsd,
					   const gchar * text);
extern gchar *gtk_font_selection_get_font_name(GtkFontSelection * fontsel);
extern const gchar *gtk_font_selection_get_preview_text(GtkFontSelection *
							fontsel);
extern GType gtk_font_selection_get_type(void);
extern GtkWidget *gtk_font_selection_new(void);
extern gboolean gtk_font_selection_set_font_name(GtkFontSelection *
						 fontsel,
						 const gchar * fontname);
extern void gtk_font_selection_set_preview_text(GtkFontSelection * fontsel,
						const gchar * text);
extern const gchar *gtk_frame_get_label(GtkFrame * frame);
extern void gtk_frame_get_label_align(GtkFrame * frame, gfloat * xalign,
				      gfloat * yalign);
extern GtkWidget *gtk_frame_get_label_widget(GtkFrame * frame);
extern GtkShadowType gtk_frame_get_shadow_type(GtkFrame * frame);
extern GType gtk_frame_get_type(void);
extern GtkWidget *gtk_frame_new(const gchar * label);
extern void gtk_frame_set_label(GtkFrame * frame, const gchar * label);
extern void gtk_frame_set_label_align(GtkFrame * frame, gfloat xalign,
				      gfloat yalign);
extern void gtk_frame_set_label_widget(GtkFrame * frame,
				       GtkWidget * label_widget);
extern void gtk_frame_set_shadow_type(GtkFrame * frame,
				      GtkShadowType type);
extern GType gtk_gamma_curve_get_type(void);
extern GtkWidget *gtk_gamma_curve_new(void);
extern GdkGC *gtk_gc_get(gint depth, GdkColormap * colormap,
			 GdkGCValues * values,
			 GdkGCValuesMask values_mask);
extern void gtk_gc_release(GdkGC * gc);
extern GdkEvent *gtk_get_current_event(void);
extern gboolean gtk_get_current_event_state(GdkModifierType * state);
extern guint32 gtk_get_current_event_time(void);
extern PangoLanguage *gtk_get_default_language(void);
extern GtkWidget *gtk_get_event_widget(GdkEvent * event);
extern GOptionGroup *gtk_get_option_group(gboolean open_default_display);
extern void gtk_grab_add(GtkWidget * widget);
extern GtkWidget *gtk_grab_get_current(void);
extern void gtk_grab_remove(GtkWidget * widget);
extern GtkPositionType gtk_handle_box_get_handle_position(GtkHandleBox *
							  handle_box);
extern GtkShadowType gtk_handle_box_get_shadow_type(GtkHandleBox *
						    handle_box);
extern GtkPositionType gtk_handle_box_get_snap_edge(GtkHandleBox *
						    handle_box);
extern GType gtk_handle_box_get_type(void);
extern GtkWidget *gtk_handle_box_new(void);
extern void gtk_handle_box_set_handle_position(GtkHandleBox * handle_box,
					       GtkPositionType position);
extern void gtk_handle_box_set_shadow_type(GtkHandleBox * handle_box,
					   GtkShadowType type);
extern void gtk_handle_box_set_snap_edge(GtkHandleBox * handle_box,
					 GtkPositionType edge);
extern GType gtk_hbox_get_type(void);
extern GtkWidget *gtk_hbox_new(gboolean homogeneous, gint spacing);
extern GType gtk_hbutton_box_get_type(void);
extern GtkWidget *gtk_hbutton_box_new(void);
extern GType gtk_hpaned_get_type(void);
extern GtkWidget *gtk_hpaned_new(void);
extern GType gtk_hruler_get_type(void);
extern GtkWidget *gtk_hruler_new(void);
extern GType gtk_hscale_get_type(void);
extern GtkWidget *gtk_hscale_new(GtkAdjustment * adjustment);
extern GtkWidget *gtk_hscale_new_with_range(gdouble min, gdouble max,
					    gdouble step);
extern GType gtk_hscrollbar_get_type(void);
extern GtkWidget *gtk_hscrollbar_new(GtkAdjustment * adjustment);
extern GType gtk_hseparator_get_type(void);
extern GtkWidget *gtk_hseparator_new(void);
extern void gtk_icon_factory_add(GtkIconFactory * factory,
				 const gchar * stock_id,
				 GtkIconSet * icon_set);
extern void gtk_icon_factory_add_default(GtkIconFactory * factory);
extern GType gtk_icon_factory_get_type(void);
extern GtkIconSet *gtk_icon_factory_lookup(GtkIconFactory * factory,
					   const gchar * stock_id);
extern GtkIconSet *gtk_icon_factory_lookup_default(const gchar * stock_id);
extern GtkIconFactory *gtk_icon_factory_new(void);
extern void gtk_icon_factory_remove_default(GtkIconFactory * factory);
extern GtkIconInfo *gtk_icon_info_copy(GtkIconInfo * icon_info);
extern void gtk_icon_info_free(GtkIconInfo * icon_info);
extern gboolean gtk_icon_info_get_attach_points(GtkIconInfo * icon_info,
						GdkPoint * *points,
						gint * n_points);
extern gint gtk_icon_info_get_base_size(GtkIconInfo * icon_info);
extern GdkPixbuf *gtk_icon_info_get_builtin_pixbuf(GtkIconInfo *
						   icon_info);
extern const gchar *gtk_icon_info_get_display_name(GtkIconInfo *
						   icon_info);
extern gboolean gtk_icon_info_get_embedded_rect(GtkIconInfo * icon_info,
						GdkRectangle * rectangle);
extern const gchar *gtk_icon_info_get_filename(GtkIconInfo * icon_info);
extern GType gtk_icon_info_get_type(void);
extern GdkPixbuf *gtk_icon_info_load_icon(GtkIconInfo * icon_info,
					  GError * *error);
extern void gtk_icon_info_set_raw_coordinates(GtkIconInfo * icon_info,
					      gboolean raw_coordinates);
extern GType gtk_icon_lookup_flags_get_type(void);
extern void gtk_icon_set_add_source(GtkIconSet * icon_set,
				    const GtkIconSource * source);
extern GtkIconSet *gtk_icon_set_copy(GtkIconSet * icon_set);
extern void gtk_icon_set_get_sizes(GtkIconSet * icon_set,
				   GtkIconSize * *sizes, gint * n_sizes);
extern GType gtk_icon_set_get_type(void);
extern GtkIconSet *gtk_icon_set_new(void);
extern GtkIconSet *gtk_icon_set_new_from_pixbuf(GdkPixbuf * pixbuf);
extern GtkIconSet *gtk_icon_set_ref(GtkIconSet * icon_set);
extern GdkPixbuf *gtk_icon_set_render_icon(GtkIconSet * icon_set,
					   GtkStyle * style,
					   GtkTextDirection direction,
					   GtkStateType state,
					   GtkIconSize size,
					   GtkWidget * widget,
					   const char *detail);
extern void gtk_icon_set_unref(GtkIconSet * icon_set);
extern GtkIconSize gtk_icon_size_from_name(const gchar * name);
extern const gchar *gtk_icon_size_get_name(GtkIconSize size);
extern GType gtk_icon_size_get_type(void);
extern gboolean gtk_icon_size_lookup(GtkIconSize size, gint * width,
				     gint * height);
extern gboolean gtk_icon_size_lookup_for_settings(GtkSettings * settings,
						  GtkIconSize size,
						  gint * width,
						  gint * height);
extern GtkIconSize gtk_icon_size_register(const gchar * name, gint width,
					  gint height);
extern void gtk_icon_size_register_alias(const gchar * alias,
					 GtkIconSize target);
extern GtkIconSource *gtk_icon_source_copy(const GtkIconSource * source);
extern void gtk_icon_source_free(GtkIconSource * source);
extern GtkTextDirection gtk_icon_source_get_direction(const GtkIconSource *
						      source);
extern gboolean gtk_icon_source_get_direction_wildcarded(const
							 GtkIconSource *
							 source);
extern const gchar *gtk_icon_source_get_filename(const GtkIconSource *
						 source);
extern const gchar *gtk_icon_source_get_icon_name(const GtkIconSource *
						  source);
extern GdkPixbuf *gtk_icon_source_get_pixbuf(const GtkIconSource * source);
extern GtkIconSize gtk_icon_source_get_size(const GtkIconSource * source);
extern gboolean gtk_icon_source_get_size_wildcarded(const GtkIconSource *
						    source);
extern GtkStateType gtk_icon_source_get_state(const GtkIconSource *
					      source);
extern gboolean gtk_icon_source_get_state_wildcarded(const GtkIconSource *
						     source);
extern GType gtk_icon_source_get_type(void);
extern GtkIconSource *gtk_icon_source_new(void);
extern void gtk_icon_source_set_direction(GtkIconSource * source,
					  GtkTextDirection direction);
extern void gtk_icon_source_set_direction_wildcarded(GtkIconSource *
						     source,
						     gboolean setting);
extern void gtk_icon_source_set_filename(GtkIconSource * source,
					 const gchar * filename);
extern void gtk_icon_source_set_icon_name(GtkIconSource * source,
					  const gchar * icon_name);
extern void gtk_icon_source_set_pixbuf(GtkIconSource * source,
				       GdkPixbuf * pixbuf);
extern void gtk_icon_source_set_size(GtkIconSource * source,
				     GtkIconSize size);
extern void gtk_icon_source_set_size_wildcarded(GtkIconSource * source,
						gboolean setting);
extern void gtk_icon_source_set_state(GtkIconSource * source,
				      GtkStateType state);
extern void gtk_icon_source_set_state_wildcarded(GtkIconSource * source,
						 gboolean setting);
extern void gtk_icon_theme_add_builtin_icon(const gchar * icon_name,
					    gint size, GdkPixbuf * pixbuf);
extern void gtk_icon_theme_append_search_path(GtkIconTheme * icon_theme,
					      const gchar * path);
extern GType gtk_icon_theme_error_get_type(void);
extern GQuark gtk_icon_theme_error_quark(void);
extern GtkIconTheme *gtk_icon_theme_get_default(void);
extern char *gtk_icon_theme_get_example_icon_name(GtkIconTheme *
						  icon_theme);
extern GtkIconTheme *gtk_icon_theme_get_for_screen(GdkScreen * screen);
extern gint *gtk_icon_theme_get_icon_sizes(GtkIconTheme * icon_theme,
					   const char *icon_name);
extern void gtk_icon_theme_get_search_path(GtkIconTheme * icon_theme,
					   gchar * **path,
					   gint * n_elements);
extern GType gtk_icon_theme_get_type(void);
extern gboolean gtk_icon_theme_has_icon(GtkIconTheme * icon_theme,
					const char *icon_name);
extern GList *gtk_icon_theme_list_icons(GtkIconTheme * icon_theme,
					const char *context);
extern GdkPixbuf *gtk_icon_theme_load_icon(GtkIconTheme * icon_theme,
					   const gchar * icon_name,
					   gint size,
					   GtkIconLookupFlags flags,
					   GError * *error);
extern GtkIconInfo *gtk_icon_theme_lookup_icon(GtkIconTheme * icon_theme,
					       const gchar * icon_name,
					       gint size,
					       GtkIconLookupFlags flags);
extern GtkIconTheme *gtk_icon_theme_new(void);
extern void gtk_icon_theme_prepend_search_path(GtkIconTheme * icon_theme,
					       const gchar * path);
extern gboolean gtk_icon_theme_rescan_if_needed(GtkIconTheme * icon_theme);
extern void gtk_icon_theme_set_custom_theme(GtkIconTheme * icon_theme,
					    const gchar * theme_name);
extern void gtk_icon_theme_set_screen(GtkIconTheme * icon_theme,
				      GdkScreen * screen);
extern void gtk_icon_theme_set_search_path(GtkIconTheme * icon_theme,
					   const gchar * *path,
					   gint n_elements);
extern GdkPixmap *gtk_icon_view_create_drag_icon(GtkIconView * icon_view,
						 GtkTreePath * path);
extern void gtk_icon_view_enable_model_drag_dest(GtkIconView * icon_view,
						 const GtkTargetEntry *
						 targets, gint n_targets,
						 GdkDragAction actions);
extern void gtk_icon_view_enable_model_drag_source(GtkIconView * icon_view,
						   GdkModifierType
						   start_button_mask,
						   const GtkTargetEntry *
						   targets, gint n_targets,
						   GdkDragAction actions);
extern gint gtk_icon_view_get_column_spacing(GtkIconView * icon_view);
extern gint gtk_icon_view_get_columns(GtkIconView * icon_view);
extern gboolean gtk_icon_view_get_cursor(GtkIconView * icon_view,
					 GtkTreePath * *path,
					 GtkCellRenderer * *cell);
extern gboolean gtk_icon_view_get_dest_item_at_pos(GtkIconView * icon_view,
						   gint drag_x,
						   gint drag_y,
						   GtkTreePath * *path,
						   GtkIconViewDropPosition
						   * pos);
extern void gtk_icon_view_get_drag_dest_item(GtkIconView * icon_view,
					     GtkTreePath * *path,
					     GtkIconViewDropPosition *
					     pos);
extern gboolean gtk_icon_view_get_item_at_pos(GtkIconView * icon_view,
					      gint x, gint y,
					      GtkTreePath * *path,
					      GtkCellRenderer * *cell);
extern gint gtk_icon_view_get_item_width(GtkIconView * icon_view);
extern gint gtk_icon_view_get_margin(GtkIconView * icon_view);
extern gint gtk_icon_view_get_markup_column(GtkIconView * icon_view);
extern GtkTreeModel *gtk_icon_view_get_model(GtkIconView * icon_view);
extern GtkOrientation gtk_icon_view_get_orientation(GtkIconView *
						    icon_view);
extern GtkTreePath *gtk_icon_view_get_path_at_pos(GtkIconView * icon_view,
						  gint x, gint y);
extern gint gtk_icon_view_get_pixbuf_column(GtkIconView * icon_view);
extern gboolean gtk_icon_view_get_reorderable(GtkIconView * icon_view);
extern gint gtk_icon_view_get_row_spacing(GtkIconView * icon_view);
extern GList *gtk_icon_view_get_selected_items(GtkIconView * icon_view);
extern GtkSelectionMode gtk_icon_view_get_selection_mode(GtkIconView *
							 icon_view);
extern gint gtk_icon_view_get_spacing(GtkIconView * icon_view);
extern gint gtk_icon_view_get_text_column(GtkIconView * icon_view);
extern GType gtk_icon_view_get_type(void);
extern gboolean gtk_icon_view_get_visible_range(GtkIconView * icon_view,
						GtkTreePath * *start_path,
						GtkTreePath * *end_path);
extern void gtk_icon_view_item_activated(GtkIconView * icon_view,
					 GtkTreePath * path);
extern GtkWidget *gtk_icon_view_new(void);
extern GtkWidget *gtk_icon_view_new_with_model(GtkTreeModel * model);
extern gboolean gtk_icon_view_path_is_selected(GtkIconView * icon_view,
					       GtkTreePath * path);
extern void gtk_icon_view_scroll_to_path(GtkIconView * icon_view,
					 GtkTreePath * path,
					 gboolean use_align,
					 gfloat row_align,
					 gfloat col_align);
extern void gtk_icon_view_select_all(GtkIconView * icon_view);
extern void gtk_icon_view_select_path(GtkIconView * icon_view,
				      GtkTreePath * path);
extern void gtk_icon_view_selected_foreach(GtkIconView * icon_view,
					   GtkIconViewForeachFunc func,
					   gpointer data);
extern void gtk_icon_view_set_column_spacing(GtkIconView * icon_view,
					     gint column_spacing);
extern void gtk_icon_view_set_columns(GtkIconView * icon_view,
				      gint columns);
extern void gtk_icon_view_set_cursor(GtkIconView * icon_view,
				     GtkTreePath * path,
				     GtkCellRenderer * cell,
				     gboolean start_editing);
extern void gtk_icon_view_set_drag_dest_item(GtkIconView * icon_view,
					     GtkTreePath * path,
					     GtkIconViewDropPosition pos);
extern void gtk_icon_view_set_item_width(GtkIconView * icon_view,
					 gint item_width);
extern void gtk_icon_view_set_margin(GtkIconView * icon_view, gint margin);
extern void gtk_icon_view_set_markup_column(GtkIconView * icon_view,
					    gint column);
extern void gtk_icon_view_set_model(GtkIconView * icon_view,
				    GtkTreeModel * model);
extern void gtk_icon_view_set_orientation(GtkIconView * icon_view,
					  GtkOrientation orientation);
extern void gtk_icon_view_set_pixbuf_column(GtkIconView * icon_view,
					    gint column);
extern void gtk_icon_view_set_reorderable(GtkIconView * icon_view,
					  gboolean reorderable);
extern void gtk_icon_view_set_row_spacing(GtkIconView * icon_view,
					  gint row_spacing);
extern void gtk_icon_view_set_selection_mode(GtkIconView * icon_view,
					     GtkSelectionMode mode);
extern void gtk_icon_view_set_spacing(GtkIconView * icon_view,
				      gint spacing);
extern void gtk_icon_view_set_text_column(GtkIconView * icon_view,
					  gint column);
extern void gtk_icon_view_unselect_all(GtkIconView * icon_view);
extern void gtk_icon_view_unselect_path(GtkIconView * icon_view,
					GtkTreePath * path);
extern void gtk_icon_view_unset_model_drag_dest(GtkIconView * icon_view);
extern void gtk_icon_view_unset_model_drag_source(GtkIconView * icon_view);
extern GType gtk_identifier_get_type(void);
extern gboolean gtk_im_context_delete_surrounding(GtkIMContext * context,
						  gint offset,
						  gint n_chars);
extern gboolean gtk_im_context_filter_keypress(GtkIMContext * context,
					       GdkEventKey * event);
extern void gtk_im_context_focus_in(GtkIMContext * context);
extern void gtk_im_context_focus_out(GtkIMContext * context);
extern void gtk_im_context_get_preedit_string(GtkIMContext * context,
					      gchar * *str,
					      PangoAttrList * *attrs,
					      gint * cursor_pos);
extern gboolean gtk_im_context_get_surrounding(GtkIMContext * context,
					       gchar * *text,
					       gint * cursor_index);
extern GType gtk_im_context_get_type(void);
extern void gtk_im_context_reset(GtkIMContext * context);
extern void gtk_im_context_set_client_window(GtkIMContext * context,
					     GdkWindow * window);
extern void gtk_im_context_set_cursor_location(GtkIMContext * context,
					       const GdkRectangle * area);
extern void gtk_im_context_set_surrounding(GtkIMContext * context,
					   const gchar * text, gint len,
					   gint cursor_index);
extern void gtk_im_context_set_use_preedit(GtkIMContext * context,
					   gboolean use_preedit);
extern void gtk_im_context_simple_add_table(GtkIMContextSimple *
					    context_simple, guint16 * data,
					    gint max_seq_len, gint n_seqs);
extern GType gtk_im_context_simple_get_type(void);
extern GtkIMContext *gtk_im_context_simple_new(void);
extern void gtk_im_multicontext_append_menuitems(GtkIMMulticontext *
						 context,
						 GtkMenuShell * menushell);
extern GType gtk_im_multicontext_get_type(void);
extern GtkIMContext *gtk_im_multicontext_new(void);
extern GType gtk_im_preedit_style_get_type(void);
extern GType gtk_im_status_style_get_type(void);
extern void gtk_image_clear(GtkImage * image);
extern GdkPixbufAnimation *gtk_image_get_animation(GtkImage * image);
extern void gtk_image_get_icon_name(GtkImage * image,
				    const gchar * *icon_name,
				    GtkIconSize * size);
extern void gtk_image_get_icon_set(GtkImage * image,
				   GtkIconSet * *icon_set,
				   GtkIconSize * size);
extern void gtk_image_get_image(GtkImage * image, GdkImage * *gdk_image,
				GdkBitmap * *mask);
extern GdkPixbuf *gtk_image_get_pixbuf(GtkImage * image);
extern gint gtk_image_get_pixel_size(GtkImage * image);
extern void gtk_image_get_pixmap(GtkImage * image, GdkPixmap * *pixmap,
				 GdkBitmap * *mask);
extern void gtk_image_get_stock(GtkImage * image, gchar * *stock_id,
				GtkIconSize * size);
extern GtkImageType gtk_image_get_storage_type(GtkImage * image);
extern GType gtk_image_get_type(void);
extern GtkWidget *gtk_image_menu_item_get_image(GtkImageMenuItem *
						image_menu_item);
extern GType gtk_image_menu_item_get_type(void);
extern GtkWidget *gtk_image_menu_item_new(void);
extern GtkWidget *gtk_image_menu_item_new_from_stock(const gchar *
						     stock_id,
						     GtkAccelGroup *
						     accel_group);
extern GtkWidget *gtk_image_menu_item_new_with_label(const gchar * label);
extern GtkWidget *gtk_image_menu_item_new_with_mnemonic(const gchar *
							label);
extern void gtk_image_menu_item_set_image(GtkImageMenuItem *
					  image_menu_item,
					  GtkWidget * image);
extern GtkWidget *gtk_image_new(void);
extern GtkWidget *gtk_image_new_from_animation(GdkPixbufAnimation *
					       animation);
extern GtkWidget *gtk_image_new_from_file(const gchar * filename);
extern GtkWidget *gtk_image_new_from_icon_name(const gchar * icon_name,
					       GtkIconSize size);
extern GtkWidget *gtk_image_new_from_icon_set(GtkIconSet * icon_set,
					      GtkIconSize size);
extern GtkWidget *gtk_image_new_from_image(GdkImage * image,
					   GdkBitmap * mask);
extern GtkWidget *gtk_image_new_from_pixbuf(GdkPixbuf * pixbuf);
extern GtkWidget *gtk_image_new_from_pixmap(GdkPixmap * pixmap,
					    GdkBitmap * mask);
extern GtkWidget *gtk_image_new_from_stock(const gchar * stock_id,
					   GtkIconSize size);
extern void gtk_image_set_from_animation(GtkImage * image,
					 GdkPixbufAnimation * animation);
extern void gtk_image_set_from_file(GtkImage * image,
				    const gchar * filename);
extern void gtk_image_set_from_icon_name(GtkImage * image,
					 const gchar * icon_name,
					 GtkIconSize size);
extern void gtk_image_set_from_icon_set(GtkImage * image,
					GtkIconSet * icon_set,
					GtkIconSize size);
extern void gtk_image_set_from_image(GtkImage * image,
				     GdkImage * gdk_image,
				     GdkBitmap * mask);
extern void gtk_image_set_from_pixbuf(GtkImage * image,
				      GdkPixbuf * pixbuf);
extern void gtk_image_set_from_pixmap(GtkImage * image, GdkPixmap * pixmap,
				      GdkBitmap * mask);
extern void gtk_image_set_from_stock(GtkImage * image,
				     const gchar * stock_id,
				     GtkIconSize size);
extern void gtk_image_set_pixel_size(GtkImage * image, gint pixel_size);
extern GType gtk_image_type_get_type(void);
extern void gtk_init(int *argc, char ***argv);
extern void gtk_init_add(GtkFunction function, gpointer data);
extern gboolean gtk_init_check(int *argc, char ***argv);
extern gboolean gtk_init_with_args(int *argc, char ***argv,
				   const char *parameter_string,
				   GOptionEntry * entries,
				   const char *translation_domain,
				   GError * *error);
extern GType gtk_input_dialog_get_type(void);
extern GtkWidget *gtk_input_dialog_new(void);
extern const guint gtk_interface_age;
extern GdkScreen *gtk_invisible_get_screen(GtkInvisible * invisible);
extern GType gtk_invisible_get_type(void);
extern GtkWidget *gtk_invisible_new(void);
extern GtkWidget *gtk_invisible_new_for_screen(GdkScreen * screen);
extern void gtk_invisible_set_screen(GtkInvisible * invisible,
				     GdkScreen * screen);
extern void gtk_item_deselect(GtkItem * item);
extern GType gtk_item_get_type(void);
extern void gtk_item_select(GtkItem * item);
extern void gtk_item_toggle(GtkItem * item);
extern GType gtk_justification_get_type(void);
extern guint gtk_key_snooper_install(GtkKeySnoopFunc snooper,
				     gpointer func_data);
extern void gtk_key_snooper_remove(guint snooper_handler_id);
extern gdouble gtk_label_get_angle(GtkLabel * label);
extern PangoAttrList *gtk_label_get_attributes(GtkLabel * label);
extern PangoEllipsizeMode gtk_label_get_ellipsize(GtkLabel * label);
extern GtkJustification gtk_label_get_justify(GtkLabel * label);
extern const gchar *gtk_label_get_label(GtkLabel * label);
extern PangoLayout *gtk_label_get_layout(GtkLabel * label);
extern void gtk_label_get_layout_offsets(GtkLabel * label, gint * x,
					 gint * y);
extern gboolean gtk_label_get_line_wrap(GtkLabel * label);
extern PangoWrapMode gtk_label_get_line_wrap_mode(GtkLabel * label);
extern gint gtk_label_get_max_width_chars(GtkLabel * label);
extern guint gtk_label_get_mnemonic_keyval(GtkLabel * label);
extern GtkWidget *gtk_label_get_mnemonic_widget(GtkLabel * label);
extern gboolean gtk_label_get_selectable(GtkLabel * label);
extern gboolean gtk_label_get_selection_bounds(GtkLabel * label,
					       gint * start, gint * end);
extern gboolean gtk_label_get_single_line_mode(GtkLabel * label);
extern const gchar *gtk_label_get_text(GtkLabel * label);
extern GType gtk_label_get_type(void);
extern gboolean gtk_label_get_use_markup(GtkLabel * label);
extern gboolean gtk_label_get_use_underline(GtkLabel * label);
extern gint gtk_label_get_width_chars(GtkLabel * label);
extern GtkWidget *gtk_label_new(const gchar * str);
extern GtkWidget *gtk_label_new_with_mnemonic(const gchar * str);
extern void gtk_label_select_region(GtkLabel * label, gint start_offset,
				    gint end_offset);
extern void gtk_label_set_angle(GtkLabel * label, gdouble angle);
extern void gtk_label_set_attributes(GtkLabel * label,
				     PangoAttrList * attrs);
extern void gtk_label_set_ellipsize(GtkLabel * label,
				    PangoEllipsizeMode mode);
extern void gtk_label_set_justify(GtkLabel * label,
				  GtkJustification jtype);
extern void gtk_label_set_label(GtkLabel * label, const gchar * str);
extern void gtk_label_set_line_wrap(GtkLabel * label, gboolean wrap);
extern void gtk_label_set_line_wrap_mode(GtkLabel * label,
					 PangoWrapMode wrap_mode);
extern void gtk_label_set_markup(GtkLabel * label, const gchar * str);
extern void gtk_label_set_markup_with_mnemonic(GtkLabel * label,
					       const gchar * str);
extern void gtk_label_set_max_width_chars(GtkLabel * label, gint n_chars);
extern void gtk_label_set_mnemonic_widget(GtkLabel * label,
					  GtkWidget * widget);
extern void gtk_label_set_pattern(GtkLabel * label, const gchar * pattern);
extern void gtk_label_set_selectable(GtkLabel * label, gboolean setting);
extern void gtk_label_set_single_line_mode(GtkLabel * label,
					   gboolean single_line_mode);
extern void gtk_label_set_text(GtkLabel * label, const gchar * str);
extern void gtk_label_set_text_with_mnemonic(GtkLabel * label,
					     const gchar * str);
extern void gtk_label_set_use_markup(GtkLabel * label, gboolean setting);
extern void gtk_label_set_use_underline(GtkLabel * label,
					gboolean setting);
extern void gtk_label_set_width_chars(GtkLabel * label, gint n_chars);
extern GtkAdjustment *gtk_layout_get_hadjustment(GtkLayout * layout);
extern void gtk_layout_get_size(GtkLayout * layout, guint * width,
				guint * height);
extern GType gtk_layout_get_type(void);
extern GtkAdjustment *gtk_layout_get_vadjustment(GtkLayout * layout);
extern void gtk_layout_move(GtkLayout * layout, GtkWidget * child_widget,
			    gint x, gint y);
extern GtkWidget *gtk_layout_new(GtkAdjustment * hadjustment,
				 GtkAdjustment * vadjustment);
extern void gtk_layout_put(GtkLayout * layout, GtkWidget * child_widget,
			   gint x, gint y);
extern void gtk_layout_set_hadjustment(GtkLayout * layout,
				       GtkAdjustment * adjustment);
extern void gtk_layout_set_size(GtkLayout * layout, guint width,
				guint height);
extern void gtk_layout_set_vadjustment(GtkLayout * layout,
				       GtkAdjustment * adjustment);
extern GType gtk_link_button_get_type(void);
extern const char *gtk_link_button_get_uri(GtkLinkButton * link_button);
extern GtkWidget *gtk_link_button_new(const char *uri);
extern GtkWidget *gtk_link_button_new_with_label(const char *uri,
						 const char *label);
extern void gtk_link_button_set_uri(GtkLinkButton * link_button,
				    const char *uri);
extern GtkLinkButtonUriFunc
gtk_link_button_set_uri_hook(GtkLinkButtonUriFunc func, gpointer data,
			     GDestroyNotify destroy);
extern void gtk_list_store_append(GtkListStore * list_store,
				  GtkTreeIter * iter);
extern void gtk_list_store_clear(GtkListStore * list_store);
extern GType gtk_list_store_get_type(void);
extern void gtk_list_store_insert(GtkListStore * list_store,
				  GtkTreeIter * iter, gint position);
extern void gtk_list_store_insert_after(GtkListStore * list_store,
					GtkTreeIter * iter,
					GtkTreeIter * sibling);
extern void gtk_list_store_insert_before(GtkListStore * list_store,
					 GtkTreeIter * iter,
					 GtkTreeIter * sibling);
extern void gtk_list_store_insert_with_values(GtkListStore * list_store,
					      GtkTreeIter * iter,
					      gint position, ...);
extern void gtk_list_store_insert_with_valuesv(GtkListStore * list_store,
					       GtkTreeIter * iter,
					       gint position,
					       gint * columns,
					       GValue * values,
					       gint n_values);
extern gboolean gtk_list_store_iter_is_valid(GtkListStore * list_store,
					     GtkTreeIter * iter);
extern void gtk_list_store_move_after(GtkListStore * store,
				      GtkTreeIter * iter,
				      GtkTreeIter * position);
extern void gtk_list_store_move_before(GtkListStore * store,
				       GtkTreeIter * iter,
				       GtkTreeIter * position);
extern GtkListStore *gtk_list_store_new(gint n_columns, ...);
extern GtkListStore *gtk_list_store_newv(gint n_columns, GType * types);
extern void gtk_list_store_prepend(GtkListStore * list_store,
				   GtkTreeIter * iter);
extern gboolean gtk_list_store_remove(GtkListStore * list_store,
				      GtkTreeIter * iter);
extern void gtk_list_store_reorder(GtkListStore * store, gint * new_order);
extern void gtk_list_store_set(GtkListStore * list_store,
			       GtkTreeIter * iter, ...);
extern void gtk_list_store_set_column_types(GtkListStore * list_store,
					    gint n_columns, GType * types);
extern void gtk_list_store_set_valist(GtkListStore * list_store,
				      GtkTreeIter * iter,
				      va_list var_args);
extern void gtk_list_store_set_value(GtkListStore * list_store,
				     GtkTreeIter * iter, gint column,
				     GValue * value);
extern void gtk_list_store_swap(GtkListStore * store, GtkTreeIter * a,
				GtkTreeIter * b);
extern void gtk_main(void);
extern void gtk_main_do_event(GdkEvent * event);
extern gboolean gtk_main_iteration(void);
extern gboolean gtk_main_iteration_do(gboolean blocking);
extern guint gtk_main_level(void);
extern void gtk_main_quit(void);
extern const guint gtk_major_version;
extern GType gtk_match_type_get_type(void);
extern void gtk_menu_attach(GtkMenu * menu, GtkWidget * child,
			    guint left_attach, guint right_attach,
			    guint top_attach, guint bottom_attach);
extern void gtk_menu_attach_to_widget(GtkMenu * menu,
				      GtkWidget * attach_widget,
				      GtkMenuDetachFunc detacher);
extern GtkPackDirection gtk_menu_bar_get_child_pack_direction(GtkMenuBar *
							      menubar);
extern GtkPackDirection gtk_menu_bar_get_pack_direction(GtkMenuBar *
							menubar);
extern GType gtk_menu_bar_get_type(void);
extern GtkWidget *gtk_menu_bar_new(void);
extern void gtk_menu_bar_set_child_pack_direction(GtkMenuBar * menubar,
						  GtkPackDirection
						  child_pack_dir);
extern void gtk_menu_bar_set_pack_direction(GtkMenuBar * menubar,
					    GtkPackDirection pack_dir);
extern void gtk_menu_detach(GtkMenu * menu);
extern GType gtk_menu_direction_type_get_type(void);
extern GtkAccelGroup *gtk_menu_get_accel_group(GtkMenu * menu);
extern GtkWidget *gtk_menu_get_active(GtkMenu * menu);
extern GtkWidget *gtk_menu_get_attach_widget(GtkMenu * menu);
extern GList *gtk_menu_get_for_attach_widget(GtkWidget * widget);
extern gboolean gtk_menu_get_tearoff_state(GtkMenu * menu);
extern const gchar *gtk_menu_get_title(GtkMenu * menu);
extern GType gtk_menu_get_type(void);
extern void gtk_menu_item_activate(GtkMenuItem * menu_item);
extern void gtk_menu_item_deselect(GtkMenuItem * menu_item);
extern gboolean gtk_menu_item_get_right_justified(GtkMenuItem * menu_item);
extern GtkWidget *gtk_menu_item_get_submenu(GtkMenuItem * menu_item);
extern GType gtk_menu_item_get_type(void);
extern GtkWidget *gtk_menu_item_new(void);
extern GtkWidget *gtk_menu_item_new_with_label(const gchar * label);
extern GtkWidget *gtk_menu_item_new_with_mnemonic(const gchar * label);
extern void gtk_menu_item_remove_submenu(GtkMenuItem * menu_item);
extern void gtk_menu_item_select(GtkMenuItem * menu_item);
extern void gtk_menu_item_set_accel_path(GtkMenuItem * menu_item,
					 const gchar * accel_path);
extern void gtk_menu_item_set_right_justified(GtkMenuItem * menu_item,
					      gboolean right_justified);
extern void gtk_menu_item_set_submenu(GtkMenuItem * menu_item,
				      GtkWidget * submenu);
extern void gtk_menu_item_toggle_size_allocate(GtkMenuItem * menu_item,
					       gint allocation);
extern void gtk_menu_item_toggle_size_request(GtkMenuItem * menu_item,
					      gint * requisition);
extern GtkWidget *gtk_menu_new(void);
extern void gtk_menu_popdown(GtkMenu * menu);
extern void gtk_menu_popup(GtkMenu * menu, GtkWidget * parent_menu_shell,
			   GtkWidget * parent_menu_item,
			   GtkMenuPositionFunc func, gpointer data,
			   guint button, guint32 activate_time);
extern void gtk_menu_reorder_child(GtkMenu * menu, GtkWidget * child,
				   gint position);
extern void gtk_menu_reposition(GtkMenu * menu);
extern void gtk_menu_set_accel_group(GtkMenu * menu,
				     GtkAccelGroup * accel_group);
extern void gtk_menu_set_accel_path(GtkMenu * menu,
				    const gchar * accel_path);
extern void gtk_menu_set_active(GtkMenu * menu, guint index_);
extern void gtk_menu_set_monitor(GtkMenu * menu, gint monitor_num);
extern void gtk_menu_set_screen(GtkMenu * menu, GdkScreen * screen);
extern void gtk_menu_set_tearoff_state(GtkMenu * menu, gboolean torn_off);
extern void gtk_menu_set_title(GtkMenu * menu, const gchar * title);
extern void gtk_menu_shell_activate_item(GtkMenuShell * menu_shell,
					 GtkWidget * menu_item,
					 gboolean force_deactivate);
extern void gtk_menu_shell_append(GtkMenuShell * menu_shell,
				  GtkWidget * child);
extern void gtk_menu_shell_cancel(GtkMenuShell * menu_shell);
extern void gtk_menu_shell_deactivate(GtkMenuShell * menu_shell);
extern void gtk_menu_shell_deselect(GtkMenuShell * menu_shell);
extern gboolean gtk_menu_shell_get_take_focus(GtkMenuShell * menu_shell);
extern GType gtk_menu_shell_get_type(void);
extern void gtk_menu_shell_insert(GtkMenuShell * menu_shell,
				  GtkWidget * child, gint position);
extern void gtk_menu_shell_prepend(GtkMenuShell * menu_shell,
				   GtkWidget * child);
extern void gtk_menu_shell_select_first(GtkMenuShell * menu_shell,
					gboolean search_sensitive);
extern void gtk_menu_shell_select_item(GtkMenuShell * menu_shell,
				       GtkWidget * menu_item);
extern void gtk_menu_shell_set_take_focus(GtkMenuShell * menu_shell,
					  gboolean take_focus);
extern GtkWidget *gtk_menu_tool_button_get_menu(GtkMenuToolButton *
						button);
extern GType gtk_menu_tool_button_get_type(void);
extern GtkToolItem *gtk_menu_tool_button_new(GtkWidget * icon_widget,
					     const gchar * label);
extern GtkToolItem *gtk_menu_tool_button_new_from_stock(const gchar *
							stock_id);
extern void gtk_menu_tool_button_set_arrow_tooltip(GtkMenuToolButton *
						   button,
						   GtkTooltips * tooltips,
						   const gchar * tip_text,
						   const gchar *
						   tip_private);
extern void gtk_menu_tool_button_set_menu(GtkMenuToolButton * button,
					  GtkWidget * menu);
extern void gtk_message_dialog_format_secondary_markup(GtkMessageDialog *
						       message_dialog,
						       const gchar *
						       message_format,
						       ...);
extern void gtk_message_dialog_format_secondary_text(GtkMessageDialog *
						     message_dialog,
						     const gchar *
						     message_format, ...);
extern GType gtk_message_dialog_get_type(void);
extern GtkWidget *gtk_message_dialog_new(GtkWindow * parent,
					 GtkDialogFlags flags,
					 GtkMessageType type,
					 GtkButtonsType buttons,
					 const gchar * message_format,
					 ...);
extern GtkWidget *gtk_message_dialog_new_with_markup(GtkWindow * parent,
						     GtkDialogFlags flags,
						     GtkMessageType type,
						     GtkButtonsType
						     buttons,
						     const gchar *
						     message_format, ...);
extern void gtk_message_dialog_set_image(GtkMessageDialog * dialog,
					 GtkWidget * image);
extern void gtk_message_dialog_set_markup(GtkMessageDialog *
					  message_dialog,
					  const gchar * str);
extern GType gtk_message_type_get_type(void);
extern GType gtk_metric_type_get_type(void);
extern const guint gtk_micro_version;
extern const guint gtk_minor_version;
extern void gtk_misc_get_alignment(GtkMisc * misc, gfloat * xalign,
				   gfloat * yalign);
extern void gtk_misc_get_padding(GtkMisc * misc, gint * xpad, gint * ypad);
extern GType gtk_misc_get_type(void);
extern void gtk_misc_set_alignment(GtkMisc * misc, gfloat xalign,
				   gfloat yalign);
extern void gtk_misc_set_padding(GtkMisc * misc, gint xpad, gint ypad);
extern GType gtk_movement_step_get_type(void);
extern gint gtk_notebook_append_page(GtkNotebook * notebook,
				     GtkWidget * child,
				     GtkWidget * tab_label);
extern gint gtk_notebook_append_page_menu(GtkNotebook * notebook,
					  GtkWidget * child,
					  GtkWidget * tab_label,
					  GtkWidget * menu_label);
extern gint gtk_notebook_get_current_page(GtkNotebook * notebook);
extern GtkWidget *gtk_notebook_get_menu_label(GtkNotebook * notebook,
					      GtkWidget * child);
extern const gchar *gtk_notebook_get_menu_label_text(GtkNotebook *
						     notebook,
						     GtkWidget * child);
extern gint gtk_notebook_get_n_pages(GtkNotebook * notebook);
extern GtkWidget *gtk_notebook_get_nth_page(GtkNotebook * notebook,
					    gint page_num);
extern gboolean gtk_notebook_get_scrollable(GtkNotebook * notebook);
extern gboolean gtk_notebook_get_show_border(GtkNotebook * notebook);
extern gboolean gtk_notebook_get_show_tabs(GtkNotebook * notebook);
extern gboolean gtk_notebook_get_tab_detachable(GtkNotebook * notebook,
						GtkWidget * child);
extern GtkWidget *gtk_notebook_get_tab_label(GtkNotebook * notebook,
					     GtkWidget * child);
extern const gchar *gtk_notebook_get_tab_label_text(GtkNotebook * notebook,
						    GtkWidget * child);
extern GtkPositionType gtk_notebook_get_tab_pos(GtkNotebook * notebook);
extern gboolean gtk_notebook_get_tab_reorderable(GtkNotebook * notebook,
						 GtkWidget * child);
extern GType gtk_notebook_get_type(void);
extern gint gtk_notebook_insert_page(GtkNotebook * notebook,
				     GtkWidget * child,
				     GtkWidget * tab_label, gint position);
extern gint gtk_notebook_insert_page_menu(GtkNotebook * notebook,
					  GtkWidget * child,
					  GtkWidget * tab_label,
					  GtkWidget * menu_label,
					  gint position);
extern GtkWidget *gtk_notebook_new(void);
extern void gtk_notebook_next_page(GtkNotebook * notebook);
extern gint gtk_notebook_page_num(GtkNotebook * notebook,
				  GtkWidget * child);
extern void gtk_notebook_popup_disable(GtkNotebook * notebook);
extern void gtk_notebook_popup_enable(GtkNotebook * notebook);
extern gint gtk_notebook_prepend_page(GtkNotebook * notebook,
				      GtkWidget * child,
				      GtkWidget * tab_label);
extern gint gtk_notebook_prepend_page_menu(GtkNotebook * notebook,
					   GtkWidget * child,
					   GtkWidget * tab_label,
					   GtkWidget * menu_label);
extern void gtk_notebook_prev_page(GtkNotebook * notebook);
extern void gtk_notebook_query_tab_label_packing(GtkNotebook * notebook,
						 GtkWidget * child,
						 gboolean * expand,
						 gboolean * fill,
						 GtkPackType * pack_type);
extern void gtk_notebook_remove_page(GtkNotebook * notebook,
				     gint page_num);
extern void gtk_notebook_reorder_child(GtkNotebook * notebook,
				       GtkWidget * child, gint position);
extern void gtk_notebook_set_current_page(GtkNotebook * notebook,
					  gint page_num);
extern void gtk_notebook_set_menu_label(GtkNotebook * notebook,
					GtkWidget * child,
					GtkWidget * menu_label);
extern void gtk_notebook_set_menu_label_text(GtkNotebook * notebook,
					     GtkWidget * child,
					     const gchar * menu_text);
extern void gtk_notebook_set_scrollable(GtkNotebook * notebook,
					gboolean scrollable);
extern void gtk_notebook_set_show_border(GtkNotebook * notebook,
					 gboolean show_border);
extern void gtk_notebook_set_show_tabs(GtkNotebook * notebook,
				       gboolean show_tabs);
extern void gtk_notebook_set_tab_detachable(GtkNotebook * notebook,
					    GtkWidget * child,
					    gboolean detachable);
extern void gtk_notebook_set_tab_label(GtkNotebook * notebook,
				       GtkWidget * child,
				       GtkWidget * tab_label);
extern void gtk_notebook_set_tab_label_packing(GtkNotebook * notebook,
					       GtkWidget * child,
					       gboolean expand,
					       gboolean fill,
					       GtkPackType pack_type);
extern void gtk_notebook_set_tab_label_text(GtkNotebook * notebook,
					    GtkWidget * child,
					    const gchar * tab_text);
extern void gtk_notebook_set_tab_pos(GtkNotebook * notebook,
				     GtkPositionType pos);
extern void gtk_notebook_set_tab_reorderable(GtkNotebook * notebook,
					     GtkWidget * child,
					     gboolean reorderable);
extern void
gtk_notebook_set_window_creation_hook(GtkNotebookWindowCreationFunc func,
				      gpointer data,
				      GDestroyNotify destroy);
extern GType gtk_notebook_tab_get_type(void);
extern void gtk_object_destroy(GtkObject * object);
extern GType gtk_object_flags_get_type(void);
extern long unsigned int gtk_object_get_type(void);
extern void gtk_object_sink(GtkObject * object);
extern GType gtk_orientation_get_type(void);
extern GType gtk_pack_direction_get_type(void);
extern GType gtk_pack_type_get_type(void);
extern GType gtk_page_orientation_get_type(void);
extern GType gtk_page_set_get_type(void);
extern GtkPageSetup *gtk_page_setup_copy(GtkPageSetup * other);
extern gdouble gtk_page_setup_get_bottom_margin(GtkPageSetup * setup,
						GtkUnit unit);
extern gdouble gtk_page_setup_get_left_margin(GtkPageSetup * setup,
					      GtkUnit unit);
extern GtkPageOrientation gtk_page_setup_get_orientation(GtkPageSetup *
							 setup);
extern gdouble gtk_page_setup_get_page_height(GtkPageSetup * setup,
					      GtkUnit unit);
extern gdouble gtk_page_setup_get_page_width(GtkPageSetup * setup,
					     GtkUnit unit);
extern gdouble gtk_page_setup_get_paper_height(GtkPageSetup * setup,
					       GtkUnit unit);
extern GtkPaperSize *gtk_page_setup_get_paper_size(GtkPageSetup * setup);
extern gdouble gtk_page_setup_get_paper_width(GtkPageSetup * setup,
					      GtkUnit unit);
extern gdouble gtk_page_setup_get_right_margin(GtkPageSetup * setup,
					       GtkUnit unit);
extern gdouble gtk_page_setup_get_top_margin(GtkPageSetup * setup,
					     GtkUnit unit);
extern GType gtk_page_setup_get_type(void);
extern GtkPageSetup *gtk_page_setup_new(void);
extern void gtk_page_setup_set_bottom_margin(GtkPageSetup * setup,
					     gdouble margin, GtkUnit unit);
extern void gtk_page_setup_set_left_margin(GtkPageSetup * setup,
					   gdouble margin, GtkUnit unit);
extern void gtk_page_setup_set_orientation(GtkPageSetup * setup,
					   GtkPageOrientation orientation);
extern void gtk_page_setup_set_paper_size(GtkPageSetup * setup,
					  GtkPaperSize * size);
extern void gtk_page_setup_set_paper_size_and_default_margins(GtkPageSetup
							      * setup,
							      GtkPaperSize
							      * size);
extern void gtk_page_setup_set_right_margin(GtkPageSetup * setup,
					    gdouble margin, GtkUnit unit);
extern void gtk_page_setup_set_top_margin(GtkPageSetup * setup,
					  gdouble margin, GtkUnit unit);
extern void gtk_paint_arrow(GtkStyle * style, GdkWindow * window,
			    GtkStateType state_type,
			    GtkShadowType shadow_type,
			    const GdkRectangle * area, GtkWidget * widget,
			    const gchar * detail, GtkArrowType arrow_type,
			    gboolean fill, gint x, gint y, gint width,
			    gint height);
extern void gtk_paint_box(GtkStyle * style, GdkWindow * window,
			  GtkStateType state_type,
			  GtkShadowType shadow_type,
			  const GdkRectangle * area, GtkWidget * widget,
			  const gchar * detail, gint x, gint y, gint width,
			  gint height);
extern void gtk_paint_box_gap(GtkStyle * style, GdkWindow * window,
			      GtkStateType state_type,
			      GtkShadowType shadow_type,
			      const GdkRectangle * area,
			      GtkWidget * widget, const gchar * detail,
			      gint x, gint y, gint width, gint height,
			      GtkPositionType gap_side, gint gap_x,
			      gint gap_width);
extern void gtk_paint_check(GtkStyle * style, GdkWindow * window,
			    GtkStateType state_type,
			    GtkShadowType shadow_type,
			    const GdkRectangle * area, GtkWidget * widget,
			    const gchar * detail, gint x, gint y,
			    gint width, gint height);
extern void gtk_paint_diamond(GtkStyle * style, GdkWindow * window,
			      GtkStateType state_type,
			      GtkShadowType shadow_type,
			      const GdkRectangle * area,
			      GtkWidget * widget, const gchar * detail,
			      gint x, gint y, gint width, gint height);
extern void gtk_paint_expander(GtkStyle * style, GdkWindow * window,
			       GtkStateType state_type,
			       const GdkRectangle * area,
			       GtkWidget * widget, const gchar * detail,
			       gint x, gint y,
			       GtkExpanderStyle expander_style);
extern void gtk_paint_extension(GtkStyle * style, GdkWindow * window,
				GtkStateType state_type,
				GtkShadowType shadow_type,
				const GdkRectangle * area,
				GtkWidget * widget, const gchar * detail,
				gint x, gint y, gint width, gint height,
				GtkPositionType gap_side);
extern void gtk_paint_flat_box(GtkStyle * style, GdkWindow * window,
			       GtkStateType state_type,
			       GtkShadowType shadow_type,
			       const GdkRectangle * area,
			       GtkWidget * widget, const gchar * detail,
			       gint x, gint y, gint width, gint height);
extern void gtk_paint_focus(GtkStyle * style, GdkWindow * window,
			    GtkStateType state_type,
			    const GdkRectangle * area, GtkWidget * widget,
			    const gchar * detail, gint x, gint y,
			    gint width, gint height);
extern void gtk_paint_handle(GtkStyle * style, GdkWindow * window,
			     GtkStateType state_type,
			     GtkShadowType shadow_type,
			     const GdkRectangle * area, GtkWidget * widget,
			     const gchar * detail, gint x, gint y,
			     gint width, gint height,
			     GtkOrientation orientation);
extern void gtk_paint_hline(GtkStyle * style, GdkWindow * window,
			    GtkStateType state_type,
			    const GdkRectangle * area, GtkWidget * widget,
			    const gchar * detail, gint x1, gint x2,
			    gint y);
extern void gtk_paint_layout(GtkStyle * style, GdkWindow * window,
			     GtkStateType state_type, gboolean use_text,
			     const GdkRectangle * area, GtkWidget * widget,
			     const gchar * detail, gint x, gint y,
			     PangoLayout * layout);
extern void gtk_paint_option(GtkStyle * style, GdkWindow * window,
			     GtkStateType state_type,
			     GtkShadowType shadow_type,
			     const GdkRectangle * area, GtkWidget * widget,
			     const gchar * detail, gint x, gint y,
			     gint width, gint height);
extern void gtk_paint_polygon(GtkStyle * style, GdkWindow * window,
			      GtkStateType state_type,
			      GtkShadowType shadow_type,
			      const GdkRectangle * area,
			      GtkWidget * widget, const gchar * detail,
			      const GdkPoint * points, gint npoints,
			      gboolean fill);
extern void gtk_paint_resize_grip(GtkStyle * style, GdkWindow * window,
				  GtkStateType state_type,
				  const GdkRectangle * area,
				  GtkWidget * widget, const gchar * detail,
				  GdkWindowEdge edge, gint x, gint y,
				  gint width, gint height);
extern void gtk_paint_shadow(GtkStyle * style, GdkWindow * window,
			     GtkStateType state_type,
			     GtkShadowType shadow_type,
			     const GdkRectangle * area, GtkWidget * widget,
			     const gchar * detail, gint x, gint y,
			     gint width, gint height);
extern void gtk_paint_shadow_gap(GtkStyle * style, GdkWindow * window,
				 GtkStateType state_type,
				 GtkShadowType shadow_type,
				 const GdkRectangle * area,
				 GtkWidget * widget, const gchar * detail,
				 gint x, gint y, gint width, gint height,
				 GtkPositionType gap_side, gint gap_x,
				 gint gap_width);
extern void gtk_paint_slider(GtkStyle * style, GdkWindow * window,
			     GtkStateType state_type,
			     GtkShadowType shadow_type,
			     const GdkRectangle * area, GtkWidget * widget,
			     const gchar * detail, gint x, gint y,
			     gint width, gint height,
			     GtkOrientation orientation);
extern void gtk_paint_tab(GtkStyle * style, GdkWindow * window,
			  GtkStateType state_type,
			  GtkShadowType shadow_type,
			  const GdkRectangle * area, GtkWidget * widget,
			  const gchar * detail, gint x, gint y, gint width,
			  gint height);
extern void gtk_paint_vline(GtkStyle * style, GdkWindow * window,
			    GtkStateType state_type,
			    const GdkRectangle * area, GtkWidget * widget,
			    const gchar * detail, gint y1_, gint y2_,
			    gint x);
extern void gtk_paned_add1(GtkPaned * paned, GtkWidget * child);
extern void gtk_paned_add2(GtkPaned * paned, GtkWidget * child);
extern GtkWidget *gtk_paned_get_child1(GtkPaned * paned);
extern GtkWidget *gtk_paned_get_child2(GtkPaned * paned);
extern gint gtk_paned_get_position(GtkPaned * paned);
extern GType gtk_paned_get_type(void);
extern void gtk_paned_pack1(GtkPaned * paned, GtkWidget * child,
			    gboolean resize, gboolean shrink);
extern void gtk_paned_pack2(GtkPaned * paned, GtkWidget * child,
			    gboolean resize, gboolean shrink);
extern void gtk_paned_set_position(GtkPaned * paned, gint position);
extern GtkPaperSize *gtk_paper_size_copy(GtkPaperSize * other);
extern void gtk_paper_size_free(GtkPaperSize * size);
extern const char *gtk_paper_size_get_default(void);
extern gdouble gtk_paper_size_get_default_bottom_margin(GtkPaperSize *
							size,
							GtkUnit unit);
extern gdouble gtk_paper_size_get_default_left_margin(GtkPaperSize * size,
						      GtkUnit unit);
extern gdouble gtk_paper_size_get_default_right_margin(GtkPaperSize * size,
						       GtkUnit unit);
extern gdouble gtk_paper_size_get_default_top_margin(GtkPaperSize * size,
						     GtkUnit unit);
extern const char *gtk_paper_size_get_display_name(GtkPaperSize * size);
extern gdouble gtk_paper_size_get_height(GtkPaperSize * size,
					 GtkUnit unit);
extern const char *gtk_paper_size_get_name(GtkPaperSize * size);
extern const char *gtk_paper_size_get_ppd_name(GtkPaperSize * size);
extern GType gtk_paper_size_get_type(void);
extern gdouble gtk_paper_size_get_width(GtkPaperSize * size, GtkUnit unit);
extern gboolean gtk_paper_size_is_custom(GtkPaperSize * size);
extern gboolean gtk_paper_size_is_equal(GtkPaperSize * size1,
					GtkPaperSize * size2);
extern GtkPaperSize *gtk_paper_size_new(const char *name);
extern GtkPaperSize *gtk_paper_size_new_custom(const char *name,
					       const char *display_name,
					       gdouble width,
					       gdouble height,
					       GtkUnit unit);
extern GtkPaperSize *gtk_paper_size_new_from_ppd(const char *ppd_name,
						 const char
						 *ppd_display_name,
						 gdouble width,
						 gdouble height);
extern void gtk_paper_size_set_size(GtkPaperSize * size, gdouble width,
				    gdouble height, GtkUnit unit);
extern gboolean gtk_parse_args(int *argc, char ***argv);
extern GType gtk_path_priority_type_get_type(void);
extern GType gtk_path_type_get_type(void);
extern void gtk_plug_construct(GtkPlug * plug, GdkNativeWindow socket_id);
extern void gtk_plug_construct_for_display(GtkPlug * plug,
					   GdkDisplay * display,
					   GdkNativeWindow socket_id);
extern GdkNativeWindow gtk_plug_get_id(GtkPlug * plug);
extern GType gtk_plug_get_type(void);
extern GtkWidget *gtk_plug_new(GdkNativeWindow socket_id);
extern GtkWidget *gtk_plug_new_for_display(GdkDisplay * display,
					   GdkNativeWindow socket_id);
extern GType gtk_policy_type_get_type(void);
extern GType gtk_position_type_get_type(void);
extern PangoContext *gtk_print_context_create_pango_context(GtkPrintContext
							    * context);
extern PangoLayout *gtk_print_context_create_pango_layout(GtkPrintContext *
							  context);
extern cairo_t *gtk_print_context_get_cairo_context(GtkPrintContext *
						    context);
extern gdouble gtk_print_context_get_dpi_x(GtkPrintContext * context);
extern gdouble gtk_print_context_get_dpi_y(GtkPrintContext * context);
extern gdouble gtk_print_context_get_height(GtkPrintContext * context);
extern GtkPageSetup *gtk_print_context_get_page_setup(GtkPrintContext *
						      context);
extern PangoFontMap *gtk_print_context_get_pango_fontmap(GtkPrintContext *
							 context);
extern GType gtk_print_context_get_type(void);
extern gdouble gtk_print_context_get_width(GtkPrintContext * context);
extern void gtk_print_context_set_cairo_context(GtkPrintContext * context,
						cairo_t * cr, double dpi_x,
						double dpi_y);
extern GType gtk_print_duplex_get_type(void);
extern GType gtk_print_error_get_type(void);
extern GQuark gtk_print_error_quark(void);
extern GType gtk_print_operation_action_get_type(void);
extern void gtk_print_operation_cancel(GtkPrintOperation * op);
extern GtkPageSetup
    *gtk_print_operation_get_default_page_setup(GtkPrintOperation * op);
extern void gtk_print_operation_get_error(GtkPrintOperation * op,
					  GError * *error);
extern GtkPrintSettings
    *gtk_print_operation_get_print_settings(GtkPrintOperation * op);
extern GtkPrintStatus gtk_print_operation_get_status(GtkPrintOperation *
						     op);
extern const char *gtk_print_operation_get_status_string(GtkPrintOperation
							 * op);
extern GType gtk_print_operation_get_type(void);
extern gboolean gtk_print_operation_is_finished(GtkPrintOperation * op);
extern GtkPrintOperation *gtk_print_operation_new(void);
extern GType gtk_print_operation_result_get_type(void);
extern GtkPrintOperationResult gtk_print_operation_run(GtkPrintOperation *
						       op,
						       GtkPrintOperationAction
						       action,
						       GtkWindow * parent,
						       GError * *error);
extern void gtk_print_operation_set_allow_async(GtkPrintOperation * op,
						gboolean allow_async);
extern void gtk_print_operation_set_current_page(GtkPrintOperation * op,
						 gint current_page);
extern void gtk_print_operation_set_custom_tab_label(GtkPrintOperation *
						     op,
						     const char *label);
extern void gtk_print_operation_set_default_page_setup(GtkPrintOperation *
						       op,
						       GtkPageSetup *
						       default_page_setup);
extern void gtk_print_operation_set_export_filename(GtkPrintOperation * op,
						    const char *filename);
extern void gtk_print_operation_set_job_name(GtkPrintOperation * op,
					     const char *job_name);
extern void gtk_print_operation_set_n_pages(GtkPrintOperation * op,
					    gint n_pages);
extern void gtk_print_operation_set_print_settings(GtkPrintOperation * op,
						   GtkPrintSettings *
						   print_settings);
extern void gtk_print_operation_set_show_progress(GtkPrintOperation * op,
						  gboolean show_progress);
extern void gtk_print_operation_set_track_print_status(GtkPrintOperation *
						       op,
						       gboolean
						       track_status);
extern void gtk_print_operation_set_unit(GtkPrintOperation * op,
					 GtkUnit unit);
extern void gtk_print_operation_set_use_full_page(GtkPrintOperation * op,
						  gboolean full_page);
extern GType gtk_print_pages_get_type(void);
extern GType gtk_print_quality_get_type(void);
extern GtkPageSetup *gtk_print_run_page_setup_dialog(GtkWindow * parent,
						     GtkPageSetup *
						     page_setup,
						     GtkPrintSettings *
						     settings);
extern void gtk_print_run_page_setup_dialog_async(GtkWindow * parent,
						  GtkPageSetup *
						  page_setup,
						  GtkPrintSettings *
						  settings,
						  GtkPageSetupDoneFunc
						  done_cb, gpointer data);
extern GtkPrintSettings *gtk_print_settings_copy(GtkPrintSettings * other);
extern void gtk_print_settings_foreach(GtkPrintSettings * settings,
				       GtkPrintSettingsFunc func,
				       gpointer user_data);
extern const char *gtk_print_settings_get(GtkPrintSettings * settings,
					  const char *key);
extern gboolean gtk_print_settings_get_bool(GtkPrintSettings * settings,
					    const char *key);
extern gboolean gtk_print_settings_get_collate(GtkPrintSettings *
					       settings);
extern const char *gtk_print_settings_get_default_source(GtkPrintSettings *
							 settings);
extern const char *gtk_print_settings_get_dither(GtkPrintSettings *
						 settings);
extern gdouble gtk_print_settings_get_double(GtkPrintSettings * settings,
					     const char *key);
extern gdouble gtk_print_settings_get_double_with_default(GtkPrintSettings
							  * settings,
							  const char *key,
							  gdouble def);
extern GtkPrintDuplex gtk_print_settings_get_duplex(GtkPrintSettings *
						    settings);
extern const char *gtk_print_settings_get_finishings(GtkPrintSettings *
						     settings);
extern gint gtk_print_settings_get_int(GtkPrintSettings * settings,
				       const char *key);
extern gint gtk_print_settings_get_int_with_default(GtkPrintSettings *
						    settings,
						    const char *key,
						    gint def);
extern gdouble gtk_print_settings_get_length(GtkPrintSettings * settings,
					     const char *key,
					     GtkUnit unit);
extern const char *gtk_print_settings_get_media_type(GtkPrintSettings *
						     settings);
extern gint gtk_print_settings_get_n_copies(GtkPrintSettings * settings);
extern gint gtk_print_settings_get_number_up(GtkPrintSettings * settings);
extern GtkPageOrientation
gtk_print_settings_get_orientation(GtkPrintSettings * settings);
extern const char *gtk_print_settings_get_output_bin(GtkPrintSettings *
						     settings);
extern GtkPageRange *gtk_print_settings_get_page_ranges(GtkPrintSettings *
							settings,
							gint * num_ranges);
extern GtkPageSet gtk_print_settings_get_page_set(GtkPrintSettings *
						  settings);
extern gdouble gtk_print_settings_get_paper_height(GtkPrintSettings *
						   settings, GtkUnit unit);
extern GtkPaperSize *gtk_print_settings_get_paper_size(GtkPrintSettings *
						       settings);
extern gdouble gtk_print_settings_get_paper_width(GtkPrintSettings *
						  settings, GtkUnit unit);
extern GtkPrintPages gtk_print_settings_get_print_pages(GtkPrintSettings *
							settings);
extern const char *gtk_print_settings_get_printer(GtkPrintSettings *
						  settings);
extern GtkPrintQuality gtk_print_settings_get_quality(GtkPrintSettings *
						      settings);
extern gint gtk_print_settings_get_resolution(GtkPrintSettings * settings);
extern gboolean gtk_print_settings_get_reverse(GtkPrintSettings *
					       settings);
extern gdouble gtk_print_settings_get_scale(GtkPrintSettings * settings);
extern GType gtk_print_settings_get_type(void);
extern gboolean gtk_print_settings_get_use_color(GtkPrintSettings *
						 settings);
extern gboolean gtk_print_settings_has_key(GtkPrintSettings * settings,
					   const char *key);
extern GtkPrintSettings *gtk_print_settings_new(void);
extern void gtk_print_settings_set(GtkPrintSettings * settings,
				   const char *key, const char *value);
extern void gtk_print_settings_set_bool(GtkPrintSettings * settings,
					const char *key, gboolean value);
extern void gtk_print_settings_set_collate(GtkPrintSettings * settings,
					   gboolean collate);
extern void gtk_print_settings_set_default_source(GtkPrintSettings *
						  settings,
						  const char
						  *default_source);
extern void gtk_print_settings_set_dither(GtkPrintSettings * settings,
					  const char *dither);
extern void gtk_print_settings_set_double(GtkPrintSettings * settings,
					  const char *key, gdouble value);
extern void gtk_print_settings_set_duplex(GtkPrintSettings * settings,
					  GtkPrintDuplex duplex);
extern void gtk_print_settings_set_finishings(GtkPrintSettings * settings,
					      const char *finishings);
extern void gtk_print_settings_set_int(GtkPrintSettings * settings,
				       const char *key, gint value);
extern void gtk_print_settings_set_length(GtkPrintSettings * settings,
					  const char *key, gdouble value,
					  GtkUnit unit);
extern void gtk_print_settings_set_media_type(GtkPrintSettings * settings,
					      const char *media_type);
extern void gtk_print_settings_set_n_copies(GtkPrintSettings * settings,
					    gint num_copies);
extern void gtk_print_settings_set_number_up(GtkPrintSettings * settings,
					     gint number_up);
extern void gtk_print_settings_set_orientation(GtkPrintSettings * settings,
					       GtkPageOrientation
					       orientation);
extern void gtk_print_settings_set_output_bin(GtkPrintSettings * settings,
					      const char *output_bin);
extern void gtk_print_settings_set_page_ranges(GtkPrintSettings * settings,
					       GtkPageRange * page_ranges,
					       gint num_ranges);
extern void gtk_print_settings_set_page_set(GtkPrintSettings * settings,
					    GtkPageSet page_set);
extern void gtk_print_settings_set_paper_height(GtkPrintSettings *
						settings, gdouble height,
						GtkUnit unit);
extern void gtk_print_settings_set_paper_size(GtkPrintSettings * settings,
					      GtkPaperSize * paper_size);
extern void gtk_print_settings_set_paper_width(GtkPrintSettings * settings,
					       gdouble width,
					       GtkUnit unit);
extern void gtk_print_settings_set_print_pages(GtkPrintSettings * settings,
					       GtkPrintPages pages);
extern void gtk_print_settings_set_printer(GtkPrintSettings * settings,
					   const char *printer);
extern void gtk_print_settings_set_quality(GtkPrintSettings * settings,
					   GtkPrintQuality quality);
extern void gtk_print_settings_set_resolution(GtkPrintSettings * settings,
					      gint resolution);
extern void gtk_print_settings_set_reverse(GtkPrintSettings * settings,
					   gboolean reverse);
extern void gtk_print_settings_set_scale(GtkPrintSettings * settings,
					 gdouble scale);
extern void gtk_print_settings_set_use_color(GtkPrintSettings * settings,
					     gboolean use_color);
extern void gtk_print_settings_unset(GtkPrintSettings * settings,
				     const char *key);
extern GType gtk_print_status_get_type(void);
extern PangoEllipsizeMode gtk_progress_bar_get_ellipsize(GtkProgressBar *
							 pbar);
extern gdouble gtk_progress_bar_get_fraction(GtkProgressBar * pbar);
extern GtkProgressBarOrientation
gtk_progress_bar_get_orientation(GtkProgressBar * pbar);
extern gdouble gtk_progress_bar_get_pulse_step(GtkProgressBar * pbar);
extern const gchar *gtk_progress_bar_get_text(GtkProgressBar * pbar);
extern GType gtk_progress_bar_get_type(void);
extern GtkWidget *gtk_progress_bar_new(void);
extern GType gtk_progress_bar_orientation_get_type(void);
extern void gtk_progress_bar_pulse(GtkProgressBar * pbar);
extern void gtk_progress_bar_set_ellipsize(GtkProgressBar * pbar,
					   PangoEllipsizeMode mode);
extern void gtk_progress_bar_set_fraction(GtkProgressBar * pbar,
					  gdouble fraction);
extern void gtk_progress_bar_set_orientation(GtkProgressBar * pbar,
					     GtkProgressBarOrientation
					     orientation);
extern void gtk_progress_bar_set_pulse_step(GtkProgressBar * pbar,
					    gdouble fraction);
extern void gtk_progress_bar_set_text(GtkProgressBar * pbar,
				      const gchar * text);
extern GType gtk_progress_bar_style_get_type(void);
extern void gtk_propagate_event(GtkWidget * widget, GdkEvent * event);
extern guint gtk_quit_add(guint main_level, GtkFunction function,
			  gpointer data);
extern void gtk_quit_add_destroy(guint main_level, GtkObject * object);
extern guint gtk_quit_add_full(guint main_level, GtkFunction function,
			       GtkCallbackMarshal marshal, gpointer data,
			       GtkDestroyNotify destroy);
extern void gtk_quit_remove(guint quit_handler_id);
extern void gtk_quit_remove_by_data(gpointer data);
extern gint gtk_radio_action_get_current_value(GtkRadioAction * action);
extern GSList *gtk_radio_action_get_group(GtkRadioAction * action);
extern GType gtk_radio_action_get_type(void);
extern GtkRadioAction *gtk_radio_action_new(const gchar * name,
					    const gchar * label,
					    const gchar * tooltip,
					    const gchar * stock_id,
					    gint value);
extern void gtk_radio_action_set_current_value(GtkRadioAction * action,
					       gint current_value);
extern void gtk_radio_action_set_group(GtkRadioAction * action,
				       GSList * group);
extern GSList *gtk_radio_button_get_group(GtkRadioButton * radio_button);
extern GType gtk_radio_button_get_type(void);
extern GtkWidget *gtk_radio_button_new(GSList * group);
extern GtkWidget *gtk_radio_button_new_from_widget(GtkRadioButton *
						   radio_group_member);
extern GtkWidget *gtk_radio_button_new_with_label(GSList * group,
						  const gchar * label);
extern GtkWidget
    *gtk_radio_button_new_with_label_from_widget(GtkRadioButton *
						 radio_group_member,
						 const gchar * label);
extern GtkWidget *gtk_radio_button_new_with_mnemonic(GSList * group,
						     const gchar * label);
extern GtkWidget
    *gtk_radio_button_new_with_mnemonic_from_widget(GtkRadioButton *
						    radio_group_member,
						    const gchar * label);
extern void gtk_radio_button_set_group(GtkRadioButton * radio_button,
				       GSList * group);
extern GSList *gtk_radio_menu_item_get_group(GtkRadioMenuItem *
					     radio_menu_item);
extern GType gtk_radio_menu_item_get_type(void);
extern GtkWidget *gtk_radio_menu_item_new(GSList * group);
extern GtkWidget *gtk_radio_menu_item_new_from_widget(GtkRadioMenuItem *
						      group);
extern GtkWidget *gtk_radio_menu_item_new_with_label(GSList * group,
						     const gchar * label);
extern GtkWidget
    *gtk_radio_menu_item_new_with_label_from_widget(GtkRadioMenuItem *
						    group,
						    const gchar * label);
extern GtkWidget *gtk_radio_menu_item_new_with_mnemonic(GSList * group,
							const gchar *
							label);
extern GtkWidget
    *gtk_radio_menu_item_new_with_mnemonic_from_widget(GtkRadioMenuItem *
						       group,
						       const gchar *
						       label);
extern void gtk_radio_menu_item_set_group(GtkRadioMenuItem *
					  radio_menu_item, GSList * group);
extern GSList *gtk_radio_tool_button_get_group(GtkRadioToolButton *
					       button);
extern GType gtk_radio_tool_button_get_type(void);
extern GtkToolItem *gtk_radio_tool_button_new(GSList * group);
extern GtkToolItem *gtk_radio_tool_button_new_from_stock(GSList * group,
							 const gchar *
							 stock_id);
extern GtkToolItem
    *gtk_radio_tool_button_new_from_widget(GtkRadioToolButton * group);
extern GtkToolItem
    *gtk_radio_tool_button_new_with_stock_from_widget(GtkRadioToolButton *
						      group,
						      const gchar *
						      stock_id);
extern void gtk_radio_tool_button_set_group(GtkRadioToolButton * button,
					    GSList * group);
extern GtkAdjustment *gtk_range_get_adjustment(GtkRange * range);
extern gboolean gtk_range_get_inverted(GtkRange * range);
extern GtkSensitivityType gtk_range_get_lower_stepper_sensitivity(GtkRange
								  * range);
extern GType gtk_range_get_type(void);
extern GtkUpdateType gtk_range_get_update_policy(GtkRange * range);
extern GtkSensitivityType gtk_range_get_upper_stepper_sensitivity(GtkRange
								  * range);
extern gdouble gtk_range_get_value(GtkRange * range);
extern void gtk_range_set_adjustment(GtkRange * range,
				     GtkAdjustment * adjustment);
extern void gtk_range_set_increments(GtkRange * range, gdouble step,
				     gdouble page);
extern void gtk_range_set_inverted(GtkRange * range, gboolean setting);
extern void gtk_range_set_lower_stepper_sensitivity(GtkRange * range,
						    GtkSensitivityType
						    sensitivity);
extern void gtk_range_set_range(GtkRange * range, gdouble min,
				gdouble max);
extern void gtk_range_set_update_policy(GtkRange * range,
					GtkUpdateType policy);
extern void gtk_range_set_upper_stepper_sensitivity(GtkRange * range,
						    GtkSensitivityType
						    sensitivity);
extern void gtk_range_set_value(GtkRange * range, gdouble value);
extern void gtk_rc_add_default_file(const gchar * filename);
extern gchar *gtk_rc_find_module_in_path(const gchar * module_file);
extern gchar *gtk_rc_find_pixmap_in_path(GtkSettings * settings,
					 GScanner * scanner,
					 const gchar * pixmap_file);
extern GType gtk_rc_flags_get_type(void);
extern gchar **gtk_rc_get_default_files(void);
extern gchar *gtk_rc_get_im_module_file(void);
extern gchar *gtk_rc_get_im_module_path(void);
extern gchar *gtk_rc_get_module_dir(void);
extern GtkStyle *gtk_rc_get_style(GtkWidget * widget);
extern GtkStyle *gtk_rc_get_style_by_paths(GtkSettings * settings,
					   const char *widget_path,
					   const char *class_path,
					   GType type);
extern gchar *gtk_rc_get_theme_dir(void);
extern void gtk_rc_parse(const gchar * filename);
extern guint gtk_rc_parse_color(GScanner * scanner, GdkColor * color);
extern guint gtk_rc_parse_priority(GScanner * scanner,
				   GtkPathPriorityType * priority);
extern guint gtk_rc_parse_state(GScanner * scanner, GtkStateType * state);
extern void gtk_rc_parse_string(const gchar * rc_string);
extern gboolean gtk_rc_property_parse_border(const GParamSpec * pspec,
					     const GString * gstring,
					     GValue * property_value);
extern gboolean gtk_rc_property_parse_color(const GParamSpec * pspec,
					    const GString * gstring,
					    GValue * property_value);
extern gboolean gtk_rc_property_parse_enum(const GParamSpec * pspec,
					   const GString * gstring,
					   GValue * property_value);
extern gboolean gtk_rc_property_parse_flags(const GParamSpec * pspec,
					    const GString * gstring,
					    GValue * property_value);
extern gboolean gtk_rc_property_parse_requisition(const GParamSpec * pspec,
						  const GString * gstring,
						  GValue * property_value);
extern gboolean gtk_rc_reparse_all(void);
extern gboolean gtk_rc_reparse_all_for_settings(GtkSettings * settings,
						gboolean force_load);
extern void gtk_rc_reset_styles(GtkSettings * settings);
extern GScanner *gtk_rc_scanner_new(void);
extern void gtk_rc_set_default_files(gchar * *filenames);
extern GtkRcStyle *gtk_rc_style_copy(GtkRcStyle * orig);
extern GType gtk_rc_style_get_type(void);
extern GtkRcStyle *gtk_rc_style_new(void);
extern void gtk_rc_style_ref(GtkRcStyle * rc_style);
extern void gtk_rc_style_unref(GtkRcStyle * rc_style);
extern GType gtk_rc_token_type_get_type(void);
extern void gtk_recent_chooser_add_filter(GtkRecentChooser * chooser,
					  GtkRecentFilter * filter);
extern GType gtk_recent_chooser_dialog_get_type(void);
extern GtkWidget *gtk_recent_chooser_dialog_new(const char *title,
						GtkWindow * parent,
						const char
						*first_button_text, ...);
extern GtkWidget *gtk_recent_chooser_dialog_new_for_manager(const char
							    *title,
							    GtkWindow *
							    parent,
							    GtkRecentManager
							    * manager,
							    const char
							    *first_button_text,
							    ...);
extern GType gtk_recent_chooser_error_get_type(void);
extern GQuark gtk_recent_chooser_error_quark(void);
extern GtkRecentInfo *gtk_recent_chooser_get_current_item(GtkRecentChooser
							  * chooser);
extern gchar *gtk_recent_chooser_get_current_uri(GtkRecentChooser *
						 chooser);
extern GtkRecentFilter *gtk_recent_chooser_get_filter(GtkRecentChooser *
						      chooser);
extern GList *gtk_recent_chooser_get_items(GtkRecentChooser * chooser);
extern gint gtk_recent_chooser_get_limit(GtkRecentChooser * chooser);
extern gboolean gtk_recent_chooser_get_local_only(GtkRecentChooser *
						  chooser);
extern gboolean gtk_recent_chooser_get_select_multiple(GtkRecentChooser *
						       chooser);
extern gboolean gtk_recent_chooser_get_show_icons(GtkRecentChooser *
						  chooser);
extern gboolean gtk_recent_chooser_get_show_not_found(GtkRecentChooser *
						      chooser);
extern gboolean gtk_recent_chooser_get_show_private(GtkRecentChooser *
						    chooser);
extern gboolean gtk_recent_chooser_get_show_tips(GtkRecentChooser *
						 chooser);
extern GtkRecentSortType gtk_recent_chooser_get_sort_type(GtkRecentChooser
							  * chooser);
extern GType gtk_recent_chooser_get_type(void);
extern gchar **gtk_recent_chooser_get_uris(GtkRecentChooser * chooser,
					   gsize * length);
extern GSList *gtk_recent_chooser_list_filters(GtkRecentChooser * chooser);
extern gboolean
gtk_recent_chooser_menu_get_show_numbers(GtkRecentChooserMenu * menu);
extern GType gtk_recent_chooser_menu_get_type(void);
extern GtkWidget *gtk_recent_chooser_menu_new(void);
extern GtkWidget *gtk_recent_chooser_menu_new_for_manager(GtkRecentManager
							  * manager);
extern void gtk_recent_chooser_menu_set_show_numbers(GtkRecentChooserMenu *
						     menu,
						     gboolean
						     show_numbers);
extern void gtk_recent_chooser_remove_filter(GtkRecentChooser * chooser,
					     GtkRecentFilter * filter);
extern void gtk_recent_chooser_select_all(GtkRecentChooser * chooser);
extern gboolean gtk_recent_chooser_select_uri(GtkRecentChooser * chooser,
					      const char *uri,
					      GError * *error);
extern gboolean gtk_recent_chooser_set_current_uri(GtkRecentChooser *
						   chooser,
						   const char *uri,
						   GError * *error);
extern void gtk_recent_chooser_set_filter(GtkRecentChooser * chooser,
					  GtkRecentFilter * filter);
extern void gtk_recent_chooser_set_limit(GtkRecentChooser * chooser,
					 gint limit);
extern void gtk_recent_chooser_set_local_only(GtkRecentChooser * chooser,
					      gboolean local_only);
extern void gtk_recent_chooser_set_select_multiple(GtkRecentChooser *
						   chooser,
						   gboolean
						   select_multiple);
extern void gtk_recent_chooser_set_show_icons(GtkRecentChooser * chooser,
					      gboolean show_icons);
extern void gtk_recent_chooser_set_show_not_found(GtkRecentChooser *
						  chooser,
						  gboolean show_not_found);
extern void gtk_recent_chooser_set_show_private(GtkRecentChooser * chooser,
						gboolean show_private);
extern void gtk_recent_chooser_set_show_tips(GtkRecentChooser * chooser,
					     gboolean show_tips);
extern void gtk_recent_chooser_set_sort_func(GtkRecentChooser * chooser,
					     GtkRecentSortFunc sort_func,
					     gpointer sort_data,
					     GDestroyNotify data_destroy);
extern void gtk_recent_chooser_set_sort_type(GtkRecentChooser * chooser,
					     GtkRecentSortType sort_type);
extern void gtk_recent_chooser_unselect_all(GtkRecentChooser * chooser);
extern void gtk_recent_chooser_unselect_uri(GtkRecentChooser * chooser,
					    const char *uri);
extern GType gtk_recent_chooser_widget_get_type(void);
extern GtkWidget *gtk_recent_chooser_widget_new(void);
extern GtkWidget
    *gtk_recent_chooser_widget_new_for_manager(GtkRecentManager * manager);
extern GType gtk_recent_filter_flags_get_type(void);
extern GType gtk_recent_manager_error_get_type(void);
extern GType gtk_recent_sort_type_get_type(void);
extern GType gtk_relief_style_get_type(void);
extern GtkRequisition *gtk_requisition_copy(const GtkRequisition *
					    requisition);
extern void gtk_requisition_free(GtkRequisition * requisition);
extern GType gtk_requisition_get_type(void);
extern GType gtk_resize_mode_get_type(void);
extern GType gtk_response_type_get_type(void);
extern void gtk_ruler_draw_pos(GtkRuler * ruler);
extern void gtk_ruler_draw_ticks(GtkRuler * ruler);
extern GtkMetricType gtk_ruler_get_metric(GtkRuler * ruler);
extern void gtk_ruler_get_range(GtkRuler * ruler, gdouble * lower,
				gdouble * upper, gdouble * position,
				gdouble * max_size);
extern GType gtk_ruler_get_type(void);
extern void gtk_ruler_set_metric(GtkRuler * ruler, GtkMetricType metric);
extern void gtk_ruler_set_range(GtkRuler * ruler, gdouble lower,
				gdouble upper, gdouble position,
				gdouble max_size);
extern gint gtk_scale_get_digits(GtkScale * scale);
extern gboolean gtk_scale_get_draw_value(GtkScale * scale);
extern PangoLayout *gtk_scale_get_layout(GtkScale * scale);
extern void gtk_scale_get_layout_offsets(GtkScale * scale, gint * x,
					 gint * y);
extern GType gtk_scale_get_type(void);
extern GtkPositionType gtk_scale_get_value_pos(GtkScale * scale);
extern void gtk_scale_set_digits(GtkScale * scale, gint digits);
extern void gtk_scale_set_draw_value(GtkScale * scale,
				     gboolean draw_value);
extern void gtk_scale_set_value_pos(GtkScale * scale, GtkPositionType pos);
extern GType gtk_scroll_step_get_type(void);
extern GType gtk_scroll_type_get_type(void);
extern GType gtk_scrollbar_get_type(void);
extern void gtk_scrolled_window_add_with_viewport(GtkScrolledWindow *
						  scrolled_window,
						  GtkWidget * child);
extern GtkAdjustment *gtk_scrolled_window_get_hadjustment(GtkScrolledWindow
							  *
							  scrolled_window);
extern GtkWidget *gtk_scrolled_window_get_hscrollbar(GtkScrolledWindow *
						     scrolled_window);
extern GtkCornerType gtk_scrolled_window_get_placement(GtkScrolledWindow *
						       scrolled_window);
extern void gtk_scrolled_window_get_policy(GtkScrolledWindow *
					   scrolled_window,
					   GtkPolicyType *
					   hscrollbar_policy,
					   GtkPolicyType *
					   vscrollbar_policy);
extern GtkShadowType gtk_scrolled_window_get_shadow_type(GtkScrolledWindow
							 *
							 scrolled_window);
extern GType gtk_scrolled_window_get_type(void);
extern GtkAdjustment *gtk_scrolled_window_get_vadjustment(GtkScrolledWindow
							  *
							  scrolled_window);
extern GtkWidget *gtk_scrolled_window_get_vscrollbar(GtkScrolledWindow *
						     scrolled_window);
extern GtkWidget *gtk_scrolled_window_new(GtkAdjustment * hadjustment,
					  GtkAdjustment * vadjustment);
extern void gtk_scrolled_window_set_hadjustment(GtkScrolledWindow *
						scrolled_window,
						GtkAdjustment *
						hadjustment);
extern void gtk_scrolled_window_set_placement(GtkScrolledWindow *
					      scrolled_window,
					      GtkCornerType
					      window_placement);
extern void gtk_scrolled_window_set_policy(GtkScrolledWindow *
					   scrolled_window,
					   GtkPolicyType hscrollbar_policy,
					   GtkPolicyType
					   vscrollbar_policy);
extern void gtk_scrolled_window_set_shadow_type(GtkScrolledWindow *
						scrolled_window,
						GtkShadowType type);
extern void gtk_scrolled_window_set_vadjustment(GtkScrolledWindow *
						scrolled_window,
						GtkAdjustment *
						vadjustment);
extern void gtk_scrolled_window_unset_placement(GtkScrolledWindow *
						scrolled_window);
extern void gtk_selection_add_target(GtkWidget * widget, GdkAtom selection,
				     GdkAtom target, guint info);
extern void gtk_selection_add_targets(GtkWidget * widget,
				      GdkAtom selection,
				      const GtkTargetEntry * targets,
				      guint ntargets);
extern void gtk_selection_clear_targets(GtkWidget * widget,
					GdkAtom selection);
extern gboolean gtk_selection_convert(GtkWidget * widget,
				      GdkAtom selection, GdkAtom target,
				      guint32 time_);
extern GtkSelectionData *gtk_selection_data_copy(GtkSelectionData * data);
extern void gtk_selection_data_free(GtkSelectionData * data);
extern GdkPixbuf *gtk_selection_data_get_pixbuf(GtkSelectionData *
						selection_data);
extern gboolean gtk_selection_data_get_targets(GtkSelectionData *
					       selection_data,
					       GdkAtom * *targets,
					       gint * n_atoms);
extern guchar *gtk_selection_data_get_text(GtkSelectionData *
					   selection_data);
extern GType gtk_selection_data_get_type(void);
extern gchar **gtk_selection_data_get_uris(GtkSelectionData *
					   selection_data);
extern void gtk_selection_data_set(GtkSelectionData * selection_data,
				   GdkAtom type, gint format,
				   const guchar * data, gint length);
extern gboolean gtk_selection_data_set_pixbuf(GtkSelectionData *
					      selection_data,
					      GdkPixbuf * pixbuf);
extern gboolean gtk_selection_data_set_text(GtkSelectionData *
					    selection_data,
					    const gchar * str, gint len);
extern gboolean gtk_selection_data_set_uris(GtkSelectionData *
					    selection_data, gchar * *uris);
extern gboolean gtk_selection_data_targets_include_image(GtkSelectionData *
							 selection_data,
							 gboolean
							 writable);
extern gboolean
gtk_selection_data_targets_include_rich_text(GtkSelectionData *
					     selection_data,
					     GtkTextBuffer * buffer);
extern gboolean gtk_selection_data_targets_include_text(GtkSelectionData *
							selection_data);
extern gboolean gtk_selection_data_targets_include_uri(GtkSelectionData *
						       selection_data);
extern GType gtk_selection_mode_get_type(void);
extern gboolean gtk_selection_owner_set(GtkWidget * widget,
					GdkAtom selection, guint32 time_);
extern gboolean gtk_selection_owner_set_for_display(GdkDisplay * display,
						    GtkWidget * widget,
						    GdkAtom selection,
						    guint32 time_);
extern void gtk_selection_remove_all(GtkWidget * widget);
extern GType gtk_sensitivity_type_get_type(void);
extern GType gtk_separator_get_type(void);
extern GType gtk_separator_menu_item_get_type(void);
extern GtkWidget *gtk_separator_menu_item_new(void);
extern gboolean gtk_separator_tool_item_get_draw(GtkSeparatorToolItem *
						 item);
extern GType gtk_separator_tool_item_get_type(void);
extern GtkToolItem *gtk_separator_tool_item_new(void);
extern void gtk_separator_tool_item_set_draw(GtkSeparatorToolItem * item,
					     gboolean draw);
extern gchar *gtk_set_locale(void);
extern GtkSettings *gtk_settings_get_default(void);
extern GtkSettings *gtk_settings_get_for_screen(GdkScreen * screen);
extern GType gtk_settings_get_type(void);
extern void gtk_settings_install_property(GParamSpec * pspec);
extern void gtk_settings_install_property_parser(GParamSpec * pspec,
						 GtkRcPropertyParser
						 parser);
extern void gtk_settings_set_double_property(GtkSettings * settings,
					     const gchar * name,
					     gdouble v_double,
					     const gchar * origin);
extern void gtk_settings_set_long_property(GtkSettings * settings,
					   const gchar * name,
					   glong v_long,
					   const gchar * origin);
extern void gtk_settings_set_property_value(GtkSettings * settings,
					    const gchar * name,
					    const GtkSettingsValue *
					    svalue);
extern void gtk_settings_set_string_property(GtkSettings * settings,
					     const gchar * name,
					     const gchar * v_string,
					     const gchar * origin);
extern GType gtk_shadow_type_get_type(void);
extern void gtk_show_about_dialog(GtkWindow * parent,
				  const gchar * first_property_name, ...);
extern GType gtk_side_type_get_type(void);
extern GType gtk_signal_run_type_get_type(void);
extern void gtk_size_group_add_widget(GtkSizeGroup * size_group,
				      GtkWidget * widget);
extern gboolean gtk_size_group_get_ignore_hidden(GtkSizeGroup *
						 size_group);
extern GtkSizeGroupMode gtk_size_group_get_mode(GtkSizeGroup * size_group);
extern GType gtk_size_group_get_type(void);
extern GSList *gtk_size_group_get_widgets(GtkSizeGroup * size_group);
extern GType gtk_size_group_mode_get_type(void);
extern GtkSizeGroup *gtk_size_group_new(GtkSizeGroupMode mode);
extern void gtk_size_group_remove_widget(GtkSizeGroup * size_group,
					 GtkWidget * widget);
extern void gtk_size_group_set_ignore_hidden(GtkSizeGroup * size_group,
					     gboolean ignore_hidden);
extern void gtk_size_group_set_mode(GtkSizeGroup * size_group,
				    GtkSizeGroupMode mode);
extern void gtk_socket_add_id(GtkSocket * socket_,
			      GdkNativeWindow window_id);
extern GdkNativeWindow gtk_socket_get_id(GtkSocket * socket_);
extern GType gtk_socket_get_type(void);
extern GtkWidget *gtk_socket_new(void);
extern GType gtk_sort_type_get_type(void);
extern void gtk_spin_button_configure(GtkSpinButton * spin_button,
				      GtkAdjustment * adjustment,
				      gdouble climb_rate, guint digits);
extern GtkAdjustment *gtk_spin_button_get_adjustment(GtkSpinButton *
						     spin_button);
extern guint gtk_spin_button_get_digits(GtkSpinButton * spin_button);
extern void gtk_spin_button_get_increments(GtkSpinButton * spin_button,
					   gdouble * step, gdouble * page);
extern gboolean gtk_spin_button_get_numeric(GtkSpinButton * spin_button);
extern void gtk_spin_button_get_range(GtkSpinButton * spin_button,
				      gdouble * min, gdouble * max);
extern gboolean gtk_spin_button_get_snap_to_ticks(GtkSpinButton *
						  spin_button);
extern GType gtk_spin_button_get_type(void);
extern GtkSpinButtonUpdatePolicy
gtk_spin_button_get_update_policy(GtkSpinButton * spin_button);
extern gdouble gtk_spin_button_get_value(GtkSpinButton * spin_button);
extern gint gtk_spin_button_get_value_as_int(GtkSpinButton * spin_button);
extern gboolean gtk_spin_button_get_wrap(GtkSpinButton * spin_button);
extern GtkWidget *gtk_spin_button_new(GtkAdjustment * adjustment,
				      gdouble climb_rate, guint digits);
extern GtkWidget *gtk_spin_button_new_with_range(gdouble min, gdouble max,
						 gdouble step);
extern void gtk_spin_button_set_adjustment(GtkSpinButton * spin_button,
					   GtkAdjustment * adjustment);
extern void gtk_spin_button_set_digits(GtkSpinButton * spin_button,
				       guint digits);
extern void gtk_spin_button_set_increments(GtkSpinButton * spin_button,
					   gdouble step, gdouble page);
extern void gtk_spin_button_set_numeric(GtkSpinButton * spin_button,
					gboolean numeric);
extern void gtk_spin_button_set_range(GtkSpinButton * spin_button,
				      gdouble min, gdouble max);
extern void gtk_spin_button_set_snap_to_ticks(GtkSpinButton * spin_button,
					      gboolean snap_to_ticks);
extern void gtk_spin_button_set_update_policy(GtkSpinButton * spin_button,
					      GtkSpinButtonUpdatePolicy
					      policy);
extern void gtk_spin_button_set_value(GtkSpinButton * spin_button,
				      gdouble value);
extern void gtk_spin_button_set_wrap(GtkSpinButton * spin_button,
				     gboolean wrap);
extern void gtk_spin_button_spin(GtkSpinButton * spin_button,
				 GtkSpinType direction, gdouble increment);
extern void gtk_spin_button_update(GtkSpinButton * spin_button);
extern GType gtk_spin_button_update_policy_get_type(void);
extern GType gtk_spin_type_get_type(void);
extern GType gtk_state_type_get_type(void);
extern guint gtk_statusbar_get_context_id(GtkStatusbar * statusbar,
					  const gchar *
					  context_description);
extern gboolean gtk_statusbar_get_has_resize_grip(GtkStatusbar *
						  statusbar);
extern GType gtk_statusbar_get_type(void);
extern GtkWidget *gtk_statusbar_new(void);
extern void gtk_statusbar_pop(GtkStatusbar * statusbar, guint context_id);
extern guint gtk_statusbar_push(GtkStatusbar * statusbar, guint context_id,
				const gchar * text);
extern void gtk_statusbar_remove(GtkStatusbar * statusbar,
				 guint context_id, guint message_id);
extern void gtk_statusbar_set_has_resize_grip(GtkStatusbar * statusbar,
					      gboolean setting);
extern void gtk_stock_add(const GtkStockItem * items, guint n_items);
extern void gtk_stock_add_static(const GtkStockItem * items,
				 guint n_items);
extern GtkStockItem *gtk_stock_item_copy(const GtkStockItem * item);
extern void gtk_stock_item_free(GtkStockItem * item);
extern GSList *gtk_stock_list_ids(void);
extern gboolean gtk_stock_lookup(const gchar * stock_id,
				 GtkStockItem * item);
extern void gtk_stock_set_translate_func(const gchar * domain,
					 GtkTranslateFunc func,
					 gpointer data,
					 GtkDestroyNotify notify);
extern void gtk_style_apply_default_background(GtkStyle * style,
					       GdkWindow * window,
					       gboolean set_bg,
					       GtkStateType state_type,
					       const GdkRectangle * area,
					       gint x, gint y, gint width,
					       gint height);
extern GtkStyle *gtk_style_attach(GtkStyle * style, GdkWindow * window);
extern GtkStyle *gtk_style_copy(GtkStyle * style);
extern void gtk_style_detach(GtkStyle * style);
extern GType gtk_style_get_type(void);
extern gboolean gtk_style_lookup_color(GtkStyle * style,
				       const gchar * color_name,
				       GdkColor * color);
extern GtkIconSet *gtk_style_lookup_icon_set(GtkStyle * style,
					     const char *stock_id);
extern GtkStyle *gtk_style_new(void);
extern GdkPixbuf *gtk_style_render_icon(GtkStyle * style,
					const GtkIconSource * source,
					GtkTextDirection direction,
					GtkStateType state,
					GtkIconSize size,
					GtkWidget * widget,
					const gchar * detail);
extern void gtk_style_set_background(GtkStyle * style, GdkWindow * window,
				     GtkStateType state_type);
extern GType gtk_submenu_direction_get_type(void);
extern GType gtk_submenu_placement_get_type(void);
extern void gtk_table_attach(GtkTable * table, GtkWidget * child,
			     guint left_attach, guint right_attach,
			     guint top_attach, guint bottom_attach,
			     GtkAttachOptions xoptions,
			     GtkAttachOptions yoptions, guint xpadding,
			     guint ypadding);
extern void gtk_table_attach_defaults(GtkTable * table, GtkWidget * widget,
				      guint left_attach,
				      guint right_attach, guint top_attach,
				      guint bottom_attach);
extern guint gtk_table_get_col_spacing(GtkTable * table, guint column);
extern guint gtk_table_get_default_col_spacing(GtkTable * table);
extern guint gtk_table_get_default_row_spacing(GtkTable * table);
extern gboolean gtk_table_get_homogeneous(GtkTable * table);
extern guint gtk_table_get_row_spacing(GtkTable * table, guint row);
extern GType gtk_table_get_type(void);
extern GtkWidget *gtk_table_new(guint rows, guint columns,
				gboolean homogeneous);
extern void gtk_table_resize(GtkTable * table, guint rows, guint columns);
extern void gtk_table_set_col_spacing(GtkTable * table, guint column,
				      guint spacing);
extern void gtk_table_set_col_spacings(GtkTable * table, guint spacing);
extern void gtk_table_set_homogeneous(GtkTable * table,
				      gboolean homogeneous);
extern void gtk_table_set_row_spacing(GtkTable * table, guint row,
				      guint spacing);
extern void gtk_table_set_row_spacings(GtkTable * table, guint spacing);
extern GType gtk_target_flags_get_type(void);
extern void gtk_target_list_add(GtkTargetList * list, GdkAtom target,
				guint flags, guint info);
extern void gtk_target_list_add_image_targets(GtkTargetList * list,
					      guint info,
					      gboolean writable);
extern void gtk_target_list_add_rich_text_targets(GtkTargetList * list,
						  guint info,
						  gboolean deserializable,
						  GtkTextBuffer * buffer);
extern void gtk_target_list_add_table(GtkTargetList * list,
				      const GtkTargetEntry * targets,
				      guint ntargets);
extern void gtk_target_list_add_text_targets(GtkTargetList * list,
					     guint info);
extern void gtk_target_list_add_uri_targets(GtkTargetList * list,
					    guint info);
extern gboolean gtk_target_list_find(GtkTargetList * list, GdkAtom target,
				     guint * info);
extern GType gtk_target_list_get_type(void);
extern GtkTargetList *gtk_target_list_new(const GtkTargetEntry * targets,
					  guint ntargets);
extern GtkTargetList gtk_target_list_ref(GtkTargetList * list);
extern void gtk_target_list_remove(GtkTargetList * list, GdkAtom target);
extern void gtk_target_list_unref(GtkTargetList * list);
extern void gtk_target_table_free(GtkTargetEntry * targets,
				  gint n_targets);
extern GtkTargetEntry *gtk_target_table_new_from_list(GtkTargetList * list,
						      gint * n_targets);
extern gboolean gtk_targets_include_image(GdkAtom * targets,
					  gint n_targets,
					  gboolean writable);
extern gboolean gtk_targets_include_rich_text(GdkAtom * targets,
					      gint n_targets,
					      GtkTextBuffer * buffer);
extern gboolean gtk_targets_include_text(GdkAtom * targets,
					 gint n_targets);
extern gboolean gtk_targets_include_uri(GdkAtom * targets, gint n_targets);
extern GType gtk_tearoff_menu_item_get_type(void);
extern GtkWidget *gtk_tearoff_menu_item_new(void);
extern GtkTextAttributes *gtk_text_attributes_copy(GtkTextAttributes *
						   src);
extern void gtk_text_attributes_copy_values(GtkTextAttributes * src,
					    GtkTextAttributes * dest);
extern GType gtk_text_attributes_get_type(void);
extern GtkTextAttributes *gtk_text_attributes_new(void);
extern GtkTextAttributes *gtk_text_attributes_ref(GtkTextAttributes *
						  values);
extern void gtk_text_attributes_unref(GtkTextAttributes * values);
extern void gtk_text_buffer_add_selection_clipboard(GtkTextBuffer * buffer,
						    GtkClipboard *
						    clipboard);
extern void gtk_text_buffer_apply_tag(GtkTextBuffer * buffer,
				      GtkTextTag * tag,
				      const GtkTextIter * start,
				      const GtkTextIter * end);
extern void gtk_text_buffer_apply_tag_by_name(GtkTextBuffer * buffer,
					      const gchar * name,
					      const GtkTextIter * start,
					      const GtkTextIter * end);
extern gboolean gtk_text_buffer_backspace(GtkTextBuffer * buffer,
					  GtkTextIter * iter,
					  gboolean interactive,
					  gboolean default_editable);
extern void gtk_text_buffer_begin_user_action(GtkTextBuffer * buffer);
extern void gtk_text_buffer_copy_clipboard(GtkTextBuffer * buffer,
					   GtkClipboard * clipboard);
extern GtkTextChildAnchor
    *gtk_text_buffer_create_child_anchor(GtkTextBuffer * buffer,
					 GtkTextIter * iter);
extern GtkTextMark *gtk_text_buffer_create_mark(GtkTextBuffer * buffer,
						const gchar * mark_name,
						const GtkTextIter * where,
						gboolean left_gravity);
extern GtkTextTag *gtk_text_buffer_create_tag(GtkTextBuffer * buffer,
					      const gchar * tag_name,
					      const gchar *
					      first_property_name, ...);
extern void gtk_text_buffer_cut_clipboard(GtkTextBuffer * buffer,
					  GtkClipboard * clipboard,
					  gboolean default_editable);
extern void gtk_text_buffer_delete(GtkTextBuffer * buffer,
				   GtkTextIter * start, GtkTextIter * end);
extern gboolean gtk_text_buffer_delete_interactive(GtkTextBuffer * buffer,
						   GtkTextIter *
						   start_iter,
						   GtkTextIter * end_iter,
						   gboolean
						   default_editable);
extern void gtk_text_buffer_delete_mark(GtkTextBuffer * buffer,
					GtkTextMark * mark);
extern void gtk_text_buffer_delete_mark_by_name(GtkTextBuffer * buffer,
						const gchar * name);
extern gboolean gtk_text_buffer_delete_selection(GtkTextBuffer * buffer,
						 gboolean interactive,
						 gboolean
						 default_editable);
extern void gtk_text_buffer_end_user_action(GtkTextBuffer * buffer);
extern void gtk_text_buffer_get_bounds(GtkTextBuffer * buffer,
				       GtkTextIter * start,
				       GtkTextIter * end);
extern gint gtk_text_buffer_get_char_count(GtkTextBuffer * buffer);
extern GtkTargetList *gtk_text_buffer_get_copy_target_list(GtkTextBuffer *
							   buffer);
extern void gtk_text_buffer_get_end_iter(GtkTextBuffer * buffer,
					 GtkTextIter * iter);
extern gboolean gtk_text_buffer_get_has_selection(GtkTextBuffer * buffer);
extern GtkTextMark *gtk_text_buffer_get_insert(GtkTextBuffer * buffer);
extern void gtk_text_buffer_get_iter_at_child_anchor(GtkTextBuffer *
						     buffer,
						     GtkTextIter * iter,
						     GtkTextChildAnchor *
						     anchor);
extern void gtk_text_buffer_get_iter_at_line(GtkTextBuffer * buffer,
					     GtkTextIter * iter,
					     gint line_number);
extern void gtk_text_buffer_get_iter_at_line_index(GtkTextBuffer * buffer,
						   GtkTextIter * iter,
						   gint line_number,
						   gint byte_index);
extern void gtk_text_buffer_get_iter_at_line_offset(GtkTextBuffer * buffer,
						    GtkTextIter * iter,
						    gint line_number,
						    gint char_offset);
extern void gtk_text_buffer_get_iter_at_mark(GtkTextBuffer * buffer,
					     GtkTextIter * iter,
					     GtkTextMark * mark);
extern void gtk_text_buffer_get_iter_at_offset(GtkTextBuffer * buffer,
					       GtkTextIter * iter,
					       gint char_offset);
extern gint gtk_text_buffer_get_line_count(GtkTextBuffer * buffer);
extern GtkTextMark *gtk_text_buffer_get_mark(GtkTextBuffer * buffer,
					     const gchar * name);
extern gboolean gtk_text_buffer_get_modified(GtkTextBuffer * buffer);
extern GtkTargetList *gtk_text_buffer_get_paste_target_list(GtkTextBuffer *
							    buffer);
extern GtkTextMark *gtk_text_buffer_get_selection_bound(GtkTextBuffer *
							buffer);
extern gboolean gtk_text_buffer_get_selection_bounds(GtkTextBuffer *
						     buffer,
						     GtkTextIter * start,
						     GtkTextIter * end);
extern gchar *gtk_text_buffer_get_slice(GtkTextBuffer * buffer,
					const GtkTextIter * start,
					const GtkTextIter * end,
					gboolean include_hidden_chars);
extern void gtk_text_buffer_get_start_iter(GtkTextBuffer * buffer,
					   GtkTextIter * iter);
extern GtkTextTagTable *gtk_text_buffer_get_tag_table(GtkTextBuffer *
						      buffer);
extern gchar *gtk_text_buffer_get_text(GtkTextBuffer * buffer,
				       const GtkTextIter * start,
				       const GtkTextIter * end,
				       gboolean include_hidden_chars);
extern GType gtk_text_buffer_get_type(void);
extern void gtk_text_buffer_insert(GtkTextBuffer * buffer,
				   GtkTextIter * iter, const gchar * text,
				   gint len);
extern void gtk_text_buffer_insert_at_cursor(GtkTextBuffer * buffer,
					     const gchar * text, gint len);
extern void gtk_text_buffer_insert_child_anchor(GtkTextBuffer * buffer,
						GtkTextIter * iter,
						GtkTextChildAnchor *
						anchor);
extern gboolean gtk_text_buffer_insert_interactive(GtkTextBuffer * buffer,
						   GtkTextIter * iter,
						   const gchar * text,
						   gint len,
						   gboolean
						   default_editable);
extern gboolean gtk_text_buffer_insert_interactive_at_cursor(GtkTextBuffer
							     * buffer,
							     const gchar *
							     text,
							     gint len,
							     gboolean
							     default_editable);
extern void gtk_text_buffer_insert_pixbuf(GtkTextBuffer * buffer,
					  GtkTextIter * iter,
					  GdkPixbuf * pixbuf);
extern void gtk_text_buffer_insert_range(GtkTextBuffer * buffer,
					 GtkTextIter * iter,
					 const GtkTextIter * start,
					 const GtkTextIter * end);
extern gboolean gtk_text_buffer_insert_range_interactive(GtkTextBuffer *
							 buffer,
							 GtkTextIter *
							 iter,
							 const GtkTextIter
							 * start,
							 const GtkTextIter
							 * end,
							 gboolean
							 default_editable);
extern void gtk_text_buffer_insert_with_tags(GtkTextBuffer * buffer,
					     GtkTextIter * iter,
					     const gchar * text, gint len,
					     GtkTextTag * first_tag, ...);
extern void gtk_text_buffer_insert_with_tags_by_name(GtkTextBuffer *
						     buffer,
						     GtkTextIter * iter,
						     const gchar * text,
						     gint len,
						     const gchar *
						     first_tag_name, ...);
extern void gtk_text_buffer_move_mark(GtkTextBuffer * buffer,
				      GtkTextMark * mark,
				      const GtkTextIter * where);
extern void gtk_text_buffer_move_mark_by_name(GtkTextBuffer * buffer,
					      const gchar * name,
					      const GtkTextIter * where);
extern GtkTextBuffer *gtk_text_buffer_new(GtkTextTagTable * table);
extern void gtk_text_buffer_paste_clipboard(GtkTextBuffer * buffer,
					    GtkClipboard * clipboard,
					    GtkTextIter *
					    override_location,
					    gboolean default_editable);
extern void gtk_text_buffer_place_cursor(GtkTextBuffer * buffer,
					 const GtkTextIter * where);
extern void gtk_text_buffer_remove_all_tags(GtkTextBuffer * buffer,
					    const GtkTextIter * start,
					    const GtkTextIter * end);
extern void gtk_text_buffer_remove_selection_clipboard(GtkTextBuffer *
						       buffer,
						       GtkClipboard *
						       clipboard);
extern void gtk_text_buffer_remove_tag(GtkTextBuffer * buffer,
				       GtkTextTag * tag,
				       const GtkTextIter * start,
				       const GtkTextIter * end);
extern void gtk_text_buffer_remove_tag_by_name(GtkTextBuffer * buffer,
					       const gchar * name,
					       const GtkTextIter * start,
					       const GtkTextIter * end);
extern void gtk_text_buffer_select_range(GtkTextBuffer * buffer,
					 const GtkTextIter * ins,
					 const GtkTextIter * bound);
extern void gtk_text_buffer_set_modified(GtkTextBuffer * buffer,
					 gboolean setting);
extern void gtk_text_buffer_set_text(GtkTextBuffer * buffer,
				     const gchar * text, gint len);
extern GType gtk_text_buffer_target_info_get_type(void);
extern gboolean gtk_text_child_anchor_get_deleted(GtkTextChildAnchor *
						  anchor);
extern GType gtk_text_child_anchor_get_type(void);
extern GList *gtk_text_child_anchor_get_widgets(GtkTextChildAnchor *
						anchor);
extern GtkTextChildAnchor *gtk_text_child_anchor_new(void);
extern GType gtk_text_direction_get_type(void);
extern gboolean gtk_text_iter_backward_char(GtkTextIter * iter);
extern gboolean gtk_text_iter_backward_chars(GtkTextIter * iter,
					     gint count);
extern gboolean gtk_text_iter_backward_cursor_position(GtkTextIter * iter);
extern gboolean gtk_text_iter_backward_cursor_positions(GtkTextIter * iter,
							gint count);
extern gboolean gtk_text_iter_backward_find_char(GtkTextIter * iter,
						 GtkTextCharPredicate pred,
						 gpointer user_data,
						 const GtkTextIter *
						 limit);
extern gboolean gtk_text_iter_backward_line(GtkTextIter * iter);
extern gboolean gtk_text_iter_backward_lines(GtkTextIter * iter,
					     gint count);
extern gboolean gtk_text_iter_backward_search(const GtkTextIter * iter,
					      const gchar * str,
					      GtkTextSearchFlags flags,
					      GtkTextIter * match_start,
					      GtkTextIter * match_end,
					      const GtkTextIter * limit);
extern gboolean gtk_text_iter_backward_sentence_start(GtkTextIter * iter);
extern gboolean gtk_text_iter_backward_sentence_starts(GtkTextIter * iter,
						       gint count);
extern gboolean gtk_text_iter_backward_to_tag_toggle(GtkTextIter * iter,
						     GtkTextTag * tag);
extern gboolean gtk_text_iter_backward_visible_cursor_position(GtkTextIter
							       * iter);
extern gboolean gtk_text_iter_backward_visible_cursor_positions(GtkTextIter
								* iter,
								gint
								count);
extern gboolean gtk_text_iter_backward_visible_line(GtkTextIter * iter);
extern gboolean gtk_text_iter_backward_visible_lines(GtkTextIter * iter,
						     gint count);
extern gboolean gtk_text_iter_backward_visible_word_start(GtkTextIter *
							  iter);
extern gboolean gtk_text_iter_backward_visible_word_starts(GtkTextIter *
							   iter,
							   gint count);
extern gboolean gtk_text_iter_backward_word_start(GtkTextIter * iter);
extern gboolean gtk_text_iter_backward_word_starts(GtkTextIter * iter,
						   gint count);
extern gboolean gtk_text_iter_begins_tag(const GtkTextIter * iter,
					 GtkTextTag * tag);
extern gboolean gtk_text_iter_can_insert(const GtkTextIter * iter,
					 gboolean default_editability);
extern gint gtk_text_iter_compare(const GtkTextIter * lhs,
				  const GtkTextIter * rhs);
extern GtkTextIter *gtk_text_iter_copy(const GtkTextIter * iter);
extern gboolean gtk_text_iter_editable(const GtkTextIter * iter,
				       gboolean default_setting);
extern gboolean gtk_text_iter_ends_line(const GtkTextIter * iter);
extern gboolean gtk_text_iter_ends_sentence(const GtkTextIter * iter);
extern gboolean gtk_text_iter_ends_tag(const GtkTextIter * iter,
				       GtkTextTag * tag);
extern gboolean gtk_text_iter_ends_word(const GtkTextIter * iter);
extern gboolean gtk_text_iter_equal(const GtkTextIter * lhs,
				    const GtkTextIter * rhs);
extern gboolean gtk_text_iter_forward_char(GtkTextIter * iter);
extern gboolean gtk_text_iter_forward_chars(GtkTextIter * iter,
					    gint count);
extern gboolean gtk_text_iter_forward_cursor_position(GtkTextIter * iter);
extern gboolean gtk_text_iter_forward_cursor_positions(GtkTextIter * iter,
						       gint count);
extern gboolean gtk_text_iter_forward_find_char(GtkTextIter * iter,
						GtkTextCharPredicate pred,
						gpointer user_data,
						const GtkTextIter * limit);
extern gboolean gtk_text_iter_forward_line(GtkTextIter * iter);
extern gboolean gtk_text_iter_forward_lines(GtkTextIter * iter,
					    gint count);
extern gboolean gtk_text_iter_forward_search(const GtkTextIter * iter,
					     const gchar * str,
					     GtkTextSearchFlags flags,
					     GtkTextIter * match_start,
					     GtkTextIter * match_end,
					     const GtkTextIter * limit);
extern gboolean gtk_text_iter_forward_sentence_end(GtkTextIter * iter);
extern gboolean gtk_text_iter_forward_sentence_ends(GtkTextIter * iter,
						    gint count);
extern void gtk_text_iter_forward_to_end(GtkTextIter * iter);
extern gboolean gtk_text_iter_forward_to_line_end(GtkTextIter * iter);
extern gboolean gtk_text_iter_forward_to_tag_toggle(GtkTextIter * iter,
						    GtkTextTag * tag);
extern gboolean gtk_text_iter_forward_visible_cursor_position(GtkTextIter *
							      iter);
extern gboolean gtk_text_iter_forward_visible_cursor_positions(GtkTextIter
							       * iter,
							       gint count);
extern gboolean gtk_text_iter_forward_visible_line(GtkTextIter * iter);
extern gboolean gtk_text_iter_forward_visible_lines(GtkTextIter * iter,
						    gint count);
extern gboolean gtk_text_iter_forward_visible_word_end(GtkTextIter * iter);
extern gboolean gtk_text_iter_forward_visible_word_ends(GtkTextIter * iter,
							gint count);
extern gboolean gtk_text_iter_forward_word_end(GtkTextIter * iter);
extern gboolean gtk_text_iter_forward_word_ends(GtkTextIter * iter,
						gint count);
extern void gtk_text_iter_free(GtkTextIter * iter);
extern gboolean gtk_text_iter_get_attributes(const GtkTextIter * iter,
					     GtkTextAttributes * values);
extern GtkTextBuffer *gtk_text_iter_get_buffer(const GtkTextIter * iter);
extern gint gtk_text_iter_get_bytes_in_line(const GtkTextIter * iter);
extern gunichar gtk_text_iter_get_char(const GtkTextIter * iter);
extern gint gtk_text_iter_get_chars_in_line(const GtkTextIter * iter);
extern GtkTextChildAnchor *gtk_text_iter_get_child_anchor(const GtkTextIter
							  * iter);
extern PangoLanguage *gtk_text_iter_get_language(const GtkTextIter * iter);
extern gint gtk_text_iter_get_line(const GtkTextIter * iter);
extern gint gtk_text_iter_get_line_index(const GtkTextIter * iter);
extern gint gtk_text_iter_get_line_offset(const GtkTextIter * iter);
extern GSList *gtk_text_iter_get_marks(const GtkTextIter * iter);
extern gint gtk_text_iter_get_offset(const GtkTextIter * iter);
extern GdkPixbuf *gtk_text_iter_get_pixbuf(const GtkTextIter * iter);
extern gchar *gtk_text_iter_get_slice(const GtkTextIter * start,
				      const GtkTextIter * end);
extern GSList *gtk_text_iter_get_tags(const GtkTextIter * iter);
extern gchar *gtk_text_iter_get_text(const GtkTextIter * start,
				     const GtkTextIter * end);
extern GSList *gtk_text_iter_get_toggled_tags(const GtkTextIter * iter,
					      gboolean toggled_on);
extern GType gtk_text_iter_get_type(void);
extern gint gtk_text_iter_get_visible_line_index(const GtkTextIter * iter);
extern gint gtk_text_iter_get_visible_line_offset(const GtkTextIter *
						  iter);
extern gchar *gtk_text_iter_get_visible_slice(const GtkTextIter * start,
					      const GtkTextIter * end);
extern gchar *gtk_text_iter_get_visible_text(const GtkTextIter * start,
					     const GtkTextIter * end);
extern gboolean gtk_text_iter_has_tag(const GtkTextIter * iter,
				      GtkTextTag * tag);
extern gboolean gtk_text_iter_in_range(const GtkTextIter * iter,
				       const GtkTextIter * start,
				       const GtkTextIter * end);
extern gboolean gtk_text_iter_inside_sentence(const GtkTextIter * iter);
extern gboolean gtk_text_iter_inside_word(const GtkTextIter * iter);
extern gboolean gtk_text_iter_is_cursor_position(const GtkTextIter * iter);
extern gboolean gtk_text_iter_is_end(const GtkTextIter * iter);
extern gboolean gtk_text_iter_is_start(const GtkTextIter * iter);
extern void gtk_text_iter_order(GtkTextIter * first, GtkTextIter * second);
extern void gtk_text_iter_set_line(GtkTextIter * iter, gint line_number);
extern void gtk_text_iter_set_line_index(GtkTextIter * iter,
					 gint byte_on_line);
extern void gtk_text_iter_set_line_offset(GtkTextIter * iter,
					  gint char_on_line);
extern void gtk_text_iter_set_offset(GtkTextIter * iter, gint char_offset);
extern void gtk_text_iter_set_visible_line_index(GtkTextIter * iter,
						 gint byte_on_line);
extern void gtk_text_iter_set_visible_line_offset(GtkTextIter * iter,
						  gint char_on_line);
extern gboolean gtk_text_iter_starts_line(const GtkTextIter * iter);
extern gboolean gtk_text_iter_starts_sentence(const GtkTextIter * iter);
extern gboolean gtk_text_iter_starts_word(const GtkTextIter * iter);
extern gboolean gtk_text_iter_toggles_tag(const GtkTextIter * iter,
					  GtkTextTag * tag);
extern GtkTextBuffer *gtk_text_mark_get_buffer(GtkTextMark *);
extern gboolean gtk_text_mark_get_deleted(GtkTextMark *);
extern gboolean gtk_text_mark_get_left_gravity(GtkTextMark *);
extern const char *gtk_text_mark_get_name(GtkTextMark *);
extern GType gtk_text_mark_get_type(void);
extern gboolean gtk_text_mark_get_visible(GtkTextMark *);
extern void gtk_text_mark_set_visible(GtkTextMark *, gboolean);
extern GType gtk_text_search_flags_get_type(void);
extern gboolean gtk_text_tag_event(GtkTextTag * tag,
				   GObject * event_object,
				   GdkEvent * event,
				   const GtkTextIter * iter);
extern gint gtk_text_tag_get_priority(GtkTextTag * tag);
extern GType gtk_text_tag_get_type(void);
extern GtkTextTag *gtk_text_tag_new(const gchar * name);
extern void gtk_text_tag_set_priority(GtkTextTag * tag, gint priority);
extern void gtk_text_tag_table_add(GtkTextTagTable * table,
				   GtkTextTag * tag);
extern void gtk_text_tag_table_foreach(GtkTextTagTable * table,
				       GtkTextTagTableForeach func,
				       gpointer data);
extern gint gtk_text_tag_table_get_size(GtkTextTagTable * table);
extern GType gtk_text_tag_table_get_type(void);
extern GtkTextTag *gtk_text_tag_table_lookup(GtkTextTagTable * table,
					     const gchar * name);
extern GtkTextTagTable *gtk_text_tag_table_new(void);
extern void gtk_text_tag_table_remove(GtkTextTagTable * table,
				      GtkTextTag * tag);
extern void gtk_text_view_add_child_at_anchor(GtkTextView * text_view,
					      GtkWidget * child,
					      GtkTextChildAnchor * anchor);
extern void gtk_text_view_add_child_in_window(GtkTextView * text_view,
					      GtkWidget * child,
					      GtkTextWindowType
					      which_window, gint xpos,
					      gint ypos);
extern gboolean gtk_text_view_backward_display_line(GtkTextView *
						    text_view,
						    GtkTextIter * iter);
extern gboolean gtk_text_view_backward_display_line_start(GtkTextView *
							  text_view,
							  GtkTextIter *
							  iter);
extern void gtk_text_view_buffer_to_window_coords(GtkTextView * text_view,
						  GtkTextWindowType win,
						  gint buffer_x,
						  gint buffer_y,
						  gint * window_x,
						  gint * window_y);
extern gboolean gtk_text_view_forward_display_line(GtkTextView * text_view,
						   GtkTextIter * iter);
extern gboolean gtk_text_view_forward_display_line_end(GtkTextView *
						       text_view,
						       GtkTextIter * iter);
extern gboolean gtk_text_view_get_accepts_tab(GtkTextView * text_view);
extern gint gtk_text_view_get_border_window_size(GtkTextView * text_view,
						 GtkTextWindowType type);
extern GtkTextBuffer *gtk_text_view_get_buffer(GtkTextView * text_view);
extern gboolean gtk_text_view_get_cursor_visible(GtkTextView * text_view);
extern GtkTextAttributes *gtk_text_view_get_default_attributes(GtkTextView
							       *
							       text_view);
extern gboolean gtk_text_view_get_editable(GtkTextView * text_view);
extern gint gtk_text_view_get_indent(GtkTextView * text_view);
extern void gtk_text_view_get_iter_at_location(GtkTextView * text_view,
					       GtkTextIter * iter, gint x,
					       gint y);
extern void gtk_text_view_get_iter_at_position(GtkTextView * text_view,
					       GtkTextIter * iter,
					       gint * trailing, gint x,
					       gint y);
extern void gtk_text_view_get_iter_location(GtkTextView * text_view,
					    const GtkTextIter * iter,
					    GdkRectangle * location);
extern GtkJustification gtk_text_view_get_justification(GtkTextView *
							text_view);
extern gint gtk_text_view_get_left_margin(GtkTextView * text_view);
extern void gtk_text_view_get_line_at_y(GtkTextView * text_view,
					GtkTextIter * target_iter, gint y,
					gint * line_top);
extern void gtk_text_view_get_line_yrange(GtkTextView * text_view,
					  const GtkTextIter * iter,
					  gint * y, gint * height);
extern gboolean gtk_text_view_get_overwrite(GtkTextView * text_view);
extern gint gtk_text_view_get_pixels_above_lines(GtkTextView * text_view);
extern gint gtk_text_view_get_pixels_below_lines(GtkTextView * text_view);
extern gint gtk_text_view_get_pixels_inside_wrap(GtkTextView * text_view);
extern gint gtk_text_view_get_right_margin(GtkTextView * text_view);
extern PangoTabArray *gtk_text_view_get_tabs(GtkTextView * text_view);
extern GType gtk_text_view_get_type(void);
extern void gtk_text_view_get_visible_rect(GtkTextView * text_view,
					   GdkRectangle * visible_rect);
extern GdkWindow *gtk_text_view_get_window(GtkTextView * text_view,
					   GtkTextWindowType win);
extern GtkTextWindowType gtk_text_view_get_window_type(GtkTextView *
						       text_view,
						       GdkWindow * window);
extern GtkWrapMode gtk_text_view_get_wrap_mode(GtkTextView * text_view);
extern void gtk_text_view_move_child(GtkTextView * text_view,
				     GtkWidget * child, gint xpos,
				     gint ypos);
extern gboolean gtk_text_view_move_mark_onscreen(GtkTextView * text_view,
						 GtkTextMark * mark);
extern gboolean gtk_text_view_move_visually(GtkTextView * text_view,
					    GtkTextIter * iter,
					    gint count);
extern GtkWidget *gtk_text_view_new(void);
extern GtkWidget *gtk_text_view_new_with_buffer(GtkTextBuffer * buffer);
extern gboolean gtk_text_view_place_cursor_onscreen(GtkTextView *
						    text_view);
extern void gtk_text_view_scroll_mark_onscreen(GtkTextView * text_view,
					       GtkTextMark * mark);
extern gboolean gtk_text_view_scroll_to_iter(GtkTextView * text_view,
					     GtkTextIter * iter,
					     gdouble within_margin,
					     gboolean use_align,
					     gdouble xalign,
					     gdouble yalign);
extern void gtk_text_view_scroll_to_mark(GtkTextView * text_view,
					 GtkTextMark * mark,
					 gdouble within_margin,
					 gboolean use_align,
					 gdouble xalign, gdouble yalign);
extern void gtk_text_view_set_accepts_tab(GtkTextView * text_view,
					  gboolean accepts_tab);
extern void gtk_text_view_set_border_window_size(GtkTextView * text_view,
						 GtkTextWindowType type,
						 gint size);
extern void gtk_text_view_set_buffer(GtkTextView * text_view,
				     GtkTextBuffer * buffer);
extern void gtk_text_view_set_cursor_visible(GtkTextView * text_view,
					     gboolean setting);
extern void gtk_text_view_set_editable(GtkTextView * text_view,
				       gboolean setting);
extern void gtk_text_view_set_indent(GtkTextView * text_view, gint indent);
extern void gtk_text_view_set_justification(GtkTextView * text_view,
					    GtkJustification
					    justification);
extern void gtk_text_view_set_left_margin(GtkTextView * text_view,
					  gint left_margin);
extern void gtk_text_view_set_overwrite(GtkTextView * text_view,
					gboolean overwrite);
extern void gtk_text_view_set_pixels_above_lines(GtkTextView * text_view,
						 gint pixels_above_lines);
extern void gtk_text_view_set_pixels_below_lines(GtkTextView * text_view,
						 gint pixels_below_lines);
extern void gtk_text_view_set_pixels_inside_wrap(GtkTextView * text_view,
						 gint pixels_inside_wrap);
extern void gtk_text_view_set_right_margin(GtkTextView * text_view,
					   gint right_margin);
extern void gtk_text_view_set_tabs(GtkTextView * text_view,
				   PangoTabArray * tabs);
extern void gtk_text_view_set_wrap_mode(GtkTextView * text_view,
					GtkWrapMode wrap_mode);
extern gboolean gtk_text_view_starts_display_line(GtkTextView * text_view,
						  const GtkTextIter *
						  iter);
extern void gtk_text_view_window_to_buffer_coords(GtkTextView * text_view,
						  GtkTextWindowType win,
						  gint window_x,
						  gint window_y,
						  gint * buffer_x,
						  gint * buffer_y);
extern GType gtk_text_window_type_get_type(void);
extern gboolean gtk_toggle_action_get_active(GtkToggleAction * action);
extern gboolean gtk_toggle_action_get_draw_as_radio(GtkToggleAction *
						    action);
extern GType gtk_toggle_action_get_type(void);
extern GtkToggleAction *gtk_toggle_action_new(const gchar * name,
					      const gchar * label,
					      const gchar * tooltip,
					      const gchar * stock_id);
extern void gtk_toggle_action_set_active(GtkToggleAction * action,
					 gboolean is_active);
extern void gtk_toggle_action_set_draw_as_radio(GtkToggleAction * action,
						gboolean draw_as_radio);
extern void gtk_toggle_action_toggled(GtkToggleAction * action);
extern gboolean gtk_toggle_button_get_active(GtkToggleButton *
					     toggle_button);
extern gboolean gtk_toggle_button_get_inconsistent(GtkToggleButton *
						   toggle_button);
extern gboolean gtk_toggle_button_get_mode(GtkToggleButton *
					   toggle_button);
extern GType gtk_toggle_button_get_type(void);
extern GtkWidget *gtk_toggle_button_new(void);
extern GtkWidget *gtk_toggle_button_new_with_label(const gchar * label);
extern GtkWidget *gtk_toggle_button_new_with_mnemonic(const gchar * label);
extern void gtk_toggle_button_set_active(GtkToggleButton * toggle_button,
					 gboolean is_active);
extern void gtk_toggle_button_set_inconsistent(GtkToggleButton *
					       toggle_button,
					       gboolean setting);
extern void gtk_toggle_button_set_mode(GtkToggleButton * toggle_button,
				       gboolean draw_indicator);
extern void gtk_toggle_button_toggled(GtkToggleButton * toggle_button);
extern gboolean gtk_toggle_tool_button_get_active(GtkToggleToolButton *
						  button);
extern GType gtk_toggle_tool_button_get_type(void);
extern GtkToolItem *gtk_toggle_tool_button_new(void);
extern GtkToolItem *gtk_toggle_tool_button_new_from_stock(const gchar *
							  stock_id);
extern void gtk_toggle_tool_button_set_active(GtkToggleToolButton * button,
					      gboolean is_active);
extern const gchar *gtk_tool_button_get_icon_name(GtkToolButton * button);
extern GtkWidget *gtk_tool_button_get_icon_widget(GtkToolButton * button);
extern const gchar *gtk_tool_button_get_label(GtkToolButton * button);
extern GtkWidget *gtk_tool_button_get_label_widget(GtkToolButton * button);
extern const gchar *gtk_tool_button_get_stock_id(GtkToolButton * button);
extern GType gtk_tool_button_get_type(void);
extern gboolean gtk_tool_button_get_use_underline(GtkToolButton * button);
extern GtkToolItem *gtk_tool_button_new(GtkWidget * icon_widget,
					const gchar * label);
extern GtkToolItem *gtk_tool_button_new_from_stock(const gchar * stock_id);
extern void gtk_tool_button_set_icon_name(GtkToolButton * button,
					  const gchar * icon_name);
extern void gtk_tool_button_set_icon_widget(GtkToolButton * button,
					    GtkWidget * icon_widget);
extern void gtk_tool_button_set_label(GtkToolButton * button,
				      const gchar * label);
extern void gtk_tool_button_set_label_widget(GtkToolButton * button,
					     GtkWidget * label_widget);
extern void gtk_tool_button_set_stock_id(GtkToolButton * button,
					 const gchar * stock_id);
extern void gtk_tool_button_set_use_underline(GtkToolButton * button,
					      gboolean use_underline);
extern gboolean gtk_tool_item_get_expand(GtkToolItem * tool_item);
extern gboolean gtk_tool_item_get_homogeneous(GtkToolItem * tool_item);
extern GtkIconSize gtk_tool_item_get_icon_size(GtkToolItem * tool_item);
extern gboolean gtk_tool_item_get_is_important(GtkToolItem * tool_item);
extern GtkOrientation gtk_tool_item_get_orientation(GtkToolItem *
						    tool_item);
extern GtkWidget *gtk_tool_item_get_proxy_menu_item(GtkToolItem *
						    tool_item,
						    const gchar *
						    menu_item_id);
extern GtkReliefStyle gtk_tool_item_get_relief_style(GtkToolItem *
						     tool_item);
extern GtkToolbarStyle gtk_tool_item_get_toolbar_style(GtkToolItem *
						       tool_item);
extern GType gtk_tool_item_get_type(void);
extern gboolean gtk_tool_item_get_use_drag_window(GtkToolItem * tool_item);
extern gboolean gtk_tool_item_get_visible_horizontal(GtkToolItem *
						     tool_item);
extern gboolean gtk_tool_item_get_visible_vertical(GtkToolItem *
						   tool_item);
extern GtkToolItem *gtk_tool_item_new(void);
extern void gtk_tool_item_rebuild_menu(GtkToolItem * tool_item);
extern GtkWidget *gtk_tool_item_retrieve_proxy_menu_item(GtkToolItem *
							 tool_item);
extern void gtk_tool_item_set_expand(GtkToolItem * tool_item,
				     gboolean expand);
extern void gtk_tool_item_set_homogeneous(GtkToolItem * tool_item,
					  gboolean homogeneous);
extern void gtk_tool_item_set_is_important(GtkToolItem * tool_item,
					   gboolean is_important);
extern void gtk_tool_item_set_proxy_menu_item(GtkToolItem * tool_item,
					      const gchar * menu_item_id,
					      GtkWidget * menu_item);
extern void gtk_tool_item_set_tooltip(GtkToolItem * tool_item,
				      GtkTooltips * tooltips,
				      const gchar * tip_text,
				      const gchar * tip_private);
extern void gtk_tool_item_set_use_drag_window(GtkToolItem * tool_item,
					      gboolean use_drag_window);
extern void gtk_tool_item_set_visible_horizontal(GtkToolItem * tool_item,
						 gboolean
						 visible_horizontal);
extern void gtk_tool_item_set_visible_vertical(GtkToolItem * tool_item,
					       gboolean visible_vertical);
extern GType gtk_toolbar_child_type_get_type(void);
extern gint gtk_toolbar_get_drop_index(GtkToolbar * toolbar, gint x,
				       gint y);
extern GtkIconSize gtk_toolbar_get_icon_size(GtkToolbar * toolbar);
extern gint gtk_toolbar_get_item_index(GtkToolbar * toolbar,
				       GtkToolItem * item);
extern gint gtk_toolbar_get_n_items(GtkToolbar * toolbar);
extern GtkToolItem *gtk_toolbar_get_nth_item(GtkToolbar * toolbar, gint n);
extern GtkOrientation gtk_toolbar_get_orientation(GtkToolbar * toolbar);
extern GtkReliefStyle gtk_toolbar_get_relief_style(GtkToolbar * toolbar);
extern gboolean gtk_toolbar_get_show_arrow(GtkToolbar * toolbar);
extern GtkToolbarStyle gtk_toolbar_get_style(GtkToolbar * toolbar);
extern gboolean gtk_toolbar_get_tooltips(GtkToolbar * toolbar);
extern GType gtk_toolbar_get_type(void);
extern void gtk_toolbar_insert(GtkToolbar * toolbar, GtkToolItem * item,
			       gint pos);
extern GtkWidget *gtk_toolbar_new(void);
extern void gtk_toolbar_set_drop_highlight_item(GtkToolbar * toolbar,
						GtkToolItem * tool_item,
						gint index_);
extern void gtk_toolbar_set_icon_size(GtkToolbar * toolbar,
				      GtkIconSize icon_size);
extern void gtk_toolbar_set_orientation(GtkToolbar * toolbar,
					GtkOrientation orientation);
extern void gtk_toolbar_set_show_arrow(GtkToolbar * toolbar,
				       gboolean show_arrow);
extern void gtk_toolbar_set_style(GtkToolbar * toolbar,
				  GtkToolbarStyle style);
extern void gtk_toolbar_set_tooltips(GtkToolbar * toolbar,
				     gboolean enable);
extern GType gtk_toolbar_space_style_get_type(void);
extern GType gtk_toolbar_style_get_type(void);
extern void gtk_toolbar_unset_style(GtkToolbar * toolbar);
extern GtkTooltipsData *gtk_tooltips_data_get(GtkWidget * widget);
extern void gtk_tooltips_disable(GtkTooltips * tooltips);
extern void gtk_tooltips_enable(GtkTooltips * tooltips);
extern void gtk_tooltips_force_window(GtkTooltips * tooltips);
extern gboolean gtk_tooltips_get_info_from_tip_window(GtkWindow *
						      tip_window,
						      GtkTooltips *
						      *tooltips,
						      GtkWidget *
						      *current_widget);
extern GType gtk_tooltips_get_type(void);
extern GtkTooltips *gtk_tooltips_new(void);
extern void gtk_tooltips_set_tip(GtkTooltips * tooltips,
				 GtkWidget * widget,
				 const gchar * tip_text,
				 const gchar * tip_private);
extern gboolean gtk_tree_drag_dest_drag_data_received(GtkTreeDragDest *
						      drag_dest,
						      GtkTreePath * dest,
						      GtkSelectionData *
						      selection_data);
extern GType gtk_tree_drag_dest_get_type(void);
extern gboolean gtk_tree_drag_dest_row_drop_possible(GtkTreeDragDest *
						     drag_dest,
						     GtkTreePath *
						     dest_path,
						     GtkSelectionData *
						     selection_data);
extern gboolean gtk_tree_drag_source_drag_data_delete(GtkTreeDragSource *
						      drag_source,
						      GtkTreePath * path);
extern gboolean gtk_tree_drag_source_drag_data_get(GtkTreeDragSource *
						   drag_source,
						   GtkTreePath * path,
						   GtkSelectionData *
						   selection_data);
extern GType gtk_tree_drag_source_get_type(void);
extern gboolean gtk_tree_drag_source_row_draggable(GtkTreeDragSource *
						   drag_source,
						   GtkTreePath * path);
extern gboolean gtk_tree_get_row_drag_data(GtkSelectionData *
					   selection_data,
					   GtkTreeModel * *tree_model,
					   GtkTreePath * *path);
extern GtkTreeIter *gtk_tree_iter_copy(GtkTreeIter * iter);
extern void gtk_tree_iter_free(GtkTreeIter * iter);
extern GType gtk_tree_iter_get_type(void);
extern void gtk_tree_model_filter_clear_cache(GtkTreeModelFilter * filter);
extern gboolean
gtk_tree_model_filter_convert_child_iter_to_iter(GtkTreeModelFilter *
						 filter,
						 GtkTreeIter * filter_iter,
						 GtkTreeIter * child_iter);
extern GtkTreePath
    *gtk_tree_model_filter_convert_child_path_to_path(GtkTreeModelFilter *
						      filter,
						      GtkTreePath *
						      child_path);
extern void
gtk_tree_model_filter_convert_iter_to_child_iter(GtkTreeModelFilter *
						 filter,
						 GtkTreeIter * child_iter,
						 GtkTreeIter *
						 filter_iter);
extern GtkTreePath
    *gtk_tree_model_filter_convert_path_to_child_path(GtkTreeModelFilter *
						      filter,
						      GtkTreePath *
						      filter_path);
extern GtkTreeModel *gtk_tree_model_filter_get_model(GtkTreeModelFilter *
						     filter);
extern GType gtk_tree_model_filter_get_type(void);
extern GtkTreeModel *gtk_tree_model_filter_new(GtkTreeModel * child_model,
					       GtkTreePath * root);
extern void gtk_tree_model_filter_refilter(GtkTreeModelFilter * filter);
extern void gtk_tree_model_filter_set_modify_func(GtkTreeModelFilter *
						  filter, gint n_columns,
						  GType * types,
						  GtkTreeModelFilterModifyFunc
						  func, gpointer data,
						  GtkDestroyNotify
						  destroy);
extern void gtk_tree_model_filter_set_visible_column(GtkTreeModelFilter *
						     filter, gint column);
extern void gtk_tree_model_filter_set_visible_func(GtkTreeModelFilter *
						   filter,
						   GtkTreeModelFilterVisibleFunc
						   func, gpointer data,
						   GtkDestroyNotify
						   destroy);
extern GType gtk_tree_model_flags_get_type(void);
extern void gtk_tree_model_foreach(GtkTreeModel * model,
				   GtkTreeModelForeachFunc func,
				   gpointer user_data);
extern void gtk_tree_model_get(GtkTreeModel * tree_model,
			       GtkTreeIter * iter, ...);
extern GType gtk_tree_model_get_column_type(GtkTreeModel * tree_model,
					    gint index_);
extern GtkTreeModelFlags gtk_tree_model_get_flags(GtkTreeModel *
						  tree_model);
extern gboolean gtk_tree_model_get_iter(GtkTreeModel * tree_model,
					GtkTreeIter * iter,
					GtkTreePath * path);
extern gboolean gtk_tree_model_get_iter_first(GtkTreeModel * tree_model,
					      GtkTreeIter * iter);
extern gboolean gtk_tree_model_get_iter_from_string(GtkTreeModel *
						    tree_model,
						    GtkTreeIter * iter,
						    const gchar *
						    path_string);
extern gint gtk_tree_model_get_n_columns(GtkTreeModel * tree_model);
extern GtkTreePath *gtk_tree_model_get_path(GtkTreeModel * tree_model,
					    GtkTreeIter * iter);
extern gchar *gtk_tree_model_get_string_from_iter(GtkTreeModel *
						  tree_model,
						  GtkTreeIter * iter);
extern GType gtk_tree_model_get_type(void);
extern void gtk_tree_model_get_valist(GtkTreeModel * tree_model,
				      GtkTreeIter * iter,
				      va_list var_args);
extern void gtk_tree_model_get_value(GtkTreeModel * tree_model,
				     GtkTreeIter * iter, gint column,
				     GValue * value);
extern gboolean gtk_tree_model_iter_children(GtkTreeModel * tree_model,
					     GtkTreeIter * iter,
					     GtkTreeIter * parent);
extern gboolean gtk_tree_model_iter_has_child(GtkTreeModel * tree_model,
					      GtkTreeIter * iter);
extern gint gtk_tree_model_iter_n_children(GtkTreeModel * tree_model,
					   GtkTreeIter * iter);
extern gboolean gtk_tree_model_iter_next(GtkTreeModel * tree_model,
					 GtkTreeIter * iter);
extern gboolean gtk_tree_model_iter_nth_child(GtkTreeModel * tree_model,
					      GtkTreeIter * iter,
					      GtkTreeIter * parent,
					      gint n);
extern gboolean gtk_tree_model_iter_parent(GtkTreeModel * tree_model,
					   GtkTreeIter * iter,
					   GtkTreeIter * child);
extern void gtk_tree_model_ref_node(GtkTreeModel * tree_model,
				    GtkTreeIter * iter);
extern void gtk_tree_model_row_changed(GtkTreeModel * tree_model,
				       GtkTreePath * path,
				       GtkTreeIter * iter);
extern void gtk_tree_model_row_deleted(GtkTreeModel * tree_model,
				       GtkTreePath * path);
extern void gtk_tree_model_row_has_child_toggled(GtkTreeModel * tree_model,
						 GtkTreePath * path,
						 GtkTreeIter * iter);
extern void gtk_tree_model_row_inserted(GtkTreeModel * tree_model,
					GtkTreePath * path,
					GtkTreeIter * iter);
extern void gtk_tree_model_rows_reordered(GtkTreeModel * tree_model,
					  GtkTreePath * path,
					  GtkTreeIter * iter,
					  gint * new_order);
extern void gtk_tree_model_sort_clear_cache(GtkTreeModelSort *
					    tree_model_sort);
extern gboolean
gtk_tree_model_sort_convert_child_iter_to_iter(GtkTreeModelSort *
					       tree_model_sort,
					       GtkTreeIter * sort_iter,
					       GtkTreeIter * child_iter);
extern GtkTreePath
    *gtk_tree_model_sort_convert_child_path_to_path(GtkTreeModelSort *
						    tree_model_sort,
						    GtkTreePath *
						    child_path);
extern void gtk_tree_model_sort_convert_iter_to_child_iter(GtkTreeModelSort
							   *
							   tree_model_sort,
							   GtkTreeIter *
							   child_iter,
							   GtkTreeIter *
							   sorted_iter);
extern GtkTreePath
    *gtk_tree_model_sort_convert_path_to_child_path(GtkTreeModelSort *
						    tree_model_sort,
						    GtkTreePath *
						    sorted_path);
extern GtkTreeModel *gtk_tree_model_sort_get_model(GtkTreeModelSort *
						   tree_model);
extern GType gtk_tree_model_sort_get_type(void);
extern gboolean gtk_tree_model_sort_iter_is_valid(GtkTreeModelSort *
						  tree_model_sort,
						  GtkTreeIter * iter);
extern GtkTreeModel *gtk_tree_model_sort_new_with_model(GtkTreeModel *
							child_model);
extern void gtk_tree_model_sort_reset_default_sort_func(GtkTreeModelSort *
							tree_model_sort);
extern void gtk_tree_model_unref_node(GtkTreeModel * tree_model,
				      GtkTreeIter * iter);
extern void gtk_tree_path_append_index(GtkTreePath * path, gint index_);
extern gint gtk_tree_path_compare(const GtkTreePath * a,
				  const GtkTreePath * b);
extern GtkTreePath *gtk_tree_path_copy(const GtkTreePath * path);
extern void gtk_tree_path_down(GtkTreePath * path);
extern void gtk_tree_path_free(GtkTreePath * path);
extern gint gtk_tree_path_get_depth(GtkTreePath * path);
extern gint *gtk_tree_path_get_indices(GtkTreePath * path);
extern GType gtk_tree_path_get_type(void);
extern gboolean gtk_tree_path_is_ancestor(GtkTreePath * path,
					  GtkTreePath * descendant);
extern gboolean gtk_tree_path_is_descendant(GtkTreePath * path,
					    GtkTreePath * ancestor);
extern GtkTreePath *gtk_tree_path_new(void);
extern GtkTreePath *gtk_tree_path_new_first(void);
extern GtkTreePath *gtk_tree_path_new_from_indices(gint first_index, ...);
extern GtkTreePath *gtk_tree_path_new_from_string(const gchar * path);
extern void gtk_tree_path_next(GtkTreePath * path);
extern void gtk_tree_path_prepend_index(GtkTreePath * path, gint index_);
extern gboolean gtk_tree_path_prev(GtkTreePath * path);
extern gchar *gtk_tree_path_to_string(GtkTreePath * path);
extern gboolean gtk_tree_path_up(GtkTreePath * path);
extern GtkTreeRowReference *gtk_tree_row_reference_copy(GtkTreeRowReference
							* reference);
extern void gtk_tree_row_reference_deleted(GObject * proxy,
					   GtkTreePath * path);
extern void gtk_tree_row_reference_free(GtkTreeRowReference * reference);
extern GtkTreeModel *gtk_tree_row_reference_get_model(GtkTreeRowReference *
						      reference);
extern GtkTreePath *gtk_tree_row_reference_get_path(GtkTreeRowReference *
						    reference);
extern GType gtk_tree_row_reference_get_type(void);
extern void gtk_tree_row_reference_inserted(GObject * proxy,
					    GtkTreePath * path);
extern GtkTreeRowReference *gtk_tree_row_reference_new(GtkTreeModel *
						       model,
						       GtkTreePath * path);
extern GtkTreeRowReference *gtk_tree_row_reference_new_proxy(GObject *
							     proxy,
							     GtkTreeModel *
							     model,
							     GtkTreePath *
							     path);
extern void gtk_tree_row_reference_reordered(GObject * proxy,
					     GtkTreePath * path,
					     GtkTreeIter * iter,
					     gint * new_order);
extern gboolean gtk_tree_row_reference_valid(GtkTreeRowReference *
					     reference);
extern gint gtk_tree_selection_count_selected_rows(GtkTreeSelection *
						   selection);
extern GtkSelectionMode gtk_tree_selection_get_mode(GtkTreeSelection *
						    selection);
extern gboolean gtk_tree_selection_get_selected(GtkTreeSelection *
						selection,
						GtkTreeModel * *model,
						GtkTreeIter * iter);
extern GList *gtk_tree_selection_get_selected_rows(GtkTreeSelection *
						   selection,
						   GtkTreeModel * *model);
extern GtkTreeView *gtk_tree_selection_get_tree_view(GtkTreeSelection *
						     selection);
extern GType gtk_tree_selection_get_type(void);
extern gpointer gtk_tree_selection_get_user_data(GtkTreeSelection *
						 selection);
extern gboolean gtk_tree_selection_iter_is_selected(GtkTreeSelection *
						    selection,
						    GtkTreeIter * iter);
extern gboolean gtk_tree_selection_path_is_selected(GtkTreeSelection *
						    selection,
						    GtkTreePath * path);
extern void gtk_tree_selection_select_all(GtkTreeSelection * selection);
extern void gtk_tree_selection_select_iter(GtkTreeSelection * selection,
					   GtkTreeIter * iter);
extern void gtk_tree_selection_select_path(GtkTreeSelection * selection,
					   GtkTreePath * path);
extern void gtk_tree_selection_select_range(GtkTreeSelection * selection,
					    GtkTreePath * start_path,
					    GtkTreePath * end_path);
extern void gtk_tree_selection_selected_foreach(GtkTreeSelection *
						selection,
						GtkTreeSelectionForeachFunc
						func, gpointer data);
extern void gtk_tree_selection_set_mode(GtkTreeSelection * selection,
					GtkSelectionMode type);
extern void gtk_tree_selection_set_select_function(GtkTreeSelection *
						   selection,
						   GtkTreeSelectionFunc
						   func, gpointer data,
						   GtkDestroyNotify
						   destroy);
extern void gtk_tree_selection_unselect_all(GtkTreeSelection * selection);
extern void gtk_tree_selection_unselect_iter(GtkTreeSelection * selection,
					     GtkTreeIter * iter);
extern void gtk_tree_selection_unselect_path(GtkTreeSelection * selection,
					     GtkTreePath * path);
extern void gtk_tree_selection_unselect_range(GtkTreeSelection * selection,
					      GtkTreePath * start_path,
					      GtkTreePath * end_path);
extern gboolean gtk_tree_set_row_drag_data(GtkSelectionData *
					   selection_data,
					   GtkTreeModel * tree_model,
					   GtkTreePath * path);
extern gboolean gtk_tree_sortable_get_sort_column_id(GtkTreeSortable *
						     sortable,
						     gint * sort_column_id,
						     GtkSortType * order);
extern GType gtk_tree_sortable_get_type(void);
extern gboolean gtk_tree_sortable_has_default_sort_func(GtkTreeSortable *
							sortable);
extern void gtk_tree_sortable_set_default_sort_func(GtkTreeSortable *
						    sortable,
						    GtkTreeIterCompareFunc
						    sort_func,
						    gpointer user_data,
						    GtkDestroyNotify
						    destroy);
extern void gtk_tree_sortable_set_sort_column_id(GtkTreeSortable *
						 sortable,
						 gint sort_column_id,
						 GtkSortType order);
extern void gtk_tree_sortable_set_sort_func(GtkTreeSortable * sortable,
					    gint sort_column_id,
					    GtkTreeIterCompareFunc
					    sort_func, gpointer user_data,
					    GtkDestroyNotify destroy);
extern void gtk_tree_sortable_sort_column_changed(GtkTreeSortable *
						  sortable);
extern void gtk_tree_store_append(GtkTreeStore * tree_store,
				  GtkTreeIter * iter,
				  GtkTreeIter * parent);
extern void gtk_tree_store_clear(GtkTreeStore * tree_store);
extern GType gtk_tree_store_get_type(void);
extern void gtk_tree_store_insert(GtkTreeStore * tree_store,
				  GtkTreeIter * iter, GtkTreeIter * parent,
				  gint position);
extern void gtk_tree_store_insert_after(GtkTreeStore * tree_store,
					GtkTreeIter * iter,
					GtkTreeIter * parent,
					GtkTreeIter * sibling);
extern void gtk_tree_store_insert_before(GtkTreeStore * tree_store,
					 GtkTreeIter * iter,
					 GtkTreeIter * parent,
					 GtkTreeIter * sibling);
extern void gtk_tree_store_insert_with_values(GtkTreeStore * tree_store,
					      GtkTreeIter * iter,
					      GtkTreeIter * parent,
					      gint position, ...);
extern void gtk_tree_store_insert_with_valuesv(GtkTreeStore * tree_store,
					       GtkTreeIter * iter,
					       GtkTreeIter * parent,
					       gint position,
					       gint * columns,
					       GValue * values,
					       gint n_values);
extern gboolean gtk_tree_store_is_ancestor(GtkTreeStore * tree_store,
					   GtkTreeIter * iter,
					   GtkTreeIter * descendant);
extern gint gtk_tree_store_iter_depth(GtkTreeStore * tree_store,
				      GtkTreeIter * iter);
extern gboolean gtk_tree_store_iter_is_valid(GtkTreeStore * tree_store,
					     GtkTreeIter * iter);
extern void gtk_tree_store_move_after(GtkTreeStore * tree_store,
				      GtkTreeIter * iter,
				      GtkTreeIter * position);
extern void gtk_tree_store_move_before(GtkTreeStore * tree_store,
				       GtkTreeIter * iter,
				       GtkTreeIter * position);
extern GtkTreeStore *gtk_tree_store_new(gint n_columns, ...);
extern GtkTreeStore *gtk_tree_store_newv(gint n_columns, GType * types);
extern void gtk_tree_store_prepend(GtkTreeStore * tree_store,
				   GtkTreeIter * iter,
				   GtkTreeIter * parent);
extern gboolean gtk_tree_store_remove(GtkTreeStore * tree_store,
				      GtkTreeIter * iter);
extern void gtk_tree_store_reorder(GtkTreeStore * tree_store,
				   GtkTreeIter * parent, gint * new_order);
extern void gtk_tree_store_set(GtkTreeStore * tree_store,
			       GtkTreeIter * iter, ...);
extern void gtk_tree_store_set_column_types(GtkTreeStore * tree_store,
					    gint n_columns, GType * types);
extern void gtk_tree_store_set_valist(GtkTreeStore * tree_store,
				      GtkTreeIter * iter,
				      va_list var_args);
extern void gtk_tree_store_set_value(GtkTreeStore * tree_store,
				     GtkTreeIter * iter, gint column,
				     GValue * value);
extern void gtk_tree_store_swap(GtkTreeStore * tree_store, GtkTreeIter * a,
				GtkTreeIter * b);
extern gint gtk_tree_view_append_column(GtkTreeView * tree_view,
					GtkTreeViewColumn * column);
extern void gtk_tree_view_collapse_all(GtkTreeView * tree_view);
extern gboolean gtk_tree_view_collapse_row(GtkTreeView * tree_view,
					   GtkTreePath * path);
extern void gtk_tree_view_column_add_attribute(GtkTreeViewColumn *
					       tree_column,
					       GtkCellRenderer *
					       cell_renderer,
					       const gchar * attribute,
					       gint column);
extern gboolean gtk_tree_view_column_cell_get_position(GtkTreeViewColumn *
						       tree_column,
						       GtkCellRenderer *
						       cell_renderer,
						       gint * start_pos,
						       gint * width);
extern void gtk_tree_view_column_cell_get_size(GtkTreeViewColumn *
					       tree_column,
					       const GdkRectangle *
					       cell_area, gint * x_offset,
					       gint * y_offset,
					       gint * width,
					       gint * height);
extern gboolean gtk_tree_view_column_cell_is_visible(GtkTreeViewColumn *
						     tree_column);
extern void gtk_tree_view_column_cell_set_cell_data(GtkTreeViewColumn *
						    tree_column,
						    GtkTreeModel *
						    tree_model,
						    GtkTreeIter * iter,
						    gboolean is_expander,
						    gboolean is_expanded);
extern void gtk_tree_view_column_clear(GtkTreeViewColumn * tree_column);
extern void gtk_tree_view_column_clear_attributes(GtkTreeViewColumn *
						  tree_column,
						  GtkCellRenderer *
						  cell_renderer);
extern void gtk_tree_view_column_clicked(GtkTreeViewColumn * tree_column);
extern void gtk_tree_view_column_focus_cell(GtkTreeViewColumn *
					    tree_column,
					    GtkCellRenderer * cell);
extern gfloat gtk_tree_view_column_get_alignment(GtkTreeViewColumn *
						 tree_column);
extern GList *gtk_tree_view_column_get_cell_renderers(GtkTreeViewColumn *
						      tree_column);
extern gboolean gtk_tree_view_column_get_clickable(GtkTreeViewColumn *
						   tree_column);
extern gboolean gtk_tree_view_column_get_expand(GtkTreeViewColumn *
						tree_column);
extern gint gtk_tree_view_column_get_fixed_width(GtkTreeViewColumn *
						 tree_column);
extern gint gtk_tree_view_column_get_max_width(GtkTreeViewColumn *
					       tree_column);
extern gint gtk_tree_view_column_get_min_width(GtkTreeViewColumn *
					       tree_column);
extern gboolean gtk_tree_view_column_get_reorderable(GtkTreeViewColumn *
						     tree_column);
extern gboolean gtk_tree_view_column_get_resizable(GtkTreeViewColumn *
						   tree_column);
extern GtkTreeViewColumnSizing
gtk_tree_view_column_get_sizing(GtkTreeViewColumn * tree_column);
extern gint gtk_tree_view_column_get_sort_column_id(GtkTreeViewColumn *
						    tree_column);
extern gboolean gtk_tree_view_column_get_sort_indicator(GtkTreeViewColumn *
							tree_column);
extern GtkSortType gtk_tree_view_column_get_sort_order(GtkTreeViewColumn *
						       tree_column);
extern gint gtk_tree_view_column_get_spacing(GtkTreeViewColumn *
					     tree_column);
extern const gchar *gtk_tree_view_column_get_title(GtkTreeViewColumn *
						   tree_column);
extern GType gtk_tree_view_column_get_type(void);
extern gboolean gtk_tree_view_column_get_visible(GtkTreeViewColumn *
						 tree_column);
extern GtkWidget *gtk_tree_view_column_get_widget(GtkTreeViewColumn *
						  tree_column);
extern gint gtk_tree_view_column_get_width(GtkTreeViewColumn *
					   tree_column);
extern GtkTreeViewColumn *gtk_tree_view_column_new(void);
extern GtkTreeViewColumn *gtk_tree_view_column_new_with_attributes(const
								   gchar *
								   title,
								   GtkCellRenderer
								   * cell,
								   ...);
extern void gtk_tree_view_column_pack_end(GtkTreeViewColumn * tree_column,
					  GtkCellRenderer * cell,
					  gboolean expand);
extern void gtk_tree_view_column_pack_start(GtkTreeViewColumn *
					    tree_column,
					    GtkCellRenderer * cell,
					    gboolean expand);
extern void gtk_tree_view_column_queue_resize(GtkTreeViewColumn *
					      tree_column);
extern void gtk_tree_view_column_set_alignment(GtkTreeViewColumn *
					       tree_column, gfloat xalign);
extern void gtk_tree_view_column_set_attributes(GtkTreeViewColumn *
						tree_column,
						GtkCellRenderer *
						cell_renderer, ...);
extern void gtk_tree_view_column_set_cell_data_func(GtkTreeViewColumn *
						    tree_column,
						    GtkCellRenderer *
						    cell_renderer,
						    GtkTreeCellDataFunc
						    func,
						    gpointer func_data,
						    GtkDestroyNotify
						    destroy);
extern void gtk_tree_view_column_set_clickable(GtkTreeViewColumn *
					       tree_column,
					       gboolean clickable);
extern void gtk_tree_view_column_set_expand(GtkTreeViewColumn *
					    tree_column, gboolean expand);
extern void gtk_tree_view_column_set_fixed_width(GtkTreeViewColumn *
						 tree_column,
						 gint fixed_width);
extern void gtk_tree_view_column_set_max_width(GtkTreeViewColumn *
					       tree_column,
					       gint max_width);
extern void gtk_tree_view_column_set_min_width(GtkTreeViewColumn *
					       tree_column,
					       gint min_width);
extern void gtk_tree_view_column_set_reorderable(GtkTreeViewColumn *
						 tree_column,
						 gboolean reorderable);
extern void gtk_tree_view_column_set_resizable(GtkTreeViewColumn *
					       tree_column,
					       gboolean resizable);
extern void gtk_tree_view_column_set_sizing(GtkTreeViewColumn *
					    tree_column,
					    GtkTreeViewColumnSizing type);
extern void gtk_tree_view_column_set_sort_column_id(GtkTreeViewColumn *
						    tree_column,
						    gint sort_column_id);
extern void gtk_tree_view_column_set_sort_indicator(GtkTreeViewColumn *
						    tree_column,
						    gboolean setting);
extern void gtk_tree_view_column_set_sort_order(GtkTreeViewColumn *
						tree_column,
						GtkSortType order);
extern void gtk_tree_view_column_set_spacing(GtkTreeViewColumn *
					     tree_column, gint spacing);
extern void gtk_tree_view_column_set_title(GtkTreeViewColumn * tree_column,
					   const gchar * title);
extern void gtk_tree_view_column_set_visible(GtkTreeViewColumn *
					     tree_column,
					     gboolean visible);
extern void gtk_tree_view_column_set_widget(GtkTreeViewColumn *
					    tree_column,
					    GtkWidget * widget);
extern GType gtk_tree_view_column_sizing_get_type(void);
extern void gtk_tree_view_columns_autosize(GtkTreeView * tree_view);
extern GdkPixmap *gtk_tree_view_create_row_drag_icon(GtkTreeView *
						     tree_view,
						     GtkTreePath * path);
extern GType gtk_tree_view_drop_position_get_type(void);
extern void gtk_tree_view_enable_model_drag_dest(GtkTreeView * tree_view,
						 const GtkTargetEntry *
						 targets, gint n_targets,
						 GdkDragAction actions);
extern void gtk_tree_view_enable_model_drag_source(GtkTreeView * tree_view,
						   GdkModifierType
						   start_button_mask,
						   const GtkTargetEntry *
						   targets, gint n_targets,
						   GdkDragAction actions);
extern void gtk_tree_view_expand_all(GtkTreeView * tree_view);
extern gboolean gtk_tree_view_expand_row(GtkTreeView * tree_view,
					 GtkTreePath * path,
					 gboolean open_all);
extern void gtk_tree_view_expand_to_path(GtkTreeView * tree_view,
					 GtkTreePath * path);
extern void gtk_tree_view_get_background_area(GtkTreeView * tree_view,
					      GtkTreePath * path,
					      GtkTreeViewColumn * column,
					      GdkRectangle * rect);
extern GdkWindow *gtk_tree_view_get_bin_window(GtkTreeView * tree_view);
extern void gtk_tree_view_get_cell_area(GtkTreeView * tree_view,
					GtkTreePath * path,
					GtkTreeViewColumn * column,
					GdkRectangle * rect);
extern GtkTreeViewColumn *gtk_tree_view_get_column(GtkTreeView * tree_view,
						   gint n);
extern GList *gtk_tree_view_get_columns(GtkTreeView * tree_view);
extern void gtk_tree_view_get_cursor(GtkTreeView * tree_view,
				     GtkTreePath * *path,
				     GtkTreeViewColumn * *focus_column);
extern gboolean gtk_tree_view_get_dest_row_at_pos(GtkTreeView * tree_view,
						  gint drag_x, gint drag_y,
						  GtkTreePath * *path,
						  GtkTreeViewDropPosition *
						  pos);
extern void gtk_tree_view_get_drag_dest_row(GtkTreeView * tree_view,
					    GtkTreePath * *path,
					    GtkTreeViewDropPosition * pos);
extern gboolean gtk_tree_view_get_enable_search(GtkTreeView * tree_view);
extern gboolean gtk_tree_view_get_enable_tree_lines(GtkTreeView *
						    tree_view);
extern GtkTreeViewColumn *gtk_tree_view_get_expander_column(GtkTreeView *
							    tree_view);
extern gboolean gtk_tree_view_get_fixed_height_mode(GtkTreeView *
						    tree_view);
extern GtkTreeViewGridLines gtk_tree_view_get_grid_lines(GtkTreeView *
							 tree_view);
extern GtkAdjustment *gtk_tree_view_get_hadjustment(GtkTreeView *
						    tree_view);
extern gboolean gtk_tree_view_get_headers_clickable(GtkTreeView *
						    tree_view);
extern gboolean gtk_tree_view_get_headers_visible(GtkTreeView * tree_view);
extern gboolean gtk_tree_view_get_hover_expand(GtkTreeView * tree_view);
extern gboolean gtk_tree_view_get_hover_selection(GtkTreeView * tree_view);
extern GtkTreeModel *gtk_tree_view_get_model(GtkTreeView * tree_view);
extern gboolean gtk_tree_view_get_path_at_pos(GtkTreeView * tree_view,
					      gint x, gint y,
					      GtkTreePath * *path,
					      GtkTreeViewColumn * *column,
					      gint * cell_x,
					      gint * cell_y);
extern gboolean gtk_tree_view_get_reorderable(GtkTreeView * tree_view);
extern GtkTreeViewRowSeparatorFunc
gtk_tree_view_get_row_separator_func(GtkTreeView * tree_view);
extern gboolean gtk_tree_view_get_rubber_banding(GtkTreeView * tree_view);
extern gboolean gtk_tree_view_get_rules_hint(GtkTreeView * tree_view);
extern gint gtk_tree_view_get_search_column(GtkTreeView * tree_view);
extern GtkEntry *gtk_tree_view_get_search_entry(GtkTreeView * tree_view);
extern GtkTreeViewSearchEqualFunc
gtk_tree_view_get_search_equal_func(GtkTreeView * tree_view);
extern GtkTreeViewSearchPositionFunc
gtk_tree_view_get_search_position_func(GtkTreeView * tree_view);
extern GtkTreeSelection *gtk_tree_view_get_selection(GtkTreeView *
						     tree_view);
extern GType gtk_tree_view_get_type(void);
extern GtkAdjustment *gtk_tree_view_get_vadjustment(GtkTreeView *
						    tree_view);
extern gboolean gtk_tree_view_get_visible_range(GtkTreeView * tree_view,
						GtkTreePath * *start_path,
						GtkTreePath * *end_path);
extern void gtk_tree_view_get_visible_rect(GtkTreeView * tree_view,
					   GdkRectangle * visible_rect);
extern GType gtk_tree_view_grid_lines_get_type(void);
extern gint gtk_tree_view_insert_column(GtkTreeView * tree_view,
					GtkTreeViewColumn * column,
					gint position);
extern gint gtk_tree_view_insert_column_with_attributes(GtkTreeView *
							tree_view,
							gint position,
							const gchar *
							title,
							GtkCellRenderer *
							cell, ...);
extern gint gtk_tree_view_insert_column_with_data_func(GtkTreeView *
						       tree_view,
						       gint position,
						       const gchar * title,
						       GtkCellRenderer *
						       cell,
						       GtkTreeCellDataFunc
						       func, gpointer data,
						       GDestroyNotify
						       dnotify);
extern void gtk_tree_view_map_expanded_rows(GtkTreeView * tree_view,
					    GtkTreeViewMappingFunc func,
					    gpointer data);
extern GType gtk_tree_view_mode_get_type(void);
extern void gtk_tree_view_move_column_after(GtkTreeView * tree_view,
					    GtkTreeViewColumn * column,
					    GtkTreeViewColumn *
					    base_column);
extern GtkWidget *gtk_tree_view_new(void);
extern GtkWidget *gtk_tree_view_new_with_model(GtkTreeModel * model);
extern gint gtk_tree_view_remove_column(GtkTreeView * tree_view,
					GtkTreeViewColumn * column);
extern void gtk_tree_view_row_activated(GtkTreeView * tree_view,
					GtkTreePath * path,
					GtkTreeViewColumn * column);
extern gboolean gtk_tree_view_row_expanded(GtkTreeView * tree_view,
					   GtkTreePath * path);
extern void gtk_tree_view_scroll_to_cell(GtkTreeView * tree_view,
					 GtkTreePath * path,
					 GtkTreeViewColumn * column,
					 gboolean use_align,
					 gfloat row_align,
					 gfloat col_align);
extern void gtk_tree_view_scroll_to_point(GtkTreeView * tree_view,
					  gint tree_x, gint tree_y);
extern void gtk_tree_view_set_column_drag_function(GtkTreeView * tree_view,
						   GtkTreeViewColumnDropFunc
						   func,
						   gpointer user_data,
						   GtkDestroyNotify
						   destroy);
extern void gtk_tree_view_set_cursor(GtkTreeView * tree_view,
				     GtkTreePath * path,
				     GtkTreeViewColumn * focus_column,
				     gboolean start_editing);
extern void gtk_tree_view_set_cursor_on_cell(GtkTreeView * tree_view,
					     GtkTreePath * path,
					     GtkTreeViewColumn *
					     focus_column,
					     GtkCellRenderer * focus_cell,
					     gboolean start_editing);
extern void gtk_tree_view_set_destroy_count_func(GtkTreeView * tree_view,
						 GtkTreeDestroyCountFunc
						 func, gpointer data,
						 GtkDestroyNotify destroy);
extern void gtk_tree_view_set_drag_dest_row(GtkTreeView * tree_view,
					    GtkTreePath * path,
					    GtkTreeViewDropPosition pos);
extern void gtk_tree_view_set_enable_search(GtkTreeView * tree_view,
					    gboolean enable_search);
extern void gtk_tree_view_set_enable_tree_lines(GtkTreeView * tree_view,
						gboolean enabled);
extern void gtk_tree_view_set_expander_column(GtkTreeView * tree_view,
					      GtkTreeViewColumn * column);
extern void gtk_tree_view_set_fixed_height_mode(GtkTreeView * tree_view,
						gboolean enable);
extern void gtk_tree_view_set_grid_lines(GtkTreeView * tree_view,
					 GtkTreeViewGridLines grid_lines);
extern void gtk_tree_view_set_hadjustment(GtkTreeView * tree_view,
					  GtkAdjustment * adjustment);
extern void gtk_tree_view_set_headers_clickable(GtkTreeView * tree_view,
						gboolean setting);
extern void gtk_tree_view_set_headers_visible(GtkTreeView * tree_view,
					      gboolean headers_visible);
extern void gtk_tree_view_set_hover_expand(GtkTreeView * tree_view,
					   gboolean expand);
extern void gtk_tree_view_set_hover_selection(GtkTreeView * tree_view,
					      gboolean hover);
extern void gtk_tree_view_set_model(GtkTreeView * tree_view,
				    GtkTreeModel * model);
extern void gtk_tree_view_set_reorderable(GtkTreeView * tree_view,
					  gboolean reorderable);
extern void gtk_tree_view_set_row_separator_func(GtkTreeView * tree_view,
						 GtkTreeViewRowSeparatorFunc
						 func, gpointer data,
						 GtkDestroyNotify destroy);
extern void gtk_tree_view_set_rubber_banding(GtkTreeView * tree_view,
					     gboolean enable);
extern void gtk_tree_view_set_rules_hint(GtkTreeView * tree_view,
					 gboolean setting);
extern void gtk_tree_view_set_search_column(GtkTreeView * tree_view,
					    gint column);
extern void gtk_tree_view_set_search_entry(GtkTreeView * tree_view,
					   GtkEntry * entry);
extern void gtk_tree_view_set_search_equal_func(GtkTreeView * tree_view,
						GtkTreeViewSearchEqualFunc
						search_equal_func,
						gpointer search_user_data,
						GtkDestroyNotify
						search_destroy);
extern void gtk_tree_view_set_search_position_func(GtkTreeView * tree_view,
						   GtkTreeViewSearchPositionFunc
						   func, gpointer data,
						   GDestroyNotify destroy);
extern void gtk_tree_view_set_vadjustment(GtkTreeView * tree_view,
					  GtkAdjustment * adjustment);
extern void gtk_tree_view_tree_to_widget_coords(GtkTreeView * tree_view,
						gint tx, gint ty,
						gint * wx, gint * wy);
extern void gtk_tree_view_unset_rows_drag_dest(GtkTreeView * tree_view);
extern void gtk_tree_view_unset_rows_drag_source(GtkTreeView * tree_view);
extern void gtk_tree_view_widget_to_tree_coords(GtkTreeView * tree_view,
						gint wx, gint wy,
						gint * tx, gint * ty);
extern gboolean gtk_true(void);
extern gpointer gtk_type_class(GtkType type);
extern void gtk_ui_manager_add_ui(GtkUIManager * self, guint merge_id,
				  const gchar * path, const gchar * name,
				  const gchar * action,
				  GtkUIManagerItemType type, gboolean top);
extern guint gtk_ui_manager_add_ui_from_file(GtkUIManager * self,
					     const gchar * filename,
					     GError * *error);
extern guint gtk_ui_manager_add_ui_from_string(GtkUIManager * self,
					       const gchar * buffer,
					       gssize length,
					       GError * *error);
extern void gtk_ui_manager_ensure_update(GtkUIManager * self);
extern GtkAccelGroup *gtk_ui_manager_get_accel_group(GtkUIManager * self);
extern GtkAction *gtk_ui_manager_get_action(GtkUIManager * self,
					    const gchar * path);
extern GList *gtk_ui_manager_get_action_groups(GtkUIManager * self);
extern gboolean gtk_ui_manager_get_add_tearoffs(GtkUIManager * self);
extern GSList *gtk_ui_manager_get_toplevels(GtkUIManager * self,
					    GtkUIManagerItemType types);
extern GType gtk_ui_manager_get_type(void);
extern gchar *gtk_ui_manager_get_ui(GtkUIManager * self);
extern GtkWidget *gtk_ui_manager_get_widget(GtkUIManager * self,
					    const gchar * path);
extern void gtk_ui_manager_insert_action_group(GtkUIManager * self,
					       GtkActionGroup *
					       action_group, gint pos);
extern GType gtk_ui_manager_item_type_get_type(void);
extern GtkUIManager *gtk_ui_manager_new(void);
extern guint gtk_ui_manager_new_merge_id(GtkUIManager * self);
extern void gtk_ui_manager_remove_action_group(GtkUIManager * self,
					       GtkActionGroup *
					       action_group);
extern void gtk_ui_manager_remove_ui(GtkUIManager * self, guint merge_id);
extern void gtk_ui_manager_set_add_tearoffs(GtkUIManager * self,
					    gboolean add_tearoffs);
extern GType gtk_unit_get_type(void);
extern GType gtk_update_type_get_type(void);
extern GType gtk_vbox_get_type(void);
extern GtkWidget *gtk_vbox_new(gboolean homogeneous, gint spacing);
extern GType gtk_vbutton_box_get_type(void);
extern GtkWidget *gtk_vbutton_box_new(void);
extern GtkAdjustment *gtk_viewport_get_hadjustment(GtkViewport * viewport);
extern GtkShadowType gtk_viewport_get_shadow_type(GtkViewport * viewport);
extern GType gtk_viewport_get_type(void);
extern GtkAdjustment *gtk_viewport_get_vadjustment(GtkViewport * viewport);
extern GtkWidget *gtk_viewport_new(GtkAdjustment * hadjustment,
				   GtkAdjustment * vadjustment);
extern void gtk_viewport_set_hadjustment(GtkViewport * viewport,
					 GtkAdjustment * adjustment);
extern void gtk_viewport_set_shadow_type(GtkViewport * viewport,
					 GtkShadowType type);
extern void gtk_viewport_set_vadjustment(GtkViewport * viewport,
					 GtkAdjustment * adjustment);
extern GType gtk_visibility_get_type(void);
extern GType gtk_vpaned_get_type(void);
extern GtkWidget *gtk_vpaned_new(void);
extern GType gtk_vruler_get_type(void);
extern GtkWidget *gtk_vruler_new(void);
extern GType gtk_vscale_get_type(void);
extern GtkWidget *gtk_vscale_new(GtkAdjustment * adjustment);
extern GtkWidget *gtk_vscale_new_with_range(gdouble min, gdouble max,
					    gdouble step);
extern GType gtk_vscrollbar_get_type(void);
extern GtkWidget *gtk_vscrollbar_new(GtkAdjustment * adjustment);
extern GType gtk_vseparator_get_type(void);
extern GtkWidget *gtk_vseparator_new(void);
extern gboolean gtk_widget_activate(GtkWidget * widget);
extern void gtk_widget_add_accelerator(GtkWidget * widget,
				       const gchar * accel_signal,
				       GtkAccelGroup * accel_group,
				       guint accel_key,
				       GdkModifierType accel_mods,
				       GtkAccelFlags accel_flags);
extern void gtk_widget_add_events(GtkWidget * widget, gint events);
extern void gtk_widget_add_mnemonic_label(GtkWidget * widget,
					  GtkWidget * label);
extern gboolean gtk_widget_can_activate_accel(GtkWidget * widget,
					      guint signal_id);
extern gboolean gtk_widget_child_focus(GtkWidget * widget,
				       GtkDirectionType direction);
extern void gtk_widget_child_notify(GtkWidget * widget,
				    const gchar * child_property);
extern GParamSpec *gtk_widget_class_find_style_property(GtkWidgetClass *
							klass,
							const gchar *
							property_name);
extern void gtk_widget_class_install_style_property(GtkWidgetClass * klass,
						    GParamSpec * pspec);
extern void gtk_widget_class_install_style_property_parser(GtkWidgetClass *
							   klass,
							   GParamSpec *
							   pspec,
							   GtkRcPropertyParser
							   parser);
extern GParamSpec **gtk_widget_class_list_style_properties(GtkWidgetClass *
							   klass,
							   guint *
							   n_properties);
extern void gtk_widget_class_path(GtkWidget * widget, guint * path_length,
				  gchar * *path, gchar * *path_reversed);
extern PangoContext *gtk_widget_create_pango_context(GtkWidget * widget);
extern PangoLayout *gtk_widget_create_pango_layout(GtkWidget * widget,
						   const gchar * text);
extern void gtk_widget_destroy(GtkWidget * widget);
extern void gtk_widget_destroyed(GtkWidget * widget,
				 GtkWidget * *widget_pointer);
extern void gtk_widget_ensure_style(GtkWidget * widget);
extern gboolean gtk_widget_event(GtkWidget * widget, GdkEvent * event);
extern GType gtk_widget_flags_get_type(void);
extern void gtk_widget_freeze_child_notify(GtkWidget * widget);
extern AtkObject *gtk_widget_get_accessible(GtkWidget * widget);
extern GtkAction *gtk_widget_get_action(GtkWidget * widget);
extern GtkWidget *gtk_widget_get_ancestor(GtkWidget * widget,
					  GType widget_type);
extern void gtk_widget_get_child_requisition(GtkWidget * widget,
					     GtkRequisition * requisition);
extern gboolean gtk_widget_get_child_visible(GtkWidget * widget);
extern GtkClipboard *gtk_widget_get_clipboard(GtkWidget * widget,
					      GdkAtom selection);
extern GdkColormap *gtk_widget_get_colormap(GtkWidget * widget);
extern gchar *gtk_widget_get_composite_name(GtkWidget * widget);
extern GdkColormap *gtk_widget_get_default_colormap(void);
extern GtkTextDirection gtk_widget_get_default_direction(void);
extern GtkStyle *gtk_widget_get_default_style(void);
extern GdkVisual *gtk_widget_get_default_visual(void);
extern GtkTextDirection gtk_widget_get_direction(GtkWidget * widget);
extern GdkDisplay *gtk_widget_get_display(GtkWidget * widget);
extern gint gtk_widget_get_events(GtkWidget * widget);
extern GdkExtensionMode gtk_widget_get_extension_events(GtkWidget *
							widget);
extern GtkRcStyle *gtk_widget_get_modifier_style(GtkWidget * widget);
extern const gchar *gtk_widget_get_name(GtkWidget * widget);
extern gboolean gtk_widget_get_no_show_all(GtkWidget * widget);
extern PangoContext *gtk_widget_get_pango_context(GtkWidget * widget);
extern GtkWidget *gtk_widget_get_parent(GtkWidget * widget);
extern GdkWindow *gtk_widget_get_parent_window(GtkWidget * widget);
extern void gtk_widget_get_pointer(GtkWidget * widget, gint * x, gint * y);
extern GdkWindow *gtk_widget_get_root_window(GtkWidget * widget);
extern GdkScreen *gtk_widget_get_screen(GtkWidget * widget);
extern GtkSettings *gtk_widget_get_settings(GtkWidget * widget);
extern void gtk_widget_get_size_request(GtkWidget * widget, gint * width,
					gint * height);
extern GtkStyle *gtk_widget_get_style(GtkWidget * widget);
extern GtkWidget *gtk_widget_get_toplevel(GtkWidget * widget);
extern GType gtk_widget_get_type(void);
extern GdkVisual *gtk_widget_get_visual(GtkWidget * widget);
extern void gtk_widget_grab_default(GtkWidget * widget);
extern void gtk_widget_grab_focus(GtkWidget * widget);
extern gboolean gtk_widget_has_screen(GtkWidget * widget);
extern GType gtk_widget_help_type_get_type(void);
extern void gtk_widget_hide(GtkWidget * widget);
extern void gtk_widget_hide_all(GtkWidget * widget);
extern gboolean gtk_widget_hide_on_delete(GtkWidget * widget);
extern void gtk_widget_input_shape_combine_mask(GtkWidget * widget,
						GdkBitmap * shape_mask,
						gint offset_x,
						gint offset_y);
extern gboolean gtk_widget_intersect(GtkWidget * widget,
				     const GdkRectangle * area,
				     GdkRectangle * intersection);
extern gboolean gtk_widget_is_ancestor(GtkWidget * widget,
				       GtkWidget * ancestor);
extern gboolean gtk_widget_is_composited(GtkWidget * widget);
extern gboolean gtk_widget_is_focus(GtkWidget * widget);
extern GList *gtk_widget_list_accel_closures(GtkWidget * widget);
extern GList *gtk_widget_list_mnemonic_labels(GtkWidget * widget);
extern void gtk_widget_map(GtkWidget * widget);
extern gboolean gtk_widget_mnemonic_activate(GtkWidget * widget,
					     gboolean group_cycling);
extern void gtk_widget_modify_base(GtkWidget * widget, GtkStateType state,
				   const GdkColor * color);
extern void gtk_widget_modify_bg(GtkWidget * widget, GtkStateType state,
				 const GdkColor * color);
extern void gtk_widget_modify_fg(GtkWidget * widget, GtkStateType state,
				 const GdkColor * color);
extern void gtk_widget_modify_font(GtkWidget * widget,
				   PangoFontDescription * font_desc);
extern void gtk_widget_modify_style(GtkWidget * widget,
				    GtkRcStyle * style);
extern void gtk_widget_modify_text(GtkWidget * widget, GtkStateType state,
				   const GdkColor * color);
extern GtkWidget *gtk_widget_new(GType type,
				 const gchar * first_property_name, ...);
extern void gtk_widget_path(GtkWidget * widget, guint * path_length,
			    gchar * *path, gchar * *path_reversed);
extern void gtk_widget_pop_colormap(void);
extern void gtk_widget_pop_composite_child(void);
extern void gtk_widget_push_colormap(GdkColormap * cmap);
extern void gtk_widget_push_composite_child(void);
extern void gtk_widget_queue_draw(GtkWidget * widget);
extern void gtk_widget_queue_draw_area(GtkWidget * widget, gint x, gint y,
				       gint width, gint height);
extern void gtk_widget_queue_resize(GtkWidget * widget);
extern void gtk_widget_queue_resize_no_redraw(GtkWidget * widget);
extern void gtk_widget_realize(GtkWidget * widget);
extern GtkWidget *gtk_widget_ref(GtkWidget * widget);
extern GdkRegion *gtk_widget_region_intersect(GtkWidget * widget,
					      const GdkRegion * region);
extern gboolean gtk_widget_remove_accelerator(GtkWidget * widget,
					      GtkAccelGroup * accel_group,
					      guint accel_key,
					      GdkModifierType accel_mods);
extern void gtk_widget_remove_mnemonic_label(GtkWidget * widget,
					     GtkWidget * label);
extern GdkPixbuf *gtk_widget_render_icon(GtkWidget * widget,
					 const gchar * stock_id,
					 GtkIconSize size,
					 const gchar * detail);
extern void gtk_widget_reparent(GtkWidget * widget,
				GtkWidget * new_parent);
extern void gtk_widget_reset_rc_styles(GtkWidget * widget);
extern void gtk_widget_reset_shapes(GtkWidget * widget);
extern gint gtk_widget_send_expose(GtkWidget * widget, GdkEvent * event);
extern void gtk_widget_set_accel_path(GtkWidget * widget,
				      const gchar * accel_path,
				      GtkAccelGroup * accel_group);
extern void gtk_widget_set_app_paintable(GtkWidget * widget,
					 gboolean app_paintable);
extern void gtk_widget_set_child_visible(GtkWidget * widget,
					 gboolean is_visible);
extern void gtk_widget_set_colormap(GtkWidget * widget,
				    GdkColormap * colormap);
extern void gtk_widget_set_composite_name(GtkWidget * widget,
					  const gchar * name);
extern void gtk_widget_set_default_colormap(GdkColormap * colormap);
extern void gtk_widget_set_default_direction(GtkTextDirection dir);
extern void gtk_widget_set_direction(GtkWidget * widget,
				     GtkTextDirection dir);
extern void gtk_widget_set_double_buffered(GtkWidget * widget,
					   gboolean double_buffered);
extern void gtk_widget_set_events(GtkWidget * widget, gint events);
extern void gtk_widget_set_extension_events(GtkWidget * widget,
					    GdkExtensionMode mode);
extern void gtk_widget_set_name(GtkWidget * widget, const gchar * name);
extern void gtk_widget_set_no_show_all(GtkWidget * widget,
				       gboolean no_show_all);
extern void gtk_widget_set_parent(GtkWidget * widget, GtkWidget * parent);
extern void gtk_widget_set_parent_window(GtkWidget * widget,
					 GdkWindow * parent_window);
extern void gtk_widget_set_redraw_on_allocate(GtkWidget * widget,
					      gboolean redraw_on_allocate);
extern gboolean gtk_widget_set_scroll_adjustments(GtkWidget * widget,
						  GtkAdjustment *
						  hadjustment,
						  GtkAdjustment *
						  vadjustment);
extern void gtk_widget_set_sensitive(GtkWidget * widget,
				     gboolean sensitive);
extern void gtk_widget_set_size_request(GtkWidget * widget, gint width,
					gint height);
extern void gtk_widget_set_state(GtkWidget * widget, GtkStateType state);
extern void gtk_widget_set_style(GtkWidget * widget, GtkStyle * style);
extern void gtk_widget_shape_combine_mask(GtkWidget * widget,
					  GdkBitmap * shape_mask,
					  gint offset_x, gint offset_y);
extern void gtk_widget_show(GtkWidget * widget);
extern void gtk_widget_show_all(GtkWidget * widget);
extern void gtk_widget_show_now(GtkWidget * widget);
extern void gtk_widget_size_allocate(GtkWidget * widget,
				     GtkAllocation * allocation);
extern void gtk_widget_size_request(GtkWidget * widget,
				    GtkRequisition * requisition);
extern void gtk_widget_style_get(GtkWidget * widget,
				 const gchar * first_property_name, ...);
extern void gtk_widget_style_get_property(GtkWidget * widget,
					  const gchar * property_name,
					  GValue * value);
extern void gtk_widget_style_get_valist(GtkWidget * widget,
					const gchar * first_property_name,
					va_list var_args);
extern void gtk_widget_thaw_child_notify(GtkWidget * widget);
extern gboolean gtk_widget_translate_coordinates(GtkWidget * src_widget,
						 GtkWidget * dest_widget,
						 gint src_x, gint src_y,
						 gint * dest_x,
						 gint * dest_y);
extern void gtk_widget_unmap(GtkWidget * widget);
extern void gtk_widget_unparent(GtkWidget * widget);
extern void gtk_widget_unrealize(GtkWidget * widget);
extern void gtk_widget_unref(GtkWidget * widget);
extern gboolean gtk_window_activate_default(GtkWindow * window);
extern gboolean gtk_window_activate_focus(GtkWindow * window);
extern gboolean gtk_window_activate_key(GtkWindow * window,
					GdkEventKey * event);
extern void gtk_window_add_accel_group(GtkWindow * window,
				       GtkAccelGroup * accel_group);
extern void gtk_window_add_mnemonic(GtkWindow * window, guint keyval,
				    GtkWidget * target);
extern void gtk_window_begin_move_drag(GtkWindow * window, gint button,
				       gint root_x, gint root_y,
				       guint32 timestamp);
extern void gtk_window_begin_resize_drag(GtkWindow * window,
					 GdkWindowEdge edge, gint button,
					 gint root_x, gint root_y,
					 guint32 timestamp);
extern void gtk_window_deiconify(GtkWindow * window);
extern void gtk_window_fullscreen(GtkWindow * window);
extern gboolean gtk_window_get_accept_focus(GtkWindow * window);
extern gboolean gtk_window_get_decorated(GtkWindow * window);
extern GList *gtk_window_get_default_icon_list(void);
extern void gtk_window_get_default_size(GtkWindow * window, gint * width,
					gint * height);
extern gboolean gtk_window_get_deletable(GtkWindow * window);
extern gboolean gtk_window_get_destroy_with_parent(GtkWindow * window);
extern GtkWidget *gtk_window_get_focus(GtkWindow * window);
extern gboolean gtk_window_get_focus_on_map(GtkWindow * window);
extern void gtk_window_get_frame_dimensions(GtkWindow * window,
					    gint * left, gint * top,
					    gint * right, gint * bottom);
extern GdkGravity gtk_window_get_gravity(GtkWindow * window);
extern GtkWindowGroup *gtk_window_get_group(GtkWindow * window);
extern gboolean gtk_window_get_has_frame(GtkWindow * window);
extern GdkPixbuf *gtk_window_get_icon(GtkWindow * window);
extern GList *gtk_window_get_icon_list(GtkWindow * window);
extern const gchar *gtk_window_get_icon_name(GtkWindow * window);
extern GdkModifierType gtk_window_get_mnemonic_modifier(GtkWindow *
							window);
extern gboolean gtk_window_get_modal(GtkWindow * window);
extern void gtk_window_get_position(GtkWindow * window, gint * root_x,
				    gint * root_y);
extern gboolean gtk_window_get_resizable(GtkWindow * window);
extern const gchar *gtk_window_get_role(GtkWindow * window);
extern GdkScreen *gtk_window_get_screen(GtkWindow * window);
extern void gtk_window_get_size(GtkWindow * window, gint * width,
				gint * height);
extern gboolean gtk_window_get_skip_pager_hint(GtkWindow * window);
extern gboolean gtk_window_get_skip_taskbar_hint(GtkWindow * window);
extern const gchar *gtk_window_get_title(GtkWindow * window);
extern GtkWindow *gtk_window_get_transient_for(GtkWindow * window);
extern GType gtk_window_get_type(void);
extern GdkWindowTypeHint gtk_window_get_type_hint(GtkWindow * window);
extern gboolean gtk_window_get_urgency_hint(GtkWindow * window);
extern void gtk_window_group_add_window(GtkWindowGroup * window_group,
					GtkWindow * window);
extern GType gtk_window_group_get_type(void);
extern GtkWindowGroup *gtk_window_group_new(void);
extern void gtk_window_group_remove_window(GtkWindowGroup * window_group,
					   GtkWindow * window);
extern gboolean gtk_window_has_toplevel_focus(GtkWindow * window);
extern void gtk_window_iconify(GtkWindow * window);
extern gboolean gtk_window_is_active(GtkWindow * window);
extern GList *gtk_window_list_toplevels(void);
extern void gtk_window_maximize(GtkWindow * window);
extern gboolean gtk_window_mnemonic_activate(GtkWindow * window,
					     guint keyval,
					     GdkModifierType modifier);
extern void gtk_window_move(GtkWindow * window, gint x, gint y);
extern GtkWidget *gtk_window_new(GtkWindowType type);
extern gboolean gtk_window_parse_geometry(GtkWindow * window,
					  const gchar * geometry);
extern GType gtk_window_position_get_type(void);
extern void gtk_window_present(GtkWindow * window);
extern void gtk_window_present_with_time(GtkWindow * window,
					 guint32 timestamp);
extern gboolean gtk_window_propagate_key_event(GtkWindow * window,
					       GdkEventKey * event);
extern void gtk_window_remove_accel_group(GtkWindow * window,
					  GtkAccelGroup * accel_group);
extern void gtk_window_remove_mnemonic(GtkWindow * window, guint keyval,
				       GtkWidget * target);
extern void gtk_window_reshow_with_initial_size(GtkWindow * window);
extern void gtk_window_resize(GtkWindow * window, gint width, gint height);
extern void gtk_window_set_accept_focus(GtkWindow * window,
					gboolean setting);
extern void gtk_window_set_auto_startup_notification(gboolean setting);
extern void gtk_window_set_decorated(GtkWindow * window, gboolean setting);
extern void gtk_window_set_default(GtkWindow * window,
				   GtkWidget * default_widget);
extern void gtk_window_set_default_icon(GdkPixbuf * icon);
extern gboolean gtk_window_set_default_icon_from_file(const gchar *
						      filename,
						      GError * *err);
extern void gtk_window_set_default_icon_list(GList * list);
extern void gtk_window_set_default_icon_name(const gchar * name);
extern void gtk_window_set_default_size(GtkWindow * window, gint width,
					gint height);
extern void gtk_window_set_deletable(GtkWindow * window, gboolean setting);
extern void gtk_window_set_destroy_with_parent(GtkWindow * window,
					       gboolean setting);
extern void gtk_window_set_focus(GtkWindow * window, GtkWidget * focus);
extern void gtk_window_set_focus_on_map(GtkWindow * window,
					gboolean setting);
extern void gtk_window_set_frame_dimensions(GtkWindow * window, gint left,
					    gint top, gint right,
					    gint bottom);
extern void gtk_window_set_geometry_hints(GtkWindow * window,
					  GtkWidget * geometry_widget,
					  GdkGeometry * geometry,
					  GdkWindowHints geom_mask);
extern void gtk_window_set_gravity(GtkWindow * window, GdkGravity gravity);
extern void gtk_window_set_has_frame(GtkWindow * window, gboolean setting);
extern void gtk_window_set_icon(GtkWindow * window, GdkPixbuf * icon);
extern gboolean gtk_window_set_icon_from_file(GtkWindow * window,
					      const gchar * filename,
					      GError * *err);
extern void gtk_window_set_icon_list(GtkWindow * window, GList * list);
extern void gtk_window_set_icon_name(GtkWindow * window,
				     const gchar * name);
extern void gtk_window_set_keep_above(GtkWindow * window,
				      gboolean setting);
extern void gtk_window_set_keep_below(GtkWindow * window,
				      gboolean setting);
extern void gtk_window_set_mnemonic_modifier(GtkWindow * window,
					     GdkModifierType modifier);
extern void gtk_window_set_modal(GtkWindow * window, gboolean modal);
extern void gtk_window_set_position(GtkWindow * window,
				    GtkWindowPosition position);
extern void gtk_window_set_resizable(GtkWindow * window,
				     gboolean resizable);
extern void gtk_window_set_role(GtkWindow * window, const gchar * role);
extern void gtk_window_set_screen(GtkWindow * window, GdkScreen * screen);
extern void gtk_window_set_skip_pager_hint(GtkWindow * window,
					   gboolean setting);
extern void gtk_window_set_skip_taskbar_hint(GtkWindow * window,
					     gboolean setting);
extern void gtk_window_set_title(GtkWindow * window, const gchar * title);
extern void gtk_window_set_transient_for(GtkWindow * window,
					 GtkWindow * parent);
extern void gtk_window_set_type_hint(GtkWindow * window,
				     GdkWindowTypeHint hint);
extern void gtk_window_set_urgency_hint(GtkWindow * window,
					gboolean setting);
extern void gtk_window_set_wmclass(GtkWindow * window,
				   const gchar * wmclass_name,
				   const gchar * wmclass_class);
extern void gtk_window_stick(GtkWindow * window);
extern GType gtk_window_type_get_type(void);
extern void gtk_window_unfullscreen(GtkWindow * window);
extern void gtk_window_unmaximize(GtkWindow * window);
extern void gtk_window_unstick(GtkWindow * window);
extern GType gtk_wrap_mode_get_type(void);
</SCREEN>
</SECT2>
<SECT2>
<TITLE>gtk-2.0/gtk/gtkenums.h</TITLE>
<PARA>
</PARA>
<SCREEN>

typedef enum {
    GTK_STATE_NORMAL = 0,
    GTK_STATE_ACTIVE = 1,
    GTK_STATE_PRELIGHT = 2,
    GTK_STATE_SELECTED = 3,
    GTK_STATE_INSENSITIVE = 4
} GtkStateType;
typedef enum {
    GTK_SORT_ASCENDING = 0,
    GTK_SORT_DESCENDING = 1
} GtkSortType;
typedef enum {
    GTK_UPDATE_CONTINUOUS = 0,
    GTK_UPDATE_DISCONTINUOUS = 1,
    GTK_UPDATE_DELAYED = 2
} GtkUpdateType;
typedef enum {
    GTK_ORIENTATION_HORIZONTAL = 0,
    GTK_ORIENTATION_VERTICAL = 1
} GtkOrientation;
typedef enum {
    GTK_BUTTONBOX_DEFAULT_STYLE = 0,
    GTK_BUTTONBOX_SPREAD = 1,
    GTK_BUTTONBOX_EDGE = 2,
    GTK_BUTTONBOX_START = 3,
    GTK_BUTTONBOX_END = 4
} GtkButtonBoxStyle;
typedef enum {
    GTK_JUSTIFY_LEFT = 0,
    GTK_JUSTIFY_RIGHT = 1,
    GTK_JUSTIFY_CENTER = 2,
    GTK_JUSTIFY_FILL = 3
} GtkJustification;
typedef enum {
    GTK_TEXT_DIR_NONE = 0,
    GTK_TEXT_DIR_LTR = 1,
    GTK_TEXT_DIR_RTL = 2
} GtkTextDirection;
typedef enum {
    GTK_WRAP_NONE = 0,
    GTK_WRAP_CHAR = 1,
    GTK_WRAP_WORD = 2,
    GTK_WRAP_WORD_CHAR = 3
} GtkWrapMode;
typedef enum {
    GTK_CURVE_TYPE_LINEAR = 0,
    GTK_CURVE_TYPE_SPLINE = 1,
    GTK_CURVE_TYPE_FREE = 2
} GtkCurveType;
typedef enum {
    GTK_PACK_START = 0,
    GTK_PACK_END = 1
} GtkPackType;
typedef enum {
    GTK_ARROW_UP = 0,
    GTK_ARROW_DOWN = 1,
    GTK_ARROW_LEFT = 2,
    GTK_ARROW_RIGHT = 3
} GtkArrowType;
typedef enum {
    GTK_SHADOW_NONE = 0,
    GTK_SHADOW_IN = 1,
    GTK_SHADOW_OUT = 2,
    GTK_SHADOW_ETCHED_IN = 3,
    GTK_SHADOW_ETCHED_OUT = 4
} GtkShadowType;
typedef enum {
    GTK_DIR_TAB_FORWARD = 0,
    GTK_DIR_TAB_BACKWARD = 1,
    GTK_DIR_UP = 2,
    GTK_DIR_DOWN = 3,
    GTK_DIR_LEFT = 4,
    GTK_DIR_RIGHT = 5
} GtkDirectionType;
typedef enum {
    GTK_ICON_SIZE_INVALID = 0,
    GTK_ICON_SIZE_MENU = 1,
    GTK_ICON_SIZE_SMALL_TOOLBAR = 2,
    GTK_ICON_SIZE_LARGE_TOOLBAR = 3,
    GTK_ICON_SIZE_BUTTON = 4,
    GTK_ICON_SIZE_DND = 5,
    GTK_ICON_SIZE_DIALOG = 6
} GtkIconSize;
typedef enum {
    GTK_SELECTION_NONE = 0,
    GTK_SELECTION_SINGLE = 1,
    GTK_SELECTION_BROWSE = 2,
    GTK_SELECTION_MULTIPLE = 3,
    GTK_SELECTION_EXTENDED = 3
} GtkSelectionMode;
typedef enum {
    GTK_CORNER_TOP_LEFT = 0,
    GTK_CORNER_BOTTOM_LEFT = 1,
    GTK_CORNER_TOP_RIGHT = 2,
    GTK_CORNER_BOTTOM_RIGHT = 3
} GtkCornerType;
typedef enum {
    GTK_POS_LEFT = 0,
    GTK_POS_RIGHT = 1,
    GTK_POS_TOP = 2,
    GTK_POS_BOTTOM = 3
} GtkPositionType;
typedef enum {
    GTK_TOOLBAR_ICONS = 0,
    GTK_TOOLBAR_TEXT = 1,
    GTK_TOOLBAR_BOTH = 2,
    GTK_TOOLBAR_BOTH_HORIZ = 3
} GtkToolbarStyle;
typedef enum {
    GTK_RELIEF_NORMAL = 0,
    GTK_RELIEF_HALF = 1,
    GTK_RELIEF_NONE = 2
} GtkReliefStyle;
typedef enum {
    GTK_PIXELS = 0,
    GTK_INCHES = 1,
    GTK_CENTIMETERS = 2
} GtkMetricType;
typedef enum {
    GTK_EXPAND = 1,
    GTK_SHRINK = 2,
    GTK_FILL = 4
} GtkAttachOptions;
typedef enum {
    GTK_MESSAGE_INFO = 0,
    GTK_MESSAGE_WARNING = 1,
    GTK_MESSAGE_QUESTION = 2,
    GTK_MESSAGE_ERROR = 3
} GtkMessageType;
typedef enum {
    GTK_POLICY_ALWAYS = 0,
    GTK_POLICY_AUTOMATIC = 1,
    GTK_POLICY_NEVER = 2
} GtkPolicyType;
typedef enum {
    GTK_RESIZE_PARENT = 0,
    GTK_RESIZE_QUEUE = 1,
    GTK_RESIZE_IMMEDIATE = 2
} GtkResizeMode;
typedef enum {
    GTK_WINDOW_TOPLEVEL = 0,
    GTK_WINDOW_POPUP = 1
} GtkWindowType;
typedef enum {
    GTK_WIN_POS_NONE = 0,
    GTK_WIN_POS_CENTER = 1,
    GTK_WIN_POS_MOUSE = 2,
    GTK_WIN_POS_CENTER_ALWAYS = 3,
    GTK_WIN_POS_CENTER_ON_PARENT = 4
} GtkWindowPosition;
typedef enum {
    GTK_EXPANDER_COLLAPSED = 0,
    GTK_EXPANDER_SEMI_COLLAPSED = 1,
    GTK_EXPANDER_SEMI_EXPANDED = 2,
    GTK_EXPANDER_EXPANDED = 3
} GtkExpanderStyle;
typedef enum {
    GTK_PATH_PRIO_LOWEST = 0,
    GTK_PATH_PRIO_GTK = 4,
    GTK_PATH_PRIO_APPLICATION = 8,
    GTK_PATH_PRIO_THEME = 10,
    GTK_PATH_PRIO_RC = 12,
    GTK_PATH_PRIO_HIGHEST = 15
} GtkPathPriorityType;
typedef enum {
    GTK_PATH_WIDGET = 0,
    GTK_PATH_WIDGET_CLASS = 1,
    GTK_PATH_CLASS = 2
} GtkPathType;
typedef enum {
    GTK_SCROLL_NONE = 0,
    GTK_SCROLL_JUMP = 1,
    GTK_SCROLL_STEP_BACKWARD = 2,
    GTK_SCROLL_STEP_FORWARD = 3,
    GTK_SCROLL_PAGE_BACKWARD = 4,
    GTK_SCROLL_PAGE_FORWARD = 5,
    GTK_SCROLL_STEP_UP = 6,
    GTK_SCROLL_STEP_DOWN = 7,
    GTK_SCROLL_PAGE_UP = 8,
    GTK_SCROLL_PAGE_DOWN = 9,
    GTK_SCROLL_STEP_LEFT = 10,
    GTK_SCROLL_STEP_RIGHT = 11,
    GTK_SCROLL_PAGE_LEFT = 12,
    GTK_SCROLL_PAGE_RIGHT = 13,
    GTK_SCROLL_START = 14,
    GTK_SCROLL_END = 15
} GtkScrollType;
typedef enum {
    GTK_MOVEMENT_LOGICAL_POSITIONS = 0,
    GTK_MOVEMENT_VISUAL_POSITIONS = 1,
    GTK_MOVEMENT_WORDS = 2,
    GTK_MOVEMENT_DISPLAY_LINES = 3,
    GTK_MOVEMENT_DISPLAY_LINE_ENDS = 4,
    GTK_MOVEMENT_PARAGRAPHS = 5,
    GTK_MOVEMENT_PARAGRAPH_ENDS = 6,
    GTK_MOVEMENT_PAGES = 7,
    GTK_MOVEMENT_BUFFER_ENDS = 8,
    GTK_MOVEMENT_HORIZONTAL_PAGES = 9
} GtkMovementStep;
typedef enum {
    GTK_MENU_DIR_PARENT = 0,
    GTK_MENU_DIR_CHILD = 1,
    GTK_MENU_DIR_NEXT = 2,
    GTK_MENU_DIR_PREV = 3
} GtkMenuDirectionType;
typedef enum {
    GTK_SCROLL_STEPS = 0,
    GTK_SCROLL_PAGES = 1,
    GTK_SCROLL_ENDS = 2,
    GTK_SCROLL_HORIZONTAL_STEPS = 3,
    GTK_SCROLL_HORIZONTAL_PAGES = 4,
    GTK_SCROLL_HORIZONTAL_ENDS = 5
} GtkScrollStep;
typedef enum {
    GTK_DELETE_CHARS = 0,
    GTK_DELETE_WORD_ENDS = 1,
    GTK_DELETE_WORDS = 2,
    GTK_DELETE_DISPLAY_LINES = 3,
    GTK_DELETE_DISPLAY_LINE_ENDS = 4,
    GTK_DELETE_PARAGRAPH_ENDS = 5,
    GTK_DELETE_PARAGRAPHS = 6,
    GTK_DELETE_WHITESPACE = 7
} GtkDeleteType;
typedef enum {
    GTK_VISIBILITY_NONE = 0,
    GTK_VISIBILITY_PARTIAL = 1,
    GTK_VISIBILITY_FULL = 2
} GtkVisibility;
typedef enum {
    GTK_IM_PREEDIT_NOTHING,
    GTK_IM_PREEDIT_CALLBACK,
    GTK_IM_PREEDIT_NONE
} GtkIMPreeditStyle;
typedef enum {
    GTK_ANCHOR_CENTER,
    GTK_ANCHOR_NORTH,
    GTK_ANCHOR_NORTH_WEST,
    GTK_ANCHOR_NORTH_EAST,
    GTK_ANCHOR_SOUTH,
    GTK_ANCHOR_SOUTH_WEST,
    GTK_ANCHOR_SOUTH_EAST,
    GTK_ANCHOR_WEST,
    GTK_ANCHOR_EAST,
    GTK_ANCHOR_N = GTK_ANCHOR_NORTH,
    GTK_ANCHOR_NW = GTK_ANCHOR_NORTH_WEST,
    GTK_ANCHOR_NE = GTK_ANCHOR_NORTH_EAST,
    GTK_ANCHOR_S = GTK_ANCHOR_SOUTH,
    GTK_ANCHOR_SW = GTK_ANCHOR_SOUTH_WEST,
    GTK_ANCHOR_SE = GTK_ANCHOR_SOUTH_EAST,
    GTK_ANCHOR_W = GTK_ANCHOR_WEST,
    GTK_ANCHOR_E = GTK_ANCHOR_EAST
} GtkAnchorType;
typedef enum {
    GTK_IM_STATUS_NOTHING,
    GTK_IM_STATUS_CALLBACK,
    GTK_IM_STATUS_NONE
} GtkIMStatusStyle;
typedef enum {
    GTK_PACK_DIRECTION_LTR,
    GTK_PACK_DIRECTION_RTL,
    GTK_PACK_DIRECTION_TTB,
    GTK_PACK_DIRECTION_BTT
} GtkPackDirection;
typedef enum {
    GTK_PAGE_ORIENTATION_PORTRAIT,
    GTK_PAGE_ORIENTATION_LANDSCAPE,
    GTK_PAGE_ORIENTATION_REVERSE_PORTRAIT,
    GTK_PAGE_ORIENTATION_REVERSE_LANDSCAPE
} GtkPageOrientation;
typedef enum {
    GTK_PRINT_QUALITY_LOW,
    GTK_PRINT_QUALITY_NORMAL,
    GTK_PRINT_QUALITY_HIGH,
    GTK_PRINT_QUALITY_DRAFT
} GtkPrintQuality;
typedef enum {
    GTK_PRINT_DUPLEX_SIMPLEX,
    GTK_PRINT_DUPLEX_HORIZONTAL,
    GTK_PRINT_DUPLEX_VERTICAL
} GtkPrintDuplex;
typedef enum {
    GTK_PRINT_PAGES_ALL,
    GTK_PRINT_PAGES_CURRENT,
    GTK_PRINT_PAGES_RANGES,
    GTK_PRINT_PAGES_SELECTION
} GtkPrintPages;
typedef enum {
    GTK_PAGE_SET_ALL,
    GTK_PAGE_SET_EVEN,
    GTK_PAGE_SET_ODD
} GtkPageSet;
typedef enum {
    GTK_NUMBER_UP_LAYOUT_LEFT_TO_RIGHT_TOP_TO_BOTTOM,
    GTK_NUMBER_UP_LAYOUT_LEFT_TO_RIGHT_BOTTOM_TO_TOP,
    GTK_NUMBER_UP_LAYOUT_RIGHT_TO_LEFT_TOP_TO_BOTTOM,
    GTK_NUMBER_UP_LAYOUT_RIGHT_TO_LEFT_BOTTOM_TO_TOP,
    GTK_NUMBER_UP_LAYOUT_TOP_TO_BOTTOM_LEFT_TO_RIGHT,
    GTK_NUMBER_UP_LAYOUT_TOP_TO_BOTTOM_RIGHT_TO_LEFT,
    GTK_NUMBER_UP_LAYOUT_BOTTOM_TO_TOP_LEFT_TO_RIGHT,
    GTK_NUMBER_UP_LAYOUT_BOTTOM_TO_TOP_RIGHT_TO_LEFT
} GtkNumberUpLayout;
typedef enum {
    GTK_UNIT_PIXEL,
    GTK_UNIT_POINTS,
    GTK_UNIT_INCH,
    GTK_UNIT_MM
} GtkUnit;
typedef enum {
    GTK_SENSITIVITY_AUTO,
    GTK_SENSITIVITY_ON,
    GTK_SENSITIVITY_OFF
} GtkSensitivityType;
typedef enum {
    GTK_TREE_VIEW_GRID_LINES_NONE,
    GTK_TREE_VIEW_GRID_LINES_HORIZONTAL,
    GTK_TREE_VIEW_GRID_LINES_VERTICAL,
    GTK_TREE_VIEW_GRID_LINES_BOTH
} GtkTreeViewGridLines;
</SCREEN>
</SECT2>
<SECT2>
<TITLE>gtk-2.0/gtk/gtkprintoperationpreview.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define __GTK_PRINT_OPERATION_PREVIEW_H__
#define GTK_TYPE_PRINT_OPERATION_PREVIEW	(gtk_print_operation_preview_get_type ())
#define GTK_PRINT_OPERATION_PREVIEW(obj)	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_PRINT_OPERATION_PREVIEW, GtkPrintOperationPreview))
#define GTK_IS_PRINT_OPERATION_PREVIEW(obj)	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_PRINT_OPERATION_PREVIEW))
#define GTK_PRINT_OPERATION_PREVIEW_GET_IFACE(obj)	(G_TYPE_INSTANCE_GET_INTERFACE ((obj), GTK_TYPE_PRINT_OPERATION_PREVIEW, GtkPrintOperationPreviewIface))

typedef struct _GtkPrintOperationPreview GtkPrintOperationPreview;
typedef struct _GtkPrintOperationPreviewIface {
    GTypeInterface g_iface;
    void (*ready) (void);
    void (*got_page_size) (void);
    void (*render_page) (void);
     gboolean(*is_selected) (void);
    void (*end_preview) (void);
    void (*_gtk_reserved1) (void);
    void (*_gtk_reserved2) (void);
    void (*_gtk_reserved3) (void);
    void (*_gtk_reserved4) (void);
    void (*_gtk_reserved5) (void);
    void (*_gtk_reserved6) (void);
    void (*_gtk_reserved7) (void);
} GtkPrintOperationPreviewIface;
extern void
gtk_print_operation_preview_end_preview(GtkPrintOperationPreview *
					preview);
extern GType gtk_print_operation_preview_get_type(void);
extern gboolean
gtk_print_operation_preview_is_selected(GtkPrintOperationPreview * preview,
					gint page_nr);
extern void
gtk_print_operation_preview_render_page(GtkPrintOperationPreview * preview,
					gint page_nr);
</SCREEN>
</SECT2>
<SECT2>
<TITLE>gtk-2.0/gtk/gtkrecentfilter.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define __GTK_RECENT_FILTER_H__
#define GTK_TYPE_RECENT_FILTER	(gtk_recent_filter_get_type ())
#define GTK_RECENT_FILTER(obj)	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_RECENT_FILTER, GtkRecentFilter))
#define GTK_IS_RECENT_FILTER(obj)	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_RECENT_FILTER))

typedef struct _GtkRecentFilter GtkRecentFilter;
typedef struct _GtkRecentFilterInfo {
    GtkRecentFilterFlags contains;
    const char *uri;
    const char *display_name;
    const char *mime_type;
    const char **applications;
    const char **groups;
    gint age;
} GtkRecentFilterInfo;
typedef enum {
    GTK_RECENT_FILTER_URI,
    GTK_RECENT_FILTER_DISPLAY_NAME,
    GTK_RECENT_FILTER_MIME_TYPE,
    GTK_RECENT_FILTER_APPLICATION,
    GTK_RECENT_FILTER_GROUP,
    GTK_RECENT_FILTER_AGE
} GtkRecentFilterFlags;
typedef gboolean(*GtkRecentFilterFunc) (const GtkRecentFilterInfo *,
					gpointer);
extern void gtk_recent_filter_add_age(GtkRecentFilter * filter, gint days);
extern void gtk_recent_filter_add_application(GtkRecentFilter * filter,
					      const char *application);
extern void gtk_recent_filter_add_custom(GtkRecentFilter * filter,
					 GtkRecentFilterFlags needed,
					 GtkRecentFilterFunc func,
					 gpointer data,
					 GDestroyNotify data_destroy);
extern void gtk_recent_filter_add_group(GtkRecentFilter * filter,
					const char *group);
extern void gtk_recent_filter_add_mime_type(GtkRecentFilter * filter,
					    const char *mime_type);
extern void gtk_recent_filter_add_pattern(GtkRecentFilter * filter,
					  const char *pattern);
extern void gtk_recent_filter_add_pixbuf_formats(GtkRecentFilter * filter);
extern gboolean gtk_recent_filter_filter(GtkRecentFilter * filter,
					 const GtkRecentFilterInfo *
					 filter_info);
extern const char *gtk_recent_filter_get_name(GtkRecentFilter * filter);
extern GtkRecentFilterFlags gtk_recent_filter_get_needed(GtkRecentFilter *
							 filter);
extern GType gtk_recent_filter_get_type(void);
extern GtkRecentFilter *gtk_recent_filter_new(void);
extern void gtk_recent_filter_set_name(GtkRecentFilter * filter,
				       const char *name);
</SCREEN>
</SECT2>
<SECT2>
<TITLE>gtk-2.0/gtk/gtkrecentmanager.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define __GTK_RECENT_MANAGER_H__
#define GTK_TYPE_RECENT_INFO	(gtk_recent_info_get_type ())
#define GTK_RECENT_MANAGER_ERROR	(gtk_recent_manager_error_quark ())
#define GTK_TYPE_RECENT_MANAGER	(gtk_recent_manager_get_type ())
#define GTK_RECENT_MANAGER_CLASS(klass)	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_RECENT_MANAGER, GtkRecentManagerClass))
#define GTK_IS_RECENT_MANAGER_CLASS(klass)	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_RECENT_MANAGER))
#define GTK_RECENT_MANAGER(obj)	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_RECENT_MANAGER, GtkRecentManager))
#define GTK_IS_RECENT_MANAGER(obj)	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_RECENT_MANAGER))
#define GTK_RECENT_MANAGER_GET_CLASS(obj)	(G_TYPE_INSTANCE_GET_CLASS ((obj), GTK_TYPE_RECENT_MANAGER, GtkRecentManagerClass))

typedef struct _GtkRecentInfo GtkRecentInfo;
typedef struct _GtkRecentData {
    gchar *display_name;
    gchar *description;
    gchar *mime_type;
    gchar *app_name;
    gchar *app_exec;
    gchar **groups;
    gboolean is_private;
} GtkRecentData;
typedef struct _GtkRecentManager {
    GObject parent_instance;
    GtkRecentManagerPrivate *priv;
} GtkRecentManager;
typedef struct _GtkRecentManagerClass {
    GObjectClass parent_class;
    void (*changed) (void);
    void (*_gtk_recent1) (void);
    void (*_gtk_recent2) (void);
    void (*_gtk_recent3) (void);
    void (*_gtk_recent4) (void);
} GtkRecentManagerClass;
typedef struct _GtkRecentManagerPrivate GtkRecentManagerPrivate;
typedef enum {
    GTK_RECENT_MANAGER_ERROR_NOT_FOUND,
    GTK_RECENT_MANAGER_ERROR_INVALID_URI,
    GTK_RECENT_MANAGER_ERROR_INVALID_ENCODING,
    GTK_RECENT_MANAGER_ERROR_NOT_REGISTERED,
    GTK_RECENT_MANAGER_ERROR_READ,
    GTK_RECENT_MANAGER_ERROR_WRITE,
    GTK_RECENT_MANAGER_ERROR_UNKNOWN
} GtkRecentManagerError;
extern gboolean gtk_recent_info_exists(GtkRecentInfo * info);
extern time_t gtk_recent_info_get_added(GtkRecentInfo * info);
extern gint gtk_recent_info_get_age(GtkRecentInfo * info);
extern gboolean gtk_recent_info_get_application_info(GtkRecentInfo * info,
						     const char *app_name,
						     const char **app_exec,
						     guint * count,
						     time_t * time_);
extern gchar **gtk_recent_info_get_applications(GtkRecentInfo * info,
						gsize * length);
extern const char *gtk_recent_info_get_description(GtkRecentInfo * info);
extern const char *gtk_recent_info_get_display_name(GtkRecentInfo * info);
extern gchar **gtk_recent_info_get_groups(GtkRecentInfo * info,
					  gsize * length);
extern GdkPixbuf *gtk_recent_info_get_icon(GtkRecentInfo * info,
					   gint size);
extern const char *gtk_recent_info_get_mime_type(GtkRecentInfo * info);
extern time_t gtk_recent_info_get_modified(GtkRecentInfo * info);
extern gboolean gtk_recent_info_get_private_hint(GtkRecentInfo * info);
extern gchar *gtk_recent_info_get_short_name(GtkRecentInfo * info);
extern GType gtk_recent_info_get_type(void);
extern const char *gtk_recent_info_get_uri(GtkRecentInfo * info);
extern gchar *gtk_recent_info_get_uri_display(GtkRecentInfo * info);
extern time_t gtk_recent_info_get_visited(GtkRecentInfo * info);
extern gboolean gtk_recent_info_has_application(GtkRecentInfo * info,
						const char *app_name);
extern gboolean gtk_recent_info_has_group(GtkRecentInfo * info,
					  const char *group_name);
extern gboolean gtk_recent_info_is_local(GtkRecentInfo * info);
extern gchar *gtk_recent_info_last_application(GtkRecentInfo * info);
extern gboolean gtk_recent_info_match(GtkRecentInfo * info_a,
				      GtkRecentInfo * info_b);
extern GtkRecentInfo *gtk_recent_info_ref(GtkRecentInfo * info);
extern void gtk_recent_info_unref(GtkRecentInfo * info);
extern gboolean gtk_recent_manager_add_full(GtkRecentManager * manager,
					    const char *uri,
					    const GtkRecentData *
					    recent_data);
extern gboolean gtk_recent_manager_add_item(GtkRecentManager * manager,
					    const char *uri);
extern GQuark gtk_recent_manager_error_quark(void);
extern GtkRecentManager *gtk_recent_manager_get_default(void);
extern GList *gtk_recent_manager_get_items(GtkRecentManager * manager);
extern gint gtk_recent_manager_get_limit(GtkRecentManager * manager);
extern GType gtk_recent_manager_get_type(void);
extern gboolean gtk_recent_manager_has_item(GtkRecentManager * manager,
					    const char *uri);
extern GtkRecentInfo *gtk_recent_manager_lookup_item(GtkRecentManager *
						     manager,
						     const char *uri,
						     GError * *error);
extern gboolean gtk_recent_manager_move_item(GtkRecentManager * manager,
					     const char *uri,
					     const char *new_uri,
					     GError * *error);
extern GtkRecentManager *gtk_recent_manager_new(void);
extern gint gtk_recent_manager_purge_items(GtkRecentManager * manager,
					   GError * *error);
extern gboolean gtk_recent_manager_remove_item(GtkRecentManager * manager,
					       const char *uri,
					       GError * *error);
extern void gtk_recent_manager_set_limit(GtkRecentManager * manager,
					 gint limit);
</SCREEN>
</SECT2>
<SECT2>
<TITLE>gtk-2.0/gtk/gtkstatusicon.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define __GTK_STATUS_ICON_H__
#define GTK_TYPE_STATUS_ICON	(gtk_status_icon_get_type ())
#define GTK_STATUS_ICON_CLASS(k)	(G_TYPE_CHECK_CLASS_CAST ((k), GTK_TYPE_STATUS_ICON, GtkStatusIconClass))
#define GTK_IS_STATUS_ICON_CLASS(k)	(G_TYPE_CHECK_CLASS_TYPE ((k), GTK_TYPE_STATUS_ICON))
#define GTK_STATUS_ICON(o)	(G_TYPE_CHECK_INSTANCE_CAST ((o), GTK_TYPE_STATUS_ICON, GtkStatusIcon))
#define GTK_IS_STATUS_ICON(o)	(G_TYPE_CHECK_INSTANCE_TYPE ((o), GTK_TYPE_STATUS_ICON))
#define GTK_STATUS_ICON_GET_CLASS(o)	(G_TYPE_INSTANCE_GET_CLASS ((o), GTK_TYPE_STATUS_ICON, GtkStatusIconClass))

typedef struct _GtkStatusIcon {
    GObject parent_instance;
    GtkStatusIconPrivate *priv;
} GtkStatusIcon;
typedef struct _GtkStatusIconClass {
    GObjectClass parent_class;
    void (*activate) (void);
    void (*popup_menu) (void);
     gboolean(*size_changed) (void);
     gboolean(*button_press_event) (GtkStatusIcon *, GdkEventButton *);
     gboolean(*button_release_event) (GtkStatusIcon *, GdkEventButton *);
     gboolean(*scroll_event) (GtkStatusIcon *, GdkEventButton *);
     gboolean(*query_tooltip) (GtkStatusIcon *, gint, gint, gboolean,
			       GtkTooltip *);
    void *__gtk_reserved5;
    void *__gtk_reserved6;
} GtkStatusIconClass;
typedef struct _GtkStatusIconPrivate GtkStatusIconPrivate;
typedef struct _GtkTooltip GtkTooltip;
extern gboolean gtk_status_icon_get_blinking(GtkStatusIcon * status_icon);
extern gboolean gtk_status_icon_get_geometry(GtkStatusIcon * status_icon,
					     GdkScreen * *screen,
					     GdkRectangle * area,
					     GtkOrientation * orientation);
extern const char *gtk_status_icon_get_icon_name(GtkStatusIcon *
						 status_icon);
extern GdkPixbuf *gtk_status_icon_get_pixbuf(GtkStatusIcon * status_icon);
extern gint gtk_status_icon_get_size(GtkStatusIcon * status_icon);
extern const char *gtk_status_icon_get_stock(GtkStatusIcon * status_icon);
extern GtkImageType gtk_status_icon_get_storage_type(GtkStatusIcon *
						     status_icon);
extern GType gtk_status_icon_get_type(void);
extern gboolean gtk_status_icon_get_visible(GtkStatusIcon * status_icon);
extern gboolean gtk_status_icon_is_embedded(GtkStatusIcon * status_icon);
extern GtkStatusIcon *gtk_status_icon_new(void);
extern GtkStatusIcon *gtk_status_icon_new_from_file(const char *filename);
extern GtkStatusIcon *gtk_status_icon_new_from_icon_name(const char
							 *icon_name);
extern GtkStatusIcon *gtk_status_icon_new_from_pixbuf(GdkPixbuf * pixbuf);
extern GtkStatusIcon *gtk_status_icon_new_from_stock(const char *stock_id);
extern void gtk_status_icon_position_menu(GtkMenu * menu, gint * x,
					  gint * y, gboolean * push_in,
					  gpointer user_data);
extern void gtk_status_icon_set_blinking(GtkStatusIcon * status_icon,
					 gboolean blinking);
extern void gtk_status_icon_set_from_file(GtkStatusIcon * status_icon,
					  const char *filename);
extern void gtk_status_icon_set_from_icon_name(GtkStatusIcon * status_icon,
					       const char *icon_name);
extern void gtk_status_icon_set_from_pixbuf(GtkStatusIcon * status_icon,
					    GdkPixbuf * pixbuf);
extern void gtk_status_icon_set_from_stock(GtkStatusIcon * status_icon,
					   const char *stock_id);
extern void gtk_status_icon_set_tooltip(GtkStatusIcon * status_icon,
					const gchar * tooltip_text);
extern void gtk_status_icon_set_visible(GtkStatusIcon * status_icon,
					gboolean visible);
</SCREEN>
</SECT2>
<SECT2>
<TITLE>gtk-2.0/gtk/gtktextbufferrichtext.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define __GTK_TEXT_BUFFER_RICH_TEXT_H__

typedef guint8 *(*GtkTextBufferSerializeFunc) (GtkTextBuffer *,
					       GtkTextBuffer *,
					       const struct _GtkTextIter *,
					       const struct _GtkTextIter *,
					       gsize *, gpointer);
typedef gboolean(*GtkTextBufferDeserializeFunc) (GtkTextBuffer *,
						 GtkTextBuffer *,
						 GtkTextIter *,
						 const unsigned char *,
						 gsize, gboolean, gpointer,
						 GError * *);
extern gboolean gtk_text_buffer_deserialize(GtkTextBuffer *
					    register_buffer,
					    GtkTextBuffer * content_buffer,
					    struct _GdkAtom *format,
					    GtkTextIter * iter,
					    const unsigned char *data,
					    gsize length, GError * *error);
extern gboolean
gtk_text_buffer_deserialize_get_can_create_tags(GtkTextBuffer * buffer,
						GdkAtom format);
extern void gtk_text_buffer_deserialize_set_can_create_tags(GtkTextBuffer *
							    buffer,
							    GdkAtom format,
							    gboolean
							    can_create_tags);
extern struct _GdkAtom
    **gtk_text_buffer_get_deserialize_formats(GtkTextBuffer * buffer,
					      gint * n_formats);
extern struct _GdkAtom
    **gtk_text_buffer_get_serialize_formats(GtkTextBuffer * buffer,
					    gint * n_formats);
extern GdkAtom gtk_text_buffer_register_deserialize_format(GtkTextBuffer *
							   buffer,
							   const char
							   *mime_type,
							   GtkTextBufferDeserializeFunc
							   function,
							   gpointer
							   user_data,
							   GDestroyNotify
							   user_data_destroy);
extern GdkAtom gtk_text_buffer_register_deserialize_tagset(GtkTextBuffer *
							   buffer,
							   const char
							   *tagset_name);
extern GdkAtom gtk_text_buffer_register_serialize_format(GtkTextBuffer *
							 buffer,
							 const char
							 *mime_type,
							 GtkTextBufferSerializeFunc
							 function,
							 gpointer
							 user_data,
							 GDestroyNotify
							 user_data_destroy);
extern GdkAtom gtk_text_buffer_register_serialize_tagset(GtkTextBuffer *
							 buffer,
							 const char
							 *tagset_name);
extern guint8 *gtk_text_buffer_serialize(GtkTextBuffer * register_buffer,
					 GtkTextBuffer * content_buffer,
					 struct _GdkAtom *format,
					 const struct _GtkTextIter *start,
					 const struct _GtkTextIter *end,
					 gsize * length);
extern void gtk_text_buffer_unregister_deserialize_format(GtkTextBuffer *
							  buffer,
							  GdkAtom format);
extern void gtk_text_buffer_unregister_serialize_format(GtkTextBuffer *
							buffer,
							GdkAtom format);
</SCREEN>
</SECT2>
<SECT2>
<TITLE>gtk-unix-print-2.0/gtk/gtkpagesetupunixdialog.h</TITLE>
<PARA>
</PARA>
<SCREEN>

typedef struct _GtkPageSetupUnixDialog {
    GtkDialog parent_instance;
    GtkPageSetupUnixDialogPrivate *priv;
} GtkPageSetupUnixDialog;
typedef struct _GtkPageSetupUnixDialogClass {
    GtkDialogClass parent_class;
    void (*_gtk_reserved1) (void);
    void (*_gtk_reserved2) (void);
    void (*_gtk_reserved3) (void);
    void (*_gtk_reserved4) (void);
    void (*_gtk_reserved5) (void);
    void (*_gtk_reserved6) (void);
    void (*_gtk_reserved7) (void);
} GtkPageSetupUnixDialogClass;
typedef struct GtkPageSetupUnixDialogPrivate GtkPageSetupUnixDialogPrivate;
extern GtkPageSetup
    *gtk_page_setup_unix_dialog_get_page_setup(GtkPageSetupUnixDialog *
					       dialog);
extern GtkPrintSettings
    *gtk_page_setup_unix_dialog_get_print_settings(GtkPageSetupUnixDialog *
						   dialog);
extern GType gtk_page_setup_unix_dialog_get_type(void);
extern GtkWidget *gtk_page_setup_unix_dialog_new(const char *title,
						 GtkWindow * parent);
extern void
gtk_page_setup_unix_dialog_set_page_setup(GtkPageSetupUnixDialog * dialog,
					  GtkPageSetup * page_setup);
extern void
gtk_page_setup_unix_dialog_set_print_settings(GtkPageSetupUnixDialog *
					      dialog,
					      GtkPrintSettings *
					      print_settings);
</SCREEN>
</SECT2>
<SECT2>
<TITLE>gtk-unix-print-2.0/gtk/gtkprinter.h</TITLE>
<PARA>
</PARA>
<SCREEN>

typedef enum {
    GTK_PRINT_CAPABILITY_PAGE_SET,
    GTK_PRINT_CAPABILITY_COPIES,
    GTK_PRINT_CAPABILITY_COLLATE,
    GTK_PRINT_CAPABILITY_REVERSE,
    GTK_PRINT_CAPABILITY_SCALE,
    GTK_PRINT_CAPABILITY_GENERATE_PDF,
    GTK_PRINT_CAPABILITY_GENERATE_PS,
    GTK_PRINT_CAPABILITY_PREVIEW,
    GTK_PRINT_CAPABILITY_NUMBER_UP,
    GTK_PRINT_CAPABILITY_NUMBER_UP_LAYOUT
} GtkPrintCapabilities;
typedef struct _GtkPrinter {
    GObject parent_instance;
    GtkPrinterPrivate *priv;
} GtkPrinter;
typedef struct _GtkPrinterClass {
    GObjectClass parent_class;
    void (*details_acquired) (void);
    void (*_gtk_reserved1) (void);
    void (*_gtk_reserved2) (void);
    void (*_gtk_reserved3) (void);
    void (*_gtk_reserved4) (void);
    void (*_gtk_reserved5) (void);
    void (*_gtk_reserved6) (void);
    void (*_gtk_reserved7) (void);
} GtkPrinterClass;
typedef struct _GtkPrinterPrivate GtkPrinterPrivate;
typedef struct _GtkPrintBackend GtkPrintBackend;
typedef gboolean(*GtkPrinterFunc) (GtkPrinter *, gpointer);
extern void gtk_enumerate_printers(GtkPrinterFunc func, gpointer data,
				   GDestroyNotify destroy, gboolean wait);
extern GType gtk_print_capabilities_get_type(void);
extern gboolean gtk_printer_accepts_pdf(GtkPrinter * printer);
extern gboolean gtk_printer_accepts_ps(GtkPrinter * printer);
extern gint gtk_printer_compare(GtkPrinter * a, GtkPrinter * b);
extern GtkPrintBackend *gtk_printer_get_backend(GtkPrinter * printer);
extern const char *gtk_printer_get_description(GtkPrinter * printer);
extern const char *gtk_printer_get_icon_name(GtkPrinter * printer);
extern gint gtk_printer_get_job_count(GtkPrinter * printer);
extern const char *gtk_printer_get_location(GtkPrinter * printer);
extern const char *gtk_printer_get_name(GtkPrinter * printer);
extern const char *gtk_printer_get_state_message(GtkPrinter * printer);
extern GType gtk_printer_get_type(void);
extern gboolean gtk_printer_is_active(GtkPrinter * printer);
extern gboolean gtk_printer_is_default(GtkPrinter * printer);
extern gboolean gtk_printer_is_virtual(GtkPrinter * printer);
extern GtkPrinter *gtk_printer_new(const char *name,
				   GtkPrintBackend * backend,
				   gboolean virtual_);
</SCREEN>
</SECT2>
<SECT2>
<TITLE>gtk-unix-print-2.0/gtk/gtkprintjob.h</TITLE>
<PARA>
</PARA>
<SCREEN>

typedef struct _GtkPrintJob {
    GObject parent_instance;
    GtkPrintJobPrivate *priv;
    GtkPrintPages print_pages;
    GtkPageRange *page_ranges;
    gint num_page_ranges;
    GtkPageSet page_set;
    gint num_copies;
    gdouble scale;
    unsigned int rotate_to_orientation:1;
    unsigned int collate:1;
    unsigned int reverse:1;
    guint number_up;
    GtkNumberUpLayout number_up_layout;
} GtkPrintJob;
typedef struct _GtkPrintJobClass {
    GObjectClass parent_class;
    void (*status_changed) (void);
    void (*_gtk_reserved1) (void);
    void (*_gtk_reserved2) (void);
    void (*_gtk_reserved3) (void);
    void (*_gtk_reserved4) (void);
    void (*_gtk_reserved5) (void);
    void (*_gtk_reserved6) (void);
    void (*_gtk_reserved7) (void);
} GtkPrintJobClass;
typedef struct _GtkPrintJobPrivate GtkPrintJobPrivate;
typedef void (*GtkPrintJobCompleteFunc) (GtkPrintJob *, gpointer,
					 GError *);
extern GtkPrinter *gtk_print_job_get_printer(GtkPrintJob * job);
extern GtkPrintSettings *gtk_print_job_get_settings(GtkPrintJob * job);
extern GtkPrintStatus gtk_print_job_get_status(GtkPrintJob * job);
extern cairo_surface_t *gtk_print_job_get_surface(GtkPrintJob * job,
						  GError * *error);
extern const char *gtk_print_job_get_title(GtkPrintJob * job);
extern gboolean gtk_print_job_get_track_print_status(GtkPrintJob * job);
extern GType gtk_print_job_get_type(void);
extern GtkPrintJob *gtk_print_job_new(const char *title,
				      GtkPrinter * printer,
				      GtkPrintSettings * settings,
				      GtkPageSetup * page_setup);
extern void gtk_print_job_send(GtkPrintJob * job,
			       GtkPrintJobCompleteFunc callback,
			       gpointer user_data, GDestroyNotify dnotify);
extern gboolean gtk_print_job_set_source_file(GtkPrintJob * job,
					      const char *filename,
					      GError * *error);
extern void gtk_print_job_set_track_print_status(GtkPrintJob * job,
						 gboolean track_status);
</SCREEN>
</SECT2>
<SECT2>
<TITLE>gtk-unix-print-2.0/gtk/gtkprintunixdialog.h</TITLE>
<PARA>
</PARA>
<SCREEN>

typedef struct _GtkPrintUnixDialog {
    GtkDialog parent_instance;
    GtkPrintUnixDialogPrivate *priv;
} GtkPrintUnixDialog;
typedef struct _GtkPrintUnixDialogClass {
    GtkDialogClass parent_class;
    void (*_gtk_reserved1) (void);
    void (*_gtk_reserved2) (void);
    void (*_gtk_reserved3) (void);
    void (*_gtk_reserved4) (void);
    void (*_gtk_reserved5) (void);
    void (*_gtk_reserved6) (void);
    void (*_gtk_reserved7) (void);
} GtkPrintUnixDialogClass;
typedef struct GtkPrintUnixDialogPrivate GtkPrintUnixDialogPrivate;
extern void gtk_print_unix_dialog_add_custom_tab(GtkPrintUnixDialog *
						 dialog, GtkWidget * child,
						 GtkWidget * tab_label);
extern gint gtk_print_unix_dialog_get_current_page(GtkPrintUnixDialog *
						   dialog);
extern GtkPageSetup
    *gtk_print_unix_dialog_get_page_setup(GtkPrintUnixDialog * dialog);
extern GtkPrinter
    *gtk_print_unix_dialog_get_selected_printer(GtkPrintUnixDialog *
						dialog);
extern GtkPrintSettings
    *gtk_print_unix_dialog_get_settings(GtkPrintUnixDialog * dialog);
extern GType gtk_print_unix_dialog_get_type(void);
extern GtkWidget *gtk_print_unix_dialog_new(const char *title,
					    GtkWindow * parent);
extern void gtk_print_unix_dialog_set_current_page(GtkPrintUnixDialog *
						   dialog,
						   gint current_page);
extern void
gtk_print_unix_dialog_set_manual_capabilities(GtkPrintUnixDialog * dialog,
					      GtkPrintCapabilities
					      capabilities);
extern void gtk_print_unix_dialog_set_page_setup(GtkPrintUnixDialog *
						 dialog,
						 GtkPageSetup *
						 page_setup);
extern void gtk_print_unix_dialog_set_settings(GtkPrintUnixDialog * dialog,
					       GtkPrintSettings *
					       settings);
</SCREEN>
</SECT2>
<SECT2>
<TITLE>gtk-unix-print-2.0/gtk/gtkunixprint.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define __GTK_UNIX_PRINT_H_INSIDE__
#define __GTK_UNIX_PRINT_H__
</SCREEN>
</SECT2>
</SECT1>
<SECT1 ID=libgtk-x11-2.0man>
<TITLE>Interface Definitions for libgtk-x11-2.0</TITLE>
<PARA>
The interfaces defined on the following pages are included in libgtk-x11-2.0 and are defined
by this specification.
Unless otherwise noted, these interfaces shall be included
in the source standard.
</PARA>
<PARA>
Other interfaces listed in <XREF LINKEND=libgtk-x11-2.0> shall behave as described
in the referenced base document.
</PARA>
<refentry id="gtk-x11-gtk.button.get.image"> <refmeta>
<refentrytitle>gtk_button_get_image</refentrytitle>
<refmiscinfo></refmiscinfo>
</refmeta>
<refnamediv>
<refname>gtk_button_get_image</refname>
<refpurpose>
get button image widget
</refpurpose>
</refnamediv>
<refsynopsisdiv>
<funcsynopsis>
<funcsynopsisinfo>
#include &lt;gtk/gtk.h&gt;
</funcsynopsisinfo>
<funcprototype>
<funcdef>GtkWidget *<function>gtk_button_get_image</function></funcdef>
<paramdef>GtkButton *<parameter>button</parameter></paramdef>
</funcprototype>
</funcsynopsis>
</refsynopsisdiv>
<refsect1>
<title>Description</title>
<para>
The <function>gtk_button_get_image</function>
gets the widget that is currenty set as the image of 
<parameter>button</parameter>. This may have been 
explicitly set by <function>gtk_button_set_image</function>
or constructed by <function>gtk_button_new_from_stock</function>.
</para>
</refsect1>

<refsect1>
<title>Return Value</title>
<para>
The <function>gtk_button_get_image</function> function returns 
a <type>GtkWidget</type> pointer referring to the image.
If there is no associated image, <constant>NULL</constant>
is returned.
</para>
</refsect1>

<refsect1>
<title>Errors</title>
<para>
No errors are defined.
</para>
</refsect1>

</refentry>


<refentry id="gtk-x11-gtk.button.set.image"> <refmeta>
<refentrytitle>gtk_button_set_image</refentrytitle>
<refmiscinfo></refmiscinfo>
</refmeta>
<refnamediv>
<refname>gtk_button_set_image</refname>
<refpurpose>
set button image widget
</refpurpose>
</refnamediv>
<refsynopsisdiv>
<funcsynopsis>
<funcsynopsisinfo>
#include &lt;gtk/gtk.h&gt;
</funcsynopsisinfo>
<funcprototype>
<funcdef>void <function>gtk_button_set_image</function></funcdef>
<paramdef>GtkButton *<parameter>button</parameter></paramdef>
<paramdef>GtkWidget *<parameter>widget</parameter></paramdef>
</funcprototype>
</funcsynopsis>
</refsynopsisdiv>
<refsect1>
<title>Description</title>
<para>
The <function>gtk_button_set_image</function> function
sets the image of <parameter>button</parameter>to the
widget given by <parameter>widget</parameter>.
Whether the image is displayed or not depends on the
setting of the <property>gtk-button-images</property> property.
It is not necessary to call <function>gtk_widget_show</function>
on the image.
</para>
</refsect1>

<refsect1>
<title>Errors</title>
<para>
No errors are defined.
</para>
</refsect1>

</refentry>


<REFENTRY ID="gtk-x11-gtk.toolbar.get.tooltips"> <REFMETA>
<REFENTRYTITLE>gtk_toolbar_get_tooltips</REFENTRYTITLE>
<REFMISCINFO>Base Libraries</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>gtk_toolbar_get_tooltips
</REFNAME>
<REFPURPOSE>
retrieve whether tooltips are enabled
</REFPURPOSE>
</REFNAMEDIV>

<REFSYNOPSISDIV>
<REFSYNOPSISDIVINFO>
<DATE>24 September 2008</DATE>
</REFSYNOPSISDIVINFO>
<FUNCSYNOPSIS>
<FUNCSYNOPSISINFO>
#include &lt;gtk/gtk.h&gt;
</FUNCSYNOPSISINFO>
<FUNCPROTOTYPE>
 <FUNCDEF>gboolean <FUNCTION>gtk_toolbar_get_tooltips</FUNCTION></FUNCDEF>
 <PARAMDEF>GtkToolbar *
  <PARAMETER>toolbar</PARAMETER></PARAMDEF>
</FUNCPROTOTYPE>
</FUNCSYNOPSIS>
</REFSYNOPSISDIV>

<REFSECT1>
<REFSECT1INFO>
<DATE>24 September 2008</DATE>
</REFSECT1INFO>
<TITLE>Description
</TITLE>
<PARA>
<FUNCTION>gtk_toolbar_get_tooltips</FUNCTION> shall
retrieve whether the tooltips of <PARAMETER>toolbar</PARAMETER>
are enabled.
</PARA>

<para>
This interface has been deprecated since version 2.14
of the GTK+ specification.
</para>

</REFSECT1>

<REFSECT1>
<TITLE>Return Value
</TITLE>
<PARA>
<FUNCTION>gtk_toolbar_get_tooltips</FUNCTION> shall return
<constant>TRUE</constant> if the tooltips 
of <PARAMETER>toolbar</PARAMETER> are enabled, and
<constant>FALSE</constant> if they are not.
</PARA>
</REFSECT1>

<REFSECT1>
<TITLE>See Also
</TITLE>
<PARA>
<FUNCTION>gtk_toolbar_set_tooltips</FUNCTION>
</PARA>
</REFSECT1>

</REFENTRY>


<REFENTRY ID="gtk-x11-gtk.toolbar.set.tooltips"> <REFMETA>
<REFENTRYTITLE>gtk_toolbar_set_tooltips</REFENTRYTITLE>
<REFMISCINFO>Base Libraries</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>gtk_toolbar_set_tooltips
</REFNAME>
<REFPURPOSE>
set whether a toolbar's tooltips are active
</REFPURPOSE>
</REFNAMEDIV>

<REFSYNOPSISDIV>
<REFSYNOPSISDIVINFO>
<DATE>24 September 2008</DATE>
</REFSYNOPSISDIVINFO>
<FUNCSYNOPSIS>
<FUNCSYNOPSISINFO>
#include &lt;gtk/gtk.h&gt;
</FUNCSYNOPSISINFO>
<FUNCPROTOTYPE>
 <FUNCDEF>void <FUNCTION>gtk_toolbar_set_tooltips</FUNCTION></FUNCDEF>
 <PARAMDEF>GtkToolbar *
  <PARAMETER>toolbar</PARAMETER></PARAMDEF>
 <PARAMDEF>gboolean
  <PARAMETER>enable</PARAMETER></PARAMDEF>
</FUNCPROTOTYPE>
</FUNCSYNOPSIS>
</REFSYNOPSISDIV>

<REFSECT1>
<REFSECT1INFO>
<DATE>24 September 2008</DATE>
</REFSECT1INFO>
<TITLE>Description
</TITLE>
<PARA>
<FUNCTION>gtk_toolbar_set_tooltips</FUNCTION> shall set whether the tooltips of
<PARAMETER>toolbar</PARAMETER> are active. If the value of the parameter
<PARAMETER>enable</PARAMETER> is <constant>TRUE</constant>, then the tooltips shall
be made active; otherwise, they shall be made inactive.
</PARA>

<para>
This call may have no effect.
The interface has been deprecated since version 2.14
of the GTK+ specification.
</para>
</REFSECT1>

<REFSECT1>
<TITLE>See Also
</TITLE>
<PARA>
<FUNCTION>gtk_toolbar_get_tooltips</FUNCTION>
</PARA>
</REFSECT1>

</REFENTRY>


</SECT1>
<!-- End of text generated from database -->

<!-- Start of generated text - do not edit! -->
<!-- generated from the LSB specification database by mklibspec -->
<SECT1 ID=libgio-2.0>
<TITLE>Interfaces for libgio-2.0</TITLE>
<PARA>
<XREF LINKEND="lib-libgio-2.0-def"> defines the library name and shared object name
for the libgio-2.0 library
</PARA>
<TABLE id="lib-libgio-2.0-def">
<TITLE>libgio-2.0 Definition</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Library:</ENTRY>
<ENTRY>libgio-2.0</ENTRY>
</ROW>
<ROW>
<ENTRY>SONAME:</ENTRY>
<ENTRY>libgio-2.0.so.0</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The behavior of the interfaces in this library is specified by the following specifications:<SIMPLELIST COLUMNS=1>
<MEMBER ID='REFSTD.libgio.2.0.1'>
[Gio 2.32] <XREF LINKEND="std.Gio">
</MEMBER>
<MEMBER ID='REFSTD.libgio.2.0.2'>
[Gobject 2.32] <XREF LINKEND="std.Gobject">
</MEMBER>
<MEMBER ID='REFSTD.libgio.2.0.3'>
[LSB] <XREF LINKEND="std.LSB">
</MEMBER>
</SIMPLELIST>
</PARA>
<!-- debug: database interface name libgio-2.0 interfaces -->
<SECT2>
<!--libgroup-->
<TITLE>libgio-2.0 interfaces</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Interfaces for libgio-2.0 interfaces</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic functions
for libgio-2.0 interfaces specified in <XREF linkend="tbl-libgio-2.0-libgi-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<TABLE id="tbl-libgio-2.0-libgi-ints">
<TITLE>libgio-2.0 - libgio-2.0 interfaces Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>g_action_activate</primary></indexterm>g_action_activate <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_action_change_state</primary></indexterm>g_action_change_state <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_action_get_enabled</primary></indexterm>g_action_get_enabled <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_action_get_name</primary></indexterm>g_action_get_name <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_action_get_parameter_type</primary></indexterm>g_action_get_parameter_type <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_action_get_state</primary></indexterm>g_action_get_state <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_action_get_state_hint</primary></indexterm>g_action_get_state_hint <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_action_get_state_type</primary></indexterm>g_action_get_state_type <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_action_get_type</primary></indexterm>g_action_get_type <LINK LINKEND="REFSTD.libgio.2.0.2">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_action_group_action_added</primary></indexterm>g_action_group_action_added <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_action_group_action_enabled_changed</primary></indexterm>g_action_group_action_enabled_changed <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_action_group_action_removed</primary></indexterm>g_action_group_action_removed <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_action_group_action_state_changed</primary></indexterm>g_action_group_action_state_changed <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_action_group_activate_action</primary></indexterm>g_action_group_activate_action <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_action_group_change_action_state</primary></indexterm>g_action_group_change_action_state <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_action_group_get_action_enabled</primary></indexterm>g_action_group_get_action_enabled <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_action_group_get_action_parameter_type</primary></indexterm>g_action_group_get_action_parameter_type <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_action_group_get_action_state</primary></indexterm>g_action_group_get_action_state <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_action_group_get_action_state_hint</primary></indexterm>g_action_group_get_action_state_hint <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_action_group_get_action_state_type</primary></indexterm>g_action_group_get_action_state_type <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_action_group_get_type</primary></indexterm>g_action_group_get_type <LINK LINKEND="REFSTD.libgio.2.0.2">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_action_group_has_action</primary></indexterm>g_action_group_has_action <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_action_group_list_actions</primary></indexterm>g_action_group_list_actions <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_action_group_query_action</primary></indexterm>g_action_group_query_action <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_action_map_add_action</primary></indexterm>g_action_map_add_action <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_action_map_add_action_entries</primary></indexterm>g_action_map_add_action_entries <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_action_map_get_type</primary></indexterm>g_action_map_get_type <LINK LINKEND="REFSTD.libgio.2.0.2">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_action_map_lookup_action</primary></indexterm>g_action_map_lookup_action <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_action_map_remove_action</primary></indexterm>g_action_map_remove_action <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_app_info_add_supports_type</primary></indexterm>g_app_info_add_supports_type <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_app_info_can_delete</primary></indexterm>g_app_info_can_delete <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_app_info_can_remove_supports_type</primary></indexterm>g_app_info_can_remove_supports_type <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_app_info_create_flags_get_type</primary></indexterm>g_app_info_create_flags_get_type <LINK LINKEND="REFSTD.libgio.2.0.2">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_app_info_create_from_commandline</primary></indexterm>g_app_info_create_from_commandline <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_app_info_delete</primary></indexterm>g_app_info_delete <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_app_info_dup</primary></indexterm>g_app_info_dup <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_app_info_equal</primary></indexterm>g_app_info_equal <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_app_info_get_all</primary></indexterm>g_app_info_get_all <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_app_info_get_all_for_type</primary></indexterm>g_app_info_get_all_for_type <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_app_info_get_commandline</primary></indexterm>g_app_info_get_commandline <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_app_info_get_default_for_type</primary></indexterm>g_app_info_get_default_for_type <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_app_info_get_default_for_uri_scheme</primary></indexterm>g_app_info_get_default_for_uri_scheme <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_app_info_get_description</primary></indexterm>g_app_info_get_description <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_app_info_get_display_name</primary></indexterm>g_app_info_get_display_name <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_app_info_get_executable</primary></indexterm>g_app_info_get_executable <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_app_info_get_fallback_for_type</primary></indexterm>g_app_info_get_fallback_for_type <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_app_info_get_icon</primary></indexterm>g_app_info_get_icon <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_app_info_get_id</primary></indexterm>g_app_info_get_id <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_app_info_get_name</primary></indexterm>g_app_info_get_name <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_app_info_get_recommended_for_type</primary></indexterm>g_app_info_get_recommended_for_type <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_app_info_get_type</primary></indexterm>g_app_info_get_type <LINK LINKEND="REFSTD.libgio.2.0.2">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_app_info_launch</primary></indexterm>g_app_info_launch <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_app_info_launch_default_for_uri</primary></indexterm>g_app_info_launch_default_for_uri <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_app_info_launch_uris</primary></indexterm>g_app_info_launch_uris <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_app_info_remove_supports_type</primary></indexterm>g_app_info_remove_supports_type <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_app_info_reset_type_associations</primary></indexterm>g_app_info_reset_type_associations <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_app_info_set_as_default_for_extension</primary></indexterm>g_app_info_set_as_default_for_extension <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_app_info_set_as_default_for_type</primary></indexterm>g_app_info_set_as_default_for_type <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_app_info_set_as_last_used_for_type</primary></indexterm>g_app_info_set_as_last_used_for_type <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_app_info_should_show</primary></indexterm>g_app_info_should_show <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_app_info_supports_files</primary></indexterm>g_app_info_supports_files <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_app_info_supports_uris</primary></indexterm>g_app_info_supports_uris <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_app_launch_context_get_display</primary></indexterm>g_app_launch_context_get_display <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_app_launch_context_get_environment</primary></indexterm>g_app_launch_context_get_environment <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_app_launch_context_get_startup_notify_id</primary></indexterm>g_app_launch_context_get_startup_notify_id <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_app_launch_context_get_type</primary></indexterm>g_app_launch_context_get_type <LINK LINKEND="REFSTD.libgio.2.0.2">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_app_launch_context_launch_failed</primary></indexterm>g_app_launch_context_launch_failed <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_app_launch_context_new</primary></indexterm>g_app_launch_context_new <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_app_launch_context_setenv</primary></indexterm>g_app_launch_context_setenv <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_app_launch_context_unsetenv</primary></indexterm>g_app_launch_context_unsetenv <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_application_activate</primary></indexterm>g_application_activate <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_application_command_line_get_arguments</primary></indexterm>g_application_command_line_get_arguments <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_application_command_line_get_cwd</primary></indexterm>g_application_command_line_get_cwd <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_application_command_line_get_environ</primary></indexterm>g_application_command_line_get_environ <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_application_command_line_get_exit_status</primary></indexterm>g_application_command_line_get_exit_status <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_application_command_line_get_is_remote</primary></indexterm>g_application_command_line_get_is_remote <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_application_command_line_get_platform_data</primary></indexterm>g_application_command_line_get_platform_data <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_application_command_line_get_type</primary></indexterm>g_application_command_line_get_type <LINK LINKEND="REFSTD.libgio.2.0.2">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_application_command_line_getenv</primary></indexterm>g_application_command_line_getenv <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_application_command_line_print</primary></indexterm>g_application_command_line_print <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_application_command_line_printerr</primary></indexterm>g_application_command_line_printerr <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_application_command_line_set_exit_status</primary></indexterm>g_application_command_line_set_exit_status <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_application_flags_get_type</primary></indexterm>g_application_flags_get_type <LINK LINKEND="REFSTD.libgio.2.0.2">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_application_get_application_id</primary></indexterm>g_application_get_application_id <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_application_get_default</primary></indexterm>g_application_get_default <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_application_get_flags</primary></indexterm>g_application_get_flags <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_application_get_inactivity_timeout</primary></indexterm>g_application_get_inactivity_timeout <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_application_get_is_registered</primary></indexterm>g_application_get_is_registered <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_application_get_is_remote</primary></indexterm>g_application_get_is_remote <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_application_get_type</primary></indexterm>g_application_get_type <LINK LINKEND="REFSTD.libgio.2.0.2">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_application_hold</primary></indexterm>g_application_hold <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_application_id_is_valid</primary></indexterm>g_application_id_is_valid <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_application_new</primary></indexterm>g_application_new <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_application_open</primary></indexterm>g_application_open <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_application_quit</primary></indexterm>g_application_quit <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_application_register</primary></indexterm>g_application_register <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_application_release</primary></indexterm>g_application_release <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_application_run</primary></indexterm>g_application_run <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_application_set_action_group</primary></indexterm>g_application_set_action_group <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_application_set_application_id</primary></indexterm>g_application_set_application_id <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_application_set_default</primary></indexterm>g_application_set_default <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_application_set_flags</primary></indexterm>g_application_set_flags <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_application_set_inactivity_timeout</primary></indexterm>g_application_set_inactivity_timeout <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_ask_password_flags_get_type</primary></indexterm>g_ask_password_flags_get_type <LINK LINKEND="REFSTD.libgio.2.0.2">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_async_initable_get_type</primary></indexterm>g_async_initable_get_type <LINK LINKEND="REFSTD.libgio.2.0.2">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_async_initable_init_async</primary></indexterm>g_async_initable_init_async <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_async_initable_init_finish</primary></indexterm>g_async_initable_init_finish <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_async_initable_new_async</primary></indexterm>g_async_initable_new_async <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_async_initable_new_finish</primary></indexterm>g_async_initable_new_finish <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_async_initable_new_valist_async</primary></indexterm>g_async_initable_new_valist_async <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_async_initable_newv_async</primary></indexterm>g_async_initable_newv_async <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_async_result_get_source_object</primary></indexterm>g_async_result_get_source_object <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_async_result_get_type</primary></indexterm>g_async_result_get_type <LINK LINKEND="REFSTD.libgio.2.0.2">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_async_result_get_user_data</primary></indexterm>g_async_result_get_user_data <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_buffered_input_stream_fill</primary></indexterm>g_buffered_input_stream_fill <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_buffered_input_stream_fill_async</primary></indexterm>g_buffered_input_stream_fill_async <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_buffered_input_stream_fill_finish</primary></indexterm>g_buffered_input_stream_fill_finish <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_buffered_input_stream_get_available</primary></indexterm>g_buffered_input_stream_get_available <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_buffered_input_stream_get_buffer_size</primary></indexterm>g_buffered_input_stream_get_buffer_size <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_buffered_input_stream_get_type</primary></indexterm>g_buffered_input_stream_get_type <LINK LINKEND="REFSTD.libgio.2.0.2">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_buffered_input_stream_new</primary></indexterm>g_buffered_input_stream_new <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_buffered_input_stream_new_sized</primary></indexterm>g_buffered_input_stream_new_sized <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_buffered_input_stream_peek</primary></indexterm>g_buffered_input_stream_peek <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_buffered_input_stream_peek_buffer</primary></indexterm>g_buffered_input_stream_peek_buffer <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_buffered_input_stream_read_byte</primary></indexterm>g_buffered_input_stream_read_byte <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_buffered_input_stream_set_buffer_size</primary></indexterm>g_buffered_input_stream_set_buffer_size <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_buffered_output_stream_get_auto_grow</primary></indexterm>g_buffered_output_stream_get_auto_grow <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_buffered_output_stream_get_buffer_size</primary></indexterm>g_buffered_output_stream_get_buffer_size <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_buffered_output_stream_get_type</primary></indexterm>g_buffered_output_stream_get_type <LINK LINKEND="REFSTD.libgio.2.0.2">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_buffered_output_stream_new</primary></indexterm>g_buffered_output_stream_new <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_buffered_output_stream_new_sized</primary></indexterm>g_buffered_output_stream_new_sized <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_buffered_output_stream_set_auto_grow</primary></indexterm>g_buffered_output_stream_set_auto_grow <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_buffered_output_stream_set_buffer_size</primary></indexterm>g_buffered_output_stream_set_buffer_size <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_bus_get</primary></indexterm>g_bus_get <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_bus_get_finish</primary></indexterm>g_bus_get_finish <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_bus_get_sync</primary></indexterm>g_bus_get_sync <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_bus_name_owner_flags_get_type</primary></indexterm>g_bus_name_owner_flags_get_type <LINK LINKEND="REFSTD.libgio.2.0.2">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_bus_name_watcher_flags_get_type</primary></indexterm>g_bus_name_watcher_flags_get_type <LINK LINKEND="REFSTD.libgio.2.0.2">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_bus_own_name</primary></indexterm>g_bus_own_name <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_bus_own_name_on_connection</primary></indexterm>g_bus_own_name_on_connection <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_bus_own_name_on_connection_with_closures</primary></indexterm>g_bus_own_name_on_connection_with_closures <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_bus_own_name_with_closures</primary></indexterm>g_bus_own_name_with_closures <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_bus_type_get_type</primary></indexterm>g_bus_type_get_type <LINK LINKEND="REFSTD.libgio.2.0.2">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_bus_unown_name</primary></indexterm>g_bus_unown_name <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_bus_unwatch_name</primary></indexterm>g_bus_unwatch_name <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_bus_watch_name</primary></indexterm>g_bus_watch_name <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_bus_watch_name_on_connection</primary></indexterm>g_bus_watch_name_on_connection <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_bus_watch_name_on_connection_with_closures</primary></indexterm>g_bus_watch_name_on_connection_with_closures <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_bus_watch_name_with_closures</primary></indexterm>g_bus_watch_name_with_closures <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_cancellable_cancel</primary></indexterm>g_cancellable_cancel <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_cancellable_connect</primary></indexterm>g_cancellable_connect <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_cancellable_disconnect</primary></indexterm>g_cancellable_disconnect <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_cancellable_get_current</primary></indexterm>g_cancellable_get_current <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_cancellable_get_fd</primary></indexterm>g_cancellable_get_fd <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_cancellable_get_type</primary></indexterm>g_cancellable_get_type <LINK LINKEND="REFSTD.libgio.2.0.2">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_cancellable_is_cancelled</primary></indexterm>g_cancellable_is_cancelled <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_cancellable_make_pollfd</primary></indexterm>g_cancellable_make_pollfd <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_cancellable_new</primary></indexterm>g_cancellable_new <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_cancellable_pop_current</primary></indexterm>g_cancellable_pop_current <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_cancellable_push_current</primary></indexterm>g_cancellable_push_current <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_cancellable_release_fd</primary></indexterm>g_cancellable_release_fd <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_cancellable_reset</primary></indexterm>g_cancellable_reset <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_cancellable_set_error_if_cancelled</primary></indexterm>g_cancellable_set_error_if_cancelled <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_cancellable_source_new</primary></indexterm>g_cancellable_source_new <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_charset_converter_get_num_fallbacks</primary></indexterm>g_charset_converter_get_num_fallbacks <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_charset_converter_get_type</primary></indexterm>g_charset_converter_get_type <LINK LINKEND="REFSTD.libgio.2.0.2">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_charset_converter_get_use_fallback</primary></indexterm>g_charset_converter_get_use_fallback <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_charset_converter_new</primary></indexterm>g_charset_converter_new <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_charset_converter_set_use_fallback</primary></indexterm>g_charset_converter_set_use_fallback <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_content_type_can_be_executable</primary></indexterm>g_content_type_can_be_executable <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_content_type_equals</primary></indexterm>g_content_type_equals <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_content_type_from_mime_type</primary></indexterm>g_content_type_from_mime_type <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_content_type_get_description</primary></indexterm>g_content_type_get_description <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_content_type_get_icon</primary></indexterm>g_content_type_get_icon <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_content_type_get_mime_type</primary></indexterm>g_content_type_get_mime_type <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_content_type_guess</primary></indexterm>g_content_type_guess <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_content_type_guess_for_tree</primary></indexterm>g_content_type_guess_for_tree <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_content_type_is_a</primary></indexterm>g_content_type_is_a <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_content_type_is_unknown</primary></indexterm>g_content_type_is_unknown <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_content_types_get_registered</primary></indexterm>g_content_types_get_registered <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_converter_convert</primary></indexterm>g_converter_convert <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_converter_flags_get_type</primary></indexterm>g_converter_flags_get_type <LINK LINKEND="REFSTD.libgio.2.0.2">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_converter_get_type</primary></indexterm>g_converter_get_type <LINK LINKEND="REFSTD.libgio.2.0.2">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_converter_input_stream_get_converter</primary></indexterm>g_converter_input_stream_get_converter <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_converter_input_stream_get_type</primary></indexterm>g_converter_input_stream_get_type <LINK LINKEND="REFSTD.libgio.2.0.2">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_converter_input_stream_new</primary></indexterm>g_converter_input_stream_new <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_converter_output_stream_get_converter</primary></indexterm>g_converter_output_stream_get_converter <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_converter_output_stream_get_type</primary></indexterm>g_converter_output_stream_get_type <LINK LINKEND="REFSTD.libgio.2.0.2">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_converter_output_stream_new</primary></indexterm>g_converter_output_stream_new <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_converter_reset</primary></indexterm>g_converter_reset <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_converter_result_get_type</primary></indexterm>g_converter_result_get_type <LINK LINKEND="REFSTD.libgio.2.0.2">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_credentials_get_native</primary></indexterm>g_credentials_get_native <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_credentials_get_type</primary></indexterm>g_credentials_get_type <LINK LINKEND="REFSTD.libgio.2.0.2">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_credentials_get_unix_user</primary></indexterm>g_credentials_get_unix_user <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_credentials_is_same_user</primary></indexterm>g_credentials_is_same_user <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_credentials_new</primary></indexterm>g_credentials_new <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_credentials_set_native</primary></indexterm>g_credentials_set_native <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_credentials_set_unix_user</primary></indexterm>g_credentials_set_unix_user <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_credentials_to_string</primary></indexterm>g_credentials_to_string <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_credentials_type_get_type</primary></indexterm>g_credentials_type_get_type <LINK LINKEND="REFSTD.libgio.2.0.2">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_data_input_stream_get_byte_order</primary></indexterm>g_data_input_stream_get_byte_order <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_data_input_stream_get_newline_type</primary></indexterm>g_data_input_stream_get_newline_type <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_data_input_stream_get_type</primary></indexterm>g_data_input_stream_get_type <LINK LINKEND="REFSTD.libgio.2.0.2">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_data_input_stream_new</primary></indexterm>g_data_input_stream_new <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_data_input_stream_read_byte</primary></indexterm>g_data_input_stream_read_byte <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_data_input_stream_read_int16</primary></indexterm>g_data_input_stream_read_int16 <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_data_input_stream_read_int32</primary></indexterm>g_data_input_stream_read_int32 <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_data_input_stream_read_int64</primary></indexterm>g_data_input_stream_read_int64 <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_data_input_stream_read_line</primary></indexterm>g_data_input_stream_read_line <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_data_input_stream_read_line_async</primary></indexterm>g_data_input_stream_read_line_async <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_data_input_stream_read_line_finish</primary></indexterm>g_data_input_stream_read_line_finish <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_data_input_stream_read_line_finish_utf8</primary></indexterm>g_data_input_stream_read_line_finish_utf8 <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_data_input_stream_read_line_utf8</primary></indexterm>g_data_input_stream_read_line_utf8 <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_data_input_stream_read_uint16</primary></indexterm>g_data_input_stream_read_uint16 <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_data_input_stream_read_uint32</primary></indexterm>g_data_input_stream_read_uint32 <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_data_input_stream_read_uint64</primary></indexterm>g_data_input_stream_read_uint64 <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_data_input_stream_read_until</primary></indexterm>g_data_input_stream_read_until <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_data_input_stream_read_until_async</primary></indexterm>g_data_input_stream_read_until_async <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_data_input_stream_read_until_finish</primary></indexterm>g_data_input_stream_read_until_finish <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_data_input_stream_read_upto</primary></indexterm>g_data_input_stream_read_upto <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_data_input_stream_read_upto_async</primary></indexterm>g_data_input_stream_read_upto_async <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_data_input_stream_read_upto_finish</primary></indexterm>g_data_input_stream_read_upto_finish <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_data_input_stream_set_byte_order</primary></indexterm>g_data_input_stream_set_byte_order <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_data_input_stream_set_newline_type</primary></indexterm>g_data_input_stream_set_newline_type <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_data_output_stream_get_byte_order</primary></indexterm>g_data_output_stream_get_byte_order <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_data_output_stream_get_type</primary></indexterm>g_data_output_stream_get_type <LINK LINKEND="REFSTD.libgio.2.0.2">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_data_output_stream_new</primary></indexterm>g_data_output_stream_new <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_data_output_stream_put_byte</primary></indexterm>g_data_output_stream_put_byte <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_data_output_stream_put_int16</primary></indexterm>g_data_output_stream_put_int16 <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_data_output_stream_put_int32</primary></indexterm>g_data_output_stream_put_int32 <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_data_output_stream_put_int64</primary></indexterm>g_data_output_stream_put_int64 <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_data_output_stream_put_string</primary></indexterm>g_data_output_stream_put_string <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_data_output_stream_put_uint16</primary></indexterm>g_data_output_stream_put_uint16 <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_data_output_stream_put_uint32</primary></indexterm>g_data_output_stream_put_uint32 <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_data_output_stream_put_uint64</primary></indexterm>g_data_output_stream_put_uint64 <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_data_output_stream_set_byte_order</primary></indexterm>g_data_output_stream_set_byte_order <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_data_stream_byte_order_get_type</primary></indexterm>g_data_stream_byte_order_get_type <LINK LINKEND="REFSTD.libgio.2.0.2">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_data_stream_newline_type_get_type</primary></indexterm>g_data_stream_newline_type_get_type <LINK LINKEND="REFSTD.libgio.2.0.2">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_dbus_action_group_get</primary></indexterm>g_dbus_action_group_get <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_dbus_action_group_get_type</primary></indexterm>g_dbus_action_group_get_type <LINK LINKEND="REFSTD.libgio.2.0.2">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_dbus_address_get_for_bus_sync</primary></indexterm>g_dbus_address_get_for_bus_sync <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_dbus_address_get_stream</primary></indexterm>g_dbus_address_get_stream <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_dbus_address_get_stream_finish</primary></indexterm>g_dbus_address_get_stream_finish <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_dbus_address_get_stream_sync</primary></indexterm>g_dbus_address_get_stream_sync <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_dbus_annotation_info_get_type</primary></indexterm>g_dbus_annotation_info_get_type <LINK LINKEND="REFSTD.libgio.2.0.2">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_dbus_annotation_info_lookup</primary></indexterm>g_dbus_annotation_info_lookup <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_dbus_annotation_info_ref</primary></indexterm>g_dbus_annotation_info_ref <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_dbus_annotation_info_unref</primary></indexterm>g_dbus_annotation_info_unref <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_dbus_arg_info_get_type</primary></indexterm>g_dbus_arg_info_get_type <LINK LINKEND="REFSTD.libgio.2.0.2">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_dbus_arg_info_ref</primary></indexterm>g_dbus_arg_info_ref <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_dbus_arg_info_unref</primary></indexterm>g_dbus_arg_info_unref <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_dbus_auth_observer_authorize_authenticated_peer</primary></indexterm>g_dbus_auth_observer_authorize_authenticated_peer <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_dbus_auth_observer_get_type</primary></indexterm>g_dbus_auth_observer_get_type <LINK LINKEND="REFSTD.libgio.2.0.2">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_dbus_auth_observer_new</primary></indexterm>g_dbus_auth_observer_new <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_dbus_call_flags_get_type</primary></indexterm>g_dbus_call_flags_get_type <LINK LINKEND="REFSTD.libgio.2.0.2">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_dbus_capability_flags_get_type</primary></indexterm>g_dbus_capability_flags_get_type <LINK LINKEND="REFSTD.libgio.2.0.2">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_dbus_connection_add_filter</primary></indexterm>g_dbus_connection_add_filter <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_dbus_connection_call</primary></indexterm>g_dbus_connection_call <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_dbus_connection_call_finish</primary></indexterm>g_dbus_connection_call_finish <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_dbus_connection_call_sync</primary></indexterm>g_dbus_connection_call_sync <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_dbus_connection_call_with_unix_fd_list</primary></indexterm>g_dbus_connection_call_with_unix_fd_list <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_dbus_connection_call_with_unix_fd_list_finish</primary></indexterm>g_dbus_connection_call_with_unix_fd_list_finish <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_dbus_connection_call_with_unix_fd_list_sync</primary></indexterm>g_dbus_connection_call_with_unix_fd_list_sync <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_dbus_connection_close</primary></indexterm>g_dbus_connection_close <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_dbus_connection_close_finish</primary></indexterm>g_dbus_connection_close_finish <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_dbus_connection_close_sync</primary></indexterm>g_dbus_connection_close_sync <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_dbus_connection_emit_signal</primary></indexterm>g_dbus_connection_emit_signal <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_dbus_connection_export_action_group</primary></indexterm>g_dbus_connection_export_action_group <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_dbus_connection_export_menu_model</primary></indexterm>g_dbus_connection_export_menu_model <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_dbus_connection_flags_get_type</primary></indexterm>g_dbus_connection_flags_get_type <LINK LINKEND="REFSTD.libgio.2.0.2">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_dbus_connection_flush</primary></indexterm>g_dbus_connection_flush <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_dbus_connection_flush_finish</primary></indexterm>g_dbus_connection_flush_finish <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_dbus_connection_flush_sync</primary></indexterm>g_dbus_connection_flush_sync <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_dbus_connection_get_capabilities</primary></indexterm>g_dbus_connection_get_capabilities <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_dbus_connection_get_exit_on_close</primary></indexterm>g_dbus_connection_get_exit_on_close <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_dbus_connection_get_guid</primary></indexterm>g_dbus_connection_get_guid <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_dbus_connection_get_peer_credentials</primary></indexterm>g_dbus_connection_get_peer_credentials <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_dbus_connection_get_stream</primary></indexterm>g_dbus_connection_get_stream <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_dbus_connection_get_type</primary></indexterm>g_dbus_connection_get_type <LINK LINKEND="REFSTD.libgio.2.0.2">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_dbus_connection_get_unique_name</primary></indexterm>g_dbus_connection_get_unique_name <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_dbus_connection_is_closed</primary></indexterm>g_dbus_connection_is_closed <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_dbus_connection_new</primary></indexterm>g_dbus_connection_new <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_dbus_connection_new_finish</primary></indexterm>g_dbus_connection_new_finish <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_dbus_connection_new_for_address</primary></indexterm>g_dbus_connection_new_for_address <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_dbus_connection_new_for_address_finish</primary></indexterm>g_dbus_connection_new_for_address_finish <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_dbus_connection_new_for_address_sync</primary></indexterm>g_dbus_connection_new_for_address_sync <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_dbus_connection_new_sync</primary></indexterm>g_dbus_connection_new_sync <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_dbus_connection_register_object</primary></indexterm>g_dbus_connection_register_object <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_dbus_connection_register_subtree</primary></indexterm>g_dbus_connection_register_subtree <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_dbus_connection_remove_filter</primary></indexterm>g_dbus_connection_remove_filter <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_dbus_connection_send_message</primary></indexterm>g_dbus_connection_send_message <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_dbus_connection_send_message_with_reply</primary></indexterm>g_dbus_connection_send_message_with_reply <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_dbus_connection_send_message_with_reply_finish</primary></indexterm>g_dbus_connection_send_message_with_reply_finish <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_dbus_connection_send_message_with_reply_sync</primary></indexterm>g_dbus_connection_send_message_with_reply_sync <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_dbus_connection_set_exit_on_close</primary></indexterm>g_dbus_connection_set_exit_on_close <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_dbus_connection_signal_subscribe</primary></indexterm>g_dbus_connection_signal_subscribe <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_dbus_connection_signal_unsubscribe</primary></indexterm>g_dbus_connection_signal_unsubscribe <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_dbus_connection_start_message_processing</primary></indexterm>g_dbus_connection_start_message_processing <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_dbus_connection_unexport_action_group</primary></indexterm>g_dbus_connection_unexport_action_group <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_dbus_connection_unexport_menu_model</primary></indexterm>g_dbus_connection_unexport_menu_model <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_dbus_connection_unregister_object</primary></indexterm>g_dbus_connection_unregister_object <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_dbus_connection_unregister_subtree</primary></indexterm>g_dbus_connection_unregister_subtree <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_dbus_error_encode_gerror</primary></indexterm>g_dbus_error_encode_gerror <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_dbus_error_get_remote_error</primary></indexterm>g_dbus_error_get_remote_error <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_dbus_error_get_type</primary></indexterm>g_dbus_error_get_type <LINK LINKEND="REFSTD.libgio.2.0.2">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_dbus_error_is_remote_error</primary></indexterm>g_dbus_error_is_remote_error <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_dbus_error_new_for_dbus_error</primary></indexterm>g_dbus_error_new_for_dbus_error <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_dbus_error_quark</primary></indexterm>g_dbus_error_quark <LINK LINKEND="REFSTD.libgio.2.0.3">[LSB]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_dbus_error_register_error</primary></indexterm>g_dbus_error_register_error <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_dbus_error_register_error_domain</primary></indexterm>g_dbus_error_register_error_domain <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_dbus_error_set_dbus_error</primary></indexterm>g_dbus_error_set_dbus_error <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_dbus_error_set_dbus_error_valist</primary></indexterm>g_dbus_error_set_dbus_error_valist <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_dbus_error_strip_remote_error</primary></indexterm>g_dbus_error_strip_remote_error <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_dbus_error_unregister_error</primary></indexterm>g_dbus_error_unregister_error <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_dbus_generate_guid</primary></indexterm>g_dbus_generate_guid <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_dbus_gvalue_to_gvariant</primary></indexterm>g_dbus_gvalue_to_gvariant <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_dbus_gvariant_to_gvalue</primary></indexterm>g_dbus_gvariant_to_gvalue <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_dbus_interface_dup_object</primary></indexterm>g_dbus_interface_dup_object <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_dbus_interface_get_info</primary></indexterm>g_dbus_interface_get_info <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_dbus_interface_get_object</primary></indexterm>g_dbus_interface_get_object <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_dbus_interface_get_type</primary></indexterm>g_dbus_interface_get_type <LINK LINKEND="REFSTD.libgio.2.0.2">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_dbus_interface_info_cache_build</primary></indexterm>g_dbus_interface_info_cache_build <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_dbus_interface_info_cache_release</primary></indexterm>g_dbus_interface_info_cache_release <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_dbus_interface_info_generate_xml</primary></indexterm>g_dbus_interface_info_generate_xml <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_dbus_interface_info_get_type</primary></indexterm>g_dbus_interface_info_get_type <LINK LINKEND="REFSTD.libgio.2.0.2">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_dbus_interface_info_lookup_method</primary></indexterm>g_dbus_interface_info_lookup_method <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_dbus_interface_info_lookup_property</primary></indexterm>g_dbus_interface_info_lookup_property <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_dbus_interface_info_lookup_signal</primary></indexterm>g_dbus_interface_info_lookup_signal <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_dbus_interface_info_ref</primary></indexterm>g_dbus_interface_info_ref <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_dbus_interface_info_unref</primary></indexterm>g_dbus_interface_info_unref <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_dbus_interface_set_object</primary></indexterm>g_dbus_interface_set_object <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_dbus_interface_skeleton_export</primary></indexterm>g_dbus_interface_skeleton_export <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_dbus_interface_skeleton_flags_get_type</primary></indexterm>g_dbus_interface_skeleton_flags_get_type <LINK LINKEND="REFSTD.libgio.2.0.2">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_dbus_interface_skeleton_flush</primary></indexterm>g_dbus_interface_skeleton_flush <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_dbus_interface_skeleton_get_connection</primary></indexterm>g_dbus_interface_skeleton_get_connection <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_dbus_interface_skeleton_get_connections</primary></indexterm>g_dbus_interface_skeleton_get_connections <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_dbus_interface_skeleton_get_flags</primary></indexterm>g_dbus_interface_skeleton_get_flags <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_dbus_interface_skeleton_get_info</primary></indexterm>g_dbus_interface_skeleton_get_info <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_dbus_interface_skeleton_get_object_path</primary></indexterm>g_dbus_interface_skeleton_get_object_path <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_dbus_interface_skeleton_get_properties</primary></indexterm>g_dbus_interface_skeleton_get_properties <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_dbus_interface_skeleton_get_type</primary></indexterm>g_dbus_interface_skeleton_get_type <LINK LINKEND="REFSTD.libgio.2.0.2">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_dbus_interface_skeleton_get_vtable</primary></indexterm>g_dbus_interface_skeleton_get_vtable <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_dbus_interface_skeleton_has_connection</primary></indexterm>g_dbus_interface_skeleton_has_connection <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_dbus_interface_skeleton_set_flags</primary></indexterm>g_dbus_interface_skeleton_set_flags <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_dbus_interface_skeleton_unexport</primary></indexterm>g_dbus_interface_skeleton_unexport <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_dbus_interface_skeleton_unexport_from_connection</primary></indexterm>g_dbus_interface_skeleton_unexport_from_connection <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_dbus_is_address</primary></indexterm>g_dbus_is_address <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_dbus_is_guid</primary></indexterm>g_dbus_is_guid <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_dbus_is_interface_name</primary></indexterm>g_dbus_is_interface_name <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_dbus_is_member_name</primary></indexterm>g_dbus_is_member_name <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_dbus_is_name</primary></indexterm>g_dbus_is_name <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_dbus_is_supported_address</primary></indexterm>g_dbus_is_supported_address <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_dbus_is_unique_name</primary></indexterm>g_dbus_is_unique_name <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_dbus_menu_model_get</primary></indexterm>g_dbus_menu_model_get <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_dbus_menu_model_get_type</primary></indexterm>g_dbus_menu_model_get_type <LINK LINKEND="REFSTD.libgio.2.0.2">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_dbus_message_byte_order_get_type</primary></indexterm>g_dbus_message_byte_order_get_type <LINK LINKEND="REFSTD.libgio.2.0.2">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_dbus_message_bytes_needed</primary></indexterm>g_dbus_message_bytes_needed <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_dbus_message_copy</primary></indexterm>g_dbus_message_copy <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_dbus_message_flags_get_type</primary></indexterm>g_dbus_message_flags_get_type <LINK LINKEND="REFSTD.libgio.2.0.2">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_dbus_message_get_arg0</primary></indexterm>g_dbus_message_get_arg0 <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_dbus_message_get_body</primary></indexterm>g_dbus_message_get_body <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_dbus_message_get_byte_order</primary></indexterm>g_dbus_message_get_byte_order <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_dbus_message_get_destination</primary></indexterm>g_dbus_message_get_destination <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_dbus_message_get_error_name</primary></indexterm>g_dbus_message_get_error_name <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_dbus_message_get_flags</primary></indexterm>g_dbus_message_get_flags <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_dbus_message_get_header</primary></indexterm>g_dbus_message_get_header <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_dbus_message_get_header_fields</primary></indexterm>g_dbus_message_get_header_fields <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_dbus_message_get_interface</primary></indexterm>g_dbus_message_get_interface <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_dbus_message_get_locked</primary></indexterm>g_dbus_message_get_locked <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_dbus_message_get_member</primary></indexterm>g_dbus_message_get_member <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_dbus_message_get_message_type</primary></indexterm>g_dbus_message_get_message_type <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_dbus_message_get_num_unix_fds</primary></indexterm>g_dbus_message_get_num_unix_fds <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_dbus_message_get_path</primary></indexterm>g_dbus_message_get_path <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_dbus_message_get_reply_serial</primary></indexterm>g_dbus_message_get_reply_serial <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_dbus_message_get_sender</primary></indexterm>g_dbus_message_get_sender <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_dbus_message_get_serial</primary></indexterm>g_dbus_message_get_serial <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_dbus_message_get_signature</primary></indexterm>g_dbus_message_get_signature <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_dbus_message_get_type</primary></indexterm>g_dbus_message_get_type <LINK LINKEND="REFSTD.libgio.2.0.2">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_dbus_message_get_unix_fd_list</primary></indexterm>g_dbus_message_get_unix_fd_list <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_dbus_message_header_field_get_type</primary></indexterm>g_dbus_message_header_field_get_type <LINK LINKEND="REFSTD.libgio.2.0.2">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_dbus_message_lock</primary></indexterm>g_dbus_message_lock <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_dbus_message_new</primary></indexterm>g_dbus_message_new <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_dbus_message_new_from_blob</primary></indexterm>g_dbus_message_new_from_blob <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_dbus_message_new_method_call</primary></indexterm>g_dbus_message_new_method_call <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_dbus_message_new_method_error</primary></indexterm>g_dbus_message_new_method_error <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_dbus_message_new_method_error_literal</primary></indexterm>g_dbus_message_new_method_error_literal <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_dbus_message_new_method_error_valist</primary></indexterm>g_dbus_message_new_method_error_valist <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_dbus_message_new_method_reply</primary></indexterm>g_dbus_message_new_method_reply <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_dbus_message_new_signal</primary></indexterm>g_dbus_message_new_signal <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_dbus_message_print</primary></indexterm>g_dbus_message_print <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_dbus_message_set_body</primary></indexterm>g_dbus_message_set_body <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_dbus_message_set_byte_order</primary></indexterm>g_dbus_message_set_byte_order <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_dbus_message_set_destination</primary></indexterm>g_dbus_message_set_destination <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_dbus_message_set_error_name</primary></indexterm>g_dbus_message_set_error_name <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_dbus_message_set_flags</primary></indexterm>g_dbus_message_set_flags <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_dbus_message_set_header</primary></indexterm>g_dbus_message_set_header <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_dbus_message_set_interface</primary></indexterm>g_dbus_message_set_interface <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_dbus_message_set_member</primary></indexterm>g_dbus_message_set_member <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_dbus_message_set_message_type</primary></indexterm>g_dbus_message_set_message_type <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_dbus_message_set_num_unix_fds</primary></indexterm>g_dbus_message_set_num_unix_fds <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_dbus_message_set_path</primary></indexterm>g_dbus_message_set_path <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_dbus_message_set_reply_serial</primary></indexterm>g_dbus_message_set_reply_serial <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_dbus_message_set_sender</primary></indexterm>g_dbus_message_set_sender <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_dbus_message_set_serial</primary></indexterm>g_dbus_message_set_serial <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_dbus_message_set_signature</primary></indexterm>g_dbus_message_set_signature <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_dbus_message_set_unix_fd_list</primary></indexterm>g_dbus_message_set_unix_fd_list <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_dbus_message_to_blob</primary></indexterm>g_dbus_message_to_blob <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_dbus_message_to_gerror</primary></indexterm>g_dbus_message_to_gerror <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_dbus_message_type_get_type</primary></indexterm>g_dbus_message_type_get_type <LINK LINKEND="REFSTD.libgio.2.0.2">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_dbus_method_info_get_type</primary></indexterm>g_dbus_method_info_get_type <LINK LINKEND="REFSTD.libgio.2.0.2">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_dbus_method_info_ref</primary></indexterm>g_dbus_method_info_ref <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_dbus_method_info_unref</primary></indexterm>g_dbus_method_info_unref <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_dbus_method_invocation_get_connection</primary></indexterm>g_dbus_method_invocation_get_connection <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_dbus_method_invocation_get_interface_name</primary></indexterm>g_dbus_method_invocation_get_interface_name <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_dbus_method_invocation_get_message</primary></indexterm>g_dbus_method_invocation_get_message <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_dbus_method_invocation_get_method_info</primary></indexterm>g_dbus_method_invocation_get_method_info <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_dbus_method_invocation_get_method_name</primary></indexterm>g_dbus_method_invocation_get_method_name <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_dbus_method_invocation_get_object_path</primary></indexterm>g_dbus_method_invocation_get_object_path <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_dbus_method_invocation_get_parameters</primary></indexterm>g_dbus_method_invocation_get_parameters <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_dbus_method_invocation_get_sender</primary></indexterm>g_dbus_method_invocation_get_sender <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_dbus_method_invocation_get_type</primary></indexterm>g_dbus_method_invocation_get_type <LINK LINKEND="REFSTD.libgio.2.0.2">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_dbus_method_invocation_get_user_data</primary></indexterm>g_dbus_method_invocation_get_user_data <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_dbus_method_invocation_return_dbus_error</primary></indexterm>g_dbus_method_invocation_return_dbus_error <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_dbus_method_invocation_return_error</primary></indexterm>g_dbus_method_invocation_return_error <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_dbus_method_invocation_return_error_literal</primary></indexterm>g_dbus_method_invocation_return_error_literal <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_dbus_method_invocation_return_error_valist</primary></indexterm>g_dbus_method_invocation_return_error_valist <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_dbus_method_invocation_return_gerror</primary></indexterm>g_dbus_method_invocation_return_gerror <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_dbus_method_invocation_return_value</primary></indexterm>g_dbus_method_invocation_return_value <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_dbus_method_invocation_return_value_with_unix_fd_list</primary></indexterm>g_dbus_method_invocation_return_value_with_unix_fd_list <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_dbus_method_invocation_take_error</primary></indexterm>g_dbus_method_invocation_take_error <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_dbus_node_info_generate_xml</primary></indexterm>g_dbus_node_info_generate_xml <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_dbus_node_info_get_type</primary></indexterm>g_dbus_node_info_get_type <LINK LINKEND="REFSTD.libgio.2.0.2">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_dbus_node_info_lookup_interface</primary></indexterm>g_dbus_node_info_lookup_interface <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_dbus_node_info_new_for_xml</primary></indexterm>g_dbus_node_info_new_for_xml <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_dbus_node_info_ref</primary></indexterm>g_dbus_node_info_ref <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_dbus_node_info_unref</primary></indexterm>g_dbus_node_info_unref <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_dbus_object_get_interface</primary></indexterm>g_dbus_object_get_interface <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_dbus_object_get_interfaces</primary></indexterm>g_dbus_object_get_interfaces <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_dbus_object_get_object_path</primary></indexterm>g_dbus_object_get_object_path <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_dbus_object_get_type</primary></indexterm>g_dbus_object_get_type <LINK LINKEND="REFSTD.libgio.2.0.2">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_dbus_object_manager_client_flags_get_type</primary></indexterm>g_dbus_object_manager_client_flags_get_type <LINK LINKEND="REFSTD.libgio.2.0.2">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_dbus_object_manager_client_get_connection</primary></indexterm>g_dbus_object_manager_client_get_connection <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_dbus_object_manager_client_get_flags</primary></indexterm>g_dbus_object_manager_client_get_flags <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_dbus_object_manager_client_get_name</primary></indexterm>g_dbus_object_manager_client_get_name <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_dbus_object_manager_client_get_name_owner</primary></indexterm>g_dbus_object_manager_client_get_name_owner <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_dbus_object_manager_client_get_type</primary></indexterm>g_dbus_object_manager_client_get_type <LINK LINKEND="REFSTD.libgio.2.0.2">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_dbus_object_manager_client_new</primary></indexterm>g_dbus_object_manager_client_new <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_dbus_object_manager_client_new_finish</primary></indexterm>g_dbus_object_manager_client_new_finish <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_dbus_object_manager_client_new_for_bus</primary></indexterm>g_dbus_object_manager_client_new_for_bus <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_dbus_object_manager_client_new_for_bus_finish</primary></indexterm>g_dbus_object_manager_client_new_for_bus_finish <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_dbus_object_manager_client_new_for_bus_sync</primary></indexterm>g_dbus_object_manager_client_new_for_bus_sync <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_dbus_object_manager_client_new_sync</primary></indexterm>g_dbus_object_manager_client_new_sync <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_dbus_object_manager_get_interface</primary></indexterm>g_dbus_object_manager_get_interface <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_dbus_object_manager_get_object</primary></indexterm>g_dbus_object_manager_get_object <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_dbus_object_manager_get_object_path</primary></indexterm>g_dbus_object_manager_get_object_path <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_dbus_object_manager_get_objects</primary></indexterm>g_dbus_object_manager_get_objects <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_dbus_object_manager_get_type</primary></indexterm>g_dbus_object_manager_get_type <LINK LINKEND="REFSTD.libgio.2.0.2">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_dbus_object_manager_server_export</primary></indexterm>g_dbus_object_manager_server_export <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_dbus_object_manager_server_export_uniquely</primary></indexterm>g_dbus_object_manager_server_export_uniquely <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_dbus_object_manager_server_get_connection</primary></indexterm>g_dbus_object_manager_server_get_connection <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_dbus_object_manager_server_get_type</primary></indexterm>g_dbus_object_manager_server_get_type <LINK LINKEND="REFSTD.libgio.2.0.2">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_dbus_object_manager_server_new</primary></indexterm>g_dbus_object_manager_server_new <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_dbus_object_manager_server_set_connection</primary></indexterm>g_dbus_object_manager_server_set_connection <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_dbus_object_manager_server_unexport</primary></indexterm>g_dbus_object_manager_server_unexport <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_dbus_object_proxy_get_connection</primary></indexterm>g_dbus_object_proxy_get_connection <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_dbus_object_proxy_get_type</primary></indexterm>g_dbus_object_proxy_get_type <LINK LINKEND="REFSTD.libgio.2.0.2">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_dbus_object_proxy_new</primary></indexterm>g_dbus_object_proxy_new <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_dbus_object_skeleton_add_interface</primary></indexterm>g_dbus_object_skeleton_add_interface <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_dbus_object_skeleton_flush</primary></indexterm>g_dbus_object_skeleton_flush <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_dbus_object_skeleton_get_type</primary></indexterm>g_dbus_object_skeleton_get_type <LINK LINKEND="REFSTD.libgio.2.0.2">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_dbus_object_skeleton_new</primary></indexterm>g_dbus_object_skeleton_new <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_dbus_object_skeleton_remove_interface</primary></indexterm>g_dbus_object_skeleton_remove_interface <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_dbus_object_skeleton_remove_interface_by_name</primary></indexterm>g_dbus_object_skeleton_remove_interface_by_name <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_dbus_object_skeleton_set_object_path</primary></indexterm>g_dbus_object_skeleton_set_object_path <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_dbus_property_info_flags_get_type</primary></indexterm>g_dbus_property_info_flags_get_type <LINK LINKEND="REFSTD.libgio.2.0.2">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_dbus_property_info_get_type</primary></indexterm>g_dbus_property_info_get_type <LINK LINKEND="REFSTD.libgio.2.0.2">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_dbus_property_info_ref</primary></indexterm>g_dbus_property_info_ref <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_dbus_property_info_unref</primary></indexterm>g_dbus_property_info_unref <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_dbus_proxy_call</primary></indexterm>g_dbus_proxy_call <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_dbus_proxy_call_finish</primary></indexterm>g_dbus_proxy_call_finish <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_dbus_proxy_call_sync</primary></indexterm>g_dbus_proxy_call_sync <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_dbus_proxy_call_with_unix_fd_list</primary></indexterm>g_dbus_proxy_call_with_unix_fd_list <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_dbus_proxy_call_with_unix_fd_list_finish</primary></indexterm>g_dbus_proxy_call_with_unix_fd_list_finish <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_dbus_proxy_call_with_unix_fd_list_sync</primary></indexterm>g_dbus_proxy_call_with_unix_fd_list_sync <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_dbus_proxy_flags_get_type</primary></indexterm>g_dbus_proxy_flags_get_type <LINK LINKEND="REFSTD.libgio.2.0.2">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_dbus_proxy_get_cached_property</primary></indexterm>g_dbus_proxy_get_cached_property <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_dbus_proxy_get_cached_property_names</primary></indexterm>g_dbus_proxy_get_cached_property_names <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_dbus_proxy_get_connection</primary></indexterm>g_dbus_proxy_get_connection <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_dbus_proxy_get_default_timeout</primary></indexterm>g_dbus_proxy_get_default_timeout <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_dbus_proxy_get_flags</primary></indexterm>g_dbus_proxy_get_flags <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_dbus_proxy_get_interface_info</primary></indexterm>g_dbus_proxy_get_interface_info <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_dbus_proxy_get_interface_name</primary></indexterm>g_dbus_proxy_get_interface_name <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_dbus_proxy_get_name</primary></indexterm>g_dbus_proxy_get_name <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_dbus_proxy_get_name_owner</primary></indexterm>g_dbus_proxy_get_name_owner <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_dbus_proxy_get_object_path</primary></indexterm>g_dbus_proxy_get_object_path <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_dbus_proxy_get_type</primary></indexterm>g_dbus_proxy_get_type <LINK LINKEND="REFSTD.libgio.2.0.2">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_dbus_proxy_new</primary></indexterm>g_dbus_proxy_new <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_dbus_proxy_new_finish</primary></indexterm>g_dbus_proxy_new_finish <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_dbus_proxy_new_for_bus</primary></indexterm>g_dbus_proxy_new_for_bus <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_dbus_proxy_new_for_bus_finish</primary></indexterm>g_dbus_proxy_new_for_bus_finish <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_dbus_proxy_new_for_bus_sync</primary></indexterm>g_dbus_proxy_new_for_bus_sync <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_dbus_proxy_new_sync</primary></indexterm>g_dbus_proxy_new_sync <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_dbus_proxy_set_cached_property</primary></indexterm>g_dbus_proxy_set_cached_property <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_dbus_proxy_set_default_timeout</primary></indexterm>g_dbus_proxy_set_default_timeout <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_dbus_proxy_set_interface_info</primary></indexterm>g_dbus_proxy_set_interface_info <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_dbus_send_message_flags_get_type</primary></indexterm>g_dbus_send_message_flags_get_type <LINK LINKEND="REFSTD.libgio.2.0.2">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_dbus_server_flags_get_type</primary></indexterm>g_dbus_server_flags_get_type <LINK LINKEND="REFSTD.libgio.2.0.2">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_dbus_server_get_client_address</primary></indexterm>g_dbus_server_get_client_address <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_dbus_server_get_flags</primary></indexterm>g_dbus_server_get_flags <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_dbus_server_get_guid</primary></indexterm>g_dbus_server_get_guid <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_dbus_server_get_type</primary></indexterm>g_dbus_server_get_type <LINK LINKEND="REFSTD.libgio.2.0.2">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_dbus_server_is_active</primary></indexterm>g_dbus_server_is_active <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_dbus_server_new_sync</primary></indexterm>g_dbus_server_new_sync <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_dbus_server_start</primary></indexterm>g_dbus_server_start <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_dbus_server_stop</primary></indexterm>g_dbus_server_stop <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_dbus_signal_flags_get_type</primary></indexterm>g_dbus_signal_flags_get_type <LINK LINKEND="REFSTD.libgio.2.0.2">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_dbus_signal_info_get_type</primary></indexterm>g_dbus_signal_info_get_type <LINK LINKEND="REFSTD.libgio.2.0.2">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_dbus_signal_info_ref</primary></indexterm>g_dbus_signal_info_ref <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_dbus_signal_info_unref</primary></indexterm>g_dbus_signal_info_unref <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_dbus_subtree_flags_get_type</primary></indexterm>g_dbus_subtree_flags_get_type <LINK LINKEND="REFSTD.libgio.2.0.2">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_desktop_app_info_get_categories</primary></indexterm>g_desktop_app_info_get_categories <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_desktop_app_info_get_filename</primary></indexterm>g_desktop_app_info_get_filename <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_desktop_app_info_get_generic_name</primary></indexterm>g_desktop_app_info_get_generic_name <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_desktop_app_info_get_is_hidden</primary></indexterm>g_desktop_app_info_get_is_hidden <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_desktop_app_info_get_keywords</primary></indexterm>g_desktop_app_info_get_keywords <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_desktop_app_info_get_nodisplay</primary></indexterm>g_desktop_app_info_get_nodisplay <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_desktop_app_info_get_show_in</primary></indexterm>g_desktop_app_info_get_show_in <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_desktop_app_info_get_type</primary></indexterm>g_desktop_app_info_get_type <LINK LINKEND="REFSTD.libgio.2.0.2">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_desktop_app_info_launch_uris_as_manager</primary></indexterm>g_desktop_app_info_launch_uris_as_manager <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_desktop_app_info_lookup_get_default_for_uri_scheme</primary></indexterm>g_desktop_app_info_lookup_get_default_for_uri_scheme <LINK LINKEND="REFSTD.libgio.2.0.3">[LSB]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_desktop_app_info_lookup_get_type</primary></indexterm>g_desktop_app_info_lookup_get_type <LINK LINKEND="REFSTD.libgio.2.0.2">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_desktop_app_info_new</primary></indexterm>g_desktop_app_info_new <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_desktop_app_info_new_from_filename</primary></indexterm>g_desktop_app_info_new_from_filename <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_desktop_app_info_new_from_keyfile</primary></indexterm>g_desktop_app_info_new_from_keyfile <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_desktop_app_info_set_desktop_env</primary></indexterm>g_desktop_app_info_set_desktop_env <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_drive_can_eject</primary></indexterm>g_drive_can_eject <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_drive_can_poll_for_media</primary></indexterm>g_drive_can_poll_for_media <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_drive_can_start</primary></indexterm>g_drive_can_start <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_drive_can_start_degraded</primary></indexterm>g_drive_can_start_degraded <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_drive_can_stop</primary></indexterm>g_drive_can_stop <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_drive_eject</primary></indexterm>g_drive_eject <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_drive_eject_finish</primary></indexterm>g_drive_eject_finish <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_drive_eject_with_operation</primary></indexterm>g_drive_eject_with_operation <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_drive_eject_with_operation_finish</primary></indexterm>g_drive_eject_with_operation_finish <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_drive_enumerate_identifiers</primary></indexterm>g_drive_enumerate_identifiers <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_drive_get_icon</primary></indexterm>g_drive_get_icon <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_drive_get_identifier</primary></indexterm>g_drive_get_identifier <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_drive_get_name</primary></indexterm>g_drive_get_name <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_drive_get_sort_key</primary></indexterm>g_drive_get_sort_key <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_drive_get_start_stop_type</primary></indexterm>g_drive_get_start_stop_type <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_drive_get_type</primary></indexterm>g_drive_get_type <LINK LINKEND="REFSTD.libgio.2.0.2">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_drive_get_volumes</primary></indexterm>g_drive_get_volumes <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_drive_has_media</primary></indexterm>g_drive_has_media <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_drive_has_volumes</primary></indexterm>g_drive_has_volumes <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_drive_is_media_check_automatic</primary></indexterm>g_drive_is_media_check_automatic <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_drive_is_media_removable</primary></indexterm>g_drive_is_media_removable <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_drive_poll_for_media</primary></indexterm>g_drive_poll_for_media <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_drive_poll_for_media_finish</primary></indexterm>g_drive_poll_for_media_finish <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_drive_start</primary></indexterm>g_drive_start <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_drive_start_finish</primary></indexterm>g_drive_start_finish <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_drive_start_flags_get_type</primary></indexterm>g_drive_start_flags_get_type <LINK LINKEND="REFSTD.libgio.2.0.2">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_drive_start_stop_type_get_type</primary></indexterm>g_drive_start_stop_type_get_type <LINK LINKEND="REFSTD.libgio.2.0.2">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_drive_stop</primary></indexterm>g_drive_stop <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_drive_stop_finish</primary></indexterm>g_drive_stop_finish <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_emblem_get_icon</primary></indexterm>g_emblem_get_icon <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_emblem_get_origin</primary></indexterm>g_emblem_get_origin <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_emblem_get_type</primary></indexterm>g_emblem_get_type <LINK LINKEND="REFSTD.libgio.2.0.2">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_emblem_new</primary></indexterm>g_emblem_new <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_emblem_new_with_origin</primary></indexterm>g_emblem_new_with_origin <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_emblem_origin_get_type</primary></indexterm>g_emblem_origin_get_type <LINK LINKEND="REFSTD.libgio.2.0.2">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_emblemed_icon_add_emblem</primary></indexterm>g_emblemed_icon_add_emblem <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_emblemed_icon_clear_emblems</primary></indexterm>g_emblemed_icon_clear_emblems <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_emblemed_icon_get_emblems</primary></indexterm>g_emblemed_icon_get_emblems <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_emblemed_icon_get_icon</primary></indexterm>g_emblemed_icon_get_icon <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_emblemed_icon_get_type</primary></indexterm>g_emblemed_icon_get_type <LINK LINKEND="REFSTD.libgio.2.0.2">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_emblemed_icon_new</primary></indexterm>g_emblemed_icon_new <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_file_append_to</primary></indexterm>g_file_append_to <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_file_append_to_async</primary></indexterm>g_file_append_to_async <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_file_append_to_finish</primary></indexterm>g_file_append_to_finish <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_file_attribute_info_flags_get_type</primary></indexterm>g_file_attribute_info_flags_get_type <LINK LINKEND="REFSTD.libgio.2.0.2">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_file_attribute_info_list_add</primary></indexterm>g_file_attribute_info_list_add <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_file_attribute_info_list_dup</primary></indexterm>g_file_attribute_info_list_dup <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_file_attribute_info_list_get_type</primary></indexterm>g_file_attribute_info_list_get_type <LINK LINKEND="REFSTD.libgio.2.0.2">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_file_attribute_info_list_lookup</primary></indexterm>g_file_attribute_info_list_lookup <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_file_attribute_info_list_new</primary></indexterm>g_file_attribute_info_list_new <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_file_attribute_info_list_ref</primary></indexterm>g_file_attribute_info_list_ref <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_file_attribute_info_list_unref</primary></indexterm>g_file_attribute_info_list_unref <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_file_attribute_matcher_enumerate_namespace</primary></indexterm>g_file_attribute_matcher_enumerate_namespace <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_file_attribute_matcher_enumerate_next</primary></indexterm>g_file_attribute_matcher_enumerate_next <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_file_attribute_matcher_get_type</primary></indexterm>g_file_attribute_matcher_get_type <LINK LINKEND="REFSTD.libgio.2.0.2">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_file_attribute_matcher_matches</primary></indexterm>g_file_attribute_matcher_matches <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_file_attribute_matcher_matches_only</primary></indexterm>g_file_attribute_matcher_matches_only <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_file_attribute_matcher_new</primary></indexterm>g_file_attribute_matcher_new <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_file_attribute_matcher_ref</primary></indexterm>g_file_attribute_matcher_ref <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_file_attribute_matcher_subtract</primary></indexterm>g_file_attribute_matcher_subtract <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_file_attribute_matcher_to_string</primary></indexterm>g_file_attribute_matcher_to_string <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_file_attribute_matcher_unref</primary></indexterm>g_file_attribute_matcher_unref <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_file_attribute_status_get_type</primary></indexterm>g_file_attribute_status_get_type <LINK LINKEND="REFSTD.libgio.2.0.2">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_file_attribute_type_get_type</primary></indexterm>g_file_attribute_type_get_type <LINK LINKEND="REFSTD.libgio.2.0.2">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_file_copy</primary></indexterm>g_file_copy <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_file_copy_async</primary></indexterm>g_file_copy_async <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_file_copy_attributes</primary></indexterm>g_file_copy_attributes <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_file_copy_finish</primary></indexterm>g_file_copy_finish <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_file_copy_flags_get_type</primary></indexterm>g_file_copy_flags_get_type <LINK LINKEND="REFSTD.libgio.2.0.2">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_file_create</primary></indexterm>g_file_create <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_file_create_async</primary></indexterm>g_file_create_async <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_file_create_finish</primary></indexterm>g_file_create_finish <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_file_create_flags_get_type</primary></indexterm>g_file_create_flags_get_type <LINK LINKEND="REFSTD.libgio.2.0.2">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_file_create_readwrite</primary></indexterm>g_file_create_readwrite <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_file_create_readwrite_async</primary></indexterm>g_file_create_readwrite_async <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_file_create_readwrite_finish</primary></indexterm>g_file_create_readwrite_finish <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_file_delete</primary></indexterm>g_file_delete <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_file_descriptor_based_get_fd</primary></indexterm>g_file_descriptor_based_get_fd <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_file_descriptor_based_get_type</primary></indexterm>g_file_descriptor_based_get_type <LINK LINKEND="REFSTD.libgio.2.0.2">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_file_dup</primary></indexterm>g_file_dup <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_file_eject_mountable</primary></indexterm>g_file_eject_mountable <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_file_eject_mountable_finish</primary></indexterm>g_file_eject_mountable_finish <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_file_eject_mountable_with_operation</primary></indexterm>g_file_eject_mountable_with_operation <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_file_eject_mountable_with_operation_finish</primary></indexterm>g_file_eject_mountable_with_operation_finish <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_file_enumerate_children</primary></indexterm>g_file_enumerate_children <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_file_enumerate_children_async</primary></indexterm>g_file_enumerate_children_async <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_file_enumerate_children_finish</primary></indexterm>g_file_enumerate_children_finish <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_file_enumerator_close</primary></indexterm>g_file_enumerator_close <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_file_enumerator_close_async</primary></indexterm>g_file_enumerator_close_async <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_file_enumerator_close_finish</primary></indexterm>g_file_enumerator_close_finish <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_file_enumerator_get_container</primary></indexterm>g_file_enumerator_get_container <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_file_enumerator_get_type</primary></indexterm>g_file_enumerator_get_type <LINK LINKEND="REFSTD.libgio.2.0.2">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_file_enumerator_has_pending</primary></indexterm>g_file_enumerator_has_pending <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_file_enumerator_is_closed</primary></indexterm>g_file_enumerator_is_closed <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_file_enumerator_next_file</primary></indexterm>g_file_enumerator_next_file <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_file_enumerator_next_files_async</primary></indexterm>g_file_enumerator_next_files_async <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_file_enumerator_next_files_finish</primary></indexterm>g_file_enumerator_next_files_finish <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_file_enumerator_set_pending</primary></indexterm>g_file_enumerator_set_pending <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_file_equal</primary></indexterm>g_file_equal <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_file_find_enclosing_mount</primary></indexterm>g_file_find_enclosing_mount <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_file_find_enclosing_mount_async</primary></indexterm>g_file_find_enclosing_mount_async <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_file_find_enclosing_mount_finish</primary></indexterm>g_file_find_enclosing_mount_finish <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_file_get_basename</primary></indexterm>g_file_get_basename <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_file_get_child</primary></indexterm>g_file_get_child <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_file_get_child_for_display_name</primary></indexterm>g_file_get_child_for_display_name <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_file_get_parent</primary></indexterm>g_file_get_parent <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_file_get_parse_name</primary></indexterm>g_file_get_parse_name <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_file_get_path</primary></indexterm>g_file_get_path <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_file_get_relative_path</primary></indexterm>g_file_get_relative_path <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_file_get_type</primary></indexterm>g_file_get_type <LINK LINKEND="REFSTD.libgio.2.0.2">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_file_get_uri</primary></indexterm>g_file_get_uri <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_file_get_uri_scheme</primary></indexterm>g_file_get_uri_scheme <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_file_has_parent</primary></indexterm>g_file_has_parent <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_file_has_prefix</primary></indexterm>g_file_has_prefix <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_file_has_uri_scheme</primary></indexterm>g_file_has_uri_scheme <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_file_hash</primary></indexterm>g_file_hash <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_file_icon_get_file</primary></indexterm>g_file_icon_get_file <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_file_icon_get_type</primary></indexterm>g_file_icon_get_type <LINK LINKEND="REFSTD.libgio.2.0.2">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_file_icon_new</primary></indexterm>g_file_icon_new <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_file_info_clear_status</primary></indexterm>g_file_info_clear_status <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_file_info_copy_into</primary></indexterm>g_file_info_copy_into <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_file_info_dup</primary></indexterm>g_file_info_dup <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_file_info_get_attribute_as_string</primary></indexterm>g_file_info_get_attribute_as_string <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_file_info_get_attribute_boolean</primary></indexterm>g_file_info_get_attribute_boolean <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_file_info_get_attribute_byte_string</primary></indexterm>g_file_info_get_attribute_byte_string <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_file_info_get_attribute_data</primary></indexterm>g_file_info_get_attribute_data <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_file_info_get_attribute_int32</primary></indexterm>g_file_info_get_attribute_int32 <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_file_info_get_attribute_int64</primary></indexterm>g_file_info_get_attribute_int64 <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_file_info_get_attribute_object</primary></indexterm>g_file_info_get_attribute_object <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_file_info_get_attribute_status</primary></indexterm>g_file_info_get_attribute_status <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_file_info_get_attribute_string</primary></indexterm>g_file_info_get_attribute_string <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_file_info_get_attribute_stringv</primary></indexterm>g_file_info_get_attribute_stringv <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_file_info_get_attribute_type</primary></indexterm>g_file_info_get_attribute_type <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_file_info_get_attribute_uint32</primary></indexterm>g_file_info_get_attribute_uint32 <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_file_info_get_attribute_uint64</primary></indexterm>g_file_info_get_attribute_uint64 <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_file_info_get_content_type</primary></indexterm>g_file_info_get_content_type <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_file_info_get_display_name</primary></indexterm>g_file_info_get_display_name <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_file_info_get_edit_name</primary></indexterm>g_file_info_get_edit_name <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_file_info_get_etag</primary></indexterm>g_file_info_get_etag <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_file_info_get_file_type</primary></indexterm>g_file_info_get_file_type <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_file_info_get_icon</primary></indexterm>g_file_info_get_icon <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_file_info_get_is_backup</primary></indexterm>g_file_info_get_is_backup <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_file_info_get_is_hidden</primary></indexterm>g_file_info_get_is_hidden <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_file_info_get_is_symlink</primary></indexterm>g_file_info_get_is_symlink <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_file_info_get_modification_time</primary></indexterm>g_file_info_get_modification_time <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_file_info_get_name</primary></indexterm>g_file_info_get_name <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_file_info_get_size</primary></indexterm>g_file_info_get_size <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_file_info_get_sort_order</primary></indexterm>g_file_info_get_sort_order <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_file_info_get_symlink_target</primary></indexterm>g_file_info_get_symlink_target <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_file_info_get_type</primary></indexterm>g_file_info_get_type <LINK LINKEND="REFSTD.libgio.2.0.2">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_file_info_has_attribute</primary></indexterm>g_file_info_has_attribute <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_file_info_has_namespace</primary></indexterm>g_file_info_has_namespace <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_file_info_list_attributes</primary></indexterm>g_file_info_list_attributes <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_file_info_new</primary></indexterm>g_file_info_new <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_file_info_remove_attribute</primary></indexterm>g_file_info_remove_attribute <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_file_info_set_attribute</primary></indexterm>g_file_info_set_attribute <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_file_info_set_attribute_boolean</primary></indexterm>g_file_info_set_attribute_boolean <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_file_info_set_attribute_byte_string</primary></indexterm>g_file_info_set_attribute_byte_string <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_file_info_set_attribute_int32</primary></indexterm>g_file_info_set_attribute_int32 <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_file_info_set_attribute_int64</primary></indexterm>g_file_info_set_attribute_int64 <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_file_info_set_attribute_mask</primary></indexterm>g_file_info_set_attribute_mask <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_file_info_set_attribute_object</primary></indexterm>g_file_info_set_attribute_object <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_file_info_set_attribute_status</primary></indexterm>g_file_info_set_attribute_status <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_file_info_set_attribute_string</primary></indexterm>g_file_info_set_attribute_string <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_file_info_set_attribute_stringv</primary></indexterm>g_file_info_set_attribute_stringv <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_file_info_set_attribute_uint32</primary></indexterm>g_file_info_set_attribute_uint32 <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_file_info_set_attribute_uint64</primary></indexterm>g_file_info_set_attribute_uint64 <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_file_info_set_content_type</primary></indexterm>g_file_info_set_content_type <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_file_info_set_display_name</primary></indexterm>g_file_info_set_display_name <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_file_info_set_edit_name</primary></indexterm>g_file_info_set_edit_name <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_file_info_set_file_type</primary></indexterm>g_file_info_set_file_type <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_file_info_set_icon</primary></indexterm>g_file_info_set_icon <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_file_info_set_is_hidden</primary></indexterm>g_file_info_set_is_hidden <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_file_info_set_is_symlink</primary></indexterm>g_file_info_set_is_symlink <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_file_info_set_modification_time</primary></indexterm>g_file_info_set_modification_time <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_file_info_set_name</primary></indexterm>g_file_info_set_name <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_file_info_set_size</primary></indexterm>g_file_info_set_size <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_file_info_set_sort_order</primary></indexterm>g_file_info_set_sort_order <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_file_info_set_symlink_target</primary></indexterm>g_file_info_set_symlink_target <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_file_info_unset_attribute_mask</primary></indexterm>g_file_info_unset_attribute_mask <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_file_input_stream_get_type</primary></indexterm>g_file_input_stream_get_type <LINK LINKEND="REFSTD.libgio.2.0.2">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_file_input_stream_query_info</primary></indexterm>g_file_input_stream_query_info <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_file_input_stream_query_info_async</primary></indexterm>g_file_input_stream_query_info_async <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_file_input_stream_query_info_finish</primary></indexterm>g_file_input_stream_query_info_finish <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_file_io_stream_get_etag</primary></indexterm>g_file_io_stream_get_etag <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_file_io_stream_get_type</primary></indexterm>g_file_io_stream_get_type <LINK LINKEND="REFSTD.libgio.2.0.2">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_file_io_stream_query_info</primary></indexterm>g_file_io_stream_query_info <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_file_io_stream_query_info_async</primary></indexterm>g_file_io_stream_query_info_async <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_file_io_stream_query_info_finish</primary></indexterm>g_file_io_stream_query_info_finish <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_file_is_native</primary></indexterm>g_file_is_native <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_file_load_contents</primary></indexterm>g_file_load_contents <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_file_load_contents_async</primary></indexterm>g_file_load_contents_async <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_file_load_contents_finish</primary></indexterm>g_file_load_contents_finish <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_file_load_partial_contents_async</primary></indexterm>g_file_load_partial_contents_async <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_file_load_partial_contents_finish</primary></indexterm>g_file_load_partial_contents_finish <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_file_make_directory</primary></indexterm>g_file_make_directory <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_file_make_directory_with_parents</primary></indexterm>g_file_make_directory_with_parents <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_file_make_symbolic_link</primary></indexterm>g_file_make_symbolic_link <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_file_monitor</primary></indexterm>g_file_monitor <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_file_monitor_cancel</primary></indexterm>g_file_monitor_cancel <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_file_monitor_directory</primary></indexterm>g_file_monitor_directory <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_file_monitor_emit_event</primary></indexterm>g_file_monitor_emit_event <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_file_monitor_event_get_type</primary></indexterm>g_file_monitor_event_get_type <LINK LINKEND="REFSTD.libgio.2.0.2">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_file_monitor_file</primary></indexterm>g_file_monitor_file <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_file_monitor_flags_get_type</primary></indexterm>g_file_monitor_flags_get_type <LINK LINKEND="REFSTD.libgio.2.0.2">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_file_monitor_get_type</primary></indexterm>g_file_monitor_get_type <LINK LINKEND="REFSTD.libgio.2.0.2">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_file_monitor_is_cancelled</primary></indexterm>g_file_monitor_is_cancelled <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_file_monitor_set_rate_limit</primary></indexterm>g_file_monitor_set_rate_limit <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_file_mount_enclosing_volume</primary></indexterm>g_file_mount_enclosing_volume <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_file_mount_enclosing_volume_finish</primary></indexterm>g_file_mount_enclosing_volume_finish <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_file_mount_mountable</primary></indexterm>g_file_mount_mountable <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_file_mount_mountable_finish</primary></indexterm>g_file_mount_mountable_finish <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_file_move</primary></indexterm>g_file_move <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_file_new_for_commandline_arg</primary></indexterm>g_file_new_for_commandline_arg <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_file_new_for_path</primary></indexterm>g_file_new_for_path <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_file_new_for_uri</primary></indexterm>g_file_new_for_uri <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_file_new_tmp</primary></indexterm>g_file_new_tmp <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_file_open_readwrite</primary></indexterm>g_file_open_readwrite <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_file_open_readwrite_async</primary></indexterm>g_file_open_readwrite_async <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_file_open_readwrite_finish</primary></indexterm>g_file_open_readwrite_finish <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_file_output_stream_get_etag</primary></indexterm>g_file_output_stream_get_etag <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_file_output_stream_get_type</primary></indexterm>g_file_output_stream_get_type <LINK LINKEND="REFSTD.libgio.2.0.2">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_file_output_stream_query_info</primary></indexterm>g_file_output_stream_query_info <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_file_output_stream_query_info_async</primary></indexterm>g_file_output_stream_query_info_async <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_file_output_stream_query_info_finish</primary></indexterm>g_file_output_stream_query_info_finish <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_file_parse_name</primary></indexterm>g_file_parse_name <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_file_poll_mountable</primary></indexterm>g_file_poll_mountable <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_file_poll_mountable_finish</primary></indexterm>g_file_poll_mountable_finish <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_file_query_default_handler</primary></indexterm>g_file_query_default_handler <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_file_query_exists</primary></indexterm>g_file_query_exists <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_file_query_file_type</primary></indexterm>g_file_query_file_type <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_file_query_filesystem_info</primary></indexterm>g_file_query_filesystem_info <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_file_query_filesystem_info_async</primary></indexterm>g_file_query_filesystem_info_async <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_file_query_filesystem_info_finish</primary></indexterm>g_file_query_filesystem_info_finish <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_file_query_info</primary></indexterm>g_file_query_info <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_file_query_info_async</primary></indexterm>g_file_query_info_async <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_file_query_info_finish</primary></indexterm>g_file_query_info_finish <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_file_query_info_flags_get_type</primary></indexterm>g_file_query_info_flags_get_type <LINK LINKEND="REFSTD.libgio.2.0.2">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_file_query_settable_attributes</primary></indexterm>g_file_query_settable_attributes <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_file_query_writable_namespaces</primary></indexterm>g_file_query_writable_namespaces <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_file_read</primary></indexterm>g_file_read <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_file_read_async</primary></indexterm>g_file_read_async <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_file_read_finish</primary></indexterm>g_file_read_finish <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_file_replace</primary></indexterm>g_file_replace <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_file_replace_async</primary></indexterm>g_file_replace_async <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_file_replace_contents</primary></indexterm>g_file_replace_contents <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_file_replace_contents_async</primary></indexterm>g_file_replace_contents_async <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_file_replace_contents_finish</primary></indexterm>g_file_replace_contents_finish <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_file_replace_finish</primary></indexterm>g_file_replace_finish <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_file_replace_readwrite</primary></indexterm>g_file_replace_readwrite <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_file_replace_readwrite_async</primary></indexterm>g_file_replace_readwrite_async <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_file_replace_readwrite_finish</primary></indexterm>g_file_replace_readwrite_finish <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_file_resolve_relative_path</primary></indexterm>g_file_resolve_relative_path <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_file_set_attribute</primary></indexterm>g_file_set_attribute <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_file_set_attribute_byte_string</primary></indexterm>g_file_set_attribute_byte_string <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_file_set_attribute_int32</primary></indexterm>g_file_set_attribute_int32 <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_file_set_attribute_int64</primary></indexterm>g_file_set_attribute_int64 <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_file_set_attribute_string</primary></indexterm>g_file_set_attribute_string <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_file_set_attribute_uint32</primary></indexterm>g_file_set_attribute_uint32 <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_file_set_attribute_uint64</primary></indexterm>g_file_set_attribute_uint64 <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_file_set_attributes_async</primary></indexterm>g_file_set_attributes_async <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_file_set_attributes_finish</primary></indexterm>g_file_set_attributes_finish <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_file_set_attributes_from_info</primary></indexterm>g_file_set_attributes_from_info <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_file_set_display_name</primary></indexterm>g_file_set_display_name <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_file_set_display_name_async</primary></indexterm>g_file_set_display_name_async <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_file_set_display_name_finish</primary></indexterm>g_file_set_display_name_finish <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_file_start_mountable</primary></indexterm>g_file_start_mountable <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_file_start_mountable_finish</primary></indexterm>g_file_start_mountable_finish <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_file_stop_mountable</primary></indexterm>g_file_stop_mountable <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_file_stop_mountable_finish</primary></indexterm>g_file_stop_mountable_finish <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_file_supports_thread_contexts</primary></indexterm>g_file_supports_thread_contexts <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_file_trash</primary></indexterm>g_file_trash <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_file_type_get_type</primary></indexterm>g_file_type_get_type <LINK LINKEND="REFSTD.libgio.2.0.2">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_file_unmount_mountable</primary></indexterm>g_file_unmount_mountable <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_file_unmount_mountable_finish</primary></indexterm>g_file_unmount_mountable_finish <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_file_unmount_mountable_with_operation</primary></indexterm>g_file_unmount_mountable_with_operation <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_file_unmount_mountable_with_operation_finish</primary></indexterm>g_file_unmount_mountable_with_operation_finish <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_filename_completer_get_completion_suffix</primary></indexterm>g_filename_completer_get_completion_suffix <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_filename_completer_get_completions</primary></indexterm>g_filename_completer_get_completions <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_filename_completer_get_type</primary></indexterm>g_filename_completer_get_type <LINK LINKEND="REFSTD.libgio.2.0.2">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_filename_completer_new</primary></indexterm>g_filename_completer_new <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_filename_completer_set_dirs_only</primary></indexterm>g_filename_completer_set_dirs_only <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_filesystem_preview_type_get_type</primary></indexterm>g_filesystem_preview_type_get_type <LINK LINKEND="REFSTD.libgio.2.0.2">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_filter_input_stream_get_base_stream</primary></indexterm>g_filter_input_stream_get_base_stream <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_filter_input_stream_get_close_base_stream</primary></indexterm>g_filter_input_stream_get_close_base_stream <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_filter_input_stream_get_type</primary></indexterm>g_filter_input_stream_get_type <LINK LINKEND="REFSTD.libgio.2.0.2">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_filter_input_stream_set_close_base_stream</primary></indexterm>g_filter_input_stream_set_close_base_stream <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_filter_output_stream_get_base_stream</primary></indexterm>g_filter_output_stream_get_base_stream <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_filter_output_stream_get_close_base_stream</primary></indexterm>g_filter_output_stream_get_close_base_stream <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_filter_output_stream_get_type</primary></indexterm>g_filter_output_stream_get_type <LINK LINKEND="REFSTD.libgio.2.0.2">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_filter_output_stream_set_close_base_stream</primary></indexterm>g_filter_output_stream_set_close_base_stream <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_icon_equal</primary></indexterm>g_icon_equal <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_icon_get_type</primary></indexterm>g_icon_get_type <LINK LINKEND="REFSTD.libgio.2.0.2">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_icon_hash</primary></indexterm>g_icon_hash <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_icon_new_for_string</primary></indexterm>g_icon_new_for_string <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_icon_to_string</primary></indexterm>g_icon_to_string <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_inet_address_equal</primary></indexterm>g_inet_address_equal <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_inet_address_get_family</primary></indexterm>g_inet_address_get_family <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_inet_address_get_is_any</primary></indexterm>g_inet_address_get_is_any <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_inet_address_get_is_link_local</primary></indexterm>g_inet_address_get_is_link_local <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_inet_address_get_is_loopback</primary></indexterm>g_inet_address_get_is_loopback <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_inet_address_get_is_mc_global</primary></indexterm>g_inet_address_get_is_mc_global <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_inet_address_get_is_mc_link_local</primary></indexterm>g_inet_address_get_is_mc_link_local <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_inet_address_get_is_mc_node_local</primary></indexterm>g_inet_address_get_is_mc_node_local <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_inet_address_get_is_mc_org_local</primary></indexterm>g_inet_address_get_is_mc_org_local <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_inet_address_get_is_mc_site_local</primary></indexterm>g_inet_address_get_is_mc_site_local <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_inet_address_get_is_multicast</primary></indexterm>g_inet_address_get_is_multicast <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_inet_address_get_is_site_local</primary></indexterm>g_inet_address_get_is_site_local <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_inet_address_get_native_size</primary></indexterm>g_inet_address_get_native_size <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_inet_address_get_type</primary></indexterm>g_inet_address_get_type <LINK LINKEND="REFSTD.libgio.2.0.2">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_inet_address_mask_equal</primary></indexterm>g_inet_address_mask_equal <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_inet_address_mask_get_address</primary></indexterm>g_inet_address_mask_get_address <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_inet_address_mask_get_family</primary></indexterm>g_inet_address_mask_get_family <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_inet_address_mask_get_length</primary></indexterm>g_inet_address_mask_get_length <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_inet_address_mask_get_type</primary></indexterm>g_inet_address_mask_get_type <LINK LINKEND="REFSTD.libgio.2.0.2">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_inet_address_mask_matches</primary></indexterm>g_inet_address_mask_matches <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_inet_address_mask_new</primary></indexterm>g_inet_address_mask_new <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_inet_address_mask_new_from_string</primary></indexterm>g_inet_address_mask_new_from_string <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_inet_address_mask_to_string</primary></indexterm>g_inet_address_mask_to_string <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_inet_address_new_any</primary></indexterm>g_inet_address_new_any <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_inet_address_new_from_bytes</primary></indexterm>g_inet_address_new_from_bytes <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_inet_address_new_from_string</primary></indexterm>g_inet_address_new_from_string <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_inet_address_new_loopback</primary></indexterm>g_inet_address_new_loopback <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_inet_address_to_bytes</primary></indexterm>g_inet_address_to_bytes <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_inet_address_to_string</primary></indexterm>g_inet_address_to_string <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_inet_socket_address_get_address</primary></indexterm>g_inet_socket_address_get_address <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_inet_socket_address_get_flowinfo</primary></indexterm>g_inet_socket_address_get_flowinfo <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_inet_socket_address_get_port</primary></indexterm>g_inet_socket_address_get_port <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_inet_socket_address_get_scope_id</primary></indexterm>g_inet_socket_address_get_scope_id <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_inet_socket_address_get_type</primary></indexterm>g_inet_socket_address_get_type <LINK LINKEND="REFSTD.libgio.2.0.2">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_inet_socket_address_new</primary></indexterm>g_inet_socket_address_new <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_initable_get_type</primary></indexterm>g_initable_get_type <LINK LINKEND="REFSTD.libgio.2.0.2">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_initable_init</primary></indexterm>g_initable_init <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_initable_new</primary></indexterm>g_initable_new <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_initable_new_valist</primary></indexterm>g_initable_new_valist <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_initable_newv</primary></indexterm>g_initable_newv <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_input_stream_clear_pending</primary></indexterm>g_input_stream_clear_pending <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_input_stream_close</primary></indexterm>g_input_stream_close <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_input_stream_close_async</primary></indexterm>g_input_stream_close_async <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_input_stream_close_finish</primary></indexterm>g_input_stream_close_finish <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_input_stream_get_type</primary></indexterm>g_input_stream_get_type <LINK LINKEND="REFSTD.libgio.2.0.2">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_input_stream_has_pending</primary></indexterm>g_input_stream_has_pending <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_input_stream_is_closed</primary></indexterm>g_input_stream_is_closed <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_input_stream_read</primary></indexterm>g_input_stream_read <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_input_stream_read_all</primary></indexterm>g_input_stream_read_all <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_input_stream_read_async</primary></indexterm>g_input_stream_read_async <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_input_stream_read_finish</primary></indexterm>g_input_stream_read_finish <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_input_stream_set_pending</primary></indexterm>g_input_stream_set_pending <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_input_stream_skip</primary></indexterm>g_input_stream_skip <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_input_stream_skip_async</primary></indexterm>g_input_stream_skip_async <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_input_stream_skip_finish</primary></indexterm>g_input_stream_skip_finish <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_io_error_enum_get_type</primary></indexterm>g_io_error_enum_get_type <LINK LINKEND="REFSTD.libgio.2.0.2">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_io_error_from_errno</primary></indexterm>g_io_error_from_errno <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_io_error_quark</primary></indexterm>g_io_error_quark <LINK LINKEND="REFSTD.libgio.2.0.3">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_io_extension_get_name</primary></indexterm>g_io_extension_get_name <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_io_extension_get_priority</primary></indexterm>g_io_extension_get_priority <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_io_extension_get_type</primary></indexterm>g_io_extension_get_type <LINK LINKEND="REFSTD.libgio.2.0.2">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_io_extension_point_get_extension_by_name</primary></indexterm>g_io_extension_point_get_extension_by_name <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_io_extension_point_get_extensions</primary></indexterm>g_io_extension_point_get_extensions <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_io_extension_point_get_required_type</primary></indexterm>g_io_extension_point_get_required_type <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_io_extension_point_implement</primary></indexterm>g_io_extension_point_implement <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_io_extension_point_lookup</primary></indexterm>g_io_extension_point_lookup <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_io_extension_point_register</primary></indexterm>g_io_extension_point_register <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_io_extension_point_set_required_type</primary></indexterm>g_io_extension_point_set_required_type <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_io_extension_ref_class</primary></indexterm>g_io_extension_ref_class <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_io_module_get_type</primary></indexterm>g_io_module_get_type <LINK LINKEND="REFSTD.libgio.2.0.2">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_io_module_new</primary></indexterm>g_io_module_new <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_io_module_scope_block</primary></indexterm>g_io_module_scope_block <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_io_module_scope_flags_get_type</primary></indexterm>g_io_module_scope_flags_get_type <LINK LINKEND="REFSTD.libgio.2.0.2">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_io_module_scope_free</primary></indexterm>g_io_module_scope_free <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_io_module_scope_new</primary></indexterm>g_io_module_scope_new <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_io_modules_load_all_in_directory</primary></indexterm>g_io_modules_load_all_in_directory <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_io_modules_load_all_in_directory_with_scope</primary></indexterm>g_io_modules_load_all_in_directory_with_scope <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_io_modules_scan_all_in_directory</primary></indexterm>g_io_modules_scan_all_in_directory <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_io_modules_scan_all_in_directory_with_scope</primary></indexterm>g_io_modules_scan_all_in_directory_with_scope <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_io_scheduler_cancel_all_jobs</primary></indexterm>g_io_scheduler_cancel_all_jobs <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_io_scheduler_job_send_to_mainloop</primary></indexterm>g_io_scheduler_job_send_to_mainloop <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_io_scheduler_job_send_to_mainloop_async</primary></indexterm>g_io_scheduler_job_send_to_mainloop_async <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_io_scheduler_push_job</primary></indexterm>g_io_scheduler_push_job <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_io_stream_clear_pending</primary></indexterm>g_io_stream_clear_pending <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_io_stream_close</primary></indexterm>g_io_stream_close <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_io_stream_close_async</primary></indexterm>g_io_stream_close_async <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_io_stream_close_finish</primary></indexterm>g_io_stream_close_finish <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_io_stream_get_input_stream</primary></indexterm>g_io_stream_get_input_stream <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_io_stream_get_output_stream</primary></indexterm>g_io_stream_get_output_stream <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_io_stream_get_type</primary></indexterm>g_io_stream_get_type <LINK LINKEND="REFSTD.libgio.2.0.2">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_io_stream_has_pending</primary></indexterm>g_io_stream_has_pending <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_io_stream_is_closed</primary></indexterm>g_io_stream_is_closed <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_io_stream_set_pending</primary></indexterm>g_io_stream_set_pending <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_io_stream_splice_async</primary></indexterm>g_io_stream_splice_async <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_io_stream_splice_finish</primary></indexterm>g_io_stream_splice_finish <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_io_stream_splice_flags_get_type</primary></indexterm>g_io_stream_splice_flags_get_type <LINK LINKEND="REFSTD.libgio.2.0.2">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_keyfile_settings_backend_new</primary></indexterm>g_keyfile_settings_backend_new <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_loadable_icon_get_type</primary></indexterm>g_loadable_icon_get_type <LINK LINKEND="REFSTD.libgio.2.0.2">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_loadable_icon_load</primary></indexterm>g_loadable_icon_load <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_loadable_icon_load_async</primary></indexterm>g_loadable_icon_load_async <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_loadable_icon_load_finish</primary></indexterm>g_loadable_icon_load_finish <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_memory_input_stream_add_data</primary></indexterm>g_memory_input_stream_add_data <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_memory_input_stream_get_type</primary></indexterm>g_memory_input_stream_get_type <LINK LINKEND="REFSTD.libgio.2.0.2">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_memory_input_stream_new</primary></indexterm>g_memory_input_stream_new <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_memory_input_stream_new_from_data</primary></indexterm>g_memory_input_stream_new_from_data <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_memory_output_stream_get_data</primary></indexterm>g_memory_output_stream_get_data <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_memory_output_stream_get_data_size</primary></indexterm>g_memory_output_stream_get_data_size <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_memory_output_stream_get_size</primary></indexterm>g_memory_output_stream_get_size <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_memory_output_stream_get_type</primary></indexterm>g_memory_output_stream_get_type <LINK LINKEND="REFSTD.libgio.2.0.2">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_memory_output_stream_new</primary></indexterm>g_memory_output_stream_new <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_memory_output_stream_steal_data</primary></indexterm>g_memory_output_stream_steal_data <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_memory_settings_backend_new</primary></indexterm>g_memory_settings_backend_new <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_menu_append</primary></indexterm>g_menu_append <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_menu_append_item</primary></indexterm>g_menu_append_item <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_menu_append_section</primary></indexterm>g_menu_append_section <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_menu_append_submenu</primary></indexterm>g_menu_append_submenu <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_menu_attribute_iter_get_name</primary></indexterm>g_menu_attribute_iter_get_name <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_menu_attribute_iter_get_next</primary></indexterm>g_menu_attribute_iter_get_next <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_menu_attribute_iter_get_type</primary></indexterm>g_menu_attribute_iter_get_type <LINK LINKEND="REFSTD.libgio.2.0.2">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_menu_attribute_iter_get_value</primary></indexterm>g_menu_attribute_iter_get_value <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_menu_attribute_iter_next</primary></indexterm>g_menu_attribute_iter_next <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_menu_freeze</primary></indexterm>g_menu_freeze <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_menu_get_type</primary></indexterm>g_menu_get_type <LINK LINKEND="REFSTD.libgio.2.0.2">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_menu_insert</primary></indexterm>g_menu_insert <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_menu_insert_item</primary></indexterm>g_menu_insert_item <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_menu_insert_section</primary></indexterm>g_menu_insert_section <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_menu_insert_submenu</primary></indexterm>g_menu_insert_submenu <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_menu_item_get_type</primary></indexterm>g_menu_item_get_type <LINK LINKEND="REFSTD.libgio.2.0.2">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_menu_item_new</primary></indexterm>g_menu_item_new <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_menu_item_new_section</primary></indexterm>g_menu_item_new_section <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_menu_item_new_submenu</primary></indexterm>g_menu_item_new_submenu <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_menu_item_set_action_and_target</primary></indexterm>g_menu_item_set_action_and_target <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_menu_item_set_action_and_target_value</primary></indexterm>g_menu_item_set_action_and_target_value <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_menu_item_set_attribute</primary></indexterm>g_menu_item_set_attribute <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_menu_item_set_attribute_value</primary></indexterm>g_menu_item_set_attribute_value <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_menu_item_set_detailed_action</primary></indexterm>g_menu_item_set_detailed_action <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_menu_item_set_label</primary></indexterm>g_menu_item_set_label <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_menu_item_set_link</primary></indexterm>g_menu_item_set_link <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_menu_item_set_section</primary></indexterm>g_menu_item_set_section <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_menu_item_set_submenu</primary></indexterm>g_menu_item_set_submenu <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_menu_link_iter_get_name</primary></indexterm>g_menu_link_iter_get_name <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_menu_link_iter_get_next</primary></indexterm>g_menu_link_iter_get_next <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_menu_link_iter_get_type</primary></indexterm>g_menu_link_iter_get_type <LINK LINKEND="REFSTD.libgio.2.0.2">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_menu_link_iter_get_value</primary></indexterm>g_menu_link_iter_get_value <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_menu_link_iter_next</primary></indexterm>g_menu_link_iter_next <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_menu_model_get_item_attribute</primary></indexterm>g_menu_model_get_item_attribute <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_menu_model_get_item_attribute_value</primary></indexterm>g_menu_model_get_item_attribute_value <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_menu_model_get_item_link</primary></indexterm>g_menu_model_get_item_link <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_menu_model_get_n_items</primary></indexterm>g_menu_model_get_n_items <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_menu_model_get_type</primary></indexterm>g_menu_model_get_type <LINK LINKEND="REFSTD.libgio.2.0.2">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_menu_model_is_mutable</primary></indexterm>g_menu_model_is_mutable <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_menu_model_items_changed</primary></indexterm>g_menu_model_items_changed <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_menu_model_iterate_item_attributes</primary></indexterm>g_menu_model_iterate_item_attributes <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_menu_model_iterate_item_links</primary></indexterm>g_menu_model_iterate_item_links <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_menu_new</primary></indexterm>g_menu_new <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_menu_prepend</primary></indexterm>g_menu_prepend <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_menu_prepend_item</primary></indexterm>g_menu_prepend_item <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_menu_prepend_section</primary></indexterm>g_menu_prepend_section <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_menu_prepend_submenu</primary></indexterm>g_menu_prepend_submenu <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_menu_remove</primary></indexterm>g_menu_remove <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_mount_can_eject</primary></indexterm>g_mount_can_eject <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_mount_can_unmount</primary></indexterm>g_mount_can_unmount <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_mount_eject</primary></indexterm>g_mount_eject <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_mount_eject_finish</primary></indexterm>g_mount_eject_finish <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_mount_eject_with_operation</primary></indexterm>g_mount_eject_with_operation <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_mount_eject_with_operation_finish</primary></indexterm>g_mount_eject_with_operation_finish <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_mount_get_default_location</primary></indexterm>g_mount_get_default_location <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_mount_get_drive</primary></indexterm>g_mount_get_drive <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_mount_get_icon</primary></indexterm>g_mount_get_icon <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_mount_get_name</primary></indexterm>g_mount_get_name <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_mount_get_root</primary></indexterm>g_mount_get_root <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_mount_get_sort_key</primary></indexterm>g_mount_get_sort_key <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_mount_get_type</primary></indexterm>g_mount_get_type <LINK LINKEND="REFSTD.libgio.2.0.2">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_mount_get_uuid</primary></indexterm>g_mount_get_uuid <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_mount_get_volume</primary></indexterm>g_mount_get_volume <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_mount_guess_content_type</primary></indexterm>g_mount_guess_content_type <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_mount_guess_content_type_finish</primary></indexterm>g_mount_guess_content_type_finish <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_mount_guess_content_type_sync</primary></indexterm>g_mount_guess_content_type_sync <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_mount_is_shadowed</primary></indexterm>g_mount_is_shadowed <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_mount_mount_flags_get_type</primary></indexterm>g_mount_mount_flags_get_type <LINK LINKEND="REFSTD.libgio.2.0.2">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_mount_operation_get_anonymous</primary></indexterm>g_mount_operation_get_anonymous <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_mount_operation_get_choice</primary></indexterm>g_mount_operation_get_choice <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_mount_operation_get_domain</primary></indexterm>g_mount_operation_get_domain <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_mount_operation_get_password</primary></indexterm>g_mount_operation_get_password <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_mount_operation_get_password_save</primary></indexterm>g_mount_operation_get_password_save <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_mount_operation_get_type</primary></indexterm>g_mount_operation_get_type <LINK LINKEND="REFSTD.libgio.2.0.2">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_mount_operation_get_username</primary></indexterm>g_mount_operation_get_username <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_mount_operation_new</primary></indexterm>g_mount_operation_new <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_mount_operation_reply</primary></indexterm>g_mount_operation_reply <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_mount_operation_result_get_type</primary></indexterm>g_mount_operation_result_get_type <LINK LINKEND="REFSTD.libgio.2.0.2">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_mount_operation_set_anonymous</primary></indexterm>g_mount_operation_set_anonymous <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_mount_operation_set_choice</primary></indexterm>g_mount_operation_set_choice <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_mount_operation_set_domain</primary></indexterm>g_mount_operation_set_domain <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_mount_operation_set_password</primary></indexterm>g_mount_operation_set_password <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_mount_operation_set_password_save</primary></indexterm>g_mount_operation_set_password_save <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_mount_operation_set_username</primary></indexterm>g_mount_operation_set_username <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_mount_remount</primary></indexterm>g_mount_remount <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_mount_remount_finish</primary></indexterm>g_mount_remount_finish <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_mount_shadow</primary></indexterm>g_mount_shadow <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_mount_unmount</primary></indexterm>g_mount_unmount <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_mount_unmount_finish</primary></indexterm>g_mount_unmount_finish <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_mount_unmount_flags_get_type</primary></indexterm>g_mount_unmount_flags_get_type <LINK LINKEND="REFSTD.libgio.2.0.2">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_mount_unmount_with_operation</primary></indexterm>g_mount_unmount_with_operation <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_mount_unmount_with_operation_finish</primary></indexterm>g_mount_unmount_with_operation_finish <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_mount_unshadow</primary></indexterm>g_mount_unshadow <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_native_volume_monitor_get_type</primary></indexterm>g_native_volume_monitor_get_type <LINK LINKEND="REFSTD.libgio.2.0.2">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_network_address_get_hostname</primary></indexterm>g_network_address_get_hostname <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_network_address_get_port</primary></indexterm>g_network_address_get_port <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_network_address_get_scheme</primary></indexterm>g_network_address_get_scheme <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_network_address_get_type</primary></indexterm>g_network_address_get_type <LINK LINKEND="REFSTD.libgio.2.0.2">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_network_address_new</primary></indexterm>g_network_address_new <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_network_address_parse</primary></indexterm>g_network_address_parse <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_network_address_parse_uri</primary></indexterm>g_network_address_parse_uri <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_network_monitor_can_reach</primary></indexterm>g_network_monitor_can_reach <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_network_monitor_can_reach_async</primary></indexterm>g_network_monitor_can_reach_async <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_network_monitor_can_reach_finish</primary></indexterm>g_network_monitor_can_reach_finish <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_network_monitor_get_default</primary></indexterm>g_network_monitor_get_default <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_network_monitor_get_network_available</primary></indexterm>g_network_monitor_get_network_available <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_network_monitor_get_type</primary></indexterm>g_network_monitor_get_type <LINK LINKEND="REFSTD.libgio.2.0.2">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_network_service_get_domain</primary></indexterm>g_network_service_get_domain <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_network_service_get_protocol</primary></indexterm>g_network_service_get_protocol <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_network_service_get_scheme</primary></indexterm>g_network_service_get_scheme <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_network_service_get_service</primary></indexterm>g_network_service_get_service <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_network_service_get_type</primary></indexterm>g_network_service_get_type <LINK LINKEND="REFSTD.libgio.2.0.2">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_network_service_new</primary></indexterm>g_network_service_new <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_network_service_set_scheme</primary></indexterm>g_network_service_set_scheme <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_null_settings_backend_new</primary></indexterm>g_null_settings_backend_new <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_output_stream_clear_pending</primary></indexterm>g_output_stream_clear_pending <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_output_stream_close</primary></indexterm>g_output_stream_close <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_output_stream_close_async</primary></indexterm>g_output_stream_close_async <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_output_stream_close_finish</primary></indexterm>g_output_stream_close_finish <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_output_stream_flush</primary></indexterm>g_output_stream_flush <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_output_stream_flush_async</primary></indexterm>g_output_stream_flush_async <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_output_stream_flush_finish</primary></indexterm>g_output_stream_flush_finish <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_output_stream_get_type</primary></indexterm>g_output_stream_get_type <LINK LINKEND="REFSTD.libgio.2.0.2">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_output_stream_has_pending</primary></indexterm>g_output_stream_has_pending <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_output_stream_is_closed</primary></indexterm>g_output_stream_is_closed <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_output_stream_is_closing</primary></indexterm>g_output_stream_is_closing <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_output_stream_set_pending</primary></indexterm>g_output_stream_set_pending <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_output_stream_splice</primary></indexterm>g_output_stream_splice <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_output_stream_splice_async</primary></indexterm>g_output_stream_splice_async <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_output_stream_splice_finish</primary></indexterm>g_output_stream_splice_finish <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_output_stream_splice_flags_get_type</primary></indexterm>g_output_stream_splice_flags_get_type <LINK LINKEND="REFSTD.libgio.2.0.2">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_output_stream_write</primary></indexterm>g_output_stream_write <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_output_stream_write_all</primary></indexterm>g_output_stream_write_all <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_output_stream_write_async</primary></indexterm>g_output_stream_write_async <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_output_stream_write_finish</primary></indexterm>g_output_stream_write_finish <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_password_save_get_type</primary></indexterm>g_password_save_get_type <LINK LINKEND="REFSTD.libgio.2.0.2">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_permission_acquire</primary></indexterm>g_permission_acquire <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_permission_acquire_async</primary></indexterm>g_permission_acquire_async <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_permission_acquire_finish</primary></indexterm>g_permission_acquire_finish <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_permission_get_allowed</primary></indexterm>g_permission_get_allowed <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_permission_get_can_acquire</primary></indexterm>g_permission_get_can_acquire <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_permission_get_can_release</primary></indexterm>g_permission_get_can_release <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_permission_get_type</primary></indexterm>g_permission_get_type <LINK LINKEND="REFSTD.libgio.2.0.2">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_permission_impl_update</primary></indexterm>g_permission_impl_update <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_permission_release</primary></indexterm>g_permission_release <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_permission_release_async</primary></indexterm>g_permission_release_async <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_permission_release_finish</primary></indexterm>g_permission_release_finish <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_pollable_input_stream_can_poll</primary></indexterm>g_pollable_input_stream_can_poll <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_pollable_input_stream_create_source</primary></indexterm>g_pollable_input_stream_create_source <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_pollable_input_stream_get_type</primary></indexterm>g_pollable_input_stream_get_type <LINK LINKEND="REFSTD.libgio.2.0.2">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_pollable_input_stream_is_readable</primary></indexterm>g_pollable_input_stream_is_readable <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_pollable_input_stream_read_nonblocking</primary></indexterm>g_pollable_input_stream_read_nonblocking <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_pollable_output_stream_can_poll</primary></indexterm>g_pollable_output_stream_can_poll <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_pollable_output_stream_create_source</primary></indexterm>g_pollable_output_stream_create_source <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_pollable_output_stream_get_type</primary></indexterm>g_pollable_output_stream_get_type <LINK LINKEND="REFSTD.libgio.2.0.2">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_pollable_output_stream_is_writable</primary></indexterm>g_pollable_output_stream_is_writable <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_pollable_output_stream_write_nonblocking</primary></indexterm>g_pollable_output_stream_write_nonblocking <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_pollable_source_new</primary></indexterm>g_pollable_source_new <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_proxy_address_enumerator_get_type</primary></indexterm>g_proxy_address_enumerator_get_type <LINK LINKEND="REFSTD.libgio.2.0.2">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_proxy_address_get_destination_hostname</primary></indexterm>g_proxy_address_get_destination_hostname <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_proxy_address_get_destination_port</primary></indexterm>g_proxy_address_get_destination_port <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_proxy_address_get_password</primary></indexterm>g_proxy_address_get_password <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_proxy_address_get_protocol</primary></indexterm>g_proxy_address_get_protocol <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_proxy_address_get_type</primary></indexterm>g_proxy_address_get_type <LINK LINKEND="REFSTD.libgio.2.0.2">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_proxy_address_get_username</primary></indexterm>g_proxy_address_get_username <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_proxy_address_new</primary></indexterm>g_proxy_address_new <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_proxy_connect</primary></indexterm>g_proxy_connect <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_proxy_connect_async</primary></indexterm>g_proxy_connect_async <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_proxy_connect_finish</primary></indexterm>g_proxy_connect_finish <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_proxy_get_default_for_protocol</primary></indexterm>g_proxy_get_default_for_protocol <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_proxy_get_type</primary></indexterm>g_proxy_get_type <LINK LINKEND="REFSTD.libgio.2.0.2">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_proxy_resolver_get_default</primary></indexterm>g_proxy_resolver_get_default <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_proxy_resolver_get_type</primary></indexterm>g_proxy_resolver_get_type <LINK LINKEND="REFSTD.libgio.2.0.2">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_proxy_resolver_is_supported</primary></indexterm>g_proxy_resolver_is_supported <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_proxy_resolver_lookup</primary></indexterm>g_proxy_resolver_lookup <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_proxy_resolver_lookup_async</primary></indexterm>g_proxy_resolver_lookup_async <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_proxy_resolver_lookup_finish</primary></indexterm>g_proxy_resolver_lookup_finish <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_proxy_supports_hostname</primary></indexterm>g_proxy_supports_hostname <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_remote_action_group_activate_action_full</primary></indexterm>g_remote_action_group_activate_action_full <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_remote_action_group_change_action_state_full</primary></indexterm>g_remote_action_group_change_action_state_full <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_remote_action_group_get_type</primary></indexterm>g_remote_action_group_get_type <LINK LINKEND="REFSTD.libgio.2.0.2">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_resolver_error_get_type</primary></indexterm>g_resolver_error_get_type <LINK LINKEND="REFSTD.libgio.2.0.2">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_resolver_error_quark</primary></indexterm>g_resolver_error_quark <LINK LINKEND="REFSTD.libgio.2.0.3">[LSB]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_resolver_free_addresses</primary></indexterm>g_resolver_free_addresses <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_resolver_free_targets</primary></indexterm>g_resolver_free_targets <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_resolver_get_default</primary></indexterm>g_resolver_get_default <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_resolver_get_type</primary></indexterm>g_resolver_get_type <LINK LINKEND="REFSTD.libgio.2.0.2">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_resolver_lookup_by_address</primary></indexterm>g_resolver_lookup_by_address <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_resolver_lookup_by_address_async</primary></indexterm>g_resolver_lookup_by_address_async <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_resolver_lookup_by_address_finish</primary></indexterm>g_resolver_lookup_by_address_finish <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_resolver_lookup_by_name</primary></indexterm>g_resolver_lookup_by_name <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_resolver_lookup_by_name_async</primary></indexterm>g_resolver_lookup_by_name_async <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_resolver_lookup_by_name_finish</primary></indexterm>g_resolver_lookup_by_name_finish <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_resolver_lookup_service</primary></indexterm>g_resolver_lookup_service <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_resolver_lookup_service_async</primary></indexterm>g_resolver_lookup_service_async <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_resolver_lookup_service_finish</primary></indexterm>g_resolver_lookup_service_finish <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_resolver_set_default</primary></indexterm>g_resolver_set_default <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_resource_enumerate_children</primary></indexterm>g_resource_enumerate_children <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_resource_error_get_type</primary></indexterm>g_resource_error_get_type <LINK LINKEND="REFSTD.libgio.2.0.2">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_resource_error_quark</primary></indexterm>g_resource_error_quark <LINK LINKEND="REFSTD.libgio.2.0.3">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_resource_flags_get_type</primary></indexterm>g_resource_flags_get_type <LINK LINKEND="REFSTD.libgio.2.0.2">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_resource_get_info</primary></indexterm>g_resource_get_info <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_resource_get_type</primary></indexterm>g_resource_get_type <LINK LINKEND="REFSTD.libgio.2.0.2">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_resource_load</primary></indexterm>g_resource_load <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_resource_lookup_data</primary></indexterm>g_resource_lookup_data <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_resource_lookup_flags_get_type</primary></indexterm>g_resource_lookup_flags_get_type <LINK LINKEND="REFSTD.libgio.2.0.2">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_resource_new_from_data</primary></indexterm>g_resource_new_from_data <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_resource_open_stream</primary></indexterm>g_resource_open_stream <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_resource_ref</primary></indexterm>g_resource_ref <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_resource_unref</primary></indexterm>g_resource_unref <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_resources_enumerate_children</primary></indexterm>g_resources_enumerate_children <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_resources_get_info</primary></indexterm>g_resources_get_info <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_resources_lookup_data</primary></indexterm>g_resources_lookup_data <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_resources_open_stream</primary></indexterm>g_resources_open_stream <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_resources_register</primary></indexterm>g_resources_register <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_resources_unregister</primary></indexterm>g_resources_unregister <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_seekable_can_seek</primary></indexterm>g_seekable_can_seek <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_seekable_can_truncate</primary></indexterm>g_seekable_can_truncate <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_seekable_get_type</primary></indexterm>g_seekable_get_type <LINK LINKEND="REFSTD.libgio.2.0.2">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_seekable_seek</primary></indexterm>g_seekable_seek <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_seekable_tell</primary></indexterm>g_seekable_tell <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_seekable_truncate</primary></indexterm>g_seekable_truncate <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_settings_apply</primary></indexterm>g_settings_apply <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_settings_backend_changed</primary></indexterm>g_settings_backend_changed <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_settings_backend_changed_tree</primary></indexterm>g_settings_backend_changed_tree <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_settings_backend_flatten_tree</primary></indexterm>g_settings_backend_flatten_tree <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_settings_backend_get_default</primary></indexterm>g_settings_backend_get_default <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_settings_backend_get_type</primary></indexterm>g_settings_backend_get_type <LINK LINKEND="REFSTD.libgio.2.0.2">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_settings_backend_keys_changed</primary></indexterm>g_settings_backend_keys_changed <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_settings_backend_path_changed</primary></indexterm>g_settings_backend_path_changed <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_settings_backend_path_writable_changed</primary></indexterm>g_settings_backend_path_writable_changed <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_settings_backend_writable_changed</primary></indexterm>g_settings_backend_writable_changed <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_settings_bind</primary></indexterm>g_settings_bind <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_settings_bind_flags_get_type</primary></indexterm>g_settings_bind_flags_get_type <LINK LINKEND="REFSTD.libgio.2.0.2">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_settings_bind_with_mapping</primary></indexterm>g_settings_bind_with_mapping <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_settings_bind_writable</primary></indexterm>g_settings_bind_writable <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_settings_create_action</primary></indexterm>g_settings_create_action <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_settings_delay</primary></indexterm>g_settings_delay <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_settings_get</primary></indexterm>g_settings_get <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_settings_get_boolean</primary></indexterm>g_settings_get_boolean <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_settings_get_child</primary></indexterm>g_settings_get_child <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_settings_get_double</primary></indexterm>g_settings_get_double <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_settings_get_enum</primary></indexterm>g_settings_get_enum <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_settings_get_flags</primary></indexterm>g_settings_get_flags <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_settings_get_has_unapplied</primary></indexterm>g_settings_get_has_unapplied <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_settings_get_int</primary></indexterm>g_settings_get_int <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_settings_get_mapped</primary></indexterm>g_settings_get_mapped <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_settings_get_range</primary></indexterm>g_settings_get_range <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_settings_get_string</primary></indexterm>g_settings_get_string <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_settings_get_strv</primary></indexterm>g_settings_get_strv <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_settings_get_type</primary></indexterm>g_settings_get_type <LINK LINKEND="REFSTD.libgio.2.0.2">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_settings_get_uint</primary></indexterm>g_settings_get_uint <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_settings_get_value</primary></indexterm>g_settings_get_value <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_settings_is_writable</primary></indexterm>g_settings_is_writable <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_settings_list_children</primary></indexterm>g_settings_list_children <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_settings_list_keys</primary></indexterm>g_settings_list_keys <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_settings_list_relocatable_schemas</primary></indexterm>g_settings_list_relocatable_schemas <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_settings_list_schemas</primary></indexterm>g_settings_list_schemas <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_settings_new</primary></indexterm>g_settings_new <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_settings_new_full</primary></indexterm>g_settings_new_full <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_settings_new_with_backend</primary></indexterm>g_settings_new_with_backend <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_settings_new_with_backend_and_path</primary></indexterm>g_settings_new_with_backend_and_path <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_settings_new_with_path</primary></indexterm>g_settings_new_with_path <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_settings_range_check</primary></indexterm>g_settings_range_check <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_settings_reset</primary></indexterm>g_settings_reset <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_settings_revert</primary></indexterm>g_settings_revert <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_settings_schema_get_id</primary></indexterm>g_settings_schema_get_id <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_settings_schema_get_path</primary></indexterm>g_settings_schema_get_path <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_settings_schema_get_type</primary></indexterm>g_settings_schema_get_type <LINK LINKEND="REFSTD.libgio.2.0.2">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_settings_schema_ref</primary></indexterm>g_settings_schema_ref <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_settings_schema_source_get_default</primary></indexterm>g_settings_schema_source_get_default <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_settings_schema_source_get_type</primary></indexterm>g_settings_schema_source_get_type <LINK LINKEND="REFSTD.libgio.2.0.2">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_settings_schema_source_lookup</primary></indexterm>g_settings_schema_source_lookup <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_settings_schema_source_new_from_directory</primary></indexterm>g_settings_schema_source_new_from_directory <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_settings_schema_source_ref</primary></indexterm>g_settings_schema_source_ref <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_settings_schema_source_unref</primary></indexterm>g_settings_schema_source_unref <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_settings_schema_unref</primary></indexterm>g_settings_schema_unref <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_settings_set</primary></indexterm>g_settings_set <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_settings_set_boolean</primary></indexterm>g_settings_set_boolean <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_settings_set_double</primary></indexterm>g_settings_set_double <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_settings_set_enum</primary></indexterm>g_settings_set_enum <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_settings_set_flags</primary></indexterm>g_settings_set_flags <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_settings_set_int</primary></indexterm>g_settings_set_int <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_settings_set_string</primary></indexterm>g_settings_set_string <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_settings_set_strv</primary></indexterm>g_settings_set_strv <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_settings_set_uint</primary></indexterm>g_settings_set_uint <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_settings_set_value</primary></indexterm>g_settings_set_value <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_settings_sync</primary></indexterm>g_settings_sync <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_settings_unbind</primary></indexterm>g_settings_unbind <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_simple_action_get_type</primary></indexterm>g_simple_action_get_type <LINK LINKEND="REFSTD.libgio.2.0.2">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_simple_action_group_add_entries</primary></indexterm>g_simple_action_group_add_entries <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_simple_action_group_get_type</primary></indexterm>g_simple_action_group_get_type <LINK LINKEND="REFSTD.libgio.2.0.2">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_simple_action_group_insert</primary></indexterm>g_simple_action_group_insert <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_simple_action_group_lookup</primary></indexterm>g_simple_action_group_lookup <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_simple_action_group_new</primary></indexterm>g_simple_action_group_new <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_simple_action_group_remove</primary></indexterm>g_simple_action_group_remove <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_simple_action_new</primary></indexterm>g_simple_action_new <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_simple_action_new_stateful</primary></indexterm>g_simple_action_new_stateful <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_simple_action_set_enabled</primary></indexterm>g_simple_action_set_enabled <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_simple_action_set_state</primary></indexterm>g_simple_action_set_state <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_simple_async_report_error_in_idle</primary></indexterm>g_simple_async_report_error_in_idle <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_simple_async_report_gerror_in_idle</primary></indexterm>g_simple_async_report_gerror_in_idle <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_simple_async_report_take_gerror_in_idle</primary></indexterm>g_simple_async_report_take_gerror_in_idle <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_simple_async_result_complete</primary></indexterm>g_simple_async_result_complete <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_simple_async_result_complete_in_idle</primary></indexterm>g_simple_async_result_complete_in_idle <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_simple_async_result_get_op_res_gboolean</primary></indexterm>g_simple_async_result_get_op_res_gboolean <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_simple_async_result_get_op_res_gpointer</primary></indexterm>g_simple_async_result_get_op_res_gpointer <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_simple_async_result_get_op_res_gssize</primary></indexterm>g_simple_async_result_get_op_res_gssize <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_simple_async_result_get_source_tag</primary></indexterm>g_simple_async_result_get_source_tag <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_simple_async_result_get_type</primary></indexterm>g_simple_async_result_get_type <LINK LINKEND="REFSTD.libgio.2.0.2">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_simple_async_result_is_valid</primary></indexterm>g_simple_async_result_is_valid <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_simple_async_result_new</primary></indexterm>g_simple_async_result_new <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_simple_async_result_new_error</primary></indexterm>g_simple_async_result_new_error <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_simple_async_result_new_from_error</primary></indexterm>g_simple_async_result_new_from_error <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_simple_async_result_new_take_error</primary></indexterm>g_simple_async_result_new_take_error <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_simple_async_result_propagate_error</primary></indexterm>g_simple_async_result_propagate_error <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_simple_async_result_run_in_thread</primary></indexterm>g_simple_async_result_run_in_thread <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_simple_async_result_set_check_cancellable</primary></indexterm>g_simple_async_result_set_check_cancellable <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_simple_async_result_set_error</primary></indexterm>g_simple_async_result_set_error <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_simple_async_result_set_error_va</primary></indexterm>g_simple_async_result_set_error_va <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_simple_async_result_set_from_error</primary></indexterm>g_simple_async_result_set_from_error <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_simple_async_result_set_handle_cancellation</primary></indexterm>g_simple_async_result_set_handle_cancellation <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_simple_async_result_set_op_res_gboolean</primary></indexterm>g_simple_async_result_set_op_res_gboolean <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_simple_async_result_set_op_res_gpointer</primary></indexterm>g_simple_async_result_set_op_res_gpointer <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_simple_async_result_set_op_res_gssize</primary></indexterm>g_simple_async_result_set_op_res_gssize <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_simple_async_result_take_error</primary></indexterm>g_simple_async_result_take_error <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_simple_permission_get_type</primary></indexterm>g_simple_permission_get_type <LINK LINKEND="REFSTD.libgio.2.0.2">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_simple_permission_new</primary></indexterm>g_simple_permission_new <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_socket_accept</primary></indexterm>g_socket_accept <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_socket_address_enumerator_get_type</primary></indexterm>g_socket_address_enumerator_get_type <LINK LINKEND="REFSTD.libgio.2.0.2">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_socket_address_enumerator_next</primary></indexterm>g_socket_address_enumerator_next <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_socket_address_enumerator_next_async</primary></indexterm>g_socket_address_enumerator_next_async <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_socket_address_enumerator_next_finish</primary></indexterm>g_socket_address_enumerator_next_finish <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_socket_address_get_family</primary></indexterm>g_socket_address_get_family <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_socket_address_get_native_size</primary></indexterm>g_socket_address_get_native_size <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_socket_address_get_type</primary></indexterm>g_socket_address_get_type <LINK LINKEND="REFSTD.libgio.2.0.2">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_socket_address_new_from_native</primary></indexterm>g_socket_address_new_from_native <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_socket_address_to_native</primary></indexterm>g_socket_address_to_native <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_socket_bind</primary></indexterm>g_socket_bind <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_socket_check_connect_result</primary></indexterm>g_socket_check_connect_result <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_socket_client_add_application_proxy</primary></indexterm>g_socket_client_add_application_proxy <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_socket_client_connect</primary></indexterm>g_socket_client_connect <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_socket_client_connect_async</primary></indexterm>g_socket_client_connect_async <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_socket_client_connect_finish</primary></indexterm>g_socket_client_connect_finish <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_socket_client_connect_to_host</primary></indexterm>g_socket_client_connect_to_host <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_socket_client_connect_to_host_async</primary></indexterm>g_socket_client_connect_to_host_async <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_socket_client_connect_to_host_finish</primary></indexterm>g_socket_client_connect_to_host_finish <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_socket_client_connect_to_service</primary></indexterm>g_socket_client_connect_to_service <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_socket_client_connect_to_service_async</primary></indexterm>g_socket_client_connect_to_service_async <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_socket_client_connect_to_service_finish</primary></indexterm>g_socket_client_connect_to_service_finish <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_socket_client_connect_to_uri</primary></indexterm>g_socket_client_connect_to_uri <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_socket_client_connect_to_uri_async</primary></indexterm>g_socket_client_connect_to_uri_async <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_socket_client_connect_to_uri_finish</primary></indexterm>g_socket_client_connect_to_uri_finish <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_socket_client_event_get_type</primary></indexterm>g_socket_client_event_get_type <LINK LINKEND="REFSTD.libgio.2.0.2">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_socket_client_get_enable_proxy</primary></indexterm>g_socket_client_get_enable_proxy <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_socket_client_get_family</primary></indexterm>g_socket_client_get_family <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_socket_client_get_local_address</primary></indexterm>g_socket_client_get_local_address <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_socket_client_get_protocol</primary></indexterm>g_socket_client_get_protocol <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_socket_client_get_socket_type</primary></indexterm>g_socket_client_get_socket_type <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_socket_client_get_timeout</primary></indexterm>g_socket_client_get_timeout <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_socket_client_get_tls</primary></indexterm>g_socket_client_get_tls <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_socket_client_get_tls_validation_flags</primary></indexterm>g_socket_client_get_tls_validation_flags <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_socket_client_get_type</primary></indexterm>g_socket_client_get_type <LINK LINKEND="REFSTD.libgio.2.0.2">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_socket_client_new</primary></indexterm>g_socket_client_new <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_socket_client_set_enable_proxy</primary></indexterm>g_socket_client_set_enable_proxy <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_socket_client_set_family</primary></indexterm>g_socket_client_set_family <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_socket_client_set_local_address</primary></indexterm>g_socket_client_set_local_address <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_socket_client_set_protocol</primary></indexterm>g_socket_client_set_protocol <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_socket_client_set_socket_type</primary></indexterm>g_socket_client_set_socket_type <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_socket_client_set_timeout</primary></indexterm>g_socket_client_set_timeout <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_socket_client_set_tls</primary></indexterm>g_socket_client_set_tls <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_socket_client_set_tls_validation_flags</primary></indexterm>g_socket_client_set_tls_validation_flags <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_socket_close</primary></indexterm>g_socket_close <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_socket_condition_check</primary></indexterm>g_socket_condition_check <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_socket_condition_timed_wait</primary></indexterm>g_socket_condition_timed_wait <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_socket_condition_wait</primary></indexterm>g_socket_condition_wait <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_socket_connect</primary></indexterm>g_socket_connect <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_socket_connectable_enumerate</primary></indexterm>g_socket_connectable_enumerate <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_socket_connectable_get_type</primary></indexterm>g_socket_connectable_get_type <LINK LINKEND="REFSTD.libgio.2.0.2">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_socket_connectable_proxy_enumerate</primary></indexterm>g_socket_connectable_proxy_enumerate <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_socket_connection_connect</primary></indexterm>g_socket_connection_connect <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_socket_connection_connect_async</primary></indexterm>g_socket_connection_connect_async <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_socket_connection_connect_finish</primary></indexterm>g_socket_connection_connect_finish <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_socket_connection_factory_create_connection</primary></indexterm>g_socket_connection_factory_create_connection <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_socket_connection_factory_lookup_type</primary></indexterm>g_socket_connection_factory_lookup_type <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_socket_connection_factory_register_type</primary></indexterm>g_socket_connection_factory_register_type <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_socket_connection_get_local_address</primary></indexterm>g_socket_connection_get_local_address <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_socket_connection_get_remote_address</primary></indexterm>g_socket_connection_get_remote_address <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_socket_connection_get_socket</primary></indexterm>g_socket_connection_get_socket <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_socket_connection_get_type</primary></indexterm>g_socket_connection_get_type <LINK LINKEND="REFSTD.libgio.2.0.2">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_socket_connection_is_connected</primary></indexterm>g_socket_connection_is_connected <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_socket_control_message_deserialize</primary></indexterm>g_socket_control_message_deserialize <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_socket_control_message_get_level</primary></indexterm>g_socket_control_message_get_level <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_socket_control_message_get_msg_type</primary></indexterm>g_socket_control_message_get_msg_type <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_socket_control_message_get_size</primary></indexterm>g_socket_control_message_get_size <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_socket_control_message_get_type</primary></indexterm>g_socket_control_message_get_type <LINK LINKEND="REFSTD.libgio.2.0.2">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_socket_control_message_serialize</primary></indexterm>g_socket_control_message_serialize <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_socket_create_source</primary></indexterm>g_socket_create_source <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_socket_family_get_type</primary></indexterm>g_socket_family_get_type <LINK LINKEND="REFSTD.libgio.2.0.2">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_socket_get_available_bytes</primary></indexterm>g_socket_get_available_bytes <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_socket_get_blocking</primary></indexterm>g_socket_get_blocking <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_socket_get_broadcast</primary></indexterm>g_socket_get_broadcast <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_socket_get_credentials</primary></indexterm>g_socket_get_credentials <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_socket_get_family</primary></indexterm>g_socket_get_family <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_socket_get_fd</primary></indexterm>g_socket_get_fd <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_socket_get_keepalive</primary></indexterm>g_socket_get_keepalive <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_socket_get_listen_backlog</primary></indexterm>g_socket_get_listen_backlog <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_socket_get_local_address</primary></indexterm>g_socket_get_local_address <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_socket_get_multicast_loopback</primary></indexterm>g_socket_get_multicast_loopback <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_socket_get_multicast_ttl</primary></indexterm>g_socket_get_multicast_ttl <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_socket_get_protocol</primary></indexterm>g_socket_get_protocol <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_socket_get_remote_address</primary></indexterm>g_socket_get_remote_address <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_socket_get_socket_type</primary></indexterm>g_socket_get_socket_type <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_socket_get_timeout</primary></indexterm>g_socket_get_timeout <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_socket_get_ttl</primary></indexterm>g_socket_get_ttl <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_socket_get_type</primary></indexterm>g_socket_get_type <LINK LINKEND="REFSTD.libgio.2.0.2">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_socket_is_closed</primary></indexterm>g_socket_is_closed <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_socket_is_connected</primary></indexterm>g_socket_is_connected <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_socket_join_multicast_group</primary></indexterm>g_socket_join_multicast_group <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_socket_leave_multicast_group</primary></indexterm>g_socket_leave_multicast_group <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_socket_listen</primary></indexterm>g_socket_listen <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_socket_listener_accept</primary></indexterm>g_socket_listener_accept <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_socket_listener_accept_async</primary></indexterm>g_socket_listener_accept_async <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_socket_listener_accept_finish</primary></indexterm>g_socket_listener_accept_finish <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_socket_listener_accept_socket</primary></indexterm>g_socket_listener_accept_socket <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_socket_listener_accept_socket_async</primary></indexterm>g_socket_listener_accept_socket_async <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_socket_listener_accept_socket_finish</primary></indexterm>g_socket_listener_accept_socket_finish <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_socket_listener_add_address</primary></indexterm>g_socket_listener_add_address <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_socket_listener_add_any_inet_port</primary></indexterm>g_socket_listener_add_any_inet_port <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_socket_listener_add_inet_port</primary></indexterm>g_socket_listener_add_inet_port <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_socket_listener_add_socket</primary></indexterm>g_socket_listener_add_socket <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_socket_listener_close</primary></indexterm>g_socket_listener_close <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_socket_listener_get_type</primary></indexterm>g_socket_listener_get_type <LINK LINKEND="REFSTD.libgio.2.0.2">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_socket_listener_new</primary></indexterm>g_socket_listener_new <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_socket_listener_set_backlog</primary></indexterm>g_socket_listener_set_backlog <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_socket_msg_flags_get_type</primary></indexterm>g_socket_msg_flags_get_type <LINK LINKEND="REFSTD.libgio.2.0.2">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_socket_new</primary></indexterm>g_socket_new <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_socket_new_from_fd</primary></indexterm>g_socket_new_from_fd <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_socket_protocol_get_type</primary></indexterm>g_socket_protocol_get_type <LINK LINKEND="REFSTD.libgio.2.0.2">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_socket_receive</primary></indexterm>g_socket_receive <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_socket_receive_from</primary></indexterm>g_socket_receive_from <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_socket_receive_message</primary></indexterm>g_socket_receive_message <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_socket_receive_with_blocking</primary></indexterm>g_socket_receive_with_blocking <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_socket_send</primary></indexterm>g_socket_send <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_socket_send_message</primary></indexterm>g_socket_send_message <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_socket_send_to</primary></indexterm>g_socket_send_to <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_socket_send_with_blocking</primary></indexterm>g_socket_send_with_blocking <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_socket_service_get_type</primary></indexterm>g_socket_service_get_type <LINK LINKEND="REFSTD.libgio.2.0.2">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_socket_service_is_active</primary></indexterm>g_socket_service_is_active <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_socket_service_new</primary></indexterm>g_socket_service_new <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_socket_service_start</primary></indexterm>g_socket_service_start <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_socket_service_stop</primary></indexterm>g_socket_service_stop <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_socket_set_blocking</primary></indexterm>g_socket_set_blocking <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_socket_set_broadcast</primary></indexterm>g_socket_set_broadcast <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_socket_set_keepalive</primary></indexterm>g_socket_set_keepalive <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_socket_set_listen_backlog</primary></indexterm>g_socket_set_listen_backlog <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_socket_set_multicast_loopback</primary></indexterm>g_socket_set_multicast_loopback <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_socket_set_multicast_ttl</primary></indexterm>g_socket_set_multicast_ttl <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_socket_set_timeout</primary></indexterm>g_socket_set_timeout <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_socket_set_ttl</primary></indexterm>g_socket_set_ttl <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_socket_shutdown</primary></indexterm>g_socket_shutdown <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_socket_speaks_ipv4</primary></indexterm>g_socket_speaks_ipv4 <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_socket_type_get_type</primary></indexterm>g_socket_type_get_type <LINK LINKEND="REFSTD.libgio.2.0.2">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_srv_target_copy</primary></indexterm>g_srv_target_copy <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_srv_target_free</primary></indexterm>g_srv_target_free <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_srv_target_get_hostname</primary></indexterm>g_srv_target_get_hostname <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_srv_target_get_port</primary></indexterm>g_srv_target_get_port <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_srv_target_get_priority</primary></indexterm>g_srv_target_get_priority <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_srv_target_get_type</primary></indexterm>g_srv_target_get_type <LINK LINKEND="REFSTD.libgio.2.0.2">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_srv_target_get_weight</primary></indexterm>g_srv_target_get_weight <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_srv_target_list_sort</primary></indexterm>g_srv_target_list_sort <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_srv_target_new</primary></indexterm>g_srv_target_new <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_static_resource_fini</primary></indexterm>g_static_resource_fini <LINK LINKEND="REFSTD.libgio.2.0.3">[LSB]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_static_resource_get_resource</primary></indexterm>g_static_resource_get_resource <LINK LINKEND="REFSTD.libgio.2.0.3">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_static_resource_init</primary></indexterm>g_static_resource_init <LINK LINKEND="REFSTD.libgio.2.0.3">[LSB]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_tcp_connection_get_graceful_disconnect</primary></indexterm>g_tcp_connection_get_graceful_disconnect <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_tcp_connection_get_type</primary></indexterm>g_tcp_connection_get_type <LINK LINKEND="REFSTD.libgio.2.0.2">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_tcp_connection_set_graceful_disconnect</primary></indexterm>g_tcp_connection_set_graceful_disconnect <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_tcp_wrapper_connection_get_base_io_stream</primary></indexterm>g_tcp_wrapper_connection_get_base_io_stream <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_tcp_wrapper_connection_get_type</primary></indexterm>g_tcp_wrapper_connection_get_type <LINK LINKEND="REFSTD.libgio.2.0.2">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_tcp_wrapper_connection_new</primary></indexterm>g_tcp_wrapper_connection_new <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_themed_icon_append_name</primary></indexterm>g_themed_icon_append_name <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_themed_icon_get_names</primary></indexterm>g_themed_icon_get_names <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_themed_icon_get_type</primary></indexterm>g_themed_icon_get_type <LINK LINKEND="REFSTD.libgio.2.0.2">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_themed_icon_new</primary></indexterm>g_themed_icon_new <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_themed_icon_new_from_names</primary></indexterm>g_themed_icon_new_from_names <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_themed_icon_new_with_default_fallbacks</primary></indexterm>g_themed_icon_new_with_default_fallbacks <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_themed_icon_prepend_name</primary></indexterm>g_themed_icon_prepend_name <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_threaded_socket_service_get_type</primary></indexterm>g_threaded_socket_service_get_type <LINK LINKEND="REFSTD.libgio.2.0.2">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_threaded_socket_service_new</primary></indexterm>g_threaded_socket_service_new <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_tls_authentication_mode_get_type</primary></indexterm>g_tls_authentication_mode_get_type <LINK LINKEND="REFSTD.libgio.2.0.2">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_tls_backend_get_certificate_type</primary></indexterm>g_tls_backend_get_certificate_type <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_tls_backend_get_client_connection_type</primary></indexterm>g_tls_backend_get_client_connection_type <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_tls_backend_get_default</primary></indexterm>g_tls_backend_get_default <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_tls_backend_get_default_database</primary></indexterm>g_tls_backend_get_default_database <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_tls_backend_get_file_database_type</primary></indexterm>g_tls_backend_get_file_database_type <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_tls_backend_get_server_connection_type</primary></indexterm>g_tls_backend_get_server_connection_type <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_tls_backend_get_type</primary></indexterm>g_tls_backend_get_type <LINK LINKEND="REFSTD.libgio.2.0.2">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_tls_backend_supports_tls</primary></indexterm>g_tls_backend_supports_tls <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_tls_certificate_flags_get_type</primary></indexterm>g_tls_certificate_flags_get_type <LINK LINKEND="REFSTD.libgio.2.0.2">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_tls_certificate_get_issuer</primary></indexterm>g_tls_certificate_get_issuer <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_tls_certificate_get_type</primary></indexterm>g_tls_certificate_get_type <LINK LINKEND="REFSTD.libgio.2.0.2">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_tls_certificate_list_new_from_file</primary></indexterm>g_tls_certificate_list_new_from_file <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_tls_certificate_new_from_file</primary></indexterm>g_tls_certificate_new_from_file <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_tls_certificate_new_from_files</primary></indexterm>g_tls_certificate_new_from_files <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_tls_certificate_new_from_pem</primary></indexterm>g_tls_certificate_new_from_pem <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_tls_certificate_verify</primary></indexterm>g_tls_certificate_verify <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_tls_client_connection_get_accepted_cas</primary></indexterm>g_tls_client_connection_get_accepted_cas <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_tls_client_connection_get_server_identity</primary></indexterm>g_tls_client_connection_get_server_identity <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_tls_client_connection_get_type</primary></indexterm>g_tls_client_connection_get_type <LINK LINKEND="REFSTD.libgio.2.0.2">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_tls_client_connection_get_use_ssl3</primary></indexterm>g_tls_client_connection_get_use_ssl3 <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_tls_client_connection_get_validation_flags</primary></indexterm>g_tls_client_connection_get_validation_flags <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_tls_client_connection_new</primary></indexterm>g_tls_client_connection_new <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_tls_client_connection_set_server_identity</primary></indexterm>g_tls_client_connection_set_server_identity <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_tls_client_connection_set_use_ssl3</primary></indexterm>g_tls_client_connection_set_use_ssl3 <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_tls_client_connection_set_validation_flags</primary></indexterm>g_tls_client_connection_set_validation_flags <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_tls_connection_emit_accept_certificate</primary></indexterm>g_tls_connection_emit_accept_certificate <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_tls_connection_get_certificate</primary></indexterm>g_tls_connection_get_certificate <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_tls_connection_get_database</primary></indexterm>g_tls_connection_get_database <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_tls_connection_get_interaction</primary></indexterm>g_tls_connection_get_interaction <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_tls_connection_get_peer_certificate</primary></indexterm>g_tls_connection_get_peer_certificate <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_tls_connection_get_peer_certificate_errors</primary></indexterm>g_tls_connection_get_peer_certificate_errors <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_tls_connection_get_rehandshake_mode</primary></indexterm>g_tls_connection_get_rehandshake_mode <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_tls_connection_get_require_close_notify</primary></indexterm>g_tls_connection_get_require_close_notify <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_tls_connection_get_type</primary></indexterm>g_tls_connection_get_type <LINK LINKEND="REFSTD.libgio.2.0.2">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_tls_connection_get_use_system_certdb</primary></indexterm>g_tls_connection_get_use_system_certdb <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_tls_connection_handshake</primary></indexterm>g_tls_connection_handshake <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_tls_connection_handshake_async</primary></indexterm>g_tls_connection_handshake_async <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_tls_connection_handshake_finish</primary></indexterm>g_tls_connection_handshake_finish <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_tls_connection_set_certificate</primary></indexterm>g_tls_connection_set_certificate <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_tls_connection_set_database</primary></indexterm>g_tls_connection_set_database <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_tls_connection_set_interaction</primary></indexterm>g_tls_connection_set_interaction <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_tls_connection_set_rehandshake_mode</primary></indexterm>g_tls_connection_set_rehandshake_mode <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_tls_connection_set_require_close_notify</primary></indexterm>g_tls_connection_set_require_close_notify <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_tls_connection_set_use_system_certdb</primary></indexterm>g_tls_connection_set_use_system_certdb <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_tls_database_create_certificate_handle</primary></indexterm>g_tls_database_create_certificate_handle <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_tls_database_get_type</primary></indexterm>g_tls_database_get_type <LINK LINKEND="REFSTD.libgio.2.0.2">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_tls_database_lookup_certificate_for_handle</primary></indexterm>g_tls_database_lookup_certificate_for_handle <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_tls_database_lookup_certificate_for_handle_async</primary></indexterm>g_tls_database_lookup_certificate_for_handle_async <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_tls_database_lookup_certificate_for_handle_finish</primary></indexterm>g_tls_database_lookup_certificate_for_handle_finish <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_tls_database_lookup_certificate_issuer</primary></indexterm>g_tls_database_lookup_certificate_issuer <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_tls_database_lookup_certificate_issuer_async</primary></indexterm>g_tls_database_lookup_certificate_issuer_async <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_tls_database_lookup_certificate_issuer_finish</primary></indexterm>g_tls_database_lookup_certificate_issuer_finish <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_tls_database_lookup_certificates_issued_by</primary></indexterm>g_tls_database_lookup_certificates_issued_by <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_tls_database_lookup_certificates_issued_by_async</primary></indexterm>g_tls_database_lookup_certificates_issued_by_async <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_tls_database_lookup_certificates_issued_by_finish</primary></indexterm>g_tls_database_lookup_certificates_issued_by_finish <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_tls_database_lookup_flags_get_type</primary></indexterm>g_tls_database_lookup_flags_get_type <LINK LINKEND="REFSTD.libgio.2.0.2">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_tls_database_verify_chain</primary></indexterm>g_tls_database_verify_chain <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_tls_database_verify_chain_async</primary></indexterm>g_tls_database_verify_chain_async <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_tls_database_verify_chain_finish</primary></indexterm>g_tls_database_verify_chain_finish <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_tls_database_verify_flags_get_type</primary></indexterm>g_tls_database_verify_flags_get_type <LINK LINKEND="REFSTD.libgio.2.0.2">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_tls_error_get_type</primary></indexterm>g_tls_error_get_type <LINK LINKEND="REFSTD.libgio.2.0.2">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_tls_error_quark</primary></indexterm>g_tls_error_quark <LINK LINKEND="REFSTD.libgio.2.0.3">[LSB]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_tls_file_database_get_type</primary></indexterm>g_tls_file_database_get_type <LINK LINKEND="REFSTD.libgio.2.0.2">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_tls_file_database_new</primary></indexterm>g_tls_file_database_new <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_tls_interaction_ask_password</primary></indexterm>g_tls_interaction_ask_password <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_tls_interaction_ask_password_async</primary></indexterm>g_tls_interaction_ask_password_async <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_tls_interaction_ask_password_finish</primary></indexterm>g_tls_interaction_ask_password_finish <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_tls_interaction_get_type</primary></indexterm>g_tls_interaction_get_type <LINK LINKEND="REFSTD.libgio.2.0.2">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_tls_interaction_invoke_ask_password</primary></indexterm>g_tls_interaction_invoke_ask_password <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_tls_interaction_result_get_type</primary></indexterm>g_tls_interaction_result_get_type <LINK LINKEND="REFSTD.libgio.2.0.2">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_tls_password_flags_get_type</primary></indexterm>g_tls_password_flags_get_type <LINK LINKEND="REFSTD.libgio.2.0.2">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_tls_password_get_description</primary></indexterm>g_tls_password_get_description <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_tls_password_get_flags</primary></indexterm>g_tls_password_get_flags <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_tls_password_get_type</primary></indexterm>g_tls_password_get_type <LINK LINKEND="REFSTD.libgio.2.0.2">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_tls_password_get_value</primary></indexterm>g_tls_password_get_value <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_tls_password_get_warning</primary></indexterm>g_tls_password_get_warning <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_tls_password_new</primary></indexterm>g_tls_password_new <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_tls_password_set_description</primary></indexterm>g_tls_password_set_description <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_tls_password_set_flags</primary></indexterm>g_tls_password_set_flags <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_tls_password_set_value</primary></indexterm>g_tls_password_set_value <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_tls_password_set_value_full</primary></indexterm>g_tls_password_set_value_full <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_tls_password_set_warning</primary></indexterm>g_tls_password_set_warning <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_tls_rehandshake_mode_get_type</primary></indexterm>g_tls_rehandshake_mode_get_type <LINK LINKEND="REFSTD.libgio.2.0.2">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_tls_server_connection_get_type</primary></indexterm>g_tls_server_connection_get_type <LINK LINKEND="REFSTD.libgio.2.0.2">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_tls_server_connection_new</primary></indexterm>g_tls_server_connection_new <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_unix_connection_get_type</primary></indexterm>g_unix_connection_get_type <LINK LINKEND="REFSTD.libgio.2.0.2">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_unix_connection_receive_credentials</primary></indexterm>g_unix_connection_receive_credentials <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_unix_connection_receive_credentials_async</primary></indexterm>g_unix_connection_receive_credentials_async <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_unix_connection_receive_credentials_finish</primary></indexterm>g_unix_connection_receive_credentials_finish <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_unix_connection_receive_fd</primary></indexterm>g_unix_connection_receive_fd <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_unix_connection_send_credentials</primary></indexterm>g_unix_connection_send_credentials <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_unix_connection_send_credentials_async</primary></indexterm>g_unix_connection_send_credentials_async <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_unix_connection_send_credentials_finish</primary></indexterm>g_unix_connection_send_credentials_finish <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_unix_connection_send_fd</primary></indexterm>g_unix_connection_send_fd <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_unix_credentials_message_get_credentials</primary></indexterm>g_unix_credentials_message_get_credentials <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_unix_credentials_message_get_type</primary></indexterm>g_unix_credentials_message_get_type <LINK LINKEND="REFSTD.libgio.2.0.2">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_unix_credentials_message_is_supported</primary></indexterm>g_unix_credentials_message_is_supported <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_unix_credentials_message_new</primary></indexterm>g_unix_credentials_message_new <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_unix_credentials_message_new_with_credentials</primary></indexterm>g_unix_credentials_message_new_with_credentials <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_unix_fd_list_append</primary></indexterm>g_unix_fd_list_append <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_unix_fd_list_get</primary></indexterm>g_unix_fd_list_get <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_unix_fd_list_get_length</primary></indexterm>g_unix_fd_list_get_length <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_unix_fd_list_get_type</primary></indexterm>g_unix_fd_list_get_type <LINK LINKEND="REFSTD.libgio.2.0.2">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_unix_fd_list_new</primary></indexterm>g_unix_fd_list_new <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_unix_fd_list_new_from_array</primary></indexterm>g_unix_fd_list_new_from_array <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_unix_fd_list_peek_fds</primary></indexterm>g_unix_fd_list_peek_fds <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_unix_fd_list_steal_fds</primary></indexterm>g_unix_fd_list_steal_fds <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_unix_fd_message_append_fd</primary></indexterm>g_unix_fd_message_append_fd <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_unix_fd_message_get_fd_list</primary></indexterm>g_unix_fd_message_get_fd_list <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_unix_fd_message_get_type</primary></indexterm>g_unix_fd_message_get_type <LINK LINKEND="REFSTD.libgio.2.0.2">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_unix_fd_message_new</primary></indexterm>g_unix_fd_message_new <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_unix_fd_message_new_with_fd_list</primary></indexterm>g_unix_fd_message_new_with_fd_list <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_unix_fd_message_steal_fds</primary></indexterm>g_unix_fd_message_steal_fds <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_unix_input_stream_get_close_fd</primary></indexterm>g_unix_input_stream_get_close_fd <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_unix_input_stream_get_fd</primary></indexterm>g_unix_input_stream_get_fd <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_unix_input_stream_get_type</primary></indexterm>g_unix_input_stream_get_type <LINK LINKEND="REFSTD.libgio.2.0.2">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_unix_input_stream_new</primary></indexterm>g_unix_input_stream_new <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_unix_input_stream_set_close_fd</primary></indexterm>g_unix_input_stream_set_close_fd <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_unix_is_mount_path_system_internal</primary></indexterm>g_unix_is_mount_path_system_internal <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_unix_mount_at</primary></indexterm>g_unix_mount_at <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_unix_mount_compare</primary></indexterm>g_unix_mount_compare <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_unix_mount_free</primary></indexterm>g_unix_mount_free <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_unix_mount_get_device_path</primary></indexterm>g_unix_mount_get_device_path <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_unix_mount_get_fs_type</primary></indexterm>g_unix_mount_get_fs_type <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_unix_mount_get_mount_path</primary></indexterm>g_unix_mount_get_mount_path <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_unix_mount_guess_can_eject</primary></indexterm>g_unix_mount_guess_can_eject <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_unix_mount_guess_icon</primary></indexterm>g_unix_mount_guess_icon <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_unix_mount_guess_name</primary></indexterm>g_unix_mount_guess_name <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_unix_mount_guess_should_display</primary></indexterm>g_unix_mount_guess_should_display <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_unix_mount_is_readonly</primary></indexterm>g_unix_mount_is_readonly <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_unix_mount_is_system_internal</primary></indexterm>g_unix_mount_is_system_internal <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_unix_mount_monitor_get_type</primary></indexterm>g_unix_mount_monitor_get_type <LINK LINKEND="REFSTD.libgio.2.0.2">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_unix_mount_monitor_new</primary></indexterm>g_unix_mount_monitor_new <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_unix_mount_monitor_set_rate_limit</primary></indexterm>g_unix_mount_monitor_set_rate_limit <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_unix_mount_point_compare</primary></indexterm>g_unix_mount_point_compare <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_unix_mount_point_free</primary></indexterm>g_unix_mount_point_free <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_unix_mount_point_get_device_path</primary></indexterm>g_unix_mount_point_get_device_path <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_unix_mount_point_get_fs_type</primary></indexterm>g_unix_mount_point_get_fs_type <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_unix_mount_point_get_mount_path</primary></indexterm>g_unix_mount_point_get_mount_path <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_unix_mount_point_get_options</primary></indexterm>g_unix_mount_point_get_options <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_unix_mount_point_guess_can_eject</primary></indexterm>g_unix_mount_point_guess_can_eject <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_unix_mount_point_guess_icon</primary></indexterm>g_unix_mount_point_guess_icon <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_unix_mount_point_guess_name</primary></indexterm>g_unix_mount_point_guess_name <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_unix_mount_point_is_loopback</primary></indexterm>g_unix_mount_point_is_loopback <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_unix_mount_point_is_readonly</primary></indexterm>g_unix_mount_point_is_readonly <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_unix_mount_point_is_user_mountable</primary></indexterm>g_unix_mount_point_is_user_mountable <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_unix_mount_points_changed_since</primary></indexterm>g_unix_mount_points_changed_since <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_unix_mount_points_get</primary></indexterm>g_unix_mount_points_get <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_unix_mounts_changed_since</primary></indexterm>g_unix_mounts_changed_since <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_unix_mounts_get</primary></indexterm>g_unix_mounts_get <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_unix_output_stream_get_close_fd</primary></indexterm>g_unix_output_stream_get_close_fd <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_unix_output_stream_get_fd</primary></indexterm>g_unix_output_stream_get_fd <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_unix_output_stream_get_type</primary></indexterm>g_unix_output_stream_get_type <LINK LINKEND="REFSTD.libgio.2.0.2">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_unix_output_stream_new</primary></indexterm>g_unix_output_stream_new <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_unix_output_stream_set_close_fd</primary></indexterm>g_unix_output_stream_set_close_fd <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_unix_socket_address_abstract_names_supported</primary></indexterm>g_unix_socket_address_abstract_names_supported <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_unix_socket_address_get_address_type</primary></indexterm>g_unix_socket_address_get_address_type <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_unix_socket_address_get_is_abstract</primary></indexterm>g_unix_socket_address_get_is_abstract <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_unix_socket_address_get_path</primary></indexterm>g_unix_socket_address_get_path <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_unix_socket_address_get_path_len</primary></indexterm>g_unix_socket_address_get_path_len <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_unix_socket_address_get_type</primary></indexterm>g_unix_socket_address_get_type <LINK LINKEND="REFSTD.libgio.2.0.2">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_unix_socket_address_new</primary></indexterm>g_unix_socket_address_new <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_unix_socket_address_new_abstract</primary></indexterm>g_unix_socket_address_new_abstract <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_unix_socket_address_new_with_type</primary></indexterm>g_unix_socket_address_new_with_type <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_unix_socket_address_type_get_type</primary></indexterm>g_unix_socket_address_type_get_type <LINK LINKEND="REFSTD.libgio.2.0.2">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_vfs_get_default</primary></indexterm>g_vfs_get_default <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_vfs_get_file_for_path</primary></indexterm>g_vfs_get_file_for_path <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_vfs_get_file_for_uri</primary></indexterm>g_vfs_get_file_for_uri <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_vfs_get_local</primary></indexterm>g_vfs_get_local <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_vfs_get_supported_uri_schemes</primary></indexterm>g_vfs_get_supported_uri_schemes <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_vfs_get_type</primary></indexterm>g_vfs_get_type <LINK LINKEND="REFSTD.libgio.2.0.2">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_vfs_is_active</primary></indexterm>g_vfs_is_active <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_vfs_parse_name</primary></indexterm>g_vfs_parse_name <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_volume_can_eject</primary></indexterm>g_volume_can_eject <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_volume_can_mount</primary></indexterm>g_volume_can_mount <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_volume_eject</primary></indexterm>g_volume_eject <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_volume_eject_finish</primary></indexterm>g_volume_eject_finish <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_volume_eject_with_operation</primary></indexterm>g_volume_eject_with_operation <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_volume_eject_with_operation_finish</primary></indexterm>g_volume_eject_with_operation_finish <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_volume_enumerate_identifiers</primary></indexterm>g_volume_enumerate_identifiers <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_volume_get_activation_root</primary></indexterm>g_volume_get_activation_root <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_volume_get_drive</primary></indexterm>g_volume_get_drive <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_volume_get_icon</primary></indexterm>g_volume_get_icon <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_volume_get_identifier</primary></indexterm>g_volume_get_identifier <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_volume_get_mount</primary></indexterm>g_volume_get_mount <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_volume_get_name</primary></indexterm>g_volume_get_name <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_volume_get_sort_key</primary></indexterm>g_volume_get_sort_key <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_volume_get_type</primary></indexterm>g_volume_get_type <LINK LINKEND="REFSTD.libgio.2.0.2">[Gobject 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_volume_get_uuid</primary></indexterm>g_volume_get_uuid <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_volume_monitor_adopt_orphan_mount</primary></indexterm>g_volume_monitor_adopt_orphan_mount <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_volume_monitor_get</primary></indexterm>g_volume_monitor_get <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_volume_monitor_get_connected_drives</primary></indexterm>g_volume_monitor_get_connected_drives <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_volume_monitor_get_mount_for_uuid</primary></indexterm>g_volume_monitor_get_mount_for_uuid <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_volume_monitor_get_mounts</primary></indexterm>g_volume_monitor_get_mounts <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_volume_monitor_get_type</primary></indexterm>g_volume_monitor_get_type <LINK LINKEND="REFSTD.libgio.2.0.2">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_volume_monitor_get_volume_for_uuid</primary></indexterm>g_volume_monitor_get_volume_for_uuid <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_volume_monitor_get_volumes</primary></indexterm>g_volume_monitor_get_volumes <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_volume_mount</primary></indexterm>g_volume_mount <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_volume_mount_finish</primary></indexterm>g_volume_mount_finish <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_volume_should_automount</primary></indexterm>g_volume_should_automount <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_zlib_compressor_format_get_type</primary></indexterm>g_zlib_compressor_format_get_type <LINK LINKEND="REFSTD.libgio.2.0.2">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_zlib_compressor_get_file_info</primary></indexterm>g_zlib_compressor_get_file_info <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_zlib_compressor_get_type</primary></indexterm>g_zlib_compressor_get_type <LINK LINKEND="REFSTD.libgio.2.0.2">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_zlib_compressor_new</primary></indexterm>g_zlib_compressor_new <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_zlib_compressor_set_file_info</primary></indexterm>g_zlib_compressor_set_file_info <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_zlib_decompressor_get_file_info</primary></indexterm>g_zlib_decompressor_get_file_info <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_zlib_decompressor_get_type</primary></indexterm>g_zlib_decompressor_get_type <LINK LINKEND="REFSTD.libgio.2.0.2">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_zlib_decompressor_new</primary></indexterm>g_zlib_decompressor_new <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
An LSB conforming implementation shall provide the generic deprecated functions
for libgio-2.0 interfaces specified in <XREF linkend="tbl-libgio-2.0-libgi-depints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<NOTE><PARA>These interfaces are deprecated, and applications
should avoid using them.
These interfaces may be withdrawn
in future releases of this specification.
</PARA></NOTE>
<!--libgroupdepints-->
<TABLE id="tbl-libgio-2.0-libgi-depints">
<TITLE>libgio-2.0 - libgio-2.0 interfaces Deprecated Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>g_application_set_action_group</primary></indexterm>g_application_set_action_group <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_desktop_app_info_lookup_get_default_for_uri_scheme</primary></indexterm>g_desktop_app_info_lookup_get_default_for_uri_scheme <LINK LINKEND="REFSTD.libgio.2.0.3">[LSB]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_desktop_app_info_lookup_get_type</primary></indexterm>g_desktop_app_info_lookup_get_type <LINK LINKEND="REFSTD.libgio.2.0.2">[Gobject 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_drive_eject</primary></indexterm>g_drive_eject <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_drive_eject_finish</primary></indexterm>g_drive_eject_finish <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_file_eject_mountable</primary></indexterm>g_file_eject_mountable <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_file_eject_mountable_finish</primary></indexterm>g_file_eject_mountable_finish <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_file_unmount_mountable</primary></indexterm>g_file_unmount_mountable <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_file_unmount_mountable_finish</primary></indexterm>g_file_unmount_mountable_finish <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_mount_eject</primary></indexterm>g_mount_eject <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_mount_eject_finish</primary></indexterm>g_mount_eject_finish <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_mount_unmount</primary></indexterm>g_mount_unmount <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_mount_unmount_finish</primary></indexterm>g_mount_unmount_finish <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_tls_connection_get_use_system_certdb</primary></indexterm>g_tls_connection_get_use_system_certdb <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_tls_connection_set_use_system_certdb</primary></indexterm>g_tls_connection_set_use_system_certdb <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_unix_socket_address_get_is_abstract</primary></indexterm>g_unix_socket_address_get_is_abstract <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_unix_socket_address_new_abstract</primary></indexterm>g_unix_socket_address_new_abstract <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_volume_eject</primary></indexterm>g_volume_eject <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_volume_eject_finish</primary></indexterm>g_volume_eject_finish <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_volume_monitor_adopt_orphan_mount</primary></indexterm>g_volume_monitor_adopt_orphan_mount <LINK LINKEND="REFSTD.libgio.2.0.1">[Gio 2.32]</LINK></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>
</SECT2>
</SECT1>
<SECT1 ID=libgio-2.0-ddefs>
<TITLE>Data Definitions for libgio-2.0</TITLE>
<PARA>
This section defines global identifiers and their values that are associated
with interfaces contained in libgio-2.0.
These definitions are organized into groups that
correspond to system headers. This convention is used as a
convenience for the reader, and does not imply the existence
of these headers, or their content.
Where an interface is defined as requiring a particular system header file
all of the data definitions for that system header file presented here shall be in effect.
</PARA>
<PARA>
This section gives data definitions to promote binary application
portability, not to repeat source interface definitions available
elsewhere. System providers and application developers should use this ABI
to supplement - not to replace - source interface definition specifications.
</PARA>
<PARA>
This specification uses the <XREF LINKEND='std.ISOC99'> C Language as the reference programming language, and data definitions are specified in ISO C format. The C language is used here as a convenient notation. Using a C language description of these data objects does not preclude their use by other programming languages.</PARA>
<SECT2>
<TITLE>gio-unix-2.0/gio/gdesktopappinfo.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define G_TYPE_DESKTOP_APP_INFO	(g_desktop_app_info_get_type ())
#define G_TYPE_DESKTOP_APP_INFO_LOOKUP	(g_desktop_app_info_lookup_get_type ())	/* DEPRECATED */
#define G_DESKTOP_APP_INFO_CLASS(k)	(G_TYPE_CHECK_CLASS_CAST((k), G_TYPE_DESKTOP_APP_INFO, GDesktopAppInfoClass))
#define G_IS_DESKTOP_APP_INFO_CLASS(k)	(G_TYPE_CHECK_CLASS_TYPE ((k), G_TYPE_DESKTOP_APP_INFO))
#define G_DESKTOP_APP_INFO(o)	(G_TYPE_CHECK_INSTANCE_CAST ((o), G_TYPE_DESKTOP_APP_INFO, GDesktopAppInfo))
#define G_DESKTOP_APP_INFO_LOOKUP(obj)	(G_TYPE_CHECK_INSTANCE_CAST ((obj), G_TYPE_DESKTOP_APP_INFO_LOOKUP, GDesktopAppInfoLookup))	/* DEPRECATED */
#define G_IS_DESKTOP_APP_INFO(o)	(G_TYPE_CHECK_INSTANCE_TYPE ((o), G_TYPE_DESKTOP_APP_INFO))
#define G_IS_DESKTOP_APP_INFO_LOOKUP(obj)	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), G_TYPE_DESKTOP_APP_INFO_LOOKUP))	/* DEPRECATED */
#define G_DESKTOP_APP_INFO_GET_CLASS(o)	(G_TYPE_INSTANCE_GET_CLASS ((o), G_TYPE_DESKTOP_APP_INFO, GDesktopAppInfoClass))
#define G_DESKTOP_APP_INFO_LOOKUP_GET_IFACE(obj)	(G_TYPE_INSTANCE_GET_INTERFACE ((obj), G_TYPE_DESKTOP_APP_INFO_LOOKUP, GDesktopAppInfoLookupIface))	/* DEPRECATED */
#define G_DESKTOP_APP_INFO_LOOKUP_EXTENSION_POINT_NAME	"gio-desktop-app-info-lookup"	/* DEPRECATED */

typedef struct _GDesktopAppInfo GDesktopAppInfo;
typedef struct _GDesktopAppInfoClass {
    GObjectClass parent_class;
} GDesktopAppInfoClass;
typedef struct _GDesktopAppInfoLookup GDesktopAppInfoLookup;
typedef struct _GDesktopAppInfoLookupIface {
    GTypeInterface g_iface;
    GAppInfo *(*get_default_for_uri_scheme) (GDesktopAppInfoLookup *
					     lookup,
					     const char *uri_scheme);
} GDesktopAppInfoLookupIface;
typedef void (*GDesktopAppLaunchCallback) (GDesktopAppInfo * appinfo,
					   GPid pid, gpointer user_data);
extern const char *g_desktop_app_info_get_categories(GDesktopAppInfo *
						     info);
extern const char *g_desktop_app_info_get_filename(GDesktopAppInfo * info);
extern const char *g_desktop_app_info_get_generic_name(GDesktopAppInfo *
						       info);
extern gboolean g_desktop_app_info_get_is_hidden(GDesktopAppInfo * info);
extern const char *const *g_desktop_app_info_get_keywords(GDesktopAppInfo *
							  info);
extern gboolean g_desktop_app_info_get_nodisplay(GDesktopAppInfo * info);
extern gboolean g_desktop_app_info_get_show_in(GDesktopAppInfo * info,
					       const char *desktop_env);
extern GType g_desktop_app_info_get_type(void);
extern gboolean g_desktop_app_info_launch_uris_as_manager(GDesktopAppInfo *
							  appinfo,
							  GList * uris,
							  GAppLaunchContext
							  * launch_context,
							  GSpawnFlags
							  spawn_flags,
							  GSpawnChildSetupFunc
							  user_setup,
							  gpointer
							  user_setup_data,
							  GDesktopAppLaunchCallback
							  pid_callback,
							  gpointer
							  pid_callback_data,
							  GError * *error);
extern GAppInfo
    *g_desktop_app_info_lookup_get_default_for_uri_scheme
    (GDesktopAppInfoLookup * lookup, const char *uri_scheme);
extern GType g_desktop_app_info_lookup_get_type(void);
extern GDesktopAppInfo *g_desktop_app_info_new(const char *desktop_id);
extern GDesktopAppInfo *g_desktop_app_info_new_from_filename(const char
							     *filename);
extern GDesktopAppInfo *g_desktop_app_info_new_from_keyfile(GKeyFile *
							    key_file);
extern void g_desktop_app_info_set_desktop_env(const char *desktop_env);
</SCREEN>
</SECT2>
<SECT2>
<TITLE>gio-unix-2.0/gio/gfiledescriptorbased.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define G_TYPE_FILE_DESCRIPTOR_BASED	(g_file_descriptor_based_get_type ())
#define G_FILE_DESCRIPTOR_BASED(obj)	(G_TYPE_CHECK_INSTANCE_CAST ((obj), G_TYPE_FILE_DESCRIPTOR_BASED, GFileDescriptorBased))
#define G_IS_FILE_DESCRIPTOR_BASED(obj)	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), G_TYPE_FILE_DESCRIPTOR_BASED))
#define G_FILE_DESCRIPTOR_BASED_GET_IFACE(obj)	(G_TYPE_INSTANCE_GET_INTERFACE ((obj), G_TYPE_FILE_DESCRIPTOR_BASED, GFileDescriptorBasedIface))

typedef struct _GFileDescriptorBasedIface {
    GTypeInterface g_iface;
    int (*get_fd) (GFileDescriptorBased * fd_based);
} GFileDescriptorBasedIface;
extern int g_file_descriptor_based_get_fd(GFileDescriptorBased * fd_based);
extern GType g_file_descriptor_based_get_type(void);
</SCREEN>
</SECT2>
<SECT2>
<TITLE>gio-unix-2.0/gio/gunixconnection.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define G_UNIX_CONNECTION_CLASS(class)	(G_TYPE_CHECK_CLASS_CAST ((class), G_TYPE_UNIX_CONNECTION, GUnixConnectionClass))
#define G_IS_UNIX_CONNECTION_CLASS(class)	(G_TYPE_CHECK_CLASS_TYPE ((class), G_TYPE_UNIX_CONNECTION))
#define G_UNIX_CONNECTION(inst)	(G_TYPE_CHECK_INSTANCE_CAST ((inst), G_TYPE_UNIX_CONNECTION, GUnixConnection))
#define G_IS_UNIX_CONNECTION(inst)	(G_TYPE_CHECK_INSTANCE_TYPE ((inst), G_TYPE_UNIX_CONNECTION))
#define G_UNIX_CONNECTION_GET_CLASS(inst)	(G_TYPE_INSTANCE_GET_CLASS ((inst), G_TYPE_UNIX_CONNECTION, GUnixConnectionClass))
#define G_TYPE_UNIX_CONNECTION	(g_unix_connection_get_type ())

typedef struct _GUnixConnection {
    GSocketConnection parent_instance;
    GUnixConnectionPrivate *priv;
} GUnixConnection;
typedef struct _GUnixConnectionPrivate GUnixConnectionPrivate;
typedef struct _GUnixConnectionClass {
    GSocketConnectionClass parent_class;
} GUnixConnectionClass;
extern GType g_unix_connection_get_type(void);
extern GCredentials *g_unix_connection_receive_credentials(GUnixConnection
							   * connection,
							   GCancellable *
							   cancellable,
							   GError *
							   *error);
extern void g_unix_connection_receive_credentials_async(GUnixConnection *
							connection,
							GCancellable *
							cancellable,
							GAsyncReadyCallback
							callback,
							gpointer
							user_data);
extern GCredentials
    *g_unix_connection_receive_credentials_finish(GUnixConnection *
						  connection,
						  GAsyncResult * result,
						  GError * *error);
extern gint g_unix_connection_receive_fd(GUnixConnection * connection,
					 GCancellable * cancellable,
					 GError * *error);
extern gboolean g_unix_connection_send_credentials(GUnixConnection *
						   connection,
						   GCancellable *
						   cancellable,
						   GError * *error);
extern void g_unix_connection_send_credentials_async(GUnixConnection *
						     connection,
						     GCancellable *
						     cancellable,
						     GAsyncReadyCallback
						     callback,
						     gpointer user_data);
extern gboolean g_unix_connection_send_credentials_finish(GUnixConnection *
							  connection,
							  GAsyncResult *
							  result,
							  GError * *error);
extern gboolean g_unix_connection_send_fd(GUnixConnection * connection,
					  gint fd,
					  GCancellable * cancellable,
					  GError * *error);
</SCREEN>
</SECT2>
<SECT2>
<TITLE>gio-unix-2.0/gio/gunixcredentialsmessage.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define G_UNIX_CREDENTIALS_MESSAGE_CLASS(c)	(G_TYPE_CHECK_CLASS_CAST ((c), G_TYPE_UNIX_CREDENTIALS_MESSAGE, GUnixCredentialsMessageClass))
#define G_IS_UNIX_CREDENTIALS_MESSAGE_CLASS(c)	(G_TYPE_CHECK_CLASS_TYPE ((c), G_TYPE_UNIX_CREDENTIALS_MESSAGE))
#define G_UNIX_CREDENTIALS_MESSAGE(o)	(G_TYPE_CHECK_INSTANCE_CAST ((o), G_TYPE_UNIX_CREDENTIALS_MESSAGE, GUnixCredentialsMessage))
#define G_IS_UNIX_CREDENTIALS_MESSAGE(o)	(G_TYPE_CHECK_INSTANCE_TYPE ((o), G_TYPE_UNIX_CREDENTIALS_MESSAGE))
#define G_UNIX_CREDENTIALS_MESSAGE_GET_CLASS(o)	(G_TYPE_INSTANCE_GET_CLASS ((o), G_TYPE_UNIX_CREDENTIALS_MESSAGE, GUnixCredentialsMessageClass))
#define G_TYPE_UNIX_CREDENTIALS_MESSAGE	(g_unix_credentials_message_get_type ())

typedef struct _GUnixCredentialsMessagePrivate
    GUnixCredentialsMessagePrivate;
typedef struct _GUnixCredentialsMessageClass {
    GSocketControlMessageClass parent_class;
    void (*_g_reserved1) (void);
    void (*_g_reserved2) (void);
} GUnixCredentialsMessageClass;
struct _GUnixCredentialsMessage {
    GSocketControlMessage parent_instance;
    GUnixCredentialsMessagePrivate *priv;
};
extern GCredentials
    *g_unix_credentials_message_get_credentials(GUnixCredentialsMessage *
						message);
extern GType g_unix_credentials_message_get_type(void);
extern gboolean g_unix_credentials_message_is_supported(void);
extern GSocketControlMessage *g_unix_credentials_message_new(void);
extern GSocketControlMessage
    *g_unix_credentials_message_new_with_credentials(GCredentials *
						     credentials);
</SCREEN>
</SECT2>
<SECT2>
<TITLE>gio-unix-2.0/gio/gunixfdlist.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define G_UNIX_FD_LIST_CLASS(class)	(G_TYPE_CHECK_CLASS_CAST ((class), G_TYPE_UNIX_FD_LIST, GUnixFDListClass))
#define G_IS_UNIX_FD_LIST_CLASS(class)	(G_TYPE_CHECK_CLASS_TYPE ((class), G_TYPE_UNIX_FD_LIST))
#define G_UNIX_FD_LIST(inst)	(G_TYPE_CHECK_INSTANCE_CAST ((inst), G_TYPE_UNIX_FD_LIST, GUnixFDList))
#define G_IS_UNIX_FD_LIST(inst)	(G_TYPE_CHECK_INSTANCE_TYPE ((inst), G_TYPE_UNIX_FD_LIST))
#define G_UNIX_FD_LIST_GET_CLASS(inst)	(G_TYPE_INSTANCE_GET_CLASS ((inst), G_TYPE_UNIX_FD_LIST, GUnixFDListClass))
#define G_TYPE_UNIX_FD_LIST	(g_unix_fd_list_get_type ())

typedef struct _GUnixFDListPrivate GUnixFDListPrivate;
typedef struct _GUnixFDListClass {
    GObjectClass parent_class;
    void (*_g_reserved1) (void);
    void (*_g_reserved2) (void);
    void (*_g_reserved3) (void);
    void (*_g_reserved4) (void);
    void (*_g_reserved5) (void);
} GUnixFDListClass;
struct _GUnixFDList {
    GObject parent_instance;
    GUnixFDListPrivate *priv;
};
extern gint g_unix_fd_list_append(GUnixFDList * list, gint fd,
				  GError * *error);
extern gint g_unix_fd_list_get(GUnixFDList * list, gint index_,
			       GError * *error);
extern gint g_unix_fd_list_get_length(GUnixFDList * list);
extern GType g_unix_fd_list_get_type(void);
extern GUnixFDList *g_unix_fd_list_new(void);
extern GUnixFDList *g_unix_fd_list_new_from_array(const int *fds,
						  gint n_fds);
extern const int *g_unix_fd_list_peek_fds(GUnixFDList * list,
					  gint * length);
extern gint *g_unix_fd_list_steal_fds(GUnixFDList * list, gint * length);
</SCREEN>
</SECT2>
<SECT2>
<TITLE>gio-unix-2.0/gio/gunixfdmessage.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define G_UNIX_FD_MESSAGE_CLASS(class)	(G_TYPE_CHECK_CLASS_CAST ((class), G_TYPE_UNIX_FD_MESSAGE, GUnixFDMessageClass))
#define G_IS_UNIX_FD_MESSAGE_CLASS(class)	(G_TYPE_CHECK_CLASS_TYPE ((class), G_TYPE_UNIX_FD_MESSAGE))
#define G_UNIX_FD_MESSAGE(inst)	(G_TYPE_CHECK_INSTANCE_CAST ((inst), G_TYPE_UNIX_FD_MESSAGE, GUnixFDMessage))
#define G_IS_UNIX_FD_MESSAGE(inst)	(G_TYPE_CHECK_INSTANCE_TYPE ((inst), G_TYPE_UNIX_FD_MESSAGE))
#define G_UNIX_FD_MESSAGE_GET_CLASS(inst)	(G_TYPE_INSTANCE_GET_CLASS ((inst), G_TYPE_UNIX_FD_MESSAGE, GUnixFDMessageClass))
#define G_TYPE_UNIX_FD_MESSAGE	(g_unix_fd_message_get_type ())

typedef struct _GUnixFDMessagePrivate GUnixFDMessagePrivate;
typedef struct _GUnixFDMessageClass {
    GSocketControlMessageClass parent_class;
    void (*_g_reserved1) (void);
    void (*_g_reserved2) (void);
} GUnixFDMessageClass;
typedef struct _GUnixFDMessage {
    GSocketControlMessage parent_instance;
    GUnixFDMessagePrivate *priv;
} GUnixFDMessage;
extern gboolean g_unix_fd_message_append_fd(GUnixFDMessage * message,
					    gint fd, GError * *error);
extern GUnixFDList *g_unix_fd_message_get_fd_list(GUnixFDMessage *
						  message);
extern GType g_unix_fd_message_get_type(void);
extern GSocketControlMessage *g_unix_fd_message_new(void);
extern GSocketControlMessage
    *g_unix_fd_message_new_with_fd_list(GUnixFDList * fd_list);
extern gint *g_unix_fd_message_steal_fds(GUnixFDMessage * message,
					 gint * length);
</SCREEN>
</SECT2>
<SECT2>
<TITLE>gio-unix-2.0/gio/gunixinputstream.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define G_UNIX_INPUT_STREAM_CLASS(k)	(G_TYPE_CHECK_CLASS_CAST((k), G_TYPE_UNIX_INPUT_STREAM, GUnixInputStreamClass))
#define G_IS_UNIX_INPUT_STREAM_CLASS(k)	(G_TYPE_CHECK_CLASS_TYPE ((k), G_TYPE_UNIX_INPUT_STREAM))
#define G_UNIX_INPUT_STREAM(o)	(G_TYPE_CHECK_INSTANCE_CAST ((o), G_TYPE_UNIX_INPUT_STREAM, GUnixInputStream))
#define G_IS_UNIX_INPUT_STREAM(o)	(G_TYPE_CHECK_INSTANCE_TYPE ((o), G_TYPE_UNIX_INPUT_STREAM))
#define G_UNIX_INPUT_STREAM_GET_CLASS(o)	(G_TYPE_INSTANCE_GET_CLASS ((o), G_TYPE_UNIX_INPUT_STREAM, GUnixInputStreamClass))
#define G_TYPE_UNIX_INPUT_STREAM	(g_unix_input_stream_get_type ())

typedef struct _GUnixInputStream {
    GInputStream parent_instance;
    GUnixInputStreamPrivate *priv;
} GUnixInputStream;
typedef struct _GUnixInputStreamClass {
    GInputStreamClass parent_class;
    void (*_g_reserved1) (void);
    void (*_g_reserved2) (void);
    void (*_g_reserved3) (void);
    void (*_g_reserved4) (void);
    void (*_g_reserved5) (void);
} GUnixInputStreamClass;
typedef struct _GUnixInputStreamPrivate GUnixInputStreamPrivate;
extern gboolean g_unix_input_stream_get_close_fd(GUnixInputStream *
						 stream);
extern gint g_unix_input_stream_get_fd(GUnixInputStream * stream);
extern GType g_unix_input_stream_get_type(void);
extern GInputStream *g_unix_input_stream_new(gint fd, gboolean close_fd);
extern void g_unix_input_stream_set_close_fd(GUnixInputStream * stream,
					     gboolean close_fd);
</SCREEN>
</SECT2>
<SECT2>
<TITLE>gio-unix-2.0/gio/gunixmounts.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define G_UNIX_MOUNT_MONITOR_CLASS(k)	(G_TYPE_CHECK_CLASS_CAST((k), G_TYPE_UNIX_MOUNT_MONITOR, GUnixMountMonitorClass))
#define G_IS_UNIX_MOUNT_MONITOR_CLASS(k)	(G_TYPE_CHECK_CLASS_TYPE ((k), G_TYPE_UNIX_MOUNT_MONITOR))
#define G_UNIX_MOUNT_MONITOR(o)	(G_TYPE_CHECK_INSTANCE_CAST ((o), G_TYPE_UNIX_MOUNT_MONITOR, GUnixMountMonitor))
#define G_IS_UNIX_MOUNT_MONITOR(o)	(G_TYPE_CHECK_INSTANCE_TYPE ((o), G_TYPE_UNIX_MOUNT_MONITOR))
#define G_TYPE_UNIX_MOUNT_MONITOR	(g_unix_mount_monitor_get_type ())

typedef struct _GUnixMountEntry GUnixMountEntry;
typedef struct _GUnixMountPoint GUnixMountPoint;
typedef struct _GUnixMountMonitor GUnixMountMonitor;
typedef struct _GUnixMountMonitorClass GUnixMountMonitorClass;
extern gboolean g_unix_is_mount_path_system_internal(const char
						     *mount_path);
extern GUnixMountEntry *g_unix_mount_at(const char *mount_path,
					guint64 * time_read);
extern gint g_unix_mount_compare(GUnixMountEntry * mount1,
				 GUnixMountEntry * mount2);
extern void g_unix_mount_free(GUnixMountEntry * mount_entry);
extern const char *g_unix_mount_get_device_path(GUnixMountEntry *
						mount_entry);
extern const char *g_unix_mount_get_fs_type(GUnixMountEntry * mount_entry);
extern const char *g_unix_mount_get_mount_path(GUnixMountEntry *
					       mount_entry);
extern gboolean g_unix_mount_guess_can_eject(GUnixMountEntry *
					     mount_entry);
extern GIcon *g_unix_mount_guess_icon(GUnixMountEntry * mount_entry);
extern char *g_unix_mount_guess_name(GUnixMountEntry * mount_entry);
extern gboolean g_unix_mount_guess_should_display(GUnixMountEntry *
						  mount_entry);
extern gboolean g_unix_mount_is_readonly(GUnixMountEntry * mount_entry);
extern gboolean g_unix_mount_is_system_internal(GUnixMountEntry *
						mount_entry);
extern GType g_unix_mount_monitor_get_type(void);
extern GUnixMountMonitor *g_unix_mount_monitor_new(void);
extern void g_unix_mount_monitor_set_rate_limit(GUnixMountMonitor *
						mount_monitor,
						int limit_msec);
extern gint g_unix_mount_point_compare(GUnixMountPoint * mount1,
				       GUnixMountPoint * mount2);
extern void g_unix_mount_point_free(GUnixMountPoint * mount_point);
extern const char *g_unix_mount_point_get_device_path(GUnixMountPoint *
						      mount_point);
extern const char *g_unix_mount_point_get_fs_type(GUnixMountPoint *
						  mount_point);
extern const char *g_unix_mount_point_get_mount_path(GUnixMountPoint *
						     mount_point);
extern const char *g_unix_mount_point_get_options(GUnixMountPoint *
						  mount_point);
extern gboolean g_unix_mount_point_guess_can_eject(GUnixMountPoint *
						   mount_point);
extern GIcon *g_unix_mount_point_guess_icon(GUnixMountPoint * mount_point);
extern char *g_unix_mount_point_guess_name(GUnixMountPoint * mount_point);
extern gboolean g_unix_mount_point_is_loopback(GUnixMountPoint *
					       mount_point);
extern gboolean g_unix_mount_point_is_readonly(GUnixMountPoint *
					       mount_point);
extern gboolean g_unix_mount_point_is_user_mountable(GUnixMountPoint *
						     mount_point);
extern gboolean g_unix_mount_points_changed_since(guint64 time);
extern GList *g_unix_mount_points_get(guint64 * time_read);
extern gboolean g_unix_mounts_changed_since(guint64 time);
extern GList *g_unix_mounts_get(guint64 * time_read);
</SCREEN>
</SECT2>
<SECT2>
<TITLE>gio-unix-2.0/gio/gunixoutputstream.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define G_UNIX_OUTPUT_STREAM_CLASS(k)	(G_TYPE_CHECK_CLASS_CAST((k), G_TYPE_UNIX_OUTPUT_STREAM, GUnixOutputStreamClass))
#define G_IS_UNIX_OUTPUT_STREAM_CLASS(k)	(G_TYPE_CHECK_CLASS_TYPE ((k), G_TYPE_UNIX_OUTPUT_STREAM))
#define G_UNIX_OUTPUT_STREAM(o)	(G_TYPE_CHECK_INSTANCE_CAST ((o), G_TYPE_UNIX_OUTPUT_STREAM, GUnixOutputStream))
#define G_IS_UNIX_OUTPUT_STREAM(o)	(G_TYPE_CHECK_INSTANCE_TYPE ((o), G_TYPE_UNIX_OUTPUT_STREAM))
#define G_UNIX_OUTPUT_STREAM_GET_CLASS(o)	(G_TYPE_INSTANCE_GET_CLASS ((o), G_TYPE_UNIX_OUTPUT_STREAM, GUnixOutputStreamClass))
#define G_TYPE_UNIX_OUTPUT_STREAM	(g_unix_output_stream_get_type ())

typedef struct _GUnixOutputStream {
    GOutputStream parent_instance;
    GUnixOutputStreamPrivate *priv;
} GUnixOutputStream;
typedef struct _GUnixOutputStreamClass {
    GOutputStreamClass parent_class;
    void (*_g_reserved1) (void);
    void (*_g_reserved2) (void);
    void (*_g_reserved3) (void);
    void (*_g_reserved4) (void);
    void (*_g_reserved5) (void);
} GUnixOutputStreamClass;
typedef struct _GUnixOutputStreamPrivate GUnixOutputStreamPrivate;
extern gboolean g_unix_output_stream_get_close_fd(GUnixOutputStream *
						  stream);
extern gint g_unix_output_stream_get_fd(GUnixOutputStream * stream);
extern GType g_unix_output_stream_get_type(void);
extern GOutputStream *g_unix_output_stream_new(gint fd, gboolean close_fd);
extern void g_unix_output_stream_set_close_fd(GUnixOutputStream * stream,
					      gboolean close_fd);
</SCREEN>
</SECT2>
<SECT2>
<TITLE>gio-unix-2.0/gio/gunixsocketaddress.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define G_UNIX_SOCKET_ADDRESS_CLASS(k)	(G_TYPE_CHECK_CLASS_CAST((k), G_TYPE_UNIX_SOCKET_ADDRESS, GUnixSocketAddressClass))
#define G_IS_UNIX_SOCKET_ADDRESS_CLASS(k)	(G_TYPE_CHECK_CLASS_TYPE ((k), G_TYPE_UNIX_SOCKET_ADDRESS))
#define G_UNIX_SOCKET_ADDRESS(o)	(G_TYPE_CHECK_INSTANCE_CAST ((o), G_TYPE_UNIX_SOCKET_ADDRESS, GUnixSocketAddress))
#define G_IS_UNIX_SOCKET_ADDRESS(o)	(G_TYPE_CHECK_INSTANCE_TYPE ((o), G_TYPE_UNIX_SOCKET_ADDRESS))
#define G_UNIX_SOCKET_ADDRESS_GET_CLASS(o)	(G_TYPE_INSTANCE_GET_CLASS ((o), G_TYPE_UNIX_SOCKET_ADDRESS, GUnixSocketAddressClass))
#define G_TYPE_UNIX_SOCKET_ADDRESS	(g_unix_socket_address_get_type ())

typedef struct _GUnixSocketAddress {
    GSocketAddress parent_instance;
    GUnixSocketAddressPrivate *priv;
} GUnixSocketAddress;
typedef struct _GUnixSocketAddressClass {
    GSocketAddressClass parent_class;
} GUnixSocketAddressClass;
typedef struct _GUnixSocketAddressPrivate GUnixSocketAddressPrivate;
extern gboolean g_unix_socket_address_abstract_names_supported(void);
extern GUnixSocketAddressType
g_unix_socket_address_get_address_type(GUnixSocketAddress * address);
extern gboolean g_unix_socket_address_get_is_abstract(GUnixSocketAddress *
						      address);
extern const char *g_unix_socket_address_get_path(GUnixSocketAddress *
						  address);
extern gsize g_unix_socket_address_get_path_len(GUnixSocketAddress *
						address);
extern GType g_unix_socket_address_get_type(void);
extern GSocketAddress *g_unix_socket_address_new(const char *path);
extern GSocketAddress *g_unix_socket_address_new_abstract(const char *path,
							  gint path_len);
extern GSocketAddress *g_unix_socket_address_new_with_type(const char
							   *path,
							   gint path_len,
							   GUnixSocketAddressType
							   type);
</SCREEN>
</SECT2>
<SECT2>
<TITLE>glib-2.0/gio/gaction.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define G_TYPE_ACTION	(g_action_get_type ())
#define G_ACTION(inst)	(G_TYPE_CHECK_INSTANCE_CAST ((inst), G_TYPE_ACTION, GAction))
#define G_IS_ACTION(inst)	(G_TYPE_CHECK_INSTANCE_TYPE ((inst), G_TYPE_ACTION))
#define G_ACTION_GET_IFACE(inst)	(G_TYPE_INSTANCE_GET_INTERFACE ((inst), G_TYPE_ACTION, GActionInterface))
#define SA_STACK	SA_ONSTACK

typedef struct _GActionInterface {
    GTypeInterface g_iface;
    const gchar *get_name;
    const GVariantType(*get_parameter_type) (GAction * action);
    const GVariantType(*get_state_type) (GAction * action);
    GVariant *(*get_state_hint) (GAction * action);
     gboolean(*get_enabled) (GAction * action);
    GVariant *(*get_state) (GAction * action);
    void (*change_state) (GAction * action, GVariant * value);
    void (*activate) (GAction * action, GVariant * parameter);
} GActionInterface;
extern void g_action_activate(GAction * action, GVariant * parameter);
extern void g_action_change_state(GAction * action, GVariant * value);
extern gboolean g_action_get_enabled(GAction * action);
extern const char *g_action_get_name(GAction * action);
extern GVariantType *g_action_get_parameter_type(GAction * action);
extern GVariant *g_action_get_state(GAction * action);
extern GVariant *g_action_get_state_hint(GAction * action);
extern GVariantType *g_action_get_state_type(GAction * action);
extern GType g_action_get_type(void);
</SCREEN>
</SECT2>
<SECT2>
<TITLE>glib-2.0/gio/gactiongroup.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define G_TYPE_ACTION_GROUP	(g_action_group_get_type ())
#define G_ACTION_GROUP(inst)	(G_TYPE_CHECK_INSTANCE_CAST ((inst), G_TYPE_ACTION_GROUP, GActionGroup))
#define G_IS_ACTION_GROUP(inst)	(G_TYPE_CHECK_INSTANCE_TYPE ((inst), G_TYPE_ACTION_GROUP))
#define G_ACTION_GROUP_GET_IFACE(inst)	(G_TYPE_INSTANCE_GET_INTERFACE ((inst), G_TYPE_ACTION_GROUP, GActionGroupInterface))

typedef struct _GActionGroupInterface {
    GTypeInterface g_iface;
     gboolean(*has_action) (GActionGroup * action_group,
			    const gchar * action_name);
    gchar **(*list_actions) (GActionGroup * action_group);
     gboolean(*get_action_enabled) (GActionGroup * action_group,
				    const gchar * action_name);
    const GVariantType *(*get_action_parameter_type) (GActionGroup *
						      action_group,
						      const gchar *
						      action_name);
    const GVariantType *(*get_action_state_type) (GActionGroup *
						  action_group,
						  const gchar *
						  action_name);
    GVariant *(*get_action_state_hint) (GActionGroup * action_group,
					const gchar * action_name);
    GVariant *(*get_action_state) (GActionGroup * action_group,
				   const gchar * action_name);
    void (*change_action_state) (GActionGroup * action_group,
				 const gchar * action_name,
				 GVariant * value);
    void (*activate_action) (GActionGroup * action_group,
			     const gchar * action_name,
			     GVariant * parameter);
    void (*action_added) (GActionGroup * action_group,
			  const gchar * action_name);
    void (*action_removed) (GActionGroup * action_group,
			    const gchar * action_name);
    void (*action_enabled_changed) (GActionGroup * action_group,
				    const gchar * action_name,
				    gboolean enabled);
    void (*action_state_changed) (GActionGroup * action_group,
				  const gchar * action_name,
				  GVariant * state);
     gboolean(*query_action) (GActionGroup * action_group,
			      const gchar * action_name,
			      gboolean * enabled,
			      const GVariantType * parameter_type,
			      const GVariantType * state_type,
			      GVariant * *state_hint, GVariant * *state);
} GActionGroupInterface;
extern void g_action_group_action_added(GActionGroup * action_group,
					const char *action_name);
extern void g_action_group_action_enabled_changed(GActionGroup *
						  action_group,
						  const char *action_name,
						  gboolean enabled);
extern void g_action_group_action_removed(GActionGroup * action_group,
					  const char *action_name);
extern void g_action_group_action_state_changed(GActionGroup *
						action_group,
						const char *action_name,
						GVariant * state);
extern void g_action_group_activate_action(GActionGroup * action_group,
					   const char *action_name,
					   GVariant * parameter);
extern void g_action_group_change_action_state(GActionGroup * action_group,
					       const char *action_name,
					       GVariant * value);
extern gboolean g_action_group_get_action_enabled(GActionGroup *
						  action_group,
						  const char *action_name);
extern GVariantType *g_action_group_get_action_parameter_type(GActionGroup
							      *
							      action_group,
							      const char
							      *action_name);
extern GVariant *g_action_group_get_action_state(GActionGroup *
						 action_group,
						 const char *action_name);
extern GVariant *g_action_group_get_action_state_hint(GActionGroup *
						      action_group,
						      const char
						      *action_name);
extern GVariantType *g_action_group_get_action_state_type(GActionGroup *
							  action_group,
							  const char
							  *action_name);
extern GType g_action_group_get_type(void);
extern gboolean g_action_group_has_action(GActionGroup * action_group,
					  const char *action_name);
extern gchar **g_action_group_list_actions(GActionGroup * action_group);
extern gboolean g_action_group_query_action(GActionGroup * action_group,
					    const char *action_name,
					    gboolean * enabled,
					    const GVariantType *
					    parameter_type,
					    const GVariantType *
					    state_type,
					    GVariant * *state_hint,
					    GVariant * *state);
</SCREEN>
</SECT2>
<SECT2>
<TITLE>glib-2.0/gio/gactiongroupexporter.h</TITLE>
<PARA>
</PARA>
<SCREEN>

extern guint g_dbus_connection_export_action_group(GDBusConnection *
						   connection,
						   const gchar *
						   object_path,
						   GActionGroup *
						   action_group,
						   GError * *error);
extern void g_dbus_connection_unexport_action_group(GDBusConnection *
						    connection,
						    guint export_id);
</SCREEN>
</SECT2>
<SECT2>
<TITLE>glib-2.0/gio/gactionmap.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define G_TYPE_ACTION_MAP	(g_action_map_get_type ())
#define G_ACTION_MAP(inst)	(G_TYPE_CHECK_INSTANCE_CAST ((inst), G_TYPE_ACTION_MAP, GActionMap))
#define G_IS_ACTION_MAP(inst)	(G_TYPE_CHECK_INSTANCE_TYPE ((inst), G_TYPE_ACTION_MAP))
#define G_ACTION_MAP_GET_IFACE(inst)	(G_TYPE_INSTANCE_GET_INTERFACE ((inst), G_TYPE_ACTION_MAP, GActionMapInterface))

typedef struct _GActionMapInterface {
    GTypeInterface g_iface;
    GAction *(*lookup_action) (GActionMap * action_map,
			       const gchar * action_name);
    void (*add_action) (GActionMap * action_map, GAction * action);
    void (*remove_action) (GActionMap * action_map,
			   const gchar * action_name);
} GActionMapInterface;
typedef struct _GActionEntry {
    const gchar *name;
    void (*activate) (GSimpleAction * action, GVariant * parameter,
		      gpointer user_data);
    const gchar *parameter_type;
    const gchar *state;
    void (*change_state) (GSimpleAction * action, GVariant * value,
			  gpointer user_data);
    gsize padding[3];
} GActionEntry;
extern void g_action_map_add_action(GActionMap * action_map,
				    GAction * action);
extern void g_action_map_add_action_entries(GActionMap * action_map,
					    const GActionEntry * entries,
					    gint n_entries,
					    gpointer user_data);
extern GType g_action_map_get_type(void);
extern GAction *g_action_map_lookup_action(GActionMap * action_map,
					   const char *action_name);
extern void g_action_map_remove_action(GActionMap * action_map,
				       const char *action_name);
</SCREEN>
</SECT2>
<SECT2>
<TITLE>glib-2.0/gio/gappinfo.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define G_TYPE_APP_INFO	(g_app_info_get_type ())
#define G_TYPE_APP_LAUNCH_CONTEXT	(g_app_launch_context_get_type ())
#define G_APP_LAUNCH_CONTEXT_CLASS(k)	(G_TYPE_CHECK_CLASS_CAST((k), G_TYPE_APP_LAUNCH_CONTEXT, GAppLaunchContextClass))
#define G_IS_APP_LAUNCH_CONTEXT_CLASS(k)	(G_TYPE_CHECK_CLASS_TYPE ((k), G_TYPE_APP_LAUNCH_CONTEXT))
#define G_APP_LAUNCH_CONTEXT(o)	(G_TYPE_CHECK_INSTANCE_CAST ((o), G_TYPE_APP_LAUNCH_CONTEXT, GAppLaunchContext))
#define G_APP_INFO(obj)	(G_TYPE_CHECK_INSTANCE_CAST ((obj), G_TYPE_APP_INFO, GAppInfo))
#define G_IS_APP_LAUNCH_CONTEXT(o)	(G_TYPE_CHECK_INSTANCE_TYPE ((o), G_TYPE_APP_LAUNCH_CONTEXT))
#define G_IS_APP_INFO(obj)	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), G_TYPE_APP_INFO))
#define G_APP_LAUNCH_CONTEXT_GET_CLASS(o)	(G_TYPE_INSTANCE_GET_CLASS ((o), G_TYPE_APP_LAUNCH_CONTEXT, GAppLaunchContextClass))
#define G_APP_INFO_GET_IFACE(obj)	(G_TYPE_INSTANCE_GET_INTERFACE ((obj), G_TYPE_APP_INFO, GAppInfoIface))

typedef struct _GAppLaunchContextClass {
    GObjectClass parent_class;
    char *(*get_display) (GAppLaunchContext * context, GAppInfo * info,
			  GList * files);
    char *(*get_startup_notify_id) (GAppLaunchContext * context,
				    GAppInfo * info, GList * files);
    void (*launch_failed) (GAppLaunchContext * context,
			   const char *startup_notify_id);
    void (*_g_reserved1) (void);
    void (*_g_reserved2) (void);
    void (*_g_reserved3) (void);
    void (*_g_reserved4) (void);
    void (*_g_reserved5) (void);
} GAppLaunchContextClass;
typedef struct _GAppLaunchContextPrivate GAppLaunchContextPrivate;
typedef struct _GAppInfoIface {
    GTypeInterface g_iface;
    GAppInfo *(*dup) (GAppInfo * appinfo);
     gboolean(*equal) (GAppInfo * appinfo1, GAppInfo * appinfo2);
    const char *(*get_id) (GAppInfo * appinfo);
    const char *(*get_name) (GAppInfo * appinfo);
    const char *(*get_description) (GAppInfo * appinfo);
    const char *(*get_executable) (GAppInfo * appinfo);
    GIcon *(*get_icon) (GAppInfo * appinfo);
     gboolean(*launch) (GAppInfo * appinfo, GList * files,
			GAppLaunchContext * launch_context,
			GError * *error);
     gboolean(*supports_uris) (GAppInfo * appinfo);
     gboolean(*supports_files) (GAppInfo * appinfo);
     gboolean(*launch_uris) (GAppInfo * appinfo, GList * files,
			     GAppLaunchContext * launch_context,
			     GError * *error);
     gboolean(*should_show) (GAppInfo * appinfo);
     gboolean(*set_as_default_for_type) (GAppInfo * appinfo,
					 const char *content_type,
					 GError * *error);
     gboolean(*set_as_default_for_extension) (GAppInfo * appinfo,
					      const char *content_type,
					      GError * *error);
     gboolean(*add_supports_type) (GAppInfo * appinfo,
				   const char *content_type,
				   GError * *error);
     gboolean(*can_remove_supports_type) (GAppInfo * appinfo);
     gboolean(*remove_supports_type) (GAppInfo * appinfo,
				      const char *content_type,
				      GError * *error);
     gboolean(*can_delete) (GAppInfo * appinfo);
     gboolean(*do_delete) (GAppInfo * appinfo);
    const char *(*get_commandline) (GAppInfo * appinfo);
    const char *(*get_display_name) (GAppInfo * appinfo);
     gboolean(*set_as_last_used_for_type) (GAppInfo * appinfo,
					   const char *content_type,
					   GError * *error);
} GAppInfoIface;
struct _GAppLaunchContext {
    GObject parent_instance;
    GAppLaunchContextPrivate *priv;
};
extern gboolean g_app_info_add_supports_type(GAppInfo * appinfo,
					     const char *content_type,
					     GError * *error);
extern gboolean g_app_info_can_delete(GAppInfo * appinfo);
extern gboolean g_app_info_can_remove_supports_type(GAppInfo * appinfo);
extern GAppInfo *g_app_info_create_from_commandline(const char
						    *commandline,
						    const char
						    *application_name,
						    GAppInfoCreateFlags
						    flags,
						    GError * *error);
extern gboolean g_app_info_delete(GAppInfo * appinfo);
extern GAppInfo *g_app_info_dup(GAppInfo * appinfo);
extern gboolean g_app_info_equal(GAppInfo * appinfo1, GAppInfo * appinfo2);
extern GList *g_app_info_get_all(void);
extern GList *g_app_info_get_all_for_type(const char *content_type);
extern const char *g_app_info_get_commandline(GAppInfo * appinfo);
extern GAppInfo *g_app_info_get_default_for_type(const char *content_type,
						 gboolean
						 must_support_uris);
extern GAppInfo *g_app_info_get_default_for_uri_scheme(const char
						       *uri_scheme);
extern const char *g_app_info_get_description(GAppInfo * appinfo);
extern const char *g_app_info_get_display_name(GAppInfo * appinfo);
extern const char *g_app_info_get_executable(GAppInfo * appinfo);
extern GList *g_app_info_get_fallback_for_type(const char *content_type);
extern GIcon *g_app_info_get_icon(GAppInfo * appinfo);
extern const char *g_app_info_get_id(GAppInfo * appinfo);
extern const char *g_app_info_get_name(GAppInfo * appinfo);
extern GList *g_app_info_get_recommended_for_type(const char
						  *content_type);
extern GType g_app_info_get_type(void);
extern gboolean g_app_info_launch(GAppInfo * appinfo, GList * files,
				  GAppLaunchContext * launch_context,
				  GError * *error);
extern gboolean g_app_info_launch_default_for_uri(const char *uri,
						  GAppLaunchContext *
						  launch_context,
						  GError * *error);
extern gboolean g_app_info_launch_uris(GAppInfo * appinfo, GList * uris,
				       GAppLaunchContext * launch_context,
				       GError * *error);
extern gboolean g_app_info_remove_supports_type(GAppInfo * appinfo,
						const char *content_type,
						GError * *error);
extern void g_app_info_reset_type_associations(const char *content_type);
extern gboolean g_app_info_set_as_default_for_extension(GAppInfo * appinfo,
							const char
							*extension,
							GError * *error);
extern gboolean g_app_info_set_as_default_for_type(GAppInfo * appinfo,
						   const char
						   *content_type,
						   GError * *error);
extern gboolean g_app_info_set_as_last_used_for_type(GAppInfo * appinfo,
						     const char
						     *content_type,
						     GError * *error);
extern gboolean g_app_info_should_show(GAppInfo * appinfo);
extern gboolean g_app_info_supports_files(GAppInfo * appinfo);
extern gboolean g_app_info_supports_uris(GAppInfo * appinfo);
extern char *g_app_launch_context_get_display(GAppLaunchContext * context,
					      GAppInfo * info,
					      GList * files);
extern void g_app_launch_context_get_environment(GAppLaunchContext *
						 context);
extern char *g_app_launch_context_get_startup_notify_id(GAppLaunchContext *
							context,
							GAppInfo * info,
							GList * files);
extern GType g_app_launch_context_get_type(void);
extern void g_app_launch_context_launch_failed(GAppLaunchContext * context,
					       const char
					       *startup_notify_id);
extern GAppLaunchContext *g_app_launch_context_new(void);
extern void g_app_launch_context_setenv(GAppLaunchContext * context,
					const char *variable,
					const char *value);
extern void g_app_launch_context_unsetenv(GAppLaunchContext * context,
					  const char *variable);
</SCREEN>
</SECT2>
<SECT2>
<TITLE>glib-2.0/gio/gapplication.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define G_TYPE_APPLICATION	(g_application_get_type ())
#define G_APPLICATION_CLASS(class)	(G_TYPE_CHECK_CLASS_CAST ((class), G_TYPE_APPLICATION, GApplicationClass))
#define G_IS_APPLICATION_CLASS(class)	(G_TYPE_CHECK_CLASS_TYPE ((class), G_TYPE_APPLICATION))
#define G_APPLICATION(inst)	(G_TYPE_CHECK_INSTANCE_CAST ((inst), G_TYPE_APPLICATION, GApplication))
#define G_IS_APPLICATION(inst)	(G_TYPE_CHECK_INSTANCE_TYPE ((inst), G_TYPE_APPLICATION))
#define G_APPLICATION_GET_CLASS(inst)	(G_TYPE_INSTANCE_GET_CLASS ((inst), G_TYPE_APPLICATION, GApplicationClass))

typedef struct _GApplicationPrivate GApplicationPrivate;
typedef struct _GApplicationClass {
    GObjectClass parent_class;
    void (*startup) (GApplication * application);
    void (*activate) (GApplication * application);
    void (*open) (GApplication * application, GFile * *files, gint n_files,
		  const gchar * hint);
    int (*command_line) (GApplication * application,
			 GApplicationCommandLine * command_line);
     gboolean(*local_command_line) (GApplication * application,
				    gchar * **arguments, int *exit_status);
    void (*before_emit) (GApplication * application,
			 GVariant * platform_data);
    void (*after_emit) (GApplication * application,
			GVariant * platform_data);
    void (*add_platform_data) (GApplication * application,
			       GVariantBuilder * builder);
    void (*quit_mainloop) (GApplication * application);
    void (*run_mainloop) (GApplication * application);
    void (*shutdown) (GApplication * application);
    gpointer padding[11];
} GApplicationClass;
struct _GApplication {
    GObject parent_instance;
    GApplicationPrivate *priv;
};
extern void g_application_activate(GApplication * application);
extern const char *g_application_get_application_id(GApplication *
						    application);
extern GApplication *g_application_get_default(void);
extern GApplicationFlags g_application_get_flags(GApplication *
						 application);
extern guint g_application_get_inactivity_timeout(GApplication *
						  application);
extern gboolean g_application_get_is_registered(GApplication *
						application);
extern gboolean g_application_get_is_remote(GApplication * application);
extern GType g_application_get_type(void);
extern void g_application_hold(GApplication * application);
extern gboolean g_application_id_is_valid(const char *application_id);
extern GApplication *g_application_new(const char *application_id,
				       GApplicationFlags flags);
extern void g_application_open(GApplication * application, GFile * *files,
			       gint n_files, const char *hint);
extern void g_application_quit(GApplication * application);
extern gboolean g_application_register(GApplication * application,
				       GCancellable * cancellable,
				       GError * *error);
extern void g_application_release(GApplication * application);
extern int g_application_run(GApplication * application, int argc,
			     char **argv);
extern void g_application_set_action_group(GApplication * application,
					   GActionGroup * action_group);
extern void g_application_set_application_id(GApplication * application,
					     const char *application_id);
extern void g_application_set_default(GApplication * application);
extern void g_application_set_flags(GApplication * application,
				    GApplicationFlags flags);
extern void g_application_set_inactivity_timeout(GApplication *
						 application,
						 guint inactivity_timeout);
</SCREEN>
</SECT2>
<SECT2>
<TITLE>glib-2.0/gio/gapplicationcommandline.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define G_TYPE_APPLICATION_COMMAND_LINE	(g_application_command_line_get_type ())
#define G_APPLICATION_COMMAND_LINE_CLASS(class)	(G_TYPE_CHECK_CLASS_CAST ((class), G_TYPE_APPLICATION_COMMAND_LINE, GApplicationCommandLineClass))
#define G_IS_APPLICATION_COMMAND_LINE_CLASS(class)	(G_TYPE_CHECK_CLASS_TYPE ((class), G_TYPE_APPLICATION_COMMAND_LINE))
#define G_APPLICATION_COMMAND_LINE(inst)	(G_TYPE_CHECK_INSTANCE_CAST ((inst), G_TYPE_APPLICATION_COMMAND_LINE, GApplicationCommandLine))
#define G_IS_APPLICATION_COMMAND_LINE(inst)	(G_TYPE_CHECK_INSTANCE_TYPE ((inst), G_TYPE_APPLICATION_COMMAND_LINE))
#define G_APPLICATION_COMMAND_LINE_GET_CLASS(inst)	(G_TYPE_INSTANCE_GET_CLASS ((inst), G_TYPE_APPLICATION_COMMAND_LINE, GApplicationCommandLineClass))

typedef struct _GApplicationCommandLinePrivate
    GApplicationCommandLinePrivate;
typedef struct _GApplicationCommandLineClass {
    GObjectClass parent_class;
    void (*print_literal) (GApplicationCommandLine * cmdline,
			   const gchar * message);
    void (*printerr_literal) (GApplicationCommandLine * cmdline,
			      const gchar * message);
    gpointer padding[12];
} GApplicationCommandLineClass;
struct _GApplicationCommandLine {
    GObject parent_instance;
    GApplicationCommandLinePrivate *priv;
};
extern gchar
    **g_application_command_line_get_arguments(GApplicationCommandLine *
					       cmdline, int *argc);
extern const char
    *g_application_command_line_get_cwd(GApplicationCommandLine * cmdline);
extern const char *const
    *g_application_command_line_get_environ(GApplicationCommandLine *
					    cmdline);
extern int
g_application_command_line_get_exit_status(GApplicationCommandLine *
					   cmdline);
extern gboolean
g_application_command_line_get_is_remote(GApplicationCommandLine *
					 cmdline);
extern GVariant
    *g_application_command_line_get_platform_data(GApplicationCommandLine *
						  cmdline);
extern GType g_application_command_line_get_type(void);
extern const char
    *g_application_command_line_getenv(GApplicationCommandLine * cmdline,
				       const char *name);
extern void g_application_command_line_print(GApplicationCommandLine *
					     cmdline, const char *format,
					     ...);
extern void g_application_command_line_printerr(GApplicationCommandLine *
						cmdline,
						const char *format, ...);
extern void
g_application_command_line_set_exit_status(GApplicationCommandLine *
					   cmdline, int exit_status);
</SCREEN>
</SECT2>
<SECT2>
<TITLE>glib-2.0/gio/gasyncinitable.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define G_TYPE_ASYNC_INITABLE	(g_async_initable_get_type ())
#define G_ASYNC_INITABLE(obj)	(G_TYPE_CHECK_INSTANCE_CAST ((obj), G_TYPE_ASYNC_INITABLE, GAsyncInitable))
#define G_IS_ASYNC_INITABLE(obj)	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), G_TYPE_ASYNC_INITABLE))
#define G_ASYNC_INITABLE_GET_IFACE(obj)	(G_TYPE_INSTANCE_GET_INTERFACE ((obj), G_TYPE_ASYNC_INITABLE, GAsyncInitableIface))
#define G_TYPE_IS_ASYNC_INITABLE(type)	(g_type_is_a ((type), G_TYPE_ASYNC_INITABLE))

typedef struct _GAsyncInitableIface {
    GTypeInterface g_iface;
    void (*init_async) (GAsyncInitable * initable, int io_priority,
			GCancellable * cancellable,
			GAsyncReadyCallback callback, gpointer user_data);
     gboolean(*init_finish) (GAsyncInitable * initable, GAsyncResult * res,
			     GError * *error);
} GAsyncInitableIface;
extern GType g_async_initable_get_type(void);
extern void g_async_initable_init_async(GAsyncInitable * initable,
					int io_priority,
					GCancellable * cancellable,
					GAsyncReadyCallback callback,
					gpointer user_data);
extern gboolean g_async_initable_init_finish(GAsyncInitable * initable,
					     GAsyncResult * res,
					     GError * *error);
extern void g_async_initable_new_async(GType object_type, int io_priority,
				       GCancellable * cancellable,
				       GAsyncReadyCallback callback,
				       gpointer user_data,
				       const gchar * first_property_name,
				       ...);
extern GObject *g_async_initable_new_finish(GAsyncInitable * initable,
					    GAsyncResult * res,
					    GError * *error);
extern void g_async_initable_new_valist_async(GType object_type,
					      const gchar *
					      first_property_name,
					      va_list var_args,
					      int io_priority,
					      GCancellable * cancellable,
					      GAsyncReadyCallback callback,
					      gpointer user_data);
extern void g_async_initable_newv_async(GType object_type,
					guint n_parameters,
					GParameter * parameters,
					int io_priority,
					GCancellable * cancellable,
					GAsyncReadyCallback callback,
					gpointer user_data);
</SCREEN>
</SECT2>
<SECT2>
<TITLE>glib-2.0/gio/gasyncresult.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define G_TYPE_ASYNC_RESULT	(g_async_result_get_type ())
#define G_ASYNC_RESULT(obj)	(G_TYPE_CHECK_INSTANCE_CAST ((obj), G_TYPE_ASYNC_RESULT, GAsyncResult))
#define G_IS_ASYNC_RESULT(obj)	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), G_TYPE_ASYNC_RESULT))
#define G_ASYNC_RESULT_GET_IFACE(obj)	(G_TYPE_INSTANCE_GET_INTERFACE ((obj), G_TYPE_ASYNC_RESULT, GAsyncResultIface))

typedef struct _GAsyncResultIface {
    GTypeInterface g_iface;
     gpointer(*get_user_data) (GAsyncResult * res);
    GObject *(*get_source_object) (GAsyncResult * res);
} GAsyncResultIface;
extern GObject *g_async_result_get_source_object(GAsyncResult * res);
extern GType g_async_result_get_type(void);
extern gpointer g_async_result_get_user_data(GAsyncResult * res);
</SCREEN>
</SECT2>
<SECT2>
<TITLE>glib-2.0/gio/gbufferedinputstream.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define G_TYPE_BUFFERED_INPUT_STREAM	(g_buffered_input_stream_get_type ())
#define G_BUFFERED_INPUT_STREAM_CLASS(k)	(G_TYPE_CHECK_CLASS_CAST((k), G_TYPE_BUFFERED_INPUT_STREAM, GBufferedInputStreamClass))
#define G_IS_BUFFERED_INPUT_STREAM_CLASS(k)	(G_TYPE_CHECK_CLASS_TYPE ((k), G_TYPE_BUFFERED_INPUT_STREAM))
#define G_BUFFERED_INPUT_STREAM(o)	(G_TYPE_CHECK_INSTANCE_CAST ((o), G_TYPE_BUFFERED_INPUT_STREAM, GBufferedInputStream))
#define G_IS_BUFFERED_INPUT_STREAM(o)	(G_TYPE_CHECK_INSTANCE_TYPE ((o), G_TYPE_BUFFERED_INPUT_STREAM))
#define G_BUFFERED_INPUT_STREAM_GET_CLASS(o)	(G_TYPE_INSTANCE_GET_CLASS ((o), G_TYPE_BUFFERED_INPUT_STREAM, GBufferedInputStreamClass))

typedef struct _GBufferedInputStreamClass {
    GFilterInputStreamClass parent_class;
     gssize(*fill) (GBufferedInputStream * stream, gsize count,
		    GCancellable * cancellable, GError * *error);
    void (*fill_async) (GBufferedInputStream * stream, gssize count,
			int io_priority, GCancellable * cancellable,
			GAsyncReadyCallback callback, gpointer user_data);
     gssize(*fill_finish) (GBufferedInputStream * stream,
			   GAsyncResult * result, GError * *error);
    void (*_g_reserved1) (void);
    void (*_g_reserved2) (void);
    void (*_g_reserved3) (void);
    void (*_g_reserved4) (void);
    void (*_g_reserved5) (void);
} GBufferedInputStreamClass;
typedef struct _GBufferedInputStreamPrivate GBufferedInputStreamPrivate;
struct _GBufferedInputStream {
    GFilterInputStream parent_instance;
    GBufferedInputStreamPrivate *priv;
};
extern gssize g_buffered_input_stream_fill(GBufferedInputStream * stream,
					   gssize count,
					   GCancellable * cancellable,
					   GError * *error);
extern void g_buffered_input_stream_fill_async(GBufferedInputStream *
					       stream, gssize count,
					       int io_priority,
					       GCancellable * cancellable,
					       GAsyncReadyCallback
					       callback,
					       gpointer user_data);
extern gssize g_buffered_input_stream_fill_finish(GBufferedInputStream *
						  stream,
						  GAsyncResult * result,
						  GError * *error);
extern gsize g_buffered_input_stream_get_available(GBufferedInputStream *
						   stream);
extern gsize g_buffered_input_stream_get_buffer_size(GBufferedInputStream *
						     stream);
extern GType g_buffered_input_stream_get_type(void);
extern GInputStream *g_buffered_input_stream_new(GInputStream *
						 base_stream);
extern GInputStream *g_buffered_input_stream_new_sized(GInputStream *
						       base_stream,
						       gsize size);
extern gsize g_buffered_input_stream_peek(GBufferedInputStream * stream,
					  void *buffer, gsize offset,
					  gsize count);
extern const void *g_buffered_input_stream_peek_buffer(GBufferedInputStream
						       * stream,
						       gsize * count);
extern int g_buffered_input_stream_read_byte(GBufferedInputStream * stream,
					     GCancellable * cancellable,
					     GError * *error);
extern void g_buffered_input_stream_set_buffer_size(GBufferedInputStream *
						    stream, gsize size);
</SCREEN>
</SECT2>
<SECT2>
<TITLE>glib-2.0/gio/gbufferedoutputstream.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define G_TYPE_BUFFERED_OUTPUT_STREAM	(g_buffered_output_stream_get_type ())
#define G_BUFFERED_OUTPUT_STREAM_CLASS(k)	(G_TYPE_CHECK_CLASS_CAST((k), G_TYPE_BUFFERED_OUTPUT_STREAM, GBufferedOutputStreamClass))
#define G_IS_BUFFERED_OUTPUT_STREAM_CLASS(k)	(G_TYPE_CHECK_CLASS_TYPE ((k), G_TYPE_BUFFERED_OUTPUT_STREAM))
#define G_BUFFERED_OUTPUT_STREAM(o)	(G_TYPE_CHECK_INSTANCE_CAST ((o), G_TYPE_BUFFERED_OUTPUT_STREAM, GBufferedOutputStream))
#define G_IS_BUFFERED_OUTPUT_STREAM(o)	(G_TYPE_CHECK_INSTANCE_TYPE ((o), G_TYPE_BUFFERED_OUTPUT_STREAM))
#define G_BUFFERED_OUTPUT_STREAM_GET_CLASS(o)	(G_TYPE_INSTANCE_GET_CLASS ((o), G_TYPE_BUFFERED_OUTPUT_STREAM, GBufferedOutputStreamClass))

typedef struct _GBufferedOutputStreamClass {
    GFilterOutputStreamClass parent_class;
    void (*_g_reserved1) (void);
    void (*_g_reserved2) (void);
} GBufferedOutputStreamClass;
typedef struct _GBufferedOutputStreamPrivate GBufferedOutputStreamPrivate;
struct _GBufferedOutputStream {
    GFilterOutputStream parent_instance;
    GBufferedOutputStreamPrivate *priv;
};
extern gboolean
g_buffered_output_stream_get_auto_grow(GBufferedOutputStream * stream);
extern gsize g_buffered_output_stream_get_buffer_size(GBufferedOutputStream
						      * stream);
extern GType g_buffered_output_stream_get_type(void);
extern GOutputStream *g_buffered_output_stream_new(GOutputStream *
						   base_stream);
extern GOutputStream *g_buffered_output_stream_new_sized(GOutputStream *
							 base_stream,
							 gsize size);
extern void g_buffered_output_stream_set_auto_grow(GBufferedOutputStream *
						   stream,
						   gboolean auto_grow);
extern void g_buffered_output_stream_set_buffer_size(GBufferedOutputStream
						     * stream, gsize size);
</SCREEN>
</SECT2>
<SECT2>
<TITLE>glib-2.0/gio/gcancellable.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define G_TYPE_CANCELLABLE	(g_cancellable_get_type ())
#define G_CANCELLABLE_CLASS(k)	(G_TYPE_CHECK_CLASS_CAST((k), G_TYPE_CANCELLABLE, GCancellableClass))
#define G_IS_CANCELLABLE_CLASS(k)	(G_TYPE_CHECK_CLASS_TYPE ((k), G_TYPE_CANCELLABLE))
#define G_CANCELLABLE(o)	(G_TYPE_CHECK_INSTANCE_CAST ((o), G_TYPE_CANCELLABLE, GCancellable))
#define G_IS_CANCELLABLE(o)	(G_TYPE_CHECK_INSTANCE_TYPE ((o), G_TYPE_CANCELLABLE))
#define G_CANCELLABLE_GET_CLASS(o)	(G_TYPE_INSTANCE_GET_CLASS ((o), G_TYPE_CANCELLABLE, GCancellableClass))

typedef struct _GCancellableClass {
    GObjectClass parent_class;
    void (*cancelled) (GCancellable * cancellable);
    void (*_g_reserved1) (void);
    void (*_g_reserved2) (void);
    void (*_g_reserved3) (void);
    void (*_g_reserved4) (void);
    void (*_g_reserved5) (void);
} GCancellableClass;
typedef struct _GCancellablePrivate GCancellablePrivate;
struct _GCancellable {
    GObject parent_instance;
    GCancellablePrivate *priv;
};
extern void g_cancellable_cancel(GCancellable * cancellable);
extern gulong g_cancellable_connect(GCancellable * cancellable,
				    GCallback callback, gpointer data,
				    GDestroyNotify data_destroy_func);
extern void g_cancellable_disconnect(GCancellable * cancellable,
				     gulong handler_id);
extern GCancellable *g_cancellable_get_current(void);
extern int g_cancellable_get_fd(GCancellable * cancellable);
extern GType g_cancellable_get_type(void);
extern gboolean g_cancellable_is_cancelled(GCancellable * cancellable);
extern gboolean g_cancellable_make_pollfd(GCancellable * cancellable,
					  GPollFD * pollfd);
extern GCancellable *g_cancellable_new(void);
extern void g_cancellable_pop_current(GCancellable * cancellable);
extern void g_cancellable_push_current(GCancellable * cancellable);
extern void g_cancellable_release_fd(GCancellable * cancellable);
extern void g_cancellable_reset(GCancellable * cancellable);
extern gboolean g_cancellable_set_error_if_cancelled(GCancellable *
						     cancellable,
						     GError * *error);
extern GSource *g_cancellable_source_new(GCancellable * cancellable);
</SCREEN>
</SECT2>
<SECT2>
<TITLE>glib-2.0/gio/gcharsetconverter.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define G_TYPE_CHARSET_CONVERTER	(g_charset_converter_get_type ())
#define G_CHARSET_CONVERTER_CLASS(k)	(G_TYPE_CHECK_CLASS_CAST((k), G_TYPE_CHARSET_CONVERTER, GCharsetConverterClass))
#define G_IS_CHARSET_CONVERTER_CLASS(k)	(G_TYPE_CHECK_CLASS_TYPE ((k), G_TYPE_CHARSET_CONVERTER))
#define G_CHARSET_CONVERTER(o)	(G_TYPE_CHECK_INSTANCE_CAST ((o), G_TYPE_CHARSET_CONVERTER, GCharsetConverter))
#define G_IS_CHARSET_CONVERTER(o)	(G_TYPE_CHECK_INSTANCE_TYPE ((o), G_TYPE_CHARSET_CONVERTER))
#define G_CHARSET_CONVERTER_GET_CLASS(o)	(G_TYPE_INSTANCE_GET_CLASS ((o), G_TYPE_CHARSET_CONVERTER, GCharsetConverterClass))

typedef struct _GCharsetConverterClass {
    GObjectClass parent_class;
} GCharsetConverterClass;
extern guint g_charset_converter_get_num_fallbacks(GCharsetConverter *
						   converter);
extern GType g_charset_converter_get_type(void);
extern gboolean g_charset_converter_get_use_fallback(GCharsetConverter *
						     converter);
extern GCharsetConverter *g_charset_converter_new(const char *to_charset,
						  const char *from_charset,
						  GError * *error);
extern void g_charset_converter_set_use_fallback(GCharsetConverter *
						 converter,
						 gboolean use_fallback);
</SCREEN>
</SECT2>
<SECT2>
<TITLE>glib-2.0/gio/gcontenttype.h</TITLE>
<PARA>
</PARA>
<SCREEN>

extern gboolean g_content_type_can_be_executable(const gchar * type);
extern gboolean g_content_type_equals(const gchar * type1,
				      const gchar * type2);
extern gchar *g_content_type_from_mime_type(const gchar * mime_type);
extern gchar *g_content_type_get_description(const gchar * type);
extern GIcon *g_content_type_get_icon(const gchar * type);
extern gchar *g_content_type_get_mime_type(const gchar * type);
extern gchar *g_content_type_guess(const gchar * filename,
				   const guchar * data, gsize data_size,
				   gboolean * result_uncertain);
extern gchar **g_content_type_guess_for_tree(GFile * root);
extern gboolean g_content_type_is_a(const gchar * type,
				    const gchar * supertype);
extern gboolean g_content_type_is_unknown(const gchar * type);
extern GList *g_content_types_get_registered(void);
</SCREEN>
</SECT2>
<SECT2>
<TITLE>glib-2.0/gio/gconverter.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define G_TYPE_CONVERTER	(g_converter_get_type ())
#define G_CONVERTER(obj)	(G_TYPE_CHECK_INSTANCE_CAST ((obj), G_TYPE_CONVERTER, GConverter))
#define G_IS_CONVERTER(obj)	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), G_TYPE_CONVERTER))
#define G_CONVERTER_GET_IFACE(obj)	(G_TYPE_INSTANCE_GET_INTERFACE ((obj), G_TYPE_CONVERTER, GConverterIface))

typedef struct _GConverterIface {
    GTypeInterface g_iface;
     GConverterResult(*convert) (GConverter * converter, const void *inbuf,
				 gsize inbuf_size, void *outbuf,
				 gsize outbuf_size, GConverterFlags flags,
				 gsize * bytes_read, gsize * bytes_written,
				 GError * *error);
    void (*reset) (GConverter * converter);
} GConverterIface;
extern GConverterResult g_converter_convert(GConverter * converter,
					    const void *inbuf,
					    gsize inbuf_size, void *outbuf,
					    gsize outbuf_size,
					    GConverterFlags flags,
					    gsize * bytes_read,
					    gsize * bytes_written,
					    GError * *error);
extern GType g_converter_get_type(void);
extern void g_converter_reset(GConverter * converter);
</SCREEN>
</SECT2>
<SECT2>
<TITLE>glib-2.0/gio/gconverterinputstream.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define G_TYPE_CONVERTER_INPUT_STREAM	(g_converter_input_stream_get_type ())
#define G_CONVERTER_INPUT_STREAM_CLASS(k)	(G_TYPE_CHECK_CLASS_CAST((k), G_TYPE_CONVERTER_INPUT_STREAM, GConverterInputStreamClass))
#define G_IS_CONVERTER_INPUT_STREAM_CLASS(k)	(G_TYPE_CHECK_CLASS_TYPE ((k), G_TYPE_CONVERTER_INPUT_STREAM))
#define G_CONVERTER_INPUT_STREAM(o)	(G_TYPE_CHECK_INSTANCE_CAST ((o), G_TYPE_CONVERTER_INPUT_STREAM, GConverterInputStream))
#define G_IS_CONVERTER_INPUT_STREAM(o)	(G_TYPE_CHECK_INSTANCE_TYPE ((o), G_TYPE_CONVERTER_INPUT_STREAM))
#define G_CONVERTER_INPUT_STREAM_GET_CLASS(o)	(G_TYPE_INSTANCE_GET_CLASS ((o), G_TYPE_CONVERTER_INPUT_STREAM, GConverterInputStreamClass))

typedef struct _GConverterInputStreamClass {
    GFilterInputStreamClass parent_class;
    void (*_g_reserved1) (void);
    void (*_g_reserved2) (void);
    void (*_g_reserved3) (void);
    void (*_g_reserved4) (void);
    void (*_g_reserved5) (void);
} GConverterInputStreamClass;
typedef struct _GConverterInputStreamPrivate GConverterInputStreamPrivate;
struct _GConverterInputStream {
    GFilterInputStream parent_instance;
    GConverterInputStreamPrivate *priv;
};
extern GConverter
    *g_converter_input_stream_get_converter(GConverterInputStream *
					    converter_stream);
extern GType g_converter_input_stream_get_type(void);
extern GInputStream *g_converter_input_stream_new(GInputStream *
						  base_stream,
						  GConverter * converter);
</SCREEN>
</SECT2>
<SECT2>
<TITLE>glib-2.0/gio/gconverteroutputstream.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define G_TYPE_CONVERTER_OUTPUT_STREAM	(g_converter_output_stream_get_type ())
#define G_CONVERTER_OUTPUT_STREAM_CLASS(k)	(G_TYPE_CHECK_CLASS_CAST((k), G_TYPE_CONVERTER_OUTPUT_STREAM, GConverterOutputStreamClass))
#define G_IS_CONVERTER_OUTPUT_STREAM_CLASS(k)	(G_TYPE_CHECK_CLASS_TYPE ((k), G_TYPE_CONVERTER_OUTPUT_STREAM))
#define G_CONVERTER_OUTPUT_STREAM(o)	(G_TYPE_CHECK_INSTANCE_CAST ((o), G_TYPE_CONVERTER_OUTPUT_STREAM, GConverterOutputStream))
#define G_IS_CONVERTER_OUTPUT_STREAM(o)	(G_TYPE_CHECK_INSTANCE_TYPE ((o), G_TYPE_CONVERTER_OUTPUT_STREAM))
#define G_CONVERTER_OUTPUT_STREAM_GET_CLASS(o)	(G_TYPE_INSTANCE_GET_CLASS ((o), G_TYPE_CONVERTER_OUTPUT_STREAM, GConverterOutputStreamClass))

typedef struct _GConverterOutputStreamClass {
    GFilterOutputStreamClass parent_class;
    void (*_g_reserved1) (void);
    void (*_g_reserved2) (void);
    void (*_g_reserved3) (void);
    void (*_g_reserved4) (void);
    void (*_g_reserved5) (void);
} GConverterOutputStreamClass;
typedef struct _GConverterOutputStreamPrivate
    GConverterOutputStreamPrivate;
struct _GConverterOutputStream {
    GFilterOutputStream parent_instance;
    GConverterOutputStreamPrivate *priv;
};
extern GConverter
    *g_converter_output_stream_get_converter(GConverterOutputStream *
					     converter_stream);
extern GType g_converter_output_stream_get_type(void);
extern GOutputStream *g_converter_output_stream_new(GOutputStream *
						    base_stream,
						    GConverter *
						    converter);
</SCREEN>
</SECT2>
<SECT2>
<TITLE>glib-2.0/gio/gcredentials.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define G_TYPE_CREDENTIALS	(g_credentials_get_type ())
#define G_CREDENTIALS_CLASS(k)	(G_TYPE_CHECK_CLASS_CAST((k), G_TYPE_CREDENTIALS, GCredentialsClass))
#define G_IS_CREDENTIALS_CLASS(k)	(G_TYPE_CHECK_CLASS_TYPE ((k), G_TYPE_CREDENTIALS))
#define G_CREDENTIALS(o)	(G_TYPE_CHECK_INSTANCE_CAST ((o), G_TYPE_CREDENTIALS, GCredentials))
#define G_IS_CREDENTIALS(o)	(G_TYPE_CHECK_INSTANCE_TYPE ((o), G_TYPE_CREDENTIALS))
#define G_CREDENTIALS_GET_CLASS(o)	(G_TYPE_INSTANCE_GET_CLASS ((o), G_TYPE_CREDENTIALS, GCredentialsClass))

typedef struct _GCredentialsClass GCredentialsClass;
extern gpointer g_credentials_get_native(GCredentials * credentials,
					 GCredentialsType native_type);
extern GType g_credentials_get_type(void);
extern uid_t g_credentials_get_unix_user(GCredentials * credentials,
					 GError * *error);
extern gboolean g_credentials_is_same_user(GCredentials * credentials,
					   GCredentials *
					   other_credentials,
					   GError * *error);
extern GCredentials *g_credentials_new(void);
extern void g_credentials_set_native(GCredentials * credentials,
				     GCredentialsType native_type,
				     gpointer native);
extern gboolean g_credentials_set_unix_user(GCredentials * credentials,
					    uid_t uid, GError * *error);
extern gchar *g_credentials_to_string(GCredentials * credentials);
</SCREEN>
</SECT2>
<SECT2>
<TITLE>glib-2.0/gio/gdatainputstream.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define G_TYPE_DATA_INPUT_STREAM	(g_data_input_stream_get_type ())
#define G_DATA_INPUT_STREAM_CLASS(k)	(G_TYPE_CHECK_CLASS_CAST((k), G_TYPE_DATA_INPUT_STREAM, GDataInputStreamClass))
#define G_IS_DATA_INPUT_STREAM_CLASS(k)	(G_TYPE_CHECK_CLASS_TYPE ((k), G_TYPE_DATA_INPUT_STREAM))
#define G_DATA_INPUT_STREAM(o)	(G_TYPE_CHECK_INSTANCE_CAST ((o), G_TYPE_DATA_INPUT_STREAM, GDataInputStream))
#define G_IS_DATA_INPUT_STREAM(o)	(G_TYPE_CHECK_INSTANCE_TYPE ((o), G_TYPE_DATA_INPUT_STREAM))
#define G_DATA_INPUT_STREAM_GET_CLASS(o)	(G_TYPE_INSTANCE_GET_CLASS ((o), G_TYPE_DATA_INPUT_STREAM, GDataInputStreamClass))

typedef struct _GDataInputStreamClass {
    GBufferedInputStreamClass parent_class;
    void (*_g_reserved1) (void);
    void (*_g_reserved2) (void);
    void (*_g_reserved3) (void);
    void (*_g_reserved4) (void);
    void (*_g_reserved5) (void);
} GDataInputStreamClass;
typedef struct _GDataInputStreamPrivate GDataInputStreamPrivate;
struct _GDataInputStream {
    GBufferedInputStream parent_instance;
    GDataInputStreamPrivate *priv;
};
extern GDataStreamByteOrder
g_data_input_stream_get_byte_order(GDataInputStream * stream);
extern GDataStreamNewlineType
g_data_input_stream_get_newline_type(GDataInputStream * stream);
extern GType g_data_input_stream_get_type(void);
extern GDataInputStream *g_data_input_stream_new(GInputStream *
						 base_stream);
extern guchar g_data_input_stream_read_byte(GDataInputStream * stream,
					    GCancellable * cancellable,
					    GError * *error);
extern gint16 g_data_input_stream_read_int16(GDataInputStream * stream,
					     GCancellable * cancellable,
					     GError * *error);
extern gint32 g_data_input_stream_read_int32(GDataInputStream * stream,
					     GCancellable * cancellable,
					     GError * *error);
extern gint64 g_data_input_stream_read_int64(GDataInputStream * stream,
					     GCancellable * cancellable,
					     GError * *error);
extern char *g_data_input_stream_read_line(GDataInputStream * stream,
					   gsize * length,
					   GCancellable * cancellable,
					   GError * *error);
extern void g_data_input_stream_read_line_async(GDataInputStream * stream,
						gint io_priority,
						GCancellable * cancellable,
						GAsyncReadyCallback
						callback,
						gpointer user_data);
extern char *g_data_input_stream_read_line_finish(GDataInputStream *
						  stream,
						  GAsyncResult * result,
						  gsize * length,
						  GError * *error);
extern char *g_data_input_stream_read_line_finish_utf8(GDataInputStream *
						       stream,
						       GAsyncResult *
						       result,
						       gsize * length,
						       GError * *error);
extern char *g_data_input_stream_read_line_utf8(GDataInputStream * stream,
						gsize * length,
						GCancellable * cancellable,
						GError * *error);
extern guint16 g_data_input_stream_read_uint16(GDataInputStream * stream,
					       GCancellable * cancellable,
					       GError * *error);
extern guint32 g_data_input_stream_read_uint32(GDataInputStream * stream,
					       GCancellable * cancellable,
					       GError * *error);
extern guint64 g_data_input_stream_read_uint64(GDataInputStream * stream,
					       GCancellable * cancellable,
					       GError * *error);
extern char *g_data_input_stream_read_until(GDataInputStream * stream,
					    const char *stop_chars,
					    gsize * length,
					    GCancellable * cancellable,
					    GError * *error);
extern void g_data_input_stream_read_until_async(GDataInputStream * stream,
						 const char *stop_chars,
						 gint io_priority,
						 GCancellable *
						 cancellable,
						 GAsyncReadyCallback
						 callback,
						 gpointer user_data);
extern char *g_data_input_stream_read_until_finish(GDataInputStream *
						   stream,
						   GAsyncResult * result,
						   gsize * length,
						   GError * *error);
extern char *g_data_input_stream_read_upto(GDataInputStream * stream,
					   const char *stop_chars,
					   gssize stop_chars_len,
					   gsize * length,
					   GCancellable * cancellable,
					   GError * *error);
extern void g_data_input_stream_read_upto_async(GDataInputStream * stream,
						const char *stop_chars,
						gssize stop_chars_len,
						gint io_priority,
						GCancellable * cancellable,
						GAsyncReadyCallback
						callback,
						gpointer user_data);
extern char *g_data_input_stream_read_upto_finish(GDataInputStream *
						  stream,
						  GAsyncResult * result,
						  gsize * length,
						  GError * *error);
extern void g_data_input_stream_set_byte_order(GDataInputStream * stream,
					       GDataStreamByteOrder order);
extern void g_data_input_stream_set_newline_type(GDataInputStream * stream,
						 GDataStreamNewlineType
						 type);
</SCREEN>
</SECT2>
<SECT2>
<TITLE>glib-2.0/gio/gdataoutputstream.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define G_TYPE_DATA_OUTPUT_STREAM	(g_data_output_stream_get_type ())
#define G_DATA_OUTPUT_STREAM_CLASS(k)	(G_TYPE_CHECK_CLASS_CAST((k), G_TYPE_DATA_OUTPUT_STREAM, GDataOutputStreamClass))
#define G_IS_DATA_OUTPUT_STREAM_CLASS(k)	(G_TYPE_CHECK_CLASS_TYPE ((k), G_TYPE_DATA_OUTPUT_STREAM))
#define G_DATA_OUTPUT_STREAM(o)	(G_TYPE_CHECK_INSTANCE_CAST ((o), G_TYPE_DATA_OUTPUT_STREAM, GDataOutputStream))
#define G_IS_DATA_OUTPUT_STREAM(o)	(G_TYPE_CHECK_INSTANCE_TYPE ((o), G_TYPE_DATA_OUTPUT_STREAM))
#define G_DATA_OUTPUT_STREAM_GET_CLASS(o)	(G_TYPE_INSTANCE_GET_CLASS ((o), G_TYPE_DATA_OUTPUT_STREAM, GDataOutputStreamClass))

typedef struct _GDataOutputStream {
    GFilterOutputStream parent_instance;
    GDataOutputStreamPrivate *priv;
} GDataOutputStream;
typedef struct _GDataOutputStreamClass {
    GFilterOutputStreamClass parent_class;
    void (*_g_reserved1) (void);
    void (*_g_reserved2) (void);
    void (*_g_reserved3) (void);
    void (*_g_reserved4) (void);
    void (*_g_reserved5) (void);
} GDataOutputStreamClass;
typedef struct _GDataOutputStreamPrivate GDataOutputStreamPrivate;
extern GDataStreamByteOrder
g_data_output_stream_get_byte_order(GDataOutputStream * stream);
extern GType g_data_output_stream_get_type(void);
extern GDataOutputStream *g_data_output_stream_new(GOutputStream *
						   base_stream);
extern gboolean g_data_output_stream_put_byte(GDataOutputStream * stream,
					      guchar data,
					      GCancellable * cancellable,
					      GError * *error);
extern gboolean g_data_output_stream_put_int16(GDataOutputStream * stream,
					       gint16 data,
					       GCancellable * cancellable,
					       GError * *error);
extern gboolean g_data_output_stream_put_int32(GDataOutputStream * stream,
					       gint32 data,
					       GCancellable * cancellable,
					       GError * *error);
extern gboolean g_data_output_stream_put_int64(GDataOutputStream * stream,
					       gint64 data,
					       GCancellable * cancellable,
					       GError * *error);
extern gboolean g_data_output_stream_put_string(GDataOutputStream * stream,
						const char *str,
						GCancellable * cancellable,
						GError * *error);
extern gboolean g_data_output_stream_put_uint16(GDataOutputStream * stream,
						guint16 data,
						GCancellable * cancellable,
						GError * *error);
extern gboolean g_data_output_stream_put_uint32(GDataOutputStream * stream,
						guint32 data,
						GCancellable * cancellable,
						GError * *error);
extern gboolean g_data_output_stream_put_uint64(GDataOutputStream * stream,
						guint64 data,
						GCancellable * cancellable,
						GError * *error);
extern void g_data_output_stream_set_byte_order(GDataOutputStream * stream,
						GDataStreamByteOrder
						order);
</SCREEN>
</SECT2>
<SECT2>
<TITLE>glib-2.0/gio/gdbusactiongroup.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define G_TYPE_DBUS_ACTION_GROUP	(g_dbus_action_group_get_type ())
#define G_DBUS_ACTION_GROUP_CLASS(class)	(G_TYPE_CHECK_CLASS_CAST ((class), G_TYPE_DBUS_ACTION_GROUP, GDBusActionGroupClass))
#define G_IS_DBUS_ACTION_GROUP_CLASS(class)	(G_TYPE_CHECK_CLASS_TYPE ((class), G_TYPE_DBUS_ACTION_GROUP))
#define G_DBUS_ACTION_GROUP(inst)	(G_TYPE_CHECK_INSTANCE_CAST ((inst), G_TYPE_DBUS_ACTION_GROUP, GDBusActionGroup))
#define G_IS_DBUS_ACTION_GROUP(inst)	(G_TYPE_CHECK_INSTANCE_TYPE ((inst), G_TYPE_DBUS_ACTION_GROUP))
#define G_DBUS_ACTION_GROUP_GET_CLASS(inst)	(G_TYPE_INSTANCE_GET_CLASS ((inst), G_TYPE_DBUS_ACTION_GROUP, GDBusActionGroupClass))

extern GDBusActionGroup *g_dbus_action_group_get(GDBusConnection *
						 connection,
						 const gchar * bus_name,
						 const gchar *
						 object_path);
extern GType g_dbus_action_group_get_type(void);
</SCREEN>
</SECT2>
<SECT2>
<TITLE>glib-2.0/gio/gdbusaddress.h</TITLE>
<PARA>
</PARA>
<SCREEN>

extern gchar *g_dbus_address_get_for_bus_sync(GBusType bus_type,
					      GCancellable * cancellable,
					      GError * *error);
extern void g_dbus_address_get_stream(const gchar * address,
				      GCancellable * cancellable,
				      GAsyncReadyCallback callback,
				      gpointer user_data);
extern GIOStream *g_dbus_address_get_stream_finish(GAsyncResult * res,
						   gchar * *out_guid,
						   GError * *error);
extern GIOStream *g_dbus_address_get_stream_sync(const gchar * address,
						 gchar * *out_guid,
						 GCancellable *
						 cancellable,
						 GError * *error);
extern gboolean g_dbus_is_address(const gchar * string);
extern gboolean g_dbus_is_supported_address(const gchar * string,
					    GError * *error);
</SCREEN>
</SECT2>
<SECT2>
<TITLE>glib-2.0/gio/gdbusauthobserver.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define G_TYPE_DBUS_AUTH_OBSERVER	(g_dbus_auth_observer_get_type ())
#define G_DBUS_AUTH_OBSERVER(o)	(G_TYPE_CHECK_INSTANCE_CAST ((o), G_TYPE_DBUS_AUTH_OBSERVER, GDBusAuthObserver))
#define G_IS_DBUS_AUTH_OBSERVER(o)	(G_TYPE_CHECK_INSTANCE_TYPE ((o), G_TYPE_DBUS_AUTH_OBSERVER))

extern gboolean
g_dbus_auth_observer_authorize_authenticated_peer(GDBusAuthObserver *
						  observer,
						  GIOStream * stream,
						  GCredentials *
						  credentials);
extern GType g_dbus_auth_observer_get_type(void);
extern GDBusAuthObserver *g_dbus_auth_observer_new(void);
</SCREEN>
</SECT2>
<SECT2>
<TITLE>glib-2.0/gio/gdbusconnection.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define G_TYPE_DBUS_CONNECTION	(g_dbus_connection_get_type ())
#define G_DBUS_CONNECTION(o)	(G_TYPE_CHECK_INSTANCE_CAST ((o), G_TYPE_DBUS_CONNECTION, GDBusConnection))
#define G_IS_DBUS_CONNECTION(o)	(G_TYPE_CHECK_INSTANCE_TYPE ((o), G_TYPE_DBUS_CONNECTION))

typedef void (*GDBusInterfaceMethodCallFunc) (GDBusConnection * connection,
					      const gchar * sender,
					      const gchar * object_path,
					      const gchar * interface_name,
					      const gchar * method_name,
					      GVariant * parameters,
					      GDBusMethodInvocation *
					      invocation,
					      gpointer user_data);
typedef GVariant *(*GDBusInterfaceGetPropertyFunc) (GDBusConnection *
						    connection,
						    const gchar * sender,
						    const gchar *
						    object_path,
						    const gchar *
						    interface_name,
						    const gchar *
						    property_name,
						    GError * *error,
						    gpointer user_data);
typedef gboolean(*GDBusInterfaceSetPropertyFunc) (GDBusConnection *
						  connection,
						  const gchar * sender,
						  const gchar *
						  object_path,
						  const gchar *
						  interface_name,
						  const gchar *
						  property_name,
						  GVariant * value,
						  GError * *error,
						  gpointer user_data);
struct _GDBusInterfaceVTable {
    GDBusInterfaceMethodCallFunc method_call;
    GDBusInterfaceGetPropertyFunc get_property;
    GDBusInterfaceSetPropertyFunc set_property;
    gpointer padding[8];
};
typedef gchar **(*GDBusSubtreeEnumerateFunc) (GDBusConnection * connection,
					      const gchar * sender,
					      const gchar * object_path,
					      gpointer user_data);
typedef GDBusInterfaceInfo **(*GDBusSubtreeIntrospectFunc) (GDBusConnection
							    * connection,
							    const gchar *
							    sender,
							    const gchar *
							    object_path,
							    const gchar *
							    node,
							    gpointer
							    user_data);
typedef const GDBusInterfaceVTable
    *(*GDBusSubtreeDispatchFunc) (GDBusConnection * connection,
				  const gchar * sender,
				  const gchar * object_path,
				  const gchar * interface_name,
				  const gchar * node,
				  gpointer * out_user_data,
				  gpointer user_data);
struct _GDBusSubtreeVTable {
    GDBusSubtreeEnumerateFunc enumerate;
    GDBusSubtreeIntrospectFunc introspect;
    GDBusSubtreeDispatchFunc dispatch;
    gpointer padding[8];
};
typedef void (*GDBusSignalCallback) (GDBusConnection * connection,
				     const gchar * sender,
				     const gchar * object_path,
				     const gchar * interface_name,
				     const gchar * signal_name,
				     GVariant * paramters,
				     gpointer user_data);
typedef GDBusMessage *(*GDBusMessageFilterFunction) (GDBusConnection *
						     connection,
						     GDBusMessage *
						     message,
						     gboolean incoming,
						     gpointer user_data);
extern void g_bus_get(GBusType bus_type, GCancellable * cancellable,
		      GAsyncReadyCallback callback, gpointer user_data);
extern GDBusConnection *g_bus_get_finish(GAsyncResult * res,
					 GError * *error);
extern GDBusConnection *g_bus_get_sync(GBusType bus_type,
				       GCancellable * cancellable,
				       GError * *error);
extern guint g_dbus_connection_add_filter(GDBusConnection * connection,
					  GDBusMessageFilterFunction
					  filter_function, void *user_data,
					  GDestroyNotify
					  user_data_free_func);
extern void g_dbus_connection_call(GDBusConnection * connection,
				   const gchar * bus_name,
				   const gchar * object_path,
				   const gchar * interface_name,
				   const gchar * method_name,
				   GVariant * parameters,
				   const GVariantType * reply_type,
				   GDBusCallFlags flags, gint timeout_msec,
				   GCancellable * cancellable,
				   GAsyncReadyCallback callback,
				   gpointer user_data);
extern GVariant *g_dbus_connection_call_finish(GDBusConnection *
					       connection,
					       GAsyncResult * res,
					       GError * *error);
extern GVariant *g_dbus_connection_call_sync(GDBusConnection * connection,
					     const gchar * bus_name,
					     const gchar * object_path,
					     const gchar * interface_name,
					     const gchar * method_name,
					     GVariant * parameters,
					     const GVariantType *
					     reply_type,
					     GDBusCallFlags flags,
					     gint timeout_msec,
					     GCancellable * cancellable,
					     GError * *error);
extern void g_dbus_connection_call_with_unix_fd_list(GDBusConnection *
						     connection,
						     const gchar *
						     bus_name,
						     const gchar *
						     object_path,
						     const gchar *
						     interface_name,
						     const gchar *
						     method_name,
						     GVariant * parameters,
						     const GVariantType *
						     reply_type,
						     GDBusCallFlags flags,
						     gint timeout_msec,
						     GUnixFDList * fd_list,
						     GCancellable *
						     cancellable,
						     GAsyncReadyCallback
						     callback,
						     gpointer user_data);
extern GVariant
    *g_dbus_connection_call_with_unix_fd_list_finish(GDBusConnection *
						     connection,
						     GUnixFDList *
						     *out_fd_list,
						     GAsyncResult * res,
						     GError * *error);
extern GVariant
    *g_dbus_connection_call_with_unix_fd_list_sync(GDBusConnection *
						   connection,
						   const gchar * bus_name,
						   const gchar *
						   object_path,
						   const gchar *
						   interface_name,
						   const gchar *
						   method_name,
						   GVariant * parameters,
						   const GVariantType *
						   reply_type,
						   GDBusCallFlags flags,
						   gint timeout_msec,
						   GUnixFDList * fd_list,
						   GUnixFDList *
						   *out_fd_list,
						   GCancellable *
						   cancellable,
						   GError * *error);
extern void g_dbus_connection_close(GDBusConnection * connection,
				    GCancellable * cancellable,
				    GAsyncReadyCallback callback,
				    gpointer user_data);
extern gboolean g_dbus_connection_close_finish(GDBusConnection *
					       connection,
					       GAsyncResult * res,
					       GError * *error);
extern gboolean g_dbus_connection_close_sync(GDBusConnection * connection,
					     GCancellable * cancellable,
					     GError * *error);
extern gboolean g_dbus_connection_emit_signal(GDBusConnection * connection,
					      const gchar *
					      destination_bus_name,
					      const gchar * object_path,
					      const gchar * interface_name,
					      const gchar * signal_name,
					      GVariant * parameters,
					      GError * *error);
extern void g_dbus_connection_flush(GDBusConnection * connection,
				    GCancellable * cancellable,
				    GAsyncReadyCallback callback,
				    gpointer user_data);
extern gboolean g_dbus_connection_flush_finish(GDBusConnection *
					       connection,
					       GAsyncResult * res,
					       GError * *error);
extern gboolean g_dbus_connection_flush_sync(GDBusConnection * connection,
					     GCancellable * cancellable,
					     GError * *error);
extern GDBusCapabilityFlags
g_dbus_connection_get_capabilities(GDBusConnection * connection);
extern gboolean g_dbus_connection_get_exit_on_close(GDBusConnection *
						    connection);
extern const char *g_dbus_connection_get_guid(GDBusConnection *
					      connection);
extern GCredentials *g_dbus_connection_get_peer_credentials(GDBusConnection
							    * connection);
extern GIOStream *g_dbus_connection_get_stream(GDBusConnection *
					       connection);
extern GType g_dbus_connection_get_type(void);
extern const char *g_dbus_connection_get_unique_name(GDBusConnection *
						     connection);
extern gboolean g_dbus_connection_is_closed(GDBusConnection * connection);
extern void g_dbus_connection_new(GIOStream * stream, const gchar * guid,
				  GDBusConnectionFlags flags,
				  GDBusAuthObserver * observer,
				  GCancellable * cancellable,
				  GAsyncReadyCallback callback,
				  gpointer user_data);
extern GDBusConnection *g_dbus_connection_new_finish(GAsyncResult * res,
						     GError * *error);
extern void g_dbus_connection_new_for_address(const gchar * address,
					      GDBusConnectionFlags flags,
					      GDBusAuthObserver * observer,
					      GCancellable * cancellable,
					      GAsyncReadyCallback callback,
					      gpointer user_data);
extern GDBusConnection
    *g_dbus_connection_new_for_address_finish(GAsyncResult * res,
					      GError * *error);
extern GDBusConnection *g_dbus_connection_new_for_address_sync(const gchar
							       * address,
							       GDBusConnectionFlags
							       flags,
							       GDBusAuthObserver
							       * observer,
							       GCancellable
							       *
							       cancellable,
							       GError *
							       *error);
extern GDBusConnection *g_dbus_connection_new_sync(GIOStream * stream,
						   const gchar * guid,
						   GDBusConnectionFlags
						   flags,
						   GDBusAuthObserver *
						   observer,
						   GCancellable *
						   cancellable,
						   GError * *error);
extern guint g_dbus_connection_register_object(GDBusConnection *
					       connection,
					       const gchar * object_path,
					       GDBusInterfaceInfo *
					       interface_info,
					       const GDBusInterfaceVTable *
					       vtable, gpointer user_data,
					       GDestroyNotify
					       user_data_free_func,
					       GError * *error);
extern guint g_dbus_connection_register_subtree(GDBusConnection *
						connection,
						const gchar * object_path,
						const GDBusSubtreeVTable *
						vtable,
						GDBusSubtreeFlags flags,
						void *user_data,
						GDestroyNotify
						user_data_free_func,
						GError * *error);
extern void g_dbus_connection_remove_filter(GDBusConnection * connection,
					    guint filter_id);
extern gboolean g_dbus_connection_send_message(GDBusConnection *
					       connection,
					       GDBusMessage * message,
					       GDBusSendMessageFlags flags,
					       volatile unsigned int
					       *out_serial,
					       GError * *error);
extern void g_dbus_connection_send_message_with_reply(GDBusConnection *
						      connection,
						      GDBusMessage *
						      message,
						      GDBusSendMessageFlags
						      flags,
						      gint timeout_msec,
						      volatile unsigned int
						      *out_serial,
						      GCancellable *
						      cancellable,
						      GAsyncReadyCallback
						      callback,
						      gpointer user_data);
extern GDBusMessage
    *g_dbus_connection_send_message_with_reply_finish(GDBusConnection *
						      connection,
						      GAsyncResult * res,
						      GError * *error);
extern GDBusMessage
    *g_dbus_connection_send_message_with_reply_sync(GDBusConnection *
						    connection,
						    GDBusMessage * message,
						    GDBusSendMessageFlags
						    flags,
						    gint timeout_msec,
						    volatile unsigned int
						    *out_serial,
						    GCancellable *
						    cancellable,
						    GError * *error);
extern void g_dbus_connection_set_exit_on_close(GDBusConnection *
						connection,
						gboolean exit_on_close);
extern guint g_dbus_connection_signal_subscribe(GDBusConnection *
						connection,
						const gchar * sender,
						const gchar *
						interface_name,
						const gchar * member,
						const gchar * object_path,
						const gchar * arg0,
						GDBusSignalFlags flags,
						GDBusSignalCallback
						callback, void *user_data,
						GDestroyNotify
						user_data_free_func);
extern void g_dbus_connection_signal_unsubscribe(GDBusConnection *
						 connection,
						 guint subscription_id);
extern void g_dbus_connection_start_message_processing(GDBusConnection *
						       connection);
extern gboolean g_dbus_connection_unregister_object(GDBusConnection *
						    connection,
						    guint registration_id);
extern gboolean g_dbus_connection_unregister_subtree(GDBusConnection *
						     connection,
						     guint
						     registration_id);
</SCREEN>
</SECT2>
<SECT2>
<TITLE>glib-2.0/gio/gdbuserror.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define G_DBUS_ERROR	g_dbus_error_quark()

struct _GDBusErrorEntry {
    gint error_code;
    const gchar *dbus_error_name;
};
extern gchar *g_dbus_error_encode_gerror(const GError * error);
extern gchar *g_dbus_error_get_remote_error(const GError * error);
extern gboolean g_dbus_error_is_remote_error(const GError * error);
extern GError *g_dbus_error_new_for_dbus_error(const gchar *
					       dbus_error_name,
					       const gchar *
					       dbus_error_message);
extern GQuark g_dbus_error_quark(void);
extern gboolean g_dbus_error_register_error(GQuark error_domain,
					    gint error_code,
					    const gchar * dbus_error_name);
extern void g_dbus_error_register_error_domain(const gchar *
					       error_domain_quark_name,
					       volatile gsize *
					       quark_volatile,
					       const GDBusErrorEntry *
					       entries, guint num_entries);
extern void g_dbus_error_set_dbus_error(GError * *error,
					const gchar * dbus_error_name,
					const gchar * dbus_error_message,
					const gchar * format, ...);
extern void g_dbus_error_set_dbus_error_valist(GError * *error,
					       const gchar *
					       dbus_error_name,
					       const gchar *
					       dbus_error_message,
					       const gchar * format,
					       va_list var_args);
extern gboolean g_dbus_error_strip_remote_error(GError * error);
extern gboolean g_dbus_error_unregister_error(GQuark error_domain,
					      gint error_code,
					      const gchar *
					      dbus_error_name);
</SCREEN>
</SECT2>
<SECT2>
<TITLE>glib-2.0/gio/gdbusinterface.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define G_TYPE_DBUS_INTERFACE	(g_dbus_interface_get_type())
#define G_DBUS_INTERFACE(o)	(G_TYPE_CHECK_INSTANCE_CAST ((o), G_TYPE_DBUS_INTERFACE, GDBusInterface))
#define G_IS_DBUS_INTERFACE(o)	(G_TYPE_CHECK_INSTANCE_TYPE ((o), G_TYPE_DBUS_INTERFACE))
#define G_DBUS_INTERFACE_GET_IFACE(o)	(G_TYPE_INSTANCE_GET_INTERFACE((o), G_TYPE_DBUS_INTERFACE, GDBusInterfaceIface))

typedef struct _GDBusInterfaceIface {
    GTypeInterface parent_iface;
    GDBusInterfaceInfo *(*get_info) (GDBusInterface * interface_);
    GDBusObject *(*get_object) (GDBusInterface * interface_);
    void (*set_object) (GDBusInterface * interface_, GDBusObject * object);
    GDBusObject *(*dup_object) (GDBusInterface * interface_);
} GDBusInterfaceIface;
extern GDBusObject *g_dbus_interface_dup_object(GDBusInterface *
						interface_);
extern GDBusInterfaceInfo *g_dbus_interface_get_info(GDBusInterface *
						     interface_);
extern GDBusObject *g_dbus_interface_get_object(GDBusInterface *
						interface_);
extern GType g_dbus_interface_get_type(void);
extern void g_dbus_interface_set_object(GDBusInterface * interface_,
					GDBusObject * object);
</SCREEN>
</SECT2>
<SECT2>
<TITLE>glib-2.0/gio/gdbusinterfaceskeleton.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define G_TYPE_DBUS_INTERFACE_SKELETON	(g_dbus_interface_skeleton_get_type ())
#define G_DBUS_INTERFACE_SKELETON_CLASS(k)	(G_TYPE_CHECK_CLASS_CAST((k), G_TYPE_DBUS_INTERFACE_SKELETON, GDBusInterfaceSkeletonClass))
#define G_IS_DBUS_INTERFACE_SKELETON_CLASS(k)	(G_TYPE_CHECK_CLASS_TYPE ((k), G_TYPE_DBUS_INTERFACE_SKELETON))
#define G_DBUS_INTERFACE_SKELETON(o)	(G_TYPE_CHECK_INSTANCE_CAST ((o), G_TYPE_DBUS_INTERFACE_SKELETON, GDBusInterfaceSkeleton))
#define G_IS_DBUS_INTERFACE_SKELETON(o)	(G_TYPE_CHECK_INSTANCE_TYPE ((o), G_TYPE_DBUS_INTERFACE_SKELETON))
#define G_DBUS_INTERFACE_SKELETON_GET_CLASS(o)	(G_TYPE_INSTANCE_GET_CLASS ((o), G_TYPE_DBUS_INTERFACE_SKELETON, GDBusInterfaceSkeletonClass))

typedef struct _GDBusInterfaceSkeletonClass {
    GObjectClass parent_class;
    GDBusInterfaceInfo *(*get_info) (GDBusInterfaceSkeleton * interface_);
    GDBusInterfaceVTable *(*get_vtable) (GDBusInterfaceSkeleton *
					 interface_);
    GVariant *(*get_properties) (GDBusInterfaceSkeleton * interface_);
    void (*flush) (GDBusInterfaceSkeleton * interface_);
    gpointer vfunc_padding[8];
     gboolean(*g_authorize_method) (GDBusInterfaceSkeleton * interface_,
				    GDBusMethodInvocation * invocation);
    gpointer signal_padding[8];
} GDBusInterfaceSkeletonClass;
typedef struct _GDBusInterfaceSkeletonPrivate
    GDBusInterfaceSkeletonPrivate;
struct _GDBusInterfaceSkeleton {
    GObject parent_instance;
    GDBusInterfaceSkeletonPrivate *priv;
};
extern gboolean g_dbus_interface_skeleton_export(GDBusInterfaceSkeleton *
						 interface_,
						 GDBusConnection *
						 connection,
						 const gchar * object_path,
						 GError * *error);
extern void g_dbus_interface_skeleton_flush(GDBusInterfaceSkeleton *
					    interface_);
extern GDBusConnection
    *g_dbus_interface_skeleton_get_connection(GDBusInterfaceSkeleton *
					      interface_);
extern GList
    *g_dbus_interface_skeleton_get_connections(GDBusInterfaceSkeleton *
					       interface_);
extern GDBusInterfaceSkeletonFlags
g_dbus_interface_skeleton_get_flags(GDBusInterfaceSkeleton * interface_);
extern GDBusInterfaceInfo
    *g_dbus_interface_skeleton_get_info(GDBusInterfaceSkeleton *
					interface_);
extern const char
    *g_dbus_interface_skeleton_get_object_path(GDBusInterfaceSkeleton *
					       interface_);
extern GVariant
    *g_dbus_interface_skeleton_get_properties(GDBusInterfaceSkeleton *
					      interface_);
extern GType g_dbus_interface_skeleton_get_type(void);
extern GDBusInterfaceVTable
    *g_dbus_interface_skeleton_get_vtable(GDBusInterfaceSkeleton *
					  interface_);
extern gboolean
g_dbus_interface_skeleton_has_connection(GDBusInterfaceSkeleton *
					 interface_,
					 GDBusConnection * connection);
extern void g_dbus_interface_skeleton_set_flags(GDBusInterfaceSkeleton *
						interface_,
						GDBusInterfaceSkeletonFlags
						flags);
extern void g_dbus_interface_skeleton_unexport(GDBusInterfaceSkeleton *
					       interface_);
extern void
g_dbus_interface_skeleton_unexport_from_connection(GDBusInterfaceSkeleton *
						   interface_,
						   GDBusConnection *
						   connection);
</SCREEN>
</SECT2>
<SECT2>
<TITLE>glib-2.0/gio/gdbusintrospection.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define G_TYPE_DBUS_ANNOTATION_INFO	(g_dbus_annotation_info_get_type ())
#define G_TYPE_DBUS_ARG_INFO	(g_dbus_arg_info_get_type ())
#define G_TYPE_DBUS_INTERFACE_INFO	(g_dbus_interface_info_get_type ())
#define G_TYPE_DBUS_METHOD_INFO	(g_dbus_method_info_get_type ())
#define G_TYPE_DBUS_NODE_INFO	(g_dbus_node_info_get_type ())
#define G_TYPE_DBUS_PROPERTY_INFO	(g_dbus_property_info_get_type ())
#define G_TYPE_DBUS_SIGNAL_INFO	(g_dbus_signal_info_get_type ())

struct _GDBusAnnotationInfo {
    volatile gint ref_count;
    gchar *key;
    gchar *value;
    GDBusAnnotationInfo **annotations;
};
struct _GDBusArgInfo {
    volatile gint ref_count;
    gchar *name;
    gchar *signature;
    GDBusAnnotationInfo **annotations;
};
struct _GDBusMethodInfo {
    volatile gint ref_count;
    gchar *name;
    GDBusArgInfo **in_args;
    GDBusArgInfo **out_args;
    GDBusAnnotationInfo **annotations;
};
struct _GDBusSignalInfo {
    volatile gint ref_count;
    gchar *name;
    GDBusArgInfo **args;
    GDBusAnnotationInfo **annotations;
};
struct _GDBusPropertyInfo {
    volatile gint ref_count;
    gchar *name;
    gchar *signature;
    GDBusPropertyInfoFlags flags;
    GDBusAnnotationInfo **annotations;
};
struct _GDBusInterfaceInfo {
    volatile gint ref_count;
    gchar *name;
    GDBusMethodInfo **methods;
    GDBusSignalInfo **signals;
    GDBusPropertyInfo **properties;
    GDBusAnnotationInfo **annotations;
};
struct _GDBusNodeInfo {
    volatile gint ref_count;
    gchar *path;
    GDBusInterfaceInfo **interfaces;
    GDBusNodeInfo **nodes;
    GDBusAnnotationInfo **annotations;
};
extern GType g_dbus_annotation_info_get_type(void);
extern const char *g_dbus_annotation_info_lookup(GDBusAnnotationInfo *
						 *annotations,
						 const gchar * name);
extern GDBusAnnotationInfo *g_dbus_annotation_info_ref(GDBusAnnotationInfo
						       * info);
extern void g_dbus_annotation_info_unref(GDBusAnnotationInfo * info);
extern GType g_dbus_arg_info_get_type(void);
extern GDBusArgInfo *g_dbus_arg_info_ref(GDBusArgInfo * info);
extern void g_dbus_arg_info_unref(GDBusArgInfo * info);
extern void g_dbus_interface_info_cache_build(GDBusInterfaceInfo * info);
extern void g_dbus_interface_info_cache_release(GDBusInterfaceInfo * info);
extern void g_dbus_interface_info_generate_xml(GDBusInterfaceInfo * info,
					       guint indent,
					       GString * string_builder);
extern GType g_dbus_interface_info_get_type(void);
extern GDBusMethodInfo
    *g_dbus_interface_info_lookup_method(GDBusInterfaceInfo * info,
					 const gchar * name);
extern GDBusPropertyInfo
    *g_dbus_interface_info_lookup_property(GDBusInterfaceInfo * info,
					   const gchar * name);
extern GDBusSignalInfo
    *g_dbus_interface_info_lookup_signal(GDBusInterfaceInfo * info,
					 const gchar * name);
extern GDBusInterfaceInfo *g_dbus_interface_info_ref(GDBusInterfaceInfo *
						     info);
extern void g_dbus_interface_info_unref(GDBusInterfaceInfo * info);
extern GType g_dbus_method_info_get_type(void);
extern GDBusMethodInfo *g_dbus_method_info_ref(GDBusMethodInfo * info);
extern void g_dbus_method_info_unref(GDBusMethodInfo * info);
extern void g_dbus_node_info_generate_xml(GDBusNodeInfo * info,
					  guint indent,
					  GString * string_builder);
extern GType g_dbus_node_info_get_type(void);
extern GDBusInterfaceInfo *g_dbus_node_info_lookup_interface(GDBusNodeInfo
							     * info,
							     const gchar *
							     name);
extern GDBusNodeInfo *g_dbus_node_info_new_for_xml(const gchar * xml_data,
						   GError * *error);
extern GDBusNodeInfo *g_dbus_node_info_ref(GDBusNodeInfo * info);
extern void g_dbus_node_info_unref(GDBusNodeInfo * info);
extern GType g_dbus_property_info_get_type(void);
extern GDBusPropertyInfo *g_dbus_property_info_ref(GDBusPropertyInfo *
						   info);
extern void g_dbus_property_info_unref(GDBusPropertyInfo * info);
extern GType g_dbus_signal_info_get_type(void);
extern GDBusSignalInfo *g_dbus_signal_info_ref(GDBusSignalInfo * info);
extern void g_dbus_signal_info_unref(GDBusSignalInfo * info);
</SCREEN>
</SECT2>
<SECT2>
<TITLE>glib-2.0/gio/gdbusmenumodel.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define G_TYPE_DBUS_MENU_MODEL	(g_dbus_menu_model_get_type ())
#define G_DBUS_MENU_MODEL(inst)	(G_TYPE_CHECK_INSTANCE_CAST ((inst), G_TYPE_DBUS_MENU_MODEL, GDBusMenuModel))
#define G_IS_DBUS_MENU_MODEL(inst)	(G_TYPE_CHECK_INSTANCE_TYPE ((inst), G_TYPE_DBUS_MENU_MODEL))

typedef struct _GDBusMenuModel GDBusMenuModel;
extern GDBusMenuModel *g_dbus_menu_model_get(GDBusConnection * connection,
					     const gchar * bus_name,
					     const gchar * object_path);
extern GType g_dbus_menu_model_get_type(void);
</SCREEN>
</SECT2>
<SECT2>
<TITLE>glib-2.0/gio/gdbusmessage.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define G_TYPE_DBUS_MESSAGE	(g_dbus_message_get_type ())
#define G_DBUS_MESSAGE(o)	(G_TYPE_CHECK_INSTANCE_CAST ((o), G_TYPE_DBUS_MESSAGE, GDBusMessage))
#define G_IS_DBUS_MESSAGE(o)	(G_TYPE_CHECK_INSTANCE_TYPE ((o), G_TYPE_DBUS_MESSAGE))

extern gssize g_dbus_message_bytes_needed(guchar * blob, gsize blob_len,
					  GError * *error);
extern GDBusMessage *g_dbus_message_copy(GDBusMessage * message,
					 GError * *error);
extern const char *g_dbus_message_get_arg0(GDBusMessage * message);
extern GVariant *g_dbus_message_get_body(GDBusMessage * message);
extern GDBusMessageByteOrder g_dbus_message_get_byte_order(GDBusMessage *
							   message);
extern const char *g_dbus_message_get_destination(GDBusMessage * message);
extern const char *g_dbus_message_get_error_name(GDBusMessage * message);
extern GDBusMessageFlags g_dbus_message_get_flags(GDBusMessage * message);
extern GVariant *g_dbus_message_get_header(GDBusMessage * message,
					   GDBusMessageHeaderField
					   header_field);
extern guchar *g_dbus_message_get_header_fields(GDBusMessage * message);
extern const char *g_dbus_message_get_interface(GDBusMessage * message);
extern gboolean g_dbus_message_get_locked(GDBusMessage * message);
extern const char *g_dbus_message_get_member(GDBusMessage * message);
extern GDBusMessageType g_dbus_message_get_message_type(GDBusMessage *
							message);
extern guint32 g_dbus_message_get_num_unix_fds(GDBusMessage * message);
extern const char *g_dbus_message_get_path(GDBusMessage * message);
extern guint32 g_dbus_message_get_reply_serial(GDBusMessage * message);
extern const char *g_dbus_message_get_sender(GDBusMessage * message);
extern guint32 g_dbus_message_get_serial(GDBusMessage * message);
extern const char *g_dbus_message_get_signature(GDBusMessage * message);
extern GType g_dbus_message_get_type(void);
extern GUnixFDList *g_dbus_message_get_unix_fd_list(GDBusMessage *
						    message);
extern void g_dbus_message_lock(GDBusMessage * message);
extern GDBusMessage *g_dbus_message_new(void);
extern GDBusMessage *g_dbus_message_new_from_blob(guchar * blob,
						  gsize blob_len,
						  GDBusCapabilityFlags
						  capabilities,
						  GError * *error);
extern GDBusMessage *g_dbus_message_new_method_call(const gchar * name,
						    const gchar * path,
						    const gchar *
						    interface_,
						    const gchar * method);
extern GDBusMessage *g_dbus_message_new_method_error(GDBusMessage *
						     method_call_message,
						     const gchar *
						     error_name,
						     const gchar *
						     error_message_format,
						     ...);
extern GDBusMessage *g_dbus_message_new_method_error_literal(GDBusMessage *
							     method_call_message,
							     const gchar *
							     error_name,
							     const gchar *
							     error_message);
extern GDBusMessage *g_dbus_message_new_method_error_valist(GDBusMessage *
							    method_call_message,
							    const gchar *
							    error_name,
							    const gchar *
							    error_message_format,
							    va_list
							    var_args);
extern GDBusMessage *g_dbus_message_new_method_reply(GDBusMessage *
						     method_call_message);
extern GDBusMessage *g_dbus_message_new_signal(const gchar * path,
					       const gchar * interface_,
					       const gchar * signal);
extern gchar *g_dbus_message_print(GDBusMessage * message, guint indent);
extern void g_dbus_message_set_body(GDBusMessage * message,
				    GVariant * body);
extern void g_dbus_message_set_byte_order(GDBusMessage * message,
					  GDBusMessageByteOrder
					  byte_order);
extern void g_dbus_message_set_destination(GDBusMessage * message,
					   const gchar * value);
extern void g_dbus_message_set_error_name(GDBusMessage * message,
					  const gchar * value);
extern void g_dbus_message_set_flags(GDBusMessage * message,
				     GDBusMessageFlags flags);
extern void g_dbus_message_set_header(GDBusMessage * message,
				      GDBusMessageHeaderField header_field,
				      GVariant * value);
extern void g_dbus_message_set_interface(GDBusMessage * message,
					 const gchar * value);
extern void g_dbus_message_set_member(GDBusMessage * message,
				      const gchar * value);
extern void g_dbus_message_set_message_type(GDBusMessage * message,
					    GDBusMessageType type);
extern void g_dbus_message_set_num_unix_fds(GDBusMessage * message,
					    guint32 value);
extern void g_dbus_message_set_path(GDBusMessage * message,
				    const gchar * value);
extern void g_dbus_message_set_reply_serial(GDBusMessage * message,
					    guint32 value);
extern void g_dbus_message_set_sender(GDBusMessage * message,
				      const gchar * value);
extern void g_dbus_message_set_serial(GDBusMessage * message,
				      guint32 serial);
extern void g_dbus_message_set_signature(GDBusMessage * message,
					 const gchar * value);
extern void g_dbus_message_set_unix_fd_list(GDBusMessage * message,
					    GUnixFDList * fd_list);
extern guchar *g_dbus_message_to_blob(GDBusMessage * message,
				      gsize * out_size,
				      GDBusCapabilityFlags capabilities,
				      GError * *error);
extern gboolean g_dbus_message_to_gerror(GDBusMessage * message,
					 GError * *error);
</SCREEN>
</SECT2>
<SECT2>
<TITLE>glib-2.0/gio/gdbusmethodinvocation.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define G_TYPE_DBUS_METHOD_INVOCATION	(g_dbus_method_invocation_get_type ())
#define G_DBUS_METHOD_INVOCATION(o)	(G_TYPE_CHECK_INSTANCE_CAST ((o), G_TYPE_DBUS_METHOD_INVOCATION, GDBusMethodInvocation))
#define G_IS_DBUS_METHOD_INVOCATION(o)	(G_TYPE_CHECK_INSTANCE_TYPE ((o), G_TYPE_DBUS_METHOD_INVOCATION))

extern GDBusConnection
    *g_dbus_method_invocation_get_connection(GDBusMethodInvocation *
					     invocation);
extern const char
    *g_dbus_method_invocation_get_interface_name(GDBusMethodInvocation *
						 invocation);
extern GDBusMessage
    *g_dbus_method_invocation_get_message(GDBusMethodInvocation *
					  invocation);
extern const struct _GDBusMethodInfo
    *g_dbus_method_invocation_get_method_info(GDBusMethodInvocation *
					      invocation);
extern const char
    *g_dbus_method_invocation_get_method_name(GDBusMethodInvocation *
					      invocation);
extern const char
    *g_dbus_method_invocation_get_object_path(GDBusMethodInvocation *
					      invocation);
extern GVariant
    *g_dbus_method_invocation_get_parameters(GDBusMethodInvocation *
					     invocation);
extern const char
    *g_dbus_method_invocation_get_sender(GDBusMethodInvocation *
					 invocation);
extern GType g_dbus_method_invocation_get_type(void);
extern gpointer
g_dbus_method_invocation_get_user_data(GDBusMethodInvocation * invocation);
extern void
g_dbus_method_invocation_return_dbus_error(GDBusMethodInvocation *
					   invocation,
					   const gchar * error_name,
					   const gchar * error_message);
extern void g_dbus_method_invocation_return_error(GDBusMethodInvocation *
						  invocation,
						  GQuark domain, gint code,
						  const gchar * format,
						  ...);
extern void
g_dbus_method_invocation_return_error_literal(GDBusMethodInvocation *
					      invocation, GQuark domain,
					      gint code,
					      const gchar * message);
extern void
g_dbus_method_invocation_return_error_valist(GDBusMethodInvocation *
					     invocation, GQuark domain,
					     gint code,
					     const gchar * format,
					     va_list var_args);
extern void g_dbus_method_invocation_return_gerror(GDBusMethodInvocation *
						   invocation,
						   const struct _GError
						   *error);
extern void g_dbus_method_invocation_return_value(GDBusMethodInvocation *
						  invocation,
						  GVariant * parameters);
extern void
g_dbus_method_invocation_return_value_with_unix_fd_list
(GDBusMethodInvocation * invocation, GVariant * parameters, GUnixFDList * fd_list);
extern void g_dbus_method_invocation_take_error(GDBusMethodInvocation *
						invocation,
						GError * error);
</SCREEN>
</SECT2>
<SECT2>
<TITLE>glib-2.0/gio/gdbusnameowning.h</TITLE>
<PARA>
</PARA>
<SCREEN>

typedef void (*GBusAcquiredCallback) (GDBusConnection * connection,
				      const gchar * name,
				      gpointer user_data);
typedef void (*GBusNameAcquiredCallback) (GDBusConnection * connection,
					  const gchar * name,
					  gpointer user_data);
typedef void (*GBusNameLostCallback) (GDBusConnection * connection,
				      const gchar * name,
				      gpointer user_data);
extern guint g_bus_own_name(GBusType bus_type, const gchar * name,
			    GBusNameOwnerFlags flags,
			    GBusAcquiredCallback bus_acquired_handler,
			    GBusNameAcquiredCallback name_acquired_handler,
			    GBusNameLostCallback name_lost_handler,
			    gpointer user_data,
			    GDestroyNotify user_data_free_func);
extern guint g_bus_own_name_on_connection(GDBusConnection * connection,
					  const gchar * name,
					  GBusNameOwnerFlags flags,
					  GBusNameAcquiredCallback
					  name_acquired_handler,
					  GBusNameLostCallback
					  name_lost_handler,
					  gpointer user_data,
					  GDestroyNotify
					  user_data_free_func);
extern guint g_bus_own_name_on_connection_with_closures(GDBusConnection *
							connection,
							const gchar * name,
							GBusNameOwnerFlags
							flags,
							GClosure *
							name_acquired_closure,
							GClosure *
							name_lost_closure);
extern guint g_bus_own_name_with_closures(GBusType bus_type,
					  const gchar * name,
					  GBusNameOwnerFlags flags,
					  GClosure * bus_acquired_closure,
					  GClosure * name_acquired_closure,
					  GClosure * name_lost_closure);
extern void g_bus_unown_name(guint owner_id);
</SCREEN>
</SECT2>
<SECT2>
<TITLE>glib-2.0/gio/gdbusnamewatching.h</TITLE>
<PARA>
</PARA>
<SCREEN>

typedef void (*GBusNameAppearedCallback) (GDBusConnection * connection,
					  const gchar * name,
					  const gchar * name_owner,
					  gpointer user_data);
typedef void (*GBusNameVanishedCallback) (GDBusConnection * connection,
					  const gchar * name,
					  gpointer user_data);
extern void g_bus_unwatch_name(guint watcher_id);
extern guint g_bus_watch_name(GBusType bus_type, const gchar * name,
			      GBusNameWatcherFlags flags,
			      GBusNameAppearedCallback
			      name_appeared_handler,
			      GBusNameVanishedCallback
			      name_vanished_handler, gpointer user_data,
			      GDestroyNotify user_data_free_func);
extern guint g_bus_watch_name_on_connection(GDBusConnection * connection,
					    const gchar * name,
					    GBusNameWatcherFlags flags,
					    GBusNameAppearedCallback
					    name_appeared_handler,
					    GBusNameVanishedCallback
					    name_vanished_handler,
					    gpointer user_data,
					    GDestroyNotify
					    user_data_free_func);
extern guint g_bus_watch_name_on_connection_with_closures(GDBusConnection *
							  connection,
							  const gchar *
							  name,
							  GBusNameWatcherFlags
							  flags,
							  GClosure *
							  name_appeared_closure,
							  GClosure *
							  name_vanished_closure);
extern guint g_bus_watch_name_with_closures(GBusType bus_type,
					    const gchar * name,
					    GBusNameWatcherFlags flags,
					    GClosure *
					    name_appeared_closure,
					    GClosure *
					    name_vanished_closure);
</SCREEN>
</SECT2>
<SECT2>
<TITLE>glib-2.0/gio/gdbusobject.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define G_TYPE_DBUS_OBJECT	(g_dbus_object_get_type())
#define G_DBUS_OBJECT(o)	(G_TYPE_CHECK_INSTANCE_CAST ((o), G_TYPE_DBUS_OBJECT, GDBusObject))
#define G_IS_DBUS_OBJECT(o)	(G_TYPE_CHECK_INSTANCE_TYPE ((o), G_TYPE_DBUS_OBJECT))
#define G_DBUS_OBJECT_GET_IFACE(o)	(G_TYPE_INSTANCE_GET_INTERFACE((o), G_TYPE_DBUS_OBJECT, GDBusObjectIface))

typedef struct _GDBusObjectIface {
    GTypeInterface parent_iface;
    const gchar *(*get_object_path) (GDBusObject * object);
    GList *(*get_interfaces) (GDBusObject * object);
    GDBusInterface *(*get_interface) (GDBusObject * object,
				      const gchar * interface_name);
    void (*interface_added) (GDBusObject * object,
			     GDBusInterface * interface_);
    void (*interface_removed) (GDBusObject * object,
			       GDBusInterface * interface_);
} GDBusObjectIface;
extern GDBusInterface *g_dbus_object_get_interface(GDBusObject * object,
						   const gchar *
						   interface_name);
extern GList *g_dbus_object_get_interfaces(GDBusObject * object);
extern const char *g_dbus_object_get_object_path(GDBusObject * object);
extern GType g_dbus_object_get_type(void);
</SCREEN>
</SECT2>
<SECT2>
<TITLE>glib-2.0/gio/gdbusobjectmanager.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define G_TYPE_DBUS_OBJECT_MANAGER	(g_dbus_object_manager_get_type())
#define G_DBUS_OBJECT_MANAGER(o)	(G_TYPE_CHECK_INSTANCE_CAST ((o), G_TYPE_DBUS_OBJECT_MANAGER, GDBusObjectManager))
#define G_IS_DBUS_OBJECT_MANAGER(o)	(G_TYPE_CHECK_INSTANCE_TYPE ((o), G_TYPE_DBUS_OBJECT_MANAGER))
#define G_DBUS_OBJECT_MANAGER_GET_IFACE(o)	(G_TYPE_INSTANCE_GET_INTERFACE((o), G_TYPE_DBUS_OBJECT_MANAGER, GDBusObjectManagerIface))

typedef struct _GDBusObjectManagerIface {
    GTypeInterface parent_iface;
    const gchar *(*get_object_path) (GDBusObjectManager * manager);
    GList *(*get_objects) (GDBusObjectManager * manager);
    GDBusObject *(*get_object) (GDBusObjectManager * manager,
				const gchar * object_path);
    GDBusInterface *(*get_interface) (GDBusObjectManager * manager,
				      const gchar * object_path,
				      const gchar * interface_name);
    void (*object_added) (GDBusObjectManager * manager,
			  GDBusObject * object);
    void (*object_removed) (GDBusObjectManager * manager,
			    GDBusObject * object);
    void (*interface_added) (GDBusObjectManager * manager,
			     GDBusObject * object,
			     GDBusInterface * interface_);
    void (*interface_removed) (GDBusObjectManager * manager,
			       GDBusObject * object,
			       GDBusInterface * interface_);
} GDBusObjectManagerIface;
extern GDBusInterface
    *g_dbus_object_manager_get_interface(GDBusObjectManager * manager,
					 const gchar * object_path,
					 const gchar * interface_name);
extern GDBusObject *g_dbus_object_manager_get_object(GDBusObjectManager *
						     manager,
						     const gchar *
						     object_path);
extern const char *g_dbus_object_manager_get_object_path(GDBusObjectManager
							 * manager);
extern GList *g_dbus_object_manager_get_objects(GDBusObjectManager *
						manager);
extern GType g_dbus_object_manager_get_type(void);
</SCREEN>
</SECT2>
<SECT2>
<TITLE>glib-2.0/gio/gdbusobjectmanagerclient.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define G_TYPE_DBUS_OBJECT_MANAGER_CLIENT	(g_dbus_object_manager_client_get_type ())
#define G_DBUS_OBJECT_MANAGER_CLIENT_CLASS(k)	(G_TYPE_CHECK_CLASS_CAST((k), G_TYPE_DBUS_OBJECT_MANAGER_CLIENT, GDBusObjectManagerClientClass))
#define G_IS_DBUS_OBJECT_MANAGER_CLIENT_CLASS(k)	(G_TYPE_CHECK_CLASS_TYPE ((k), G_TYPE_DBUS_OBJECT_MANAGER_CLIENT))
#define G_DBUS_OBJECT_MANAGER_CLIENT(o)	(G_TYPE_CHECK_INSTANCE_CAST ((o), G_TYPE_DBUS_OBJECT_MANAGER_CLIENT, GDBusObjectManagerClient))
#define G_IS_DBUS_OBJECT_MANAGER_CLIENT(o)	(G_TYPE_CHECK_INSTANCE_TYPE ((o), G_TYPE_DBUS_OBJECT_MANAGER_CLIENT))
#define G_DBUS_OBJECT_MANAGER_CLIENT_GET_CLASS(o)	(G_TYPE_INSTANCE_GET_CLASS ((o), G_TYPE_DBUS_OBJECT_MANAGER_CLIENT, GDBusObjectManagerClientClass))

typedef struct _GDBusObjectManagerClientClass {
    GObjectClass parent_class;
    void (*interface_proxy_signal) (GDBusObjectManagerClient * manager,
				    GDBusObjectProxy * object_proxy,
				    GDBusProxy * interface_proxy,
				    const gchar * sender_name,
				    const gchar * signal_name,
				    GVariant * parameters);
    void (*interface_proxy_properties_changed) (GDBusObjectManagerClient *
						manager,
						GDBusObjectProxy *
						object_proxy,
						GDBusProxy *
						interface_proxy,
						GVariant *
						changed_properties,
						const gchar *
						const
						*invalidated_properties);
    gpointer padding[8];
} GDBusObjectManagerClientClass;
typedef struct _GDBusObjectManagerClientPrivate
    GDBusObjectManagerClientPrivate;
struct _GDBusObjectManagerClient {
    GObject parent_instance;
    GDBusObjectManagerClientPrivate *priv;
};
extern GDBusConnection
    *g_dbus_object_manager_client_get_connection(GDBusObjectManagerClient *
						 manager);
extern GDBusObjectManagerClientFlags
g_dbus_object_manager_client_get_flags(GDBusObjectManagerClient * manager);
extern const char
    *g_dbus_object_manager_client_get_name(GDBusObjectManagerClient *
					   manager);
extern gchar
    *g_dbus_object_manager_client_get_name_owner(GDBusObjectManagerClient *
						 manager);
extern GType g_dbus_object_manager_client_get_type(void);
extern void g_dbus_object_manager_client_new(GDBusConnection * connection,
					     GDBusObjectManagerClientFlags
					     flags, const gchar * name,
					     const gchar * object_path,
					     GDBusProxyTypeFunc
					     get_proxy_type_func,
					     gpointer
					     get_proxy_type_user_data,
					     GDestroyNotify
					     get_proxy_type_destroy_notify,
					     GCancellable * cancellable,
					     GAsyncReadyCallback callback,
					     gpointer user_data);
extern GDBusObjectManager
    *g_dbus_object_manager_client_new_finish(GAsyncResult * res,
					     GError * *error);
extern void g_dbus_object_manager_client_new_for_bus(GBusType bus_type,
						     GDBusObjectManagerClientFlags
						     flags,
						     const gchar * name,
						     const gchar *
						     object_path,
						     GDBusProxyTypeFunc
						     get_proxy_type_func,
						     gpointer
						     get_proxy_type_user_data,
						     GDestroyNotify
						     get_proxy_type_destroy_notify,
						     GCancellable *
						     cancellable,
						     GAsyncReadyCallback
						     callback,
						     gpointer user_data);
extern GDBusObjectManager
    *g_dbus_object_manager_client_new_for_bus_finish(GAsyncResult * res,
						     GError * *error);
extern GDBusObjectManager
    *g_dbus_object_manager_client_new_for_bus_sync(GBusType bus_type,
						   GDBusObjectManagerClientFlags
						   flags,
						   const gchar * name,
						   const gchar *
						   object_path,
						   GDBusProxyTypeFunc
						   get_proxy_type_func,
						   gpointer
						   get_proxy_type_user_data,
						   GDestroyNotify
						   get_proxy_type_destroy_notify,
						   GCancellable *
						   cancellable,
						   GError * *error);
extern GDBusObjectManager
    *g_dbus_object_manager_client_new_sync(GDBusConnection * connection,
					   GDBusObjectManagerClientFlags
					   flags, const gchar * name,
					   const gchar * object_path,
					   GDBusProxyTypeFunc
					   get_proxy_type_func,
					   gpointer
					   get_proxy_type_user_data,
					   GDestroyNotify
					   get_proxy_type_destroy_notify,
					   GCancellable * cancellable,
					   GError * *error);
</SCREEN>
</SECT2>
<SECT2>
<TITLE>glib-2.0/gio/gdbusobjectmanagerserver.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define G_TYPE_DBUS_OBJECT_MANAGER_SERVER	(g_dbus_object_manager_server_get_type ())
#define G_DBUS_OBJECT_MANAGER_SERVER_CLASS(k)	(G_TYPE_CHECK_CLASS_CAST((k), G_TYPE_DBUS_OBJECT_MANAGER_SERVER, GDBusObjectManagerServerClass))
#define G_IS_DBUS_OBJECT_MANAGER_SERVER_CLASS(k)	(G_TYPE_CHECK_CLASS_TYPE ((k), G_TYPE_DBUS_OBJECT_MANAGER_SERVER))
#define G_DBUS_OBJECT_MANAGER_SERVER(o)	(G_TYPE_CHECK_INSTANCE_CAST ((o), G_TYPE_DBUS_OBJECT_MANAGER_SERVER, GDBusObjectManagerServer))
#define G_IS_DBUS_OBJECT_MANAGER_SERVER(o)	(G_TYPE_CHECK_INSTANCE_TYPE ((o), G_TYPE_DBUS_OBJECT_MANAGER_SERVER))
#define G_DBUS_OBJECT_MANAGER_SERVER_GET_CLASS(o)	(G_TYPE_INSTANCE_GET_CLASS ((o), G_TYPE_DBUS_OBJECT_MANAGER_SERVER, GDBusObjectManagerServerClass))

typedef struct _GDBusObjectManagerServerClass {
    GObjectClass parent_class;
    gpointer padding[8];
} GDBusObjectManagerServerClass;
typedef struct _GDBusObjectManagerServerPrivate
    GDBusObjectManagerServerPrivate;
struct _GDBusObjectManagerServer {
    GObject parent_instance;
    GDBusObjectManagerServerPrivate *priv;
};
extern void g_dbus_object_manager_server_export(GDBusObjectManagerServer *
						manager,
						GDBusObjectSkeleton *
						object);
extern void
g_dbus_object_manager_server_export_uniquely(GDBusObjectManagerServer *
					     manager,
					     GDBusObjectSkeleton * object);
extern GDBusConnection
    *g_dbus_object_manager_server_get_connection(GDBusObjectManagerServer *
						 manager);
extern GType g_dbus_object_manager_server_get_type(void);
extern GDBusObjectManagerServer *g_dbus_object_manager_server_new(const
								  gchar *
								  object_path);
extern void
g_dbus_object_manager_server_set_connection(GDBusObjectManagerServer *
					    manager,
					    GDBusConnection * connection);
extern gboolean
g_dbus_object_manager_server_unexport(GDBusObjectManagerServer * manager,
				      const gchar * object_path);
</SCREEN>
</SECT2>
<SECT2>
<TITLE>glib-2.0/gio/gdbusobjectproxy.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define G_TYPE_DBUS_OBJECT_PROXY	(g_dbus_object_proxy_get_type ())
#define G_DBUS_OBJECT_PROXY_CLASS(k)	(G_TYPE_CHECK_CLASS_CAST((k), G_TYPE_DBUS_OBJECT_PROXY, GDBusObjectProxyClass))
#define G_IS_DBUS_OBJECT_PROXY_CLASS(k)	(G_TYPE_CHECK_CLASS_TYPE ((k), G_TYPE_DBUS_OBJECT_PROXY))
#define G_DBUS_OBJECT_PROXY(o)	(G_TYPE_CHECK_INSTANCE_CAST ((o), G_TYPE_DBUS_OBJECT_PROXY, GDBusObjectProxy))
#define G_IS_DBUS_OBJECT_PROXY(o)	(G_TYPE_CHECK_INSTANCE_TYPE ((o), G_TYPE_DBUS_OBJECT_PROXY))
#define G_DBUS_OBJECT_PROXY_GET_CLASS(o)	(G_TYPE_INSTANCE_GET_CLASS ((o), G_TYPE_DBUS_OBJECT_PROXY, GDBusObjectProxyClass))

typedef struct _GDBusObjectProxyClass {
    GObjectClass parent_class;
    gpointer padding[8];
} GDBusObjectProxyClass;
typedef struct _GDBusObjectProxyPrivate GDBusObjectProxyPrivate;
struct _GDBusObjectProxy {
    GObject parent_instance;
    GDBusObjectProxyPrivate *priv;
};
extern GDBusConnection *g_dbus_object_proxy_get_connection(GDBusObjectProxy
							   * proxy);
extern GType g_dbus_object_proxy_get_type(void);
extern GDBusObjectProxy *g_dbus_object_proxy_new(GDBusConnection *
						 connection,
						 const gchar *
						 object_path);
</SCREEN>
</SECT2>
<SECT2>
<TITLE>glib-2.0/gio/gdbusobjectskeleton.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define G_TYPE_DBUS_OBJECT_SKELETON	(g_dbus_object_skeleton_get_type ())
#define G_DBUS_OBJECT_SKELETON_CLASS(k)	(G_TYPE_CHECK_CLASS_CAST((k), G_TYPE_DBUS_OBJECT_SKELETON, GDBusObjectSkeletonClass))
#define G_IS_DBUS_OBJECT_SKELETON_CLASS(k)	(G_TYPE_CHECK_CLASS_TYPE ((k), G_TYPE_DBUS_OBJECT_SKELETON))
#define G_DBUS_OBJECT_SKELETON(o)	(G_TYPE_CHECK_INSTANCE_CAST ((o), G_TYPE_DBUS_OBJECT_SKELETON, GDBusObjectSkeleton))
#define G_IS_DBUS_OBJECT_SKELETON(o)	(G_TYPE_CHECK_INSTANCE_TYPE ((o), G_TYPE_DBUS_OBJECT_SKELETON))
#define G_DBUS_OBJECT_SKELETON_GET_CLASS(o)	(G_TYPE_INSTANCE_GET_CLASS ((o), G_TYPE_DBUS_OBJECT_SKELETON, GDBusObjectSkeletonClass))

typedef struct _GDBusObjectSkeletonClass {
    GObjectClass parent_class;
     gboolean(*authorize_method) (GDBusObjectSkeleton * object,
				  GDBusInterfaceSkeleton * interface_,
				  GDBusMethodInvocation * invocation);
    gpointer padding[8];
} GDBusObjectSkeletonClass;
typedef struct _GDBusObjectSkeletonPrivate GDBusObjectSkeletonPrivate;
struct _GDBusObjectSkeleton {
    GObject parent_instance;
    GDBusObjectSkeletonPrivate *priv;
};
extern void g_dbus_object_skeleton_add_interface(GDBusObjectSkeleton *
						 object,
						 GDBusInterfaceSkeleton *
						 interface_);
extern void g_dbus_object_skeleton_flush(GDBusObjectSkeleton * object);
extern GType g_dbus_object_skeleton_get_type(void);
extern GDBusObjectSkeleton *g_dbus_object_skeleton_new(const gchar *
						       object_path);
extern void g_dbus_object_skeleton_remove_interface(GDBusObjectSkeleton *
						    object,
						    GDBusInterfaceSkeleton
						    * interface_);
extern void
g_dbus_object_skeleton_remove_interface_by_name(GDBusObjectSkeleton *
						object,
						const gchar *
						interface_name);
extern void g_dbus_object_skeleton_set_object_path(GDBusObjectSkeleton *
						   object,
						   const gchar *
						   object_path);
</SCREEN>
</SECT2>
<SECT2>
<TITLE>glib-2.0/gio/gdbusproxy.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define G_TYPE_DBUS_PROXY	(g_dbus_proxy_get_type ())
#define G_DBUS_PROXY_CLASS(k)	(G_TYPE_CHECK_CLASS_CAST((k), G_TYPE_DBUS_PROXY, GDBusProxyClass))
#define G_IS_DBUS_PROXY_CLASS(k)	(G_TYPE_CHECK_CLASS_TYPE ((k), G_TYPE_DBUS_PROXY))
#define G_DBUS_PROXY(o)	(G_TYPE_CHECK_INSTANCE_CAST ((o), G_TYPE_DBUS_PROXY, GDBusProxy))
#define G_IS_DBUS_PROXY(o)	(G_TYPE_CHECK_INSTANCE_TYPE ((o), G_TYPE_DBUS_PROXY))
#define G_DBUS_PROXY_GET_CLASS(o)	(G_TYPE_INSTANCE_GET_CLASS ((o), G_TYPE_DBUS_PROXY, GDBusProxyClass))

typedef struct _GDBusProxyClass {
    GObjectClass parent_class;
    void (*g_properties_changed) (GDBusProxy * proxy,
				  GVariant * changed_properties,
				  const gchar *
				  const *invalidated_properties);
    void (*g_signal) (GDBusProxy * proxy, const gchar * sender_name,
		      const gchar * signal_name, GVariant * parameters);
    gpointer padding[32];
} GDBusProxyClass;
typedef struct _GDBusProxyPrivate GDBusProxyPrivate;
struct _GDBusProxy {
    GObject parent_instance;
    GDBusProxyPrivate *priv;
};
extern void g_dbus_proxy_call(GDBusProxy * proxy,
			      const gchar * method_name,
			      GVariant * parameters, GDBusCallFlags flags,
			      gint timeout_msec,
			      GCancellable * cancellable,
			      GAsyncReadyCallback callback,
			      gpointer user_data);
extern GVariant *g_dbus_proxy_call_finish(GDBusProxy * proxy,
					  GAsyncResult * res,
					  GError * *error);
extern GVariant *g_dbus_proxy_call_sync(GDBusProxy * proxy,
					const gchar * method_name,
					GVariant * parameters,
					GDBusCallFlags flags,
					gint timeout_msec,
					GCancellable * cancellable,
					GError * *error);
extern void g_dbus_proxy_call_with_unix_fd_list(GDBusProxy * proxy,
						const gchar * method_name,
						GVariant * parameters,
						GDBusCallFlags flags,
						gint timeout_msec,
						GUnixFDList * fd_list,
						GCancellable * cancellable,
						GAsyncReadyCallback
						callback,
						gpointer user_data);
extern GVariant *g_dbus_proxy_call_with_unix_fd_list_finish(GDBusProxy *
							    proxy,
							    GUnixFDList *
							    *out_fd_list,
							    GAsyncResult *
							    res,
							    GError *
							    *error);
extern GVariant *g_dbus_proxy_call_with_unix_fd_list_sync(GDBusProxy *
							  proxy,
							  const gchar *
							  method_name,
							  GVariant *
							  parameters,
							  GDBusCallFlags
							  flags,
							  gint
							  timeout_msec,
							  GUnixFDList *
							  fd_list,
							  GUnixFDList *
							  *out_fd_list,
							  GCancellable *
							  cancellable,
							  GError * *error);
extern GVariant *g_dbus_proxy_get_cached_property(GDBusProxy * proxy,
						  const gchar *
						  property_name);
extern gchar **g_dbus_proxy_get_cached_property_names(GDBusProxy * proxy);
extern GDBusConnection *g_dbus_proxy_get_connection(GDBusProxy * proxy);
extern gint g_dbus_proxy_get_default_timeout(GDBusProxy * proxy);
extern GDBusProxyFlags g_dbus_proxy_get_flags(GDBusProxy * proxy);
extern GDBusInterfaceInfo *g_dbus_proxy_get_interface_info(GDBusProxy *
							   proxy);
extern const char *g_dbus_proxy_get_interface_name(GDBusProxy * proxy);
extern const char *g_dbus_proxy_get_name(GDBusProxy * proxy);
extern gchar *g_dbus_proxy_get_name_owner(GDBusProxy * proxy);
extern const char *g_dbus_proxy_get_object_path(GDBusProxy * proxy);
extern GType g_dbus_proxy_get_type(void);
extern void g_dbus_proxy_new(GDBusConnection * connection,
			     GDBusProxyFlags flags,
			     GDBusInterfaceInfo * info, const gchar * name,
			     const gchar * object_path,
			     const gchar * interface_name,
			     GCancellable * cancellable,
			     GAsyncReadyCallback callback,
			     gpointer user_data);
extern GDBusProxy *g_dbus_proxy_new_finish(GAsyncResult * res,
					   GError * *error);
extern void g_dbus_proxy_new_for_bus(GBusType bus_type,
				     GDBusProxyFlags flags,
				     GDBusInterfaceInfo * info,
				     const gchar * name,
				     const gchar * object_path,
				     const gchar * interface_name,
				     GCancellable * cancellable,
				     GAsyncReadyCallback callback,
				     gpointer user_data);
extern GDBusProxy *g_dbus_proxy_new_for_bus_finish(GAsyncResult * res,
						   GError * *error);
extern GDBusProxy *g_dbus_proxy_new_for_bus_sync(GBusType bus_type,
						 GDBusProxyFlags flags,
						 GDBusInterfaceInfo * info,
						 const gchar * name,
						 const gchar * object_path,
						 const gchar *
						 interface_name,
						 GCancellable *
						 cancellable,
						 GError * *error);
extern GDBusProxy *g_dbus_proxy_new_sync(GDBusConnection * connection,
					 GDBusProxyFlags flags,
					 GDBusInterfaceInfo * info,
					 const gchar * name,
					 const gchar * object_path,
					 const gchar * interface_name,
					 GCancellable * cancellable,
					 GError * *error);
extern void g_dbus_proxy_set_cached_property(GDBusProxy * proxy,
					     const gchar * property_name,
					     GVariant * value);
extern void g_dbus_proxy_set_default_timeout(GDBusProxy * proxy,
					     gint timeout_msec);
extern void g_dbus_proxy_set_interface_info(GDBusProxy * proxy,
					    GDBusInterfaceInfo * info);
</SCREEN>
</SECT2>
<SECT2>
<TITLE>glib-2.0/gio/gdbusserver.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define G_TYPE_DBUS_SERVER	(g_dbus_server_get_type ())
#define G_DBUS_SERVER(o)	(G_TYPE_CHECK_INSTANCE_CAST ((o), G_TYPE_DBUS_SERVER, GDBusServer))
#define G_IS_DBUS_SERVER(o)	(G_TYPE_CHECK_INSTANCE_TYPE ((o), G_TYPE_DBUS_SERVER))

extern const char *g_dbus_server_get_client_address(GDBusServer * server);
extern GDBusServerFlags g_dbus_server_get_flags(GDBusServer * server);
extern const char *g_dbus_server_get_guid(GDBusServer * server);
extern GType g_dbus_server_get_type(void);
extern gboolean g_dbus_server_is_active(GDBusServer * server);
extern GDBusServer *g_dbus_server_new_sync(const gchar * address,
					   GDBusServerFlags flags,
					   const gchar * guid,
					   GDBusAuthObserver * observer,
					   GCancellable * cancellable,
					   GError * *error);
extern void g_dbus_server_start(GDBusServer * server);
extern void g_dbus_server_stop(GDBusServer * server);
</SCREEN>
</SECT2>
<SECT2>
<TITLE>glib-2.0/gio/gdbusutils.h</TITLE>
<PARA>
</PARA>
<SCREEN>

extern gchar *g_dbus_generate_guid(void);
extern GVariant *g_dbus_gvalue_to_gvariant(const GValue * gvalue,
					   const GVariantType * type);
extern void g_dbus_gvariant_to_gvalue(GVariant * value,
				      GValue * out_gvalue);
extern gboolean g_dbus_is_guid(const gchar * string);
extern gboolean g_dbus_is_interface_name(const gchar * string);
extern gboolean g_dbus_is_member_name(const gchar * string);
extern gboolean g_dbus_is_name(const gchar * string);
extern gboolean g_dbus_is_unique_name(const gchar * string);
</SCREEN>
</SECT2>
<SECT2>
<TITLE>glib-2.0/gio/gdrive.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define G_TYPE_DRIVE	(g_drive_get_type ())
#define G_DRIVE(obj)	(G_TYPE_CHECK_INSTANCE_CAST ((obj), G_TYPE_DRIVE, GDrive))
#define G_IS_DRIVE(obj)	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), G_TYPE_DRIVE))
#define G_DRIVE_GET_IFACE(obj)	(G_TYPE_INSTANCE_GET_INTERFACE ((obj), G_TYPE_DRIVE, GDriveIface))

typedef struct _GDriveIface {
    GTypeInterface g_iface;
    void (*changed) (GDrive * drive);
    void (*disconnected) (GDrive * drive);
    void (*eject_button) (GDrive * drive);
    char *(*get_name) (GDrive * drive);
    GIcon *(*get_icon) (GDrive * drive);
     gboolean(*has_volumes) (GDrive * drive);
    GList *(*get_volumes) (GDrive * drive);
     gboolean(*is_media_removable) (GDrive * drive);
     gboolean(*has_media) (GDrive * drive);
     gboolean(*is_media_check_automatic) (GDrive * drive);
     gboolean(*can_eject) (GDrive * drive);
     gboolean(*can_poll_for_media) (GDrive * drive);
    void (*eject) (GDrive * drive, GMountUnmountFlags flags,
		   GCancellable * cancellable,
		   GAsyncReadyCallback callback, gpointer user_data);
     gboolean(*eject_finish) (GDrive * drive, GAsyncResult * result,
			      GError * *error);
    void (*poll_for_media) (GDrive * drive, GCancellable * cancellable,
			    GAsyncReadyCallback callback,
			    gpointer user_data);
     gboolean(*poll_for_media_finish) (GDrive * drive,
				       GAsyncResult * result,
				       GError * *error);
    char *(*get_identifier) (GDrive * drive, const char *kind);
    char **(*enumerate_identifiers) (GDrive * drive);
     GDriveStartStopType(*get_start_stop_type) (GDrive * drive);
     gboolean(*can_start) (GDrive * drive);
     gboolean(*can_start_degraded) (GDrive * drive);
    void (*start) (GDrive * drive, GDriveStartFlags flags,
		   GMountOperation mount_operation,
		   GCancellable * cancellable,
		   GAsyncReadyCallback callback, gpointer user_data);
     gboolean(*start_finish) (GDrive * drive, GAsyncResult * result,
			      GError * *error);
     gboolean(*can_stop) (GDrive * drive);
    void (*stop) (GDrive * drive, GMountUnmountFlags flags,
		  GMountOperation * mount_operation,
		  GCancellable * cancellable, GAsyncReadyCallback callback,
		  gpointer user_data);
     gboolean(*stop_finish) (GDrive * drive, GAsyncResult * result,
			     GError * *error);
    void (*stop_button) (GDrive * drive);
    void (*eject_with_operation) (GDrive * drive, GMountUnmountFlags flags,
				  GMountOperation * mount_operation,
				  GCancellable * cancellable,
				  GAsyncReadyCallback callback,
				  gpointer user_data);
     gboolean(*eject_with_operation_finish) (GDrive * drive,
					     GAsyncResult * result,
					     GError * *error);
    const gchar *(*get_sort_key) (GDrive * drive);
} GDriveIface;
extern gboolean g_drive_can_eject(GDrive * drive);
extern gboolean g_drive_can_poll_for_media(GDrive * drive);
extern gboolean g_drive_can_start(GDrive * drive);
extern gboolean g_drive_can_start_degraded(GDrive * drive);
extern gboolean g_drive_can_stop(GDrive * drive);
extern void g_drive_eject(GDrive * drive, GMountUnmountFlags flags,
			  GCancellable * cancellable,
			  GAsyncReadyCallback callback,
			  gpointer user_data);
extern gboolean g_drive_eject_finish(GDrive * drive, GAsyncResult * result,
				     GError * *error);
extern void g_drive_eject_with_operation(GDrive * drive,
					 GMountUnmountFlags flags,
					 GMountOperation * mount_operation,
					 GCancellable * cancellable,
					 GAsyncReadyCallback callback,
					 gpointer user_data);
extern gboolean g_drive_eject_with_operation_finish(GDrive * drive,
						    GAsyncResult * result,
						    GError * *error);
extern void g_drive_enumerate_identifiers(GDrive * drive);
extern GIcon *g_drive_get_icon(GDrive * drive);
extern char *g_drive_get_identifier(GDrive * drive, const char *kind);
extern char *g_drive_get_name(GDrive * drive);
extern const char *g_drive_get_sort_key(GDrive * drive);
extern GDriveStartStopType g_drive_get_start_stop_type(GDrive * drive);
extern GType g_drive_get_type(void);
extern GList *g_drive_get_volumes(GDrive * drive);
extern gboolean g_drive_has_media(GDrive * drive);
extern gboolean g_drive_has_volumes(GDrive * drive);
extern gboolean g_drive_is_media_check_automatic(GDrive * drive);
extern gboolean g_drive_is_media_removable(GDrive * drive);
extern void g_drive_poll_for_media(GDrive * drive,
				   GCancellable * cancellable,
				   GAsyncReadyCallback callback,
				   gpointer user_data);
extern gboolean g_drive_poll_for_media_finish(GDrive * drive,
					      GAsyncResult * result,
					      GError * *error);
extern void g_drive_start(GDrive * drive, GDriveStartFlags flags,
			  GMountOperation * mount_operation,
			  GCancellable * cancellable,
			  GAsyncReadyCallback callback,
			  gpointer user_data);
extern gboolean g_drive_start_finish(GDrive * drive, GAsyncResult * result,
				     GError * *error);
extern void g_drive_stop(GDrive * drive, GMountUnmountFlags flags,
			 GMountOperation * mount_operation,
			 GCancellable * cancellable,
			 GAsyncReadyCallback callback, gpointer user_data);
extern gboolean g_drive_stop_finish(GDrive * drive, GAsyncResult * result,
				    GError * *error);
</SCREEN>
</SECT2>
<SECT2>
<TITLE>glib-2.0/gio/gemblem.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define G_TYPE_EMBLEM	(g_emblem_get_type ())
#define G_EMBLEM_CLASS(k)	(G_TYPE_CHECK_CLASS_CAST((k), G_TYPE_EMBLEM, GEmblemClass))
#define G_IS_EMBLEM_CLASS(k)	(G_TYPE_CHECK_CLASS_TYPE ((k), G_TYPE_EMBLEM))
#define G_EMBLEM(o)	(G_TYPE_CHECK_INSTANCE_CAST ((o), G_TYPE_EMBLEM, GEmblem))
#define G_IS_EMBLEM(o)	(G_TYPE_CHECK_INSTANCE_TYPE ((o), G_TYPE_EMBLEM))
#define G_EMBLEM_GET_CLASS(o)	(G_TYPE_INSTANCE_GET_CLASS ((o), G_TYPE_EMBLEM, GEmblemClass))

typedef struct _GEmblem GEmblem;
typedef struct _GEmblemClass GEmblemClass;
extern GIcon *g_emblem_get_icon(GEmblem * emblem);
extern GEmblemOrigin g_emblem_get_origin(GEmblem * emblem);
extern GType g_emblem_get_type(void);
extern GEmblem *g_emblem_new(GIcon * icon);
extern GEmblem *g_emblem_new_with_origin(GIcon * icon,
					 GEmblemOrigin origin);
</SCREEN>
</SECT2>
<SECT2>
<TITLE>glib-2.0/gio/gemblemedicon.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define G_TYPE_EMBLEMED_ICON	(g_emblemed_icon_get_type ())
#define G_EMBLEMED_ICON_CLASS(k)	(G_TYPE_CHECK_CLASS_CAST((k), G_TYPE_EMBLEMED_ICON, GEmblemedIconClass))
#define G_IS_EMBLEMED_ICON_CLASS(k)	(G_TYPE_CHECK_CLASS_TYPE ((k), G_TYPE_EMBLEMED_ICON))
#define G_EMBLEMED_ICON(o)	(G_TYPE_CHECK_INSTANCE_CAST ((o), G_TYPE_EMBLEMED_ICON, GEmblemedIcon))
#define G_IS_EMBLEMED_ICON(o)	(G_TYPE_CHECK_INSTANCE_TYPE ((o), G_TYPE_EMBLEMED_ICON))
#define G_EMBLEMED_ICON_GET_CLASS(o)	(G_TYPE_INSTANCE_GET_CLASS ((o), G_TYPE_EMBLEMED_ICON, GEmblemedIconClass))

typedef struct _GEmblemedIcon {
    GObject parent_instance;
    GEmblemedIconPrivate *priv;
} GEmblemedIcon;
typedef struct _GEmblemedIconClass {
    GObjectClass parent_class;
} GEmblemedIconClass;
typedef struct _GEmblemedIconPrivate GEmblemedIconPrivate;
extern void g_emblemed_icon_add_emblem(GEmblemedIcon * emblemed,
				       GEmblem * emblem);
extern void g_emblemed_icon_clear_emblems(GEmblemedIcon * emblemed);
extern GList *g_emblemed_icon_get_emblems(GEmblemedIcon * emblemed);
extern GIcon *g_emblemed_icon_get_icon(GEmblemedIcon * emblemed);
extern GType g_emblemed_icon_get_type(void);
extern GIcon *g_emblemed_icon_new(GIcon * icon, GEmblem * emblem);
</SCREEN>
</SECT2>
<SECT2>
<TITLE>glib-2.0/gio/gfile.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define G_TYPE_FILE	(g_file_get_type ())
#define G_FILE(obj)	(G_TYPE_CHECK_INSTANCE_CAST ((obj), G_TYPE_FILE, GFile))
#define G_IS_FILE(obj)	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), G_TYPE_FILE))
#define G_FILE_GET_IFACE(obj)	(G_TYPE_INSTANCE_GET_INTERFACE ((obj), G_TYPE_FILE, GFileIface))

struct _GFileIface {
    GTypeInterface g_iface;
    GFile *(*dup) (GFile * file);
     guint(*hash) (GFile * file);
     gboolean(*equal) (GFile * file1, GFile * file2);
     gboolean(*is_native) (GFile * file);
     gboolean(*has_uri_scheme) (GFile * file, const char *uri_scheme);
    char *(*get_uri_scheme) (GFile * file);
    char *(*get_basename) (GFile * file);
    char *(*get_path) (GFile * file);
    char *(*get_uri) (GFile * file);
    char *(*get_parse_name) (GFile * file);
    GFile *(*get_parent) (GFile * file);
     gboolean(*prefix_matches) (GFile * prefix, GFile * file);
    char *(*get_relative_path) (GFile * parent, GFile * descendant);
    GFile *(*resolve_relative_path) (GFile * file,
				     const char *relative_path);
    GFile *(*get_child_for_display_name) (GFile * file,
					  const char *display_name,
					  GError * *error);
    GFileEnumerator *(*enumerate_children) (GFile * file,
					    const char *attributes,
					    GFileQueryInfoFlags flags,
					    GCancellable * cancellable,
					    GError * *error);
    void (*enumerate_children_async) (GFile * file, const char *attributes,
				      GFileQueryInfoFlags flags,
				      int io_priority,
				      GCancellable * cancellable,
				      GAsyncReadyCallback callback,
				      gpointer user_data);
    GFileEnumerator *(*enumerate_children_finish) (GFile * file,
						   GAsyncResult * res,
						   GError * *error);
    GFileInfo *(*query_info) (GFile * file, const char *attributes,
			      GFileQueryInfoFlags flags,
			      GCancellable * cancellable, GError * *error);
    void (*query_info_async) (GFile * file, const char *attributes,
			      GFileQueryInfoFlags flags, int io_priority,
			      GCancellable * cancellable,
			      GAsyncReadyCallback callback,
			      gpointer user_data);
    GFileInfo *(*query_info_finish) (GFile * file, GAsyncResult * res,
				     GError * *error);
    GFileInfo *(*query_filesystem_info) (GFile * file,
					 const char *attributes,
					 GCancellable * cancellable,
					 GError * *error);
    void (*query_filesystem_info_async) (GFile * file,
					 const char *attributes,
					 int io_priority,
					 GCancellable * cancellable,
					 GAsyncReadyCallback callback,
					 gpointer user_data);
    GFileInfo *(*query_filesystem_info_finish) (GFile * file,
						GAsyncResult * res,
						GError * *error);
    GMount *(*find_enclosing_mount) (GFile * file,
				     GCancellable * cancellable,
				     GError * *error);
    void (*find_enclosing_mount_async) (GFile * file, int io_priority,
					GCancellable * cancellable,
					GAsyncReadyCallback callback,
					gpointer user_data);
    GMount *(*find_enclosing_mount_finish) (GFile * file,
					    GAsyncResult * res,
					    GError * *error);
    GFile *(*set_display_name) (GFile * file, const char *display_name,
				GCancellable * cancellable,
				GError * *error);
    void (*set_display_name_async) (const char *display_name,
				    int io_priority,
				    GCancellable * cancellable,
				    GAsyncReadyCallback callback,
				    gpointer user_data);
    GFile *(*set_display_name_finish) (GFile * file, GAsyncResult * res,
				       GError * *error);
    GFileAttributeInfoList *(*query_settable_attributes) (GFile * file,
							  GCancellable *
							  cancellable,
							  GError * *error);
    void (*_query_settable_attributes_async) (void);
    void (*_query_settable_attributes_finish) (void);
    GFileAttributeInfoList *(*query_writable_namespaces) (GFile * file,
							  GCancellable *
							  cancellable,
							  GError * *error);
    void (*_query_writable_namespaces_async) (void);
    void (*_query_writable_namespaces_finish) (void);
     gboolean(*set_attribute) (GFile * file, const char *attribute,
			       GFileAttributeType type, gpointer value_p,
			       GFileQueryInfoFlags flags,
			       GCancellable * cancellable,
			       GError * *error);
     gboolean(*set_attributes_from_info) (GFile * file, GFileInfo * info,
					  GFileQueryInfoFlags flags,
					  GCancellable * cancellable,
					  GError * *error);
    void (*set_attributes_async) (GFile * file, GFileInfo * info,
				  GFileQueryInfoFlags flags,
				  int io_priority,
				  GCancellable * cancellable,
				  GAsyncReadyCallback callback,
				  gpointer user_data);
     gboolean(*set_attributes_finish) (GFile * file, GAsyncResult * result,
				       GFileInfo * *info, GError * *error);
    GFileInputStream *(*read_fn) (GFile * file, GCancellable * cancellable,
				  GError * *error);
    void (*read_async) (GFile * file, int io_priority,
			GCancellable * cancellable,
			GAsyncReadyCallback callback, gpointer user_data);
    GFileInputStream *(*read_finish) (GFile * file, GAsyncResult * res,
				      GError * *error);
    GFileOutputStream *(*append_to) (GFile * file, GFileCreateFlags flags,
				     GCancellable * cancellable,
				     GError * *error);
    void (*append_to_async) (GFile * file, GFileCreateFlags flags,
			     int io_priority, GCancellable * cancellable,
			     GAsyncReadyCallback callback,
			     gpointer user_data);
    GFileOutputStream *(*append_to_finish) (GFile * file,
					    GAsyncResult * res,
					    GError * *error);
    GFileOutputStream *(*create) (GFile * file, GFileCreateFlags flags,
				  GCancellable * cancellable,
				  GError * *error);
    void (*create_async) (GFile * file, GFileCreateFlags flags,
			  int io_priority, GCancellable * cancellable,
			  GAsyncReadyCallback callback,
			  gpointer user_data);
    GFileOutputStream *(*create_finish) (GFile * file, GAsyncResult * res,
					 GError * *error);
    GFileOutputStream *(*replace) (GFile * file, const char *etag,
				   gboolean make_backup,
				   GFileCreateFlags flags,
				   GCancellable * cancellable,
				   GError * *error);
    void (*replace_async) (GFile * file, const char *etag,
			   gboolean make_backup, GFileCreateFlags flags,
			   int io_priority, GCancellable * cancellable,
			   GAsyncReadyCallback callback,
			   gpointer user_data);
    GFileOutputStream *(*replace_finish) (GFile * file, GAsyncResult * res,
					  GError * *error);
     gboolean(*delete_file) (GFile * file, GCancellable * cancellable,
			     GError * *error);
    void (*_delete_file_async) (void);
    void (*_delete_file_finish) (void);
     gboolean(*trash) (GFile * file, GCancellable * cancellable,
		       GError * *error);
    void (*_trash_async) (void);
    void (*_trash_finish) (void);
     gboolean(*make_directory) (GFile * file, GCancellable * cancellable,
				GError * *error);
    void (*_make_directory_async) (void);
    void (*_make_directory_finish) (void);
     gboolean(*make_symbolic_link) (GFile * file,
				    const char *symlink_value,
				    GCancellable * cancellable,
				    GError * *error);
    void (*_make_symbolic_link_async) (void);
    void (*_make_symbolic_link_finish) (void);
     gboolean(*copy) (GFile * source, GFile * destination,
		      GFileCopyFlags flags, GCancellable * cancellable,
		      GFileProgressCallback progress_callback,
		      gpointer progress_callback_data, GError * *error);
    void (*copy_async) (GFile * source, GFile * destination,
			GFileCopyFlags flags, int io_priority,
			GCancellable * cancellable,
			GFileProgressCallback progress_callback,
			gpointer progress_callback_data,
			GAsyncReadyCallback callback, gpointer user_data);
     gboolean(*copy_finish) (GFile * file, GAsyncResult * res,
			     GError * *error);
     gboolean(*move) (GFile * source, GFile * destination,
		      GFileCopyFlags flags, GCancellable * cancellable,
		      GFileProgressCallback progress_callback,
		      gpointer progress_callback_data, GError * *error);
    void (*_move_async) (void);
    void (*_move_finish) (void);
    void (*mount_mountable) (GFile * file, GMountMountFlags flags,
			     GMountOperation * mount_operation,
			     GCancellable * cancellable,
			     GAsyncReadyCallback callback,
			     gpointer user_data);
    GFile *(*mount_mountable_finish) (GFile * file, GAsyncResult * result,
				      GError * *error);
    void (*unmount_mountable) (GFile * file, GMountMountFlags flags,
			       GCancellable * cancellable,
			       GAsyncReadyCallback callback,
			       gpointer user_data);
     gboolean(*unmount_mountable_finish) (GFile * file,
					  GAsyncResult * result,
					  GError * *error);
    void (*eject_mountable) (GFile * file, GMountMountFlags flags,
			     GCancellable * cancellable,
			     GAsyncReadyCallback callback,
			     gpointer user_data);
     gboolean(*eject_mountable_finish) (GFile * file,
					GAsyncResult * result,
					GError * *error);
    void (*mount_enclosing_volume) (GFile * file, GMountMountFlags flags,
				    GMountOperation * mount_operation,
				    GCancellable * cancellable,
				    GAsyncReadyCallback callback,
				    gpointer user_data);
     gboolean(*mount_enclosing_volume_finish) (GFile * file,
					       GAsyncResult * result,
					       GError * *error);
    GFileMonitor *(*monitor_dir) (GFile * file, GFileMonitorFlags flags,
				  GCancellable * cancellable,
				  GError * *error);
    GFileMonitor *(*monitor_file) (GFile * file, GFileMonitorFlags flags,
				   GCancellable * cancellable,
				   GError * *error);
    GFileIOStream *(*open_readwrite) (GFile * file,
				      GCancellable * cancellable,
				      GError * *error);
    void (*open_readwrite_async) (GFile * file, int io_priority,
				  GCancellable * cancellable,
				  GAsyncReadyCallback callback,
				  gpointer user_data);
    GFileIOStream *(*open_readwrite_finish) (GFile * file,
					     GAsyncResult * res,
					     GError * *error);
    GFileIOStream *(*create_readwrite) (GFile * file,
					GFileCreateFlags flags,
					GCancellable * cancellable,
					GError * *error);
    void (*create_readwrite_async) (GFile * file, GFileCreateFlags flags,
				    int io_priority,
				    GCancellable * cancellable,
				    GAsyncReadyCallback callback,
				    gpointer user_data);
    GFileIOStream *(*create_readwrite_finish) (GFile * file,
					       GAsyncResult * res,
					       GError * *error);
    GFileIOStream *(*replace_readwrite) (GFile * file, const char *etag,
					 gboolean make_backup,
					 GFileCreateFlags flags,
					 GCancellable * cancellable,
					 GError * *error);
    void (*replace_readwrite_async) (GFile * file, const char *etag,
				     gboolean make_backup,
				     GFileCreateFlags flags,
				     int io_priority,
				     GCancellable * cancellable,
				     GAsyncReadyCallback callback,
				     gpointer user_data);
    GFileIOStream *(*replace_readwrite_finish) (GFile * file,
						GAsyncResult * res,
						GError * *error);
    void (*start_mountable) (GFile * file, GDriveStartFlags flags,
			     GMountOperation * start_operation,
			     GCancellable * cancellable,
			     GAsyncReadyCallback callback,
			     gpointer user_data);
     gboolean(*start_mountable_finish) (GFile * file,
					GAsyncResult * result,
					GError * *error);
    void (*stop_mountable) (GFile * file, GMountUnmountFlags flags,
			    GMountOperation * mount_operation,
			    GCancellable * cancellable,
			    GAsyncReadyCallback callback,
			    gpointer user_data);
     gboolean(*stop_mountable_finish) (GFile * file, GAsyncResult * result,
				       GError * *error);
    gboolean supports_thread_contexts;
    void (*unmount_mountable_with_operation) (GFile * file,
					      GMountUnmountFlags flags,
					      GMountOperation *
					      mount_operation,
					      GCancellable * cancellable,
					      GAsyncReadyCallback callback,
					      gpointer user_data);
     gboolean(*unmount_mountable_with_operation_finish) (GFile * file,
							 GAsyncResult *
							 result,
							 GError * *error);
    void (*eject_mountable_with_operation) (GFile * file,
					    GMountUnmountFlags flags,
					    GMountOperation *
					    mount_operation,
					    GCancellable * cancellable,
					    GAsyncReadyCallback callback,
					    gpointer user_data);
     gboolean(*eject_mountable_with_operation_finish) (GFile * file,
						       GAsyncResult *
						       result,
						       GError * *error);
    void (*poll_mountable) (GFile * file, GCancellable * cancellable,
			    gpointer user_data);
     gboolean(*poll_mountable_finish) (GFile * file, GAsyncResult * result,
				       GError * *error);
};
extern GFileOutputStream *g_file_append_to(GFile * file,
					   GFileCreateFlags flags,
					   GCancellable * cancellable,
					   GError * *error);
extern void g_file_append_to_async(GFile * file, GFileCreateFlags flags,
				   int io_priority,
				   GCancellable * cancellable,
				   GAsyncReadyCallback callback,
				   gpointer user_data);
extern GFileOutputStream *g_file_append_to_finish(GFile * file,
						  GAsyncResult * res,
						  GError * *error);
extern gboolean g_file_copy(GFile * source, GFile * destination,
			    GFileCopyFlags flags,
			    GCancellable * cancellable,
			    GFileProgressCallback progress_callback,
			    gpointer progress_callback_data,
			    GError * *error);
extern void g_file_copy_async(GFile * source, GFile * destination,
			      GFileCopyFlags flags, int io_priority,
			      GCancellable * cancellable,
			      GFileProgressCallback progress_callback,
			      gpointer progress_callback_data,
			      GAsyncReadyCallback callback,
			      gpointer user_data);
extern gboolean g_file_copy_attributes(GFile * source, GFile * destination,
				       GFileCopyFlags flags,
				       GCancellable * cancellable,
				       GError * *error);
extern gboolean g_file_copy_finish(GFile * file, GAsyncResult * res,
				   GError * *error);
extern GFileOutputStream *g_file_create(GFile * file,
					GFileCreateFlags flags,
					GCancellable * cancellable,
					GError * *error);
extern void g_file_create_async(GFile * file, GFileCreateFlags flags,
				int io_priority,
				GCancellable * cancellable,
				GAsyncReadyCallback callback,
				gpointer user_data);
extern GFileOutputStream *g_file_create_finish(GFile * file,
					       GAsyncResult * res,
					       GError * *error);
extern GFileIOStream *g_file_create_readwrite(GFile * file,
					      GFileCreateFlags flags,
					      GCancellable * cancellable,
					      GError * *error);
extern void g_file_create_readwrite_async(GFile * file,
					  GFileCreateFlags flags,
					  int io_priority,
					  GCancellable * cancellable,
					  GAsyncReadyCallback callback,
					  gpointer user_data);
extern GFileIOStream *g_file_create_readwrite_finish(GFile * file,
						     GAsyncResult * res,
						     GError * *error);
extern gboolean g_file_delete(GFile * file, GCancellable * cancellable,
			      GError * *error);
extern GFile *g_file_dup(GFile * file);
extern void g_file_eject_mountable(GFile * file, GMountUnmountFlags flags,
				   GCancellable * cancellable,
				   GAsyncReadyCallback callback,
				   gpointer user_data);
extern gboolean g_file_eject_mountable_finish(GFile * file,
					      GAsyncResult * result,
					      GError * *error);
extern void g_file_eject_mountable_with_operation(GFile * file,
						  GMountUnmountFlags flags,
						  GMountOperation *
						  mount_operation,
						  GCancellable *
						  cancellable,
						  GAsyncReadyCallback
						  callback,
						  gpointer user_data);
extern gboolean g_file_eject_mountable_with_operation_finish(GFile * file,
							     GAsyncResult *
							     result,
							     GError *
							     *error);
extern GFileEnumerator *g_file_enumerate_children(GFile * file,
						  const char *attributes,
						  GFileQueryInfoFlags
						  flags,
						  GCancellable *
						  cancellable,
						  GError * *error);
extern void g_file_enumerate_children_async(GFile * file,
					    const char *attributes,
					    GFileQueryInfoFlags flags,
					    int io_priority,
					    GCancellable * cancellable,
					    GAsyncReadyCallback callback,
					    gpointer user_data);
extern GFileEnumerator *g_file_enumerate_children_finish(GFile * file,
							 GAsyncResult *
							 res,
							 GError * *error);
extern gboolean g_file_equal(GFile * file1, GFile * file2);
extern GMount *g_file_find_enclosing_mount(GFile * file,
					   GCancellable * cancellable,
					   GError * *error);
extern void g_file_find_enclosing_mount_async(GFile * file,
					      int io_priority,
					      GCancellable * cancellable,
					      GAsyncReadyCallback callback,
					      gpointer user_data);
extern GMount *g_file_find_enclosing_mount_finish(GFile * file,
						  GAsyncResult * res,
						  GError * *error);
extern char *g_file_get_basename(GFile * file);
extern GFile *g_file_get_child(GFile * file, const char *name);
extern GFile *g_file_get_child_for_display_name(GFile * file,
						const char *display_name,
						GError * *error);
extern GFile *g_file_get_parent(GFile * file);
extern char *g_file_get_parse_name(GFile * file);
extern char *g_file_get_path(GFile * file);
extern char *g_file_get_relative_path(GFile * parent, GFile * descendant);
extern GType g_file_get_type(void);
extern char *g_file_get_uri(GFile * file);
extern char *g_file_get_uri_scheme(GFile * file);
extern gboolean g_file_has_parent(GFile * file, GFile * parent);
extern gboolean g_file_has_prefix(GFile * file, GFile * prefix);
extern gboolean g_file_has_uri_scheme(GFile * file,
				      const char *uri_scheme);
extern guint g_file_hash(gconstpointer file);
extern gboolean g_file_is_native(GFile * file);
extern gboolean g_file_load_contents(GFile * file,
				     GCancellable * cancellable,
				     char **contents, gsize * length,
				     char **etag_out, GError * *error);
extern void g_file_load_contents_async(GFile * file,
				       GCancellable * cancellable,
				       GAsyncReadyCallback callback,
				       gpointer user_data);
extern gboolean g_file_load_contents_finish(GFile * file,
					    GAsyncResult * res,
					    char **contents,
					    gsize * length,
					    char **etag_out,
					    GError * *error);
extern void g_file_load_partial_contents_async(GFile * file,
					       GCancellable * cancellable,
					       GFileReadMoreCallback
					       read_more_callback,
					       GAsyncReadyCallback
					       callback,
					       gpointer user_data);
extern gboolean g_file_load_partial_contents_finish(GFile * file,
						    GAsyncResult * res,
						    char **contents,
						    gsize * length,
						    char **etag_out,
						    GError * *error);
extern gboolean g_file_make_directory(GFile * file,
				      GCancellable * cancellable,
				      GError * *error);
extern gboolean g_file_make_directory_with_parents(GFile * file,
						   GCancellable *
						   cancellable,
						   GError * *error);
extern gboolean g_file_make_symbolic_link(GFile * file,
					  const char *symlink_value,
					  GCancellable * cancellable,
					  GError * *error);
extern GFileMonitor *g_file_monitor(GFile * file, GFileMonitorFlags flags,
				    GCancellable * cancellable,
				    GError * *error);
extern GFileMonitor *g_file_monitor_directory(GFile * file,
					      GFileMonitorFlags flags,
					      GCancellable * cancellable,
					      GError * *error);
extern GFileMonitor *g_file_monitor_file(GFile * file,
					 GFileMonitorFlags flags,
					 GCancellable * cancellable,
					 GError * *error);
extern void g_file_mount_enclosing_volume(GFile * location,
					  GMountMountFlags flags,
					  GMountOperation *
					  mount_operation,
					  GCancellable * cancellable,
					  GAsyncReadyCallback callback,
					  gpointer user_data);
extern gboolean g_file_mount_enclosing_volume_finish(GFile * location,
						     GAsyncResult * result,
						     GError * *error);
extern void g_file_mount_mountable(GFile * file, GMountMountFlags flags,
				   GMountOperation * mount_operation,
				   GCancellable * cancellable,
				   GAsyncReadyCallback callback,
				   gpointer user_data);
extern GFile *g_file_mount_mountable_finish(GFile * file,
					    GAsyncResult * result,
					    GError * *error);
extern gboolean g_file_move(GFile * source, GFile * destination,
			    GFileCopyFlags flags,
			    GCancellable * cancellable,
			    GFileProgressCallback progress_callback,
			    gpointer progress_callback_data,
			    GError * *error);
extern GFile *g_file_new_for_commandline_arg(const char *arg);
extern GFile *g_file_new_for_path(const char *path);
extern GFile *g_file_new_for_uri(const char *uri);
extern GFile *g_file_new_tmp(const char *tmpl, GFileIOStream * *iostream,
			     GError * *error);
extern GFileIOStream *g_file_open_readwrite(GFile * file,
					    GCancellable * cancellable,
					    GError * *error);
extern void g_file_open_readwrite_async(GFile * file, int io_priority,
					GCancellable * cancellable,
					GAsyncReadyCallback callback,
					gpointer user_data);
extern GFileIOStream *g_file_open_readwrite_finish(GFile * file,
						   GAsyncResult * res,
						   GError * *error);
extern GFile *g_file_parse_name(const char *parse_name);
extern void g_file_poll_mountable(GFile * file, GCancellable * cancellable,
				  GAsyncReadyCallback callback,
				  gpointer user_data);
extern gboolean g_file_poll_mountable_finish(GFile * file,
					     GAsyncResult * result,
					     GError * *error);
extern GAppInfo *g_file_query_default_handler(GFile * file,
					      GCancellable * cancellable,
					      GError * *error);
extern gboolean g_file_query_exists(GFile * file,
				    GCancellable * cancellable);
extern GFileType g_file_query_file_type(GFile * file,
					GFileQueryInfoFlags flags,
					GCancellable * cancellable);
extern GFileInfo *g_file_query_filesystem_info(GFile * file,
					       const char *attributes,
					       GCancellable * cancellable,
					       GError * *error);
extern void g_file_query_filesystem_info_async(GFile * file,
					       const char *attributes,
					       int io_priority,
					       GCancellable * cancellable,
					       GAsyncReadyCallback
					       callback,
					       gpointer user_data);
extern GFileInfo *g_file_query_filesystem_info_finish(GFile * file,
						      GAsyncResult * res,
						      GError * *error);
extern GFileInfo *g_file_query_info(GFile * file, const char *attributes,
				    GFileQueryInfoFlags flags,
				    GCancellable * cancellable,
				    GError * *error);
extern void g_file_query_info_async(GFile * file, const char *attributes,
				    GFileQueryInfoFlags flags,
				    int io_priority,
				    GCancellable * cancellable,
				    GAsyncReadyCallback callback,
				    gpointer user_data);
extern GFileInfo *g_file_query_info_finish(GFile * file,
					   GAsyncResult * res,
					   GError * *error);
extern GFileAttributeInfoList *g_file_query_settable_attributes(GFile *
								file,
								GCancellable
								*
								cancellable,
								GError *
								*error);
extern GFileAttributeInfoList *g_file_query_writable_namespaces(GFile *
								file,
								GCancellable
								*
								cancellable,
								GError *
								*error);
extern GFileInputStream *g_file_read(GFile * file,
				     GCancellable * cancellable,
				     GError * *error);
extern void g_file_read_async(GFile * file, int io_priority,
			      GCancellable * cancellable,
			      GAsyncReadyCallback callback,
			      gpointer user_data);
extern GFileInputStream *g_file_read_finish(GFile * file,
					    GAsyncResult * res,
					    GError * *error);
extern GFileOutputStream *g_file_replace(GFile * file, const char *etag,
					 gboolean make_backup,
					 GFileCreateFlags flags,
					 GCancellable * cancellable,
					 GError * *error);
extern void g_file_replace_async(GFile * file, const char *etag,
				 gboolean make_backup,
				 GFileCreateFlags flags, int io_priority,
				 GCancellable * cancellable,
				 GAsyncReadyCallback callback,
				 gpointer user_data);
extern gboolean g_file_replace_contents(GFile * file, char **contents,
					gsize length, const char *etag,
					gboolean make_backup,
					GFileCreateFlags flags,
					char **new_etag,
					GCancellable * cancellable,
					GError * *error);
extern void g_file_replace_contents_async(GFile * file,
					  const char *contents,
					  gsize length, const char *etag,
					  gboolean make_backup,
					  GFileCreateFlags flags,
					  GCancellable * cancellable,
					  GAsyncReadyCallback callback,
					  gpointer user_data);
extern gboolean g_file_replace_contents_finish(GFile * file,
					       GAsyncResult * res,
					       char **new_etag,
					       GError * *error);
extern GFileOutputStream *g_file_replace_finish(GFile * file,
						GAsyncResult * res,
						GError * *error);
extern GFileIOStream *g_file_replace_readwrite(GFile * file,
					       const char *etag,
					       gboolean make_backup,
					       GFileCreateFlags flags,
					       GCancellable * cancellable,
					       GError * *error);
extern void g_file_replace_readwrite_async(GFile * file, const char *etag,
					   gboolean make_backup,
					   GFileCreateFlags flags,
					   int io_priority,
					   GCancellable * cancellable,
					   GAsyncReadyCallback callback,
					   gpointer user_data);
extern GFileIOStream *g_file_replace_readwrite_finish(GFile * file,
						      GAsyncResult * res,
						      GError * *error);
extern GFile *g_file_resolve_relative_path(GFile * file,
					   const char *relative_path);
extern gboolean g_file_set_attribute(GFile * file, const char *attribute,
				     GFileAttributeType type,
				     gpointer value_p,
				     GFileQueryInfoFlags flags,
				     GCancellable * cancellable,
				     GError * *error);
extern gboolean g_file_set_attribute_byte_string(GFile * file,
						 const char *attribute,
						 const char *value,
						 GFileQueryInfoFlags flags,
						 GCancellable *
						 cancellable,
						 GError * *error);
extern gboolean g_file_set_attribute_int32(GFile * file,
					   const char *attribute,
					   gint32 value,
					   GFileQueryInfoFlags flags,
					   GCancellable * cancellable,
					   GError * *error);
extern gboolean g_file_set_attribute_int64(GFile * file,
					   const char *attribute,
					   gint64 value,
					   GFileQueryInfoFlags flags,
					   GCancellable * cancellable,
					   GError * *error);
extern gboolean g_file_set_attribute_string(GFile * file,
					    const char *attribute,
					    const char *value,
					    GFileQueryInfoFlags flags,
					    GCancellable * cancellable,
					    GError * *error);
extern gboolean g_file_set_attribute_uint32(GFile * file,
					    const char *attribute,
					    guint32 value,
					    GFileQueryInfoFlags flags,
					    GCancellable * cancellable,
					    GError * *error);
extern gboolean g_file_set_attribute_uint64(GFile * file,
					    const char *attribute,
					    guint64 value,
					    GFileQueryInfoFlags flags,
					    GCancellable * cancellable,
					    GError * *error);
extern void g_file_set_attributes_async(GFile * file, GFileInfo * info,
					GFileQueryInfoFlags flags,
					int io_priority,
					GCancellable * cancellable,
					GAsyncReadyCallback callback,
					gpointer user_data);
extern gboolean g_file_set_attributes_finish(GFile * file,
					     GAsyncResult * result,
					     GFileInfo * *info,
					     GError * *error);
extern gboolean g_file_set_attributes_from_info(GFile * file,
						GFileInfo * info,
						GFileQueryInfoFlags flags,
						GCancellable * cancellable,
						GError * *error);
extern GFile *g_file_set_display_name(GFile * file,
				      const char *display_name,
				      GCancellable * cancellable,
				      GError * *error);
extern void g_file_set_display_name_async(GFile * file,
					  const char *display_name,
					  int io_priority,
					  GCancellable * cancellable,
					  GAsyncReadyCallback callback,
					  gpointer user_data);
extern GFile *g_file_set_display_name_finish(GFile * file,
					     GAsyncResult * res,
					     GError * *error);
extern void g_file_start_mountable(GFile * file, GDriveStartFlags flags,
				   GMountOperation * start_operation,
				   GCancellable * cancellable,
				   GAsyncReadyCallback callback,
				   gpointer user_data);
extern gboolean g_file_start_mountable_finish(GFile * file,
					      GAsyncResult * result,
					      GError * *error);
extern void g_file_stop_mountable(GFile * file, GMountUnmountFlags flags,
				  GMountOperation * mount_operation,
				  GCancellable * cancellable,
				  GAsyncReadyCallback callback,
				  gpointer user_data);
extern gboolean g_file_stop_mountable_finish(GFile * file,
					     GAsyncResult * result,
					     GError * *error);
extern gboolean g_file_supports_thread_contexts(GFile * file);
extern gboolean g_file_trash(GFile * file, GCancellable * cancellable,
			     GError * *error);
extern void g_file_unmount_mountable(GFile * file,
				     GMountUnmountFlags flags,
				     GCancellable * cancellable,
				     GAsyncReadyCallback callback,
				     gpointer user_data);
extern gboolean g_file_unmount_mountable_finish(GFile * file,
						GAsyncResult * result,
						GError * *error);
extern void g_file_unmount_mountable_with_operation(GFile * file,
						    GMountUnmountFlags
						    flags,
						    GMountOperation *
						    mount_operation,
						    GCancellable *
						    cancellable,
						    GAsyncReadyCallback
						    callback,
						    gpointer user_data);
extern gboolean g_file_unmount_mountable_with_operation_finish(GFile *
							       file,
							       GAsyncResult
							       * result,
							       GError *
							       *error);
</SCREEN>
</SECT2>
<SECT2>
<TITLE>glib-2.0/gio/gfileattribute.h</TITLE>
<PARA>
</PARA>
<SCREEN>

struct _GFileAttributeInfo {
    char *name;
    GFileAttributeType type;
    GFileAttributeInfoFlags flags;
};
struct _GFileAttributeInfoList {
    GFileAttributeInfo *infos;
    int n_infos;
};
extern void g_file_attribute_info_list_add(GFileAttributeInfoList * list,
					   const char *name,
					   GFileAttributeType type,
					   GFileAttributeInfoFlags flags);
extern GFileAttributeInfoList
    *g_file_attribute_info_list_dup(GFileAttributeInfoList * list);
extern GType g_file_attribute_info_list_get_type(void);
extern const struct _GFileAttributeInfo
    *g_file_attribute_info_list_lookup(GFileAttributeInfoList * list,
				       const char *name);
extern GFileAttributeInfoList *g_file_attribute_info_list_new(void);
extern GFileAttributeInfoList
    *g_file_attribute_info_list_ref(GFileAttributeInfoList * list);
extern void g_file_attribute_info_list_unref(GFileAttributeInfoList *
					     list);
</SCREEN>
</SECT2>
<SECT2>
<TITLE>glib-2.0/gio/gfileenumerator.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define G_TYPE_FILE_ENUMERATOR	(g_file_enumerator_get_type ())
#define G_FILE_ENUMERATOR_CLASS(k)	(G_TYPE_CHECK_CLASS_CAST((k), G_TYPE_FILE_ENUMERATOR, GFileEnumeratorClass))
#define G_IS_FILE_ENUMERATOR_CLASS(k)	(G_TYPE_CHECK_CLASS_TYPE ((k), G_TYPE_FILE_ENUMERATOR))
#define G_FILE_ENUMERATOR(o)	(G_TYPE_CHECK_INSTANCE_CAST ((o), G_TYPE_FILE_ENUMERATOR, GFileEnumerator))
#define G_IS_FILE_ENUMERATOR(o)	(G_TYPE_CHECK_INSTANCE_TYPE ((o), G_TYPE_FILE_ENUMERATOR))
#define G_FILE_ENUMERATOR_GET_CLASS(o)	(G_TYPE_INSTANCE_GET_CLASS ((o), G_TYPE_FILE_ENUMERATOR, GFileEnumeratorClass))

typedef struct _GFileEnumeratorClass {
    GObjectClass parent_class;
    GFileInfo *(*next_file) (GFileEnumerator * enumerator,
			     GCancellable * cancellable, GError * *error);
     gboolean(*close_fn) (GFileEnumerator * enumerator,
			  GCancellable * cancellable, GError * *error);
    void (*next_files_async) (GFileEnumerator * enumerator, int num_files,
			      int io_priority, GCancellable * cancellable,
			      GAsyncReadyCallback callback,
			      gpointer user_data);
    GList *(*next_files_finish) (GFileEnumerator * enumerator,
				 GAsyncResult * result, GError * *error);
    void (*close_async) (GFileEnumerator * enumerator, int io_priority,
			 GCancellable * cancellable,
			 GAsyncReadyCallback callback, gpointer user_data);
     gboolean(*close_finish) (GFileEnumerator * enumerator,
			      GAsyncResult * result, GError * *error);
    void (*_g_reserved1) (void);
    void (*_g_reserved2) (void);
    void (*_g_reserved3) (void);
    void (*_g_reserved4) (void);
    void (*_g_reserved5) (void);
    void (*_g_reserved6) (void);
    void (*_g_reserved7) (void);
} GFileEnumeratorClass;
typedef struct _GFileEnumeratorPrivate GFileEnumeratorPrivate;
struct _GFileEnumerator {
    GObject parent_instance;
    GFileEnumeratorPrivate *priv;
};
extern gboolean g_file_enumerator_close(GFileEnumerator * enumerator,
					GCancellable * cancellable,
					GError * *error);
extern void g_file_enumerator_close_async(GFileEnumerator * enumerator,
					  int io_priority,
					  GCancellable * cancellable,
					  GAsyncReadyCallback callback,
					  gpointer user_data);
extern gboolean g_file_enumerator_close_finish(GFileEnumerator *
					       enumerator,
					       GAsyncResult * result,
					       GError * *error);
extern GFile *g_file_enumerator_get_container(GFileEnumerator *
					      enumerator);
extern GType g_file_enumerator_get_type(void);
extern gboolean g_file_enumerator_has_pending(GFileEnumerator *
					      enumerator);
extern gboolean g_file_enumerator_is_closed(GFileEnumerator * enumerator);
extern GFileInfo *g_file_enumerator_next_file(GFileEnumerator * enumerator,
					      GCancellable * cancellable,
					      GError * *error);
extern void g_file_enumerator_next_files_async(GFileEnumerator *
					       enumerator, int num_files,
					       int io_priority,
					       GCancellable * cancellable,
					       GAsyncReadyCallback
					       callback,
					       gpointer user_data);
extern GList *g_file_enumerator_next_files_finish(GFileEnumerator *
						  enumerator,
						  GAsyncResult * result,
						  GError * *error);
extern void g_file_enumerator_set_pending(GFileEnumerator * enumerator,
					  gboolean pending);
</SCREEN>
</SECT2>
<SECT2>
<TITLE>glib-2.0/gio/gfileicon.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define G_TYPE_FILE_ICON	(g_file_icon_get_type ())
#define G_FILE_ICON_CLASS(k)	(G_TYPE_CHECK_CLASS_CAST((k), G_TYPE_FILE_ICON, GFileIconClass))
#define G_IS_FILE_ICON_CLASS(k)	(G_TYPE_CHECK_CLASS_TYPE ((k), G_TYPE_FILE_ICON))
#define G_FILE_ICON(o)	(G_TYPE_CHECK_INSTANCE_CAST ((o), G_TYPE_FILE_ICON, GFileIcon))
#define G_IS_FILE_ICON(o)	(G_TYPE_CHECK_INSTANCE_TYPE ((o), G_TYPE_FILE_ICON))
#define G_FILE_ICON_GET_CLASS(o)	(G_TYPE_INSTANCE_GET_CLASS ((o), G_TYPE_FILE_ICON, GFileIconClass))

typedef struct _GFileIconClass GFileIconClass;
extern GFile *g_file_icon_get_file(GFileIcon * icon);
extern GType g_file_icon_get_type(void);
extern GIcon *g_file_icon_new(GFile * file);
</SCREEN>
</SECT2>
<SECT2>
<TITLE>glib-2.0/gio/gfileinfo.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define G_TYPE_FILE_INFO	(g_file_info_get_type ())
#define G_FILE_INFO_CLASS(k)	(G_TYPE_CHECK_CLASS_CAST((k), G_TYPE_FILE_INFO, GFileInfoClass))
#define G_IS_FILE_INFO_CLASS(k)	(G_TYPE_CHECK_CLASS_TYPE ((k), G_TYPE_FILE_INFO))
#define G_FILE_INFO(o)	(G_TYPE_CHECK_INSTANCE_CAST ((o), G_TYPE_FILE_INFO, GFileInfo))
#define G_IS_FILE_INFO(o)	(G_TYPE_CHECK_INSTANCE_TYPE ((o), G_TYPE_FILE_INFO))
#define G_FILE_INFO_GET_CLASS(o)	(G_TYPE_INSTANCE_GET_CLASS ((o), G_TYPE_FILE_INFO, GFileInfoClass))
#define G_FILE_ATTRIBUTE_ACCESS_CAN_DELETE	"access::can-delete"
#define G_FILE_ATTRIBUTE_ACCESS_CAN_EXECUTE	"access::can-execute"
#define G_FILE_ATTRIBUTE_ACCESS_CAN_READ	"access::can-read"
#define G_FILE_ATTRIBUTE_ACCESS_CAN_RENAME	"access::can-rename"
#define G_FILE_ATTRIBUTE_ACCESS_CAN_TRASH	"access::can-trash"
#define G_FILE_ATTRIBUTE_ACCESS_CAN_WRITE	"access::can-write"
#define G_FILE_ATTRIBUTE_DOS_IS_ARCHIVE	"dos::is-archive"
#define G_FILE_ATTRIBUTE_DOS_IS_SYSTEM	"dos::is-system"
#define G_FILE_ATTRIBUTE_ETAG_VALUE	"etag::value"
#define G_FILE_ATTRIBUTE_FILESYSTEM_FREE	"filesystem::free"
#define G_FILE_ATTRIBUTE_FILESYSTEM_READONLY	"filesystem::readonly"
#define G_FILE_ATTRIBUTE_FILESYSTEM_SIZE	"filesystem::size"
#define G_FILE_ATTRIBUTE_FILESYSTEM_TYPE	"filesystem::type"
#define G_FILE_ATTRIBUTE_FILESYSTEM_USE_PREVIEW	"filesystem::use-preview"
#define G_FILE_ATTRIBUTE_FILESYSTEM_USED	"filesystem::used"
#define G_FILE_ATTRIBUTE_GVFS_BACKEND	"gvfs::backend"
#define G_FILE_ATTRIBUTE_ID_FILE	"id::file"
#define G_FILE_ATTRIBUTE_ID_FILESYSTEM	"id::filesystem"
#define G_FILE_ATTRIBUTE_MOUNTABLE_CAN_EJECT	"mountable::can-eject"
#define G_FILE_ATTRIBUTE_MOUNTABLE_CAN_MOUNT	"mountable::can-mount"
#define G_FILE_ATTRIBUTE_MOUNTABLE_CAN_POLL	"mountable::can-poll"
#define G_FILE_ATTRIBUTE_MOUNTABLE_CAN_START	"mountable::can-start"
#define G_FILE_ATTRIBUTE_MOUNTABLE_CAN_START_DEGRADED	"mountable::can-start-degraded"
#define G_FILE_ATTRIBUTE_MOUNTABLE_CAN_STOP	"mountable::can-stop"
#define G_FILE_ATTRIBUTE_MOUNTABLE_CAN_UNMOUNT	"mountable::can-unmount"
#define G_FILE_ATTRIBUTE_MOUNTABLE_HAL_UDI	"mountable::hal-udi"
#define G_FILE_ATTRIBUTE_MOUNTABLE_IS_MEDIA_CHECK_AUTOMATIC	"mountable::is-media-check-automatic"
#define G_FILE_ATTRIBUTE_MOUNTABLE_START_STOP_TYPE	"mountable::start-stop-type"
#define G_FILE_ATTRIBUTE_MOUNTABLE_UNIX_DEVICE	"mountable::unix-device"
#define G_FILE_ATTRIBUTE_MOUNTABLE_UNIX_DEVICE_FILE	"mountable::unix-device-file"
#define G_FILE_ATTRIBUTE_OWNER_GROUP	"owner::group"
#define G_FILE_ATTRIBUTE_OWNER_USER	"owner::user"
#define G_FILE_ATTRIBUTE_OWNER_USER_REAL	"owner::user-real"
#define G_FILE_ATTRIBUTE_PREVIEW_ICON	"preview::icon"
#define G_FILE_ATTRIBUTE_SELINUX_CONTEXT	"selinux::context"
#define G_FILE_ATTRIBUTE_STANDARD_ALLOCATED_SIZE	"standard::allocated-size"
#define G_FILE_ATTRIBUTE_STANDARD_CONTENT_TYPE	"standard::content-type"
#define G_FILE_ATTRIBUTE_STANDARD_COPY_NAME	"standard::copy-name"
#define G_FILE_ATTRIBUTE_STANDARD_DESCRIPTION	"standard::description"
#define G_FILE_ATTRIBUTE_STANDARD_DISPLAY_NAME	"standard::display-name"
#define G_FILE_ATTRIBUTE_STANDARD_EDIT_NAME	"standard::edit-name"
#define G_FILE_ATTRIBUTE_STANDARD_FAST_CONTENT_TYPE	"standard::fast-content-type"
#define G_FILE_ATTRIBUTE_STANDARD_ICON	"standard::icon"
#define G_FILE_ATTRIBUTE_STANDARD_IS_BACKUP	"standard::is-backup"
#define G_FILE_ATTRIBUTE_STANDARD_IS_HIDDEN	"standard::is-hidden"
#define G_FILE_ATTRIBUTE_STANDARD_IS_SYMLINK	"standard::is-symlink"
#define G_FILE_ATTRIBUTE_STANDARD_IS_VIRTUAL	"standard::is-virtual"
#define G_FILE_ATTRIBUTE_STANDARD_NAME	"standard::name"
#define G_FILE_ATTRIBUTE_STANDARD_SIZE	"standard::size"
#define G_FILE_ATTRIBUTE_STANDARD_SORT_ORDER	"standard::sort-order"
#define G_FILE_ATTRIBUTE_STANDARD_SYMLINK_TARGET	"standard::symlink-target"
#define G_FILE_ATTRIBUTE_STANDARD_TARGET_URI	"standard::target-uri"
#define G_FILE_ATTRIBUTE_STANDARD_TYPE	"standard::type"
#define G_FILE_ATTRIBUTE_THUMBNAILING_FAILED	"thumbnail::failed"
#define G_FILE_ATTRIBUTE_THUMBNAIL_PATH	"thumbnail::path"
#define G_FILE_ATTRIBUTE_TIME_ACCESS	"time::access"
#define G_FILE_ATTRIBUTE_TIME_ACCESS_USEC	"time::access-usec"
#define G_FILE_ATTRIBUTE_TIME_CHANGED	"time::changed"
#define G_FILE_ATTRIBUTE_TIME_CHANGED_USEC	"time::changed-usec"
#define G_FILE_ATTRIBUTE_TIME_CREATED	"time::created"
#define G_FILE_ATTRIBUTE_TIME_CREATED_USEC	"time::created-usec"
#define G_FILE_ATTRIBUTE_TIME_MODIFIED	"time::modified"
#define G_FILE_ATTRIBUTE_TIME_MODIFIED_USEC	"time::modified-usec"
#define G_FILE_ATTRIBUTE_TRASH_DELETION_DATE	"trash::deletion-date"
#define G_FILE_ATTRIBUTE_TRASH_ITEM_COUNT	"trash::item-count"
#define G_FILE_ATTRIBUTE_TRASH_ORIG_PATH	"trash::orig-path"
#define G_FILE_ATTRIBUTE_UNIX_BLOCK_SIZE	"unix::block-size"
#define G_FILE_ATTRIBUTE_UNIX_BLOCKS	"unix::blocks"
#define G_FILE_ATTRIBUTE_UNIX_DEVICE	"unix::device"
#define G_FILE_ATTRIBUTE_UNIX_GID	"unix::gid"
#define G_FILE_ATTRIBUTE_UNIX_INODE	"unix::inode"
#define G_FILE_ATTRIBUTE_UNIX_IS_MOUNTPOINT	"unix::is-mountpoint"
#define G_FILE_ATTRIBUTE_UNIX_MODE	"unix::mode"
#define G_FILE_ATTRIBUTE_UNIX_NLINK	"unix::nlink"
#define G_FILE_ATTRIBUTE_UNIX_RDEV	"unix::rdev"
#define G_FILE_ATTRIBUTE_UNIX_UID	"unix::uid"

typedef struct _GFileInfoClass GFileInfoClass;
extern gboolean
g_file_attribute_matcher_enumerate_namespace(GFileAttributeMatcher *
					     matcher, const char *ns);
extern const char
    *g_file_attribute_matcher_enumerate_next(GFileAttributeMatcher *
					     matcher);
extern GType g_file_attribute_matcher_get_type(void);
extern gboolean g_file_attribute_matcher_matches(GFileAttributeMatcher *
						 matcher,
						 const char *attribute);
extern gboolean g_file_attribute_matcher_matches_only(GFileAttributeMatcher
						      * matcher,
						      const char
						      *attribute);
extern GFileAttributeMatcher *g_file_attribute_matcher_new(const char
							   *attributes);
extern GFileAttributeMatcher
    *g_file_attribute_matcher_ref(GFileAttributeMatcher * matcher);
extern GFileAttributeMatcher
    *g_file_attribute_matcher_subtract(GFileAttributeMatcher * matcher,
				       GFileAttributeMatcher * subtract);
extern char *g_file_attribute_matcher_to_string(GFileAttributeMatcher *
						matcher);
extern void g_file_attribute_matcher_unref(GFileAttributeMatcher *
					   matcher);
extern void g_file_info_clear_status(GFileInfo * info);
extern void g_file_info_copy_into(GFileInfo * src_info,
				  GFileInfo * dest_info);
extern GFileInfo *g_file_info_dup(GFileInfo * other);
extern char *g_file_info_get_attribute_as_string(GFileInfo * info,
						 const char *attribute);
extern gboolean g_file_info_get_attribute_boolean(GFileInfo * info,
						  const char *attribute);
extern const char *g_file_info_get_attribute_byte_string(GFileInfo * info,
							 const char
							 *attribute);
extern gboolean g_file_info_get_attribute_data(GFileInfo * info,
					       const char *attribute,
					       GFileAttributeType * type,
					       void **value_pp,
					       GFileAttributeStatus *
					       status);
extern gint32 g_file_info_get_attribute_int32(GFileInfo * info,
					      const char *attribute);
extern gint64 g_file_info_get_attribute_int64(GFileInfo * info,
					      const char *attribute);
extern GObject *g_file_info_get_attribute_object(GFileInfo * info,
						 const char *attribute);
extern GFileAttributeStatus g_file_info_get_attribute_status(GFileInfo *
							     info,
							     const char
							     *attribute);
extern const char *g_file_info_get_attribute_string(GFileInfo * info,
						    const char *attribute);
extern void g_file_info_get_attribute_stringv(GFileInfo * info,
					      const char *attribute);
extern GFileAttributeType g_file_info_get_attribute_type(GFileInfo * info,
							 const char
							 *attribute);
extern guint32 g_file_info_get_attribute_uint32(GFileInfo * info,
						const char *attribute);
extern guint64 g_file_info_get_attribute_uint64(GFileInfo * info,
						const char *attribute);
extern const char *g_file_info_get_content_type(GFileInfo * info);
extern const char *g_file_info_get_display_name(GFileInfo * info);
extern const char *g_file_info_get_edit_name(GFileInfo * info);
extern const char *g_file_info_get_etag(GFileInfo * info);
extern GFileType g_file_info_get_file_type(GFileInfo * info);
extern GIcon *g_file_info_get_icon(GFileInfo * info);
extern gboolean g_file_info_get_is_backup(GFileInfo * info);
extern gboolean g_file_info_get_is_hidden(GFileInfo * info);
extern gboolean g_file_info_get_is_symlink(GFileInfo * info);
extern void g_file_info_get_modification_time(GFileInfo * info,
					      GTimeVal * result);
extern const char *g_file_info_get_name(GFileInfo * info);
extern goffset g_file_info_get_size(GFileInfo * info);
extern gint32 g_file_info_get_sort_order(GFileInfo * info);
extern const char *g_file_info_get_symlink_target(GFileInfo * info);
extern GType g_file_info_get_type(void);
extern gboolean g_file_info_has_attribute(GFileInfo * info,
					  const char *attribute);
extern gboolean g_file_info_has_namespace(GFileInfo * info,
					  const char *name_space);
extern void g_file_info_list_attributes(GFileInfo * info,
					const char *name_space);
extern GFileInfo *g_file_info_new(void);
extern void g_file_info_remove_attribute(GFileInfo * info,
					 const char *attribute);
extern void g_file_info_set_attribute(GFileInfo * info,
				      const char *attribute,
				      GFileAttributeType type,
				      void *value_p);
extern void g_file_info_set_attribute_boolean(GFileInfo * info,
					      const char *attribute,
					      gboolean attr_value);
extern void g_file_info_set_attribute_byte_string(GFileInfo * info,
						  const char *attribute,
						  const char *attr_value);
extern void g_file_info_set_attribute_int32(GFileInfo * info,
					    const char *attribute,
					    gint32 attr_value);
extern void g_file_info_set_attribute_int64(GFileInfo * info,
					    const char *attribute,
					    gint64 attr_value);
extern void g_file_info_set_attribute_mask(GFileInfo * info,
					   GFileAttributeMatcher * mask);
extern void g_file_info_set_attribute_object(GFileInfo * info,
					     const char *attribute,
					     GObject * attr_value);
extern gboolean g_file_info_set_attribute_status(GFileInfo * info,
						 const char *attribute,
						 GFileAttributeStatus
						 status);
extern void g_file_info_set_attribute_string(GFileInfo * info,
					     const char *attribute,
					     const char *attr_value);
extern void g_file_info_set_attribute_stringv(GFileInfo * info,
					      const char *attribute,
					      char **attr_value);
extern void g_file_info_set_attribute_uint32(GFileInfo * info,
					     const char *attribute,
					     guint32 attr_value);
extern void g_file_info_set_attribute_uint64(GFileInfo * info,
					     const char *attribute,
					     guint64 attr_value);
extern void g_file_info_set_content_type(GFileInfo * info,
					 const char *content_type);
extern void g_file_info_set_display_name(GFileInfo * info,
					 const char *display_name);
extern void g_file_info_set_edit_name(GFileInfo * info,
				      const char *edit_name);
extern void g_file_info_set_file_type(GFileInfo * info, GFileType type);
extern void g_file_info_set_icon(GFileInfo * info, GIcon * icon);
extern void g_file_info_set_is_hidden(GFileInfo * info,
				      gboolean is_hidden);
extern void g_file_info_set_is_symlink(GFileInfo * info,
				       gboolean is_symlink);
extern void g_file_info_set_modification_time(GFileInfo * info,
					      GTimeVal * mtime);
extern void g_file_info_set_name(GFileInfo * info, const char *name);
extern void g_file_info_set_size(GFileInfo * info, goffset size);
extern void g_file_info_set_sort_order(GFileInfo * info,
				       gint32 sort_order);
extern void g_file_info_set_symlink_target(GFileInfo * info,
					   const char *symlink_target);
extern void g_file_info_unset_attribute_mask(GFileInfo * info);
</SCREEN>
</SECT2>
<SECT2>
<TITLE>glib-2.0/gio/gfileinputstream.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define G_TYPE_FILE_INPUT_STREAM	(g_file_input_stream_get_type ())
#define G_FILE_INPUT_STREAM_CLASS(k)	(G_TYPE_CHECK_CLASS_CAST((k), G_TYPE_FILE_INPUT_STREAM, GFileInputStreamClass))
#define G_IS_FILE_INPUT_STREAM_CLASS(k)	(G_TYPE_CHECK_CLASS_TYPE ((k), G_TYPE_FILE_INPUT_STREAM))
#define G_FILE_INPUT_STREAM(o)	(G_TYPE_CHECK_INSTANCE_CAST ((o), G_TYPE_FILE_INPUT_STREAM, GFileInputStream))
#define G_IS_FILE_INPUT_STREAM(o)	(G_TYPE_CHECK_INSTANCE_TYPE ((o), G_TYPE_FILE_INPUT_STREAM))
#define G_FILE_INPUT_STREAM_GET_CLASS(o)	(G_TYPE_INSTANCE_GET_CLASS ((o), G_TYPE_FILE_INPUT_STREAM, GFileInputStreamClass))

typedef struct _GFileInputStreamClass {
    GInputStreamClass parent_class;
     goffset(*tell) (GFileInputStream * stream);
     gboolean(*can_seek) (GFileInputStream * stream);
     gboolean(*seek) (GFileInputStream * stream, goffset offset,
		      GSeekType type, GCancellable * cancellable,
		      GError * *error);
    GFileInfo *(*query_info) (GFileInputStream * stream,
			      const char *attributes,
			      GCancellable * cancellable, GError * *error);
    void (*query_info_async) (GFileInputStream * stream,
			      const char *attributes, int io_priority,
			      GCancellable * cancellable,
			      GAsyncReadyCallback callback,
			      gpointer user_data);
    GFileInfo *(*query_info_finish) (GFileInputStream * stream,
				     GAsyncResult * result,
				     GError * *error);
    void (*_g_reserved1) (void);
    void (*_g_reserved2) (void);
    void (*_g_reserved3) (void);
    void (*_g_reserved4) (void);
    void (*_g_reserved5) (void);
} GFileInputStreamClass;
typedef struct _GFileInputStreamPrivate GFileInputStreamPrivate;
struct _GFileInputStream {
    GInputStream parent_instance;
    GFileInputStreamPrivate *priv;
};
extern GType g_file_input_stream_get_type(void);
extern GFileInfo *g_file_input_stream_query_info(GFileInputStream * stream,
						 const char *attributes,
						 GCancellable *
						 cancellable,
						 GError * *error);
extern void g_file_input_stream_query_info_async(GFileInputStream * stream,
						 const char *attributes,
						 int io_priority,
						 GCancellable *
						 cancellable,
						 GAsyncReadyCallback
						 callback,
						 gpointer user_data);
extern GFileInfo *g_file_input_stream_query_info_finish(GFileInputStream *
							stream,
							GAsyncResult *
							result,
							GError * *error);
</SCREEN>
</SECT2>
<SECT2>
<TITLE>glib-2.0/gio/gfileiostream.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define G_TYPE_FILE_IO_STREAM	(g_file_io_stream_get_type ())
#define G_FILE_IO_STREAM_CLASS(k)	(G_TYPE_CHECK_CLASS_CAST((k), G_TYPE_FILE_IO_STREAM, GFileIOStreamClass))
#define G_IS_FILE_IO_STREAM_CLASS(k)	(G_TYPE_CHECK_CLASS_TYPE ((k), G_TYPE_FILE_IO_STREAM))
#define G_FILE_IO_STREAM(o)	(G_TYPE_CHECK_INSTANCE_CAST ((o), G_TYPE_FILE_IO_STREAM, GFileIOStream))
#define G_IS_FILE_IO_STREAM(o)	(G_TYPE_CHECK_INSTANCE_TYPE ((o), G_TYPE_FILE_IO_STREAM))
#define G_FILE_IO_STREAM_GET_CLASS(o)	(G_TYPE_INSTANCE_GET_CLASS ((o), G_TYPE_FILE_IO_STREAM, GFileIOStreamClass))

typedef struct _GFileIOStreamClass {
    GIOStreamClass parent_class;
     goffset(*tell) (GFileIOStream * stream);
     gboolean(*can_seek) (GFileIOStream * stream);
     gboolean(*seek) (GFileIOStream * stream, goffset offset,
		      GSeekType type, GCancellable * cancellable,
		      GError * *error);
     gboolean(*can_truncate) (GFileIOStream * stream);
     gboolean(*truncate_fn) (GFileIOStream * stream, goffset size,
			     GCancellable * cancellable, GError * *error);
    GFileInfo *(*query_info) (GFileIOStream * stream,
			      const char *attributes,
			      GCancellable * cancellable, GError * *error);
    void (*query_info_async) (GFileIOStream * stream,
			      const char *attributes, int io_priority,
			      GCancellable * cancellable,
			      GAsyncReadyCallback callback,
			      gpointer user_data);
    GFileInfo *(*query_info_finish) (GFileIOStream * stream,
				     GAsyncResult * result,
				     GError * *error);
    char *(*get_etag) (GFileIOStream * stream);
    void (*_g_reserved1) (void);
    void (*_g_reserved2) (void);
    void (*_g_reserved3) (void);
    void (*_g_reserved4) (void);
    void (*_g_reserved5) (void);
} GFileIOStreamClass;
typedef struct _GFileIOStreamPrivate GFileIOStreamPrivate;
struct _GFileIOStream {
    GIOStream parent_instance;
    GFileIOStreamPrivate *priv;
};
extern char *g_file_io_stream_get_etag(GFileIOStream * stream);
extern GType g_file_io_stream_get_type(void);
extern GFileInfo *g_file_io_stream_query_info(GFileIOStream * stream,
					      const char *attributes,
					      GCancellable * cancellable,
					      GError * *error);
extern void g_file_io_stream_query_info_async(GFileIOStream * stream,
					      const char *attributes,
					      int io_priority,
					      GCancellable * cancellable,
					      GAsyncReadyCallback callback,
					      gpointer user_data);
extern GFileInfo *g_file_io_stream_query_info_finish(GFileIOStream *
						     stream,
						     GAsyncResult * result,
						     GError * *error);
</SCREEN>
</SECT2>
<SECT2>
<TITLE>glib-2.0/gio/gfilemonitor.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define G_TYPE_FILE_MONITOR	(g_file_monitor_get_type ())
#define G_FILE_MONITOR_CLASS(k)	(G_TYPE_CHECK_CLASS_CAST((k), G_TYPE_FILE_MONITOR, GFileMonitorClass))
#define G_IS_FILE_MONITOR_CLASS(k)	(G_TYPE_CHECK_CLASS_TYPE ((k), G_TYPE_FILE_MONITOR))
#define G_FILE_MONITOR(o)	(G_TYPE_CHECK_INSTANCE_CAST ((o), G_TYPE_FILE_MONITOR, GFileMonitor))
#define G_IS_FILE_MONITOR(o)	(G_TYPE_CHECK_INSTANCE_TYPE ((o), G_TYPE_FILE_MONITOR))
#define G_FILE_MONITOR_GET_CLASS(o)	(G_TYPE_INSTANCE_GET_CLASS ((o), G_TYPE_FILE_MONITOR, GFileMonitorClass))

typedef struct _GFileMonitorClass {
    GObjectClass parent_class;
    void (*changed) (GFileMonitor * monitor, GFile * file,
		     GFile * other_file, GFileMonitorEvent event_type);
     gboolean(*cancel) (GFileMonitor * monitor);
    void (*_g_reserved1) (void);
    void (*_g_reserved2) (void);
    void (*_g_reserved3) (void);
    void (*_g_reserved4) (void);
    void (*_g_reserved5) (void);
} GFileMonitorClass;
typedef struct _GFileMonitorPrivate GFileMonitorPrivate;
struct _GFileMonitor {
    GObject parent_instance;
    GFileMonitorPrivate *priv;
};
extern gboolean g_file_monitor_cancel(GFileMonitor * monitor);
extern void g_file_monitor_emit_event(GFileMonitor * monitor,
				      GFile * child, GFile * other_file,
				      GFileMonitorEvent event_type);
extern GType g_file_monitor_get_type(void);
extern gboolean g_file_monitor_is_cancelled(GFileMonitor * monitor);
extern void g_file_monitor_set_rate_limit(GFileMonitor * monitor,
					  gint limit_msecs);
</SCREEN>
</SECT2>
<SECT2>
<TITLE>glib-2.0/gio/gfilenamecompleter.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define G_TYPE_FILENAME_COMPLETER	(g_filename_completer_get_type ())
#define G_FILENAME_COMPLETER_CLASS(k)	(G_TYPE_CHECK_CLASS_CAST((k), G_TYPE_FILENAME_COMPLETER, GFilenameCompleterClass))
#define G_IS_FILENAME_COMPLETER_CLASS(k)	(G_TYPE_CHECK_CLASS_TYPE ((k), G_TYPE_FILENAME_COMPLETER))
#define G_FILENAME_COMPLETER(o)	(G_TYPE_CHECK_INSTANCE_CAST ((o), G_TYPE_FILENAME_COMPLETER, GFilenameCompleter))
#define G_IS_FILENAME_COMPLETER(o)	(G_TYPE_CHECK_INSTANCE_TYPE ((o), G_TYPE_FILENAME_COMPLETER))
#define G_FILENAME_COMPLETER_GET_CLASS(o)	(G_TYPE_INSTANCE_GET_CLASS ((o), G_TYPE_FILENAME_COMPLETER, GFilenameCompleterClass))

typedef struct _GFilenameCompleterClass {
    GObjectClass parent_class;
    void (*got_completion_data) (GFilenameCompleter * filename_completer);
    void (*_g_reserved1) (void);
    void (*_g_reserved2) (void);
    void (*_g_reserved3) (void);
} GFilenameCompleterClass;
extern char *g_filename_completer_get_completion_suffix(GFilenameCompleter
							* completer,
							const char
							*initial_text);
extern void g_filename_completer_get_completions(GFilenameCompleter *
						 completer,
						 const char *initial_text);
extern GType g_filename_completer_get_type(void);
extern GFilenameCompleter *g_filename_completer_new(void);
extern void g_filename_completer_set_dirs_only(GFilenameCompleter *
					       completer,
					       gboolean dirs_only);
</SCREEN>
</SECT2>
<SECT2>
<TITLE>glib-2.0/gio/gfileoutputstream.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define G_TYPE_FILE_OUTPUT_STREAM	(g_file_output_stream_get_type ())
#define G_FILE_OUTPUT_STREAM_CLASS(k)	(G_TYPE_CHECK_CLASS_CAST((k), G_TYPE_FILE_OUTPUT_STREAM, GFileOutputStreamClass))
#define G_IS_FILE_OUTPUT_STREAM_CLASS(k)	(G_TYPE_CHECK_CLASS_TYPE ((k), G_TYPE_FILE_OUTPUT_STREAM))
#define G_FILE_OUTPUT_STREAM(o)	(G_TYPE_CHECK_INSTANCE_CAST ((o), G_TYPE_FILE_OUTPUT_STREAM, GFileOutputStream))
#define G_IS_FILE_OUTPUT_STREAM(o)	(G_TYPE_CHECK_INSTANCE_TYPE ((o), G_TYPE_FILE_OUTPUT_STREAM))
#define G_FILE_OUTPUT_STREAM_GET_CLASS(o)	(G_TYPE_INSTANCE_GET_CLASS ((o), G_TYPE_FILE_OUTPUT_STREAM, GFileOutputStreamClass))

typedef struct _GFileOutputStreamClass {
    GOutputStreamClass parent_class;
     goffset(*tell) (GFileOutputStream * stream);
     gboolean(*can_seek) (GFileOutputStream * stream);
     gboolean(*seek) (GFileOutputStream * stream, goffset offset,
		      GSeekType type, GCancellable * cancellable,
		      GError * *error);
     gboolean(*can_truncate) (GFileOutputStream * stream);
     gboolean(*truncate_fn) (GFileOutputStream * stream, goffset size,
			     GCancellable * cancellable, GError * *error);
    GFileInfo *(*query_info) (GFileOutputStream * stream,
			      const char *attributes,
			      GCancellable * cancellable, GError * *error);
    void (*query_info_async) (GFileOutputStream * stream,
			      const char *attributes, int io_priority,
			      GCancellable * cancellable,
			      GAsyncReadyCallback callback,
			      gpointer user_data);
    GFileInfo *(*query_info_finish) (GFileOutputStream * stream,
				     GAsyncResult * result,
				     GError * *error);
    char *(*get_etag) (GFileOutputStream * stream);
    void (*_g_reserved1) (void);
    void (*_g_reserved2) (void);
    void (*_g_reserved3) (void);
    void (*_g_reserved4) (void);
    void (*_g_reserved5) (void);
} GFileOutputStreamClass;
typedef struct _GFileOutputStreamPrivate GFileOutputStreamPrivate;
struct _GFileOutputStream {
    GOutputStream parent_instance;
    GFileOutputStreamPrivate *priv;
};
extern char *g_file_output_stream_get_etag(GFileOutputStream * stream);
extern GType g_file_output_stream_get_type(void);
extern GFileInfo *g_file_output_stream_query_info(GFileOutputStream *
						  stream,
						  const char *attributes,
						  GCancellable *
						  cancellable,
						  GError * *error);
extern void g_file_output_stream_query_info_async(GFileOutputStream *
						  stream,
						  const char *attributes,
						  int io_priority,
						  GCancellable *
						  cancellable,
						  GAsyncReadyCallback
						  callback,
						  gpointer user_data);
extern GFileInfo *g_file_output_stream_query_info_finish(GFileOutputStream
							 * stream,
							 GAsyncResult *
							 result,
							 GError * *error);
</SCREEN>
</SECT2>
<SECT2>
<TITLE>glib-2.0/gio/gfilterinputstream.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define G_TYPE_FILTER_INPUT_STREAM	(g_filter_input_stream_get_type ())
#define G_FILTER_INPUT_STREAM_CLASS(k)	(G_TYPE_CHECK_CLASS_CAST((k), G_TYPE_FILTER_INPUT_STREAM, GFilterInputStreamClass))
#define G_IS_FILTER_INPUT_STREAM_CLASS(k)	(G_TYPE_CHECK_CLASS_TYPE ((k), G_TYPE_FILTER_INPUT_STREAM))
#define G_FILTER_INPUT_STREAM(o)	(G_TYPE_CHECK_INSTANCE_CAST ((o), G_TYPE_FILTER_INPUT_STREAM, GFilterInputStream))
#define G_IS_FILTER_INPUT_STREAM(o)	(G_TYPE_CHECK_INSTANCE_TYPE ((o), G_TYPE_FILTER_INPUT_STREAM))
#define G_FILTER_INPUT_STREAM_GET_CLASS(o)	(G_TYPE_INSTANCE_GET_CLASS ((o), G_TYPE_FILTER_INPUT_STREAM, GFilterInputStreamClass))

typedef struct _GFilterInputStreamClass {
    GInputStreamClass parent_class;
    void (*_g_reserved1) (void);
    void (*_g_reserved2) (void);
    void (*_g_reserved3) (void);
} GFilterInputStreamClass;
struct _GFilterInputStream {
    GInputStream parent_instance;
    GInputStream *base_stream;
};
extern GInputStream
    *g_filter_input_stream_get_base_stream(GFilterInputStream * stream);
extern gboolean
g_filter_input_stream_get_close_base_stream(GFilterInputStream * stream);
extern GType g_filter_input_stream_get_type(void);
extern void g_filter_input_stream_set_close_base_stream(GFilterInputStream
							* stream,
							gboolean
							close_base);
</SCREEN>
</SECT2>
<SECT2>
<TITLE>glib-2.0/gio/gfilteroutputstream.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define G_TYPE_FILTER_OUTPUT_STREAM	(g_filter_output_stream_get_type ())
#define G_FILTER_OUTPUT_STREAM_CLASS(k)	(G_TYPE_CHECK_CLASS_CAST((k), G_TYPE_FILTER_OUTPUT_STREAM, GFilterOutputStreamClass))
#define G_IS_FILTER_OUTPUT_STREAM_CLASS(k)	(G_TYPE_CHECK_CLASS_TYPE ((k), G_TYPE_FILTER_OUTPUT_STREAM))
#define G_FILTER_OUTPUT_STREAM(o)	(G_TYPE_CHECK_INSTANCE_CAST ((o), G_TYPE_FILTER_OUTPUT_STREAM, GFilterOutputStream))
#define G_IS_FILTER_OUTPUT_STREAM(o)	(G_TYPE_CHECK_INSTANCE_TYPE ((o), G_TYPE_FILTER_OUTPUT_STREAM))
#define G_FILTER_OUTPUT_STREAM_GET_CLASS(o)	(G_TYPE_INSTANCE_GET_CLASS ((o), G_TYPE_FILTER_OUTPUT_STREAM, GFilterOutputStreamClass))

typedef struct _GFilterOutputStreamClass {
    GOutputStreamClass parent_class;
    void (*_g_reserved1) (void);
    void (*_g_reserved2) (void);
    void (*_g_reserved3) (void);
} GFilterOutputStreamClass;
struct _GFilterOutputStream {
    GOutputStream parent_instance;
    GOutputStream *base_stream;
};
extern GOutputStream
    *g_filter_output_stream_get_base_stream(GFilterOutputStream * stream);
extern gboolean
g_filter_output_stream_get_close_base_stream(GFilterOutputStream * stream);
extern GType g_filter_output_stream_get_type(void);
extern void
g_filter_output_stream_set_close_base_stream(GFilterOutputStream * stream,
					     gboolean close_base);
</SCREEN>
</SECT2>
<SECT2>
<TITLE>glib-2.0/gio/gicon.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define G_TYPE_ICON	(g_icon_get_type ())
#define G_ICON(obj)	(G_TYPE_CHECK_INSTANCE_CAST ((obj), G_TYPE_ICON, GIcon))
#define G_IS_ICON(obj)	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), G_TYPE_ICON))
#define G_ICON_GET_IFACE(obj)	(G_TYPE_INSTANCE_GET_INTERFACE ((obj), G_TYPE_ICON, GIconIface))

typedef struct _GIconIface {
    GTypeInterface g_iface;
     guint(*hash) (GIcon * icon);
     gboolean(*equal) (GIcon * icon1, GIcon * icon2);
     gboolean(*to_tokens) (GIcon * icon, GPtrArray * tokens,
			   gint * out_version);
    GIcon *(*from_tokens) (GIcon * icon, gint num_tokens, gint version,
			   GError * *error);
} GIconIface;
extern gboolean g_icon_equal(GIcon * icon1, GIcon * icon2);
extern GType g_icon_get_type(void);
extern guint g_icon_hash(gconstpointer icon);
extern GIcon *g_icon_new_for_string(const gchar * str, GError * *error);
extern gchar *g_icon_to_string(GIcon * icon);
</SCREEN>
</SECT2>
<SECT2>
<TITLE>glib-2.0/gio/ginetaddress.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define G_TYPE_INET_ADDRESS	(g_inet_address_get_type ())
#define G_INET_ADDRESS_CLASS(k)	(G_TYPE_CHECK_CLASS_CAST((k), G_TYPE_INET_ADDRESS, GInetAddressClass))
#define G_IS_INET_ADDRESS_CLASS(k)	(G_TYPE_CHECK_CLASS_TYPE ((k), G_TYPE_INET_ADDRESS))
#define G_INET_ADDRESS(o)	(G_TYPE_CHECK_INSTANCE_CAST ((o), G_TYPE_INET_ADDRESS, GInetAddress))
#define G_IS_INET_ADDRESS(o)	(G_TYPE_CHECK_INSTANCE_TYPE ((o), G_TYPE_INET_ADDRESS))
#define G_INET_ADDRESS_GET_CLASS(o)	(G_TYPE_INSTANCE_GET_CLASS ((o), G_TYPE_INET_ADDRESS, GInetAddressClass))

typedef struct _GInetAddressClass {
    GObjectClass parent_class;
    gchar *(*to_string) (GInetAddress * address);
    const guint8 *(*to_bytes) (GInetAddress * address);
} GInetAddressClass;
typedef struct _GInetAddressPrivate GInetAddressPrivate;
struct _GInetAddress {
    GObject parent_instance;
    GInetAddressPrivate *priv;
};
extern gboolean g_inet_address_equal(GInetAddress * address,
				     GInetAddress * other_address);
extern GSocketFamily g_inet_address_get_family(GInetAddress * address);
extern gboolean g_inet_address_get_is_any(GInetAddress * address);
extern gboolean g_inet_address_get_is_link_local(GInetAddress * address);
extern gboolean g_inet_address_get_is_loopback(GInetAddress * address);
extern gboolean g_inet_address_get_is_mc_global(GInetAddress * address);
extern gboolean g_inet_address_get_is_mc_link_local(GInetAddress *
						    address);
extern gboolean g_inet_address_get_is_mc_node_local(GInetAddress *
						    address);
extern gboolean g_inet_address_get_is_mc_org_local(GInetAddress * address);
extern gboolean g_inet_address_get_is_mc_site_local(GInetAddress *
						    address);
extern gboolean g_inet_address_get_is_multicast(GInetAddress * address);
extern gboolean g_inet_address_get_is_site_local(GInetAddress * address);
extern gsize g_inet_address_get_native_size(GInetAddress * address);
extern GType g_inet_address_get_type(void);
extern GInetAddress *g_inet_address_new_any(GSocketFamily family);
extern GInetAddress *g_inet_address_new_from_bytes(const guint8 * bytes,
						   GSocketFamily family);
extern GInetAddress *g_inet_address_new_from_string(const gchar * string);
extern GInetAddress *g_inet_address_new_loopback(GSocketFamily family);
extern const unsigned char *g_inet_address_to_bytes(GInetAddress *
						    address);
extern gchar *g_inet_address_to_string(GInetAddress * address);
</SCREEN>
</SECT2>
<SECT2>
<TITLE>glib-2.0/gio/ginetaddressmask.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define G_TYPE_INET_ADDRESS_MASK	(g_inet_address_mask_get_type ())
#define G_INET_ADDRESS_MASK_CLASS(k)	(G_TYPE_CHECK_CLASS_CAST((k), G_TYPE_INET_ADDRESS_MASK, GInetAddressMaskClass))
#define G_IS_INET_ADDRESS_MASK_CLASS(k)	(G_TYPE_CHECK_CLASS_TYPE ((k), G_TYPE_INET_ADDRESS_MASK))
#define G_INET_ADDRESS_MASK(o)	(G_TYPE_CHECK_INSTANCE_CAST ((o), G_TYPE_INET_ADDRESS_MASK, GInetAddressMask))
#define G_IS_INET_ADDRESS_MASK(o)	(G_TYPE_CHECK_INSTANCE_TYPE ((o), G_TYPE_INET_ADDRESS_MASK))
#define G_INET_ADDRESS_MASK_GET_CLASS(o)	(G_TYPE_INSTANCE_GET_CLASS ((o), G_TYPE_INET_ADDRESS_MASK, GInetAddressMaskClass))

typedef struct _GInetAddressMaskClass {
    GObjectClass parent_class;
} GInetAddressMaskClass;
typedef struct _GInetAddressMaskPrivate GInetAddressMaskPrivate;
struct _GInetAddressMask {
    GObject parent_instance;
    GInetAddressMaskPrivate *priv;
};
extern gboolean g_inet_address_mask_equal(GInetAddressMask * mask,
					  GInetAddressMask * mask2);
extern GInetAddress *g_inet_address_mask_get_address(GInetAddressMask *
						     mask);
extern GSocketFamily g_inet_address_mask_get_family(GInetAddressMask *
						    mask);
extern guint g_inet_address_mask_get_length(GInetAddressMask * mask);
extern GType g_inet_address_mask_get_type(void);
extern gboolean g_inet_address_mask_matches(GInetAddressMask * mask,
					    GInetAddress * address);
extern GInetAddressMask *g_inet_address_mask_new(GInetAddress * addr,
						 guint length,
						 GError * *error);
extern GInetAddressMask *g_inet_address_mask_new_from_string(const gchar *
							     mask_string,
							     GError *
							     *error);
extern gchar *g_inet_address_mask_to_string(GInetAddressMask * mask);
</SCREEN>
</SECT2>
<SECT2>
<TITLE>glib-2.0/gio/ginetsocketaddress.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define G_TYPE_INET_SOCKET_ADDRESS	(g_inet_socket_address_get_type ())
#define G_INET_SOCKET_ADDRESS_CLASS(k)	(G_TYPE_CHECK_CLASS_CAST((k), G_TYPE_INET_SOCKET_ADDRESS, GInetSocketAddressClass))
#define G_IS_INET_SOCKET_ADDRESS_CLASS(k)	(G_TYPE_CHECK_CLASS_TYPE ((k), G_TYPE_INET_SOCKET_ADDRESS))
#define G_INET_SOCKET_ADDRESS(o)	(G_TYPE_CHECK_INSTANCE_CAST ((o), G_TYPE_INET_SOCKET_ADDRESS, GInetSocketAddress))
#define G_IS_INET_SOCKET_ADDRESS(o)	(G_TYPE_CHECK_INSTANCE_TYPE ((o), G_TYPE_INET_SOCKET_ADDRESS))
#define G_INET_SOCKET_ADDRESS_GET_CLASS(o)	(G_TYPE_INSTANCE_GET_CLASS ((o), G_TYPE_INET_SOCKET_ADDRESS, GInetSocketAddressClass))

typedef struct _GInetSocketAddressClass {
    GSocketAddressClass parent_class;
} GInetSocketAddressClass;
typedef struct _GInetSocketAddressPrivate GInetSocketAddressPrivate;
struct _GInetSocketAddress {
    GSocketAddress parent_instance;
    GInetSocketAddressPrivate *priv;
};
extern GInetAddress *g_inet_socket_address_get_address(GInetSocketAddress *
						       address);
extern guint32 g_inet_socket_address_get_flowinfo(GInetSocketAddress *
						  address);
extern guint16 g_inet_socket_address_get_port(GInetSocketAddress *
					      address);
extern guint32 g_inet_socket_address_get_scope_id(GInetSocketAddress *
						  address);
extern GType g_inet_socket_address_get_type(void);
extern GSocketAddress *g_inet_socket_address_new(GInetAddress * address,
						 guint16 port);
</SCREEN>
</SECT2>
<SECT2>
<TITLE>glib-2.0/gio/ginitable.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define G_TYPE_INITABLE	(g_initable_get_type ())
#define G_INITABLE(obj)	(G_TYPE_CHECK_INSTANCE_CAST ((obj), G_TYPE_INITABLE, GInitable))
#define G_IS_INITABLE(obj)	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), G_TYPE_INITABLE))
#define G_INITABLE_GET_IFACE(obj)	(G_TYPE_INSTANCE_GET_INTERFACE ((obj), G_TYPE_INITABLE, GInitableIface))
#define G_TYPE_IS_INITABLE(type)	(g_type_is_a ((type), G_TYPE_INITABLE))

typedef struct _GInitableIface {
    GTypeInterface g_iface;
     gboolean(*init) (GInitable * initable, GCancellable * cancellable,
		      GError * *error);
} GInitableIface;
extern GType g_initable_get_type(void);
extern gboolean g_initable_init(GInitable * initable,
				GCancellable * cancellable,
				GError * *error);
extern gpointer g_initable_new(GType object_type,
			       GCancellable * cancellable, GError * *error,
			       const gchar * first_property_name, ...);
extern GObject *g_initable_new_valist(GType object_type,
				      const gchar * first_property_name,
				      va_list var_args,
				      GCancellable * cancellable,
				      GError * *error);
extern gpointer g_initable_newv(GType object_type, guint n_parameters,
				GParameter * parameters,
				GCancellable * cancellable,
				GError * *error);
</SCREEN>
</SECT2>
<SECT2>
<TITLE>glib-2.0/gio/ginputstream.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define G_TYPE_INPUT_STREAM	(g_input_stream_get_type ())
#define G_INPUT_STREAM_CLASS(k)	(G_TYPE_CHECK_CLASS_CAST((k), G_TYPE_INPUT_STREAM, GInputStreamClass))
#define G_IS_INPUT_STREAM_CLASS(k)	(G_TYPE_CHECK_CLASS_TYPE ((k), G_TYPE_INPUT_STREAM))
#define G_INPUT_STREAM(o)	(G_TYPE_CHECK_INSTANCE_CAST ((o), G_TYPE_INPUT_STREAM, GInputStream))
#define G_IS_INPUT_STREAM(o)	(G_TYPE_CHECK_INSTANCE_TYPE ((o), G_TYPE_INPUT_STREAM))
#define G_INPUT_STREAM_GET_CLASS(o)	(G_TYPE_INSTANCE_GET_CLASS ((o), G_TYPE_INPUT_STREAM, GInputStreamClass))

typedef struct _GInputStreamClass {
    GObjectClass parent_class;
     gssize(*read_fn) (GInputStream * stream, void *buffer, gsize count,
		       GCancellable * cancellable, GError * *error);
     gssize(*skip) (GInputStream * stream, gsize count,
		    GCancellable * cancellable, GError * *error);
     gboolean(*close_fn) (GInputStream * stream,
			  GCancellable * cancellable, GError * *error);
    void (*read_async) (GInputStream * stream, void *buffer, gsize count,
			int io_priority, GCancellable * cancellable,
			GAsyncReadyCallback callback, gpointer user_data);
     gssize(*read_finish) (GInputStream * stream, GAsyncResult * result,
			   GError * *error);
    void (*skip_async) (GInputStream * stream, gsize count,
			int io_priority, GCancellable * cancellable,
			GAsyncReadyCallback callback, gpointer user_data);
     gssize(*skip_finish) (GInputStream * stream, GAsyncResult * result,
			   GError * *error);
    void (*close_async) (GInputStream * stream, int io_priority,
			 GCancellable * cancellable,
			 GAsyncReadyCallback callback, gpointer user_data);
     gboolean(*close_finish) (GInputStream * stream, GAsyncResult * result,
			      GError * *error);
    void (*_g_reserved1) (void);
    void (*_g_reserved2) (void);
    void (*_g_reserved3) (void);
    void (*_g_reserved4) (void);
    void (*_g_reserved5) (void);
} GInputStreamClass;
typedef struct _GInputStreamPrivate GInputStreamPrivate;
struct _GInputStream {
    GObject parent_instance;
    GInputStreamPrivate *priv;
};
extern void g_input_stream_clear_pending(GInputStream * stream);
extern gboolean g_input_stream_close(GInputStream * stream,
				     GCancellable * cancellable,
				     GError * *error);
extern void g_input_stream_close_async(GInputStream * stream,
				       int io_priority,
				       GCancellable * cancellable,
				       GAsyncReadyCallback callback,
				       gpointer user_data);
extern gboolean g_input_stream_close_finish(GInputStream * stream,
					    GAsyncResult * result,
					    GError * *error);
extern GType g_input_stream_get_type(void);
extern gboolean g_input_stream_has_pending(GInputStream * stream);
extern gboolean g_input_stream_is_closed(GInputStream * stream);
extern gssize g_input_stream_read(GInputStream * stream, void *buffer,
				  gsize count, GCancellable * cancellable,
				  GError * *error);
extern gboolean g_input_stream_read_all(GInputStream * stream,
					void *buffer, gsize count,
					gsize * bytes_read,
					GCancellable * cancellable,
					GError * *error);
extern void g_input_stream_read_async(GInputStream * stream, void *buffer,
				      gsize count, int io_priority,
				      GCancellable * cancellable,
				      GAsyncReadyCallback callback,
				      gpointer user_data);
extern gssize g_input_stream_read_finish(GInputStream * stream,
					 GAsyncResult * result,
					 GError * *error);
extern gboolean g_input_stream_set_pending(GInputStream * stream,
					   GError * *error);
extern gssize g_input_stream_skip(GInputStream * stream, gsize count,
				  GCancellable * cancellable,
				  GError * *error);
extern void g_input_stream_skip_async(GInputStream * stream, gsize count,
				      int io_priority,
				      GCancellable * cancellable,
				      GAsyncReadyCallback callback,
				      gpointer user_data);
extern gssize g_input_stream_skip_finish(GInputStream * stream,
					 GAsyncResult * result,
					 GError * *error);
</SCREEN>
</SECT2>
<SECT2>
<TITLE>glib-2.0/gio/gio.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define __GIO_GIO_H_INSIDE__
</SCREEN>
</SECT2>
<SECT2>
<TITLE>glib-2.0/gio/gioenums.h</TITLE>
<PARA>
</PARA>
<SCREEN>

typedef enum {
    G_APP_INFO_CREATE_NONE,
    G_APP_INFO_CREATE_NEEDS_TERMINAL = (1 &lt;&lt; 0),
    G_APP_INFO_CREATE_SUPPORTS_URIS = (1 &lt;&lt; 1),
    G_APP_INFO_CREATE_SUPPORTS_STARTUP_NOTIFICATION = (1 &lt;&lt; 2)
} GAppInfoCreateFlags;
typedef enum {
    G_CONVERTER_NO_FLAGS,
    G_CONVERTER_INPUT_AT_END = (1 &lt;&lt; 0),
    G_CONVERTER_FLUSH = (1 &lt;&lt; 1)
} GConverterFlags;
typedef enum {
    G_CONVERTER_ERROR,
    G_CONVERTER_CONVERTED,
    G_CONVERTER_FINISHED,
    G_CONVERTER_FLUSHED
} GConverterResult;
typedef enum {
    G_DATA_STREAM_BYTE_ORDER_BIG_ENDIAN,
    G_DATA_STREAM_BYTE_ORDER_LITTLE_ENDIAN,
    G_DATA_STREAM_BYTE_ORDER_HOST_ENDIAN
} GDataStreamByteOrder;
typedef enum {
    G_DATA_STREAM_NEWLINE_TYPE_LF,
    G_DATA_STREAM_NEWLINE_TYPE_CR,
    G_DATA_STREAM_NEWLINE_TYPE_CR_LF,
    G_DATA_STREAM_NEWLINE_TYPE_ANY
} GDataStreamNewlineType;
typedef enum {
    G_FILE_ATTRIBUTE_TYPE_INVALID,
    G_FILE_ATTRIBUTE_TYPE_STRING,
    G_FILE_ATTRIBUTE_TYPE_BYTE_STRING,
    G_FILE_ATTRIBUTE_TYPE_BOOLEAN,
    G_FILE_ATTRIBUTE_TYPE_UINT32,
    G_FILE_ATTRIBUTE_TYPE_INT32,
    G_FILE_ATTRIBUTE_TYPE_UINT64,
    G_FILE_ATTRIBUTE_TYPE_INT64,
    G_FILE_ATTRIBUTE_TYPE_OBJECT,
    G_FILE_ATTRIBUTE_TYPE_STRINGV
} GFileAttributeType;
typedef enum {
    G_FILE_ATTRIBUTE_INFO_NONE,
    G_FILE_ATTRIBUTE_INFO_COPY_WITH_FILE = (1 &lt;&lt; 0),
    G_FILE_ATTRIBUTE_INFO_COPY_WHEN_MOVED = (1 &lt;&lt; 1)
} GFileAttributeInfoFlags;
typedef enum {
    G_FILE_ATTRIBUTE_STATUS_UNSET,
    G_FILE_ATTRIBUTE_STATUS_SET,
    G_FILE_ATTRIBUTE_STATUS_ERROR_SETTING
} GFileAttributeStatus;
typedef enum {
    G_FILE_QUERY_INFO_NONE,
    G_FILE_QUERY_INFO_NOFOLLOW_SYMLINKS = (1 &lt;&lt; 0)
} GFileQueryInfoFlags;
typedef enum {
    G_FILE_CREATE_NONE,
    G_FILE_CREATE_PRIVATE = (1 &lt;&lt; 0),
    G_FILE_CREATE_REPLACE_DESTINATION = (1 &lt;&lt; 1)
} GFileCreateFlags;
typedef enum {
    G_MOUNT_MOUNT_NONE
} GMountMountFlags;
typedef enum {
    G_MOUNT_UNMOUNT_NONE,
    G_MOUNT_UNMOUNT_FORCE = (1 &lt;&lt; 0)
} GMountUnmountFlags;
typedef enum {
    G_DRIVE_START_NONE
} GDriveStartFlags;
typedef enum {
    G_DRIVE_START_STOP_TYPE_UNKNOWN,
    G_DRIVE_START_STOP_TYPE_SHUTDOWN,
    G_DRIVE_START_STOP_TYPE_NETWORK,
    G_DRIVE_START_STOP_TYPE_MULTIDISK,
    G_DRIVE_START_STOP_TYPE_PASSWORD
} GDriveStartStopType;
typedef enum {
    G_FILE_COPY_NONE,
    G_FILE_COPY_OVERWRITE = (1 &lt;&lt; 0),
    G_FILE_COPY_BACKUP = (1 &lt;&lt; 1),
    G_FILE_COPY_NOFOLLOW_SYMLINKS = (1 &lt;&lt; 2),
    G_FILE_COPY_ALL_METADATA = (1 &lt;&lt; 3),
    G_FILE_COPY_NO_FALLBACK_FOR_MOVE = (1 &lt;&lt; 4),
    G_FILE_COPY_TARGET_DEFAULT_PERMS = (1 &lt;&lt; 5)
} GFileCopyFlags;
typedef enum {
    G_FILE_MONITOR_NONE,
    G_FILE_MONITOR_WATCH_MOUNTS = (1 &lt;&lt; 0),
    G_FILE_MONITOR_SEND_MOVED = (1 &lt;&lt; 1)
} GFileMonitorFlags;
typedef enum {
    G_FILE_TYPE_UNKNOWN,
    G_FILE_TYPE_REGULAR,
    G_FILE_TYPE_DIRECTORY,
    G_FILE_TYPE_SYMBOLIC_LINK,
    G_FILE_TYPE_SPECIAL,
    G_FILE_TYPE_SHORTCUT,
    G_FILE_TYPE_MOUNTABLE
} GFileType;
typedef enum {
    G_FILESYSTEM_PREVIEW_TYPE_IF_ALWAYS,
    G_FILESYSTEM_PREVIEW_TYPE_IF_LOCAL,
    G_FILESYSTEM_PREVIEW_TYPE_NEVER
} GFilesystemPreviewType;
typedef enum {
    G_FILE_MONITOR_EVENT_CHANGED,
    G_FILE_MONITOR_EVENT_CHANGES_DONE_HINT,
    G_FILE_MONITOR_EVENT_DELETED,
    G_FILE_MONITOR_EVENT_CREATED,
    G_FILE_MONITOR_EVENT_ATTRIBUTE_CHANGED,
    G_FILE_MONITOR_EVENT_PRE_UNMOUNT,
    G_FILE_MONITOR_EVENT_UNMOUNTED,
    G_FILE_MONITOR_EVENT_MOVED
} GFileMonitorEvent;
typedef enum {
    G_IO_ERROR_FAILED,
    G_IO_ERROR_NOT_FOUND,
    G_IO_ERROR_EXISTS,
    G_IO_ERROR_IS_DIRECTORY,
    G_IO_ERROR_NOT_DIRECTORY,
    G_IO_ERROR_NOT_EMPTY,
    G_IO_ERROR_NOT_REGULAR_FILE,
    G_IO_ERROR_NOT_SYMBOLIC_LINK,
    G_IO_ERROR_NOT_MOUNTABLE_FILE,
    G_IO_ERROR_FILENAME_TOO_LONG,
    G_IO_ERROR_INVALID_FILENAME,
    G_IO_ERROR_TOO_MANY_LINKS,
    G_IO_ERROR_NO_SPACE,
    G_IO_ERROR_INVALID_ARGUMENT,
    G_IO_ERROR_PERMISSION_DENIED,
    G_IO_ERROR_NOT_SUPPORTED,
    G_IO_ERROR_NOT_MOUNTED,
    G_IO_ERROR_ALREADY_MOUNTED,
    G_IO_ERROR_CLOSED,
    G_IO_ERROR_CANCELLED,
    G_IO_ERROR_PENDING,
    G_IO_ERROR_READ_ONLY,
    G_IO_ERROR_CANT_CREATE_BACKUP,
    G_IO_ERROR_WRONG_ETAG,
    G_IO_ERROR_TIMED_OUT,
    G_IO_ERROR_WOULD_RECURSE,
    G_IO_ERROR_BUSY,
    G_IO_ERROR_WOULD_BLOCK,
    G_IO_ERROR_HOST_NOT_FOUND,
    G_IO_ERROR_WOULD_MERGE,
    G_IO_ERROR_FAILED_HANDLED,
    G_IO_ERROR_TOO_MANY_OPEN_FILES,
    G_IO_ERROR_NOT_INITIALIZED,
    G_IO_ERROR_ADDRESS_IN_USE,
    G_IO_ERROR_PARTIAL_INPUT,
    G_IO_ERROR_INVALID_DATA,
    G_IO_ERROR_DBUS_ERROR,
    G_IO_ERROR_HOST_UNREACHABLE,
    G_IO_ERROR_NETWORK_UNREACHABLE,
    G_IO_ERROR_CONNECTION_REFUSED,
    G_IO_ERROR_PROXY_FAILED,
    G_IO_ERROR_PROXY_AUTH_FAILED,
    G_IO_ERROR_PROXY_NEED_AUTH,
    G_IO_ERROR_PROXY_NOT_ALLOWED
} GIOErrorEnum;
typedef enum {
    G_ASK_PASSWORD_NEED_PASSWORD = (1 &lt;&lt; 0),
    G_ASK_PASSWORD_NEED_USERNAME = (1 &lt;&lt; 1),
    G_ASK_PASSWORD_NEED_DOMAIN = (1 &lt;&lt; 2),
    G_ASK_PASSWORD_SAVING_SUPPORTED = (1 &lt;&lt; 3),
    G_ASK_PASSWORD_ANONYMOUS_SUPPORTED = (1 &lt;&lt; 4)
} GAskPasswordFlags;
typedef enum {
    G_PASSWORD_SAVE_NEVER,
    G_PASSWORD_SAVE_FOR_SESSION,
    G_PASSWORD_SAVE_PERMANENTLY
} GPasswordSave;
typedef enum {
    G_MOUNT_OPERATION_HANDLED,
    G_MOUNT_OPERATION_ABORTED,
    G_MOUNT_OPERATION_UNHANDLED
} GMountOperationResult;
typedef enum {
    G_OUTPUT_STREAM_SPLICE_NONE,
    G_OUTPUT_STREAM_SPLICE_CLOSE_SOURCE = (1 &lt;&lt; 0),
    G_OUTPUT_STREAM_SPLICE_CLOSE_TARGET = (1 &lt;&lt; 1)
} GOutputStreamSpliceFlags;
typedef enum {
    G_IO_STREAM_SPLICE_NONE,
    G_IO_STREAM_SPLICE_CLOSE_STREAM1 = (1 &lt;&lt; 0),
    G_IO_STREAM_SPLICE_CLOSE_STREAM2 = (1 &lt;&lt; 1),
    G_IO_STREAM_SPLICE_WAIT_FOR_BOTH = (1 &lt;&lt; 2)
} GIOStreamSpliceFlags;
typedef enum {
    G_EMBLEM_ORIGIN_UNKNOWN,
    G_EMBLEM_ORIGIN_DEVICE,
    G_EMBLEM_ORIGIN_LIVEMETADATA,
    G_EMBLEM_ORIGIN_TAG
} GEmblemOrigin;
typedef enum {
    G_RESOLVER_ERROR_NOT_FOUND,
    G_RESOLVER_ERROR_TEMPORARY_FAILURE,
    G_RESOLVER_ERROR_INTERNAL
} GResolverError;
typedef enum {
    G_RESOURCE_ERROR_NOT_FOUND,
    G_RESOURCE_ERROR_INTERNAL
} GResourceError;
typedef enum {
    G_RESOURCE_FLAGS_NONE,
    G_RESOURCE_FLAGS_COMPRESSED = (1 &lt;&lt; 0)
} GResourceFlags;
typedef enum {
    G_RESOURCE_LOOKUP_FLAGS_NONE
} GResourceLookupFlags;
typedef enum {
    G_SOCKET_FAMILY_INVALID,
    G_SOCKET_FAMILY_UNIX,
    G_SOCKET_FAMILY_IPV4,
    G_SOCKET_FAMILY_IPV6
} GSocketFamily;
typedef enum {
    G_SOCKET_TYPE_INVALID,
    G_SOCKET_TYPE_STREAM,
    G_SOCKET_TYPE_DATAGRAM,
    G_SOCKET_TYPE_SEQPACKET
} GSocketType;
typedef enum {
    G_SOCKET_MSG_NONE,
    G_SOCKET_MSG_OOB,
    G_SOCKET_MSG_PEEK,
    G_SOCKET_MSG_DONTROUTE
} GSocketMsgFlags;
typedef enum {
    G_SOCKET_PROTOCOL_UNKNOWN = -1,
    G_SOCKET_PROTOCOL_DEFAULT,
    G_SOCKET_PROTOCOL_TCP,
    G_SOCKET_PROTOCOL_UDP,
    G_SOCKET_PROTOCOL_SCTP
} GSocketProtocol;
typedef enum {
    G_ZLIB_COMPRESSOR_FORMAT_ZLIB,
    G_ZLIB_COMPRESSOR_FORMAT_GZIP,
    G_ZLIB_COMPRESSOR_FORMAT_RAW
} GZlibCompressorFormat;
typedef enum {
    G_UNIX_SOCKET_ADDRESS_INVALID,
    G_UNIX_SOCKET_ADDRESS_ANONYMOUS,
    G_UNIX_SOCKET_ADDRESS_PATH,
    G_UNIX_SOCKET_ADDRESS_ABSTRACT,
    G_UNIX_SOCKET_ADDRESS_ABSTRACT_PADDED
} GUnixSocketAddressType;
typedef enum {
    G_BUS_TYPE_STARTER = -1,
    G_BUS_TYPE_NONE,
    G_BUS_TYPE_SYSTEM,
    G_BUS_TYPE_SESSION
} GBusType;
typedef enum {
    G_BUS_NAME_OWNER_FLAGS_NONE,
    G_BUS_NAME_OWNER_FLAGS_ALLOW_REPLACEMENT = (1 &lt;&lt; 0),
    G_BUS_NAME_OWNER_FLAGS_REPLACE = (1 &lt;&lt; 1)
} GBusNameOwnerFlags;
typedef enum {
    G_BUS_NAME_WATCHER_FLAGS_NONE,
    G_BUS_NAME_WATCHER_FLAGS_AUTO_START = (1 &lt;&lt; 0)
} GBusNameWatcherFlags;
typedef enum {
    G_DBUS_PROXY_FLAGS_NONE,
    G_DBUS_PROXY_FLAGS_DO_NOT_LOAD_PROPERTIES = (1 &lt;&lt; 0),
    G_DBUS_PROXY_FLAGS_DO_NOT_CONNECT_SIGNALS = (1 &lt;&lt; 1),
    G_DBUS_PROXY_FLAGS_DO_NOT_AUTO_START = (1 &lt;&lt; 2),
    G_DBUS_PROXY_FLAGS_GET_INVALIDATED_PROPERTIES = (1 &lt;&lt; 3)
} GDBusProxyFlags;
typedef enum {
    G_DBUS_ERROR_FAILED,
    G_DBUS_ERROR_NO_MEMORY,
    G_DBUS_ERROR_SERVICE_UNKNOWN,
    G_DBUS_ERROR_NAME_HAS_NO_OWNER,
    G_DBUS_ERROR_NO_REPLY,
    G_DBUS_ERROR_IO_ERROR,
    G_DBUS_ERROR_BAD_ADDRESS,
    G_DBUS_ERROR_NOT_SUPPORTED,
    G_DBUS_ERROR_LIMITS_EXCEEDED,
    G_DBUS_ERROR_ACCESS_DENIED,
    G_DBUS_ERROR_AUTH_FAILED,
    G_DBUS_ERROR_NO_SERVER,
    G_DBUS_ERROR_TIMEOUT,
    G_DBUS_ERROR_NO_NETWORK,
    G_DBUS_ERROR_ADDRESS_IN_USE,
    G_DBUS_ERROR_DISCONNECTED,
    G_DBUS_ERROR_INVALID_ARGS,
    G_DBUS_ERROR_FILE_NOT_FOUND,
    G_DBUS_ERROR_FILE_EXISTS,
    G_DBUS_ERROR_UNKNOWN_METHOD,
    G_DBUS_ERROR_TIMED_OUT,
    G_DBUS_ERROR_MATCH_RULE_NOT_FOUND,
    G_DBUS_ERROR_MATCH_RULE_INVALID,
    G_DBUS_ERROR_SPAWN_EXEC_FAILED,
    G_DBUS_ERROR_SPAWN_FORK_FAILED,
    G_DBUS_ERROR_SPAWN_CHILD_EXITED,
    G_DBUS_ERROR_SPAWN_CHILD_SIGNALED,
    G_DBUS_ERROR_SPAWN_FAILED,
    G_DBUS_ERROR_SPAWN_SETUP_FAILED,
    G_DBUS_ERROR_SPAWN_CONFIG_INVALID,
    G_DBUS_ERROR_SPAWN_SERVICE_INVALID,
    G_DBUS_ERROR_SPAWN_SERVICE_NOT_FOUND,
    G_DBUS_ERROR_SPAWN_PERMISSIONS_INVALID,
    G_DBUS_ERROR_SPAWN_FILE_INVALID,
    G_DBUS_ERROR_SPAWN_NO_MEMORY,
    G_DBUS_ERROR_UNIX_PROCESS_ID_UNKNOWN,
    G_DBUS_ERROR_INVALID_SIGNATURE,
    G_DBUS_ERROR_INVALID_FILE_CONTENT,
    G_DBUS_ERROR_SELINUX_SECURITY_CONTEXT_UNKNOWN,
    G_DBUS_ERROR_ADT_AUDIT_DATA_UNKNOWN,
    G_DBUS_ERROR_OBJECT_PATH_IN_USE
} GDBusError;
typedef enum {
    G_DBUS_CONNECTION_FLAGS_NONE,
    G_DBUS_CONNECTION_FLAGS_AUTHENTICATION_CLIENT = (1 &lt;&lt; 0),
    G_DBUS_CONNECTION_FLAGS_AUTHENTICATION_SERVER = (1 &lt;&lt; 1),
    G_DBUS_CONNECTION_FLAGS_AUTHENTICATION_ALLOW_ANONYMOUS = (1 &lt;&lt; 2),
    G_DBUS_CONNECTION_FLAGS_MESSAGE_BUS_CONNECTION = (1 &lt;&lt; 3),
    G_DBUS_CONNECTION_FLAGS_DELAY_MESSAGE_PROCESSING = (1 &lt;&lt; 4)
} GDBusConnectionFlags;
typedef enum {
    G_DBUS_CAPABILITY_FLAGS_NONE,
    G_DBUS_CAPABILITY_FLAGS_UNIX_FD_PASSING = (1 &lt;&lt; 0)
} GDBusCapabilityFlags;
typedef enum {
    G_DBUS_CALL_FLAGS_NONE,
    G_DBUS_CALL_FLAGS_NO_AUTO_START = (1 &lt;&lt; 0)
} GDBusCallFlags;
typedef enum {
    G_DBUS_MESSAGE_TYPE_INVALID,
    G_DBUS_MESSAGE_TYPE_METHOD_CALL,
    G_DBUS_MESSAGE_TYPE_METHOD_RETURN,
    G_DBUS_MESSAGE_TYPE_ERROR,
    G_DBUS_MESSAGE_TYPE_SIGNAL
} GDBusMessageType;
typedef enum {
    G_DBUS_MESSAGE_FLAGS_NONE,
    G_DBUS_MESSAGE_FLAGS_NO_REPLY_EXPECTED = (1 &lt;&lt; 0),
    G_DBUS_MESSAGE_FLAGS_NO_AUTO_START = (1 &lt;&lt; 1)
} GDBusMessageFlags;
typedef enum {
    G_DBUS_MESSAGE_HEADER_FIELD_INVALID,
    G_DBUS_MESSAGE_HEADER_FIELD_PATH,
    G_DBUS_MESSAGE_HEADER_FIELD_INTERFACE,
    G_DBUS_MESSAGE_HEADER_FIELD_MEMBER,
    G_DBUS_MESSAGE_HEADER_FIELD_ERROR_NAME,
    G_DBUS_MESSAGE_HEADER_FIELD_REPLY_SERIAL,
    G_DBUS_MESSAGE_HEADER_FIELD_DESTINATION,
    G_DBUS_MESSAGE_HEADER_FIELD_SENDER,
    G_DBUS_MESSAGE_HEADER_FIELD_SIGNATURE,
    G_DBUS_MESSAGE_HEADER_FIELD_NUM_UNIX_FDS
} GDBusMessageHeaderField;
typedef enum {
    G_DBUS_PROPERTY_INFO_FLAGS_NONE,
    G_DBUS_PROPERTY_INFO_FLAGS_READABLE = (1 &lt;&lt; 0),
    G_DBUS_PROPERTY_INFO_FLAGS_WRITABLE = (1 &lt;&lt; 1)
} GDBusPropertyInfoFlags;
typedef enum {
    G_DBUS_SUBTREE_FLAGS_NONE,
    G_DBUS_SUBTREE_FLAGS_DISPATCH_TO_UNENUMERATED_NODES = (1 &lt;&lt; 0)
} GDBusSubtreeFlags;
typedef enum {
    G_DBUS_SERVER_FLAGS_NONE,
    G_DBUS_SERVER_FLAGS_RUN_IN_THREAD = (1 &lt;&lt; 0),
    G_DBUS_SERVER_FLAGS_AUTHENTICATION_ALLOW_ANONYMOUS = (1 &lt;&lt; 1)
} GDBusServerFlags;
typedef enum {
    G_DBUS_SIGNAL_FLAGS_NONE,
    G_DBUS_SIGNAL_FLAGS_NO_MATCH_RULE = (1 &lt;&lt; 0)
} GDBusSignalFlags;
typedef enum {
    G_DBUS_SEND_MESSAGE_FLAGS_NONE,
    G_DBUS_SEND_MESSAGE_FLAGS_PRESERVE_SERIAL = (1 &lt;&lt; 0)
} GDBusSendMessageFlags;
typedef enum {
    G_CREDENTIALS_TYPE_INVALID,
    G_CREDENTIALS_TYPE_LINUX_UCRED,
    G_CREDENTIALS_TYPE_FREEBSD_CMSGCRED,
    G_CREDENTIALS_TYPE_OPENBSD_SOCKPEERCRED
} GCredentialsType;
typedef enum {
    G_DBUS_MESSAGE_BYTE_ORDER_BIG_ENDIAN,
    G_DBUS_MESSAGE_BYTE_ORDER_LITTLE_ENDIAN
} GDBusMessageByteOrder;
typedef enum {
    G_APPLICATION_FLAGS_NONE,
    G_APPLICATION_IS_SERVICE = (1 &lt;&lt; 0),
    G_APPLICATION_IS_LAUNCHER = (1 &lt;&lt; 1),
    G_APPLICATION_HANDLES_OPEN = (1 &lt;&lt; 2),
    G_APPLICATION_HANDLES_COMMAND_LINE = (1 &lt;&lt; 3),
    G_APPLICATION_SEND_ENVIRONMENT = (1 &lt;&lt; 4),
    G_APPLICATION_NON_UNIQUE = (1 &lt;&lt; 5)
} GApplicationFlags;
typedef enum {
    G_TLS_ERROR_UNAVAILABLE,
    G_TLS_ERROR_MISC,
    G_TLS_ERROR_BAD_CERTIFICATE,
    G_TLS_ERROR_NOT_TLS,
    G_TLS_ERROR_HANDSHAKE,
    G_TLS_ERROR_CERTIFICATE_REQUIRED,
    G_TLS_ERROR_EOF
} GTlsError;
typedef enum {
    G_TLS_CERTIFICATE_UNKNOWN_CA = (1 &lt;&lt; 0),
    G_TLS_CERTIFICATE_BAD_IDENTITY = (1 &lt;&lt; 1),
    G_TLS_CERTIFICATE_NOT_ACTIVATED = (1 &lt;&lt; 2),
    G_TLS_CERTIFICATE_EXPIRED = (1 &lt;&lt; 3),
    G_TLS_CERTIFICATE_REVOKED = (1 &lt;&lt; 4),
    G_TLS_CERTIFICATE_INSECURE = (1 &lt;&lt; 5),
    G_TLS_CERTIFICATE_GENERIC_ERROR = (1 &lt;&lt; 6),
    G_TLS_CERTIFICATE_VALIDATE_ALL = 0x007f
} GTlsCertificateFlags;
typedef enum {
    G_TLS_AUTHENTICATION_NONE,
    G_TLS_AUTHENTICATION_REQUESTED,
    G_TLS_AUTHENTICATION_REQUIRED
} GTlsAuthenticationMode;
typedef enum {
    G_TLS_REHANDSHAKE_NEVER,
    G_TLS_REHANDSHAKE_SAFELY,
    G_TLS_REHANDSHAKE_UNSAFELY
} GTlsRehandshakeMode;
typedef enum _GTlsPasswordFlags {
    G_TLS_PASSWORD_NONE,
    G_TLS_PASSWORD_RETRY = 1 &lt;&lt; 1,
    G_TLS_PASSWORD_MANY_TRIES = 1 &lt;&lt; 2,
    G_TLS_PASSWORD_FINAL_TRY = 1 &lt;&lt; 3
} GTlsPasswordFlags;
typedef enum {
    G_TLS_INTERACTION_UNHANDLED,
    G_TLS_INTERACTION_HANDLED,
    G_TLS_INTERACTION_FAILED
} GTlsInteractionResult;
typedef enum {
    G_DBUS_INTERFACE_SKELETON_FLAGS_NONE,
    G_DBUS_INTERFACE_SKELETON_FLAGS_HANDLE_METHOD_INVOCATIONS_IN_THREAD =
	(1 &lt;&lt; 0)
} GDBusInterfaceSkeletonFlags;
typedef enum {
    G_DBUS_OBJECT_MANAGER_CLIENT_FLAGS_NONE,
    G_DBUS_OBJECT_MANAGER_CLIENT_FLAGS_DO_NOT_AUTO_START = (1 &lt;&lt; 0)
} GDBusObjectManagerClientFlags;
typedef enum {
    G_TLS_DATABASE_VERIFY_NONE
} GTlsDatabaseVerifyFlags;
typedef enum {
    G_TLS_DATABASE_LOOKUP_NONE,
    G_TLS_DATABASE_LOOKUP_KEYPAIR
} GTlsDatabaseLookupFlags;
typedef enum {
    G_IO_MODULE_SCOPE_NONE,
    G_IO_MODULE_SCOPE_BLOCK_DUPLICATES
} GIOModuleScopeFlags;
typedef enum {
    G_SOCKET_CLIENT_RESOLVING,
    G_SOCKET_CLIENT_RESOLVED,
    G_SOCKET_CLIENT_CONNECTING,
    G_SOCKET_CLIENT_CONNECTED,
    G_SOCKET_CLIENT_PROXY_NEGOTIATING,
    G_SOCKET_CLIENT_PROXY_NEGOTIATED,
    G_SOCKET_CLIENT_TLS_HANDSHAKING,
    G_SOCKET_CLIENT_TLS_HANDSHAKED,
    G_SOCKET_CLIENT_COMPLETE
} GSocketClientEvent;
</SCREEN>
</SECT2>
<SECT2>
<TITLE>glib-2.0/gio/gioenumtypes.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define G_TYPE_APPLICATION_FLAGS	(g_application_flags_get_type ())
#define G_TYPE_APP_INFO_CREATE_FLAGS	(g_app_info_create_flags_get_type ())
#define G_TYPE_ASK_PASSWORD_FLAGS	(g_ask_password_flags_get_type ())
#define G_TYPE_BUS_NAME_OWNER_FLAGS	(g_bus_name_owner_flags_get_type ())
#define G_TYPE_BUS_NAME_WATCHER_FLAGS	(g_bus_name_watcher_flags_get_type ())
#define G_TYPE_BUS_TYPE	(g_bus_type_get_type ())
#define G_TYPE_CONVERTER_FLAGS	(g_converter_flags_get_type ())
#define G_TYPE_CONVERTER_RESULT	(g_converter_result_get_type ())
#define G_TYPE_CREDENTIALS_TYPE	(g_credentials_type_get_type ())
#define G_TYPE_DATA_STREAM_BYTE_ORDER	(g_data_stream_byte_order_get_type ())
#define G_TYPE_DATA_STREAM_NEWLINE_TYPE	(g_data_stream_newline_type_get_type ())
#define G_TYPE_DBUS_CALL_FLAGS	(g_dbus_call_flags_get_type ())
#define G_TYPE_DBUS_CAPABILITY_FLAGS	(g_dbus_capability_flags_get_type ())
#define G_TYPE_DBUS_CONNECTION_FLAGS	(g_dbus_connection_flags_get_type ())
#define G_TYPE_DBUS_ERROR	(g_dbus_error_get_type ())
#define G_TYPE_DBUS_INTERFACE_SKELETON_FLAGS	(g_dbus_interface_skeleton_flags_get_type ())
#define G_TYPE_DBUS_MESSAGE_BYTE_ORDER	(g_dbus_message_byte_order_get_type ())
#define G_TYPE_DBUS_MESSAGE_FLAGS	(g_dbus_message_flags_get_type ())
#define G_TYPE_DBUS_MESSAGE_HEADER_FIELD	(g_dbus_message_header_field_get_type ())
#define G_TYPE_DBUS_MESSAGE_TYPE	(g_dbus_message_type_get_type ())
#define G_TYPE_DBUS_OBJECT_MANAGER_CLIENT_FLAGS	(g_dbus_object_manager_client_flags_get_type ())
#define G_TYPE_DBUS_PROPERTY_INFO_FLAGS	(g_dbus_property_info_flags_get_type ())
#define G_TYPE_DBUS_PROXY_FLAGS	(g_dbus_proxy_flags_get_type ())
#define G_TYPE_DBUS_SEND_MESSAGE_FLAGS	(g_dbus_send_message_flags_get_type ())
#define G_TYPE_DBUS_SERVER_FLAGS	(g_dbus_server_flags_get_type ())
#define G_TYPE_DBUS_SIGNAL_FLAGS	(g_dbus_signal_flags_get_type ())
#define G_TYPE_DBUS_SUBTREE_FLAGS	(g_dbus_subtree_flags_get_type ())
#define G_TYPE_DRIVE_START_FLAGS	(g_drive_start_flags_get_type ())
#define G_TYPE_DRIVE_START_STOP_TYPE	(g_drive_start_stop_type_get_type ())
#define G_TYPE_EMBLEM_ORIGIN	(g_emblem_origin_get_type ())
#define G_TYPE_FILESYSTEM_PREVIEW_TYPE	(g_filesystem_preview_type_get_type ())
#define G_TYPE_FILE_ATTRIBUTE_INFO_FLAGS	(g_file_attribute_info_flags_get_type ())
#define G_TYPE_FILE_ATTRIBUTE_STATUS	(g_file_attribute_status_get_type ())
#define G_TYPE_FILE_ATTRIBUTE_TYPE	(g_file_attribute_type_get_type ())
#define G_TYPE_FILE_COPY_FLAGS	(g_file_copy_flags_get_type ())
#define G_TYPE_FILE_CREATE_FLAGS	(g_file_create_flags_get_type ())
#define G_TYPE_FILE_MONITOR_EVENT	(g_file_monitor_event_get_type ())
#define G_TYPE_FILE_MONITOR_FLAGS	(g_file_monitor_flags_get_type ())
#define G_TYPE_FILE_QUERY_INFO_FLAGS	(g_file_query_info_flags_get_type ())
#define G_TYPE_FILE_TYPE	(g_file_type_get_type ())
#define G_TYPE_IO_ERROR_ENUM	(g_io_error_enum_get_type ())
#define G_TYPE_IO_MODULE_SCOPE_FLAGS	(g_io_module_scope_flags_get_type ())
#define G_TYPE_IO_STREAM_SPLICE_FLAGS	(g_io_stream_splice_flags_get_type ())
#define G_TYPE_MOUNT_MOUNT_FLAGS	(g_mount_mount_flags_get_type ())
#define G_TYPE_MOUNT_OPERATION_RESULT	(g_mount_operation_result_get_type ())
#define G_TYPE_MOUNT_UNMOUNT_FLAGS	(g_mount_unmount_flags_get_type ())
#define G_TYPE_OUTPUT_STREAM_SPLICE_FLAGS	(g_output_stream_splice_flags_get_type ())
#define G_TYPE_PASSWORD_SAVE	(g_password_save_get_type ())
#define G_TYPE_RESOLVER_ERROR	(g_resolver_error_get_type ())
#define G_TYPE_RESOURCE_ERROR	(g_resource_error_get_type ())
#define G_TYPE_RESOURCE_FLAGS	(g_resource_flags_get_type ())
#define G_TYPE_RESOURCE_LOOKUP_FLAGS	(g_resource_lookup_flags_get_type ())
#define G_TYPE_SETTINGS_BIND_FLAGS	(g_settings_bind_flags_get_type ())
#define G_TYPE_SOCKET_CLIENT_EVENT	(g_socket_client_event_get_type ())
#define G_TYPE_SOCKET_FAMILY	(g_socket_family_get_type ())
#define G_TYPE_SOCKET_MSG_FLAGS	(g_socket_msg_flags_get_type ())
#define G_TYPE_SOCKET_PROTOCOL	(g_socket_protocol_get_type ())
#define G_TYPE_SOCKET_TYPE	(g_socket_type_get_type ())
#define G_TYPE_TLS_AUTHENTICATION_MODE	(g_tls_authentication_mode_get_type ())
#define G_TYPE_TLS_CERTIFICATE_FLAGS	(g_tls_certificate_flags_get_type ())
#define G_TYPE_TLS_DATABASE_LOOKUP_FLAGS	(g_tls_database_lookup_flags_get_type ())
#define G_TYPE_TLS_DATABASE_VERIFY_FLAGS	(g_tls_database_verify_flags_get_type ())
#define G_TYPE_TLS_ERROR	(g_tls_error_get_type ())
#define G_TYPE_TLS_INTERACTION_RESULT	(g_tls_interaction_result_get_type ())
#define G_TYPE_TLS_PASSWORD_FLAGS	(g_tls_password_flags_get_type ())
#define G_TYPE_TLS_REHANDSHAKE_MODE	(g_tls_rehandshake_mode_get_type ())
#define G_TYPE_UNIX_SOCKET_ADDRESS_TYPE	(g_unix_socket_address_type_get_type ())
#define G_TYPE_ZLIB_COMPRESSOR_FORMAT	(g_zlib_compressor_format_get_type ())

extern GType g_app_info_create_flags_get_type(void);
extern GType g_application_flags_get_type(void);
extern GType g_ask_password_flags_get_type(void);
extern GType g_bus_name_owner_flags_get_type(void);
extern GType g_bus_name_watcher_flags_get_type(void);
extern GType g_bus_type_get_type(void);
extern GType g_converter_flags_get_type(void);
extern GType g_converter_result_get_type(void);
extern GType g_credentials_type_get_type(void);
extern GType g_data_stream_byte_order_get_type(void);
extern GType g_data_stream_newline_type_get_type(void);
extern GType g_dbus_call_flags_get_type(void);
extern GType g_dbus_capability_flags_get_type(void);
extern GType g_dbus_connection_flags_get_type(void);
extern GType g_dbus_error_get_type(void);
extern GType g_dbus_interface_skeleton_flags_get_type(void);
extern GType g_dbus_message_byte_order_get_type(void);
extern GType g_dbus_message_flags_get_type(void);
extern GType g_dbus_message_header_field_get_type(void);
extern GType g_dbus_message_type_get_type(void);
extern GType g_dbus_object_manager_client_flags_get_type(void);
extern GType g_dbus_property_info_flags_get_type(void);
extern GType g_dbus_proxy_flags_get_type(void);
extern GType g_dbus_send_message_flags_get_type(void);
extern GType g_dbus_server_flags_get_type(void);
extern GType g_dbus_signal_flags_get_type(void);
extern GType g_dbus_subtree_flags_get_type(void);
extern GType g_drive_start_flags_get_type(void);
extern GType g_drive_start_stop_type_get_type(void);
extern GType g_emblem_origin_get_type(void);
extern GType g_file_attribute_info_flags_get_type(void);
extern GType g_file_attribute_status_get_type(void);
extern GType g_file_attribute_type_get_type(void);
extern GType g_file_copy_flags_get_type(void);
extern GType g_file_create_flags_get_type(void);
extern GType g_file_monitor_event_get_type(void);
extern GType g_file_monitor_flags_get_type(void);
extern GType g_file_query_info_flags_get_type(void);
extern GType g_file_type_get_type(void);
extern GType g_filesystem_preview_type_get_type(void);
extern GType g_io_error_enum_get_type(void);
extern GType g_io_module_scope_flags_get_type(void);
extern GType g_io_stream_splice_flags_get_type(void);
extern GType g_mount_mount_flags_get_type(void);
extern GType g_mount_operation_result_get_type(void);
extern GType g_mount_unmount_flags_get_type(void);
extern GType g_output_stream_splice_flags_get_type(void);
extern GType g_password_save_get_type(void);
extern GType g_resolver_error_get_type(void);
extern GType g_resource_error_get_type(void);
extern GType g_resource_flags_get_type(void);
extern GType g_resource_lookup_flags_get_type(void);
extern GType g_settings_bind_flags_get_type(void);
extern GType g_socket_client_event_get_type(void);
extern GType g_socket_family_get_type(void);
extern GType g_socket_msg_flags_get_type(void);
extern GType g_socket_protocol_get_type(void);
extern GType g_socket_type_get_type(void);
extern GType g_tls_authentication_mode_get_type(void);
extern GType g_tls_certificate_flags_get_type(void);
extern GType g_tls_database_lookup_flags_get_type(void);
extern GType g_tls_database_verify_flags_get_type(void);
extern GType g_tls_error_get_type(void);
extern GType g_tls_interaction_result_get_type(void);
extern GType g_tls_password_flags_get_type(void);
extern GType g_tls_rehandshake_mode_get_type(void);
extern GType g_unix_socket_address_type_get_type(void);
extern GType g_zlib_compressor_format_get_type(void);
</SCREEN>
</SECT2>
<SECT2>
<TITLE>glib-2.0/gio/gioerror.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define G_IO_ERROR	g_io_error_quark()

extern GIOErrorEnum g_io_error_from_errno(gint err_no);
extern GQuark g_io_error_quark(void);
</SCREEN>
</SECT2>
<SECT2>
<TITLE>glib-2.0/gio/giomodule.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define G_IO_TYPE_MODULE	(g_io_module_get_type ())
#define G_IO_MODULE_CLASS(k)	(G_TYPE_CHECK_CLASS_CAST((k), G_IO_TYPE_MODULE, GIOModuleClass))
#define G_IO_IS_MODULE_CLASS(k)	(G_TYPE_CHECK_CLASS_TYPE ((k), G_IO_TYPE_MODULE))
#define G_IO_MODULE(o)	(G_TYPE_CHECK_INSTANCE_CAST ((o), G_IO_TYPE_MODULE, GIOModule))
#define G_IO_IS_MODULE(o)	(G_TYPE_CHECK_INSTANCE_TYPE ((o), G_IO_TYPE_MODULE))
#define G_IO_MODULE_GET_CLASS(o)	(G_TYPE_INSTANCE_GET_CLASS ((o), G_IO_TYPE_MODULE, GIOModuleClass))

typedef struct _GIOModuleScope GIOModuleScope;
extern const char *g_io_extension_get_name(GIOExtension * extension);
extern gint g_io_extension_get_priority(GIOExtension * extension);
extern GType g_io_extension_get_type(GIOExtension * extension);
extern GIOExtension
    *g_io_extension_point_get_extension_by_name(GIOExtensionPoint *
						extension_point,
						const char *name);
extern GList *g_io_extension_point_get_extensions(GIOExtensionPoint *
						  extension_point);
extern GType g_io_extension_point_get_required_type(GIOExtensionPoint *
						    extension_point);
extern GIOExtension *g_io_extension_point_implement(const char
						    *extension_point_name,
						    GType type,
						    const char
						    *extension_name,
						    gint priority);
extern GIOExtensionPoint *g_io_extension_point_lookup(const char *name);
extern GIOExtensionPoint *g_io_extension_point_register(const char *name);
extern void g_io_extension_point_set_required_type(GIOExtensionPoint *
						   extension_point,
						   GType type);
extern GTypeClass *g_io_extension_ref_class(GIOExtension * extension);
extern GType g_io_module_get_type(void);
extern GIOModule *g_io_module_new(const gchar * filename);
extern void g_io_module_scope_block(GIOModuleScope * scope,
				    const gchar * basename);
extern void g_io_module_scope_free(GIOModuleScope * scope);
extern GIOModuleScope *g_io_module_scope_new(GIOModuleScopeFlags flags);
extern GList *g_io_modules_load_all_in_directory(const gchar * dirname);
extern GList *g_io_modules_load_all_in_directory_with_scope(const gchar *
							    dirname,
							    GIOModuleScope
							    * scope);
extern void g_io_modules_scan_all_in_directory(const char *dirname);
extern void g_io_modules_scan_all_in_directory_with_scope(const gchar *
							  dirname,
							  GIOModuleScope *
							  scope);
</SCREEN>
</SECT2>
<SECT2>
<TITLE>glib-2.0/gio/gioscheduler.h</TITLE>
<PARA>
</PARA>
<SCREEN>

extern void g_io_scheduler_cancel_all_jobs(void);
extern gboolean g_io_scheduler_job_send_to_mainloop(GIOSchedulerJob * job,
						    GSourceFunc func,
						    gpointer user_data,
						    GDestroyNotify notify);
extern void g_io_scheduler_job_send_to_mainloop_async(GIOSchedulerJob *
						      job,
						      GSourceFunc func,
						      gpointer user_data,
						      GDestroyNotify
						      notify);
extern void g_io_scheduler_push_job(GIOSchedulerJobFunc job_func,
				    gpointer user_data,
				    GDestroyNotify notify,
				    gint io_priority,
				    GCancellable * cancellable);
</SCREEN>
</SECT2>
<SECT2>
<TITLE>glib-2.0/gio/giostream.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define G_TYPE_IO_STREAM	(g_io_stream_get_type ())
#define G_IO_STREAM_CLASS(k)	(G_TYPE_CHECK_CLASS_CAST((k), G_TYPE_IO_STREAM, GIOStreamClass))
#define G_IS_IO_STREAM_CLASS(k)	(G_TYPE_CHECK_CLASS_TYPE ((k), G_TYPE_IO_STREAM))
#define G_IO_STREAM(o)	(G_TYPE_CHECK_INSTANCE_CAST ((o), G_TYPE_IO_STREAM, GIOStream))
#define G_IS_IO_STREAM(o)	(G_TYPE_CHECK_INSTANCE_TYPE ((o), G_TYPE_IO_STREAM))
#define G_IO_STREAM_GET_CLASS(o)	(G_TYPE_INSTANCE_GET_CLASS ((o), G_TYPE_IO_STREAM, GIOStreamClass))

typedef struct _GIOStreamPrivate GIOStreamPrivate;
typedef struct _GIOStreamClass {
    GObjectClass parent_class;
    GInputStream *(*get_input_stream) (GIOStream * stream);
    GOutputStream *(*get_output_stream) (GIOStream * stream);
     gboolean(*close_fn) (GIOStream * stream, GCancellable * cancellable,
			  GError * *error);
    void (*close_async) (GIOStream * stream, int io_priority,
			 GCancellable * cancellable,
			 GAsyncReadyCallback callback, gpointer user_data);
     gboolean(*close_finish) (GIOStream * stream, GAsyncResult * result,
			      GError * *error);
    void (*_g_reserved1) (void);
    void (*_g_reserved2) (void);
    void (*_g_reserved3) (void);
    void (*_g_reserved4) (void);
    void (*_g_reserved5) (void);
    void (*_g_reserved6) (void);
    void (*_g_reserved7) (void);
    void (*_g_reserved8) (void);
    void (*_g_reserved9) (void);
    void (*_g_reserved10) (void);
} GIOStreamClass;
struct _GIOStream {
    GObject parent_instance;
    GIOStreamPrivate *priv;
};
extern void g_io_stream_clear_pending(GIOStream * stream);
extern gboolean g_io_stream_close(GIOStream * stream,
				  GCancellable * cancellable,
				  GError * *error);
extern void g_io_stream_close_async(GIOStream * stream, int io_priority,
				    GCancellable * cancellable,
				    GAsyncReadyCallback callback,
				    gpointer user_data);
extern gboolean g_io_stream_close_finish(GIOStream * stream,
					 GAsyncResult * result,
					 GError * *error);
extern GInputStream *g_io_stream_get_input_stream(GIOStream * stream);
extern GOutputStream *g_io_stream_get_output_stream(GIOStream * stream);
extern GType g_io_stream_get_type(void);
extern gboolean g_io_stream_has_pending(GIOStream * stream);
extern gboolean g_io_stream_is_closed(GIOStream * stream);
extern gboolean g_io_stream_set_pending(GIOStream * stream,
					GError * *error);
extern void g_io_stream_splice_async(GIOStream * stream1,
				     GIOStream * stream2,
				     GIOStreamSpliceFlags flags,
				     int io_priority,
				     GCancellable * cancellable,
				     GAsyncReadyCallback callback,
				     gpointer user_data);
extern gboolean g_io_stream_splice_finish(GAsyncResult * result,
					  GError * *error);
</SCREEN>
</SECT2>
<SECT2>
<TITLE>glib-2.0/gio/giotypes.h</TITLE>
<PARA>
</PARA>
<SCREEN>

typedef struct _GAppLaunchContext GAppLaunchContext;
typedef struct _GAppInfo GAppInfo;
typedef struct _GAsyncResult GAsyncResult;
typedef struct _GAsyncInitable GAsyncInitable;
typedef struct _GBufferedInputStream GBufferedInputStream;
typedef struct _GBufferedOutputStream GBufferedOutputStream;
typedef struct _GCancellable GCancellable;
typedef struct _GCharsetConverter GCharsetConverter;
typedef struct _GConverter GConverter;
typedef struct _GConverterInputStream GConverterInputStream;
typedef struct _GConverterOutputStream GConverterOutputStream;
typedef struct _GDataInputStream GDataInputStream;
typedef struct _GSimplePermission GSimplePermission;
typedef struct _GZlibCompressor GZlibCompressor;
typedef struct _GZlibDecompressor GZlibDecompressor;
typedef struct _GSimpleActionGroup GSimpleActionGroup;
typedef struct _GRemoteActionGroup GRemoteActionGroup;
typedef struct _GDBusActionGroup GDBusActionGroup;
typedef struct _GActionMap GActionMap;
typedef struct _GActionGroup GActionGroup;
typedef struct _GSimpleAction GSimpleAction;
typedef struct _GAction GAction;
typedef struct _GApplication GApplication;
typedef struct _GApplicationCommandLine GApplicationCommandLine;
typedef struct _GSettingsBackend GSettingsBackend;
typedef struct _GSettings GSettings;
typedef struct _GPermission GPermission;
typedef struct _GMenuModel GMenuModel;
typedef struct _GDrive GDrive;
typedef struct _GFileEnumerator GFileEnumerator;
typedef struct _GFileMonitor GFileMonitor;
typedef struct _GFilterInputStream GFilterInputStream;
typedef struct _GFilterOutputStream GFilterOutputStream;
typedef struct _GFile GFile;
typedef struct _GFileInfo GFileInfo;
typedef struct _GFileAttributeMatcher GFileAttributeMatcher;
typedef struct _GFileAttributeInfo GFileAttributeInfo;
typedef struct _GFileAttributeInfoList GFileAttributeInfoList;
typedef struct _GFileDescriptorBased GFileDescriptorBased;
typedef struct _GFileInputStream GFileInputStream;
typedef struct _GFileOutputStream GFileOutputStream;
typedef struct _GFileIOStream GFileIOStream;
typedef struct _GFileIcon GFileIcon;
typedef struct _GFilenameCompleter GFilenameCompleter;
typedef struct _GIcon GIcon;
typedef struct _GInetAddress GInetAddress;
typedef struct _GInetAddressMask GInetAddressMask;
typedef struct _GInetSocketAddress GInetSocketAddress;
typedef struct _GInputStream GInputStream;
typedef struct _GInitable GInitable;
typedef struct _GIOModule GIOModule;
typedef struct _GIOExtensionPoint GIOExtensionPoint;
typedef struct _GIOExtension GIOExtension;
typedef struct _GIOSchedulerJob GIOSchedulerJob;
typedef struct _GIOStreamAdapter GIOStreamAdapter;
typedef struct _GLoadableIcon GLoadableIcon;
typedef struct _GMemoryInputStream GMemoryInputStream;
typedef struct _GMemoryOutputStream GMemoryOutputStream;
typedef struct _GMount GMount;
typedef struct _GMountOperation GMountOperation;
typedef struct _GNetworkAddress GNetworkAddress;
typedef struct _GNetworkMonitor GNetworkMonitor;
typedef struct _GNetworkService GNetworkService;
typedef struct _GOutputStream GOutputStream;
typedef struct _GIOStream GIOStream;
typedef struct _GPollableInputStream GPollableInputStream;
typedef struct _GPollableOutputStream GPollableOutputStream;
typedef struct _GResolver GResolver;
typedef struct _GResource GResource;
typedef struct _GSeekable GSeekable;
typedef struct _GSimpleAsyncResult GSimpleAsyncResult;
typedef struct _GSocket GSocket;
typedef struct _GSocketControlMessage GSocketControlMessage;
typedef struct _GSocketClient GSocketClient;
typedef struct _GSocketConnection GSocketConnection;
typedef struct _GSocketListener GSocketListener;
typedef struct _GSocketService GSocketService;
typedef struct _GSocketAddress GSocketAddress;
typedef struct _GSocketAddressEnumerator GSocketAddressEnumerator;
typedef struct _GSocketConnectable GSocketConnectable;
typedef struct _GSrvTarget GSrvTarget;
typedef struct _GTcpConnection GTcpConnection;
typedef struct _GTcpWrapperConnection GTcpWrapperConnection;
typedef struct _GThreadedSocketService GThreadedSocketService;
typedef struct _GThemedIcon GThemedIcon;
typedef struct _GTlsCertificate GTlsCertificate;
typedef struct _GTlsClientConnection GTlsClientConnection;
typedef struct _GTlsConnection GTlsConnection;
typedef struct _GTlsDatabase GTlsDatabase;
typedef struct _GTlsFileDatabase GTlsFileDatabase;
typedef struct _GTlsInteraction GTlsInteraction;
typedef struct _GTlsPassword GTlsPassword;
typedef struct _GTlsServerConnection GTlsServerConnection;
typedef struct _GVfs GVfs;
typedef struct _GProxyResolver GProxyResolver;
typedef struct _GProxy GProxy;
typedef struct _GProxyAddress GProxyAddress;
typedef struct _GProxyAddressEnumerator GProxyAddressEnumerator;
typedef struct _GVolume GVolume;
typedef struct _GVolumeMonitor GVolumeMonitor;
typedef void (*GAsyncReadyCallback) (GObject * source_object,
				     GAsyncResult * res,
				     gpointer user_data);
typedef void (*GFileProgressCallback) (goffset current_num_bytes,
				       goffset total_num_bytes,
				       gpointer user_data);
typedef gboolean(*GFileReadMoreCallback) (const char *file_contents,
					  goffset file_size,
					  gpointer callback_data);
typedef gboolean(*GIOSchedulerJobFunc) (GIOSchedulerJob * job,
					GCancellable * cancellable,
					gpointer user_data);
typedef void (*GSimpleAsyncThreadFunc) (GSimpleAsyncResult * res,
					GObject * object,
					GCancellable * cancellable);
typedef struct _GInputVector {
    gpointer buffer;
    gsize size;
} GInputVector;
typedef struct _GOutputVector {
    gconstpointer buffer;
    gsize size;
} GOutputVector;
typedef struct _GCredentials GCredentials;
typedef struct _GUnixCredentialsMessage GUnixCredentialsMessage;
typedef struct _GUnixFDList GUnixFDList;
typedef struct _GDBusMessage GDBusMessage;
typedef struct _GDBusConnection GDBusConnection;
typedef struct _GDBusProxy GDBusProxy;
typedef struct _GDBusMethodInvocation GDBusMethodInvocation;
typedef struct _GDBusServer GDBusServer;
typedef struct _GDBusAuthObserver GDBusAuthObserver;
typedef struct _GDBusErrorEntry GDBusErrorEntry;
typedef struct _GDBusInterfaceVTable GDBusInterfaceVTable;
typedef struct _GDBusSubtreeVTable GDBusSubtreeVTable;
typedef struct _GDBusAnnotationInfo GDBusAnnotationInfo;
typedef struct _GDBusArgInfo GDBusArgInfo;
typedef struct _GDBusMethodInfo GDBusMethodInfo;
typedef struct _GDBusSignalInfo GDBusSignalInfo;
typedef struct _GDBusPropertyInfo GDBusPropertyInfo;
typedef struct _GDBusInterfaceInfo GDBusInterfaceInfo;
typedef struct _GDBusNodeInfo GDBusNodeInfo;
typedef struct _GDBusInterface GDBusInterface;
typedef struct _GDBusInterfaceSkeleton GDBusInterfaceSkeleton;
typedef struct _GDBusObject GDBusObject;
typedef struct _GDBusObjectSkeleton GDBusObjectSkeleton;
typedef struct _GDBusObjectProxy GDBusObjectProxy;
typedef struct _GDBusObjectManager GDBusObjectManager;
typedef struct _GDBusObjectManagerClient GDBusObjectManagerClient;
typedef struct _GDBusObjectManagerServer GDBusObjectManagerServer;
typedef GType(*GDBusProxyTypeFunc) (GDBusObjectManagerClient * manager,
				    const gchar * object_path,
				    const gchar * interface_name,
				    gpointer user_data);
</SCREEN>
</SECT2>
<SECT2>
<TITLE>glib-2.0/gio/gloadableicon.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define G_TYPE_LOADABLE_ICON	(g_loadable_icon_get_type ())
#define G_LOADABLE_ICON(obj)	(G_TYPE_CHECK_INSTANCE_CAST ((obj), G_TYPE_LOADABLE_ICON, GLoadableIcon))
#define G_IS_LOADABLE_ICON(obj)	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), G_TYPE_LOADABLE_ICON))
#define G_LOADABLE_ICON_GET_IFACE(obj)	(G_TYPE_INSTANCE_GET_INTERFACE ((obj), G_TYPE_LOADABLE_ICON, GLoadableIconIface))

typedef struct _GLoadableIconIface {
    GTypeInterface g_iface;
    GInputStream *(*load) (GLoadableIcon * icon, int size, char **type,
			   GCancellable * cancellable, GError * *error);
    void (*load_async) (GLoadableIcon * icon, int size,
			GCancellable * cancellable,
			GAsyncReadyCallback callback, gpointer user_data);
    GInputStream *(*load_finish) (GLoadableIcon * icon, GAsyncResult * res,
				  char **type, GError * *error);
} GLoadableIconIface;
extern GType g_loadable_icon_get_type(void);
extern GInputStream *g_loadable_icon_load(GLoadableIcon * icon, int size,
					  char **type,
					  GCancellable * cancellable,
					  GError * *error);
extern void g_loadable_icon_load_async(GLoadableIcon * icon, int size,
				       GCancellable * cancellable,
				       GAsyncReadyCallback callback,
				       gpointer user_data);
extern GInputStream *g_loadable_icon_load_finish(GLoadableIcon * icon,
						 GAsyncResult * res,
						 char **type,
						 GError * *error);
</SCREEN>
</SECT2>
<SECT2>
<TITLE>glib-2.0/gio/gmemoryinputstream.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define G_TYPE_MEMORY_INPUT_STREAM	(g_memory_input_stream_get_type ())
#define G_MEMORY_INPUT_STREAM_CLASS(k)	(G_TYPE_CHECK_CLASS_CAST((k), G_TYPE_MEMORY_INPUT_STREAM, GMemoryInputStreamClass))
#define G_IS_MEMORY_INPUT_STREAM_CLASS(k)	(G_TYPE_CHECK_CLASS_TYPE ((k), G_TYPE_MEMORY_INPUT_STREAM))
#define G_MEMORY_INPUT_STREAM(o)	(G_TYPE_CHECK_INSTANCE_CAST ((o), G_TYPE_MEMORY_INPUT_STREAM, GMemoryInputStream))
#define G_IS_MEMORY_INPUT_STREAM(o)	(G_TYPE_CHECK_INSTANCE_TYPE ((o), G_TYPE_MEMORY_INPUT_STREAM))
#define G_MEMORY_INPUT_STREAM_GET_CLASS(o)	(G_TYPE_INSTANCE_GET_CLASS ((o), G_TYPE_MEMORY_INPUT_STREAM, GMemoryInputStreamClass))

typedef struct _GMemoryInputStreamClass {
    GInputStreamClass parent_class;
    void (*_g_reserved1) (void);
    void (*_g_reserved2) (void);
    void (*_g_reserved3) (void);
    void (*_g_reserved4) (void);
    void (*_g_reserved5) (void);
} GMemoryInputStreamClass;
typedef struct _GMemoryInputStreamPrivate GMemoryInputStreamPrivate;
struct _GMemoryInputStream {
    GInputStream parent_instance;
    GMemoryInputStreamPrivate *priv;
};
extern void g_memory_input_stream_add_data(GMemoryInputStream * stream,
					   const void *data, gssize len,
					   GDestroyNotify destroy);
extern GType g_memory_input_stream_get_type(void);
extern GInputStream *g_memory_input_stream_new(void);
extern GInputStream *g_memory_input_stream_new_from_data(const void *data,
							 gssize len,
							 GDestroyNotify
							 destroy);
</SCREEN>
</SECT2>
<SECT2>
<TITLE>glib-2.0/gio/gmemoryoutputstream.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define G_TYPE_MEMORY_OUTPUT_STREAM	(g_memory_output_stream_get_type ())
#define G_MEMORY_OUTPUT_STREAM_CLASS(k)	(G_TYPE_CHECK_CLASS_CAST((k), G_TYPE_MEMORY_OUTPUT_STREAM, GMemoryOutputStreamClass))
#define G_IS_MEMORY_OUTPUT_STREAM_CLASS(k)	(G_TYPE_CHECK_CLASS_TYPE ((k), G_TYPE_MEMORY_OUTPUT_STREAM))
#define G_MEMORY_OUTPUT_STREAM(o)	(G_TYPE_CHECK_INSTANCE_CAST ((o), G_TYPE_MEMORY_OUTPUT_STREAM, GMemoryOutputStream))
#define G_IS_MEMORY_OUTPUT_STREAM(o)	(G_TYPE_CHECK_INSTANCE_TYPE ((o), G_TYPE_MEMORY_OUTPUT_STREAM))
#define G_MEMORY_OUTPUT_STREAM_GET_CLASS(o)	(G_TYPE_INSTANCE_GET_CLASS ((o), G_TYPE_MEMORY_OUTPUT_STREAM, GMemoryOutputStreamClass))

typedef struct _GMemoryOutputStreamClass {
    GOutputStreamClass parent_class;
    void (*_g_reserved1) (void);
    void (*_g_reserved2) (void);
    void (*_g_reserved3) (void);
    void (*_g_reserved4) (void);
    void (*_g_reserved5) (void);
} GMemoryOutputStreamClass;
typedef struct _GMemoryOutputStreamPrivate GMemoryOutputStreamPrivate;
struct _GMemoryOutputStream {
    GOutputStream parent_instance;
    GMemoryOutputStreamPrivate *priv;
};
typedef gpointer(*GReallocFunc) (gpointer data, gsize size);
extern gpointer g_memory_output_stream_get_data(GMemoryOutputStream *
						ostream);
extern gsize g_memory_output_stream_get_data_size(GMemoryOutputStream *
						  ostream);
extern gsize g_memory_output_stream_get_size(GMemoryOutputStream *
					     ostream);
extern GType g_memory_output_stream_get_type(void);
extern GOutputStream *g_memory_output_stream_new(gpointer data, gsize size,
						 GReallocFunc
						 realloc_function,
						 GDestroyNotify
						 destroy_function);
extern gpointer g_memory_output_stream_steal_data(GMemoryOutputStream *
						  ostream);
</SCREEN>
</SECT2>
<SECT2>
<TITLE>glib-2.0/gio/gmenu.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define G_TYPE_MENU	(g_menu_get_type ())
#define G_TYPE_MENU_ITEM	(g_menu_item_get_type ())
#define G_MENU(inst)	(G_TYPE_CHECK_INSTANCE_CAST ((inst), G_TYPE_MENU, GMenu))
#define G_MENU_ITEM(inst)	(G_TYPE_CHECK_INSTANCE_CAST ((inst), G_TYPE_MENU_ITEM, GMenuItem))
#define G_IS_MENU(inst)	(G_TYPE_CHECK_INSTANCE_TYPE ((inst), G_TYPE_MENU))
#define G_IS_MENU_ITEM(inst)	(G_TYPE_CHECK_INSTANCE_TYPE ((inst), G_TYPE_MENU_ITEM))

typedef struct _GMenuItem GMenuItem;
typedef struct _GMenu GMenu;
extern void g_menu_append(GMenu * menu, const gchar * label,
			  const gchar * detailed_action);
extern void g_menu_append_item(GMenu * menu, GMenuItem * item);
extern void g_menu_append_section(GMenu * menu, const gchar * label,
				  GMenuModel * section);
extern void g_menu_append_submenu(GMenu * menu, const gchar * label,
				  GMenuModel * submenu);
extern void g_menu_freeze(GMenu * menu);
extern GType g_menu_get_type(void);
extern void g_menu_insert(GMenu * menu, gint position, const gchar * label,
			  const gchar * detailed_action);
extern void g_menu_insert_item(GMenu * menu, gint position,
			       GMenuItem * item);
extern void g_menu_insert_section(GMenu * menu, gint position,
				  const gchar * label,
				  GMenuModel * section);
extern void g_menu_insert_submenu(GMenu * menu, gint position,
				  const gchar * label,
				  GMenuModel * submenu);
extern GType g_menu_item_get_type(void);
extern GMenuItem *g_menu_item_new(const gchar * label,
				  const gchar * detailed_action);
extern GMenuItem *g_menu_item_new_section(const gchar * label,
					  GMenuModel * section);
extern GMenuItem *g_menu_item_new_submenu(const gchar * label,
					  GMenuModel * submenu);
extern void g_menu_item_set_action_and_target(GMenuItem * menu_item,
					      const gchar * action,
					      const gchar * format_string,
					      ...);
extern void g_menu_item_set_action_and_target_value(GMenuItem * menu_item,
						    const gchar * action,
						    GVariant *
						    target_value);
extern void g_menu_item_set_attribute(GMenuItem * menu_item,
				      const gchar * attribute,
				      const gchar * format_string, ...);
extern void g_menu_item_set_attribute_value(GMenuItem * menu_item,
					    const gchar * attribute,
					    GVariant * value);
extern void g_menu_item_set_detailed_action(GMenuItem * menu_item,
					    const gchar * detailed_action);
extern void g_menu_item_set_label(GMenuItem * menu_item,
				  const gchar * label);
extern void g_menu_item_set_link(GMenuItem * menu_item, const gchar * link,
				 GMenuModel * model);
extern void g_menu_item_set_section(GMenuItem * menu_item,
				    GMenuModel * section);
extern void g_menu_item_set_submenu(GMenuItem * menu_item,
				    GMenuModel * submenu);
extern GMenu *g_menu_new(void);
extern void g_menu_prepend(GMenu * menu, const gchar * label,
			   const gchar * detailed_action);
extern void g_menu_prepend_item(GMenu * menu, GMenuItem * item);
extern void g_menu_prepend_section(GMenu * menu, const gchar * label,
				   GMenuModel * section);
extern void g_menu_prepend_submenu(GMenu * menu, const gchar * label,
				   GMenuModel * submenu);
extern void g_menu_remove(GMenu * menu, gint position);
</SCREEN>
</SECT2>
<SECT2>
<TITLE>glib-2.0/gio/gmenuexporter.h</TITLE>
<PARA>
</PARA>
<SCREEN>

extern guint g_dbus_connection_export_menu_model(GDBusConnection *
						 connection,
						 const gchar * object_path,
						 GMenuModel * menu,
						 GError * *error);
extern void g_dbus_connection_unexport_menu_model(GDBusConnection *
						  connection,
						  guint export_id);
</SCREEN>
</SECT2>
<SECT2>
<TITLE>glib-2.0/gio/gmenumodel.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define G_TYPE_MENU_ATTRIBUTE_ITER	(g_menu_attribute_iter_get_type ())
#define G_TYPE_MENU_LINK_ITER	(g_menu_link_iter_get_type ())
#define G_TYPE_MENU_MODEL	(g_menu_model_get_type ())
#define G_MENU_ATTRIBUTE_ITER_CLASS(class)	(G_TYPE_CHECK_CLASS_CAST ((class), G_TYPE_MENU_ATTRIBUTE_ITER, GMenuAttributeIterClass))
#define G_MENU_LINK_ITER_CLASS(class)	(G_TYPE_CHECK_CLASS_CAST ((class), G_TYPE_MENU_LINK_ITER, GMenuLinkIterClass))
#define G_MENU_MODEL_CLASS(class)	(G_TYPE_CHECK_CLASS_CAST ((class), G_TYPE_MENU_MODEL, GMenuModelClass))
#define G_IS_MENU_ATTRIBUTE_ITER_CLASS(class)	(G_TYPE_CHECK_CLASS_TYPE ((class), G_TYPE_MENU_ATTRIBUTE_ITER))
#define G_IS_MENU_LINK_ITER_CLASS(class)	(G_TYPE_CHECK_CLASS_TYPE ((class), G_TYPE_MENU_LINK_ITER))
#define G_IS_MENU_MODEL_CLASS(class)	(G_TYPE_CHECK_CLASS_TYPE ((class), G_TYPE_MENU_MODEL))
#define G_MENU_ATTRIBUTE_ITER(inst)	(G_TYPE_CHECK_INSTANCE_CAST ((inst), G_TYPE_MENU_ATTRIBUTE_ITER, GMenuAttributeIter))
#define G_MENU_LINK_ITER(inst)	(G_TYPE_CHECK_INSTANCE_CAST ((inst), G_TYPE_MENU_LINK_ITER, GMenuLinkIter))
#define G_MENU_MODEL(inst)	(G_TYPE_CHECK_INSTANCE_CAST ((inst), G_TYPE_MENU_MODEL, GMenuModel))
#define G_IS_MENU_ATTRIBUTE_ITER(inst)	(G_TYPE_CHECK_INSTANCE_TYPE ((inst), G_TYPE_MENU_ATTRIBUTE_ITER))
#define G_IS_MENU_LINK_ITER(inst)	(G_TYPE_CHECK_INSTANCE_TYPE ((inst), G_TYPE_MENU_LINK_ITER))
#define G_IS_MENU_MODEL(inst)	(G_TYPE_CHECK_INSTANCE_TYPE ((inst), G_TYPE_MENU_MODEL))
#define G_MENU_ATTRIBUTE_ITER_GET_CLASS(inst)	(G_TYPE_INSTANCE_GET_CLASS ((inst), G_TYPE_MENU_ATTRIBUTE_ITER, GMenuAttributeIterClass))
#define G_MENU_LINK_ITER_GET_CLASS(inst)	(G_TYPE_INSTANCE_GET_CLASS ((inst), G_TYPE_MENU_LINK_ITER, GMenuLinkIterClass))
#define G_MENU_MODEL_GET_CLASS(inst)	(G_TYPE_INSTANCE_GET_CLASS ((inst), G_TYPE_MENU_MODEL, GMenuModelClass))
#define G_MENU_ATTRIBUTE_ACTION	"action"
#define G_MENU_ATTRIBUTE_LABEL	"label"
#define G_MENU_LINK_SECTION	"section"
#define G_MENU_LINK_SUBMENU	"submenu"
#define G_MENU_ATTRIBUTE_TARGET	"target"

typedef struct _GMenuModelPrivate GMenuModelPrivate;
typedef struct _GMenuModelClass {
    GObjectClass parent_class;
     gboolean(*is_mutable) (GMenuModel * model);
     gint(*get_n_items) (GMenuModel * model);
    void (*get_item_attributes) (GMenuModel * model, gint item_index,
				 GHashTable * *attributes);
    GMenuAttributeIter *(*iterate_item_attributes) (GMenuModel * model,
						    gint item_index);
    GVariant *(*get_item_attribute_value) (GMenuModel * model,
					   gint item_index,
					   const gchar * attribute,
					   const GVariantType *
					   expected_type);
    void (*get_item_links) (GMenuModel * model, gint item_index,
			    GHashTable * *attributes);
    GMenuLinkIter *(*iterate_item_links) (GMenuModel * model,
					  gint item_index);
    GMenuModel *(*get_item_link) (GMenuModel * model, gint item_index,
				  const gchar * link);
} GMenuModelClass;
typedef struct _GMenuAttributeIterPrivate GMenuAttributeIterPrivate;
typedef struct _GMenuAttributeIterClass {
    GObjectClass parent_class;
     gboolean(*get_next) (GMenuAttributeIter * iter,
			  const gchar * *out_type, GVariant * *value);
} GMenuAttributeIterClass;
typedef struct _GMenuAttributeIter {
    GObject parent_instance;
    GMenuAttributeIterPrivate *priv;
} GMenuAttributeIter;
typedef struct _GMenuLinkIterPrivate GMenuLinkIterPrivate;
typedef struct _GMenuLinkIterClass {
    GObjectClass parent_class;
     gboolean(*get_next) (GMenuLinkIter * iter, const gchar * *out_name,
			  GMenuModel * *value);
} GMenuLinkIterClass;
typedef struct _GMenuLinkIter {
    GObject parent_instance;
    GMenuLinkIterPrivate *priv;
} GMenuLinkIter;
struct _GMenuModel {
    GObject parent_instance;
    GMenuModelPrivate *priv;
};
extern const char *g_menu_attribute_iter_get_name(GMenuAttributeIter *
						  iter);
extern gboolean g_menu_attribute_iter_get_next(GMenuAttributeIter * iter,
					       const gchar * *out_name,
					       GVariant * *value);
extern GType g_menu_attribute_iter_get_type(void);
extern GVariant *g_menu_attribute_iter_get_value(GMenuAttributeIter *
						 iter);
extern gboolean g_menu_attribute_iter_next(GMenuAttributeIter * iter);
extern const char *g_menu_link_iter_get_name(GMenuLinkIter * iter);
extern gboolean g_menu_link_iter_get_next(GMenuLinkIter * iter,
					  const gchar * *out_link,
					  GMenuModel * *value);
extern GType g_menu_link_iter_get_type(void);
extern GMenuModel *g_menu_link_iter_get_value(GMenuLinkIter * iter);
extern gboolean g_menu_link_iter_next(GMenuLinkIter * iter);
extern gboolean g_menu_model_get_item_attribute(GMenuModel * model,
						gint item_index,
						const gchar * attribute,
						const gchar *
						format_string, ...);
extern GVariant *g_menu_model_get_item_attribute_value(GMenuModel * model,
						       gint item_index,
						       const gchar *
						       attribute,
						       const GVariantType *
						       expected_type);
extern GMenuModel *g_menu_model_get_item_link(GMenuModel * model,
					      gint item_index,
					      const gchar * link);
extern gint g_menu_model_get_n_items(GMenuModel * model);
extern GType g_menu_model_get_type(void);
extern gboolean g_menu_model_is_mutable(GMenuModel * model);
extern void g_menu_model_items_changed(GMenuModel * model, gint position,
				       gint removed, gint added);
extern GMenuAttributeIter *g_menu_model_iterate_item_attributes(GMenuModel
								* model,
								gint
								item_index);
extern GMenuLinkIter *g_menu_model_iterate_item_links(GMenuModel * model,
						      gint item_index);
</SCREEN>
</SECT2>
<SECT2>
<TITLE>glib-2.0/gio/gmount.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define G_TYPE_MOUNT	(g_mount_get_type ())
#define G_MOUNT(obj)	(G_TYPE_CHECK_INSTANCE_CAST ((obj), G_TYPE_MOUNT, GMount))
#define G_IS_MOUNT(obj)	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), G_TYPE_MOUNT))
#define G_MOUNT_GET_IFACE(obj)	(G_TYPE_INSTANCE_GET_INTERFACE ((obj), G_TYPE_MOUNT, GMountIface))

extern gboolean g_mount_can_eject(GMount * mount);
extern gboolean g_mount_can_unmount(GMount * mount);
extern void g_mount_eject(GMount * mount, GMountUnmountFlags flags,
			  GCancellable * cancellable,
			  GAsyncReadyCallback callback,
			  gpointer user_data);
extern gboolean g_mount_eject_finish(GMount * mount, GAsyncResult * result,
				     GError * *error);
extern void g_mount_eject_with_operation(GMount * mount,
					 GMountUnmountFlags flags,
					 GMountOperation * mount_operation,
					 GCancellable * cancellable,
					 GAsyncReadyCallback callback,
					 gpointer user_data);
extern gboolean g_mount_eject_with_operation_finish(GMount * mount,
						    GAsyncResult * result,
						    GError * *error);
extern GFile *g_mount_get_default_location(GMount * mount);
extern GDrive *g_mount_get_drive(GMount * mount);
extern GIcon *g_mount_get_icon(GMount * mount);
extern char *g_mount_get_name(GMount * mount);
extern GFile *g_mount_get_root(GMount * mount);
extern const char *g_mount_get_sort_key(GMount * mount);
extern GType g_mount_get_type(void);
extern char *g_mount_get_uuid(GMount * mount);
extern GVolume *g_mount_get_volume(GMount * mount);
extern void g_mount_guess_content_type(GMount * mount,
				       gboolean force_rescan,
				       GCancellable * cancellable,
				       GAsyncReadyCallback callback,
				       gpointer user_data);
extern gchar **g_mount_guess_content_type_finish(GMount * mount,
						 GAsyncResult * result,
						 GError * *error);
extern gchar **g_mount_guess_content_type_sync(GMount * mount,
					       gboolean force_rescan,
					       GCancellable * cancellable,
					       GError * *error);
extern gboolean g_mount_is_shadowed(GMount * mount);
extern void g_mount_remount(GMount * mount, GMountMountFlags flags,
			    GMountOperation * mount_operation,
			    GCancellable * cancellable,
			    GAsyncReadyCallback callback,
			    gpointer user_data);
extern gboolean g_mount_remount_finish(GMount * mount,
				       GAsyncResult * result,
				       GError * *error);
extern void g_mount_shadow(GMount * mount);
extern void g_mount_unmount(GMount * mount, GMountUnmountFlags flags,
			    GCancellable * cancellable,
			    GAsyncReadyCallback callback,
			    gpointer user_data);
extern gboolean g_mount_unmount_finish(GMount * mount,
				       GAsyncResult * result,
				       GError * *error);
extern void g_mount_unmount_with_operation(GMount * mount,
					   GMountUnmountFlags flags,
					   GMountOperation *
					   mount_operation,
					   GCancellable * cancellable,
					   GAsyncReadyCallback callback,
					   gpointer user_data);
extern gboolean g_mount_unmount_with_operation_finish(GMount * mount,
						      GAsyncResult *
						      result,
						      GError * *error);
extern void g_mount_unshadow(GMount * mount);
</SCREEN>
</SECT2>
<SECT2>
<TITLE>glib-2.0/gio/gmountoperation.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define G_TYPE_MOUNT_OPERATION	(g_mount_operation_get_type ())
#define G_MOUNT_OPERATION_CLASS(k)	(G_TYPE_CHECK_CLASS_CAST((k), G_TYPE_MOUNT_OPERATION, GMountOperationClass))
#define G_IS_MOUNT_OPERATION_CLASS(k)	(G_TYPE_CHECK_CLASS_TYPE ((k), G_TYPE_MOUNT_OPERATION))
#define G_MOUNT_OPERATION(o)	(G_TYPE_CHECK_INSTANCE_CAST ((o), G_TYPE_MOUNT_OPERATION, GMountOperation))
#define G_IS_MOUNT_OPERATION(o)	(G_TYPE_CHECK_INSTANCE_TYPE ((o), G_TYPE_MOUNT_OPERATION))
#define G_MOUNT_OPERATION_GET_CLASS(o)	(G_TYPE_INSTANCE_GET_CLASS ((o), G_TYPE_MOUNT_OPERATION, GMountOperationClass))

typedef struct _GMountOperationPrivate GMountOperationPrivate;
extern gboolean g_mount_operation_get_anonymous(GMountOperation * op);
extern int g_mount_operation_get_choice(GMountOperation * op);
extern const char *g_mount_operation_get_domain(GMountOperation * op);
extern const char *g_mount_operation_get_password(GMountOperation * op);
extern GPasswordSave g_mount_operation_get_password_save(GMountOperation *
							 op);
extern GType g_mount_operation_get_type(void);
extern const char *g_mount_operation_get_username(GMountOperation * op);
extern GMountOperation *g_mount_operation_new(void);
extern void g_mount_operation_reply(GMountOperation * op,
				    GMountOperationResult result);
extern void g_mount_operation_set_anonymous(GMountOperation * op,
					    gboolean anonymous);
extern void g_mount_operation_set_choice(GMountOperation * op, int choice);
extern void g_mount_operation_set_domain(GMountOperation * op,
					 const char *domain);
extern void g_mount_operation_set_password(GMountOperation * op,
					   const char *password);
extern void g_mount_operation_set_password_save(GMountOperation * op,
						GPasswordSave save);
extern void g_mount_operation_set_username(GMountOperation * op,
					   const char *username);
</SCREEN>
</SECT2>
<SECT2>
<TITLE>glib-2.0/gio/gnativevolumemonitor.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define G_TYPE_NATIVE_VOLUME_MONITOR	(g_native_volume_monitor_get_type ())
#define G_NATIVE_VOLUME_MONITOR_CLASS(k)	(G_TYPE_CHECK_CLASS_CAST((k), G_TYPE_NATIVE_VOLUME_MONITOR, GNativeVolumeMonitorClass))
#define G_IS_NATIVE_VOLUME_MONITOR_CLASS(k)	(G_TYPE_CHECK_CLASS_TYPE ((k), G_TYPE_NATIVE_VOLUME_MONITOR))
#define G_NATIVE_VOLUME_MONITOR(o)	(G_TYPE_CHECK_INSTANCE_CAST ((o), G_TYPE_NATIVE_VOLUME_MONITOR, GNativeVolumeMonitor))
#define G_IS_NATIVE_VOLUME_MONITOR(o)	(G_TYPE_CHECK_INSTANCE_TYPE ((o), G_TYPE_NATIVE_VOLUME_MONITOR))
#define G_NATIVE_VOLUME_MONITOR_EXTENSION_POINT_NAME	"gio-native-volume-monitor"

typedef struct _GNativeVolumeMonitor {
    GVolumeMonitor parent_instance;
} GNativeVolumeMonitor;
typedef struct _GNativeVolumeMonitorClass {
    GVolumeMonitorClass parent_class;
    GMount *(*get_mount_for_mount_path) (const char *mount_path,
					 GCancellable * cancellable);
} GNativeVolumeMonitorClass;
extern GType g_native_volume_monitor_get_type(void);
</SCREEN>
</SECT2>
<SECT2>
<TITLE>glib-2.0/gio/gnetworkaddress.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define G_TYPE_NETWORK_ADDRESS	(g_network_address_get_type ())
#define G_NETWORK_ADDRESS_CLASS(k)	(G_TYPE_CHECK_CLASS_CAST((k), G_TYPE_NETWORK_ADDRESS, GNetworkAddressClass))
#define G_IS_NETWORK_ADDRESS_CLASS(k)	(G_TYPE_CHECK_CLASS_TYPE ((k), G_TYPE_NETWORK_ADDRESS))
#define G_NETWORK_ADDRESS(o)	(G_TYPE_CHECK_INSTANCE_CAST ((o), G_TYPE_NETWORK_ADDRESS, GNetworkAddress))
#define G_IS_NETWORK_ADDRESS(o)	(G_TYPE_CHECK_INSTANCE_TYPE ((o), G_TYPE_NETWORK_ADDRESS))
#define G_NETWORK_ADDRESS_GET_CLASS(o)	(G_TYPE_INSTANCE_GET_CLASS ((o), G_TYPE_NETWORK_ADDRESS, GNetworkAddressClass))

typedef struct _GNetworkAddressClass {
    GObjectClass parent_class;
} GNetworkAddressClass;
typedef struct _GNetworkAddressPrivate GNetworkAddressPrivate;
struct _GNetworkAddress {
    GObject parent_instance;
    GNetworkAddressPrivate *priv;
};
extern const char *g_network_address_get_hostname(GNetworkAddress * addr);
extern guint16 g_network_address_get_port(GNetworkAddress * addr);
extern const char *g_network_address_get_scheme(GNetworkAddress * addr);
extern GType g_network_address_get_type(void);
extern GSocketConnectable *g_network_address_new(const gchar * hostname,
						 guint16 port);
extern GSocketConnectable *g_network_address_parse(const gchar *
						   host_and_port,
						   guint16 default_port,
						   GError * *error);
extern GSocketConnectable *g_network_address_parse_uri(const gchar * uri,
						       guint16
						       default_port,
						       GError * *error);
</SCREEN>
</SECT2>
<SECT2>
<TITLE>glib-2.0/gio/gnetworkmonitor.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define G_TYPE_NETWORK_MONITOR	(g_network_monitor_get_type ())
#define G_NETWORK_MONITOR(o)	(G_TYPE_CHECK_INSTANCE_CAST ((o), G_TYPE_NETWORK_MONITOR, GNetworkMonitor))
#define G_IS_NETWORK_MONITOR(o)	(G_TYPE_CHECK_INSTANCE_TYPE ((o), G_TYPE_NETWORK_MONITOR))
#define G_NETWORK_MONITOR_GET_INTERFACE(o)	(G_TYPE_INSTANCE_GET_INTERFACE ((o), G_TYPE_NETWORK_MONITOR, GNetworkMonitorInterface))
#define G_NETWORK_MONITOR_EXTENSION_POINT_NAME	"gio-network-monitor"

typedef struct _GNetworkMonitorInterface {
    GTypeInterface g_iface;
    void (*network_changed) (GNetworkMonitor * monitor,
			     gboolean available);
     gboolean(*can_reach) (GNetworkMonitor * monitor,
			   GSocketConnectable * connectable,
			   GCancellable * cancellable, GError * *error);
    void (*can_reach_async) (GNetworkMonitor * monitor,
			     GSocketConnectable * connectable,
			     GCancellable * cancellable,
			     GAsyncReadyCallback callback,
			     gpointer user_data);
     gboolean(*can_reach_finish) (GNetworkMonitor * monitor,
				  GAsyncResult * result, GError * *error);
} GNetworkMonitorInterface;
extern gboolean g_network_monitor_can_reach(GNetworkMonitor * monitor,
					    GSocketConnectable *
					    connectable,
					    GCancellable * cancellable,
					    GError * *error);
extern void g_network_monitor_can_reach_async(GNetworkMonitor * monitor,
					      GSocketConnectable *
					      connectable,
					      GCancellable * cancellable,
					      GAsyncReadyCallback callback,
					      gpointer user_data);
extern gboolean g_network_monitor_can_reach_finish(GNetworkMonitor *
						   monitor,
						   GAsyncResult * result,
						   GError * *error);
extern GNetworkMonitor *g_network_monitor_get_default(void);
extern gboolean g_network_monitor_get_network_available(GNetworkMonitor *
							monitor);
extern GType g_network_monitor_get_type(void);
</SCREEN>
</SECT2>
<SECT2>
<TITLE>glib-2.0/gio/gnetworkservice.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define G_TYPE_NETWORK_SERVICE	(g_network_service_get_type ())
#define G_NETWORK_SERVICE_CLASS(k)	(G_TYPE_CHECK_CLASS_CAST((k), G_TYPE_NETWORK_SERVICE, GNetworkServiceClass))
#define G_IS_NETWORK_SERVICE_CLASS(k)	(G_TYPE_CHECK_CLASS_TYPE ((k), G_TYPE_NETWORK_SERVICE))
#define G_NETWORK_SERVICE(o)	(G_TYPE_CHECK_INSTANCE_CAST ((o), G_TYPE_NETWORK_SERVICE, GNetworkService))
#define G_IS_NETWORK_SERVICE(o)	(G_TYPE_CHECK_INSTANCE_TYPE ((o), G_TYPE_NETWORK_SERVICE))
#define G_NETWORK_SERVICE_GET_CLASS(o)	(G_TYPE_INSTANCE_GET_CLASS ((o), G_TYPE_NETWORK_SERVICE, GNetworkServiceClass))

typedef struct _GNetworkServiceClass {
    GObjectClass parent_class;
} GNetworkServiceClass;
typedef struct _GNetworkServicePrivate GNetworkServicePrivate;
struct _GNetworkService {
    GObject parent_instance;
    GNetworkServicePrivate *priv;
};
extern const gchar *g_network_service_get_domain(GNetworkService * srv);
extern const gchar *g_network_service_get_protocol(GNetworkService * srv);
extern const gchar *g_network_service_get_scheme(GNetworkService * srv);
extern const gchar *g_network_service_get_service(GNetworkService * srv);
extern GType g_network_service_get_type(void);
extern GSocketConnectable *g_network_service_new(const gchar * service,
						 const gchar * protocol,
						 const gchar * domain);
extern void g_network_service_set_scheme(GNetworkService * srv,
					 const gchar * scheme);
</SCREEN>
</SECT2>
<SECT2>
<TITLE>glib-2.0/gio/goutputstream.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define G_TYPE_OUTPUT_STREAM	(g_output_stream_get_type ())
#define G_OUTPUT_STREAM_CLASS(k)	(G_TYPE_CHECK_CLASS_CAST((k), G_TYPE_OUTPUT_STREAM, GOutputStreamClass))
#define G_IS_OUTPUT_STREAM_CLASS(k)	(G_TYPE_CHECK_CLASS_TYPE ((k), G_TYPE_OUTPUT_STREAM))
#define G_OUTPUT_STREAM(o)	(G_TYPE_CHECK_INSTANCE_CAST ((o), G_TYPE_OUTPUT_STREAM, GOutputStream))
#define G_IS_OUTPUT_STREAM(o)	(G_TYPE_CHECK_INSTANCE_TYPE ((o), G_TYPE_OUTPUT_STREAM))
#define G_OUTPUT_STREAM_GET_CLASS(o)	(G_TYPE_INSTANCE_GET_CLASS ((o), G_TYPE_OUTPUT_STREAM, GOutputStreamClass))

typedef struct _GOutputStreamClass {
    GObjectClass parent_class;
     gssize(*write_fn) (GOutputStream * stream, const void *buffer,
			gsize count, GCancellable * cancellable,
			GError * *error);
     gssize(*splice) (GOutputStream * stream, GInputStream * source,
		      GOutputStreamSpliceFlags flags,
		      GCancellable * cancellable, GError * *error);
     gboolean(*flush) (GOutputStream * stream, GCancellable * cancellable,
		       GError * *error);
     gboolean(*close_fn) (GOutputStream * stream,
			  GCancellable * cancellable, GError * *error);
    void (*write_async) (GOutputStream * stream, const void *buffer,
			 gsize count, int io_priority,
			 GCancellable * cancellable,
			 GAsyncReadyCallback callback, gpointer user_data);
     gssize(*write_finish) (GOutputStream * stream, GAsyncResult * result,
			    GError * *error);
    void (*splice_async) (GOutputStream * stream, GInputStream * source,
			  GOutputStreamSpliceFlags flags, int io_priority,
			  GCancellable * cancellable,
			  GAsyncReadyCallback callback,
			  gpointer user_data);
     gssize(*splice_finish) (GOutputStream * stream, GAsyncResult * result,
			     GError * *error);
    void (*flush_async) (GOutputStream * stream, int io_priority,
			 GCancellable * cancellable,
			 GAsyncReadyCallback callback, gpointer user_data);
     gboolean(*flush_finish) (GOutputStream * stream,
			      GAsyncResult * result, GError * *error);
    void (*close_async) (GOutputStream * stream, int io_priority,
			 GCancellable * cancellable,
			 GAsyncReadyCallback callback, gpointer user_data);
     gboolean(*close_finish) (GOutputStream * stream,
			      GAsyncResult * result, GError * *error);
    void (*_g_reserved1) (void);
    void (*_g_reserved2) (void);
    void (*_g_reserved3) (void);
    void (*_g_reserved4) (void);
    void (*_g_reserved5) (void);
    void (*_g_reserved6) (void);
    void (*_g_reserved7) (void);
    void (*_g_reserved8) (void);
} GOutputStreamClass;
typedef struct _GOutputStreamPrivate GOutputStreamPrivate;
struct _GOutputStream {
    GObject parent_instance;
    GOutputStreamPrivate *priv;
};
extern void g_output_stream_clear_pending(GOutputStream * stream);
extern gboolean g_output_stream_close(GOutputStream * stream,
				      GCancellable * cancellable,
				      GError * *error);
extern void g_output_stream_close_async(GOutputStream * stream,
					int io_priority,
					GCancellable * cancellable,
					GAsyncReadyCallback callback,
					gpointer user_data);
extern gboolean g_output_stream_close_finish(GOutputStream * stream,
					     GAsyncResult * result,
					     GError * *error);
extern gboolean g_output_stream_flush(GOutputStream * stream,
				      GCancellable * cancellable,
				      GError * *error);
extern void g_output_stream_flush_async(GOutputStream * stream,
					int io_priority,
					GCancellable * cancellable,
					GAsyncReadyCallback callback,
					gpointer user_data);
extern gboolean g_output_stream_flush_finish(GOutputStream * stream,
					     GAsyncResult * result,
					     GError * *error);
extern GType g_output_stream_get_type(void);
extern gboolean g_output_stream_has_pending(GOutputStream * stream);
extern gboolean g_output_stream_is_closed(GOutputStream * stream);
extern gboolean g_output_stream_is_closing(GOutputStream * stream);
extern gboolean g_output_stream_set_pending(GOutputStream * stream,
					    GError * *error);
extern gssize g_output_stream_splice(GOutputStream * stream,
				     GInputStream * source,
				     GOutputStreamSpliceFlags flags,
				     GCancellable * cancellable,
				     GError * *error);
extern void g_output_stream_splice_async(GOutputStream * stream,
					 GInputStream * source,
					 GOutputStreamSpliceFlags flags,
					 int io_priority,
					 GCancellable * cancellable,
					 GAsyncReadyCallback callback,
					 gpointer user_data);
extern gssize g_output_stream_splice_finish(GOutputStream * stream,
					    GAsyncResult * result,
					    GError * *error);
extern gssize g_output_stream_write(GOutputStream * stream,
				    const void *buffer, gsize count,
				    GCancellable * cancellable,
				    GError * *error);
extern gboolean g_output_stream_write_all(GOutputStream * stream,
					  const void *buffer, gsize count,
					  gsize * bytes_written,
					  GCancellable * cancellable,
					  GError * *error);
extern void g_output_stream_write_async(GOutputStream * stream,
					const void *buffer, gsize count,
					int io_priority,
					GCancellable * cancellable,
					GAsyncReadyCallback callback,
					gpointer user_data);
extern gssize g_output_stream_write_finish(GOutputStream * stream,
					   GAsyncResult * result,
					   GError * *error);
</SCREEN>
</SECT2>
<SECT2>
<TITLE>glib-2.0/gio/gpermission.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define G_TYPE_PERMISSION	(g_permission_get_type ())
#define G_PERMISSION_CLASS(class)	(G_TYPE_CHECK_CLASS_CAST ((class), G_TYPE_PERMISSION, GPermissionClass))
#define G_IS_PERMISSION_CLASS(class)	(G_TYPE_CHECK_CLASS_TYPE ((class), G_TYPE_PERMISSION))
#define G_PERMISSION(inst)	(G_TYPE_CHECK_INSTANCE_CAST ((inst), G_TYPE_PERMISSION, GPermission))
#define G_IS_PERMISSION(inst)	(G_TYPE_CHECK_INSTANCE_TYPE ((inst), G_TYPE_PERMISSION))
#define G_PERMISSION_GET_CLASS(inst)	(G_TYPE_INSTANCE_GET_CLASS ((inst), G_TYPE_PERMISSION, GPermissionClass))

typedef struct _GPermissionPrivate GPermissionPrivate;
typedef struct _GPermissionClass {
    GObjectClass parent_class;
     gboolean(*acquire) (GPermission * permission,
			 GCancellable * cancellable, GError * *error);
    void (*acquire_async) (GPermission * permission,
			   GCancellable * cancellable,
			   GAsyncReadyCallback callback,
			   gpointer user_data);
     gboolean(*acquire_finish) (GPermission * permission,
				GAsyncResult * result, GError * *error);
     gboolean(*release) (GPermission * permission,
			 GCancellable * cancellable, GError * *error);
    void (*release_async) (GPermission * permission,
			   GCancellable * cancellable,
			   GAsyncReadyCallback callback,
			   gpointer user_data);
     gboolean(*release_finish) (GPermission * permission,
				GAsyncResult * result, GError * *error);
    gpointer reserved[16];
} GPermissionClass;
struct _GPermission {
    GObject parent_instance;
    GPermissionPrivate *priv;
};
extern gboolean g_permission_acquire(GPermission * permission,
				     GCancellable * cancellable,
				     GError * *error);
extern void g_permission_acquire_async(GPermission * permission,
				       GCancellable * cancellable,
				       GAsyncReadyCallback callback,
				       gpointer user_data);
extern gboolean g_permission_acquire_finish(GPermission * permission,
					    GAsyncResult * result,
					    GError * *error);
extern gboolean g_permission_get_allowed(GPermission * permission);
extern gboolean g_permission_get_can_acquire(GPermission * permission);
extern gboolean g_permission_get_can_release(GPermission * permission);
extern GType g_permission_get_type(void);
extern void g_permission_impl_update(GPermission * permission,
				     gboolean allowed,
				     gboolean can_acquire,
				     gboolean can_release);
extern gboolean g_permission_release(GPermission * permission,
				     GCancellable * cancellable,
				     GError * *error);
extern void g_permission_release_async(GPermission * permission,
				       GCancellable * cancellable,
				       GAsyncReadyCallback callback,
				       gpointer user_data);
extern gboolean g_permission_release_finish(GPermission * permission,
					    GAsyncResult * result,
					    GError * *error);
</SCREEN>
</SECT2>
<SECT2>
<TITLE>glib-2.0/gio/gpollableinputstream.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define G_TYPE_POLLABLE_INPUT_STREAM	(g_pollable_input_stream_get_type ())
#define G_POLLABLE_INPUT_STREAM(obj)	(G_TYPE_CHECK_INSTANCE_CAST ((obj), G_TYPE_POLLABLE_INPUT_STREAM, GPollableInputStream))
#define G_IS_POLLABLE_INPUT_STREAM(obj)	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), G_TYPE_POLLABLE_INPUT_STREAM))
#define G_POLLABLE_INPUT_STREAM_GET_INTERFACE(obj)	(G_TYPE_INSTANCE_GET_INTERFACE ((obj), G_TYPE_POLLABLE_INPUT_STREAM, GPollableInputStreamInterface))

typedef struct _GPollableInputStreamInterface {
    GTypeInterface g_iface;
     gboolean(*can_poll) (GPollableInputStream * stream);
     gboolean(*is_readable) (GPollableInputStream * stream);
    GSource *(*create_source) (GPollableInputStream * stream,
			       GCancellable * cancellable);
     gssize(*read_nonblocking) (GPollableInputStream * stream,
				void *buffer, gsize size, GError * *error);
} GPollableInputStreamInterface;
extern gboolean g_pollable_input_stream_can_poll(GPollableInputStream *
						 stream);
extern GSource *g_pollable_input_stream_create_source(GPollableInputStream
						      * stream,
						      GCancellable *
						      cancellable);
extern GType g_pollable_input_stream_get_type(void);
extern gboolean g_pollable_input_stream_is_readable(GPollableInputStream *
						    stream);
extern gssize g_pollable_input_stream_read_nonblocking(GPollableInputStream
						       * stream,
						       void *buffer,
						       gsize size,
						       GCancellable *
						       cancellable,
						       GError * *error);
extern GSource *g_pollable_source_new(GObject * pollable_stream);
</SCREEN>
</SECT2>
<SECT2>
<TITLE>glib-2.0/gio/gpollableoutputstream.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define G_TYPE_POLLABLE_OUTPUT_STREAM	(g_pollable_output_stream_get_type ())
#define G_POLLABLE_OUTPUT_STREAM(obj)	(G_TYPE_CHECK_INSTANCE_CAST ((obj), G_TYPE_POLLABLE_OUTPUT_STREAM, GPollableOutputStream))
#define G_IS_POLLABLE_OUTPUT_STREAM(obj)	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), G_TYPE_POLLABLE_OUTPUT_STREAM))
#define G_POLLABLE_OUTPUT_STREAM_GET_INTERFACE(obj)	(G_TYPE_INSTANCE_GET_INTERFACE ((obj), G_TYPE_POLLABLE_OUTPUT_STREAM, GPollableOutputStreamInterface))

typedef struct _GPollableOutputStreamInterface {
    GTypeInterface g_iface;
     gboolean(*can_poll) (GPollableOutputStream * stream);
     gboolean(*is_writable) (GPollableOutputStream * stream);
    GSource *(*create_source) (GPollableOutputStream * stream,
			       GCancellable * cancellable);
     gssize(*write_nonblocking) (GPollableOutputStream * stream,
				 const void *buffer, gsize size,
				 GError * *error);
} GPollableOutputStreamInterface;
extern gboolean g_pollable_output_stream_can_poll(GPollableOutputStream *
						  stream);
extern GSource
    *g_pollable_output_stream_create_source(GPollableOutputStream * stream,
					    GCancellable * cancellable);
extern GType g_pollable_output_stream_get_type(void);
extern gboolean g_pollable_output_stream_is_writable(GPollableOutputStream
						     * stream);
extern gssize
g_pollable_output_stream_write_nonblocking(GPollableOutputStream * stream,
					   const void *buffer, gsize size,
					   GCancellable * cancellable,
					   GError * *error);
</SCREEN>
</SECT2>
<SECT2>
<TITLE>glib-2.0/gio/gproxy.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define G_TYPE_PROXY	(g_proxy_get_type ())
#define G_PROXY(o)	(G_TYPE_CHECK_INSTANCE_CAST ((o), G_TYPE_PROXY, GProxy))
#define G_IS_PROXY(o)	(G_TYPE_CHECK_INSTANCE_TYPE ((o), G_TYPE_PROXY))
#define G_PROXY_GET_IFACE(obj)	(G_TYPE_INSTANCE_GET_INTERFACE ((obj), G_TYPE_PROXY, GProxyInterface))
#define G_PROXY_EXTENSION_POINT_NAME	"gio-proxy"

typedef struct _GProxyInterface {
    GTypeInterface g_iface;
    GIOStream *(*connect) (GProxy * proxy, GIOStream * connection,
			   GProxyAddress * proxy_address,
			   GCancellable * cancellable, GError * *error);
    void (*connect_async) (GProxy * proxy, GIOStream * connection,
			   GProxyAddress * proxy_address,
			   GCancellable * cancellable,
			   GAsyncReadyCallback callback,
			   gpointer user_data);
    GIOStream *(*connect_finish) (GProxy * proxy, GAsyncResult * result,
				  GError * *error);
     gboolean(*supports_hostname) (GProxy * proxy);
} GProxyInterface;
extern GIOStream *g_proxy_connect(GProxy * proxy, GIOStream * connection,
				  GProxyAddress * proxy_address,
				  GCancellable * cancellable,
				  GError * *error);
extern void g_proxy_connect_async(GProxy * proxy, GIOStream * connection,
				  GProxyAddress * proxy_address,
				  GCancellable * cancellable,
				  GAsyncReadyCallback callback,
				  gpointer user_data);
extern GIOStream *g_proxy_connect_finish(GProxy * proxy,
					 GAsyncResult * result,
					 GError * *error);
extern GProxy *g_proxy_get_default_for_protocol(const gchar * protocol);
extern GType g_proxy_get_type(void);
extern gboolean g_proxy_supports_hostname(GProxy * proxy);
</SCREEN>
</SECT2>
<SECT2>
<TITLE>glib-2.0/gio/gproxyaddress.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define G_TYPE_PROXY_ADDRESS	(g_proxy_address_get_type ())
#define G_PROXY_ADDRESS_CLASS(k)	(G_TYPE_CHECK_CLASS_CAST((k), G_TYPE_PROXY_ADDRESS, GProxyAddressClass))
#define G_IS_PROXY_ADDRESS_CLASS(k)	(G_TYPE_CHECK_CLASS_TYPE ((k), G_TYPE_PROXY_ADDRESS))
#define G_PROXY_ADDRESS(o)	(G_TYPE_CHECK_INSTANCE_CAST ((o), G_TYPE_PROXY_ADDRESS, GProxyAddress))
#define G_IS_PROXY_ADDRESS(o)	(G_TYPE_CHECK_INSTANCE_TYPE ((o), G_TYPE_PROXY_ADDRESS))
#define G_PROXY_ADDRESS_GET_CLASS(o)	(G_TYPE_INSTANCE_GET_CLASS ((o), G_TYPE_PROXY_ADDRESS, GProxyAddressClass))

typedef struct _GProxyAddressClass {
    GInetSocketAddressClass parent_class;
} GProxyAddressClass;
typedef struct _GProxyAddressPrivate GProxyAddressPrivate;
struct _GProxyAddress {
    GInetSocketAddress parent_instance;
    GProxyAddressPrivate *priv;
};
extern const gchar *g_proxy_address_get_destination_hostname(GProxyAddress
							     * proxy);
extern guint16 g_proxy_address_get_destination_port(GProxyAddress * proxy);
extern const gchar *g_proxy_address_get_password(GProxyAddress * proxy);
extern const gchar *g_proxy_address_get_protocol(GProxyAddress * proxy);
extern GType g_proxy_address_get_type(void);
extern const gchar *g_proxy_address_get_username(GProxyAddress * proxy);
extern GSocketAddress *g_proxy_address_new(GInetAddress * inetaddr,
					   guint16 port,
					   const gchar * protocol,
					   const gchar * dest_hostname,
					   guint16 dest_port,
					   const gchar * username,
					   const gchar * password);
</SCREEN>
</SECT2>
<SECT2>
<TITLE>glib-2.0/gio/gproxyaddressenumerator.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define G_TYPE_PROXY_ADDRESS_ENUMERATOR	(g_proxy_address_enumerator_get_type ())
#define G_PROXY_ADDRESS_ENUMERATOR_CLASS(k)	(G_TYPE_CHECK_CLASS_CAST((k), G_TYPE_PROXY_ADDRESS_ENUMERATOR, GProxyAddressEnumeratorClass))
#define G_IS_PROXY_ADDRESS_ENUMERATOR_CLASS(k)	(G_TYPE_CHECK_CLASS_TYPE ((k), G_TYPE_PROXY_ADDRESS_ENUMERATOR))
#define G_PROXY_ADDRESS_ENUMERATOR(o)	(G_TYPE_CHECK_INSTANCE_CAST ((o), G_TYPE_PROXY_ADDRESS_ENUMERATOR, GProxyAddressEnumerator))
#define G_IS_PROXY_ADDRESS_ENUMERATOR(o)	(G_TYPE_CHECK_INSTANCE_TYPE ((o), G_TYPE_PROXY_ADDRESS_ENUMERATOR))
#define G_PROXY_ADDRESS_ENUMERATOR_GET_CLASS(o)	(G_TYPE_INSTANCE_GET_CLASS ((o), G_TYPE_PROXY_ADDRESS_ENUMERATOR, GProxyAddressEnumeratorClass))

typedef struct _GProxyAddressEnumeratorClass {
    GSocketAddressEnumeratorClass parent_class;
    void (*_g_reserved1) (void);
    void (*_g_reserved2) (void);
    void (*_g_reserved3) (void);
    void (*_g_reserved4) (void);
    void (*_g_reserved5) (void);
    void (*_g_reserved6) (void);
    void (*_g_reserved7) (void);
} GProxyAddressEnumeratorClass;
typedef struct _GProxyAddressEnumeratorPrivate
    GProxyAddressEnumeratorPrivate;
struct _GProxyAddressEnumerator {
    GSocketAddressEnumerator parent_instance;
    GProxyAddressEnumeratorPrivate *priv;
};
extern GType g_proxy_address_enumerator_get_type(void);
</SCREEN>
</SECT2>
<SECT2>
<TITLE>glib-2.0/gio/gproxyresolver.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define G_TYPE_PROXY_RESOLVER	(g_proxy_resolver_get_type ())
#define G_PROXY_RESOLVER(o)	(G_TYPE_CHECK_INSTANCE_CAST ((o), G_TYPE_PROXY_RESOLVER, GProxyResolver))
#define G_IS_PROXY_RESOLVER(o)	(G_TYPE_CHECK_INSTANCE_TYPE ((o), G_TYPE_PROXY_RESOLVER))
#define G_PROXY_RESOLVER_GET_IFACE(o)	(G_TYPE_INSTANCE_GET_INTERFACE ((o), G_TYPE_PROXY_RESOLVER, GProxyResolverInterface))
#define G_PROXY_RESOLVER_EXTENSION_POINT_NAME	"gio-proxy-resolver"

typedef struct _GProxyResolverInterface {
    GTypeInterface g_iface;
     gboolean(*is_supported) (GProxyResolver * resolver);
    gchar **(*lookup) (GProxyResolver * resolver, const gchar * uri,
		       GCancellable * cancellable, GError * *error);
    void (*lookup_async) (GProxyResolver * resolver, const gchar * uri,
			  GCancellable * cancellable,
			  GAsyncReadyCallback callback,
			  gpointer user_data);
    gchar **(*lookup_finish) (GProxyResolver * resolver,
			      GAsyncResult * result, GError * *error);
} GProxyResolverInterface;
extern GProxyResolver *g_proxy_resolver_get_default(void);
extern GType g_proxy_resolver_get_type(void);
extern gboolean g_proxy_resolver_is_supported(GProxyResolver * resolver);
extern gchar **g_proxy_resolver_lookup(GProxyResolver * resolver,
				       const gchar * uri,
				       GCancellable * cancellable,
				       GError * *error);
extern void g_proxy_resolver_lookup_async(GProxyResolver * resolver,
					  const gchar * uri,
					  GCancellable * cancellable,
					  GAsyncReadyCallback callback,
					  gpointer user_data);
extern gchar **g_proxy_resolver_lookup_finish(GProxyResolver * resolver,
					      GAsyncResult * result,
					      GError * *error);
</SCREEN>
</SECT2>
<SECT2>
<TITLE>glib-2.0/gio/gremoteactiongroup.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define G_TYPE_REMOTE_ACTION_GROUP	(g_remote_action_group_get_type ())
#define G_REMOTE_ACTION_GROUP(inst)	(G_TYPE_CHECK_INSTANCE_CAST ((inst), G_TYPE_REMOTE_ACTION_GROUP, GRemoteActionGroup))
#define G_IS_REMOTE_ACTION_GROUP(inst)	(G_TYPE_CHECK_INSTANCE_TYPE ((inst), G_TYPE_REMOTE_ACTION_GROUP))
#define G_REMOTE_ACTION_GROUP_GET_IFACE(inst)	(G_TYPE_INSTANCE_GET_INTERFACE ((inst), G_TYPE_REMOTE_ACTION_GROUP, GRemoteActionGroupInterface))

typedef struct _GRemoteActionGroupInterface {
    GTypeInterface g_iface;
    void (*activate_action_full) (GRemoteActionGroup * resolver,
				  const gchar * action_name,
				  GVariant * parameter,
				  GVariant * platform_data);
    void (*change_action_state_full) (GRemoteActionGroup * resolver,
				      const gchar * action_name,
				      GVariant * value,
				      GVariant * platform_data);
} GRemoteActionGroupInterface;
extern void g_remote_action_group_activate_action_full(GRemoteActionGroup *
						       remote,
						       const gchar *
						       action_name,
						       GVariant *
						       parameter,
						       GVariant *
						       platform_data);
extern void
g_remote_action_group_change_action_state_full(GRemoteActionGroup * remote,
					       const gchar * action_name,
					       GVariant * value,
					       GVariant * platform_data);
extern GType g_remote_action_group_get_type(void);
</SCREEN>
</SECT2>
<SECT2>
<TITLE>glib-2.0/gio/gresolver.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define G_RESOLVER_ERROR	(g_resolver_error_quark ())
#define G_TYPE_RESOLVER	(g_resolver_get_type ())
#define G_RESOLVER_CLASS(k)	(G_TYPE_CHECK_CLASS_CAST((k), G_TYPE_RESOLVER, GResolverClass))
#define G_IS_RESOLVER_CLASS(k)	(G_TYPE_CHECK_CLASS_TYPE ((k), G_TYPE_RESOLVER))
#define G_RESOLVER(o)	(G_TYPE_CHECK_INSTANCE_CAST ((o), G_TYPE_RESOLVER, GResolver))
#define G_IS_RESOLVER(o)	(G_TYPE_CHECK_INSTANCE_TYPE ((o), G_TYPE_RESOLVER))
#define G_RESOLVER_GET_CLASS(o)	(G_TYPE_INSTANCE_GET_CLASS ((o), G_TYPE_RESOLVER, GResolverClass))

typedef struct _GResolverPrivate GResolverPrivate;
typedef struct _GResolverClass {
    GObjectClass parent_class;
    void (*reload) (GResolver * resolver);
    GList *(*lookup_by_name) (GResolver * resolver, const gchar * hostname,
			      GCancellable * cancellable, GError * *error);
    void (*lookup_by_name_async) (GResolver * resolver,
				  const gchar * hostname,
				  GCancellable * cancellable,
				  GAsyncReadyCallback callback,
				  gpointer user_data);
    GList *(*lookup_by_name_finish) (GResolver * resolver,
				     GAsyncResult * result,
				     GError * *error);
    gchar *(*lookup_by_address) (GResolver * resolver,
				 GInetAddress * address,
				 GCancellable * cancellable,
				 GError * *error);
    void (*lookup_by_address_async) (GResolver * resolver,
				     GInetAddress * address,
				     GCancellable * cancellable,
				     GAsyncReadyCallback callback,
				     gpointer user_data);
    gchar *(*lookup_by_address_finish) (GResolver * resolver,
					GAsyncResult * result,
					GError * *error);
     GList(*lookup_service) (GResolver * resolver, const gchar * rrname,
			     GCancellable * cancellable, GError * *error);
    void (*lookup_service_async) (GResolver * resolver,
				  const gchar * rrname,
				  GCancellable * cancellable,
				  GAsyncReadyCallback callback,
				  gpointer user_data);
    GList *(*lookup_service_finish) (GResolver * resolver,
				     GAsyncResult * result,
				     GError * *error);
    void (*_g_reserved1) (void);
    void (*_g_reserved2) (void);
    void (*_g_reserved3) (void);
    void (*_g_reserved4) (void);
    void (*_g_reserved5) (void);
    void (*_g_reserved6) (void);
} GResolverClass;
struct _GResolver {
    GObject parent_instance;
    GResolverPrivate *priv;
};
extern GQuark g_resolver_error_quark(void);
extern void g_resolver_free_addresses(GList * addresses);
extern void g_resolver_free_targets(GList * targets);
extern GResolver *g_resolver_get_default(void);
extern GType g_resolver_get_type(void);
extern gchar *g_resolver_lookup_by_address(GResolver * resolver,
					   GInetAddress * address,
					   GCancellable * cancellable,
					   GError * *error);
extern void g_resolver_lookup_by_address_async(GResolver * resolver,
					       GInetAddress * address,
					       GCancellable * cancellable,
					       GAsyncReadyCallback
					       callback,
					       gpointer user_data);
extern gchar *g_resolver_lookup_by_address_finish(GResolver * resolver,
						  GAsyncResult * result,
						  GError * *error);
extern GList *g_resolver_lookup_by_name(GResolver * resolver,
					const gchar * hostname,
					GCancellable * cancellable,
					GError * *error);
extern void g_resolver_lookup_by_name_async(GResolver * resolver,
					    const gchar * hostname,
					    GCancellable * cancellable,
					    GAsyncReadyCallback callback,
					    gpointer user_data);
extern GList *g_resolver_lookup_by_name_finish(GResolver * resolver,
					       GAsyncResult * result,
					       GError * *error);
extern GList *g_resolver_lookup_service(GResolver * resolver,
					const gchar * service,
					const gchar * protocol,
					const gchar * domain,
					GCancellable * cancellable,
					GError * *error);
extern void g_resolver_lookup_service_async(GResolver * resolver,
					    const gchar * service,
					    const gchar * protocol,
					    const gchar * domain,
					    GCancellable * cancellable,
					    GAsyncReadyCallback callback,
					    gpointer user_data);
extern GList *g_resolver_lookup_service_finish(GResolver * resolver,
					       GAsyncResult * result,
					       GError * *error);
extern void g_resolver_set_default(GResolver * resolver);
</SCREEN>
</SECT2>
<SECT2>
<TITLE>glib-2.0/gio/gresource.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define G_RESOURCE_ERROR	(g_resource_error_quark ())
#define G_TYPE_RESOURCE	(g_resource_get_type ())

typedef struct _GStaticResource {
    const guint8 *data;
    gsize data_len;
    GResource *resource;
    GStaticResource *next;
    gpointer padding;
} GStaticResource;
extern void g_resource_enumerate_children(GResource * resource,
					  const gchar * path,
					  GResourceLookupFlags
					  lookup_flags, GError * *error);
extern GQuark g_resource_error_quark(void);
extern gboolean g_resource_get_info(GResource * resource,
				    const gchar * path,
				    GResourceLookupFlags lookup_flags,
				    gsize * size, guint32 * flags,
				    GError * *error);
extern GType g_resource_get_type(void);
extern GResource *g_resource_load(const gchar * filename, GError * *error);
extern GBytes *g_resource_lookup_data(GResource * resource,
				      const gchar * path,
				      GResourceLookupFlags lookup_flags,
				      GError * *error);
extern GResource *g_resource_new_from_data(GBytes * data, GError * *error);
extern GInputStream *g_resource_open_stream(GResource * resource,
					    const gchar * path,
					    GResourceLookupFlags
					    lookup_flags, GError * *error);
extern GResource *g_resource_ref(GResource * resource);
extern void g_resource_unref(GResource * resource);
extern void g_resources_enumerate_children(const gchar * path,
					   GResourceLookupFlags
					   lookup_flags, GError * *error);
extern gboolean g_resources_get_info(const gchar * path,
				     GResourceLookupFlags lookup_flags,
				     gsize * size, guint32 * flags,
				     GError * *error);
extern GBytes *g_resources_lookup_data(const gchar * path,
				       GResourceLookupFlags lookup_flags,
				       GError * *error);
extern GInputStream *g_resources_open_stream(const gchar * path,
					     GResourceLookupFlags
					     lookup_flags,
					     GError * *error);
extern void g_resources_register(GResource * resource);
extern void g_resources_unregister(GResource * resource);
extern void g_static_resource_fini(GStaticResource * static_resource);
extern GResource *g_static_resource_get_resource(GStaticResource *
						 static_resource);
extern void g_static_resource_init(GStaticResource * static_resource);
</SCREEN>
</SECT2>
<SECT2>
<TITLE>glib-2.0/gio/gseekable.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define G_TYPE_SEEKABLE	(g_seekable_get_type ())
#define G_SEEKABLE(obj)	(G_TYPE_CHECK_INSTANCE_CAST ((obj), G_TYPE_SEEKABLE, GSeekable))
#define G_IS_SEEKABLE(obj)	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), G_TYPE_SEEKABLE))
#define G_SEEKABLE_GET_IFACE(obj)	(G_TYPE_INSTANCE_GET_INTERFACE ((obj), G_TYPE_SEEKABLE, GSeekableIface))

typedef struct _GSeekableIface {
    GTypeInterface g_iface;
     goffset(*tell) (GSeekable * seekable);
     gboolean(*can_seek) (GSeekable * seekable);
     gboolean(*seek) (GSeekable * seekable, goffset offset, GSeekType type,
		      GCancellable * cancellable, GError * *error);
     gboolean(*can_truncate) (GSeekable * seekable);
     gboolean(*truncate_fn) (GSeekable * seekable, goffset offset,
			     GCancellable * cancellable, GError * *error);
} GSeekableIface;
extern gboolean g_seekable_can_seek(GSeekable * seekable);
extern gboolean g_seekable_can_truncate(GSeekable * seekable);
extern GType g_seekable_get_type(void);
extern gboolean g_seekable_seek(GSeekable * seekable, goffset offset,
				GSeekType type, GCancellable * cancellable,
				GError * *error);
extern goffset g_seekable_tell(GSeekable * seekable);
extern gboolean g_seekable_truncate(GSeekable * seekable, goffset offset,
				    GCancellable * cancellable,
				    GError * *error);
</SCREEN>
</SECT2>
<SECT2>
<TITLE>glib-2.0/gio/gsettings.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define G_TYPE_SETTINGS	(g_settings_get_type ())
#define G_SETTINGS_CLASS(class)	(G_TYPE_CHECK_CLASS_CAST ((class), G_TYPE_SETTINGS, GSettingsClass))
#define G_IS_SETTINGS_CLASS(class)	(G_TYPE_CHECK_CLASS_TYPE ((class), G_TYPE_SETTINGS))
#define G_SETTINGS(inst)	(G_TYPE_CHECK_INSTANCE_CAST ((inst), G_TYPE_SETTINGS, GSettings))
#define G_IS_SETTINGS(inst)	(G_TYPE_CHECK_INSTANCE_TYPE ((inst), G_TYPE_SETTINGS))
#define G_SETTINGS_GET_CLASS(inst)	(G_TYPE_INSTANCE_GET_CLASS ((inst), G_TYPE_SETTINGS, GSettingsClass))

typedef struct _GSettingsPrivate GSettingsPrivate;
typedef struct _GSettingsClass {
    GObjectClass parent_class;
    void (*writable_changed) (GSettings * settings, const gchar * key);
    void (*changed) (GSettings * settings, const gchar * key);
     gboolean(*writable_change_event) (GSettings * settings, GQuark key);
     gboolean(*change_event) (GSettings * settings, const GQuark * keys,
			      gint n_keys);
    gpointer padding[20];
} GSettingsClass;
struct _GSettings {
    GObject parent_instance;
    GSettingsPrivate *priv;
};
typedef GVariant *(*GSettingsBindSetMapping) (const GValue * value,
					      const GVariantType *
					      expected_type,
					      gpointer user_data);
typedef gboolean(*GSettingsBindGetMapping) (GValue * value,
					    GVariant * variant,
					    gpointer user_data);
typedef gboolean(*GSettingsGetMapping) (GVariant * value,
					gpointer * result,
					gpointer user_data);
typedef enum {
    G_SETTINGS_BIND_DEFAULT,
    G_SETTINGS_BIND_GET = (1 &lt;&lt; 0),
    G_SETTINGS_BIND_SET = (1 &lt;&lt; 1),
    G_SETTINGS_BIND_NO_SENSITIVITY = (1 &lt;&lt; 2),
    G_SETTINGS_BIND_GET_NO_CHANGES = (1 &lt;&lt; 3),
    G_SETTINGS_BIND_INVERT_BOOLEAN = (1 &lt;&lt; 4)
} GSettingsBindFlags;
extern void g_settings_apply(GSettings * settings);
extern void g_settings_bind(GSettings * settings, const gchar * key,
			    void *object, const gchar * property,
			    GSettingsBindFlags flags);
extern void g_settings_bind_with_mapping(GSettings * settings,
					 const gchar * key, void *object,
					 const gchar * property,
					 GSettingsBindFlags flags,
					 GSettingsBindGetMapping
					 get_mapping,
					 GSettingsBindSetMapping
					 set_mapping, void *user_data,
					 GDestroyNotify destroy);
extern void g_settings_bind_writable(GSettings * settings,
				     const gchar * key, void *object,
				     const gchar * property,
				     gboolean inverted);
extern GAction *g_settings_create_action(GSettings * settings,
					 const gchar * key);
extern void g_settings_delay(GSettings * settings);
extern void g_settings_get(GSettings * settings, const gchar * key,
			   const gchar * format, ...);
extern gboolean g_settings_get_boolean(GSettings * settings,
				       const gchar * key);
extern GSettings *g_settings_get_child(GSettings * settings,
				       const gchar * name);
extern gdouble g_settings_get_double(GSettings * settings,
				     const gchar * key);
extern gint g_settings_get_enum(GSettings * settings, const gchar * key);
extern guint g_settings_get_flags(GSettings * settings, const gchar * key);
extern gboolean g_settings_get_has_unapplied(GSettings * settings);
extern gint g_settings_get_int(GSettings * settings, const gchar * key);
extern void *g_settings_get_mapped(GSettings * settings, const gchar * key,
				   GSettingsGetMapping mapping,
				   void *user_data);
extern GVariant *g_settings_get_range(GSettings * settings,
				      const gchar * key);
extern gchar *g_settings_get_string(GSettings * settings,
				    const gchar * key);
extern gchar **g_settings_get_strv(GSettings * settings,
				   const gchar * key);
extern GType g_settings_get_type(void);
extern guint g_settings_get_uint(GSettings * settings, const gchar * key);
extern GVariant *g_settings_get_value(GSettings * settings,
				      const gchar * key);
extern gboolean g_settings_is_writable(GSettings * settings,
				       const gchar * name);
extern gchar **g_settings_list_children(GSettings * settings);
extern gchar **g_settings_list_keys(GSettings * settings);
extern const gchar *const *g_settings_list_relocatable_schemas(void);
extern const gchar *const *g_settings_list_schemas(void);
extern GSettings *g_settings_new(const gchar * schema_id);
extern GSettings *g_settings_new_full(GSettingsSchema * schema,
				      GSettingsBackend * backend,
				      const gchar * path);
extern GSettings *g_settings_new_with_backend(const gchar * schema_id,
					      GSettingsBackend * backend);
extern GSettings *g_settings_new_with_backend_and_path(const gchar *
						       schema_id,
						       GSettingsBackend *
						       backend,
						       const gchar * path);
extern GSettings *g_settings_new_with_path(const gchar * schema_id,
					   const gchar * path);
extern gboolean g_settings_range_check(GSettings * settings,
				       const gchar * key,
				       GVariant * value);
extern void g_settings_reset(GSettings * settings, const gchar * key);
extern void g_settings_revert(GSettings * settings);
extern gboolean g_settings_set(GSettings * settings, const gchar * key,
			       const gchar * format, ...);
extern gboolean g_settings_set_boolean(GSettings * settings,
				       const gchar * key, gboolean value);
extern gboolean g_settings_set_double(GSettings * settings,
				      const gchar * key, gdouble value);
extern gboolean g_settings_set_enum(GSettings * settings,
				    const gchar * key, gint value);
extern gboolean g_settings_set_flags(GSettings * settings,
				     const gchar * key, guint value);
extern gboolean g_settings_set_int(GSettings * settings, const gchar * key,
				   gint value);
extern gboolean g_settings_set_string(GSettings * settings,
				      const gchar * key,
				      const gchar * value);
extern gboolean g_settings_set_strv(GSettings * settings,
				    const gchar * key,
				    const gchar * const *value);
extern gboolean g_settings_set_uint(GSettings * settings,
				    const gchar * key, guint value);
extern gboolean g_settings_set_value(GSettings * settings,
				     const gchar * key, GVariant * value);
extern void g_settings_sync(void);
extern void g_settings_unbind(void *object, const gchar * property);
</SCREEN>
</SECT2>
<SECT2>
<TITLE>glib-2.0/gio/gsettingsbackend.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define G_TYPE_SETTINGS_BACKEND	(g_settings_backend_get_type ())
#define G_SETTINGS_BACKEND_CLASS(class)	(G_TYPE_CHECK_CLASS_CAST ((class), G_TYPE_SETTINGS_BACKEND, GSettingsBackendClass))
#define G_IS_SETTINGS_BACKEND_CLASS(class)	(G_TYPE_CHECK_CLASS_TYPE ((class), G_TYPE_SETTINGS_BACKEND))
#define G_SETTINGS_BACKEND(inst)	(G_TYPE_CHECK_INSTANCE_CAST ((inst), G_TYPE_SETTINGS_BACKEND, GSettingsBackend))
#define G_IS_SETTINGS_BACKEND(inst)	(G_TYPE_CHECK_INSTANCE_TYPE ((inst), G_TYPE_SETTINGS_BACKEND))
#define G_SETTINGS_BACKEND_GET_CLASS(inst)	(G_TYPE_INSTANCE_GET_CLASS ((inst), G_TYPE_SETTINGS_BACKEND, GSettingsBackendClass))
#define G_SETTINGS_BACKEND_EXTENSION_POINT_NAME	"gsettings-backend"

typedef struct _GSettingsBackendPrivate GSettingsBackendPrivate;
typedef struct _GSettingsBackendClass {
    GObjectClass parent_class;
    GVariant *(*read) (GSettingsBackend * backend, const gchar * key,
		       const GVariantType * expected_type,
		       gboolean default_value);
     gboolean(*get_writable) (GSettingsBackend * backend,
			      const gchar * key);
     gboolean(*write) (GSettingsBackend * backend, const gchar * key,
		       GVariant * value, gpointer origin_tag);
     gboolean(*write_tree) (GSettingsBackend * backend, GTree * tree,
			    gpointer origin_tag);
    void (*reset) (GSettingsBackend * backend, const gchar * key,
		   gpointer origin_tag);
    void (*subscribe) (GSettingsBackend * backend, const gchar * name);
    void (*unsubscribe) (GSettingsBackend * backend, const gchar * name);
    void (*sync) (GSettingsBackend * backend);
    GPermission *(*get_permission) (GSettingsBackend * backend,
				    const gchar * path);
    gpointer padding[24];
} GSettingsBackendClass;
struct _GSettingsBackend {
    GObject parent_instance;
    GSettingsBackendPrivate *priv;
};
extern GSettingsBackend *g_keyfile_settings_backend_new(const gchar *
							filename,
							const gchar *
							root_path,
							const gchar *
							root_group);
extern GSettingsBackend *g_memory_settings_backend_new(void);
extern GSettingsBackend *g_null_settings_backend_new(void);
extern void g_settings_backend_changed(GSettingsBackend * backend,
				       const gchar * key,
				       gpointer origin_tag);
extern void g_settings_backend_changed_tree(GSettingsBackend * backend,
					    GTree * tree,
					    gpointer origin_tag);
extern void g_settings_backend_flatten_tree(GTree * tree, gchar * *path,
					    const gchar * **keys,
					    GVariant * **values);
extern GSettingsBackend *g_settings_backend_get_default(void);
extern GType g_settings_backend_get_type(void);
extern void g_settings_backend_keys_changed(GSettingsBackend * backend,
					    const gchar * path,
					    const gchar * const *items,
					    gpointer origin_tag);
extern void g_settings_backend_path_changed(GSettingsBackend * backend,
					    const gchar * path,
					    gpointer origin_tag);
extern void g_settings_backend_path_writable_changed(GSettingsBackend *
						     backend,
						     const gchar * path);
extern void g_settings_backend_writable_changed(GSettingsBackend * backend,
						const gchar * key);
</SCREEN>
</SECT2>
<SECT2>
<TITLE>glib-2.0/gio/gsettingsschema.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define G_TYPE_SETTINGS_SCHEMA	(g_settings_schema_get_type ())
#define G_TYPE_SETTINGS_SCHEMA_SOURCE	(g_settings_schema_source_get_type ())

typedef struct _GSettingsSchemaSource GSettingsSchemaSource;
typedef struct _GSettingsSchema GSettingsSchema;
extern const gchar *g_settings_schema_get_id(GSettingsSchema * schema);
extern const gchar *g_settings_schema_get_path(GSettingsSchema * schema);
extern GType g_settings_schema_get_type(void);
extern GSettingsSchema *g_settings_schema_ref(GSettingsSchema * schema);
extern GSettingsSchemaSource *g_settings_schema_source_get_default(void);
extern GType g_settings_schema_source_get_type(void);
extern GSettingsSchema
    *g_settings_schema_source_lookup(GSettingsSchemaSource * source,
				     const gchar * schema_id,
				     gboolean recursive);
extern GSettingsSchemaSource
    *g_settings_schema_source_new_from_directory(const gchar * directory,
						 GSettingsSchemaSource *
						 parent, gboolean trusted,
						 GError * *error);
extern GSettingsSchemaSource
    *g_settings_schema_source_ref(GSettingsSchemaSource * source);
extern void g_settings_schema_source_unref(GSettingsSchemaSource * source);
extern void g_settings_schema_unref(GSettingsSchema * schema);
</SCREEN>
</SECT2>
<SECT2>
<TITLE>glib-2.0/gio/gsimpleaction.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define G_TYPE_SIMPLE_ACTION	(g_simple_action_get_type ())
#define G_SIMPLE_ACTION(inst)	(G_TYPE_CHECK_INSTANCE_CAST ((inst), G_TYPE_SIMPLE_ACTION, GSimpleAction))
#define G_IS_SIMPLE_ACTION(inst)	(G_TYPE_CHECK_INSTANCE_TYPE ((inst), G_TYPE_SIMPLE_ACTION))

extern GType g_simple_action_get_type(void);
extern GSimpleAction *g_simple_action_new(const gchar * name,
					  GVariantType * parameter_type);
extern GSimpleAction *g_simple_action_new_stateful(const gchar * name,
						   GVariantType *
						   parameter_type,
						   GVariant * state);
extern void g_simple_action_set_enabled(GSimpleAction * simple,
					gboolean enabled);
extern void g_simple_action_set_state(GSimpleAction * simple,
				      GVariant * value);
</SCREEN>
</SECT2>
<SECT2>
<TITLE>glib-2.0/gio/gsimpleactiongroup.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define G_TYPE_SIMPLE_ACTION_GROUP	(g_simple_action_group_get_type ())
#define G_SIMPLE_ACTION_GROUP_CLASS(class)	(G_TYPE_CHECK_CLASS_CAST ((class), G_TYPE_SIMPLE_ACTION_GROUP, GSimpleActionGroupClass))
#define G_IS_SIMPLE_ACTION_GROUP_CLASS(class)	(G_TYPE_CHECK_CLASS_TYPE ((class), G_TYPE_SIMPLE_ACTION_GROUP))
#define G_SIMPLE_ACTION_GROUP(inst)	(G_TYPE_CHECK_INSTANCE_CAST ((inst), G_TYPE_SIMPLE_ACTION_GROUP, GSimpleActionGroup))
#define G_IS_SIMPLE_ACTION_GROUP(inst)	(G_TYPE_CHECK_INSTANCE_TYPE ((inst), G_TYPE_SIMPLE_ACTION_GROUP))
#define G_SIMPLE_ACTION_GROUP_GET_CLASS(inst)	(G_TYPE_INSTANCE_GET_CLASS ((inst), G_TYPE_SIMPLE_ACTION_GROUP, GSimpleActionGroupClass))

typedef struct _GSimpleActionGroupPrivate GSimpleActionGroupPrivate;
typedef struct _GSimpleActionGroupClass {
    GObjectClass parent_class;
    gpointer padding[12];
} GSimpleActionGroupClass;
struct _GSimpleActionGroup {
    GObject parent_instance;
    GSimpleActionGroupPrivate *priv;
};
extern void g_simple_action_group_add_entries(GSimpleActionGroup * simple,
					      const GActionEntry * entries,
					      gint n_entries,
					      gpointer user_data);
extern GType g_simple_action_group_get_type(void);
extern void g_simple_action_group_insert(GSimpleActionGroup * simple,
					 GAction * action);
extern GAction *g_simple_action_group_lookup(GSimpleActionGroup * simple,
					     const gchar * action_name);
extern GSimpleActionGroup *g_simple_action_group_new(void);
extern void g_simple_action_group_remove(GSimpleActionGroup * simple,
					 const gchar * action_name);
</SCREEN>
</SECT2>
<SECT2>
<TITLE>glib-2.0/gio/gsimpleasyncresult.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define G_TYPE_SIMPLE_ASYNC_RESULT	(g_simple_async_result_get_type ())
#define G_SIMPLE_ASYNC_RESULT_CLASS(k)	(G_TYPE_CHECK_CLASS_CAST((k), G_TYPE_SIMPLE_ASYNC_RESULT, GSimpleAsyncResultClass))
#define G_IS_SIMPLE_ASYNC_RESULT_CLASS(k)	(G_TYPE_CHECK_CLASS_TYPE ((k), G_TYPE_SIMPLE_ASYNC_RESULT))
#define G_SIMPLE_ASYNC_RESULT(o)	(G_TYPE_CHECK_INSTANCE_CAST ((o), G_TYPE_SIMPLE_ASYNC_RESULT, GSimpleAsyncResult))
#define G_IS_SIMPLE_ASYNC_RESULT(o)	(G_TYPE_CHECK_INSTANCE_TYPE ((o), G_TYPE_SIMPLE_ASYNC_RESULT))
#define G_SIMPLE_ASYNC_RESULT_GET_CLASS(o)	(G_TYPE_INSTANCE_GET_CLASS ((o), G_TYPE_SIMPLE_ASYNC_RESULT, GSimpleAsyncResultClass))

typedef struct _GSimpleAsyncResultClass GSimpleAsyncResultClass;
extern void g_simple_async_report_error_in_idle(GObject * object,
						GAsyncReadyCallback
						callback,
						gpointer user_data,
						GQuark domain, gint code,
						const char *format, ...);
extern void g_simple_async_report_gerror_in_idle(GObject * object,
						 GAsyncReadyCallback
						 callback,
						 gpointer user_data,
						 const struct _GError
						 *error);
extern void g_simple_async_report_take_gerror_in_idle(GObject * object,
						      GAsyncReadyCallback
						      callback,
						      gpointer user_data,
						      GError * error);
extern void g_simple_async_result_complete(GSimpleAsyncResult * simple);
extern void g_simple_async_result_complete_in_idle(GSimpleAsyncResult *
						   simple);
extern gboolean
g_simple_async_result_get_op_res_gboolean(GSimpleAsyncResult * simple);
extern gpointer
g_simple_async_result_get_op_res_gpointer(GSimpleAsyncResult * simple);
extern gssize g_simple_async_result_get_op_res_gssize(GSimpleAsyncResult *
						      simple);
extern gpointer g_simple_async_result_get_source_tag(GSimpleAsyncResult *
						     simple);
extern GType g_simple_async_result_get_type(void);
extern gboolean g_simple_async_result_is_valid(GAsyncResult * result,
					       GObject * source,
					       gpointer source_tag);
extern GSimpleAsyncResult *g_simple_async_result_new(GObject *
						     source_object,
						     GAsyncReadyCallback
						     callback,
						     gpointer user_data,
						     gpointer source_tag);
extern GSimpleAsyncResult *g_simple_async_result_new_error(GObject *
							   source_object,
							   GAsyncReadyCallback
							   callback,
							   gpointer
							   user_data,
							   GQuark domain,
							   gint code,
							   const char
							   *format, ...);
extern GSimpleAsyncResult *g_simple_async_result_new_from_error(GObject *
								source_object,
								GAsyncReadyCallback
								callback,
								gpointer
								user_data,
								const
								struct
								_GError
								*error);
extern GSimpleAsyncResult *g_simple_async_result_new_take_error(GObject *
								source_object,
								GAsyncReadyCallback
								callback,
								gpointer
								user_data,
								GError *
								error);
extern gboolean g_simple_async_result_propagate_error(GSimpleAsyncResult *
						      simple,
						      GError * *dest);
extern void g_simple_async_result_run_in_thread(GSimpleAsyncResult *
						simple,
						GSimpleAsyncThreadFunc
						func, int io_priority,
						GCancellable *
						cancellable);
extern void g_simple_async_result_set_check_cancellable(GSimpleAsyncResult
							* simple,
							GCancellable *
							check_cancellable);
extern void g_simple_async_result_set_error(GSimpleAsyncResult * simple,
					    GQuark domain, gint code,
					    const char *format, ...);
extern void g_simple_async_result_set_error_va(GSimpleAsyncResult * simple,
					       GQuark domain, gint code,
					       const char *format,
					       va_list args);
extern void g_simple_async_result_set_from_error(GSimpleAsyncResult *
						 simple,
						 const struct _GError
						 *error);
extern void
g_simple_async_result_set_handle_cancellation(GSimpleAsyncResult * simple,
					      gboolean
					      handle_cancellation);
extern void g_simple_async_result_set_op_res_gboolean(GSimpleAsyncResult *
						      simple,
						      gboolean op_res);
extern void g_simple_async_result_set_op_res_gpointer(GSimpleAsyncResult *
						      simple,
						      gpointer op_res,
						      GDestroyNotify
						      destroy_op_res);
extern void g_simple_async_result_set_op_res_gssize(GSimpleAsyncResult *
						    simple, gssize op_res);
extern void g_simple_async_result_take_error(GSimpleAsyncResult * simple,
					     GError * error);
</SCREEN>
</SECT2>
<SECT2>
<TITLE>glib-2.0/gio/gsimplepermission.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define G_TYPE_SIMPLE_PERMISSION	(g_simple_permission_get_type ())
#define G_SIMPLE_PERMISSION(inst)	(G_TYPE_CHECK_INSTANCE_CAST ((inst), G_TYPE_SIMPLE_PERMISSION, GSimplePermission))
#define G_IS_SIMPLE_PERMISSION(inst)	(G_TYPE_CHECK_INSTANCE_TYPE ((inst), G_TYPE_SIMPLE_PERMISSION))

extern GType g_simple_permission_get_type(void);
extern GPermission *g_simple_permission_new(gboolean allowed);
</SCREEN>
</SECT2>
<SECT2>
<TITLE>glib-2.0/gio/gsocket.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define G_TYPE_SOCKET	(g_socket_get_type ())
#define G_SOCKET_CLASS(class)	(G_TYPE_CHECK_CLASS_CAST ((class), G_TYPE_SOCKET, GSocketClass))
#define G_IS_SOCKET_CLASS(class)	(G_TYPE_CHECK_CLASS_TYPE ((class), G_TYPE_SOCKET))
#define G_SOCKET(inst)	(G_TYPE_CHECK_INSTANCE_CAST ((inst), G_TYPE_SOCKET, GSocket))
#define G_IS_SOCKET(inst)	(G_TYPE_CHECK_INSTANCE_TYPE ((inst), G_TYPE_SOCKET))
#define G_SOCKET_GET_CLASS(inst)	(G_TYPE_INSTANCE_GET_CLASS ((inst), G_TYPE_SOCKET, GSocketClass))

typedef struct _GSocketPrivate GSocketPrivate;
typedef struct _GSocketClass {
    GObjectClass parent_class;
    void (*_g_reserved1) (void);
    void (*_g_reserved2) (void);
    void (*_g_reserved3) (void);
    void (*_g_reserved4) (void);
    void (*_g_reserved5) (void);
    void (*_g_reserved6) (void);
    void (*_g_reserved7) (void);
    void (*_g_reserved8) (void);
    void (*_g_reserved9) (void);
    void (*_g_reserved10) (void);
} GSocketClass;
struct _GSocket {
    GObject parent_instance;
    GSocketPrivate *priv;
};
extern GSocket *g_socket_accept(GSocket * socket,
				GCancellable * cancellable,
				GError * *error);
extern gboolean g_socket_bind(GSocket * socket, GSocketAddress * address,
			      gboolean allow_reuse, GError * *error);
extern gboolean g_socket_check_connect_result(GSocket * socket,
					      GError * *error);
extern gboolean g_socket_close(GSocket * socket, GError * *error);
extern GIOCondition g_socket_condition_check(GSocket * socket,
					     GIOCondition condition);
extern gboolean g_socket_condition_timed_wait(GSocket * socket,
					      GIOCondition condition,
					      gint64 timeout,
					      GCancellable * cancellable,
					      GError * *error);
extern gboolean g_socket_condition_wait(GSocket * socket,
					GIOCondition condition,
					GCancellable * cancellable,
					GError * *error);
extern gboolean g_socket_connect(GSocket * socket,
				 GSocketAddress * address,
				 GCancellable * cancellable,
				 GError * *error);
extern GSource *g_socket_create_source(GSocket * socket,
				       GIOCondition condition,
				       GCancellable * cancellable);
extern gssize g_socket_get_available_bytes(GSocket * socket);
extern gboolean g_socket_get_blocking(GSocket * socket);
extern gboolean g_socket_get_broadcast(GSocket * socket);
extern GCredentials *g_socket_get_credentials(GSocket * socket,
					      GError * *error);
extern GSocketFamily g_socket_get_family(GSocket * socket);
extern int g_socket_get_fd(GSocket * socket);
extern gboolean g_socket_get_keepalive(GSocket * socket);
extern gint g_socket_get_listen_backlog(GSocket * socket);
extern GSocketAddress *g_socket_get_local_address(GSocket * socket,
						  GError * *error);
extern gboolean g_socket_get_multicast_loopback(GSocket * socket);
extern guint g_socket_get_multicast_ttl(GSocket * socket);
extern GSocketProtocol g_socket_get_protocol(GSocket * socket);
extern GSocketAddress *g_socket_get_remote_address(GSocket * socket,
						   GError * *error);
extern GSocketType g_socket_get_socket_type(GSocket * socket);
extern guint g_socket_get_timeout(GSocket * socket);
extern guint g_socket_get_ttl(GSocket * socket);
extern GType g_socket_get_type(void);
extern gboolean g_socket_is_closed(GSocket * socket);
extern gboolean g_socket_is_connected(GSocket * socket);
extern gboolean g_socket_join_multicast_group(GSocket * socket,
					      GInetAddress * group,
					      gboolean source_specific,
					      const char *iface,
					      GError * *error);
extern gboolean g_socket_leave_multicast_group(GSocket * socket,
					       GInetAddress * group,
					       gboolean source_specific,
					       const char *iface,
					       GError * *error);
extern gboolean g_socket_listen(GSocket * socket, GError * *error);
extern GSocket *g_socket_new(GSocketFamily family, GSocketType type,
			     GSocketProtocol protocol, GError * *error);
extern GSocket *g_socket_new_from_fd(gint fd, GError * *error);
extern gssize g_socket_receive(GSocket * socket, gchar * buffer,
			       gsize size, GCancellable * cancellable,
			       GError * *error);
extern gssize g_socket_receive_from(GSocket * socket,
				    GSocketAddress * *address,
				    gchar * buffer, gsize size,
				    GCancellable * cancellable,
				    GError * *error);
extern gssize g_socket_receive_message(GSocket * socket,
				       GSocketAddress * *address,
				       GInputVector * vectors,
				       gint num_vectors,
				       GSocketControlMessage * **messages,
				       gint * num_messages, gint * flags,
				       GCancellable * cancellable,
				       GError * *error);
extern gssize g_socket_receive_with_blocking(GSocket * socket,
					     gchar * buffer, gsize size,
					     gboolean blocking,
					     GCancellable * cancellable,
					     GError * *error);
extern gssize g_socket_send(GSocket * socket, const char *buffer,
			    gsize size, GCancellable * cancellable,
			    GError * *error);
extern gssize g_socket_send_message(GSocket * socket,
				    GSocketAddress * address,
				    GOutputVector * vectors,
				    gint num_vectors,
				    GSocketControlMessage * *messages,
				    gint num_messages, gint flags,
				    GCancellable * cancellable,
				    GError * *error);
extern gssize g_socket_send_to(GSocket * socket, GSocketAddress * address,
			       const char *buffer, gsize size,
			       GCancellable * cancellable,
			       GError * *error);
extern gssize g_socket_send_with_blocking(GSocket * socket,
					  const char *buffer, gsize size,
					  gboolean blocking,
					  GCancellable * cancellable,
					  GError * *error);
extern void g_socket_set_blocking(GSocket * socket, gboolean blocking);
extern void g_socket_set_broadcast(GSocket * socket, gboolean broadcast);
extern void g_socket_set_keepalive(GSocket * socket, gboolean keepalive);
extern void g_socket_set_listen_backlog(GSocket * socket, gint backlog);
extern void g_socket_set_multicast_loopback(GSocket * socket,
					    gboolean loopback);
extern void g_socket_set_multicast_ttl(GSocket * socket, guint ttl);
extern void g_socket_set_timeout(GSocket * socket, guint timeout);
extern void g_socket_set_ttl(GSocket * socket, guint ttl);
extern gboolean g_socket_shutdown(GSocket * socket, gboolean shutdown_read,
				  gboolean shutdown_write,
				  GError * *error);
extern gboolean g_socket_speaks_ipv4(GSocket * socket);
</SCREEN>
</SECT2>
<SECT2>
<TITLE>glib-2.0/gio/gsocketaddress.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define G_TYPE_SOCKET_ADDRESS	(g_socket_address_get_type ())
#define G_SOCKET_ADDRESS_CLASS(k)	(G_TYPE_CHECK_CLASS_CAST((k), G_TYPE_SOCKET_ADDRESS, GSocketAddressClass))
#define G_IS_SOCKET_ADDRESS_CLASS(k)	(G_TYPE_CHECK_CLASS_TYPE ((k), G_TYPE_SOCKET_ADDRESS))
#define G_SOCKET_ADDRESS(o)	(G_TYPE_CHECK_INSTANCE_CAST ((o), G_TYPE_SOCKET_ADDRESS, GSocketAddress))
#define G_IS_SOCKET_ADDRESS(o)	(G_TYPE_CHECK_INSTANCE_TYPE ((o), G_TYPE_SOCKET_ADDRESS))
#define G_SOCKET_ADDRESS_GET_CLASS(o)	(G_TYPE_INSTANCE_GET_CLASS ((o), G_TYPE_SOCKET_ADDRESS, GSocketAddressClass))

typedef struct _GSocketAddressClass {
    GObjectClass parent_class;
     GSocketFamily(*get_family) (GSocketAddress * address);
     gssize(*get_native_size) (GSocketAddress * address);
     gboolean(*to_native) (GSocketAddress * address, gpointer dest,
			   gsize destlen, GError * *error);
} GSocketAddressClass;
struct _GSocketAddress {
    GObject parent_instance;
};
extern GSocketFamily g_socket_address_get_family(GSocketAddress * address);
extern gssize g_socket_address_get_native_size(GSocketAddress * address);
extern GType g_socket_address_get_type(void);
extern GSocketAddress *g_socket_address_new_from_native(gpointer native,
							gsize len);
extern gboolean g_socket_address_to_native(GSocketAddress * address,
					   gpointer dest, gsize destlen,
					   GError * *error);
</SCREEN>
</SECT2>
<SECT2>
<TITLE>glib-2.0/gio/gsocketaddressenumerator.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define G_TYPE_SOCKET_ADDRESS_ENUMERATOR	(g_socket_address_enumerator_get_type ())
#define G_SOCKET_ADDRESS_ENUMERATOR_CLASS(k)	(G_TYPE_CHECK_CLASS_CAST((k), G_TYPE_SOCKET_ADDRESS_ENUMERATOR, GSocketAddressEnumeratorClass))
#define G_IS_SOCKET_ADDRESS_ENUMERATOR_CLASS(k)	(G_TYPE_CHECK_CLASS_TYPE ((k), G_TYPE_SOCKET_ADDRESS_ENUMERATOR))
#define G_SOCKET_ADDRESS_ENUMERATOR(o)	(G_TYPE_CHECK_INSTANCE_CAST ((o), G_TYPE_SOCKET_ADDRESS_ENUMERATOR, GSocketAddressEnumerator))
#define G_IS_SOCKET_ADDRESS_ENUMERATOR(o)	(G_TYPE_CHECK_INSTANCE_TYPE ((o), G_TYPE_SOCKET_ADDRESS_ENUMERATOR))
#define G_SOCKET_ADDRESS_ENUMERATOR_GET_CLASS(o)	(G_TYPE_INSTANCE_GET_CLASS ((o), G_TYPE_SOCKET_ADDRESS_ENUMERATOR, GSocketAddressEnumeratorClass))

typedef struct _GSocketAddressEnumeratorClass {
    GObjectClass parent_class;
    GSocketAddress *(*next) (GSocketAddressEnumerator * enumerator,
			     GCancellable * cancellable, GError * *error);
    void (*next_async) (GSocketAddressEnumerator * enumerator,
			GCancellable * cancellable,
			GAsyncReadyCallback callback, gpointer user_data);
    GSocketAddress *(*next_finish) (GSocketAddressEnumerator * enumerator,
				    GAsyncResult * result,
				    GError * *error);
} GSocketAddressEnumeratorClass;
struct _GSocketAddressEnumerator {
    GObject parent_instance;
};
extern GType g_socket_address_enumerator_get_type(void);
extern GSocketAddress
    *g_socket_address_enumerator_next(GSocketAddressEnumerator *
				      enumerator,
				      GCancellable * cancellable,
				      GError * *error);
extern void g_socket_address_enumerator_next_async(GSocketAddressEnumerator
						   * enumerator,
						   GCancellable *
						   cancellable,
						   GAsyncReadyCallback
						   callback,
						   gpointer user_data);
extern GSocketAddress
    *g_socket_address_enumerator_next_finish(GSocketAddressEnumerator *
					     enumerator,
					     GAsyncResult * result,
					     GError * *error);
</SCREEN>
</SECT2>
<SECT2>
<TITLE>glib-2.0/gio/gsocketclient.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define G_TYPE_SOCKET_CLIENT	(g_socket_client_get_type ())
#define G_SOCKET_CLIENT_CLASS(class)	(G_TYPE_CHECK_CLASS_CAST ((class), G_TYPE_SOCKET_CLIENT, GSocketClientClass))
#define G_IS_SOCKET_CLIENT_CLASS(class)	(G_TYPE_CHECK_CLASS_TYPE ((class), G_TYPE_SOCKET_CLIENT))
#define G_SOCKET_CLIENT(inst)	(G_TYPE_CHECK_INSTANCE_CAST ((inst), G_TYPE_SOCKET_CLIENT, GSocketClient))
#define G_IS_SOCKET_CLIENT(inst)	(G_TYPE_CHECK_INSTANCE_TYPE ((inst), G_TYPE_SOCKET_CLIENT))
#define G_SOCKET_CLIENT_GET_CLASS(inst)	(G_TYPE_INSTANCE_GET_CLASS ((inst), G_TYPE_SOCKET_CLIENT, GSocketClientClass))

typedef struct _GSocketClientPrivate GSocketClientPrivate;
typedef struct _GSocketClientClass {
    GObjectClass parent_class;
    void (*event) (GSocketClient * client, GSocketClientEvent event,
		   GSocketConnectable * connectable,
		   GIOStream * connection);
    void (*_g_reserved1) (void);
    void (*_g_reserved2) (void);
    void (*_g_reserved3) (void);
    void (*_g_reserved4) (void);
} GSocketClientClass;
struct _GSocketClient {
    GObject parent_instance;
    GSocketClientPrivate *priv;
};
extern void g_socket_client_add_application_proxy(GSocketClient * client,
						  const gchar * protocol);
extern GSocketConnection *g_socket_client_connect(GSocketClient * client,
						  GSocketConnectable *
						  connectable,
						  GCancellable *
						  cancellable,
						  GError * *error);
extern void g_socket_client_connect_async(GSocketClient * client,
					  GSocketConnectable * connectable,
					  GCancellable * cancellable,
					  GAsyncReadyCallback callback,
					  gpointer user_data);
extern GSocketConnection *g_socket_client_connect_finish(GSocketClient *
							 client,
							 GAsyncResult *
							 result,
							 GError * *error);
extern GSocketConnection *g_socket_client_connect_to_host(GSocketClient *
							  client,
							  const gchar *
							  host_and_port,
							  guint16
							  default_port,
							  GCancellable *
							  cancellable,
							  GError * *error);
extern void g_socket_client_connect_to_host_async(GSocketClient * client,
						  const gchar *
						  host_and_port,
						  guint16 default_port,
						  GCancellable *
						  cancellable,
						  GAsyncReadyCallback
						  callback,
						  gpointer user_data);
extern GSocketConnection
    *g_socket_client_connect_to_host_finish(GSocketClient * client,
					    GAsyncResult * result,
					    GError * *error);
extern GSocketConnection *g_socket_client_connect_to_service(GSocketClient
							     * client,
							     const gchar *
							     domain,
							     const gchar *
							     service,
							     GCancellable *
							     cancellable,
							     GError *
							     *error);
extern void g_socket_client_connect_to_service_async(GSocketClient *
						     client,
						     const gchar * domain,
						     const gchar * service,
						     GCancellable *
						     cancellable,
						     GAsyncReadyCallback
						     callback,
						     gpointer user_data);
extern GSocketConnection
    *g_socket_client_connect_to_service_finish(GSocketClient * client,
					       GAsyncResult * result,
					       GError * *error);
extern GSocketConnection *g_socket_client_connect_to_uri(GSocketClient *
							 client,
							 const gchar * uri,
							 guint16
							 default_port,
							 GCancellable *
							 cancellable,
							 GError * *error);
extern void g_socket_client_connect_to_uri_async(GSocketClient * client,
						 const gchar * uri,
						 guint16 default_port,
						 GCancellable *
						 cancellable,
						 GAsyncReadyCallback
						 callback,
						 gpointer user_data);
extern GSocketConnection
    *g_socket_client_connect_to_uri_finish(GSocketClient * client,
					   GAsyncResult * result,
					   GError * *error);
extern gboolean g_socket_client_get_enable_proxy(GSocketClient * client);
extern GSocketFamily g_socket_client_get_family(GSocketClient * client);
extern GSocketAddress *g_socket_client_get_local_address(GSocketClient *
							 client);
extern GSocketProtocol g_socket_client_get_protocol(GSocketClient *
						    client);
extern GSocketType g_socket_client_get_socket_type(GSocketClient * client);
extern guint g_socket_client_get_timeout(GSocketClient * client);
extern gboolean g_socket_client_get_tls(GSocketClient * client);
extern GTlsCertificateFlags
g_socket_client_get_tls_validation_flags(GSocketClient * client);
extern GType g_socket_client_get_type(void);
extern GSocketClient *g_socket_client_new(void);
extern void g_socket_client_set_enable_proxy(GSocketClient * client,
					     gboolean enable);
extern void g_socket_client_set_family(GSocketClient * client,
				       GSocketFamily family);
extern void g_socket_client_set_local_address(GSocketClient * client,
					      GSocketAddress * address);
extern void g_socket_client_set_protocol(GSocketClient * client,
					 GSocketProtocol protocol);
extern void g_socket_client_set_socket_type(GSocketClient * client,
					    GSocketType type);
extern void g_socket_client_set_timeout(GSocketClient * client,
					guint timeout);
extern void g_socket_client_set_tls(GSocketClient * client, gboolean tls);
extern void g_socket_client_set_tls_validation_flags(GSocketClient *
						     client,
						     GTlsCertificateFlags
						     flags);
</SCREEN>
</SECT2>
<SECT2>
<TITLE>glib-2.0/gio/gsocketconnectable.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define G_TYPE_SOCKET_CONNECTABLE	(g_socket_connectable_get_type ())
#define G_SOCKET_CONNECTABLE(obj)	(G_TYPE_CHECK_INSTANCE_CAST ((obj), G_TYPE_SOCKET_CONNECTABLE, GSocketConnectable))
#define G_IS_SOCKET_CONNECTABLE(obj)	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), G_TYPE_SOCKET_CONNECTABLE))
#define G_SOCKET_CONNECTABLE_GET_IFACE(obj)	(G_TYPE_INSTANCE_GET_INTERFACE ((obj), G_TYPE_SOCKET_CONNECTABLE, GSocketConnectableIface))

typedef struct _GSocketConnectableIface {
    GTypeInterface g_iface;
    GSocketAddressEnumerator *(*enumerate) (GSocketConnectable *
					    connectable);
    GSocketAddressEnumerator *(*proxy_enumerate) (GSocketConnectable *
						  connectable);
} GSocketConnectableIface;
extern GSocketAddressEnumerator
    *g_socket_connectable_enumerate(GSocketConnectable * connectable);
extern GType g_socket_connectable_get_type(void);
extern GSocketAddressEnumerator
    *g_socket_connectable_proxy_enumerate(GSocketConnectable *
					  connectable);
</SCREEN>
</SECT2>
<SECT2>
<TITLE>glib-2.0/gio/gsocketconnection.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define G_TYPE_SOCKET_CONNECTION	(g_socket_connection_get_type ())
#define G_SOCKET_CONNECTION_CLASS(class)	(G_TYPE_CHECK_CLASS_CAST ((class), G_TYPE_SOCKET_CONNECTION, GSocketConnectionClass))
#define G_IS_SOCKET_CONNECTION_CLASS(class)	(G_TYPE_CHECK_CLASS_TYPE ((class), G_TYPE_SOCKET_CONNECTION))
#define G_SOCKET_CONNECTION(inst)	(G_TYPE_CHECK_INSTANCE_CAST ((inst), G_TYPE_SOCKET_CONNECTION, GSocketConnection))
#define G_IS_SOCKET_CONNECTION(inst)	(G_TYPE_CHECK_INSTANCE_TYPE ((inst), G_TYPE_SOCKET_CONNECTION))
#define G_SOCKET_CONNECTION_GET_CLASS(inst)	(G_TYPE_INSTANCE_GET_CLASS ((inst), G_TYPE_SOCKET_CONNECTION, GSocketConnectionClass))

typedef struct _GSocketConnectionPrivate GSocketConnectionPrivate;
typedef struct _GSocketConnectionClass {
    GIOStreamClass parent_class;
    void (*_g_reserved1) (void);
    void (*_g_reserved2) (void);
    void (*_g_reserved3) (void);
    void (*_g_reserved4) (void);
    void (*_g_reserved5) (void);
    void (*_g_reserved6) (void);
} GSocketConnectionClass;
struct _GSocketConnection {
    GIOStream parent_instance;
    GSocketConnectionPrivate *priv;
};
extern gboolean g_socket_connection_connect(GSocketConnection * connection,
					    GSocketAddress * address,
					    GCancellable * cancellable,
					    GError * *error);
extern void g_socket_connection_connect_async(GSocketConnection *
					      connection,
					      GSocketAddress * address,
					      GCancellable * cancellable,
					      GAsyncReadyCallback callback,
					      gpointer user_data);
extern gboolean g_socket_connection_connect_finish(GSocketConnection *
						   connection,
						   GAsyncResult * result,
						   GError * *error);
extern GSocketConnection
    *g_socket_connection_factory_create_connection(GSocket * socket);
extern GType g_socket_connection_factory_lookup_type(GSocketFamily family,
						     GSocketType type,
						     gint protocol_id);
extern void g_socket_connection_factory_register_type(GType g_type,
						      GSocketFamily family,
						      GSocketType type,
						      gint protocol);
extern GSocketAddress
    *g_socket_connection_get_local_address(GSocketConnection * connection,
					   GError * *error);
extern GSocketAddress
    *g_socket_connection_get_remote_address(GSocketConnection * connection,
					    GError * *error);
extern GSocket *g_socket_connection_get_socket(GSocketConnection *
					       connection);
extern GType g_socket_connection_get_type(void);
extern gboolean g_socket_connection_is_connected(GSocketConnection *
						 connection);
</SCREEN>
</SECT2>
<SECT2>
<TITLE>glib-2.0/gio/gsocketcontrolmessage.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define G_TYPE_SOCKET_CONTROL_MESSAGE	(g_socket_control_message_get_type ())
#define G_SOCKET_CONTROL_MESSAGE_CLASS(class)	(G_TYPE_CHECK_CLASS_CAST ((class), G_TYPE_SOCKET_CONTROL_MESSAGE, GSocketControlMessageClass))
#define G_IS_SOCKET_CONTROL_MESSAGE_CLASS(class)	(G_TYPE_CHECK_CLASS_TYPE ((class), G_TYPE_SOCKET_CONTROL_MESSAGE))
#define G_SOCKET_CONTROL_MESSAGE(inst)	(G_TYPE_CHECK_INSTANCE_CAST ((inst), G_TYPE_SOCKET_CONTROL_MESSAGE, GSocketControlMessage))
#define G_IS_SOCKET_CONTROL_MESSAGE(inst)	(G_TYPE_CHECK_INSTANCE_TYPE ((inst), G_TYPE_SOCKET_CONTROL_MESSAGE))
#define G_SOCKET_CONTROL_MESSAGE_GET_CLASS(inst)	(G_TYPE_INSTANCE_GET_CLASS ((inst), G_TYPE_SOCKET_CONTROL_MESSAGE, GSocketControlMessageClass))

typedef struct _GSocketControlMessagePrivate GSocketControlMessagePrivate;
typedef struct _GSocketControlMessageClass {
    GObjectClass parent_class;
     gsize(*get_size) (GSocketControlMessage * message);
    int (*get_level) (GSocketControlMessage * message);
    int (*get_type) (GSocketControlMessage * message);
    void (*serialize) (GSocketControlMessage * message, gpointer data);
    GSocketControlMessage *(*deserialize) (int level, int type, gsize size,
					   gpointer data);
    void (*_g_reserved1) (void);
    void (*_g_reserved2) (void);
    void (*_g_reserved3) (void);
    void (*_g_reserved4) (void);
    void (*_g_reserved5) (void);
} GSocketControlMessageClass;
struct _GSocketControlMessage {
    GObject parent_instance;
    GSocketControlMessagePrivate *priv;
};
extern GSocketControlMessage *g_socket_control_message_deserialize(int
								   level,
								   int
								   type,
								   gsize
								   size,
								   gpointer
								   data);
extern int g_socket_control_message_get_level(GSocketControlMessage *
					      message);
extern int g_socket_control_message_get_msg_type(GSocketControlMessage *
						 message);
extern gsize g_socket_control_message_get_size(GSocketControlMessage *
					       message);
extern GType g_socket_control_message_get_type(void);
extern void g_socket_control_message_serialize(GSocketControlMessage *
					       message, gpointer data);
</SCREEN>
</SECT2>
<SECT2>
<TITLE>glib-2.0/gio/gsocketlistener.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define G_TYPE_SOCKET_LISTENER	(g_socket_listener_get_type ())
#define G_SOCKET_LISTENER_CLASS(class)	(G_TYPE_CHECK_CLASS_CAST ((class), G_TYPE_SOCKET_LISTENER, GSocketListenerClass))
#define G_IS_SOCKET_LISTENER_CLASS(class)	(G_TYPE_CHECK_CLASS_TYPE ((class), G_TYPE_SOCKET_LISTENER))
#define G_SOCKET_LISTENER(inst)	(G_TYPE_CHECK_INSTANCE_CAST ((inst), G_TYPE_SOCKET_LISTENER, GSocketListener))
#define G_IS_SOCKET_LISTENER(inst)	(G_TYPE_CHECK_INSTANCE_TYPE ((inst), G_TYPE_SOCKET_LISTENER))
#define G_SOCKET_LISTENER_GET_CLASS(inst)	(G_TYPE_INSTANCE_GET_CLASS ((inst), G_TYPE_SOCKET_LISTENER, GSocketListenerClass))

typedef struct _GSocketListenerPrivate GSocketListenerPrivate;
typedef struct _GSocketListenerClass {
    GObjectClass parent_class;
    void (*changed) (GSocketListener * listener);
    void (*_g_reserved1) (void);
    void (*_g_reserved2) (void);
    void (*_g_reserved3) (void);
    void (*_g_reserved4) (void);
    void (*_g_reserved5) (void);
    void (*_g_reserved6) (void);
} GSocketListenerClass;
struct _GSocketListener {
    GObject parent_instance;
    GSocketListenerPrivate *priv;
};
extern GSocketConnection *g_socket_listener_accept(GSocketListener *
						   listener,
						   GObject *
						   *source_object,
						   GCancellable *
						   cancellable,
						   GError * *error);
extern void g_socket_listener_accept_async(GSocketListener * listener,
					   GCancellable * cancellable,
					   GAsyncReadyCallback callback,
					   gpointer user_data);
extern GSocketConnection *g_socket_listener_accept_finish(GSocketListener *
							  listener,
							  GAsyncResult *
							  result,
							  GObject *
							  *source_object,
							  GError * *error);
extern GSocket *g_socket_listener_accept_socket(GSocketListener * listener,
						GObject * *source_object,
						GCancellable * cancellable,
						GError * *error);
extern void g_socket_listener_accept_socket_async(GSocketListener *
						  listener,
						  GCancellable *
						  cancellable,
						  GAsyncReadyCallback
						  callback,
						  gpointer user_data);
extern GSocket *g_socket_listener_accept_socket_finish(GSocketListener *
						       listener,
						       GAsyncResult *
						       result,
						       GObject *
						       *source_object,
						       GError * *error);
extern gboolean g_socket_listener_add_address(GSocketListener * listener,
					      GSocketAddress * address,
					      GSocketType type,
					      GSocketProtocol protocol,
					      GObject * source_object,
					      GSocketAddress *
					      *effective_address,
					      GError * *error);
extern guint16 g_socket_listener_add_any_inet_port(GSocketListener *
						   listener,
						   GObject * source_object,
						   GError * *error);
extern gboolean g_socket_listener_add_inet_port(GSocketListener * listener,
						guint16 port,
						GObject * source_object,
						GError * *error);
extern gboolean g_socket_listener_add_socket(GSocketListener * listener,
					     GSocket * socket,
					     GObject * source_object,
					     GError * *error);
extern void g_socket_listener_close(GSocketListener * listener);
extern GType g_socket_listener_get_type(void);
extern GSocketListener *g_socket_listener_new(void);
extern void g_socket_listener_set_backlog(GSocketListener * listener,
					  int listen_backlog);
</SCREEN>
</SECT2>
<SECT2>
<TITLE>glib-2.0/gio/gsocketservice.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define G_TYPE_SOCKET_SERVICE	(g_socket_service_get_type ())
#define G_SOCKET_SERVICE_CLASS(class)	(G_TYPE_CHECK_CLASS_CAST ((class), G_TYPE_SOCKET_SERVICE, GSocketServiceClass))
#define G_IS_SOCKET_SERVICE_CLASS(class)	(G_TYPE_CHECK_CLASS_TYPE ((class), G_TYPE_SOCKET_SERVICE))
#define G_SOCKET_SERVICE(inst)	(G_TYPE_CHECK_INSTANCE_CAST ((inst), G_TYPE_SOCKET_SERVICE, GSocketService))
#define G_IS_SOCKET_SERVICE(inst)	(G_TYPE_CHECK_INSTANCE_TYPE ((inst), G_TYPE_SOCKET_SERVICE))
#define G_SOCKET_SERVICE_GET_CLASS(inst)	(G_TYPE_INSTANCE_GET_CLASS ((inst), G_TYPE_SOCKET_SERVICE, GSocketServiceClass))

typedef struct _GSocketServicePrivate GSocketServicePrivate;
typedef struct _GSocketServiceClass {
    GSocketListenerClass parent_class;
     gboolean(*incoming) (GSocketService * service,
			  GSocketConnection * connection,
			  GObject * source_object);
    void (*_g_reserved1) (void);
    void (*_g_reserved2) (void);
    void (*_g_reserved3) (void);
    void (*_g_reserved4) (void);
    void (*_g_reserved5) (void);
    void (*_g_reserved6) (void);
} GSocketServiceClass;
struct _GSocketService {
    GSocketListener parent_instance;
    GSocketServicePrivate *priv;
};
extern GType g_socket_service_get_type(void);
extern gboolean g_socket_service_is_active(GSocketService * service);
extern GSocketService *g_socket_service_new(void);
extern void g_socket_service_start(GSocketService * service);
extern void g_socket_service_stop(GSocketService * service);
</SCREEN>
</SECT2>
<SECT2>
<TITLE>glib-2.0/gio/gsrvtarget.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define G_TYPE_SRV_TARGET	(g_srv_target_get_type ())

extern GSrvTarget *g_srv_target_copy(GSrvTarget * target);
extern void g_srv_target_free(GSrvTarget * target);
extern const char *g_srv_target_get_hostname(GSrvTarget * target);
extern guint16 g_srv_target_get_port(GSrvTarget * target);
extern guint16 g_srv_target_get_priority(GSrvTarget * target);
extern GType g_srv_target_get_type(void);
extern guint16 g_srv_target_get_weight(GSrvTarget * target);
extern GList *g_srv_target_list_sort(GList * targets);
extern GSrvTarget *g_srv_target_new(const gchar * hostname, guint16 port,
				    guint16 priority, guint16 weight);
</SCREEN>
</SECT2>
<SECT2>
<TITLE>glib-2.0/gio/gtcpconnection.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define G_TYPE_TCP_CONNECTION	(g_tcp_connection_get_type ())
#define G_TCP_CONNECTION_CLASS(class)	(G_TYPE_CHECK_CLASS_CAST ((class), G_TYPE_TCP_CONNECTION, GTcpConnectionClass))
#define G_IS_TCP_CONNECTION_CLASS(class)	(G_TYPE_CHECK_CLASS_TYPE ((class), G_TYPE_TCP_CONNECTION))
#define G_TCP_CONNECTION(inst)	(G_TYPE_CHECK_INSTANCE_CAST ((inst), G_TYPE_TCP_CONNECTION, GTcpConnection))
#define G_IS_TCP_CONNECTION(inst)	(G_TYPE_CHECK_INSTANCE_TYPE ((inst), G_TYPE_TCP_CONNECTION))
#define G_TCP_CONNECTION_GET_CLASS(inst)	(G_TYPE_INSTANCE_GET_CLASS ((inst), G_TYPE_TCP_CONNECTION, GTcpConnectionClass))

typedef struct _GTcpConnectionPrivate GTcpConnectionPrivate;
typedef struct _GTcpConnectionClass {
    GSocketConnectionClass parent_class;
} GTcpConnectionClass;
struct _GTcpConnection {
    GSocketConnection parent_instance;
    GTcpConnectionPrivate *priv;
};
extern gboolean g_tcp_connection_get_graceful_disconnect(GTcpConnection *
							 connection);
extern GType g_tcp_connection_get_type(void);
extern void g_tcp_connection_set_graceful_disconnect(GTcpConnection *
						     connection,
						     gboolean
						     graceful_disconnect);
</SCREEN>
</SECT2>
<SECT2>
<TITLE>glib-2.0/gio/gtcpwrapperconnection.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define G_TYPE_TCP_WRAPPER_CONNECTION	(g_tcp_wrapper_connection_get_type ())
#define G_TCP_WRAPPER_CONNECTION_CLASS(class)	(G_TYPE_CHECK_CLASS_CAST ((class), G_TYPE_TCP_WRAPPER_CONNECTION, GTcpWrapperConnectionClass))
#define G_IS_TCP_WRAPPER_CONNECTION_CLASS(class)	(G_TYPE_CHECK_CLASS_TYPE ((class), G_TYPE_TCP_WRAPPER_CONNECTION))
#define G_TCP_WRAPPER_CONNECTION(inst)	(G_TYPE_CHECK_INSTANCE_CAST ((inst), G_TYPE_TCP_WRAPPER_CONNECTION, GTcpWrapperConnection))
#define G_IS_TCP_WRAPPER_CONNECTION(inst)	(G_TYPE_CHECK_INSTANCE_TYPE ((inst), G_TYPE_TCP_WRAPPER_CONNECTION))
#define G_TCP_WRAPPER_CONNECTION_GET_CLASS(inst)	(G_TYPE_INSTANCE_GET_CLASS ((inst), G_TYPE_TCP_WRAPPER_CONNECTION, GTcpWrapperConnectionClass))

typedef struct _GTcpWrapperConnectionPrivate GTcpWrapperConnectionPrivate;
typedef struct _GTcpWrapperConnectionClass {
    GTcpConnectionClass parent_class;
} GTcpWrapperConnectionClass;
struct _GTcpWrapperConnection {
    GTcpConnection parent_instance;
    GTcpWrapperConnectionPrivate *priv;
};
extern GIOStream
    *g_tcp_wrapper_connection_get_base_io_stream(GTcpWrapperConnection *
						 conn);
extern GType g_tcp_wrapper_connection_get_type(void);
extern GSocketConnection *g_tcp_wrapper_connection_new(GIOStream *
						       base_io_stream,
						       GSocket * socket);
</SCREEN>
</SECT2>
<SECT2>
<TITLE>glib-2.0/gio/gthemedicon.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define G_TYPE_THEMED_ICON	(g_themed_icon_get_type ())
#define G_THEMED_ICON_CLASS(k)	(G_TYPE_CHECK_CLASS_CAST((k), G_TYPE_THEMED_ICON, GThemedIconClass))
#define G_IS_THEMED_ICON_CLASS(k)	(G_TYPE_CHECK_CLASS_TYPE ((k), G_TYPE_THEMED_ICON))
#define G_THEMED_ICON(o)	(G_TYPE_CHECK_INSTANCE_CAST ((o), G_TYPE_THEMED_ICON, GThemedIcon))
#define G_IS_THEMED_ICON(o)	(G_TYPE_CHECK_INSTANCE_TYPE ((o), G_TYPE_THEMED_ICON))
#define G_THEMED_ICON_GET_CLASS(o)	(G_TYPE_INSTANCE_GET_CLASS ((o), G_TYPE_THEMED_ICON, GThemedIconClass))

typedef struct _GThemedIconClass GThemedIconClass;
extern void g_themed_icon_append_name(GThemedIcon * icon,
				      const char *iconname);
extern const char *const *g_themed_icon_get_names(GThemedIcon * icon);
extern GType g_themed_icon_get_type(void);
extern GIcon *g_themed_icon_new(const char *iconname);
extern GIcon *g_themed_icon_new_from_names(char **iconnames, int len);
extern GIcon *g_themed_icon_new_with_default_fallbacks(const char
						       *iconname);
extern void g_themed_icon_prepend_name(GThemedIcon * icon,
				       const char *iconname);
</SCREEN>
</SECT2>
<SECT2>
<TITLE>glib-2.0/gio/gthreadedsocketservice.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define G_TYPE_THREADED_SOCKET_SERVICE	(g_threaded_socket_service_get_type ())
#define G_THREADED_SOCKET_SERVICE_CLASS(class)	(G_TYPE_CHECK_CLASS_CAST ((class), G_TYPE_THREADED_SOCKET_SERVICE, GThreadedSocketServiceClass))
#define G_IS_THREADED_SOCKET_SERVICE_CLASS(class)	(G_TYPE_CHECK_CLASS_TYPE ((class), G_TYPE_THREADED_SOCKET_SERVICE))
#define G_THREADED_SOCKET_SERVICE(inst)	(G_TYPE_CHECK_INSTANCE_CAST ((inst), G_TYPE_THREADED_SOCKET_SERVICE, GThreadedSocketService))
#define G_IS_THREADED_SOCKET_SERVICE(inst)	(G_TYPE_CHECK_INSTANCE_TYPE ((inst), G_TYPE_THREADED_SOCKET_SERVICE))
#define G_THREADED_SOCKET_SERVICE_GET_CLASS(inst)	(G_TYPE_INSTANCE_GET_CLASS ((inst), G_TYPE_THREADED_SOCKET_SERVICE, GThreadedSocketServiceClass))

typedef struct _GThreadedSocketServicePrivate
    GThreadedSocketServicePrivate;
typedef struct _GThreadedSocketServiceClass {
    GSocketServiceClass parent_class;
     gboolean(*run) (GThreadedSocketService * service,
		     GSocketConnection * connection,
		     GObject * source_object);
    void (*_g_reserved1) (void);
    void (*_g_reserved2) (void);
    void (*_g_reserved3) (void);
    void (*_g_reserved4) (void);
    void (*_g_reserved5) (void);
} GThreadedSocketServiceClass;
struct _GThreadedSocketService {
    GSocketService parent_instance;
    GThreadedSocketServicePrivate *priv;
};
extern GType g_threaded_socket_service_get_type(void);
extern GSocketService *g_threaded_socket_service_new(int max_threads);
</SCREEN>
</SECT2>
<SECT2>
<TITLE>glib-2.0/gio/gtlsbackend.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define G_TYPE_TLS_BACKEND	(g_tls_backend_get_type ())
#define G_TLS_BACKEND(obj)	(G_TYPE_CHECK_INSTANCE_CAST ((obj), G_TYPE_TLS_BACKEND, GTlsBackend))
#define G_IS_TLS_BACKEND(obj)	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), G_TYPE_TLS_BACKEND))
#define G_TLS_BACKEND_GET_INTERFACE(obj)	(G_TYPE_INSTANCE_GET_INTERFACE ((obj), G_TYPE_TLS_BACKEND, GTlsBackendInterface))
#define G_TLS_BACKEND_EXTENSION_POINT_NAME	"gio-tls-backend"

typedef struct _GTlsBackend GTlsBackend;
typedef struct _GTlsBackendInterface {
    GTypeInterface g_iface;
     gboolean(*supports_tls) (GTlsBackend * backend);
     GType(*get_certificate_type) (void);
     GType(*get_client_connection_type) (void);
     GType(*get_server_connection_type) (void);
     GType(*get_file_database_type) (void);
    GTlsDatabase *(*get_default_database) (GTlsBackend * backend);
} GTlsBackendInterface;
extern GType g_tls_backend_get_certificate_type(GTlsBackend * backend);
extern GType g_tls_backend_get_client_connection_type(GTlsBackend *
						      backend);
extern GTlsBackend *g_tls_backend_get_default(void);
extern GTlsDatabase *g_tls_backend_get_default_database(GTlsBackend *
							backend);
extern GType g_tls_backend_get_file_database_type(GTlsBackend * backend);
extern GType g_tls_backend_get_server_connection_type(GTlsBackend *
						      backend);
extern GType g_tls_backend_get_type(void);
extern gboolean g_tls_backend_supports_tls(GTlsBackend * backend);
</SCREEN>
</SECT2>
<SECT2>
<TITLE>glib-2.0/gio/gtlscertificate.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define G_TYPE_TLS_CERTIFICATE	(g_tls_certificate_get_type ())
#define G_TLS_CERTIFICATE_CLASS(class)	(G_TYPE_CHECK_CLASS_CAST ((class), G_TYPE_TLS_CERTIFICATE, GTlsCertificateClass))
#define G_IS_TLS_CERTIFICATE_CLASS(class)	(G_TYPE_CHECK_CLASS_TYPE ((class), G_TYPE_TLS_CERTIFICATE))
#define G_TLS_CERTIFICATE(inst)	(G_TYPE_CHECK_INSTANCE_CAST ((inst), G_TYPE_TLS_CERTIFICATE, GTlsCertificate))
#define G_IS_TLS_CERTIFICATE(inst)	(G_TYPE_CHECK_INSTANCE_TYPE ((inst), G_TYPE_TLS_CERTIFICATE))
#define G_TLS_CERTIFICATE_GET_CLASS(inst)	(G_TYPE_INSTANCE_GET_CLASS ((inst), G_TYPE_TLS_CERTIFICATE, GTlsCertificateClass))

typedef struct _GTlsCertificateClass {
    GObjectClass parent_class;
     GTlsCertificateFlags(*verify) (GTlsCertificate * cert,
				    GSocketConnectable * identity,
				    GTlsCertificate * trusted_ca);
    gpointer padding[8];
} GTlsCertificateClass;
typedef struct _GTlsCertificatePrivate GTlsCertificatePrivate;
extern GTlsCertificate *g_tls_certificate_get_issuer(GTlsCertificate *
						     cert);
extern GType g_tls_certificate_get_type(void);
extern GList *g_tls_certificate_list_new_from_file(const gchar * file,
						   GError * *error);
extern GTlsCertificate *g_tls_certificate_new_from_file(const gchar * file,
							GError * *error);
extern GTlsCertificate *g_tls_certificate_new_from_files(const gchar *
							 cert_file,
							 const gchar *
							 key_file,
							 GError * *error);
extern GTlsCertificate *g_tls_certificate_new_from_pem(const gchar * data,
						       gssize length,
						       GError * *error);
extern GTlsCertificateFlags g_tls_certificate_verify(GTlsCertificate *
						     cert,
						     GSocketConnectable *
						     identity,
						     GTlsCertificate *
						     trusted_ca);
</SCREEN>
</SECT2>
<SECT2>
<TITLE>glib-2.0/gio/gtlsclientconnection.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define G_TYPE_TLS_CLIENT_CONNECTION	(g_tls_client_connection_get_type ())
#define G_TLS_CLIENT_CONNECTION(inst)	(G_TYPE_CHECK_INSTANCE_CAST ((inst), G_TYPE_TLS_CLIENT_CONNECTION, GTlsClientConnection))
#define G_IS_TLS_CLIENT_CONNECTION(inst)	(G_TYPE_CHECK_INSTANCE_TYPE ((inst), G_TYPE_TLS_CLIENT_CONNECTION))
#define G_TLS_CLIENT_CONNECTION_GET_INTERFACE(inst)	(G_TYPE_INSTANCE_GET_INTERFACE ((inst), G_TYPE_TLS_CLIENT_CONNECTION, GTlsClientConnectionInterface))

typedef struct _GTlsClientConnectionInterface {
    GTypeInterface g_iface;
} GTlsClientConnectionInterface;
extern GList *g_tls_client_connection_get_accepted_cas(GTlsClientConnection
						       * conn);
extern GSocketConnectable
    *g_tls_client_connection_get_server_identity(GTlsClientConnection *
						 conn);
extern GType g_tls_client_connection_get_type(void);
extern gboolean g_tls_client_connection_get_use_ssl3(GTlsClientConnection *
						     conn);
extern GTlsCertificateFlags
g_tls_client_connection_get_validation_flags(GTlsClientConnection * conn);
extern GIOStream *g_tls_client_connection_new(GIOStream * base_io_stream,
					      GSocketConnectable *
					      server_identity,
					      GError * *error);
extern void
g_tls_client_connection_set_server_identity(GTlsClientConnection * conn,
					    GSocketConnectable * identity);
extern void g_tls_client_connection_set_use_ssl3(GTlsClientConnection *
						 conn, gboolean use_ssl3);
extern void
g_tls_client_connection_set_validation_flags(GTlsClientConnection * conn,
					     GTlsCertificateFlags flags);
</SCREEN>
</SECT2>
<SECT2>
<TITLE>glib-2.0/gio/gtlsconnection.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define G_TYPE_TLS_CONNECTION	(g_tls_connection_get_type ())
#define G_TLS_ERROR	(g_tls_error_quark ())
#define G_TLS_CONNECTION_CLASS(class)	(G_TYPE_CHECK_CLASS_CAST ((class), G_TYPE_TLS_CONNECTION, GTlsConnectionClass))
#define G_IS_TLS_CONNECTION_CLASS(class)	(G_TYPE_CHECK_CLASS_TYPE ((class), G_TYPE_TLS_CONNECTION))
#define G_TLS_CONNECTION(inst)	(G_TYPE_CHECK_INSTANCE_CAST ((inst), G_TYPE_TLS_CONNECTION, GTlsConnection))
#define G_IS_TLS_CONNECTION(inst)	(G_TYPE_CHECK_INSTANCE_TYPE ((inst), G_TYPE_TLS_CONNECTION))
#define G_TLS_CONNECTION_GET_CLASS(inst)	(G_TYPE_INSTANCE_GET_CLASS ((inst), G_TYPE_TLS_CONNECTION, GTlsConnectionClass))

typedef struct _GTlsConnectionClass {
    GIOStreamClass parent_class;
     gboolean(*accept_certificate) (GTlsConnection * connection,
				    GTlsCertificate * peer_cert,
				    GTlsCertificateFlags errors);
     gboolean(*handshake) (GTlsConnection * conn,
			   GCancellable * cancellable, GError * *error);
    void (*handshake_async) (GTlsConnection * conn, int io_priority,
			     GCancellable * cancellable,
			     GAsyncReadyCallback callback,
			     gpointer user_data);
     gboolean(*handshake_finish) (GTlsConnection * conn,
				  GAsyncResult * result, GError * *error);
    gpointer padding[8];
} GTlsConnectionClass;
typedef struct _GTlsConnectionPrivate GTlsConnectionPrivate;
struct _GTlsConnection {
    GIOStream parent_instance;
    GTlsConnectionPrivate *priv;
};
extern gboolean g_tls_connection_emit_accept_certificate(GTlsConnection *
							 conn,
							 GTlsCertificate *
							 peer_cert,
							 GTlsCertificateFlags
							 errors);
extern GTlsCertificate *g_tls_connection_get_certificate(GTlsConnection *
							 conn);
extern GTlsDatabase *g_tls_connection_get_database(GTlsConnection * conn);
extern GTlsInteraction *g_tls_connection_get_interaction(GTlsConnection *
							 conn);
extern GTlsCertificate
    *g_tls_connection_get_peer_certificate(GTlsConnection * conn);
extern GTlsCertificateFlags
g_tls_connection_get_peer_certificate_errors(GTlsConnection * conn);
extern GTlsRehandshakeMode
g_tls_connection_get_rehandshake_mode(GTlsConnection * conn);
extern gboolean g_tls_connection_get_require_close_notify(GTlsConnection *
							  conn);
extern GType g_tls_connection_get_type(void);
extern gboolean g_tls_connection_get_use_system_certdb(GTlsConnection *
						       conn);
extern gboolean g_tls_connection_handshake(GTlsConnection * conn,
					   GCancellable * cancellable,
					   GError * *error);
extern void g_tls_connection_handshake_async(GTlsConnection * conn,
					     int io_priority,
					     GCancellable * cancellable,
					     GAsyncReadyCallback callback,
					     gpointer user_data);
extern gboolean g_tls_connection_handshake_finish(GTlsConnection * conn,
						  GAsyncResult * result,
						  GError * *error);
extern void g_tls_connection_set_certificate(GTlsConnection * conn,
					     GTlsCertificate *
					     certificate);
extern void g_tls_connection_set_database(GTlsConnection * conn,
					  GTlsDatabase * database);
extern void g_tls_connection_set_interaction(GTlsConnection * conn,
					     GTlsInteraction *
					     interaction);
extern void g_tls_connection_set_rehandshake_mode(GTlsConnection * conn,
						  GTlsRehandshakeMode
						  mode);
extern void g_tls_connection_set_require_close_notify(GTlsConnection *
						      conn,
						      gboolean
						      require_close_notify);
extern void g_tls_connection_set_use_system_certdb(GTlsConnection * conn,
						   gboolean
						   use_system_certdb);
extern GQuark g_tls_error_quark(void);
</SCREEN>
</SECT2>
<SECT2>
<TITLE>glib-2.0/gio/gtlsdatabase.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define G_TYPE_TLS_DATABASE	(g_tls_database_get_type ())
#define G_TLS_DATABASE_CLASS(class)	(G_TYPE_CHECK_CLASS_CAST ((class), G_TYPE_TLS_DATABASE, GTlsDatabaseClass))
#define G_IS_TLS_DATABASE_CLASS(class)	(G_TYPE_CHECK_CLASS_TYPE ((class), G_TYPE_TLS_DATABASE))
#define G_TLS_DATABASE(inst)	(G_TYPE_CHECK_INSTANCE_CAST ((inst), G_TYPE_TLS_DATABASE, GTlsDatabase))
#define G_IS_TLS_DATABASE(inst)	(G_TYPE_CHECK_INSTANCE_TYPE ((inst), G_TYPE_TLS_DATABASE))
#define G_TLS_DATABASE_GET_CLASS(inst)	(G_TYPE_INSTANCE_GET_CLASS ((inst), G_TYPE_TLS_DATABASE, GTlsDatabaseClass))
#define G_TLS_DATABASE_PURPOSE_AUTHENTICATE_SERVER	"1.3.6.1.5.5.7.3.1"
#define G_TLS_DATABASE_PURPOSE_AUTHENTICATE_CLIENT	"1.3.6.1.5.5.7.3.2"

typedef struct _GTlsDatabaseClass {
    GObjectClass parent_class;
     GTlsCertificateFlags(*verify_chain) (GTlsDatabase * self,
					  GTlsCertificate * chain,
					  const gchar * purpose,
					  GSocketConnectable * identity,
					  GTlsInteraction * interaction,
					  GTlsDatabaseVerifyFlags flags,
					  GCancellable * cancellable,
					  GError * *error);
    void (*verify_chain_async) (GTlsDatabase * self,
				GTlsCertificate * chain,
				const gchar * purpose,
				GSocketConnectable * identity,
				GTlsInteraction * interaction,
				GTlsDatabaseVerifyFlags flags,
				GCancellable * cancellable,
				GAsyncReadyCallback callback,
				gpointer user_data);
     GTlsCertificateFlags(*verify_chain_finish) (GTlsDatabase * self,
						 GAsyncResult * result,
						 GError * *error);
    gchar *(*create_certificate_handle) (GTlsDatabase * self,
					 GTlsCertificate * certificate);
    GTlsCertificate *(*lookup_certificate_for_handle) (GTlsDatabase * self,
						       const gchar *
						       handle,
						       GTlsInteraction *
						       interaction,
						       GTlsDatabaseLookupFlags
						       flags,
						       GCancellable *
						       cancellable,
						       GError * *error);
    void (*lookup_certificate_for_handle_async) (GTlsDatabase * self,
						 const gchar * handle,
						 GTlsInteraction *
						 interaction,
						 GTlsDatabaseLookupFlags
						 flags,
						 GCancellable *
						 cancellable,
						 GAsyncReadyCallback
						 callback,
						 gpointer user_data);
    GTlsCertificate *(*lookup_certificate_for_handle_finish) (GTlsDatabase
							      * self,
							      GAsyncResult
							      * result,
							      GError *
							      *error);
    GTlsCertificate *(*lookup_certificate_issuer) (GTlsDatabase * self,
						   GTlsCertificate *
						   certificate,
						   GTlsInteraction *
						   interaction,
						   GTlsDatabaseLookupFlags
						   flags,
						   GCancellable *
						   cancellable,
						   GError * *error);
    void (*lookup_certificate_issuer_async) (GTlsDatabase * self,
					     GTlsCertificate * certificate,
					     GTlsInteraction * interaction,
					     GTlsDatabaseLookupFlags flags,
					     GCancellable * cancellable,
					     GAsyncReadyCallback callback,
					     gpointer user_data);
    GTlsCertificate *(*lookup_certificate_issuer_finish) (GTlsDatabase *
							  self,
							  GAsyncResult *
							  result,
							  GError * *error);
    GList *(*lookup_certificates_issued_by) (GTlsDatabase * self,
					     GByteArray * issuer_raw_dn,
					     GTlsInteraction * interaction,
					     GTlsDatabaseLookupFlags flags,
					     GCancellable * cancellable,
					     GError * *error);
    void (*lookup_certificates_issued_by_async) (GTlsDatabase * self,
						 GByteArray *
						 issuer_raw_dn,
						 GTlsInteraction *
						 interaction,
						 GTlsDatabaseLookupFlags
						 flags,
						 GCancellable *
						 cancellable,
						 GAsyncReadyCallback
						 callback,
						 gpointer user_data);
    GList *(*lookup_certificates_issued_by_finish) (GTlsDatabase * self,
						    GAsyncResult * result,
						    GError * *error);
    gpointer padding[16];
} GTlsDatabaseClass;
typedef struct _GTlsDatabasePrivate GTlsDatabasePrivate;
struct _GTlsDatabase {
    GObject parent_instance;
    GTlsDatabasePrivate *priv;
};
extern gchar *g_tls_database_create_certificate_handle(GTlsDatabase * self,
						       GTlsCertificate *
						       certificate);
extern GType g_tls_database_get_type(void);
extern GTlsCertificate
    *g_tls_database_lookup_certificate_for_handle(GTlsDatabase * self,
						  const gchar * handle,
						  GTlsInteraction *
						  interaction,
						  GTlsDatabaseLookupFlags
						  flags,
						  GCancellable *
						  cancellable,
						  GError * *error);
extern void g_tls_database_lookup_certificate_for_handle_async(GTlsDatabase
							       * self,
							       const gchar
							       * handle,
							       GTlsInteraction
							       *
							       interaction,
							       GTlsDatabaseLookupFlags
							       flags,
							       GCancellable
							       *
							       cancellable,
							       GAsyncReadyCallback
							       callback,
							       gpointer
							       user_data);
extern GTlsCertificate
    *g_tls_database_lookup_certificate_for_handle_finish(GTlsDatabase *
							 self,
							 GAsyncResult *
							 result,
							 GError * *error);
extern GTlsCertificate
    *g_tls_database_lookup_certificate_issuer(GTlsDatabase * self,
					      GTlsCertificate *
					      certificate,
					      GTlsInteraction *
					      interaction,
					      GTlsDatabaseLookupFlags
					      flags,
					      GCancellable * cancellable,
					      GError * *error);
extern void g_tls_database_lookup_certificate_issuer_async(GTlsDatabase *
							   self,
							   GTlsCertificate
							   * certificate,
							   GTlsInteraction
							   * interaction,
							   GTlsDatabaseLookupFlags
							   flags,
							   GCancellable *
							   cancellable,
							   GAsyncReadyCallback
							   callback,
							   gpointer
							   user_data);
extern GTlsCertificate
    *g_tls_database_lookup_certificate_issuer_finish(GTlsDatabase * self,
						     GAsyncResult * result,
						     GError * *error);
extern GList *g_tls_database_lookup_certificates_issued_by(GTlsDatabase *
							   self,
							   GByteArray *
							   issuer_raw_dn,
							   GTlsInteraction
							   * interaction,
							   GTlsDatabaseLookupFlags
							   flags,
							   GCancellable *
							   cancellable,
							   GError *
							   *error);
extern void g_tls_database_lookup_certificates_issued_by_async(GTlsDatabase
							       * self,
							       GByteArray *
							       issuer_raw_dn,
							       GTlsInteraction
							       *
							       interaction,
							       GTlsDatabaseLookupFlags
							       flags,
							       GCancellable
							       *
							       cancellable,
							       GAsyncReadyCallback
							       callback,
							       gpointer
							       user_data);
extern GList
    *g_tls_database_lookup_certificates_issued_by_finish(GTlsDatabase *
							 self,
							 GAsyncResult *
							 result,
							 GError * *error);
extern GTlsCertificateFlags g_tls_database_verify_chain(GTlsDatabase *
							self,
							GTlsCertificate *
							chain,
							const gchar *
							purpose,
							GSocketConnectable
							* identity,
							GTlsInteraction *
							interaction,
							GTlsDatabaseVerifyFlags
							flags,
							GCancellable *
							cancellable,
							GError * *error);
extern void g_tls_database_verify_chain_async(GTlsDatabase * self,
					      GTlsCertificate * chain,
					      const gchar * purpose,
					      GSocketConnectable *
					      identity,
					      GTlsInteraction *
					      interaction,
					      GTlsDatabaseVerifyFlags
					      flags,
					      GCancellable * cancellable,
					      GAsyncReadyCallback callback,
					      gpointer user_data);
extern GTlsCertificateFlags g_tls_database_verify_chain_finish(GTlsDatabase
							       * self,
							       GAsyncResult
							       * result,
							       GError *
							       *error);
</SCREEN>
</SECT2>
<SECT2>
<TITLE>glib-2.0/gio/gtlsfiledatabase.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define G_TYPE_TLS_FILE_DATABASE	(g_tls_file_database_get_type ())
#define G_TLS_FILE_DATABASE(inst)	(G_TYPE_CHECK_INSTANCE_CAST ((inst), G_TYPE_TLS_FILE_DATABASE, GTlsFileDatabase))
#define G_IS_TLS_FILE_DATABASE(inst)	(G_TYPE_CHECK_INSTANCE_TYPE ((inst), G_TYPE_TLS_FILE_DATABASE))
#define G_TLS_FILE_DATABASE_GET_INTERFACE(inst)	(G_TYPE_INSTANCE_GET_INTERFACE ((inst), G_TYPE_TLS_FILE_DATABASE, GTlsFileDatabaseInterface))

typedef struct _GTlsFileDatabaseInterface {
    GTypeInterface g_iface;
    gpointer padding[8];
} GTlsFileDatabaseInterface;
extern GType g_tls_file_database_get_type(void);
extern GTlsDatabase *g_tls_file_database_new(const gchar * anchors,
					     GError * *error);
</SCREEN>
</SECT2>
<SECT2>
<TITLE>glib-2.0/gio/gtlsinteraction.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define G_TYPE_TLS_INTERACTION	(g_tls_interaction_get_type ())
#define G_TLS_INTERACTION_CLASS(k)	(G_TYPE_CHECK_CLASS_CAST((k), G_TYPE_TLS_INTERACTION, GTlsInteractionClass))
#define G_IS_TLS_INTERACTION_CLASS(k)	(G_TYPE_CHECK_CLASS_TYPE ((k), G_TYPE_TLS_INTERACTION))
#define G_TLS_INTERACTION(o)	(G_TYPE_CHECK_INSTANCE_CAST ((o), G_TYPE_TLS_INTERACTION, GTlsInteraction))
#define G_IS_TLS_INTERACTION(o)	(G_TYPE_CHECK_INSTANCE_TYPE ((o), G_TYPE_TLS_INTERACTION))
#define G_TLS_INTERACTION_GET_CLASS(o)	(G_TYPE_INSTANCE_GET_CLASS ((o), G_TYPE_TLS_INTERACTION, GTlsInteractionClass))

typedef struct _GTlsInteractionClass {
    GObjectClass parent_class;
     GTlsInteractionResult(*ask_password) (GTlsInteraction * interaction,
					   GTlsPassword * password,
					   GCancellable * cancellable,
					   GError * *error);
    void (*ask_password_async) (GTlsInteraction * interaction,
				GTlsPassword * password,
				GCancellable * cancellable,
				GAsyncReadyCallback callback,
				gpointer user_data);
     GTlsInteractionResult(*ask_password_finish) (GTlsInteraction *
						  interaction,
						  GAsyncResult * result,
						  GError * *error);
    gpointer padding[24];
} GTlsInteractionClass;
typedef struct _GTlsInteractionPrivate GTlsInteractionPrivate;
struct _GTlsInteraction {
    GObject parent_instance;
    GTlsInteractionPrivate *priv;
};
extern GTlsInteractionResult g_tls_interaction_ask_password(GTlsInteraction
							    * interaction,
							    GTlsPassword *
							    password,
							    GCancellable *
							    cancellable,
							    GError *
							    *error);
extern void g_tls_interaction_ask_password_async(GTlsInteraction *
						 interaction,
						 GTlsPassword * password,
						 GCancellable *
						 cancellable,
						 GAsyncReadyCallback
						 callback,
						 gpointer user_data);
extern GTlsInteractionResult
g_tls_interaction_ask_password_finish(GTlsInteraction * interaction,
				      GAsyncResult * result,
				      GError * *error);
extern GType g_tls_interaction_get_type(void);
extern GTlsInteractionResult
g_tls_interaction_invoke_ask_password(GTlsInteraction * interaction,
				      GTlsPassword * password,
				      GCancellable * cancellable,
				      GError * *error);
</SCREEN>
</SECT2>
<SECT2>
<TITLE>glib-2.0/gio/gtlspassword.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define G_TYPE_TLS_PASSWORD	(g_tls_password_get_type ())
#define G_TLS_PASSWORD_CLASS(k)	(G_TYPE_CHECK_CLASS_CAST((k), G_TYPE_TLS_PASSWORD, GTlsPasswordClass))
#define G_IS_TLS_PASSWORD_CLASS(k)	(G_TYPE_CHECK_CLASS_TYPE ((k), G_TYPE_TLS_PASSWORD))
#define G_TLS_PASSWORD(o)	(G_TYPE_CHECK_INSTANCE_CAST ((o), G_TYPE_TLS_PASSWORD, GTlsPassword))
#define G_IS_TLS_PASSWORD(o)	(G_TYPE_CHECK_INSTANCE_TYPE ((o), G_TYPE_TLS_PASSWORD))
#define G_TLS_PASSWORD_GET_CLASS(o)	(G_TYPE_INSTANCE_GET_CLASS ((o), G_TYPE_TLS_PASSWORD, GTlsPasswordClass))

typedef struct _GTlsPasswordClass {
    GObjectClass parent_class;
    const guchar *(*get_value) (GTlsPassword * password, gsize * length);
    void (*set_value) (GTlsPassword * password, guchar * value,
		       gssize length, GDestroyNotify destroy);
    const gchar *(*get_default_warning) (GTlsPassword * password);
    gpointer padding[4];
} GTlsPasswordClass;
typedef struct _GTlsPasswordPrivate GTlsPasswordPrivate;
struct _GTlsPassword {
    GObject parent_instance;
    GTlsPasswordPrivate *priv;
};
extern const char *g_tls_password_get_description(GTlsPassword * password);
extern GTlsPasswordFlags g_tls_password_get_flags(GTlsPassword * password);
extern GType g_tls_password_get_type(void);
extern const unsigned char *g_tls_password_get_value(GTlsPassword *
						     password,
						     gsize * length);
extern const char *g_tls_password_get_warning(GTlsPassword * password);
extern GTlsPassword *g_tls_password_new(GTlsPasswordFlags flags,
					const gchar * description);
extern void g_tls_password_set_description(GTlsPassword * password,
					   const gchar * description);
extern void g_tls_password_set_flags(GTlsPassword * password,
				     GTlsPasswordFlags flags);
extern void g_tls_password_set_value(GTlsPassword * password,
				     const guchar * value, gssize length);
extern void g_tls_password_set_value_full(GTlsPassword * password,
					  guchar * value, gssize length,
					  GDestroyNotify destroy);
extern void g_tls_password_set_warning(GTlsPassword * password,
				       const gchar * warning);
</SCREEN>
</SECT2>
<SECT2>
<TITLE>glib-2.0/gio/gtlsserverconnection.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define G_TYPE_TLS_SERVER_CONNECTION	(g_tls_server_connection_get_type ())
#define G_TLS_SERVER_CONNECTION(inst)	(G_TYPE_CHECK_INSTANCE_CAST ((inst), G_TYPE_TLS_SERVER_CONNECTION, GTlsServerConnection))
#define G_IS_TLS_SERVER_CONNECTION(inst)	(G_TYPE_CHECK_INSTANCE_TYPE ((inst), G_TYPE_TLS_SERVER_CONNECTION))
#define G_TLS_SERVER_CONNECTION_GET_INTERFACE(inst)	(G_TYPE_INSTANCE_GET_INTERFACE ((inst), G_TYPE_TLS_SERVER_CONNECTION, GTlsServerConnectionInterface))

typedef struct _GTlsServerConnectionInterface {
    GTypeInterface g_iface;
} GTlsServerConnectionInterface;
extern GType g_tls_server_connection_get_type(void);
extern GIOStream *g_tls_server_connection_new(GIOStream * base_io_stream,
					      GTlsCertificate *
					      certificate,
					      GError * *error);
</SCREEN>
</SECT2>
<SECT2>
<TITLE>glib-2.0/gio/gvfs.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define G_VFS_CLASS(k)	(G_TYPE_CHECK_CLASS_CAST((k), G_TYPE_VFS, GVfsClass))
#define G_IS_VFS_CLASS(k)	(G_TYPE_CHECK_CLASS_TYPE ((k), G_TYPE_VFS))
#define G_VFS(o)	(G_TYPE_CHECK_INSTANCE_CAST ((o), G_TYPE_VFS, GVfs))
#define G_IS_VFS(o)	(G_TYPE_CHECK_INSTANCE_TYPE ((o), G_TYPE_VFS))
#define G_VFS_GET_CLASS(o)	(G_TYPE_INSTANCE_GET_CLASS ((o), G_TYPE_VFS, GVfsClass))
#define G_TYPE_VFS	(g_vfs_get_type ())
#define G_VFS_EXTENSION_POINT_NAME	"gio-vfs"

typedef struct _GVfsClass {
    GObjectClass parent_class;
     gboolean(*is_active) (GVfs * vfs);
    GFile *(*get_file_for_path) (GVfs * vfs, const char *path);
    GFile *(*get_file_for_uri) (GVfs * vfs, const char *uri);
    const gchar *const *(*get_supported_uri_schemes) (GVfs * vfs);
    GFile *(*parse_name) (GVfs * vfs, const char *parse_name);
    void (*local_file_add_info) (GVfs * vfs, const char *filename,
				 guint64 device,
				 GFileAttributeMatcher * attribute_matcher,
				 GFileInfo * info,
				 GCancellable * cancellable,
				 gpointer * extra_data,
				 GDestroyNotify * free_extra_data);
    void (*add_writable_namespaces) (GVfs * vfs,
				     GFileAttributeInfoList * list);
     gboolean(*local_file_set_attributes) (GVfs * vfs,
					   const char *filename,
					   GFileInfo * info,
					   GFileQueryInfoFlags flags,
					   GCancellable * cancellable,
					   GError * *error);
    void (*local_file_removed) (GVfs * vfs, const char *filename);
    void (*local_file_moved) (GVfs * vfs, const char *source,
			      const char *dest);
    void (*_g_reserved1) (void);
    void (*_g_reserved2) (void);
    void (*_g_reserved3) (void);
    void (*_g_reserved4) (void);
    void (*_g_reserved5) (void);
    void (*_g_reserved6) (void);
    void (*_g_reserved7) (void);
} GVfsClass;
struct _GVfs {
    GObject parent_instance;
};
extern GVfs *g_vfs_get_default(void);
extern GFile *g_vfs_get_file_for_path(GVfs * vfs, const char *path);
extern GFile *g_vfs_get_file_for_uri(GVfs * vfs, const char *uri);
extern GVfs *g_vfs_get_local(void);
extern const char *const *g_vfs_get_supported_uri_schemes(GVfs * vfs);
extern GType g_vfs_get_type(void);
extern gboolean g_vfs_is_active(GVfs * vfs);
extern GFile *g_vfs_parse_name(GVfs * vfs, const char *parse_name);
</SCREEN>
</SECT2>
<SECT2>
<TITLE>glib-2.0/gio/gvolume.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define G_VOLUME(obj)	(G_TYPE_CHECK_INSTANCE_CAST ((obj), G_TYPE_VOLUME, GVolume))
#define G_IS_VOLUME(obj)	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), G_TYPE_VOLUME))
#define G_VOLUME_GET_IFACE(obj)	(G_TYPE_INSTANCE_GET_INTERFACE ((obj), G_TYPE_VOLUME, GVolumeIface))
#define G_TYPE_VOLUME	(g_volume_get_type ())
#define G_VOLUME_IDENTIFIER_KIND_CLASS	"class"
#define G_VOLUME_IDENTIFIER_KIND_HAL_UDI	"hal-udi"
#define G_VOLUME_IDENTIFIER_KIND_LABEL	"label"
#define G_VOLUME_IDENTIFIER_KIND_NFS_MOUNT	"nfs-mount"
#define G_VOLUME_IDENTIFIER_KIND_UNIX_DEVICE	"unix-device"
#define G_VOLUME_IDENTIFIER_KIND_UUID	"uuid"

typedef struct _GVolumeIface {
    GTypeInterface g_iface;
    void (*changed) (GVolume * volume);
    void (*removed) (GVolume * volume);
    char *(*get_name) (GVolume * volume);
    GIcon *(*get_icon) (GVolume * volume);
    char *(*get_uuid) (GVolume * volume);
    GDrive *(*get_drive) (GVolume * volume);
    GMount *(*get_mount) (GVolume * volume);
     gboolean(*can_mount) (GVolume * volume);
     gboolean(*can_eject) (GVolume * volume);
    void (*mount_fn) (GVolume * volume, GMountMountFlags flags,
		      GMountOperation * mount_operation,
		      GCancellable * cancellable,
		      GAsyncReadyCallback callback, gpointer user_data);
     gboolean(*mount_finish) (GVolume * volume, GAsyncResult * result,
			      GError * *error);
    void (*eject) (GVolume * volume, GMountUnmountFlags flags,
		   GCancellable * cancellable,
		   GAsyncReadyCallback callback, gpointer user_data);
     gboolean(*eject_finish) (GVolume * volume, GAsyncResult * result,
			      GError * *error);
    char *(*get_identifier) (GVolume * volume, const char *kind);
    char **(*enumerate_identifiers) (GVolume * volume);
     gboolean(*should_automount) (GVolume * volume);
    GFile *(*get_activation_root) (GVolume * volume);
    void (*eject_with_operation) (GVolume * volume,
				  GMountUnmountFlags flags,
				  GMountOperation * mount_operation,
				  GCancellable * cancellable,
				  GAsyncReadyCallback callback,
				  gpointer user_data);
     gboolean(*eject_with_operation_finish) (GVolume * volume,
					     GAsyncResult * result,
					     GError * *error);
    const char *(*get_sort_key) (GVolume * volume);
} GVolumeIface;
extern gboolean g_volume_can_eject(GVolume * volume);
extern gboolean g_volume_can_mount(GVolume * volume);
extern void g_volume_eject(GVolume * volume, GMountUnmountFlags flags,
			   GCancellable * cancellable,
			   GAsyncReadyCallback callback,
			   gpointer user_data);
extern gboolean g_volume_eject_finish(GVolume * volume,
				      GAsyncResult * result,
				      GError * *error);
extern void g_volume_eject_with_operation(GVolume * volume,
					  GMountUnmountFlags flags,
					  GMountOperation *
					  mount_operation,
					  GCancellable * cancellable,
					  GAsyncReadyCallback callback,
					  gpointer user_data);
extern gboolean g_volume_eject_with_operation_finish(GVolume * volume,
						     GAsyncResult * result,
						     GError * *error);
extern void g_volume_enumerate_identifiers(GVolume * volume);
extern GFile *g_volume_get_activation_root(GVolume * volume);
extern GDrive *g_volume_get_drive(GVolume * volume);
extern GIcon *g_volume_get_icon(GVolume * volume);
extern char *g_volume_get_identifier(GVolume * volume, const char *kind);
extern GMount *g_volume_get_mount(GVolume * volume);
extern char *g_volume_get_name(GVolume * volume);
extern const char *g_volume_get_sort_key(GVolume * volume);
extern GType g_volume_get_type(void);
extern char *g_volume_get_uuid(GVolume * volume);
extern void g_volume_mount(GVolume * volume, GMountMountFlags flags,
			   GMountOperation * mount_operation,
			   GCancellable * cancellable,
			   GAsyncReadyCallback callback,
			   gpointer user_data);
extern gboolean g_volume_mount_finish(GVolume * volume,
				      GAsyncResult * result,
				      GError * *error);
extern gboolean g_volume_should_automount(GVolume * volume);
</SCREEN>
</SECT2>
<SECT2>
<TITLE>glib-2.0/gio/gvolumemonitor.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define G_VOLUME_MONITOR_CLASS(k)	(G_TYPE_CHECK_CLASS_CAST((k), G_TYPE_VOLUME_MONITOR, GVolumeMonitorClass))
#define G_IS_VOLUME_MONITOR_CLASS(k)	(G_TYPE_CHECK_CLASS_TYPE ((k), G_TYPE_VOLUME_MONITOR))
#define G_VOLUME_MONITOR(o)	(G_TYPE_CHECK_INSTANCE_CAST ((o), G_TYPE_VOLUME_MONITOR, GVolumeMonitor))
#define G_IS_VOLUME_MONITOR(o)	(G_TYPE_CHECK_INSTANCE_TYPE ((o), G_TYPE_VOLUME_MONITOR))
#define G_VOLUME_MONITOR_GET_CLASS(o)	(G_TYPE_INSTANCE_GET_CLASS ((o), G_TYPE_VOLUME_MONITOR, GVolumeMonitorClass))
#define G_TYPE_VOLUME_MONITOR	(g_volume_monitor_get_type ())
#define G_VOLUME_MONITOR_EXTENSION_POINT_NAME	"gio-volume-monitor"

typedef struct _GVolumeMonitorClass {
    GObjectClass parent_class;
    void (*volume_added) (GVolumeMonitor * volume_monitor,
			  GVolume * volume);
    void (*volume_removed) (GVolumeMonitor * volume_monitor,
			    GVolume * volume);
    void (*volume_changed) (GVolumeMonitor * volume_monitor,
			    GVolume * volume);
    void (*mount_added) (GVolumeMonitor * volume_monitor, GMount * mount);
    void (*mount_removed) (GVolumeMonitor * volume_monitor,
			   GMount * mount);
    void (*mount_pre_unmount) (GVolumeMonitor * volume_monitor,
			       GMount * mount);
    void (*mount_changed) (GVolumeMonitor * volume_monitor,
			   GMount * mount);
    void (*drive_connected) (GVolumeMonitor * volume_monitor,
			     GDrive * drive);
    void (*drive_disconnected) (GVolumeMonitor * volume_monitor,
				GDrive * drive);
    void (*drive_changed) (GVolumeMonitor * volume_monitor,
			   GDrive * drive);
     gboolean(*is_supported) (void);
    GList *(*get_connected_drives) (GVolumeMonitor * volume_monitor);
    GList *(*get_volumes) (GVolumeMonitor * volume_monitor);
    GList *(*get_mounts) (GVolumeMonitor * volume_monitor);
    GVolume *(*get_volume_for_uuid) (GVolumeMonitor * volume_monitor,
				     const char *uuid);
    GMount *(*get_mount_for_uuid) (GVolumeMonitor * volume_monitor,
				   const char *uuid);
    GVolume *(*adopt_orphan_mount) (GMount * mount,
				    GVolumeMonitor * volume_monitor);
    void (*drive_eject_button) (GVolumeMonitor * volume_monitor,
				GDrive * drive);
    void (*drive_stop_button) (GVolumeMonitor * volume_monitor,
			       GDrive * drive);
    void (*_g_reserved1) (void);
    void (*_g_reserved2) (void);
    void (*_g_reserved3) (void);
    void (*_g_reserved4) (void);
    void (*_g_reserved5) (void);
    void (*_g_reserved6) (void);
} GVolumeMonitorClass;
struct _GVolumeMonitor {
    GObject parent_instance;
    gpointer priv;
};
extern GVolume *g_volume_monitor_adopt_orphan_mount(GMount * mount);
extern GVolumeMonitor *g_volume_monitor_get(void);
extern GList *g_volume_monitor_get_connected_drives(GVolumeMonitor *
						    volume_monitor);
extern GMount *g_volume_monitor_get_mount_for_uuid(GVolumeMonitor *
						   volume_monitor,
						   const char *uuid);
extern GList *g_volume_monitor_get_mounts(GVolumeMonitor * volume_monitor);
extern GType g_volume_monitor_get_type(void);
extern GVolume *g_volume_monitor_get_volume_for_uuid(GVolumeMonitor *
						     volume_monitor,
						     const char *uuid);
extern GList *g_volume_monitor_get_volumes(GVolumeMonitor *
					   volume_monitor);
</SCREEN>
</SECT2>
<SECT2>
<TITLE>glib-2.0/gio/gzlibcompressor.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define G_ZLIB_COMPRESSOR_CLASS(k)	(G_TYPE_CHECK_CLASS_CAST((k), G_TYPE_ZLIB_COMPRESSOR, GZlibCompressorClass))
#define G_IS_ZLIB_COMPRESSOR_CLASS(k)	(G_TYPE_CHECK_CLASS_TYPE ((k), G_TYPE_ZLIB_COMPRESSOR))
#define G_ZLIB_COMPRESSOR(o)	(G_TYPE_CHECK_INSTANCE_CAST ((o), G_TYPE_ZLIB_COMPRESSOR, GZlibCompressor))
#define G_IS_ZLIB_COMPRESSOR(o)	(G_TYPE_CHECK_INSTANCE_TYPE ((o), G_TYPE_ZLIB_COMPRESSOR))
#define G_ZLIB_COMPRESSOR_GET_CLASS(o)	(G_TYPE_INSTANCE_GET_CLASS ((o), G_TYPE_ZLIB_COMPRESSOR, GZlibCompressorClass))
#define G_TYPE_ZLIB_COMPRESSOR	(g_zlib_compressor_get_type ())

typedef struct _GZlibCompressorClass {
    GObjectClass parent_class;
} GZlibCompressorClass;
extern GFileInfo *g_zlib_compressor_get_file_info(GZlibCompressor *
						  compressor);
extern GType g_zlib_compressor_get_type(void);
extern GZlibCompressor *g_zlib_compressor_new(GZlibCompressorFormat format,
					      int level);
extern void g_zlib_compressor_set_file_info(GZlibCompressor * compressor,
					    GFileInfo * file_info);
</SCREEN>
</SECT2>
<SECT2>
<TITLE>glib-2.0/gio/gzlibdecompressor.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define G_ZLIB_DECOMPRESSOR_CLASS(k)	(G_TYPE_CHECK_CLASS_CAST((k), G_TYPE_ZLIB_DECOMPRESSOR, GZlibDecompressorClass))
#define G_IS_ZLIB_DECOMPRESSOR_CLASS(k)	(G_TYPE_CHECK_CLASS_TYPE ((k), G_TYPE_ZLIB_DECOMPRESSOR))
#define G_ZLIB_DECOMPRESSOR(o)	(G_TYPE_CHECK_INSTANCE_CAST ((o), G_TYPE_ZLIB_DECOMPRESSOR, GZlibDecompressor))
#define G_IS_ZLIB_DECOMPRESSOR(o)	(G_TYPE_CHECK_INSTANCE_TYPE ((o), G_TYPE_ZLIB_DECOMPRESSOR))
#define G_ZLIB_DECOMPRESSOR_GET_CLASS(o)	(G_TYPE_INSTANCE_GET_CLASS ((o), G_TYPE_ZLIB_DECOMPRESSOR, GZlibDecompressorClass))
#define G_TYPE_ZLIB_DECOMPRESSOR	(g_zlib_decompressor_get_type ())

typedef struct _GZlibDecompressorClass {
    GObjectClass parent_class;
} GZlibDecompressorClass;
extern GFileInfo *g_zlib_decompressor_get_file_info(GZlibDecompressor *
						    decompressor);
extern GType g_zlib_decompressor_get_type(void);
extern GZlibDecompressor *g_zlib_decompressor_new(GZlibCompressorFormat
						  format);
</SCREEN>
</SECT2>
</SECT1>
<SECT1 ID=libgio-2.0man>
<TITLE>Interface Definitions for libgio-2.0</TITLE>
<PARA>
The interfaces defined on the following pages are included in libgio-2.0 and are defined
by this specification.
Unless otherwise noted, these interfaces shall be included
in the source standard.
</PARA>
<PARA>
Other interfaces listed in <XREF LINKEND=libgio-2.0> shall behave as described
in the referenced base document.
</PARA>
<!-- MISSING DEFINITION FOR g_dbus_error_quark -->
<!-- Lets just hope nobody notices -->
<!-- MISSING DEFINITION FOR g_desktop_app_info_lookup_get_default_for_uri_scheme -->
<!-- Lets just hope nobody notices -->
<!-- MISSING DEFINITION FOR g_io_error_quark -->
<!-- Lets just hope nobody notices -->
<!-- MISSING DEFINITION FOR g_resolver_error_quark -->
<!-- Lets just hope nobody notices -->
<!-- MISSING DEFINITION FOR g_resource_error_quark -->
<!-- Lets just hope nobody notices -->
<!-- MISSING DEFINITION FOR g_static_resource_fini -->
<!-- Lets just hope nobody notices -->
<!-- MISSING DEFINITION FOR g_static_resource_get_resource -->
<!-- Lets just hope nobody notices -->
<!-- MISSING DEFINITION FOR g_static_resource_init -->
<!-- Lets just hope nobody notices -->
<!-- MISSING DEFINITION FOR g_tls_error_quark -->
<!-- Lets just hope nobody notices -->
</SECT1>
<!-- End of text generated from database -->


</CHAPTER>

</PART>
