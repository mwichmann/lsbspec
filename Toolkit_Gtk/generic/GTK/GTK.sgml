<PART ID="tocgtk">
<TITLE>GTK+ Stack Libraries</TITLE>

<CHAPTER id=gtk>
<TITLE>Libraries</TITLE>
<SECT1><TITLE>Introduction</TITLE>
<PARA>
A conforming implementation shall support the following
GTK+ stack libraries which
provide interfaces for creating rich graphical user interface applications.
<VARIABLELIST>
<VARLISTENTRY>
<TERM>GLib</TERM>
<LISTITEM><para>A general-purpose utility library, not specific to graphical user interfaces. GLib provides many useful data types, macros, type conversions, string utilities, file utilities, a main loop abstraction, and so on.</para>
<para>libglib-2.0</para>
<para>libgmodule-2.0</para>
<para>libgobject-2.0</para>
<para>libgthread-2.0</para>
</listitem>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM>ATK</TERM>
<listitem><para>ATK is the Accessibility Toolkit. It provides a set of generic interfaces allowing accessibility technologies to interact with a graphical user interface. For example, a screen reader uses ATK to discover the text in an interface and read it to blind users. GTK+ widgets have built-in support for accessibility using the ATK framework. </para>
<para>libatk-1.0</para></listitem>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM>Pango</TERM>
<listitem><para>Pango is a library for internationalized text handling. It centers around the PangoLayout object, representing a paragraph of text. Pango provides the engine for GtkTextView, GtkLabel, GtkEntry, and other widgets that display text.</para>
<para>libpango-1.0</para>
<para>libpangocairo-1.0</para>
<para>libpangoxft-1.0</para>
<para>libpangoft2-1.0</para>
</listitem>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM>GdkPixbuf</TERM>
<listitem><para>This is a small library which allows you to create GdkPixbuf ("pixel buffer") objects from image data or image files. Use a GdkPixbuf in combination with GtkImage to display images.</para>
<para>libgdk_pixbuf-2.0</para>
<para>libgdk_pixbuf_xlib-2.0</para></listitem>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM>GDK</TERM>
<listitem><para>GDK is the abstraction layer that allows GTK+ to support multiple windowing systems. GDK provides drawing and window system facilities on X11, Windows, and the Linux framebuffer device.</para>
<para>libgdk-x11-2.0</para></listitem>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM>GTK+</TERM>
<listitem><para>The GTK+ library contains widgets, that is, GUI components such as GtkButton or GtkTextView.</para>
<para>libgtk-x11-2.0</para></listitem>
</VARLISTENTRY>
</VARIABLELIST>
</PARA>
<PARA>
There are three main parts to the definition of each of these
libraries.
</PARA>
<PARA>
The "Interfaces" section defines the required library name and version,
and the required public symbols (interfaces and global data), as well
as symbol versions, if any.
</PARA>
<PARA>
The "Interface Definitions" section provides complete or partial
definitions of certain interfaces where either this specification is
the source specification, or where there are variations from the source
specification. If an interface definition requires one or more header 
files, one of those headers shall include the function 
prototype for the interface.
</PARA>
<PARA>
For source definitions of interfaces which include a reference to a
header file, the contents of such header files form a
part of the specification.  The "Data Definitions" section provides the
binary-level details for the header files from the source specifications,
such as values for macros and enumerated types, as well as structure layouts,
sizes and padding, etc.  These data definitions, although presented in the form
of header files for convenience, should not be taken a representing complete
header files, as they are a supplement to the source
specifications.  Application developers should follow the guidelines
of the source specifications when determining which header files need
to be included to completely resolve all references.
<NOTE>
<PARA>
While the Data Definitions supplement the source specifications,
this specification itself does not require conforming implementations
to supply any header files.
</PARA>
</NOTE>
</PARA>
</SECT1>


<!-- Start of generated text - do not edit! -->
<!-- generated from the LSB specification database by mklibspec -->
<SECT1 ID=libglib-2.0>
<TITLE>Interfaces for libglib-2.0</TITLE>
<PARA>
<XREF LINKEND="lib-libglib-2.0-def"> defines the library name and shared object name
for the libglib-2.0 library
</PARA>
<TABLE id="lib-libglib-2.0-def">
<TITLE>libglib-2.0 Definition</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Library:</ENTRY>
<ENTRY>libglib-2.0</ENTRY>
</ROW>
<ROW>
<ENTRY>SONAME:</ENTRY>
<ENTRY>libglib-2.0.so.0</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The behavior of the interfaces in this library is specified by the following specifications:<SIMPLELIST COLUMNS=1>
<MEMBER ID='REFSTD.libglib.2.0.1'>
[Glib 2.8] <XREF LINKEND="std.Glib.2.8">
</MEMBER>
</SIMPLELIST>
</PARA>
<!-- debug: database interface name GTK General purpose utility library -->
<SECT2>
<!--libgroup-->
<TITLE>GTK General purpose utility library</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Interfaces for GTK General purpose utility library</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic functions
for GTK General purpose utility library specified in <XREF linkend="tbl-libglib-2.0-gtk-g-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<TABLE id="tbl-libglib-2.0-gtk-g-ints">
<TITLE>libglib-2.0 - GTK General purpose utility library Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>g_assert_warning</primary></indexterm>g_assert_warning <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_once_impl</primary></indexterm>g_once_impl <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_return_if_fail_warning</primary></indexterm>g_return_if_fail_warning <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_static_mutex_get_mutex_impl</primary></indexterm>g_static_mutex_get_mutex_impl <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for GTK General purpose utility library specified in <XREF linkend="tbl-libglib-2.0-gtk-g-data">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<TABLE id="tbl-libglib-2.0-gtk-g-data">
<TITLE>libglib-2.0 - GTK General purpose utility library Data Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>g_ascii_table</primary></indexterm>g_ascii_table <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_child_watch_funcs</primary></indexterm>g_child_watch_funcs <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_idle_funcs</primary></indexterm>g_idle_funcs <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_io_watch_funcs</primary></indexterm>g_io_watch_funcs <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_thread_functions_for_glib_use</primary></indexterm>g_thread_functions_for_glib_use <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_thread_use_default_impl</primary></indexterm>g_thread_use_default_impl <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_threads_got_initialized</primary></indexterm>g_threads_got_initialized <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_timeout_funcs</primary></indexterm>g_timeout_funcs <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_utf8_skip</primary></indexterm>g_utf8_skip <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>
</SECT2>
<!-- debug: database interface name Glib Arrays -->
<SECT2>
<!--libgroup-->
<TITLE>Glib Arrays</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Interfaces for Glib Arrays</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic functions
for Glib Arrays specified in <XREF linkend="tbl-libglib-2.0-glib-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<TABLE id="tbl-libglib-2.0-glib-ints">
<TITLE>libglib-2.0 - Glib Arrays Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>g_array_append_vals</primary></indexterm>g_array_append_vals <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_array_free</primary></indexterm>g_array_free <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_array_insert_vals</primary></indexterm>g_array_insert_vals <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_array_new</primary></indexterm>g_array_new <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_array_prepend_vals</primary></indexterm>g_array_prepend_vals <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_array_remove_index</primary></indexterm>g_array_remove_index <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_array_remove_index_fast</primary></indexterm>g_array_remove_index_fast <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_array_remove_range</primary></indexterm>g_array_remove_range <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_array_set_size</primary></indexterm>g_array_set_size <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_array_sized_new</primary></indexterm>g_array_sized_new <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_array_sort</primary></indexterm>g_array_sort <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_array_sort_with_data</primary></indexterm>g_array_sort_with_data <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>
</SECT2>
<!-- debug: database interface name Glib Asynchronous Queues -->
<SECT2>
<!--libgroup-->
<TITLE>Glib Asynchronous Queues</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Interfaces for Glib Asynchronous Queues</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic functions
for Glib Asynchronous Queues specified in <XREF linkend="tbl-libglib-2.0-1-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<TABLE id="tbl-libglib-2.0-1-ints">
<TITLE>libglib-2.0 - Glib Asynchronous Queues Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>g_async_queue_length</primary></indexterm>g_async_queue_length <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_async_queue_length_unlocked</primary></indexterm>g_async_queue_length_unlocked <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_async_queue_lock</primary></indexterm>g_async_queue_lock <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_async_queue_new</primary></indexterm>g_async_queue_new <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_async_queue_pop</primary></indexterm>g_async_queue_pop <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_async_queue_pop_unlocked</primary></indexterm>g_async_queue_pop_unlocked <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_async_queue_push</primary></indexterm>g_async_queue_push <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_async_queue_push_unlocked</primary></indexterm>g_async_queue_push_unlocked <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_async_queue_ref</primary></indexterm>g_async_queue_ref <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_async_queue_timed_pop</primary></indexterm>g_async_queue_timed_pop <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_async_queue_timed_pop_unlocked</primary></indexterm>g_async_queue_timed_pop_unlocked <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_async_queue_try_pop</primary></indexterm>g_async_queue_try_pop <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_async_queue_try_pop_unlocked</primary></indexterm>g_async_queue_try_pop_unlocked <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_async_queue_unlock</primary></indexterm>g_async_queue_unlock <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_async_queue_unref</primary></indexterm>g_async_queue_unref <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>
</SECT2>
<!-- debug: database interface name Glib Atomic Operations -->
<SECT2>
<!--libgroup-->
<TITLE>Glib Atomic Operations</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Interfaces for Glib Atomic Operations</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic functions
for Glib Atomic Operations specified in <XREF linkend="tbl-libglib-2.0-2-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<TABLE id="tbl-libglib-2.0-2-ints">
<TITLE>libglib-2.0 - Glib Atomic Operations Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>g_atomic_int_add</primary></indexterm>g_atomic_int_add <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_atomic_int_compare_and_exchange</primary></indexterm>g_atomic_int_compare_and_exchange <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_atomic_int_exchange_and_add</primary></indexterm>g_atomic_int_exchange_and_add <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_atomic_pointer_compare_and_exchange</primary></indexterm>g_atomic_pointer_compare_and_exchange <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>
</SECT2>
<!-- debug: database interface name Glib Automatic String Completion -->
<SECT2>
<!--libgroup-->
<TITLE>Glib Automatic String Completion</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Interfaces for Glib Automatic String Completion</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic functions
for Glib Automatic String Completion specified in <XREF linkend="tbl-libglib-2.0-3-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<TABLE id="tbl-libglib-2.0-3-ints">
<TITLE>libglib-2.0 - Glib Automatic String Completion Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>g_completion_add_items</primary></indexterm>g_completion_add_items <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_completion_clear_items</primary></indexterm>g_completion_clear_items <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_completion_complete</primary></indexterm>g_completion_complete <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_completion_complete_utf8</primary></indexterm>g_completion_complete_utf8 <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_completion_free</primary></indexterm>g_completion_free <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_completion_new</primary></indexterm>g_completion_new <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_completion_remove_items</primary></indexterm>g_completion_remove_items <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_completion_set_compare</primary></indexterm>g_completion_set_compare <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>
</SECT2>
<!-- debug: database interface name Glib Balanced Binary Trees -->
<SECT2>
<!--libgroup-->
<TITLE>Glib Balanced Binary Trees</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Interfaces for Glib Balanced Binary Trees</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic functions
for Glib Balanced Binary Trees specified in <XREF linkend="tbl-libglib-2.0-4-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<TABLE id="tbl-libglib-2.0-4-ints">
<TITLE>libglib-2.0 - Glib Balanced Binary Trees Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>g_tree_destroy</primary></indexterm>g_tree_destroy <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_tree_foreach</primary></indexterm>g_tree_foreach <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_tree_height</primary></indexterm>g_tree_height <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_tree_insert</primary></indexterm>g_tree_insert <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_tree_lookup</primary></indexterm>g_tree_lookup <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_tree_lookup_extended</primary></indexterm>g_tree_lookup_extended <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_tree_new</primary></indexterm>g_tree_new <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_tree_new_full</primary></indexterm>g_tree_new_full <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_tree_new_with_data</primary></indexterm>g_tree_new_with_data <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_tree_nnodes</primary></indexterm>g_tree_nnodes <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_tree_remove</primary></indexterm>g_tree_remove <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_tree_replace</primary></indexterm>g_tree_replace <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_tree_search</primary></indexterm>g_tree_search <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_tree_steal</primary></indexterm>g_tree_steal <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>
</SECT2>
<!-- debug: database interface name Glib Byte Arrays -->
<SECT2>
<!--libgroup-->
<TITLE>Glib Byte Arrays</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Interfaces for Glib Byte Arrays</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic functions
for Glib Byte Arrays specified in <XREF linkend="tbl-libglib-2.0-5-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<TABLE id="tbl-libglib-2.0-5-ints">
<TITLE>libglib-2.0 - Glib Byte Arrays Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>g_byte_array_append</primary></indexterm>g_byte_array_append <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_byte_array_free</primary></indexterm>g_byte_array_free <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_byte_array_new</primary></indexterm>g_byte_array_new <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_byte_array_prepend</primary></indexterm>g_byte_array_prepend <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_byte_array_remove_index</primary></indexterm>g_byte_array_remove_index <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_byte_array_remove_index_fast</primary></indexterm>g_byte_array_remove_index_fast <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_byte_array_remove_range</primary></indexterm>g_byte_array_remove_range <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_byte_array_set_size</primary></indexterm>g_byte_array_set_size <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_byte_array_sized_new</primary></indexterm>g_byte_array_sized_new <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_byte_array_sort</primary></indexterm>g_byte_array_sort <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_byte_array_sort_with_data</primary></indexterm>g_byte_array_sort_with_data <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>
</SECT2>
<!-- debug: database interface name Glib Caches -->
<SECT2>
<!--libgroup-->
<TITLE>Glib Caches</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Interfaces for Glib Caches</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic functions
for Glib Caches specified in <XREF linkend="tbl-libglib-2.0-6-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<TABLE id="tbl-libglib-2.0-6-ints">
<TITLE>libglib-2.0 - Glib Caches Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>g_cache_destroy</primary></indexterm>g_cache_destroy <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_cache_insert</primary></indexterm>g_cache_insert <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_cache_key_foreach</primary></indexterm>g_cache_key_foreach <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_cache_new</primary></indexterm>g_cache_new <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_cache_remove</primary></indexterm>g_cache_remove <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_cache_value_foreach</primary></indexterm>g_cache_value_foreach <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
An LSB conforming implementation shall provide the generic deprecated functions
for Glib Caches specified in <XREF linkend="tbl-libglib-2.0-6-depints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<NOTE><PARA>These interfaces are deprecated, and applications
should avoid using them.
These interfaces may be withdrawn
in future releases of this specification.
</PARA></NOTE>
<!--libgroupdepints-->
<TABLE id="tbl-libglib-2.0-6-depints">
<TITLE>libglib-2.0 - Glib Caches Deprecated Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>g_cache_value_foreach</primary></indexterm>g_cache_value_foreach <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>
</SECT2>
<!-- debug: database interface name Glib Character Set Conversion -->
<SECT2>
<!--libgroup-->
<TITLE>Glib Character Set Conversion</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Interfaces for Glib Character Set Conversion</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic functions
for Glib Character Set Conversion specified in <XREF linkend="tbl-libglib-2.0-7-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<TABLE id="tbl-libglib-2.0-7-ints">
<TITLE>libglib-2.0 - Glib Character Set Conversion Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>g_convert</primary></indexterm>g_convert <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_convert_error_quark</primary></indexterm>g_convert_error_quark <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_convert_with_fallback</primary></indexterm>g_convert_with_fallback <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_convert_with_iconv</primary></indexterm>g_convert_with_iconv <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_filename_display_basename</primary></indexterm>g_filename_display_basename <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_filename_display_name</primary></indexterm>g_filename_display_name <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_filename_from_uri</primary></indexterm>g_filename_from_uri <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_filename_from_utf8</primary></indexterm>g_filename_from_utf8 <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_filename_to_uri</primary></indexterm>g_filename_to_uri <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_filename_to_utf8</primary></indexterm>g_filename_to_utf8 <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_get_charset</primary></indexterm>g_get_charset <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_get_filename_charsets</primary></indexterm>g_get_filename_charsets <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_iconv</primary></indexterm>g_iconv <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_iconv_close</primary></indexterm>g_iconv_close <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_iconv_open</primary></indexterm>g_iconv_open <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_locale_from_utf8</primary></indexterm>g_locale_from_utf8 <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_locale_to_utf8</primary></indexterm>g_locale_to_utf8 <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_uri_list_extract_uris</primary></indexterm>g_uri_list_extract_uris <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>
</SECT2>
<!-- debug: database interface name Glib Commandline Option Parser -->
<SECT2>
<!--libgroup-->
<TITLE>Glib Commandline Option Parser</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Interfaces for Glib Commandline Option Parser</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic functions
for Glib Commandline Option Parser specified in <XREF linkend="tbl-libglib-2.0-8-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<TABLE id="tbl-libglib-2.0-8-ints">
<TITLE>libglib-2.0 - Glib Commandline Option Parser Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>g_option_context_add_group</primary></indexterm>g_option_context_add_group <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_option_context_add_main_entries</primary></indexterm>g_option_context_add_main_entries <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_option_context_free</primary></indexterm>g_option_context_free <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_option_context_get_help_enabled</primary></indexterm>g_option_context_get_help_enabled <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_option_context_get_ignore_unknown_options</primary></indexterm>g_option_context_get_ignore_unknown_options <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_option_context_get_main_group</primary></indexterm>g_option_context_get_main_group <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_option_context_new</primary></indexterm>g_option_context_new <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_option_context_parse</primary></indexterm>g_option_context_parse <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_option_context_set_help_enabled</primary></indexterm>g_option_context_set_help_enabled <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_option_context_set_ignore_unknown_options</primary></indexterm>g_option_context_set_ignore_unknown_options <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_option_context_set_main_group</primary></indexterm>g_option_context_set_main_group <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_option_error_quark</primary></indexterm>g_option_error_quark <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_option_group_add_entries</primary></indexterm>g_option_group_add_entries <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_option_group_free</primary></indexterm>g_option_group_free <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_option_group_new</primary></indexterm>g_option_group_new <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_option_group_set_error_hook</primary></indexterm>g_option_group_set_error_hook <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_option_group_set_parse_hooks</primary></indexterm>g_option_group_set_parse_hooks <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_option_group_set_translate_func</primary></indexterm>g_option_group_set_translate_func <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_option_group_set_translation_domain</primary></indexterm>g_option_group_set_translation_domain <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>
</SECT2>
<!-- debug: database interface name Glib Datasets -->
<SECT2>
<!--libgroup-->
<TITLE>Glib Datasets</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Interfaces for Glib Datasets</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic functions
for Glib Datasets specified in <XREF linkend="tbl-libglib-2.0-9-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<TABLE id="tbl-libglib-2.0-9-ints">
<TITLE>libglib-2.0 - Glib Datasets Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>g_dataset_destroy</primary></indexterm>g_dataset_destroy <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_dataset_foreach</primary></indexterm>g_dataset_foreach <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_dataset_id_get_data</primary></indexterm>g_dataset_id_get_data <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_dataset_id_remove_no_notify</primary></indexterm>g_dataset_id_remove_no_notify <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_dataset_id_set_data_full</primary></indexterm>g_dataset_id_set_data_full <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>
</SECT2>
<!-- debug: database interface name Glib Date and Time Functions -->
<SECT2>
<!--libgroup-->
<TITLE>Glib Date and Time Functions</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Interfaces for Glib Date and Time Functions</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic functions
for Glib Date and Time Functions specified in <XREF linkend="tbl-libglib-2.0-10-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<TABLE id="tbl-libglib-2.0-10-ints">
<TITLE>libglib-2.0 - Glib Date and Time Functions Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>g_date_add_days</primary></indexterm>g_date_add_days <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_date_add_months</primary></indexterm>g_date_add_months <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_date_add_years</primary></indexterm>g_date_add_years <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_date_clamp</primary></indexterm>g_date_clamp <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_date_clear</primary></indexterm>g_date_clear <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_date_compare</primary></indexterm>g_date_compare <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_date_days_between</primary></indexterm>g_date_days_between <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_date_free</primary></indexterm>g_date_free <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_date_get_day</primary></indexterm>g_date_get_day <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_date_get_day_of_year</primary></indexterm>g_date_get_day_of_year <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_date_get_days_in_month</primary></indexterm>g_date_get_days_in_month <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_date_get_iso8601_week_of_year</primary></indexterm>g_date_get_iso8601_week_of_year <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_date_get_julian</primary></indexterm>g_date_get_julian <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_date_get_monday_week_of_year</primary></indexterm>g_date_get_monday_week_of_year <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_date_get_monday_weeks_in_year</primary></indexterm>g_date_get_monday_weeks_in_year <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_date_get_month</primary></indexterm>g_date_get_month <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_date_get_sunday_week_of_year</primary></indexterm>g_date_get_sunday_week_of_year <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_date_get_sunday_weeks_in_year</primary></indexterm>g_date_get_sunday_weeks_in_year <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_date_get_weekday</primary></indexterm>g_date_get_weekday <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_date_get_year</primary></indexterm>g_date_get_year <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_date_is_first_of_month</primary></indexterm>g_date_is_first_of_month <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_date_is_last_of_month</primary></indexterm>g_date_is_last_of_month <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_date_is_leap_year</primary></indexterm>g_date_is_leap_year <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_date_new</primary></indexterm>g_date_new <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_date_new_dmy</primary></indexterm>g_date_new_dmy <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_date_new_julian</primary></indexterm>g_date_new_julian <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_date_order</primary></indexterm>g_date_order <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_date_set_day</primary></indexterm>g_date_set_day <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_date_set_dmy</primary></indexterm>g_date_set_dmy <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_date_set_julian</primary></indexterm>g_date_set_julian <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_date_set_month</primary></indexterm>g_date_set_month <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_date_set_parse</primary></indexterm>g_date_set_parse <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_date_set_time</primary></indexterm>g_date_set_time <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_date_set_year</primary></indexterm>g_date_set_year <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_date_strftime</primary></indexterm>g_date_strftime <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_date_subtract_days</primary></indexterm>g_date_subtract_days <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_date_subtract_months</primary></indexterm>g_date_subtract_months <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_date_subtract_years</primary></indexterm>g_date_subtract_years <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_date_to_struct_tm</primary></indexterm>g_date_to_struct_tm <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_date_valid</primary></indexterm>g_date_valid <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_date_valid_day</primary></indexterm>g_date_valid_day <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_date_valid_dmy</primary></indexterm>g_date_valid_dmy <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_date_valid_julian</primary></indexterm>g_date_valid_julian <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_date_valid_month</primary></indexterm>g_date_valid_month <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_date_valid_weekday</primary></indexterm>g_date_valid_weekday <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_date_valid_year</primary></indexterm>g_date_valid_year <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_get_current_time</primary></indexterm>g_get_current_time <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_time_val_add</primary></indexterm>g_time_val_add <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_usleep</primary></indexterm>g_usleep <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>
</SECT2>
<!-- debug: database interface name Glib Double-Ended Queues -->
<SECT2>
<!--libgroup-->
<TITLE>Glib Double-Ended Queues</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Interfaces for Glib Double-Ended Queues</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic functions
for Glib Double-Ended Queues specified in <XREF linkend="tbl-libglib-2.0-11-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<TABLE id="tbl-libglib-2.0-11-ints">
<TITLE>libglib-2.0 - Glib Double-Ended Queues Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>g_queue_copy</primary></indexterm>g_queue_copy <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_queue_delete_link</primary></indexterm>g_queue_delete_link <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_queue_find</primary></indexterm>g_queue_find <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_queue_find_custom</primary></indexterm>g_queue_find_custom <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_queue_foreach</primary></indexterm>g_queue_foreach <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_queue_free</primary></indexterm>g_queue_free <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_queue_get_length</primary></indexterm>g_queue_get_length <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_queue_index</primary></indexterm>g_queue_index <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_queue_insert_after</primary></indexterm>g_queue_insert_after <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_queue_insert_before</primary></indexterm>g_queue_insert_before <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_queue_insert_sorted</primary></indexterm>g_queue_insert_sorted <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_queue_is_empty</primary></indexterm>g_queue_is_empty <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_queue_link_index</primary></indexterm>g_queue_link_index <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_queue_new</primary></indexterm>g_queue_new <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_queue_peek_head</primary></indexterm>g_queue_peek_head <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_queue_peek_head_link</primary></indexterm>g_queue_peek_head_link <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_queue_peek_nth</primary></indexterm>g_queue_peek_nth <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_queue_peek_nth_link</primary></indexterm>g_queue_peek_nth_link <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_queue_peek_tail</primary></indexterm>g_queue_peek_tail <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_queue_peek_tail_link</primary></indexterm>g_queue_peek_tail_link <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_queue_pop_head</primary></indexterm>g_queue_pop_head <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_queue_pop_head_link</primary></indexterm>g_queue_pop_head_link <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_queue_pop_nth</primary></indexterm>g_queue_pop_nth <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_queue_pop_nth_link</primary></indexterm>g_queue_pop_nth_link <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_queue_pop_tail</primary></indexterm>g_queue_pop_tail <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_queue_pop_tail_link</primary></indexterm>g_queue_pop_tail_link <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_queue_push_head</primary></indexterm>g_queue_push_head <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_queue_push_head_link</primary></indexterm>g_queue_push_head_link <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_queue_push_nth</primary></indexterm>g_queue_push_nth <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_queue_push_nth_link</primary></indexterm>g_queue_push_nth_link <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_queue_push_tail</primary></indexterm>g_queue_push_tail <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_queue_push_tail_link</primary></indexterm>g_queue_push_tail_link <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_queue_remove</primary></indexterm>g_queue_remove <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_queue_remove_all</primary></indexterm>g_queue_remove_all <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_queue_reverse</primary></indexterm>g_queue_reverse <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_queue_sort</primary></indexterm>g_queue_sort <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_queue_unlink</primary></indexterm>g_queue_unlink <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>
</SECT2>
<!-- debug: database interface name Glib Doubly-Linked Lists -->
<SECT2>
<!--libgroup-->
<TITLE>Glib Doubly-Linked Lists</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Interfaces for Glib Doubly-Linked Lists</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic functions
for Glib Doubly-Linked Lists specified in <XREF linkend="tbl-libglib-2.0-12-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<TABLE id="tbl-libglib-2.0-12-ints">
<TITLE>libglib-2.0 - Glib Doubly-Linked Lists Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>g_list_alloc</primary></indexterm>g_list_alloc <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_list_append</primary></indexterm>g_list_append <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_list_concat</primary></indexterm>g_list_concat <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_list_copy</primary></indexterm>g_list_copy <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_list_delete_link</primary></indexterm>g_list_delete_link <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_list_find</primary></indexterm>g_list_find <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_list_find_custom</primary></indexterm>g_list_find_custom <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_list_first</primary></indexterm>g_list_first <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_list_foreach</primary></indexterm>g_list_foreach <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_list_free</primary></indexterm>g_list_free <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_list_free_1</primary></indexterm>g_list_free_1 <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_list_index</primary></indexterm>g_list_index <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_list_insert</primary></indexterm>g_list_insert <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_list_insert_before</primary></indexterm>g_list_insert_before <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_list_insert_sorted</primary></indexterm>g_list_insert_sorted <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_list_last</primary></indexterm>g_list_last <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_list_length</primary></indexterm>g_list_length <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_list_nth</primary></indexterm>g_list_nth <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_list_nth_data</primary></indexterm>g_list_nth_data <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_list_nth_prev</primary></indexterm>g_list_nth_prev <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_list_pop_allocator</primary></indexterm>g_list_pop_allocator <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_list_position</primary></indexterm>g_list_position <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_list_prepend</primary></indexterm>g_list_prepend <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_list_push_allocator</primary></indexterm>g_list_push_allocator <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_list_remove</primary></indexterm>g_list_remove <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_list_remove_all</primary></indexterm>g_list_remove_all <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_list_remove_link</primary></indexterm>g_list_remove_link <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_list_reverse</primary></indexterm>g_list_reverse <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_list_sort</primary></indexterm>g_list_sort <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_list_sort_with_data</primary></indexterm>g_list_sort_with_data <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>
</SECT2>
<!-- debug: database interface name Glib Error Reporting -->
<SECT2>
<!--libgroup-->
<TITLE>Glib Error Reporting</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Interfaces for Glib Error Reporting</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic functions
for Glib Error Reporting specified in <XREF linkend="tbl-libglib-2.0-13-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<TABLE id="tbl-libglib-2.0-13-ints">
<TITLE>libglib-2.0 - Glib Error Reporting Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>g_clear_error</primary></indexterm>g_clear_error <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_error_copy</primary></indexterm>g_error_copy <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_error_free</primary></indexterm>g_error_free <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_error_matches</primary></indexterm>g_error_matches <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_error_new</primary></indexterm>g_error_new <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_error_new_literal</primary></indexterm>g_error_new_literal <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_propagate_error</primary></indexterm>g_propagate_error <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_set_error</primary></indexterm>g_set_error <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>
</SECT2>
<!-- debug: database interface name Glib File Utilities -->
<SECT2>
<!--libgroup-->
<TITLE>Glib File Utilities</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Interfaces for Glib File Utilities</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic functions
for Glib File Utilities specified in <XREF linkend="tbl-libglib-2.0-14-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<TABLE id="tbl-libglib-2.0-14-ints">
<TITLE>libglib-2.0 - Glib File Utilities Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>g_dir_close</primary></indexterm>g_dir_close <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_dir_open</primary></indexterm>g_dir_open <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_dir_read_name</primary></indexterm>g_dir_read_name <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_dir_rewind</primary></indexterm>g_dir_rewind <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_file_error_from_errno</primary></indexterm>g_file_error_from_errno <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_file_error_quark</primary></indexterm>g_file_error_quark <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_file_get_contents</primary></indexterm>g_file_get_contents <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_file_open_tmp</primary></indexterm>g_file_open_tmp <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_file_read_link</primary></indexterm>g_file_read_link <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_file_set_contents</primary></indexterm>g_file_set_contents <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_file_test</primary></indexterm>g_file_test <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_mapped_file_free</primary></indexterm>g_mapped_file_free <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_mapped_file_get_contents</primary></indexterm>g_mapped_file_get_contents <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_mapped_file_get_length</primary></indexterm>g_mapped_file_get_length <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_mapped_file_new</primary></indexterm>g_mapped_file_new <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_mkstemp</primary></indexterm>g_mkstemp <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>
</SECT2>
<!-- debug: database interface name Glib Glob-Style Pattern Matching -->
<SECT2>
<!--libgroup-->
<TITLE>Glib Glob-Style Pattern Matching</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Interfaces for Glib Glob-Style Pattern Matching</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic functions
for Glib Glob-Style Pattern Matching specified in <XREF linkend="tbl-libglib-2.0-15-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<TABLE id="tbl-libglib-2.0-15-ints">
<TITLE>libglib-2.0 - Glib Glob-Style Pattern Matching Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>g_pattern_match</primary></indexterm>g_pattern_match <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_pattern_match_simple</primary></indexterm>g_pattern_match_simple <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_pattern_match_string</primary></indexterm>g_pattern_match_string <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_pattern_spec_equal</primary></indexterm>g_pattern_spec_equal <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_pattern_spec_free</primary></indexterm>g_pattern_spec_free <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_pattern_spec_new</primary></indexterm>g_pattern_spec_new <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>
</SECT2>
<!-- debug: database interface name Glib Hash Tables -->
<SECT2>
<!--libgroup-->
<TITLE>Glib Hash Tables</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Interfaces for Glib Hash Tables</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic functions
for Glib Hash Tables specified in <XREF linkend="tbl-libglib-2.0-16-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<TABLE id="tbl-libglib-2.0-16-ints">
<TITLE>libglib-2.0 - Glib Hash Tables Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>g_direct_equal</primary></indexterm>g_direct_equal <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_direct_hash</primary></indexterm>g_direct_hash <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_hash_table_destroy</primary></indexterm>g_hash_table_destroy <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_hash_table_find</primary></indexterm>g_hash_table_find <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_hash_table_foreach</primary></indexterm>g_hash_table_foreach <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_hash_table_foreach_remove</primary></indexterm>g_hash_table_foreach_remove <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_hash_table_foreach_steal</primary></indexterm>g_hash_table_foreach_steal <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_hash_table_insert</primary></indexterm>g_hash_table_insert <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_hash_table_lookup</primary></indexterm>g_hash_table_lookup <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_hash_table_lookup_extended</primary></indexterm>g_hash_table_lookup_extended <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_hash_table_new</primary></indexterm>g_hash_table_new <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_hash_table_new_full</primary></indexterm>g_hash_table_new_full <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_hash_table_remove</primary></indexterm>g_hash_table_remove <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_hash_table_replace</primary></indexterm>g_hash_table_replace <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_hash_table_size</primary></indexterm>g_hash_table_size <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_hash_table_steal</primary></indexterm>g_hash_table_steal <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_int_equal</primary></indexterm>g_int_equal <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_int_hash</primary></indexterm>g_int_hash <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_str_equal</primary></indexterm>g_str_equal <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_str_hash</primary></indexterm>g_str_hash <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>
</SECT2>
<!-- debug: database interface name Glib Hook Functions -->
<SECT2>
<!--libgroup-->
<TITLE>Glib Hook Functions</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Interfaces for Glib Hook Functions</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic functions
for Glib Hook Functions specified in <XREF linkend="tbl-libglib-2.0-17-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<TABLE id="tbl-libglib-2.0-17-ints">
<TITLE>libglib-2.0 - Glib Hook Functions Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>g_hook_alloc</primary></indexterm>g_hook_alloc <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_hook_compare_ids</primary></indexterm>g_hook_compare_ids <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_hook_destroy</primary></indexterm>g_hook_destroy <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_hook_destroy_link</primary></indexterm>g_hook_destroy_link <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_hook_find</primary></indexterm>g_hook_find <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_hook_find_data</primary></indexterm>g_hook_find_data <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_hook_find_func</primary></indexterm>g_hook_find_func <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_hook_find_func_data</primary></indexterm>g_hook_find_func_data <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_hook_first_valid</primary></indexterm>g_hook_first_valid <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_hook_free</primary></indexterm>g_hook_free <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_hook_get</primary></indexterm>g_hook_get <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_hook_insert_before</primary></indexterm>g_hook_insert_before <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_hook_insert_sorted</primary></indexterm>g_hook_insert_sorted <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_hook_list_clear</primary></indexterm>g_hook_list_clear <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_hook_list_init</primary></indexterm>g_hook_list_init <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_hook_list_invoke</primary></indexterm>g_hook_list_invoke <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_hook_list_invoke_check</primary></indexterm>g_hook_list_invoke_check <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_hook_list_marshal</primary></indexterm>g_hook_list_marshal <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_hook_list_marshal_check</primary></indexterm>g_hook_list_marshal_check <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_hook_next_valid</primary></indexterm>g_hook_next_valid <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_hook_prepend</primary></indexterm>g_hook_prepend <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_hook_ref</primary></indexterm>g_hook_ref <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_hook_unref</primary></indexterm>g_hook_unref <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>
</SECT2>
<!-- debug: database interface name Glib IO Channels -->
<SECT2>
<!--libgroup-->
<TITLE>Glib IO Channels</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Interfaces for Glib IO Channels</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic functions
for Glib IO Channels specified in <XREF linkend="tbl-libglib-2.0-18-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<TABLE id="tbl-libglib-2.0-18-ints">
<TITLE>libglib-2.0 - Glib IO Channels Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>g_io_add_watch</primary></indexterm>g_io_add_watch <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_io_add_watch_full</primary></indexterm>g_io_add_watch_full <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_io_channel_error_from_errno</primary></indexterm>g_io_channel_error_from_errno <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_io_channel_error_quark</primary></indexterm>g_io_channel_error_quark <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_io_channel_flush</primary></indexterm>g_io_channel_flush <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_io_channel_get_buffer_condition</primary></indexterm>g_io_channel_get_buffer_condition <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_io_channel_get_buffer_size</primary></indexterm>g_io_channel_get_buffer_size <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_io_channel_get_buffered</primary></indexterm>g_io_channel_get_buffered <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_io_channel_get_close_on_unref</primary></indexterm>g_io_channel_get_close_on_unref <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_io_channel_get_encoding</primary></indexterm>g_io_channel_get_encoding <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_io_channel_get_flags</primary></indexterm>g_io_channel_get_flags <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_io_channel_get_line_term</primary></indexterm>g_io_channel_get_line_term <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_io_channel_init</primary></indexterm>g_io_channel_init <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_io_channel_new_file</primary></indexterm>g_io_channel_new_file <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_io_channel_read_chars</primary></indexterm>g_io_channel_read_chars <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_io_channel_read_line</primary></indexterm>g_io_channel_read_line <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_io_channel_read_line_string</primary></indexterm>g_io_channel_read_line_string <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_io_channel_read_to_end</primary></indexterm>g_io_channel_read_to_end <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_io_channel_read_unichar</primary></indexterm>g_io_channel_read_unichar <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_io_channel_ref</primary></indexterm>g_io_channel_ref <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_io_channel_seek_position</primary></indexterm>g_io_channel_seek_position <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_io_channel_set_buffer_size</primary></indexterm>g_io_channel_set_buffer_size <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_io_channel_set_buffered</primary></indexterm>g_io_channel_set_buffered <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_io_channel_set_close_on_unref</primary></indexterm>g_io_channel_set_close_on_unref <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_io_channel_set_encoding</primary></indexterm>g_io_channel_set_encoding <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_io_channel_set_flags</primary></indexterm>g_io_channel_set_flags <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_io_channel_set_line_term</primary></indexterm>g_io_channel_set_line_term <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_io_channel_shutdown</primary></indexterm>g_io_channel_shutdown <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_io_channel_unix_get_fd</primary></indexterm>g_io_channel_unix_get_fd <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_io_channel_unix_new</primary></indexterm>g_io_channel_unix_new <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_io_channel_unref</primary></indexterm>g_io_channel_unref <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_io_channel_write_chars</primary></indexterm>g_io_channel_write_chars <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_io_channel_write_unichar</primary></indexterm>g_io_channel_write_unichar <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_io_create_watch</primary></indexterm>g_io_create_watch <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>
</SECT2>
<!-- debug: database interface name Glib Internationalization -->
<SECT2>
<!--libgroup-->
<TITLE>Glib Internationalization</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Interfaces for Glib Internationalization</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic functions
for Glib Internationalization specified in <XREF linkend="tbl-libglib-2.0-19-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<TABLE id="tbl-libglib-2.0-19-ints">
<TITLE>libglib-2.0 - Glib Internationalization Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>g_get_language_names</primary></indexterm>g_get_language_names <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_strip_context</primary></indexterm>g_strip_context <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>
</SECT2>
<!-- debug: database interface name Glib Key-Value File Parser -->
<SECT2>
<!--libgroup-->
<TITLE>Glib Key-Value File Parser</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Interfaces for Glib Key-Value File Parser</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic functions
for Glib Key-Value File Parser specified in <XREF linkend="tbl-libglib-2.0-20-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<TABLE id="tbl-libglib-2.0-20-ints">
<TITLE>libglib-2.0 - Glib Key-Value File Parser Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>g_key_file_error_quark</primary></indexterm>g_key_file_error_quark <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_key_file_free</primary></indexterm>g_key_file_free <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_key_file_get_boolean</primary></indexterm>g_key_file_get_boolean <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_key_file_get_boolean_list</primary></indexterm>g_key_file_get_boolean_list <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_key_file_get_comment</primary></indexterm>g_key_file_get_comment <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_key_file_get_groups</primary></indexterm>g_key_file_get_groups <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_key_file_get_integer</primary></indexterm>g_key_file_get_integer <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_key_file_get_integer_list</primary></indexterm>g_key_file_get_integer_list <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_key_file_get_keys</primary></indexterm>g_key_file_get_keys <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_key_file_get_locale_string</primary></indexterm>g_key_file_get_locale_string <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_key_file_get_locale_string_list</primary></indexterm>g_key_file_get_locale_string_list <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_key_file_get_start_group</primary></indexterm>g_key_file_get_start_group <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_key_file_get_string</primary></indexterm>g_key_file_get_string <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_key_file_get_string_list</primary></indexterm>g_key_file_get_string_list <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_key_file_get_value</primary></indexterm>g_key_file_get_value <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_key_file_has_group</primary></indexterm>g_key_file_has_group <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_key_file_has_key</primary></indexterm>g_key_file_has_key <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_key_file_load_from_data</primary></indexterm>g_key_file_load_from_data <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_key_file_load_from_data_dirs</primary></indexterm>g_key_file_load_from_data_dirs <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_key_file_load_from_file</primary></indexterm>g_key_file_load_from_file <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_key_file_new</primary></indexterm>g_key_file_new <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_key_file_remove_comment</primary></indexterm>g_key_file_remove_comment <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_key_file_remove_group</primary></indexterm>g_key_file_remove_group <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_key_file_remove_key</primary></indexterm>g_key_file_remove_key <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_key_file_set_boolean</primary></indexterm>g_key_file_set_boolean <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_key_file_set_boolean_list</primary></indexterm>g_key_file_set_boolean_list <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_key_file_set_comment</primary></indexterm>g_key_file_set_comment <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_key_file_set_integer</primary></indexterm>g_key_file_set_integer <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_key_file_set_integer_list</primary></indexterm>g_key_file_set_integer_list <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_key_file_set_list_separator</primary></indexterm>g_key_file_set_list_separator <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_key_file_set_locale_string</primary></indexterm>g_key_file_set_locale_string <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_key_file_set_locale_string_list</primary></indexterm>g_key_file_set_locale_string_list <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_key_file_set_string</primary></indexterm>g_key_file_set_string <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_key_file_set_string_list</primary></indexterm>g_key_file_set_string_list <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_key_file_set_value</primary></indexterm>g_key_file_set_value <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_key_file_to_data</primary></indexterm>g_key_file_to_data <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>
</SECT2>
<!-- debug: database interface name Glib Keyed Data Lists -->
<SECT2>
<!--libgroup-->
<TITLE>Glib Keyed Data Lists</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Interfaces for Glib Keyed Data Lists</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic functions
for Glib Keyed Data Lists specified in <XREF linkend="tbl-libglib-2.0-21-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<TABLE id="tbl-libglib-2.0-21-ints">
<TITLE>libglib-2.0 - Glib Keyed Data Lists Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>g_datalist_clear</primary></indexterm>g_datalist_clear <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_datalist_foreach</primary></indexterm>g_datalist_foreach <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_datalist_get_flags</primary></indexterm>g_datalist_get_flags <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_datalist_id_get_data</primary></indexterm>g_datalist_id_get_data <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_datalist_id_remove_no_notify</primary></indexterm>g_datalist_id_remove_no_notify <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_datalist_id_set_data_full</primary></indexterm>g_datalist_id_set_data_full <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_datalist_init</primary></indexterm>g_datalist_init <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_datalist_set_flags</primary></indexterm>g_datalist_set_flags <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_datalist_unset_flags</primary></indexterm>g_datalist_unset_flags <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>
</SECT2>
<!-- debug: database interface name Glib Lexical Scanner -->
<SECT2>
<!--libgroup-->
<TITLE>Glib Lexical Scanner</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Interfaces for Glib Lexical Scanner</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic functions
for Glib Lexical Scanner specified in <XREF linkend="tbl-libglib-2.0-22-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<TABLE id="tbl-libglib-2.0-22-ints">
<TITLE>libglib-2.0 - Glib Lexical Scanner Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>g_scanner_cur_line</primary></indexterm>g_scanner_cur_line <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_scanner_cur_position</primary></indexterm>g_scanner_cur_position <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_scanner_cur_token</primary></indexterm>g_scanner_cur_token <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_scanner_cur_value</primary></indexterm>g_scanner_cur_value <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_scanner_destroy</primary></indexterm>g_scanner_destroy <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_scanner_eof</primary></indexterm>g_scanner_eof <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_scanner_error</primary></indexterm>g_scanner_error <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_scanner_get_next_token</primary></indexterm>g_scanner_get_next_token <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_scanner_input_file</primary></indexterm>g_scanner_input_file <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_scanner_input_text</primary></indexterm>g_scanner_input_text <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_scanner_lookup_symbol</primary></indexterm>g_scanner_lookup_symbol <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_scanner_new</primary></indexterm>g_scanner_new <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_scanner_peek_next_token</primary></indexterm>g_scanner_peek_next_token <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_scanner_scope_add_symbol</primary></indexterm>g_scanner_scope_add_symbol <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_scanner_scope_foreach_symbol</primary></indexterm>g_scanner_scope_foreach_symbol <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_scanner_scope_lookup_symbol</primary></indexterm>g_scanner_scope_lookup_symbol <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_scanner_scope_remove_symbol</primary></indexterm>g_scanner_scope_remove_symbol <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_scanner_set_scope</primary></indexterm>g_scanner_set_scope <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_scanner_sync_file_offset</primary></indexterm>g_scanner_sync_file_offset <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_scanner_unexp_token</primary></indexterm>g_scanner_unexp_token <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_scanner_warn</primary></indexterm>g_scanner_warn <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>
</SECT2>
<!-- debug: database interface name Glib Memory Allocation -->
<SECT2>
<!--libgroup-->
<TITLE>Glib Memory Allocation</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Interfaces for Glib Memory Allocation</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic functions
for Glib Memory Allocation specified in <XREF linkend="tbl-libglib-2.0-23-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<TABLE id="tbl-libglib-2.0-23-ints">
<TITLE>libglib-2.0 - Glib Memory Allocation Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>g_free</primary></indexterm>g_free <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_malloc</primary></indexterm>g_malloc <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_malloc0</primary></indexterm>g_malloc0 <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_mem_is_system_malloc</primary></indexterm>g_mem_is_system_malloc <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_mem_profile</primary></indexterm>g_mem_profile <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_mem_set_vtable</primary></indexterm>g_mem_set_vtable <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_memdup</primary></indexterm>g_memdup <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_realloc</primary></indexterm>g_realloc <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_try_malloc</primary></indexterm>g_try_malloc <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_try_realloc</primary></indexterm>g_try_realloc <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>
</SECT2>
<!-- debug: database interface name Glib Memory Allocators -->
<SECT2>
<!--libgroup-->
<TITLE>Glib Memory Allocators</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Interfaces for Glib Memory Allocators</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic functions
for Glib Memory Allocators specified in <XREF linkend="tbl-libglib-2.0-24-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<TABLE id="tbl-libglib-2.0-24-ints">
<TITLE>libglib-2.0 - Glib Memory Allocators Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>g_allocator_free</primary></indexterm>g_allocator_free <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_allocator_new</primary></indexterm>g_allocator_new <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>
</SECT2>
<!-- debug: database interface name Glib Memory Chunks -->
<SECT2>
<!--libgroup-->
<TITLE>Glib Memory Chunks</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Interfaces for Glib Memory Chunks</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic functions
for Glib Memory Chunks specified in <XREF linkend="tbl-libglib-2.0-25-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<TABLE id="tbl-libglib-2.0-25-ints">
<TITLE>libglib-2.0 - Glib Memory Chunks Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>g_blow_chunks</primary></indexterm>g_blow_chunks <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_mem_chunk_alloc</primary></indexterm>g_mem_chunk_alloc <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_mem_chunk_alloc0</primary></indexterm>g_mem_chunk_alloc0 <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_mem_chunk_clean</primary></indexterm>g_mem_chunk_clean <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_mem_chunk_destroy</primary></indexterm>g_mem_chunk_destroy <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_mem_chunk_free</primary></indexterm>g_mem_chunk_free <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_mem_chunk_info</primary></indexterm>g_mem_chunk_info <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_mem_chunk_new</primary></indexterm>g_mem_chunk_new <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_mem_chunk_print</primary></indexterm>g_mem_chunk_print <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_mem_chunk_reset</primary></indexterm>g_mem_chunk_reset <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>
</SECT2>
<!-- debug: database interface name Glib Message Logging -->
<SECT2>
<!--libgroup-->
<TITLE>Glib Message Logging</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Interfaces for Glib Message Logging</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic functions
for Glib Message Logging specified in <XREF linkend="tbl-libglib-2.0-26-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<TABLE id="tbl-libglib-2.0-26-ints">
<TITLE>libglib-2.0 - Glib Message Logging Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>g_log</primary></indexterm>g_log <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_log_default_handler</primary></indexterm>g_log_default_handler <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_log_remove_handler</primary></indexterm>g_log_remove_handler <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_log_set_always_fatal</primary></indexterm>g_log_set_always_fatal <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_log_set_default_handler</primary></indexterm>g_log_set_default_handler <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_log_set_fatal_mask</primary></indexterm>g_log_set_fatal_mask <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_log_set_handler</primary></indexterm>g_log_set_handler <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_logv</primary></indexterm>g_logv <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>
</SECT2>
<!-- debug: database interface name Glib Message Output and Debugging Functions -->
<SECT2>
<!--libgroup-->
<TITLE>Glib Message Output and Debugging Functions</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Interfaces for Glib Message Output and Debugging Functions</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic functions
for Glib Message Output and Debugging Functions specified in <XREF linkend="tbl-libglib-2.0-27-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<TABLE id="tbl-libglib-2.0-27-ints">
<TITLE>libglib-2.0 - Glib Message Output and Debugging Functions Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>g_on_error_query</primary></indexterm>g_on_error_query <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_on_error_stack_trace</primary></indexterm>g_on_error_stack_trace <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_print</primary></indexterm>g_print <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_printerr</primary></indexterm>g_printerr <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_set_print_handler</primary></indexterm>g_set_print_handler <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_set_printerr_handler</primary></indexterm>g_set_printerr_handler <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>
</SECT2>
<!-- debug: database interface name Glib Miscellaneous Utility Functions -->
<SECT2>
<!--libgroup-->
<TITLE>Glib Miscellaneous Utility Functions</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Interfaces for Glib Miscellaneous Utility Functions</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic functions
for Glib Miscellaneous Utility Functions specified in <XREF linkend="tbl-libglib-2.0-28-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<TABLE id="tbl-libglib-2.0-28-ints">
<TITLE>libglib-2.0 - Glib Miscellaneous Utility Functions Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>g_atexit</primary></indexterm>g_atexit <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_bit_nth_lsf</primary></indexterm>g_bit_nth_lsf <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_bit_nth_msf</primary></indexterm>g_bit_nth_msf <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_bit_storage</primary></indexterm>g_bit_storage <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_build_filename</primary></indexterm>g_build_filename <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_build_filenamev</primary></indexterm>g_build_filenamev <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_build_path</primary></indexterm>g_build_path <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_build_pathv</primary></indexterm>g_build_pathv <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_find_program_in_path</primary></indexterm>g_find_program_in_path <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_get_application_name</primary></indexterm>g_get_application_name <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_get_current_dir</primary></indexterm>g_get_current_dir <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_get_home_dir</primary></indexterm>g_get_home_dir <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_get_host_name</primary></indexterm>g_get_host_name <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_get_prgname</primary></indexterm>g_get_prgname <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_get_real_name</primary></indexterm>g_get_real_name <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_get_system_config_dirs</primary></indexterm>g_get_system_config_dirs <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_get_system_data_dirs</primary></indexterm>g_get_system_data_dirs <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_get_tmp_dir</primary></indexterm>g_get_tmp_dir <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_get_user_cache_dir</primary></indexterm>g_get_user_cache_dir <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_get_user_config_dir</primary></indexterm>g_get_user_config_dir <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_get_user_data_dir</primary></indexterm>g_get_user_data_dir <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_get_user_name</primary></indexterm>g_get_user_name <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_getenv</primary></indexterm>g_getenv <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_listenv</primary></indexterm>g_listenv <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_nullify_pointer</primary></indexterm>g_nullify_pointer <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_parse_debug_string</primary></indexterm>g_parse_debug_string <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_path_get_basename</primary></indexterm>g_path_get_basename <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_path_get_dirname</primary></indexterm>g_path_get_dirname <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_path_is_absolute</primary></indexterm>g_path_is_absolute <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_path_skip_root</primary></indexterm>g_path_skip_root <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_qsort_with_data</primary></indexterm>g_qsort_with_data <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_set_application_name</primary></indexterm>g_set_application_name <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_set_prgname</primary></indexterm>g_set_prgname <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_setenv</primary></indexterm>g_setenv <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_spaced_primes_closest</primary></indexterm>g_spaced_primes_closest <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_unsetenv</primary></indexterm>g_unsetenv <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>
</SECT2>
<!-- debug: database interface name Glib N-ary Trees -->
<SECT2>
<!--libgroup-->
<TITLE>Glib N-ary Trees</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Interfaces for Glib N-ary Trees</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic functions
for Glib N-ary Trees specified in <XREF linkend="tbl-libglib-2.0-29-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<TABLE id="tbl-libglib-2.0-29-ints">
<TITLE>libglib-2.0 - Glib N-ary Trees Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>g_node_child_index</primary></indexterm>g_node_child_index <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_node_child_position</primary></indexterm>g_node_child_position <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_node_children_foreach</primary></indexterm>g_node_children_foreach <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_node_copy</primary></indexterm>g_node_copy <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_node_copy_deep</primary></indexterm>g_node_copy_deep <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_node_depth</primary></indexterm>g_node_depth <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_node_destroy</primary></indexterm>g_node_destroy <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_node_find</primary></indexterm>g_node_find <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_node_find_child</primary></indexterm>g_node_find_child <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_node_first_sibling</primary></indexterm>g_node_first_sibling <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_node_get_root</primary></indexterm>g_node_get_root <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_node_insert</primary></indexterm>g_node_insert <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_node_insert_after</primary></indexterm>g_node_insert_after <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_node_insert_before</primary></indexterm>g_node_insert_before <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_node_is_ancestor</primary></indexterm>g_node_is_ancestor <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_node_last_child</primary></indexterm>g_node_last_child <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_node_last_sibling</primary></indexterm>g_node_last_sibling <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_node_max_height</primary></indexterm>g_node_max_height <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_node_n_children</primary></indexterm>g_node_n_children <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_node_n_nodes</primary></indexterm>g_node_n_nodes <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_node_new</primary></indexterm>g_node_new <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_node_nth_child</primary></indexterm>g_node_nth_child <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_node_pop_allocator</primary></indexterm>g_node_pop_allocator <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_node_prepend</primary></indexterm>g_node_prepend <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_node_push_allocator</primary></indexterm>g_node_push_allocator <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_node_reverse_children</primary></indexterm>g_node_reverse_children <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_node_traverse</primary></indexterm>g_node_traverse <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_node_unlink</primary></indexterm>g_node_unlink <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>
</SECT2>
<!-- debug: database interface name Glib Pointer Arrays -->
<SECT2>
<!--libgroup-->
<TITLE>Glib Pointer Arrays</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Interfaces for Glib Pointer Arrays</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic functions
for Glib Pointer Arrays specified in <XREF linkend="tbl-libglib-2.0-30-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<TABLE id="tbl-libglib-2.0-30-ints">
<TITLE>libglib-2.0 - Glib Pointer Arrays Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>g_ptr_array_add</primary></indexterm>g_ptr_array_add <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_ptr_array_foreach</primary></indexterm>g_ptr_array_foreach <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_ptr_array_free</primary></indexterm>g_ptr_array_free <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_ptr_array_new</primary></indexterm>g_ptr_array_new <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_ptr_array_remove</primary></indexterm>g_ptr_array_remove <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_ptr_array_remove_fast</primary></indexterm>g_ptr_array_remove_fast <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_ptr_array_remove_index</primary></indexterm>g_ptr_array_remove_index <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_ptr_array_remove_index_fast</primary></indexterm>g_ptr_array_remove_index_fast <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_ptr_array_remove_range</primary></indexterm>g_ptr_array_remove_range <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_ptr_array_set_size</primary></indexterm>g_ptr_array_set_size <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_ptr_array_sized_new</primary></indexterm>g_ptr_array_sized_new <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_ptr_array_sort</primary></indexterm>g_ptr_array_sort <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_ptr_array_sort_with_data</primary></indexterm>g_ptr_array_sort_with_data <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>
</SECT2>
<!-- debug: database interface name Glib Quarks -->
<SECT2>
<!--libgroup-->
<TITLE>Glib Quarks</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Interfaces for Glib Quarks</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic functions
for Glib Quarks specified in <XREF linkend="tbl-libglib-2.0-31-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<TABLE id="tbl-libglib-2.0-31-ints">
<TITLE>libglib-2.0 - Glib Quarks Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>g_quark_from_static_string</primary></indexterm>g_quark_from_static_string <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_quark_from_string</primary></indexterm>g_quark_from_string <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_quark_to_string</primary></indexterm>g_quark_to_string <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_quark_try_string</primary></indexterm>g_quark_try_string <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>
</SECT2>
<!-- debug: database interface name Glib Random Numbers -->
<SECT2>
<!--libgroup-->
<TITLE>Glib Random Numbers</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Interfaces for Glib Random Numbers</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic functions
for Glib Random Numbers specified in <XREF linkend="tbl-libglib-2.0-32-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<TABLE id="tbl-libglib-2.0-32-ints">
<TITLE>libglib-2.0 - Glib Random Numbers Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>g_rand_copy</primary></indexterm>g_rand_copy <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_rand_double</primary></indexterm>g_rand_double <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_rand_double_range</primary></indexterm>g_rand_double_range <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_rand_free</primary></indexterm>g_rand_free <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_rand_int</primary></indexterm>g_rand_int <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_rand_int_range</primary></indexterm>g_rand_int_range <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_rand_new</primary></indexterm>g_rand_new <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_rand_new_with_seed</primary></indexterm>g_rand_new_with_seed <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_rand_new_with_seed_array</primary></indexterm>g_rand_new_with_seed_array <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_rand_set_seed</primary></indexterm>g_rand_set_seed <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_rand_set_seed_array</primary></indexterm>g_rand_set_seed_array <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_random_double</primary></indexterm>g_random_double <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_random_double_range</primary></indexterm>g_random_double_range <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_random_int</primary></indexterm>g_random_int <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_random_int_range</primary></indexterm>g_random_int_range <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_random_set_seed</primary></indexterm>g_random_set_seed <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>
</SECT2>
<!-- debug: database interface name Glib Relations and Tuples -->
<SECT2>
<!--libgroup-->
<TITLE>Glib Relations and Tuples</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Interfaces for Glib Relations and Tuples</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic functions
for Glib Relations and Tuples specified in <XREF linkend="tbl-libglib-2.0-33-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<TABLE id="tbl-libglib-2.0-33-ints">
<TITLE>libglib-2.0 - Glib Relations and Tuples Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>g_relation_count</primary></indexterm>g_relation_count <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_relation_delete</primary></indexterm>g_relation_delete <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_relation_destroy</primary></indexterm>g_relation_destroy <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_relation_exists</primary></indexterm>g_relation_exists <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_relation_index</primary></indexterm>g_relation_index <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_relation_insert</primary></indexterm>g_relation_insert <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_relation_new</primary></indexterm>g_relation_new <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_relation_print</primary></indexterm>g_relation_print <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_relation_select</primary></indexterm>g_relation_select <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_tuples_destroy</primary></indexterm>g_tuples_destroy <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_tuples_index</primary></indexterm>g_tuples_index <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>
</SECT2>
<!-- debug: database interface name Glib Shell-related Utilities -->
<SECT2>
<!--libgroup-->
<TITLE>Glib Shell-related Utilities</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Interfaces for Glib Shell-related Utilities</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic functions
for Glib Shell-related Utilities specified in <XREF linkend="tbl-libglib-2.0-34-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<TABLE id="tbl-libglib-2.0-34-ints">
<TITLE>libglib-2.0 - Glib Shell-related Utilities Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>g_shell_error_quark</primary></indexterm>g_shell_error_quark <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_shell_parse_argv</primary></indexterm>g_shell_parse_argv <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_shell_quote</primary></indexterm>g_shell_quote <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_shell_unquote</primary></indexterm>g_shell_unquote <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>
</SECT2>
<!-- debug: database interface name Glib Simple XML Subset Parser -->
<SECT2>
<!--libgroup-->
<TITLE>Glib Simple XML Subset Parser</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Interfaces for Glib Simple XML Subset Parser</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic functions
for Glib Simple XML Subset Parser specified in <XREF linkend="tbl-libglib-2.0-35-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<TABLE id="tbl-libglib-2.0-35-ints">
<TITLE>libglib-2.0 - Glib Simple XML Subset Parser Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>g_markup_error_quark</primary></indexterm>g_markup_error_quark <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_markup_escape_text</primary></indexterm>g_markup_escape_text <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_markup_parse_context_end_parse</primary></indexterm>g_markup_parse_context_end_parse <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_markup_parse_context_free</primary></indexterm>g_markup_parse_context_free <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_markup_parse_context_get_element</primary></indexterm>g_markup_parse_context_get_element <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_markup_parse_context_get_position</primary></indexterm>g_markup_parse_context_get_position <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_markup_parse_context_new</primary></indexterm>g_markup_parse_context_new <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_markup_parse_context_parse</primary></indexterm>g_markup_parse_context_parse <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_markup_printf_escaped</primary></indexterm>g_markup_printf_escaped <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_markup_vprintf_escaped</primary></indexterm>g_markup_vprintf_escaped <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>
</SECT2>
<!-- debug: database interface name Glib Singly-Linked Lists -->
<SECT2>
<!--libgroup-->
<TITLE>Glib Singly-Linked Lists</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Interfaces for Glib Singly-Linked Lists</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic functions
for Glib Singly-Linked Lists specified in <XREF linkend="tbl-libglib-2.0-36-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<TABLE id="tbl-libglib-2.0-36-ints">
<TITLE>libglib-2.0 - Glib Singly-Linked Lists Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>g_slist_alloc</primary></indexterm>g_slist_alloc <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_slist_append</primary></indexterm>g_slist_append <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_slist_concat</primary></indexterm>g_slist_concat <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_slist_copy</primary></indexterm>g_slist_copy <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_slist_delete_link</primary></indexterm>g_slist_delete_link <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_slist_find</primary></indexterm>g_slist_find <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_slist_find_custom</primary></indexterm>g_slist_find_custom <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_slist_foreach</primary></indexterm>g_slist_foreach <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_slist_free</primary></indexterm>g_slist_free <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_slist_free_1</primary></indexterm>g_slist_free_1 <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_slist_index</primary></indexterm>g_slist_index <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_slist_insert</primary></indexterm>g_slist_insert <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_slist_insert_before</primary></indexterm>g_slist_insert_before <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_slist_insert_sorted</primary></indexterm>g_slist_insert_sorted <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_slist_last</primary></indexterm>g_slist_last <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_slist_length</primary></indexterm>g_slist_length <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_slist_nth</primary></indexterm>g_slist_nth <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_slist_nth_data</primary></indexterm>g_slist_nth_data <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_slist_pop_allocator</primary></indexterm>g_slist_pop_allocator <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_slist_position</primary></indexterm>g_slist_position <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_slist_prepend</primary></indexterm>g_slist_prepend <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_slist_push_allocator</primary></indexterm>g_slist_push_allocator <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_slist_remove</primary></indexterm>g_slist_remove <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_slist_remove_all</primary></indexterm>g_slist_remove_all <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_slist_remove_link</primary></indexterm>g_slist_remove_link <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_slist_reverse</primary></indexterm>g_slist_reverse <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_slist_sort</primary></indexterm>g_slist_sort <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_slist_sort_with_data</primary></indexterm>g_slist_sort_with_data <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>
</SECT2>
<!-- debug: database interface name Glib Spawning Processes -->
<SECT2>
<!--libgroup-->
<TITLE>Glib Spawning Processes</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Interfaces for Glib Spawning Processes</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic functions
for Glib Spawning Processes specified in <XREF linkend="tbl-libglib-2.0-37-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<TABLE id="tbl-libglib-2.0-37-ints">
<TITLE>libglib-2.0 - Glib Spawning Processes Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>g_spawn_async</primary></indexterm>g_spawn_async <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_spawn_async_with_pipes</primary></indexterm>g_spawn_async_with_pipes <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_spawn_close_pid</primary></indexterm>g_spawn_close_pid <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_spawn_command_line_async</primary></indexterm>g_spawn_command_line_async <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_spawn_command_line_sync</primary></indexterm>g_spawn_command_line_sync <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_spawn_error_quark</primary></indexterm>g_spawn_error_quark <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_spawn_sync</primary></indexterm>g_spawn_sync <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>
</SECT2>
<!-- debug: database interface name Glib String Chunks -->
<SECT2>
<!--libgroup-->
<TITLE>Glib String Chunks</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Interfaces for Glib String Chunks</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic functions
for Glib String Chunks specified in <XREF linkend="tbl-libglib-2.0-38-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<TABLE id="tbl-libglib-2.0-38-ints">
<TITLE>libglib-2.0 - Glib String Chunks Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>g_string_chunk_free</primary></indexterm>g_string_chunk_free <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_string_chunk_insert</primary></indexterm>g_string_chunk_insert <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_string_chunk_insert_const</primary></indexterm>g_string_chunk_insert_const <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_string_chunk_insert_len</primary></indexterm>g_string_chunk_insert_len <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_string_chunk_new</primary></indexterm>g_string_chunk_new <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>
</SECT2>
<!-- debug: database interface name Glib String Utility Functions -->
<SECT2>
<!--libgroup-->
<TITLE>Glib String Utility Functions</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Interfaces for Glib String Utility Functions</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic functions
for Glib String Utility Functions specified in <XREF linkend="tbl-libglib-2.0-39-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<TABLE id="tbl-libglib-2.0-39-ints">
<TITLE>libglib-2.0 - Glib String Utility Functions Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>g_ascii_digit_value</primary></indexterm>g_ascii_digit_value <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_ascii_dtostr</primary></indexterm>g_ascii_dtostr <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_ascii_formatd</primary></indexterm>g_ascii_formatd <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_ascii_strcasecmp</primary></indexterm>g_ascii_strcasecmp <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_ascii_strdown</primary></indexterm>g_ascii_strdown <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_ascii_strncasecmp</primary></indexterm>g_ascii_strncasecmp <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_ascii_strtod</primary></indexterm>g_ascii_strtod <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_ascii_strtoull</primary></indexterm>g_ascii_strtoull <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_ascii_strup</primary></indexterm>g_ascii_strup <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_ascii_tolower</primary></indexterm>g_ascii_tolower <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_ascii_toupper</primary></indexterm>g_ascii_toupper <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_ascii_xdigit_value</primary></indexterm>g_ascii_xdigit_value <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_fprintf</primary></indexterm>g_fprintf <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_printf</primary></indexterm>g_printf <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_printf_string_upper_bound</primary></indexterm>g_printf_string_upper_bound <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_snprintf</primary></indexterm>g_snprintf <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_sprintf</primary></indexterm>g_sprintf <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_stpcpy</primary></indexterm>g_stpcpy <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_str_has_prefix</primary></indexterm>g_str_has_prefix <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_str_has_suffix</primary></indexterm>g_str_has_suffix <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_strcanon</primary></indexterm>g_strcanon <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_strchomp</primary></indexterm>g_strchomp <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_strchug</primary></indexterm>g_strchug <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_strcompress</primary></indexterm>g_strcompress <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_strconcat</primary></indexterm>g_strconcat <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_strdelimit</primary></indexterm>g_strdelimit <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_strdup</primary></indexterm>g_strdup <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_strdup_printf</primary></indexterm>g_strdup_printf <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_strdup_vprintf</primary></indexterm>g_strdup_vprintf <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_strdupv</primary></indexterm>g_strdupv <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_strerror</primary></indexterm>g_strerror <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_strescape</primary></indexterm>g_strescape <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_strfreev</primary></indexterm>g_strfreev <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_string_ascii_down</primary></indexterm>g_string_ascii_down <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_string_ascii_up</primary></indexterm>g_string_ascii_up <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_strjoin</primary></indexterm>g_strjoin <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_strjoinv</primary></indexterm>g_strjoinv <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_strlcat</primary></indexterm>g_strlcat <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_strlcpy</primary></indexterm>g_strlcpy <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_strndup</primary></indexterm>g_strndup <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_strnfill</primary></indexterm>g_strnfill <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_strreverse</primary></indexterm>g_strreverse <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_strrstr</primary></indexterm>g_strrstr <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_strrstr_len</primary></indexterm>g_strrstr_len <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_strsignal</primary></indexterm>g_strsignal <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_strsplit</primary></indexterm>g_strsplit <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_strsplit_set</primary></indexterm>g_strsplit_set <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_strstr_len</primary></indexterm>g_strstr_len <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_strtod</primary></indexterm>g_strtod <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_strv_length</primary></indexterm>g_strv_length <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_vasprintf</primary></indexterm>g_vasprintf <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_vfprintf</primary></indexterm>g_vfprintf <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_vprintf</primary></indexterm>g_vprintf <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_vsnprintf</primary></indexterm>g_vsnprintf <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_vsprintf</primary></indexterm>g_vsprintf <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>
</SECT2>
<!-- debug: database interface name Glib Strings -->
<SECT2>
<!--libgroup-->
<TITLE>Glib Strings</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Interfaces for Glib Strings</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic functions
for Glib Strings specified in <XREF linkend="tbl-libglib-2.0-40-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<TABLE id="tbl-libglib-2.0-40-ints">
<TITLE>libglib-2.0 - Glib Strings Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>g_string_append</primary></indexterm>g_string_append <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_string_append_c</primary></indexterm>g_string_append_c <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_string_append_len</primary></indexterm>g_string_append_len <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_string_append_printf</primary></indexterm>g_string_append_printf <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_string_append_unichar</primary></indexterm>g_string_append_unichar <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_string_assign</primary></indexterm>g_string_assign <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_string_equal</primary></indexterm>g_string_equal <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_string_erase</primary></indexterm>g_string_erase <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_string_free</primary></indexterm>g_string_free <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_string_hash</primary></indexterm>g_string_hash <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_string_insert</primary></indexterm>g_string_insert <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_string_insert_c</primary></indexterm>g_string_insert_c <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_string_insert_len</primary></indexterm>g_string_insert_len <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_string_insert_unichar</primary></indexterm>g_string_insert_unichar <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_string_new</primary></indexterm>g_string_new <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_string_new_len</primary></indexterm>g_string_new_len <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_string_prepend</primary></indexterm>g_string_prepend <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_string_prepend_c</primary></indexterm>g_string_prepend_c <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_string_prepend_len</primary></indexterm>g_string_prepend_len <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_string_prepend_unichar</primary></indexterm>g_string_prepend_unichar <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_string_printf</primary></indexterm>g_string_printf <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_string_set_size</primary></indexterm>g_string_set_size <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_string_sized_new</primary></indexterm>g_string_sized_new <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_string_truncate</primary></indexterm>g_string_truncate <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>
</SECT2>
<!-- debug: database interface name Glib - The Main Event Loop -->
<SECT2>
<!--libgroup-->
<TITLE>Glib - The Main Event Loop</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Interfaces for Glib - The Main Event Loop</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic functions
for Glib - The Main Event Loop specified in <XREF linkend="tbl-libglib-2.0-41-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<TABLE id="tbl-libglib-2.0-41-ints">
<TITLE>libglib-2.0 - Glib - The Main Event Loop Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>g_child_watch_add</primary></indexterm>g_child_watch_add <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_child_watch_add_full</primary></indexterm>g_child_watch_add_full <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_child_watch_source_new</primary></indexterm>g_child_watch_source_new <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_idle_add</primary></indexterm>g_idle_add <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_idle_add_full</primary></indexterm>g_idle_add_full <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_idle_remove_by_data</primary></indexterm>g_idle_remove_by_data <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_idle_source_new</primary></indexterm>g_idle_source_new <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_main_context_acquire</primary></indexterm>g_main_context_acquire <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_main_context_add_poll</primary></indexterm>g_main_context_add_poll <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_main_context_check</primary></indexterm>g_main_context_check <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_main_context_default</primary></indexterm>g_main_context_default <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_main_context_dispatch</primary></indexterm>g_main_context_dispatch <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_main_context_find_source_by_funcs_user_data</primary></indexterm>g_main_context_find_source_by_funcs_user_data <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_main_context_find_source_by_id</primary></indexterm>g_main_context_find_source_by_id <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_main_context_find_source_by_user_data</primary></indexterm>g_main_context_find_source_by_user_data <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_main_context_get_poll_func</primary></indexterm>g_main_context_get_poll_func <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_main_context_iteration</primary></indexterm>g_main_context_iteration <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_main_context_new</primary></indexterm>g_main_context_new <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_main_context_pending</primary></indexterm>g_main_context_pending <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_main_context_prepare</primary></indexterm>g_main_context_prepare <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_main_context_query</primary></indexterm>g_main_context_query <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_main_context_ref</primary></indexterm>g_main_context_ref <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_main_context_release</primary></indexterm>g_main_context_release <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_main_context_remove_poll</primary></indexterm>g_main_context_remove_poll <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_main_context_set_poll_func</primary></indexterm>g_main_context_set_poll_func <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_main_context_unref</primary></indexterm>g_main_context_unref <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_main_context_wait</primary></indexterm>g_main_context_wait <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_main_context_wakeup</primary></indexterm>g_main_context_wakeup <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_main_depth</primary></indexterm>g_main_depth <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_main_loop_get_context</primary></indexterm>g_main_loop_get_context <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_main_loop_is_running</primary></indexterm>g_main_loop_is_running <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_main_loop_new</primary></indexterm>g_main_loop_new <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_main_loop_quit</primary></indexterm>g_main_loop_quit <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_main_loop_ref</primary></indexterm>g_main_loop_ref <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_main_loop_run</primary></indexterm>g_main_loop_run <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_main_loop_unref</primary></indexterm>g_main_loop_unref <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_source_add_poll</primary></indexterm>g_source_add_poll <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_source_attach</primary></indexterm>g_source_attach <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_source_destroy</primary></indexterm>g_source_destroy <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_source_get_can_recurse</primary></indexterm>g_source_get_can_recurse <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_source_get_context</primary></indexterm>g_source_get_context <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_source_get_current_time</primary></indexterm>g_source_get_current_time <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_source_get_id</primary></indexterm>g_source_get_id <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_source_get_priority</primary></indexterm>g_source_get_priority <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_source_new</primary></indexterm>g_source_new <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_source_ref</primary></indexterm>g_source_ref <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_source_remove</primary></indexterm>g_source_remove <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_source_remove_by_funcs_user_data</primary></indexterm>g_source_remove_by_funcs_user_data <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_source_remove_by_user_data</primary></indexterm>g_source_remove_by_user_data <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_source_remove_poll</primary></indexterm>g_source_remove_poll <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_source_set_callback</primary></indexterm>g_source_set_callback <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_source_set_callback_indirect</primary></indexterm>g_source_set_callback_indirect <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_source_set_can_recurse</primary></indexterm>g_source_set_can_recurse <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_source_set_priority</primary></indexterm>g_source_set_priority <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_source_unref</primary></indexterm>g_source_unref <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_timeout_add</primary></indexterm>g_timeout_add <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_timeout_add_full</primary></indexterm>g_timeout_add_full <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_timeout_source_new</primary></indexterm>g_timeout_source_new <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>
</SECT2>
<!-- debug: database interface name Glib Thread Pools -->
<SECT2>
<!--libgroup-->
<TITLE>Glib Thread Pools</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Interfaces for Glib Thread Pools</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic functions
for Glib Thread Pools specified in <XREF linkend="tbl-libglib-2.0-42-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<TABLE id="tbl-libglib-2.0-42-ints">
<TITLE>libglib-2.0 - Glib Thread Pools Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>g_thread_pool_free</primary></indexterm>g_thread_pool_free <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_thread_pool_get_max_threads</primary></indexterm>g_thread_pool_get_max_threads <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_thread_pool_get_max_unused_threads</primary></indexterm>g_thread_pool_get_max_unused_threads <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_thread_pool_get_num_threads</primary></indexterm>g_thread_pool_get_num_threads <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_thread_pool_get_num_unused_threads</primary></indexterm>g_thread_pool_get_num_unused_threads <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_thread_pool_new</primary></indexterm>g_thread_pool_new <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_thread_pool_push</primary></indexterm>g_thread_pool_push <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_thread_pool_set_max_threads</primary></indexterm>g_thread_pool_set_max_threads <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_thread_pool_set_max_unused_threads</primary></indexterm>g_thread_pool_set_max_unused_threads <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_thread_pool_stop_unused_threads</primary></indexterm>g_thread_pool_stop_unused_threads <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_thread_pool_unprocessed</primary></indexterm>g_thread_pool_unprocessed <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>
</SECT2>
<!-- debug: database interface name Glib Threads -->
<SECT2>
<!--libgroup-->
<TITLE>Glib Threads</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Interfaces for Glib Threads</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic functions
for Glib Threads specified in <XREF linkend="tbl-libglib-2.0-43-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<TABLE id="tbl-libglib-2.0-43-ints">
<TITLE>libglib-2.0 - Glib Threads Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>g_static_mutex_free</primary></indexterm>g_static_mutex_free <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_static_mutex_init</primary></indexterm>g_static_mutex_init <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_static_private_free</primary></indexterm>g_static_private_free <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_static_private_get</primary></indexterm>g_static_private_get <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_static_private_init</primary></indexterm>g_static_private_init <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_static_private_set</primary></indexterm>g_static_private_set <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_static_rec_mutex_free</primary></indexterm>g_static_rec_mutex_free <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_static_rec_mutex_init</primary></indexterm>g_static_rec_mutex_init <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_static_rec_mutex_lock</primary></indexterm>g_static_rec_mutex_lock <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_static_rec_mutex_lock_full</primary></indexterm>g_static_rec_mutex_lock_full <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_static_rec_mutex_trylock</primary></indexterm>g_static_rec_mutex_trylock <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_static_rec_mutex_unlock</primary></indexterm>g_static_rec_mutex_unlock <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_static_rec_mutex_unlock_full</primary></indexterm>g_static_rec_mutex_unlock_full <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_static_rw_lock_free</primary></indexterm>g_static_rw_lock_free <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_static_rw_lock_init</primary></indexterm>g_static_rw_lock_init <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_static_rw_lock_reader_lock</primary></indexterm>g_static_rw_lock_reader_lock <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_static_rw_lock_reader_trylock</primary></indexterm>g_static_rw_lock_reader_trylock <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_static_rw_lock_reader_unlock</primary></indexterm>g_static_rw_lock_reader_unlock <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_static_rw_lock_writer_lock</primary></indexterm>g_static_rw_lock_writer_lock <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_static_rw_lock_writer_trylock</primary></indexterm>g_static_rw_lock_writer_trylock <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_static_rw_lock_writer_unlock</primary></indexterm>g_static_rw_lock_writer_unlock <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_thread_create_full</primary></indexterm>g_thread_create_full <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_thread_error_quark</primary></indexterm>g_thread_error_quark <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_thread_exit</primary></indexterm>g_thread_exit <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_thread_join</primary></indexterm>g_thread_join <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_thread_self</primary></indexterm>g_thread_self <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_thread_set_priority</primary></indexterm>g_thread_set_priority <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>
</SECT2>
<!-- debug: database interface name Glib Timers -->
<SECT2>
<!--libgroup-->
<TITLE>Glib Timers</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Interfaces for Glib Timers</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic functions
for Glib Timers specified in <XREF linkend="tbl-libglib-2.0-44-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<TABLE id="tbl-libglib-2.0-44-ints">
<TITLE>libglib-2.0 - Glib Timers Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>g_timer_continue</primary></indexterm>g_timer_continue <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_timer_destroy</primary></indexterm>g_timer_destroy <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_timer_elapsed</primary></indexterm>g_timer_elapsed <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_timer_new</primary></indexterm>g_timer_new <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_timer_reset</primary></indexterm>g_timer_reset <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_timer_start</primary></indexterm>g_timer_start <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_timer_stop</primary></indexterm>g_timer_stop <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>
</SECT2>
<!-- debug: database interface name Glib Trash Stacks -->
<SECT2>
<!--libgroup-->
<TITLE>Glib Trash Stacks</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Interfaces for Glib Trash Stacks</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic functions
for Glib Trash Stacks specified in <XREF linkend="tbl-libglib-2.0-45-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<TABLE id="tbl-libglib-2.0-45-ints">
<TITLE>libglib-2.0 - Glib Trash Stacks Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>g_trash_stack_height</primary></indexterm>g_trash_stack_height <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_trash_stack_peek</primary></indexterm>g_trash_stack_peek <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_trash_stack_pop</primary></indexterm>g_trash_stack_pop <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_trash_stack_push</primary></indexterm>g_trash_stack_push <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>
</SECT2>
<!-- debug: database interface name Glib Unicode Manipulation -->
<SECT2>
<!--libgroup-->
<TITLE>Glib Unicode Manipulation</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Interfaces for Glib Unicode Manipulation</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic functions
for Glib Unicode Manipulation specified in <XREF linkend="tbl-libglib-2.0-46-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<TABLE id="tbl-libglib-2.0-46-ints">
<TITLE>libglib-2.0 - Glib Unicode Manipulation Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>g_mkdir_with_parents</primary></indexterm>g_mkdir_with_parents <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_ucs4_to_utf16</primary></indexterm>g_ucs4_to_utf16 <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_ucs4_to_utf8</primary></indexterm>g_ucs4_to_utf8 <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_unichar_break_type</primary></indexterm>g_unichar_break_type <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_unichar_digit_value</primary></indexterm>g_unichar_digit_value <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_unichar_get_mirror_char</primary></indexterm>g_unichar_get_mirror_char <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_unichar_isalnum</primary></indexterm>g_unichar_isalnum <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_unichar_isalpha</primary></indexterm>g_unichar_isalpha <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_unichar_iscntrl</primary></indexterm>g_unichar_iscntrl <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_unichar_isdefined</primary></indexterm>g_unichar_isdefined <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_unichar_isdigit</primary></indexterm>g_unichar_isdigit <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_unichar_isgraph</primary></indexterm>g_unichar_isgraph <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_unichar_islower</primary></indexterm>g_unichar_islower <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_unichar_isprint</primary></indexterm>g_unichar_isprint <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_unichar_ispunct</primary></indexterm>g_unichar_ispunct <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_unichar_isspace</primary></indexterm>g_unichar_isspace <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_unichar_istitle</primary></indexterm>g_unichar_istitle <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_unichar_isupper</primary></indexterm>g_unichar_isupper <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_unichar_iswide</primary></indexterm>g_unichar_iswide <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_unichar_isxdigit</primary></indexterm>g_unichar_isxdigit <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_unichar_to_utf8</primary></indexterm>g_unichar_to_utf8 <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_unichar_tolower</primary></indexterm>g_unichar_tolower <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_unichar_totitle</primary></indexterm>g_unichar_totitle <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_unichar_toupper</primary></indexterm>g_unichar_toupper <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_unichar_type</primary></indexterm>g_unichar_type <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_unichar_validate</primary></indexterm>g_unichar_validate <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_unichar_xdigit_value</primary></indexterm>g_unichar_xdigit_value <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_unicode_canonical_decomposition</primary></indexterm>g_unicode_canonical_decomposition <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_unicode_canonical_ordering</primary></indexterm>g_unicode_canonical_ordering <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_utf16_to_ucs4</primary></indexterm>g_utf16_to_ucs4 <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_utf16_to_utf8</primary></indexterm>g_utf16_to_utf8 <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_utf8_casefold</primary></indexterm>g_utf8_casefold <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_utf8_collate</primary></indexterm>g_utf8_collate <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_utf8_collate_key</primary></indexterm>g_utf8_collate_key <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_utf8_collate_key_for_filename</primary></indexterm>g_utf8_collate_key_for_filename <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_utf8_find_next_char</primary></indexterm>g_utf8_find_next_char <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_utf8_find_prev_char</primary></indexterm>g_utf8_find_prev_char <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_utf8_get_char</primary></indexterm>g_utf8_get_char <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_utf8_get_char_validated</primary></indexterm>g_utf8_get_char_validated <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_utf8_normalize</primary></indexterm>g_utf8_normalize <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_utf8_offset_to_pointer</primary></indexterm>g_utf8_offset_to_pointer <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_utf8_pointer_to_offset</primary></indexterm>g_utf8_pointer_to_offset <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_utf8_prev_char</primary></indexterm>g_utf8_prev_char <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_utf8_strchr</primary></indexterm>g_utf8_strchr <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_utf8_strdown</primary></indexterm>g_utf8_strdown <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_utf8_strlen</primary></indexterm>g_utf8_strlen <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_utf8_strncpy</primary></indexterm>g_utf8_strncpy <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_utf8_strrchr</primary></indexterm>g_utf8_strrchr <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_utf8_strreverse</primary></indexterm>g_utf8_strreverse <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_utf8_strup</primary></indexterm>g_utf8_strup <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_utf8_to_ucs4</primary></indexterm>g_utf8_to_ucs4 <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_utf8_to_ucs4_fast</primary></indexterm>g_utf8_to_ucs4_fast <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_utf8_to_utf16</primary></indexterm>g_utf8_to_utf16 <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_utf8_validate</primary></indexterm>g_utf8_validate <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>
</SECT2>
<!-- debug: database interface name Glib Version Information -->
<SECT2>
<!--libgroup-->
<TITLE>Glib Version Information</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Interfaces for Glib Version Information</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic functions
for Glib Version Information specified in <XREF linkend="tbl-libglib-2.0-47-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<TABLE id="tbl-libglib-2.0-47-ints">
<TITLE>libglib-2.0 - Glib Version Information Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>glib_check_version</primary></indexterm>glib_check_version <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for Glib Version Information specified in <XREF linkend="tbl-libglib-2.0-47-data">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<TABLE id="tbl-libglib-2.0-47-data">
<TITLE>libglib-2.0 - Glib Version Information Data Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>glib_binary_age</primary></indexterm>glib_binary_age <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>glib_interface_age</primary></indexterm>glib_interface_age <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>glib_major_version</primary></indexterm>glib_major_version <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>glib_mem_profiler_table</primary></indexterm>glib_mem_profiler_table <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>glib_micro_version</primary></indexterm>glib_micro_version <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>glib_minor_version</primary></indexterm>glib_minor_version <LINK LINKEND="REFSTD.libglib.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>
</SECT2>
</SECT1>
<SECT1 ID=libglib-2.0-ddefs>
<TITLE>Data Definitions for libglib-2.0</TITLE>
<PARA>
This section defines global identifiers and their values that are associated
with interfaces contained in libglib-2.0.
These definitions are organized into groups that
correspond to system headers. This convention is used as a
convenience for the reader, and does not imply the existence
of these headers, or their content.
Where an interface is defined as requiring a particular system header file
all of the data definitions for that system header file presented here shall be in effect.
</PARA>
<PARA>
This section gives data definitions to promote binary application
portability, not to repeat source interface definitions available
elsewhere. System providers and application developers should use this ABI
to supplement - not to replace - source interface definition specifications.
</PARA>
<PARA>
This specification uses the <XREF LINKEND='std.ISOC99'> C Language as the reference programming language, and data definitions are specified in ISO C format. The C language is used here as a convenient notation. Using a C language description of these data objects does not preclude their use by other programming languages.</PARA>
<SECT2>
<TITLE>glib-2.0/glib.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define GLIB_HAVE_ALLOCA_H
#define GLIB_HAVE_SYS_POLL_H
#ifdef __cplusplus
# define G_BEGIN_DECLS  extern "C" {
#else
# define G_BEGIN_DECLS
#endif
#ifdef __cplusplus
# define G_END_DECLS  }
#else
# define G_END_DECLS
#endif
#define G_GINT32_MODIFIER	""
#define G_GNUC_FUNCTION	""
#define G_GNUC_PRETTY_FUNCTION	""
#define G_OPTION_REMAINING	""
#define G_OS_UNIX
#define G_THREADS_ENABLED
#define G_THREADS_IMPL_POSIX
#define G_WIN32_DLLMAIN_FOR_DLL_NAME(static,dll_name)
#define G_CSET_LATINC	 \
	"\300\301\302\303\304\305\306" \
	"\307\310\311\312\313\314\315\316\317\320" "\321\322\323\324\325\326" \
	"\330\331\332\333\334\335\336"
#define G_CSET_LATINS	 \
	"\337\340\341\342\343\344\345\346" \
	"\347\350\351\352\353\354\355\356\357\360" "\361\362\363\364\365\366" \
	"\370\371\372\373\374\375\376\377"
#define g_mem_chunk_create(type,pre_alloc,alloc_type)	 \
	( g_mem_chunk_new (#type " mem chunks (" #pre_alloc ")", sizeof \
	(type), sizeof (type) * (pre_alloc), (alloc_type)) )
#define G_NODE_IS_ROOT(node)	 \
	(((GNode*) (node))->parent == NULL &amp;&amp; ((GNode*) (node))->prev == NULL \
	&amp;&amp; ((GNode*) (node))->next == NULL)
#define g_once(once,func,arg)	 \
	(((once)->status == G_ONCE_STATUS_READY) ? (once)->retval : \
	g_once_impl ((once), (func), (arg)))
#define CLAMP(x,low,high)	 \
	(((x) > (high)) ? (high) : (((x) &lt; (low)) ? (low) : (x)))
#define G_STRUCT_OFFSET(struct_type,member)	 \
	((glong) ((guint8*) &amp;((struct_type*) 0)->member))
#define G_STRUCT_MEMBER_P(struct_p,struct_offset)	 \
	((gpointer) ((guint8*) (struct_p) + (glong) (struct_offset)))
#define GUINT16_SWAP_LE_BE_CONSTANT(val)	 \
	((guint16) ( (guint16) ((guint16) (val) >> 8) | (guint16) ((guint16) \
	(val) &lt;&lt; 8)))
#define GUINT32_SWAP_LE_BE_CONSTANT(val)	 \
	((guint32) ( (((guint32) (val) &amp; (guint32) 0x000000ffU) &lt;&lt; 24) | \
	(((guint32) (val) &amp; (guint32) 0x0000ff00U) &lt;&lt; 8) | (((guint32) (val) &amp; \
	(guint32) 0x00ff0000U) >> 8) | (((guint32) (val) &amp; (guint32) \
	0xff000000U) >> 24)))
#define GUINT32_SWAP_LE_PDP(val)	 \
	((guint32) ( (((guint32) (val) &amp; (guint32) 0x0000ffffU) &lt;&lt; 16) | \
	(((guint32) (val) &amp; (guint32) 0xffff0000U) >> 16)))
#define GUINT32_SWAP_BE_PDP(val)	 \
	((guint32) ( (((guint32) (val) &amp; (guint32) 0x00ff00ffU) &lt;&lt; 8) | \
	(((guint32) (val) &amp; (guint32) 0xff00ff00U) >> 8)))
#define GUINT64_SWAP_LE_BE_CONSTANT(val)	 \
	((guint64) ( (((guint64) (val) &amp; (guint64) G_GINT64_CONSTANT \
	(0x00000000000000ffU)) &lt;&lt; 56) | (((guint64) (val) &amp; (guint64) \
	G_GINT64_CONSTANT (0x000000000000ff00U)) &lt;&lt; 40) | (((guint64) (val) &amp; \
	(guint64) G_GINT64_CONSTANT (0x0000000000ff0000U)) &lt;&lt; 24) | \
	(((guint64) (val) &amp; (guint64) G_GINT64_CONSTANT (0x00000000ff000000U)) \
	&lt;&lt; 8) | (((guint64) (val) &amp; (guint64) G_GINT64_CONSTANT \
	(0x000000ff00000000U)) >> 8) | (((guint64) (val) &amp; (guint64) \
	G_GINT64_CONSTANT (0x0000ff0000000000U)) >> 24) | (((guint64) (val) &amp; \
	(guint64) G_GINT64_CONSTANT (0x00ff000000000000U)) >> 40) | \
	(((guint64) (val) &amp; (guint64) G_GINT64_CONSTANT (0xff00000000000000U)) \
	>> 56)))
#define g_ascii_isalnum(c)	 \
	((g_ascii_table[(guchar) (c)] &amp; G_ASCII_ALNUM) != 0)
#define g_ascii_isalpha(c)	 \
	((g_ascii_table[(guchar) (c)] &amp; G_ASCII_ALPHA) != 0)
#define g_ascii_iscntrl(c)	 \
	((g_ascii_table[(guchar) (c)] &amp; G_ASCII_CNTRL) != 0)
#define g_ascii_isdigit(c)	 \
	((g_ascii_table[(guchar) (c)] &amp; G_ASCII_DIGIT) != 0)
#define g_ascii_isgraph(c)	 \
	((g_ascii_table[(guchar) (c)] &amp; G_ASCII_GRAPH) != 0)
#define g_ascii_islower(c)	 \
	((g_ascii_table[(guchar) (c)] &amp; G_ASCII_LOWER) != 0)
#define g_ascii_isprint(c)	 \
	((g_ascii_table[(guchar) (c)] &amp; G_ASCII_PRINT) != 0)
#define g_ascii_ispunct(c)	 \
	((g_ascii_table[(guchar) (c)] &amp; G_ASCII_PUNCT) != 0)
#define g_ascii_isspace(c)	 \
	((g_ascii_table[(guchar) (c)] &amp; G_ASCII_SPACE) != 0)
#define g_ascii_isupper(c)	 \
	((g_ascii_table[(guchar) (c)] &amp; G_ASCII_UPPER) != 0)
#define g_ascii_isxdigit(c)	 \
	((g_ascii_table[(guchar) (c)] &amp; G_ASCII_XDIGIT) != 0)
#define G_HOOK_ACTIVE(hook)	 \
	((G_HOOK_FLAGS (hook) &amp; G_HOOK_FLAG_ACTIVE) != 0)
#define G_HOOK_IN_CALL(hook)	 \
	((G_HOOK_FLAGS (hook) &amp; G_HOOK_FLAG_IN_CALL) != 0)
#define g_node_first_child(node)	 \
	((node) ? ((GNode*) (node))->children : NULL)
#define g_node_next_sibling(node)	 \
	((node) ? ((GNode*) (node))->next : NULL)
#define g_node_prev_sibling(node)	 \
	((node) ? ((GNode*) (node))->prev : NULL)
#define g_new(struct_type,n_structs)	 \
	((struct_type *) g_malloc (((gsize) sizeof (struct_type)) * ((gsize) \
	(n_structs))))
#define g_new0(struct_type,n_structs)	 \
	((struct_type *) g_malloc0 (((gsize) sizeof (struct_type)) * ((gsize) \
	(n_structs))))
#define g_renew(struct_type,mem,n_structs)	 \
	((struct_type *) g_realloc ((mem), ((gsize) sizeof (struct_type)) * \
	((gsize) (n_structs))))
#define g_newa(struct_type,n_structs)	 \
	((struct_type*) g_alloca (sizeof (struct_type) * (gsize) \
	(n_structs)))
#define G_STRUCT_MEMBER(member_type,struct_p,struct_offset)	 \
	(*(member_type*) G_STRUCT_MEMBER_P ((struct_p), (struct_offset)))
#define G_THREAD_UF(op,arglist)	 \
	(*g_thread_functions_for_glib_use . op) arglist
#define GLIB_CHECK_VERSION(major,minor,micro)	 \
	(GLIB_MAJOR_VERSION > (major) || (GLIB_MAJOR_VERSION == (major) &amp;&amp; \
	GLIB_MINOR_VERSION > (minor)) || (GLIB_MAJOR_VERSION == (major) &amp;&amp; \
	GLIB_MINOR_VERSION == (minor) &amp;&amp; GLIB_MICRO_VERSION >= (micro)))
#define g_atomic_int_dec_and_test(atomic)	 \
	(g_atomic_int_exchange_and_add ((atomic), -1) == 1)
#define g_static_mutex_get_mutex_impl_shortcut(mutex)	 \
	(g_atomic_pointer_get ((gpointer*)mutex) ? *(mutex) : \
	g_static_mutex_get_mutex_impl (mutex))
#define g_datalist_get_data(dl,k)	 \
	(g_datalist_id_get_data ((dl), g_quark_try_string (k)))
#define g_dataset_get_data(l,k)	 \
	(g_dataset_id_get_data ((l), g_quark_try_string (k)))
#define G_HOOK_IS_VALID(hook)	 \
	(G_HOOK (hook)->hook_id != 0 &amp;&amp; (G_HOOK_FLAGS (hook) &amp; \
	G_HOOK_FLAG_ACTIVE))
#define G_HOOK_IS_UNLINKED(hook)	 \
	(G_HOOK (hook)->next == NULL &amp;&amp; G_HOOK (hook)->prev == NULL &amp;&amp; G_HOOK \
	(hook)->hook_id == 0 &amp;&amp; G_HOOK (hook)->ref_count == 0)
#define g_thread_create(func,data,joinable,error)	 \
	(g_thread_create_full (func, data, 0, joinable, FALSE, \
	G_THREAD_PRIORITY_NORMAL, error))
#define G_THREAD_ECF(op,fail,mutex,type)	 \
	(g_thread_supported () ? ((type(*)(GMutex*, gulong, gchar*)) \
	(*g_thread_functions_for_glib_use . op)) (mutex, G_MUTEX_DEBUG_MAGIC, \
	G_STRLOC) : (fail))
#define G_THREAD_CF(op,fail,arg)	 \
	(g_thread_supported () ? G_THREAD_UF (op, arg) : (fail))
#define g_static_mutex_get_mutex(mutex)	 \
	(g_thread_use_default_impl ? ((GMutex*) &amp;((mutex)->static_mutex)) : \
	g_static_mutex_get_mutex_impl_shortcut (&amp;((mutex)->runtime_mutex)))
#define G_LOCK_DEFINE(name)	 \
	GStaticMutex G_LOCK_NAME (name) = G_STATIC_MUTEX_INIT
#define g_datalist_remove_no_notify(dl,k)	 \
	g_datalist_id_remove_no_notify ((dl), g_quark_try_string (k))
#define g_datalist_id_remove_data(dl,q)	 \
	g_datalist_id_set_data ((dl), (q), NULL)
#define g_datalist_remove_data(dl,k)	 \
	g_datalist_id_set_data ((dl), g_quark_try_string (k), NULL)
#define g_datalist_id_set_data(dl,q,d)	 \
	g_datalist_id_set_data_full ((dl), (q), (d), NULL)
#define g_datalist_set_data_full(dl,k,d,f)	 \
	g_datalist_id_set_data_full ((dl), g_quark_from_string (k), (d), (f))
#define g_datalist_set_data(dl,k,d)	 \
	g_datalist_set_data_full ((dl), (k), (d), NULL)
#define g_dataset_remove_no_notify(l,k)	 \
	g_dataset_id_remove_no_notify ((l), g_quark_try_string (k))
#define g_dataset_id_remove_data(l,k)	 \
	g_dataset_id_set_data ((l), (k), NULL)
#define g_dataset_remove_data(l,k)	 \
	g_dataset_id_set_data ((l), g_quark_try_string (k), NULL)
#define g_dataset_id_set_data(l,k,d)	 \
	g_dataset_id_set_data_full ((l), (k), (d), NULL)
#define g_dataset_set_data_full(l,k,d,f)	 \
	g_dataset_id_set_data_full ((l), g_quark_from_string (k), (d), (f))
#define g_dataset_set_data(l,k,d)	 \
	g_dataset_set_data_full ((l), (k), (d), NULL)
#define g_hook_append(hook_list,hook)	 \
	g_hook_insert_before ((hook_list), NULL, (hook))
#define g_critical(...)	 \
	g_log (G_LOG_DOMAIN, G_LOG_LEVEL_CRITICAL, __VA_ARGS__)
#define g_message(...)	 \
	g_log (G_LOG_DOMAIN, G_LOG_LEVEL_MESSAGE, __VA_ARGS__)
#define g_warning(...)	 \
	g_log (G_LOG_DOMAIN, G_LOG_LEVEL_WARNING, __VA_ARGS__)
#define g_static_mutex_lock(mutex)	 \
	g_mutex_lock (g_static_mutex_get_mutex (mutex))
#define g_static_mutex_trylock(mutex)	 \
	g_mutex_trylock (g_static_mutex_get_mutex (mutex))
#define g_static_mutex_unlock(mutex)	 \
	g_mutex_unlock (g_static_mutex_get_mutex (mutex))
#define g_node_insert_data(parent,position,data)	 \
	g_node_insert ((parent), (position), g_node_new (data))
#define g_node_insert_data_before(parent,sibling,data)	 \
	g_node_insert_before ((parent), (sibling), g_node_new (data))
#define g_node_append(parent,node)	 \
	g_node_insert_before ((parent), NULL, (node))
#define g_node_append_data(parent,data)	 \
	g_node_insert_before ((parent), NULL, g_node_new (data))
#define g_node_prepend_data(parent,data)	 \
	g_node_prepend ((parent), g_node_new (data))
#define g_chunk_free(mem,mem_chunk)	 \
	G_STMT_START { g_mem_chunk_free ((mem_chunk), (mem)); } G_STMT_END
#define g_memmove(d,s,n)	 \
	G_STMT_START { memmove ((d), (s), (n)); } G_STMT_END
#define g_assert_not_reached()	 \
	G_STMT_START{ g_assert_warning (G_LOG_DOMAIN, __FILE__, __LINE__, \
	__PRETTY_FUNCTION__, NULL); }G_STMT_END
#define g_return_val_if_reached(val)	 \
	G_STMT_START{ g_log (G_LOG_DOMAIN, G_LOG_LEVEL_CRITICAL, "file %s: \
	line %d (%s): should not be reached", __FILE__, __LINE__, \
	__PRETTY_FUNCTION__); return (val); }G_STMT_END
#define g_return_if_reached()	 \
	G_STMT_START{ g_log (G_LOG_DOMAIN, G_LOG_LEVEL_CRITICAL, "file %s: \
	line %d (%s): should not be reached", __FILE__, __LINE__, \
	__PRETTY_FUNCTION__); return; }G_STMT_END
#define g_assert(expr)	 \
	G_STMT_START{ if G_LIKELY(expr) { } else g_assert_warning \
	(G_LOG_DOMAIN, __FILE__, __LINE__, __PRETTY_FUNCTION__, #expr); \
	}G_STMT_END
#define g_return_val_if_fail(expr,val)	 \
	G_STMT_START{ if G_LIKELY(expr) { } else { g_return_if_fail_warning \
	(G_LOG_DOMAIN, __PRETTY_FUNCTION__, #expr); return (val); }; \
	}G_STMT_END
#define g_return_if_fail(expr)	 \
	G_STMT_START{ if G_LIKELY(expr) { } else { g_return_if_fail_warning \
	(G_LOG_DOMAIN, __PRETTY_FUNCTION__, #expr); return; }; }G_STMT_END
#define g_cond_broadcast(cond)	 \
	G_THREAD_CF (cond_broadcast, (void)0, (cond))
#define g_cond_timed_wait(cond,mutex,abs_time)	 \
	G_THREAD_CF (cond_timed_wait, TRUE, (cond, mutex, abs_time))
#define g_cond_wait(cond,mutex)	 \
	G_THREAD_CF (cond_wait, (void)0, (cond, mutex))
#define g_private_get(private_key)	 \
	G_THREAD_CF (private_get, ((gpointer)private_key), (private_key))
#define g_private_set(private_key,value)	 \
	G_THREAD_CF (private_set, (void) (private_key = (GPrivate*) (value)), \
	(private_key, value))
#define G_GNUC_PRINTF(format_idx,arg_idx)	 \
	__attribute__((__format__ (__printf__, format_idx, arg_idx)))
#define G_GNUC_SCANF(format_idx,arg_idx)	 \
	__attribute__((__format__ (__scanf__, format_idx, arg_idx)))
#define G_STATIC_RW_LOCK_INIT	 \
	{ G_STATIC_MUTEX_INIT, NULL, NULL, 0, FALSE, 0, 0 }
#define G_STRINGIFY_ARG(contents)	#contents
#define G_DIR_SEPARATOR	'/'
#define g_chunk_new(type,chunk)	( (type *) g_mem_chunk_alloc (chunk) )
#define g_chunk_new0(type,chunk)	( (type *) g_mem_chunk_alloc0 (chunk) )
#define MIN(a,b)	(((a) &lt; (b)) ? (a) : (b))
#define ABS(a)	(((a) &lt; 0) ? -(a) : (a))
#define MAX(a,b)	(((a) > (b)) ? (a) : (b))
#define G_NODE_IS_LEAF(node)	(((GNode*) (node))->children == NULL)
#define g_array_index(a,t,i)	(((t*) (a)->data) [(i)])
#define g_ptr_array_index(array,index_)	((array)->pdata)[index_]
#define G_IS_DIR_SEPARATOR(c)	((c) == G_DIR_SEPARATOR)
#define G_STRFUNC	((const char*) (__PRETTY_FUNCTION__))
#define G_LOG_DOMAIN	((gchar*) 0)
#define G_HOOK(hook)	((GHook*) (hook))
#define GINT_TO_BE(val)	((gint) GINT32_TO_BE (val))
#define GINT_TO_LE(val)	((gint) GINT32_TO_LE (val))
#define GINT16_TO_LE(val)	((gint16) (val))
#define G_MAXINT16	((gint16) 0x7fff)
#define G_MININT16	((gint16) 0x8000)
#define GINT16_TO_BE(val)	((gint16) GUINT16_SWAP_LE_BE (val))
#define GINT32_TO_LE(val)	((gint32) (val))
#define G_MAXINT32	((gint32) 0x7fffffff)
#define G_MININT32	((gint32) 0x80000000)
#define GINT32_TO_BE(val)	((gint32) GUINT32_SWAP_LE_BE (val))
#define GINT64_TO_LE(val)	((gint64) (val))
#define GINT64_TO_BE(val)	((gint64) GUINT64_SWAP_LE_BE (val))
#define G_MAXINT8	((gint8) 0x7f)
#define G_MININT8	((gint8) 0x80)
#define GSIZE_TO_POINTER(s)	((gpointer) (gsize) (s))
#define GPOINTER_TO_SIZE(p)	((gsize) (p))
#define GUINT_TO_BE(val)	((guint) GUINT32_TO_BE (val))
#define GUINT_TO_LE(val)	((guint) GUINT32_TO_LE (val))
#define GUINT16_SWAP_LE_PDP(val)	((guint16) (val))
#define GUINT16_TO_LE(val)	((guint16) (val))
#define G_MAXUINT16	((guint16) 0xffff)
#define GUINT32_TO_LE(val)	((guint32) (val))
#define G_MAXUINT32	((guint32) 0xffffffff)
#define GUINT64_TO_LE(val)	((guint64) (val))
#define G_MAXUINT8	((guint8) 0xff)
#define g_random_boolean()	((g_random_int () &amp; (1 &lt;&lt; 15)) != 0)
#define g_rand_boolean(rand_)	((g_rand_int (rand_) &amp; (1 &lt;&lt; 15)) != 0)
#define g_list_next(list)	((list) ? (((GList *)(list))->next) : NULL)
#define g_list_previous(list)	((list) ? (((GList *)(list))->prev) : NULL)
#define g_slist_next(slist)	((slist) ? (((GSList *)(slist))->next) : NULL)
#define g_atomic_int_get(atomic)	(*(atomic))
#define g_atomic_pointer_get(atomic)	(*(atomic))
#define G_LOG_2_BASE_10	(0.30102999566398119521)
#define G_ALLOCATOR_LIST	(1)
#define G_IEEE754_DOUBLE_BIAS	(1023)
#define G_IEEE754_FLOAT_BIAS	(127)
#define G_ALLOCATOR_SLIST	(2)
#define G_ASCII_DTOSTR_BUF_SIZE	(29 + 10)
#define G_ALLOCATOR_NODE	(3)
#define G_HOOK_FLAG_USER_SHIFT	(4)
#define G_LOG_LEVEL_USER_SHIFT	(8)
#define g_ATEXIT(proc)	(atexit (proc))
#define g_utf8_next_char(p)	(char *)((p) + g_utf8_skip[*(guchar *)(p)])
#define G_LIKELY(expr)	(expr)
#define G_UNLIKELY(expr)	(expr)
#define GINT16_FROM_BE(val)	(GINT16_TO_BE (val))
#define GINT16_FROM_LE(val)	(GINT16_TO_LE (val))
#define GINT32_FROM_BE(val)	(GINT32_TO_BE (val))
#define GINT32_FROM_LE(val)	(GINT32_TO_LE (val))
#define GINT64_FROM_BE(val)	(GINT64_TO_BE (val))
#define GINT64_FROM_LE(val)	(GINT64_TO_LE (val))
#define GINT_FROM_BE(val)	(GINT_TO_BE (val))
#define GINT_FROM_LE(val)	(GINT_TO_LE (val))
#define GLONG_FROM_BE(val)	(GLONG_TO_BE (val))
#define GLONG_FROM_LE(val)	(GLONG_TO_LE (val))
#define g_ntohs(val)	(GUINT16_FROM_BE (val))
#define GUINT16_SWAP_BE_PDP(val)	(GUINT16_SWAP_LE_BE (val))
#define GUINT16_TO_BE(val)	(GUINT16_SWAP_LE_BE (val))
#define GUINT16_SWAP_LE_BE(val)	(GUINT16_SWAP_LE_BE_CONSTANT (val))
#define GUINT16_FROM_BE(val)	(GUINT16_TO_BE (val))
#define g_htons(val)	(GUINT16_TO_BE (val))
#define GUINT16_FROM_LE(val)	(GUINT16_TO_LE (val))
#define g_ntohl(val)	(GUINT32_FROM_BE (val))
#define GUINT32_TO_BE(val)	(GUINT32_SWAP_LE_BE (val))
#define GUINT32_SWAP_LE_BE(val)	(GUINT32_SWAP_LE_BE_CONSTANT (val))
#define GUINT32_FROM_BE(val)	(GUINT32_TO_BE (val))
#define g_htonl(val)	(GUINT32_TO_BE (val))
#define GUINT32_FROM_LE(val)	(GUINT32_TO_LE (val))
#define GUINT64_TO_BE(val)	(GUINT64_SWAP_LE_BE (val))
#define GUINT64_SWAP_LE_BE(val)	(GUINT64_SWAP_LE_BE_CONSTANT (val))
#define GUINT64_FROM_BE(val)	(GUINT64_TO_BE (val))
#define GUINT64_FROM_LE(val)	(GUINT64_TO_LE (val))
#define GUINT_FROM_BE(val)	(GUINT_TO_BE (val))
#define GUINT_FROM_LE(val)	(GUINT_TO_LE (val))
#define GULONG_FROM_BE(val)	(GULONG_TO_BE (val))
#define GULONG_FROM_LE(val)	(GULONG_TO_LE (val))
#define g_atomic_int_inc(atomic)	(g_atomic_int_add ((atomic), 1))
#define G_HOOK_FLAGS(hook)	(G_HOOK (hook)->flags)
#define G_LOG_FATAL_MASK	(G_LOG_FLAG_RECURSION | G_LOG_LEVEL_ERROR)
#define G_OPTION_ERROR	(g_option_error_quark ())
#define g_thread_supported()	(g_threads_got_initialized)
#define G_N_ELEMENTS(arr)	(sizeof (arr) / sizeof ((arr)[0]))
#define G_STMT_START	(void) __extension__ (
#define G_STMT_END	)
#define G_PRIORITY_HIGH	-100
#define G_DIR_SEPARATOR_S	"/"
#define G_HAVE_GROWING_STACK	0
#define G_PRIORITY_DEFAULT	0
#define G_LN2	0.69314718055994530941723212145817656807550013436026
#define G_PI_4	0.78539816339744830961566084581987572104929234984378
#define G_CSET_DIGITS	"0123456789"
#define G_DATE_BAD_DAY	0U
#define G_DATE_BAD_JULIAN	0U
#define G_DATE_BAD_YEAR	0U
#define G_MUTEX_DEBUG_MAGIC	0xf8e18ad7
#define G_ALLOC_ONLY	1
#define G_CAN_INLINE	1
#define G_HAVE_GINT64	1
#define G_HAVE_GNUC_VARARGS	1
#define G_HAVE_GNUC_VISIBILITY	1
#define G_HAVE_INLINE	1
#define G_HAVE_ISO_VARARGS	1
#define G_HAVE___INLINE	1
#define G_HAVE___INLINE__	1
#define G_SQRT2	1.4142135623730950488016887242096980785696718753769
#define G_PI_2	1.5707963267948966192313216916397514420985846996876
#define G_PRIORITY_HIGH_IDLE	100
#define G_USEC_PER_SEC	1000000
#define G_LITTLE_ENDIAN	1234
#define GLIB_MAJOR_VERSION	2
#define G_ALLOC_AND_FREE	2
#define G_LN10	2.3025850929940456840179914546843642076011014886288
#define G_E	2.7182818284590452353602874713526624977572470937000
#define G_PRIORITY_DEFAULT_IDLE	200
#define G_PI	3.1415926535897932384626433832795028841971693993751
#define G_PRIORITY_LOW	300
#define G_PDP_ENDIAN	3412
#define G_BIG_ENDIAN	4321
#define GLIB_MICRO_VERSION	6
#define GLIB_MINOR_VERSION	8
#define G_SEARCHPATH_SEPARATOR	:
#define G_SEARCHPATH_SEPARATOR_S	":"
#define GLIB_SYSDEF_POLLIN	=1
#define GLIB_SYSDEF_POLLHUP	=16
#define GLIB_SYSDEF_POLLPRI	=2
#define GLIB_SYSDEF_POLLNVAL	=32
#define GLIB_SYSDEF_POLLOUT	=4
#define GLIB_SYSDEF_POLLERR	=8
#define G_CSET_A_2_Z	"ABCDEFGHIJKLMNOPQRSTUVWXYZ"
#define G_CSET_a_2_z	"abcdefghijklmnopqrstuvwxyz"
#define g_alloca(size)	alloca (size)
#define G_CONST_RETURN	const
#define G_MAXDOUBLE	DBL_MAX
#define G_MINDOUBLE	DBL_MIN
#define GLIB_VAR	extern
#define G_LOCK_EXTERN(name)	extern GStaticMutex G_LOCK_NAME (name)
#define G_INLINE_FUNC	extern inline
#define G_MAXFLOAT	FLT_MAX
#define G_MINFLOAT	FLT_MIN
#define G_MEM_ALIGN	GLIB_SIZEOF_LONG
#define g_array_append_val(a,v)	g_array_append_vals (a, &amp;(v), 1)
#define g_array_insert_val(a,i,v)	g_array_insert_vals (a, i, &amp;(v), 1)
#define g_array_prepend_val(a,v)	g_array_prepend_vals (a, &amp;(v), 1)
#define ATEXIT(proc)	g_ATEXIT(proc)
#define G_CONVERT_ERROR	g_convert_error_quark()
#define g_date_day	g_date_get_day
#define g_date_days_in_month	g_date_get_days_in_month
#define g_date_day_of_year	g_date_get_day_of_year
#define g_date_julian	g_date_get_julian
#define g_date_monday_weeks_in_year	g_date_get_monday_weeks_in_year
#define g_date_monday_week_of_year	g_date_get_monday_week_of_year
#define g_date_month	g_date_get_month
#define g_date_sunday_weeks_in_year	g_date_get_sunday_weeks_in_year
#define g_date_sunday_week_of_year	g_date_get_sunday_week_of_year
#define g_date_weekday	g_date_get_weekday
#define g_date_year	g_date_get_year
#define G_FILE_ERROR	g_file_error_quark ()
#define G_MAXINT64	G_GINT64_CONSTANT(0x7fffffffffffffff)
#define G_MININT64	G_GINT64_CONSTANT(0x8000000000000000)
#define G_MAXUINT64	G_GINT64_CONSTANT(0xffffffffffffffffU)
#define G_IO_CHANNEL_ERROR	g_io_channel_error_quark()
#define G_KEY_FILE_ERROR	g_key_file_error_quark()
#define g_debug(...)	g_log (G_LOG_DOMAIN, G_LOG_LEVEL_DEBUG, __VA_ARGS__)
#define g_error(...)	g_log (G_LOG_DOMAIN, G_LOG_LEVEL_ERROR, __VA_ARGS__)
#define G_MARKUP_ERROR	g_markup_error_quark ()
#define G_SHELL_ERROR	g_shell_error_quark ()
#define G_SPAWN_ERROR	g_spawn_error_quark ()
#define G_LOCK(name)	g_static_mutex_lock (&amp;G_LOCK_NAME (name))
#define G_TRYLOCK(name)	g_static_mutex_trylock (&amp;G_LOCK_NAME (name))
#define G_UNLOCK(name)	g_static_mutex_unlock (&amp;G_LOCK_NAME (name))
#define g_strstrip(string)	g_strchomp (g_strchug (string))
#define G_STRINGIFY(macro_or_string)	G_STRINGIFY_ARG (macro_or_string)
#define g_cond_free(cond)	G_THREAD_CF (cond_free, (void)0, (cond))
#define g_cond_signal(cond)	G_THREAD_CF (cond_signal, (void)0, (cond))
#define g_mutex_free(mutex)	G_THREAD_CF (mutex_free, (void)0, (mutex))
#define g_mutex_lock(mutex)	G_THREAD_CF (mutex_lock, (void)0, (mutex))
#define g_mutex_trylock(mutex)	G_THREAD_CF (mutex_trylock, TRUE, (mutex))
#define g_mutex_unlock(mutex)	G_THREAD_CF (mutex_unlock, (void)0, (mutex))
#define g_thread_yield()	G_THREAD_CF (thread_yield, (void)0, ())
#define G_THREAD_ERROR	g_thread_error_quark ()
#define g_cond_new()	G_THREAD_UF (cond_new, ())
#define g_mutex_new()	G_THREAD_UF (mutex_new, ())
#define g_private_new(destructor)	G_THREAD_UF (private_new, (destructor))
#define G_LOCK_NAME(name)	g__ ## name ## _lock
#define G_GINT16_MODIFIER	"h"
#define G_GINT16_FORMAT	"hi"
#define G_GUINT16_FORMAT	"hu"
#define G_GINT32_FORMAT	"i"
#define G_MAXINT	INT_MAX
#define G_MININT	INT_MIN
#define G_MAXLONG	LONG_MAX
#define G_MINLONG	LONG_MIN
#define G_MAXSHORT	SHRT_MAX
#define G_MINSHORT	SHRT_MIN
#define G_MODULE_SUFFIX	"so"
#define G_LOCK_DEFINE_STATIC(name)	static G_LOCK_DEFINE (name)
#define G_GUINT32_FORMAT	"u"
#define G_MAXUINT	UINT_MAX
#define G_MAXULONG	ULONG_MAX
#define G_MAXUSHORT	USHRT_MAX
#define G_VA_COPY	va_copy
#define G_STR_DELIMITERS	"_-|> &lt;."
#define G_GNUC_INTERNAL	__attribute__((visibility("hidden")))
#define G_GNUC_CONST	__attribute__((__const__))
#define G_GNUC_DEPRECATED	__attribute__((__deprecated__))
#define G_GNUC_FORMAT(arg_idx)	__attribute__((__format_arg__ (arg_idx)))
#define G_GNUC_MALLOC	__attribute__((__malloc__))
#define G_GNUC_NORETURN	__attribute__((__noreturn__))
#define G_GNUC_NO_INSTRUMENT	__attribute__((__no_instrument_function__))
#define G_GNUC_PURE	__attribute__((__pure__))
#define G_GNUC_UNUSED	__attribute__((__unused__))
#define alloca(size)	__builtin_alloca (size)
#define G_GNUC_EXTENSION	__extension__
#define G_STRLOC	__FILE__ ":" G_STRINGIFY (__LINE__)
#define G_STATIC_PRIVATE_INIT	{ 0 }
#define G_ONCE_INIT	{ G_ONCE_STATUS_NOTCALLED, NULL }
#define G_STATIC_REC_MUTEX_INIT	{ G_STATIC_MUTEX_INIT }

typedef short unsigned int guint16;
typedef int gint;
typedef gint gboolean;
typedef unsigned int guint;
typedef void *gpointer;
typedef gpointer(*GThreadFunc) (gpointer);
typedef enum {
    G_THREAD_PRIORITY_LOW = 0,
    G_THREAD_PRIORITY_NORMAL = 1,
    G_THREAD_PRIORITY_HIGH = 2,
    G_THREAD_PRIORITY_URGENT = 3
} GThreadPriority;
typedef struct _GThread {
    GThreadFunc func;
    gpointer data;
    gboolean joinable;
    GThreadPriority priority;
} GThread;
typedef unsigned int guint32;
typedef guint32 GQuark;
typedef char gchar;
typedef struct _GError {
    GQuark domain;
    gint code;
    gchar *message;
} GError;
typedef void (*GPrintFunc) (const gchar *);
typedef struct _GMemChunk GMemChunk;
typedef long unsigned int gulong;
typedef struct _GList {
    gpointer data;
    GList *next;
    GList *prev;
} GList;
typedef struct _GMainLoop GMainLoop;
typedef struct _GHook {
    gpointer data;
    GHook *next;
    GHook *prev;
    guint ref_count;
    gulong hook_id;
    guint flags;
    gpointer func;
    GDestroyNotify destroy;
} GHook;
typedef void (*GDestroyNotify) (gpointer);
typedef struct _GHookList {
    gulong seq_id;
    guint hook_size:16;
    guint is_setup:1;
    GHook *hooks;
    GMemChunk *hook_memchunk;
    GHookFinalizeFunc finalize_hook;
    gpointer dummy[2];
} GHookList;
typedef void (*GHookFinalizeFunc) (GHookList *, GHook *);
typedef struct _GQueue {
    GList *head;
    GList *tail;
    guint length;
} GQueue;
typedef struct _GSList {
    gpointer data;
    GSList *next;
} GSList;
typedef struct _GString {
    gchar *str;
    gsize len;
    gsize allocated_len;
} GString;
typedef struct _GPtrArray {
    gpointer *pdata;
    guint len;
} GPtrArray;
typedef struct _GRand GRand;
typedef struct _GDir GDir;
typedef struct _GRelation GRelation;
typedef struct _GOptionContext GOptionContext;
typedef struct _GKeyFile GKeyFile;
typedef struct _GPatternSpec GPatternSpec;
typedef guint32 gunichar;
typedef gchar *(*GCompletionFunc) (gpointer);
typedef gint(*GCompletionStrncmpFunc) (const gchar *, const gchar *,
				       gsize);
typedef struct _GCompletion {
    GList *items;
    GCompletionFunc func;
    gchar *prefix;
    GList *cache;
    GCompletionStrncmpFunc strncmp_func;
} GCompletion;
typedef struct _GTimer GTimer;
typedef struct _GHashTable GHashTable;
typedef const void *gconstpointer;
typedef guint(*GHashFunc) (gconstpointer);
typedef gboolean(*GEqualFunc) (gconstpointer, gconstpointer);
typedef struct _GStaticMutex {
    struct _GMutex *runtime_mutex;
    union {
	char pad[GLIB_LSB_PADDING_SIZE];
	double dummy_double;
	void *dummy_pointer;
	long int dummy_long;
    } static_mutex;
} GStaticMutex;
typedef union _GSystemThread {
    char data[GLIB_LSB_DATA_SIZE];
    double dummy_double;
    void *dummy_pointer;
    long int dummy_long;
} GSystemThread;
typedef struct _GStaticRecMutex {
    GStaticMutex mutex;
    guint depth;
    GSystemThread owner;
} GStaticRecMutex;
typedef struct _GMarkupParseContext GMarkupParseContext;
typedef struct _GData GData;
typedef enum {
    G_IO_STATUS_ERROR = 0,
    G_IO_STATUS_NORMAL = 1,
    G_IO_STATUS_EOF = 2,
    G_IO_STATUS_AGAIN = 3
} GIOStatus;
typedef struct _GIOChannel {
    guint ref_count;
    GIOFuncs *funcs;
    gchar *encoding;
    GIConv read_cd;
    GIConv write_cd;
    gchar *line_term;
    guint line_term_len;
    gsize buf_size;
    GString *read_buf;
    GString *encoded_read_buf;
    GString *write_buf;
    gchar partial_write_buf[6];
    guint use_buffer:1;
    guint do_encode:1;
    guint close_on_unref:1;
    guint is_readable:1;
    guint is_writeable:1;
    guint is_seekable:1;
    gpointer reserved1;
    gpointer reserved2;
} GIOChannel;
typedef enum {
    G_SEEK_CUR = 0,
    G_SEEK_SET = 1,
    G_SEEK_END = 2
} GSeekType;
typedef struct _GSource {
    gpointer callback_data;
    GSourceCallbackFuncs *callback_funcs;
    GSourceFuncs *source_funcs;
    guint ref_count;
    GMainContext *context;
    gint priority;
    guint flags;
    guint source_id;
    GSList *poll_fds;
    GSource *prev;
    GSource *next;
    gpointer reserved1;
    gpointer reserved2;
} GSource;
typedef gboolean(*GSourceFunc) (gpointer);
typedef struct _GSourceCallbackFuncs {
    void (*ref) (gpointer);
    void (*unref) (gpointer);
    void (*get) (gpointer, GSource *, GSourceFunc *, gpointer *);
} GSourceCallbackFuncs;
typedef void (*GSourceDummyMarshal) (void);
typedef struct _GSourceFuncs {
    gboolean(*prepare) (GSource *, gint *);
    gboolean(*check) (GSource *);
    gboolean(*dispatch) (GSource *, GSourceFunc, gpointer);
    void (*finalize) (GSource *);
    GSourceFunc closure_callback;
    GSourceDummyMarshal closure_marshal;
} GSourceFuncs;
typedef struct _GMainContext GMainContext;
typedef enum {
    G_IO_IN = 1,
    G_IO_OUT = 4,
    G_IO_PRI = 2,
    G_IO_ERR = 8,
    G_IO_HUP = 16,
    G_IO_NVAL = 32
} GIOCondition;
typedef enum {
    G_IO_FLAG_APPEND = 1,
    G_IO_FLAG_NONBLOCK = 2,
    G_IO_FLAG_IS_READABLE = 4,
    G_IO_FLAG_IS_WRITEABLE = 8,
    G_IO_FLAG_IS_SEEKABLE = 16,
    G_IO_FLAG_MASK = 31,
    G_IO_FLAG_GET_MASK = 31,
    G_IO_FLAG_SET_MASK = 3
} GIOFlags;
typedef struct _GIOFuncs {
    GIOStatus(*io_read) (GIOChannel *, gchar *, gsize, gsize *,
			 GError * *);
    GIOStatus(*io_write) (GIOChannel *, const gchar *, gsize, gsize *,
			  GError * *);
    GIOStatus(*io_seek) (GIOChannel *, gint64, GSeekType, GError * *);
    GIOStatus(*io_close) (GIOChannel *, GError * *);
    GSource *(*io_create_watch) (GIOChannel *, GIOCondition);
    void (*io_free) (GIOChannel *);
     GIOStatus(*io_set_flags) (GIOChannel *, GIOFlags, GError * *);
     GIOFlags(*io_get_flags) (GIOChannel *);
} GIOFuncs;
typedef struct _GIConv *GIConv;
typedef struct _GOptionGroup GOptionGroup;
typedef enum {
    G_SPAWN_LEAVE_DESCRIPTORS_OPEN = 1,
    G_SPAWN_DO_NOT_REAP_CHILD = 2,
    G_SPAWN_SEARCH_PATH = 4,
    G_SPAWN_STDOUT_TO_DEV_NULL = 8,
    G_SPAWN_STDERR_TO_DEV_NULL = 16,
    G_SPAWN_CHILD_INHERITS_STDIN = 32,
    G_SPAWN_FILE_AND_ARGV_ZERO = 64
} GSpawnFlags;
typedef void (*GSpawnChildSetupFunc) (gpointer);
typedef int GPid;
typedef void (*GFunc) (gpointer, gpointer);
typedef struct _GThreadPool {
    GFunc func;
    gpointer user_data;
    gboolean exclusive;
} GThreadPool;
typedef struct _GDate {
    guint julian_days:32;
    guint julian:1;
    guint dmy:1;
    guint day:6;
    guint month:4;
    guint year:16;
} GDate;
typedef enum {
    G_DATE_BAD_MONTH = 0,
    G_DATE_JANUARY = 1,
    G_DATE_FEBRUARY = 2,
    G_DATE_MARCH = 3,
    G_DATE_APRIL = 4,
    G_DATE_MAY = 5,
    G_DATE_JUNE = 6,
    G_DATE_JULY = 7,
    G_DATE_AUGUST = 8,
    G_DATE_SEPTEMBER = 9,
    G_DATE_OCTOBER = 10,
    G_DATE_NOVEMBER = 11,
    G_DATE_DECEMBER = 12
} GDateMonth;
typedef struct _GAsyncQueue GAsyncQueue;
typedef short unsigned int gushort;
typedef struct _GPollFD {
    gint fd;
    gushort events;
    gushort revents;
} GPollFD;
typedef double gdouble;
typedef struct _GTree GTree;
typedef gint(*GCompareDataFunc) (gconstpointer, gconstpointer, gpointer);
typedef unsigned char guint8;
typedef guint16 GDateYear;
typedef struct _GCache GCache;
typedef void (*GHFunc) (gpointer, gpointer, gpointer);
typedef struct _GScannerConfig {
    gchar *cset_skip_characters;
    gchar *cset_identifier_first;
    gchar *cset_identifier_nth;
    gchar *cpair_comment_single;
    guint case_sensitive:1;
    guint skip_comment_multi:1;
    guint skip_comment_single:1;
    guint scan_comment_multi:1;
    guint scan_identifier:1;
    guint scan_identifier_1char:1;
    guint scan_identifier_NULL:1;
    guint scan_symbols:1;
    guint scan_binary:1;
    guint scan_octal:1;
    guint scan_float:1;
    guint scan_hex:1;
    guint scan_hex_dollar:1;
    guint scan_string_sq:1;
    guint scan_string_dq:1;
    guint numbers_2_int:1;
    guint int_2_float:1;
    guint identifier_2_string:1;
    guint char_2_token:1;
    guint symbol_2_token:1;
    guint scope_0_fallback:1;
    guint store_int64:1;
    guint padding_dummy;
} GScannerConfig;
typedef enum {
    G_TOKEN_EOF = 0,
    G_TOKEN_LEFT_PAREN = 40,
    G_TOKEN_RIGHT_PAREN = 41,
    G_TOKEN_LEFT_CURLY = 123,
    G_TOKEN_RIGHT_CURLY = 125,
    G_TOKEN_LEFT_BRACE = 91,
    G_TOKEN_RIGHT_BRACE = 93,
    G_TOKEN_EQUAL_SIGN = 61,
    G_TOKEN_COMMA = 44,
    G_TOKEN_NONE = 256,
    G_TOKEN_ERROR = 257,
    G_TOKEN_CHAR = 258,
    G_TOKEN_BINARY = 259,
    G_TOKEN_OCTAL = 260,
    G_TOKEN_INT = 261,
    G_TOKEN_HEX = 262,
    G_TOKEN_FLOAT = 263,
    G_TOKEN_STRING = 264,
    G_TOKEN_SYMBOL = 265,
    G_TOKEN_IDENTIFIER = 266,
    G_TOKEN_IDENTIFIER_NULL = 267,
    G_TOKEN_COMMENT_SINGLE = 268,
    G_TOKEN_COMMENT_MULTI = 269,
    G_TOKEN_LAST = 270
} GTokenType;
typedef unsigned char guchar;
typedef union _GTokenValue {
    gpointer v_symbol;
    gchar *v_identifier;
    gulong v_binary;
    gulong v_octal;
    gulong v_int;
    guint64 v_int64;
    gdouble v_float;
    gulong v_hex;
    gchar *v_string;
    gchar *v_comment;
    guchar v_char;
    guint v_error;
} GTokenValue;
typedef struct _GScanner {
    gpointer user_data;
    guint max_parse_errors;
    guint parse_errors;
    const gchar *input_name;
    GData *qdata;
    GScannerConfig *config;
    GTokenType token;
    GTokenValue value;
    guint line;
    guint position;
    GTokenType next_token;
    GTokenValue next_value;
    guint next_line;
    guint next_position;
    GHashTable *symbol_table;
    gint input_fd;
    const gchar *text;
    const gchar *text_end;
    gchar *buffer;
    guint scope_id;
    GScannerMsgFunc msg_handler;
} GScanner;
typedef void (*GScannerMsgFunc) (GScanner *, gchar *, gboolean);
typedef struct _GByteArray {
    guint8 *data;
    guint len;
} GByteArray;
typedef enum {
    G_KEY_FILE_NONE = 0,
    G_KEY_FILE_KEEP_COMMENTS = 1,
    G_KEY_FILE_KEEP_TRANSLATIONS = 2
} GKeyFileFlags;
typedef struct _GTrashStack {
    GTrashStack *next;
} GTrashStack;
typedef guint16 gunichar2;
typedef long int glong;
typedef struct _GArray {
    gchar *data;
    guint len;
} GArray;
typedef struct _GNode {
    gpointer data;
    GNode *next;
    GNode *prev;
    GNode *parent;
    GNode *children;
} GNode;
typedef gboolean(*GHRFunc) (gpointer, gpointer, gpointer);
typedef gint(*GCompareFunc) (gconstpointer, gconstpointer);
typedef int gint32;
typedef gint32 GTime;
typedef gint(*GPollFunc) (GPollFD *, guint, gint);
typedef guint8 GDateDay;
typedef enum {
    G_UNICODE_BREAK_MANDATORY = 0,
    G_UNICODE_BREAK_CARRIAGE_RETURN = 1,
    G_UNICODE_BREAK_LINE_FEED = 2,
    G_UNICODE_BREAK_COMBINING_MARK = 3,
    G_UNICODE_BREAK_SURROGATE = 4,
    G_UNICODE_BREAK_ZERO_WIDTH_SPACE = 5,
    G_UNICODE_BREAK_INSEPARABLE = 6,
    G_UNICODE_BREAK_NON_BREAKING_GLUE = 7,
    G_UNICODE_BREAK_CONTINGENT = 8,
    G_UNICODE_BREAK_SPACE = 9,
    G_UNICODE_BREAK_AFTER = 10,
    G_UNICODE_BREAK_BEFORE = 11,
    G_UNICODE_BREAK_BEFORE_AND_AFTER = 12,
    G_UNICODE_BREAK_HYPHEN = 13,
    G_UNICODE_BREAK_NON_STARTER = 14,
    G_UNICODE_BREAK_OPEN_PUNCTUATION = 15,
    G_UNICODE_BREAK_CLOSE_PUNCTUATION = 16,
    G_UNICODE_BREAK_QUOTATION = 17,
    G_UNICODE_BREAK_EXCLAMATION = 18,
    G_UNICODE_BREAK_IDEOGRAPHIC = 19,
    G_UNICODE_BREAK_NUMERIC = 20,
    G_UNICODE_BREAK_INFIX_SEPARATOR = 21,
    G_UNICODE_BREAK_SYMBOL = 22,
    G_UNICODE_BREAK_ALPHABETIC = 23,
    G_UNICODE_BREAK_PREFIX = 24,
    G_UNICODE_BREAK_POSTFIX = 25,
    G_UNICODE_BREAK_COMPLEX_CONTEXT = 26,
    G_UNICODE_BREAK_AMBIGUOUS = 27,
    G_UNICODE_BREAK_UNKNOWN = 28,
    G_UNICODE_BREAK_NEXT_LINE = 29,
    G_UNICODE_BREAK_WORD_JOINER = 30
} GUnicodeBreakType;
typedef struct _GStringChunk GStringChunk;
typedef struct _GCond GCond;
typedef struct _GStaticRWLock {
    GStaticMutex mutex;
    GCond *read_cond;
    GCond *write_cond;
    guint read_counter;
    gboolean have_writer;
    guint want_to_read;
    guint want_to_write;
} GStaticRWLock;
typedef void (*GChildWatchFunc) (GPid, gint, gpointer);
typedef struct _GTimeVal {
    glong tv_sec;
    glong tv_usec;
} GTimeVal;
typedef enum {
    G_LOG_FLAG_RECURSION = 1,
    G_LOG_FLAG_FATAL = 2,
    G_LOG_LEVEL_ERROR = 4,
    G_LOG_LEVEL_CRITICAL = 8,
    G_LOG_LEVEL_WARNING = 16,
    G_LOG_LEVEL_MESSAGE = 32,
    G_LOG_LEVEL_INFO = 64,
    G_LOG_LEVEL_DEBUG = 128,
    G_LOG_LEVEL_MASK = -4
} GLogLevelFlags;
typedef enum {
    G_DATE_BAD_WEEKDAY = 0,
    G_DATE_MONDAY = 1,
    G_DATE_TUESDAY = 2,
    G_DATE_WEDNESDAY = 3,
    G_DATE_THURSDAY = 4,
    G_DATE_FRIDAY = 5,
    G_DATE_SATURDAY = 6,
    G_DATE_SUNDAY = 7
} GDateWeekday;
typedef enum {
    G_IN_ORDER = 0,
    G_PRE_ORDER = 1,
    G_POST_ORDER = 2,
    G_LEVEL_ORDER = 3
} GTraverseType;
typedef enum {
    G_TRAVERSE_LEAVES = 1,
    G_TRAVERSE_NON_LEAVES = 2,
    G_TRAVERSE_ALL = 3,
    G_TRAVERSE_MASK = 3,
    G_TRAVERSE_LEAFS = 1,
    G_TRAVERSE_NON_LEAFS = 2
} GTraverseFlags;
typedef struct _GMarkupParser {
    void (*start_element) (GMarkupParseContext *, const gchar *,
			   const gchar * *, const gchar * *, gpointer,
			   GError * *);
    void (*end_element) (GMarkupParseContext *, const gchar *, gpointer,
			 GError * *);
    void (*text) (GMarkupParseContext *, const gchar *, gsize, gpointer,
		  GError * *);
    void (*passthrough) (GMarkupParseContext *, const gchar *, gsize,
			 gpointer, GError * *);
    void (*error) (GMarkupParseContext *, GError *, gpointer);
} GMarkupParser;
typedef enum {
    G_MARKUP_DO_NOT_USE_THIS_UNSUPPORTED_FLAG = 1
} GMarkupParseFlags;
typedef gboolean(*GHookCheckMarshaller) (GHook *, gpointer);
typedef gboolean(*GNodeTraverseFunc) (GNode *, gpointer);
typedef enum {
    G_NORMALIZE_DEFAULT = 0,
    G_NORMALIZE_NFD = 0,
    G_NORMALIZE_DEFAULT_COMPOSE = 1,
    G_NORMALIZE_NFC = 1,
    G_NORMALIZE_ALL = 2,
    G_NORMALIZE_NFKD = 2,
    G_NORMALIZE_ALL_COMPOSE = 3,
    G_NORMALIZE_NFKC = 3
} GNormalizeMode;
typedef struct _GMutex GMutex;
typedef struct _GStaticPrivate {
    guint index;
} GStaticPrivate;
typedef enum {
    G_FILE_ERROR_EXIST = 0,
    G_FILE_ERROR_ISDIR = 1,
    G_FILE_ERROR_ACCES = 2,
    G_FILE_ERROR_NAMETOOLONG = 3,
    G_FILE_ERROR_NOENT = 4,
    G_FILE_ERROR_NOTDIR = 5,
    G_FILE_ERROR_NXIO = 6,
    G_FILE_ERROR_NODEV = 7,
    G_FILE_ERROR_ROFS = 8,
    G_FILE_ERROR_TXTBSY = 9,
    G_FILE_ERROR_FAULT = 10,
    G_FILE_ERROR_LOOP = 11,
    G_FILE_ERROR_NOSPC = 12,
    G_FILE_ERROR_NOMEM = 13,
    G_FILE_ERROR_MFILE = 14,
    G_FILE_ERROR_NFILE = 15,
    G_FILE_ERROR_BADF = 16,
    G_FILE_ERROR_INVAL = 17,
    G_FILE_ERROR_PIPE = 18,
    G_FILE_ERROR_AGAIN = 19,
    G_FILE_ERROR_INTR = 20,
    G_FILE_ERROR_IO = 21,
    G_FILE_ERROR_PERM = 22,
    G_FILE_ERROR_NOSYS = 23,
    G_FILE_ERROR_FAILED = 24
} GFileError;
typedef void (*GDataForeachFunc) (GQuark, gpointer, gpointer);
typedef struct _GMemVTable {
    gpointer(*malloc) (gsize);
    gpointer(*realloc) (gpointer, gsize);
    void (*free) (gpointer);
     gpointer(*calloc) (gsize, gsize);
     gpointer(*try_malloc) (gsize);
     gpointer(*try_realloc) (gpointer, gsize);
} GMemVTable;
typedef enum {
    G_OPTION_ARG_NONE = 0,
    G_OPTION_ARG_STRING = 1,
    G_OPTION_ARG_INT = 2,
    G_OPTION_ARG_CALLBACK = 3,
    G_OPTION_ARG_FILENAME = 4,
    G_OPTION_ARG_STRING_ARRAY = 5,
    G_OPTION_ARG_FILENAME_ARRAY = 6
} GOptionArg;
typedef struct _GOptionEntry {
    const gchar *long_name;
    gchar short_name;
    gint flags;
    GOptionArg arg;
    gpointer arg_data;
    const gchar *description;
    const gchar *arg_description;
} GOptionEntry;
typedef enum {
    G_UNICODE_CONTROL = 0,
    G_UNICODE_FORMAT = 1,
    G_UNICODE_UNASSIGNED = 2,
    G_UNICODE_PRIVATE_USE = 3,
    G_UNICODE_SURROGATE = 4,
    G_UNICODE_LOWERCASE_LETTER = 5,
    G_UNICODE_MODIFIER_LETTER = 6,
    G_UNICODE_OTHER_LETTER = 7,
    G_UNICODE_TITLECASE_LETTER = 8,
    G_UNICODE_UPPERCASE_LETTER = 9,
    G_UNICODE_COMBINING_MARK = 10,
    G_UNICODE_ENCLOSING_MARK = 11,
    G_UNICODE_NON_SPACING_MARK = 12,
    G_UNICODE_DECIMAL_NUMBER = 13,
    G_UNICODE_LETTER_NUMBER = 14,
    G_UNICODE_OTHER_NUMBER = 15,
    G_UNICODE_CONNECT_PUNCTUATION = 16,
    G_UNICODE_DASH_PUNCTUATION = 17,
    G_UNICODE_CLOSE_PUNCTUATION = 18,
    G_UNICODE_FINAL_PUNCTUATION = 19,
    G_UNICODE_INITIAL_PUNCTUATION = 20,
    G_UNICODE_OTHER_PUNCTUATION = 21,
    G_UNICODE_OPEN_PUNCTUATION = 22,
    G_UNICODE_CURRENCY_SYMBOL = 23,
    G_UNICODE_MODIFIER_SYMBOL = 24,
    G_UNICODE_MATH_SYMBOL = 25,
    G_UNICODE_OTHER_SYMBOL = 26,
    G_UNICODE_LINE_SEPARATOR = 27,
    G_UNICODE_PARAGRAPH_SEPARATOR = 28,
    G_UNICODE_SPACE_SEPARATOR = 29
} GUnicodeType;
typedef void (*GLogFunc) (const gchar *, GLogLevelFlags, const gchar *,
			  gpointer);
typedef struct _GAllocator GAllocator;
typedef const gchar *(*GTranslateFunc) (const gchar *, gpointer);
typedef gboolean(*GOptionParseFunc) (GOptionContext *, GOptionGroup *,
				     gpointer, GError * *);
typedef void (*GVoidFunc) (void);
typedef gboolean(*GHookFindFunc) (GHook *, gpointer);
typedef struct _GTuples {
    guint len;
} GTuples;
typedef gpointer(*GCopyFunc) (gconstpointer, gpointer);
typedef void (*GOptionErrorFunc) (GOptionContext *, GOptionGroup *,
				  gpointer, GError * *);
typedef gpointer(*GCacheNewFunc) (gpointer);
typedef void (*GCacheDestroyFunc) (gpointer);
typedef gpointer(*GCacheDupFunc) (gpointer);
typedef enum {
    G_FILE_TEST_IS_REGULAR = 1,
    G_FILE_TEST_IS_SYMLINK = 2,
    G_FILE_TEST_IS_DIR = 4,
    G_FILE_TEST_IS_EXECUTABLE = 8,
    G_FILE_TEST_EXISTS = 16
} GFileTest;
typedef enum {
    G_ONCE_STATUS_NOTCALLED = 0,
    G_ONCE_STATUS_PROGRESS = 1,
    G_ONCE_STATUS_READY = 2
} GOnceStatus;
typedef struct _GOnce {
    volatile GOnceStatus status;
    volatile gpointer retval;
} GOnce;
typedef gboolean(*GTraverseFunc) (gpointer, gpointer, gpointer);
typedef gint(*GHookCompareFunc) (GHook *, GHook *);
typedef void (*GNodeForeachFunc) (GNode *, gpointer);
typedef struct _GDebugKey {
    gchar *key;
    guint value;
} GDebugKey;
typedef struct _GPrivate GPrivate;
typedef struct _GThreadFunctions {
    GMutex *(*mutex_new) (void);
    void (*mutex_lock) (GMutex *);
     gboolean(*mutex_trylock) (GMutex *);
    void (*mutex_unlock) (GMutex *);
    void (*mutex_free) (GMutex *);
    GCond *(*cond_new) (void);
    void (*cond_signal) (GCond *);
    void (*cond_broadcast) (GCond *);
    void (*cond_wait) (GCond *, GMutex *);
     gboolean(*cond_timed_wait) (GCond *, GMutex *, GTimeVal *);
    void (*cond_free) (GCond *);
    GPrivate *(*private_new) (GDestroyNotify);
     gpointer(*private_get) (GPrivate *);
    void (*private_set) (GPrivate *, gpointer);
    void (*thread_create) (GThreadFunc, gpointer, gulong, gboolean,
			   gboolean, GThreadPriority, gpointer,
			   GError * *);
    void (*thread_yield) (void);
    void (*thread_join) (gpointer);
    void (*thread_exit) (void);
    void (*thread_set_priority) (gpointer, GThreadPriority);
    void (*thread_self) (gpointer);
     gboolean(*thread_equal) (gpointer, gpointer);
} GThreadFunctions;
typedef void (*GHookMarshaller) (GHook *, gpointer);
typedef enum {
    G_IO_CHANNEL_ERROR_FBIG = 0,
    G_IO_CHANNEL_ERROR_INVAL = 1,
    G_IO_CHANNEL_ERROR_IO = 2,
    G_IO_CHANNEL_ERROR_ISDIR = 3,
    G_IO_CHANNEL_ERROR_NOSPC = 4,
    G_IO_CHANNEL_ERROR_NXIO = 5,
    G_IO_CHANNEL_ERROR_OVERFLOW = 6,
    G_IO_CHANNEL_ERROR_PIPE = 7,
    G_IO_CHANNEL_ERROR_FAILED = 8
} GIOChannelError;
typedef gboolean(*GIOFunc) (GIOChannel *, GIOCondition, gpointer);
typedef void (*GFreeFunc) (gpointer);
typedef gboolean(*GHookCheckFunc) (gpointer);
typedef void (*GHookFunc) (gpointer);
typedef short int gint16;
typedef enum {
    G_DATE_DAY = 0,
    G_DATE_MONTH = 1,
    G_DATE_YEAR = 2
} GDateDMY;
typedef signed char gint8;
typedef enum {
    G_MARKUP_ERROR_BAD_UTF8 = 0,
    G_MARKUP_ERROR_EMPTY = 1,
    G_MARKUP_ERROR_PARSE = 2,
    G_MARKUP_ERROR_UNKNOWN_ELEMENT = 3,
    G_MARKUP_ERROR_UNKNOWN_ATTRIBUTE = 4,
    G_MARKUP_ERROR_INVALID_CONTENT = 5
} GMarkupError;
typedef enum {
    G_IO_ERROR_NONE = 0,
    G_IO_ERROR_AGAIN = 1,
    G_IO_ERROR_INVAL = 2,
    G_IO_ERROR_UNKNOWN = 3
} GIOError;
typedef gboolean(*GOptionArgFunc) (const gchar *, const gchar *, gpointer,
				   GError * *);
typedef enum {
    G_OPTION_FLAG_HIDDEN = 1 &lt;&lt; 0,
    G_OPTION_FLAG_IN_MAIN = 1 &lt;&lt; 1,
    G_OPTION_FLAG_REVERSE = 1 &lt;&lt; 2
} GOptionFlags;
typedef enum {
    G_CONVERT_ERROR_NO_CONVERSION,
    G_CONVERT_ERROR_ILLEGAL_SEQUENCE,
    G_CONVERT_ERROR_FAILED,
    G_CONVERT_ERROR_PARTIAL_INPUT,
    G_CONVERT_ERROR_BAD_URI,
    G_CONVERT_ERROR_NOT_ABSOLUTE_PATH
} GConvertError;
typedef enum {
    G_ERR_UNKNOWN,
    G_ERR_UNEXP_EOF,
    G_ERR_UNEXP_EOF_IN_STRING,
    G_ERR_UNEXP_EOF_IN_COMMENT,
    G_ERR_NON_DIGIT_IN_CONST,
    G_ERR_DIGIT_RADIX,
    G_ERR_FLOAT_RADIX,
    G_ERR_FLOAT_MALFORMED
} GErrorType;
typedef enum {
    G_KEY_FILE_ERROR_UNKNOWN_ENCODING,
    G_KEY_FILE_ERROR_PARSE,
    G_KEY_FILE_ERROR_NOT_FOUND,
    G_KEY_FILE_ERROR_KEY_NOT_FOUND,
    G_KEY_FILE_ERROR_GROUP_NOT_FOUND,
    G_KEY_FILE_ERROR_INVALID_VALUE
} GKeyFileError;
typedef enum {
    G_SPAWN_ERROR_FORK,
    G_SPAWN_ERROR_READ,
    G_SPAWN_ERROR_CHDIR,
    G_SPAWN_ERROR_ACCES,
    G_SPAWN_ERROR_PERM,
    G_SPAWN_ERROR_2BIG,
    G_SPAWN_ERROR_NOEXEC,
    G_SPAWN_ERROR_NAMETOOLONG,
    G_SPAWN_ERROR_NOENT,
    G_SPAWN_ERROR_NOMEM,
    G_SPAWN_ERROR_NOTDIR,
    G_SPAWN_ERROR_LOOP,
    G_SPAWN_ERROR_TXTBUSY,
    G_SPAWN_ERROR_IO,
    G_SPAWN_ERROR_NFILE,
    G_SPAWN_ERROR_MFILE,
    G_SPAWN_ERROR_INVAL,
    G_SPAWN_ERROR_ISDIR,
    G_SPAWN_ERROR_LIBBAD,
    G_SPAWN_ERROR_FAILED
} GSpawnError;
typedef enum {
    G_HOOK_FLAG_ACTIVE = 1 &lt;&lt; 0,
    G_HOOK_FLAG_IN_CALL = 1 &lt;&lt; 1,
    G_HOOK_FLAG_MASK = 0x0f
} GHookFlagMask;
typedef enum {
    G_THREAD_ERROR_AGAIN
} GThreadError;
typedef enum {
    G_OPTION_ERROR_UNKNOWN_OPTION,
    G_OPTION_ERROR_BAD_VALUE,
    G_OPTION_ERROR_FAILED
} GOptionError;
typedef enum {
    G_ASCII_ALNUM = 1 &lt;&lt; 0,
    G_ASCII_ALPHA = 1 &lt;&lt; 1,
    G_ASCII_CNTRL = 1 &lt;&lt; 2,
    G_ASCII_DIGIT = 1 &lt;&lt; 3,
    G_ASCII_GRAPH = 1 &lt;&lt; 4,
    G_ASCII_LOWER = 1 &lt;&lt; 5,
    G_ASCII_PRINT = 1 &lt;&lt; 6,
    G_ASCII_PUNCT = 1 &lt;&lt; 7,
    G_ASCII_SPACE = 1 &lt;&lt; 8,
    G_ASCII_UPPER = 1 &lt;&lt; 9,
    G_ASCII_XDIGIT = 1 &lt;&lt; 10
} GAsciiType;
typedef enum {
    G_SHELL_ERROR_BAD_QUOTING,
    G_SHELL_ERROR_EMPTY_STRING,
    G_SHELL_ERROR_FAILED
} GShellError;
typedef struct _GMappedFile GMappedFile;
extern const guint16 *const g_ascii_table;
extern gboolean g_source_remove(guint);
extern void g_thread_set_priority(GThread *, GThreadPriority);
extern GError *g_error_copy(const GError *);
extern gchar *g_utf8_prev_char(const gchar *);
extern void g_node_pop_allocator(void);
extern GPrintFunc g_set_printerr_handler(GPrintFunc);
extern GMemChunk *g_mem_chunk_new(const gchar *, gint, gulong, gint);
extern void g_on_error_stack_trace(const gchar *);
extern void g_mem_chunk_print(GMemChunk *);
extern guint g_list_length(GList *);
extern void g_main_loop_quit(GMainLoop *);
extern void g_hook_insert_before(GHookList *, GHook *, GHook *);
extern gboolean g_get_filename_charsets(const gchar * **);
extern GList *g_queue_pop_nth_link(GQueue *, guint);
extern GSList *g_slist_copy(GSList *);
extern gint g_mkstemp(gchar *);
extern GError *g_error_new(GQuark, gint, const gchar *, ...);
extern GString *g_string_set_size(GString *, gsize);
extern gchar *g_get_prgname(void);
extern gpointer g_ptr_array_remove_index_fast(GPtrArray *, guint);
extern GRand *g_rand_new_with_seed_array(const guint32 *, guint);
extern void g_dir_close(GDir *);
extern const gchar *const *g_get_system_config_dirs(void);
extern void g_relation_insert(GRelation *, ...);
extern void g_option_context_free(GOptionContext *);
extern gchar *g_strcanon(gchar *, const gchar *, gchar);
extern guint g_slist_length(GSList *);
extern gchar *g_key_file_to_data(GKeyFile *, gsize *, GError * *);
extern GPatternSpec *g_pattern_spec_new(const gchar *);
extern gchar **g_strdupv(gchar * *);
extern gboolean g_unichar_isupper(gunichar);
extern void g_completion_free(GCompletion *);
extern void g_timer_reset(GTimer *);
extern GHashTable *g_hash_table_new_full(GHashFunc, GEqualFunc,
					 GDestroyNotify, GDestroyNotify);
extern void g_static_rec_mutex_init(GStaticRecMutex *);
extern gint g_atomic_int_exchange_and_add(gint *, gint);
extern gchar *g_strjoin(const gchar *, ...);
extern GSList *g_slist_last(GSList *);
extern void g_key_file_set_string(GKeyFile *, const gchar *, const gchar *,
				  const gchar *);
extern GPtrArray *g_ptr_array_new(void);
extern gboolean g_markup_parse_context_end_parse(GMarkupParseContext *,
						 GError * *);
extern gboolean g_key_file_get_boolean(GKeyFile *, const gchar *,
				       const gchar *, GError * *);
extern gchar *g_strrstr_len(const gchar *, gssize, const gchar *);
extern gint g_hook_compare_ids(GHook *, GHook *);
extern gchar *g_utf8_strup(const gchar *, gssize);
extern gchar *g_build_filename(const gchar *, ...);
extern void g_datalist_init(GData * *);
extern GIOStatus g_io_channel_set_flags(GIOChannel *, GIOFlags,
					GError * *);
extern const gchar *const g_utf8_skip;
extern void g_option_group_free(GOptionGroup *);
extern void g_completion_clear_items(GCompletion *);
extern gboolean g_hash_table_steal(GHashTable *, gconstpointer);
extern gboolean g_spawn_async_with_pipes(const gchar *, gchar * *,
					 gchar * *, GSpawnFlags,
					 GSpawnChildSetupFunc, gpointer,
					 GPid *, gint *, gint *, gint *,
					 GError * *);
extern void g_clear_error(GError * *);
extern gpointer g_queue_pop_head(GQueue *);
extern GThreadPool *g_thread_pool_new(GFunc, gpointer, gint, gboolean,
				      GError * *);
extern void g_static_rec_mutex_lock(GStaticRecMutex *);
extern guint g_thread_pool_get_num_threads(GThreadPool *);
extern void g_date_set_month(GDate *, GDateMonth);
extern gchar *g_filename_to_uri(const gchar *, const gchar *, GError * *);
extern gboolean g_date_valid_julian(guint32);
extern GQuark g_option_error_quark(void);
extern gchar **g_key_file_get_keys(GKeyFile *, const gchar *, gsize *,
				   GError * *);
extern gchar g_ascii_tolower(gchar);
extern GMainLoop *g_main_loop_new(GMainContext *, gboolean);
extern gint g_relation_count(GRelation *, gconstpointer, gint);
extern void g_ptr_array_add(GPtrArray *, gpointer);
extern void g_async_queue_unlock(GAsyncQueue *);
extern gboolean g_pattern_match_string(GPatternSpec *, const gchar *);
extern void g_key_file_free(GKeyFile *);
extern GMainContext *g_main_context_default(void);
extern GIOStatus g_io_channel_read_line_string(GIOChannel *, GString *,
					       gsize *, GError * *);
extern GSource *g_source_ref(GSource *);
extern gint g_slist_index(GSList *, gconstpointer);
extern GSList *g_slist_find(GSList *, gconstpointer);
extern gboolean g_main_context_prepare(GMainContext *, gint *);
extern char *g_markup_vprintf_escaped(const char *, va_list);
extern void g_ptr_array_set_size(GPtrArray *, gint);
extern void g_set_application_name(const gchar *);
extern gint g_main_context_query(GMainContext *, gint, gint *, GPollFD *,
				 gint);
extern void g_rand_set_seed(GRand *, guint32);
extern GList *g_list_last(GList *);
extern gchar *g_ascii_dtostr(gchar *, gint, gdouble);
extern gboolean g_main_loop_is_running(GMainLoop *);
extern void g_pattern_spec_free(GPatternSpec *);
extern GTree *g_tree_new_full(GCompareDataFunc, gpointer, GDestroyNotify,
			      GDestroyNotify);
extern guint8 g_date_get_monday_weeks_in_year(GDateYear);
extern guint g_idle_add(GSourceFunc, gpointer);
extern void g_main_context_release(GMainContext *);
extern int g_main_depth(void);
extern void g_cache_key_foreach(GCache *, GHFunc, gpointer);
extern void g_static_rec_mutex_free(GStaticRecMutex *);
extern guint g_date_get_monday_week_of_year(const GDate *);
extern const gchar *g_io_channel_get_line_term(GIOChannel *, gint *);
extern guint g_scanner_set_scope(GScanner *, guint);
extern gchar *g_string_free(GString *, gboolean);
extern void g_source_set_priority(GSource *, gint);
extern void g_async_queue_unref(GAsyncQueue *);
extern void g_hook_prepend(GHookList *, GHook *);
extern gpointer g_queue_peek_head(GQueue *);
extern void g_byte_array_sort_with_data(GByteArray *, GCompareDataFunc,
					gpointer);
extern gboolean g_key_file_load_from_data_dirs(GKeyFile *, const gchar *,
					       gchar * *, GKeyFileFlags,
					       GError * *);
extern guint g_trash_stack_height(GTrashStack * *);
extern void g_markup_parse_context_free(GMarkupParseContext *);
extern GString *g_string_append_len(GString *, const gchar *, gssize);
extern const gchar *g_getenv(const gchar *);
extern gint *g_key_file_get_integer_list(GKeyFile *, const gchar *,
					 const gchar *, gsize *,
					 GError * *);
extern gunichar2 *g_ucs4_to_utf16(const gunichar *, glong, glong *,
				  glong *, GError * *);
extern GList *g_list_remove(GList *, gconstpointer);
extern gboolean g_hook_destroy(GHookList *, gulong);
extern GRand *g_rand_copy(GRand *);
extern GString *g_string_ascii_up(GString *);
extern const gchar *g_io_channel_get_encoding(GIOChannel *);
extern void g_random_set_seed(guint32);
extern GOptionGroup *g_option_context_get_main_group(GOptionContext *);
extern guint g_idle_add_full(gint, GSourceFunc, gpointer, GDestroyNotify);
extern GArray *g_array_append_vals(GArray *, gconstpointer, guint);
extern GHook *g_hook_next_valid(GHookList *, GHook *, gboolean);
extern gchar *g_path_get_basename(const gchar *);
extern gchar *g_key_file_get_value(GKeyFile *, const gchar *,
				   const gchar *, GError * *);
extern void g_slist_pop_allocator(void);
extern void g_node_unlink(GNode *);
extern gpointer g_hash_table_find(GHashTable *, GHRFunc, gpointer);
extern GList *g_list_sort(GList *, GCompareFunc);
extern void g_date_set_time(GDate *, GTime);
extern GPollFunc g_main_context_get_poll_func(GMainContext *);
extern gchar *g_strndup(const gchar *, gsize);
extern GSList *g_slist_remove(GSList *, gconstpointer);
extern void g_date_order(GDate *, GDate *);
extern gdouble g_timer_elapsed(GTimer *, gulong *);
extern gchar *g_strchug(gchar *);
extern GQuark g_io_channel_error_quark(void);
extern void g_cache_remove(GCache *, gconstpointer);
extern GArray *g_array_remove_index_fast(GArray *, guint);
extern GAsyncQueue *g_async_queue_ref(GAsyncQueue *);
extern GQuark g_key_file_error_quark(void);
extern gboolean g_atomic_pointer_compare_and_exchange(gpointer * volatile,
						      gpointer, gpointer);
extern gboolean g_date_valid_dmy(GDateDay, GDateMonth, GDateYear);
extern gpointer g_mem_chunk_alloc0(GMemChunk *);
extern gint g_async_queue_length_unlocked(GAsyncQueue *);
extern GUnicodeBreakType g_unichar_break_type(gunichar);
extern gboolean g_date_valid_year(GDateYear);
extern void g_thread_pool_set_max_unused_threads(gint);
extern GArray *g_array_remove_index(GArray *, guint);
extern void g_key_file_remove_group(GKeyFile *, const gchar *, GError * *);
extern gchar *g_key_file_get_comment(GKeyFile *, const gchar *,
				     const gchar *, GError * *);
extern gboolean g_io_channel_get_buffered(GIOChannel *);
extern GList *g_list_delete_link(GList *, GList *);
extern GList *g_completion_complete(GCompletion *, const gchar *,
				    gchar * *);
extern gboolean g_unichar_isdigit(gunichar);
extern void g_date_subtract_years(GDate *, guint);
extern gchar *g_utf8_strchr(const char *, gssize, gunichar);
extern void g_queue_push_head(GQueue *, gpointer);
extern guint g_queue_get_length(GQueue *);
extern gchar *g_string_chunk_insert_const(GStringChunk *, const gchar *);
extern void g_static_rw_lock_init(GStaticRWLock *);
extern guint g_bit_storage(gulong);
extern GSList *g_slist_sort(GSList *, GCompareFunc);
extern gint g_relation_delete(GRelation *, gconstpointer, gint);
extern GIOStatus g_io_channel_write_chars(GIOChannel *, const gchar *,
					  gssize, gsize *, GError * *);
extern GList *g_list_find(GList *, gconstpointer);
extern gpointer g_queue_peek_tail(GQueue *);
extern GIOStatus g_io_channel_write_unichar(GIOChannel *, gunichar,
					    GError * *);
extern void g_hook_list_clear(GHookList *);
extern guint g_child_watch_add(GPid, GChildWatchFunc, gpointer);
extern void g_hook_list_init(GHookList *, guint);
extern gpointer g_realloc(gpointer, gulong);
extern void g_queue_push_nth(GQueue *, gpointer, gint);
extern gpointer g_trash_stack_peek(GTrashStack * *);
extern const gchar *g_get_application_name(void);
extern gint g_main_context_check(GMainContext *, gint, GPollFD *, gint);
extern gunichar *g_unicode_canonical_decomposition(gunichar, gsize *);
extern gpointer g_async_queue_timed_pop_unlocked(GAsyncQueue *,
						 GTimeVal *);
extern gboolean g_option_context_get_help_enabled(GOptionContext *);
extern void g_log_default_handler(const gchar *, GLogLevelFlags,
				  const gchar *, gpointer);
extern gpointer g_async_queue_try_pop(GAsyncQueue *);
extern void g_option_group_set_translation_domain(GOptionGroup *,
						  const gchar *);
extern void g_source_destroy(GSource *);
extern gchar *g_filename_to_utf8(const gchar *, gssize, gsize *, gsize *,
				 GError * *);
extern gboolean g_key_file_load_from_data(GKeyFile *, const gchar *, gsize,
					  GKeyFileFlags, GError * *);
extern GKeyFile *g_key_file_new(void);
extern GDateYear g_date_get_year(const GDate *);
extern const gchar *g_get_user_config_dir(void);
extern gint g_slist_position(GSList *, GSList *);
extern const guint glib_minor_version;
extern GSList *g_slist_delete_link(GSList *, GSList *);
extern GDateWeekday g_date_get_weekday(const GDate *);
extern gchar *g_convert_with_iconv(const gchar *, gssize, GIConv, gsize *,
				   gsize *, GError * *);
extern GNode *g_node_insert(GNode *, gint, GNode *);
extern void g_source_set_callback(GSource *, GSourceFunc, gpointer,
				  GDestroyNotify);
extern void g_source_add_poll(GSource *, GPollFD *);
extern void g_slist_free_1(GSList *);
extern GByteArray *g_byte_array_remove_index_fast(GByteArray *, guint);
extern GHook *g_hook_find_data(GHookList *, gboolean, gpointer);
extern void g_ptr_array_foreach(GPtrArray *, GFunc, gpointer);
extern void g_scanner_scope_add_symbol(GScanner *, guint, const gchar *,
				       gpointer);
extern GMainContext *g_main_context_ref(GMainContext *);
extern void g_hook_list_invoke(GHookList *, gboolean);
extern gint g_source_get_priority(GSource *);
extern void g_list_free_1(GList *);
extern gint g_key_file_get_integer(GKeyFile *, const gchar *,
				   const gchar *, GError * *);
extern GSList *g_slist_nth(GSList *, guint);
extern gchar *g_shell_unquote(const gchar *, GError * *);
extern void g_option_context_add_group(GOptionContext *, GOptionGroup *);
extern gboolean g_unichar_isprint(gunichar);
extern GList *g_list_copy(GList *);
extern void g_cache_value_foreach(GCache *, GHFunc, gpointer);
extern void g_key_file_set_comment(GKeyFile *, const gchar *,
				   const gchar *, const gchar *,
				   GError * *);
extern gint g_ascii_digit_value(gchar);
extern void g_main_context_dispatch(GMainContext *);
extern GIOChannel *g_io_channel_new_file(const gchar *, const gchar *,
					 GError * *);
extern gint g_unichar_digit_value(gunichar);
extern void g_source_set_can_recurse(GSource *, gboolean);
extern void g_main_loop_unref(GMainLoop *);
extern GNode *g_node_first_sibling(GNode *);
extern gint g_date_days_between(const GDate *, const GDate *);
extern void g_mem_chunk_free(GMemChunk *, gpointer);
extern gchar *g_markup_escape_text(const gchar *, gssize);
extern gunichar g_unichar_tolower(gunichar);
extern void g_queue_push_nth_link(GQueue *, gint, GList *);
extern char *g_markup_printf_escaped(const char *, ...);
extern void g_hook_unref(GHookList *, GHook *);
extern GNode *g_node_find(GNode *, GTraverseType, GTraverseFlags,
			  gpointer);
extern gchar *g_ascii_formatd(gchar *, gint, const gchar *, gdouble);
extern gpointer g_scanner_scope_lookup_symbol(GScanner *, guint,
					      const gchar *);
extern gpointer g_dataset_id_remove_no_notify(gconstpointer, GQuark);
extern GQueue *g_queue_new(void);
extern GQuark g_markup_error_quark(void);
extern void g_option_context_set_ignore_unknown_options(GOptionContext *,
							gboolean);
extern void g_completion_remove_items(GCompletion *, GList *);
extern void g_datalist_id_set_data_full(GData * *, GQuark, gpointer,
					GDestroyNotify);
extern void g_trash_stack_push(GTrashStack * *, gpointer);
extern void g_async_queue_lock(GAsyncQueue *);
extern void g_ptr_array_sort(GPtrArray *, GCompareFunc);
extern void g_queue_free(GQueue *);
extern void g_array_sort_with_data(GArray *, GCompareDataFunc, gpointer);
extern gboolean g_relation_exists(GRelation *, ...);
extern gboolean g_utf8_validate(const char *, gssize, const gchar * *);
extern void g_static_rw_lock_writer_unlock(GStaticRWLock *);
extern GByteArray *g_byte_array_remove_index(GByteArray *, guint);
extern guint g_hash_table_foreach_remove(GHashTable *, GHRFunc, gpointer);
extern GString *g_string_insert_unichar(GString *, gssize, gunichar);
extern GSList *g_slist_prepend(GSList *, gpointer);
extern GList *g_list_first(GList *);
extern GMarkupParseContext *g_markup_parse_context_new(const GMarkupParser
						       *,
						       GMarkupParseFlags,
						       gpointer,
						       GDestroyNotify);
extern void g_io_channel_init(GIOChannel *);
extern GQuark g_convert_error_quark(void);
extern GNode *g_node_get_root(GNode *);
extern gchar *g_filename_display_name(const gchar *);
extern gint g_io_channel_unix_get_fd(GIOChannel *);
extern gboolean g_int_equal(gconstpointer, gconstpointer);
extern void g_hook_list_marshal_check(GHookList *, gboolean,
				      GHookCheckMarshaller, gpointer);
extern void g_static_mutex_init(GStaticMutex *);
extern GString *g_string_prepend_unichar(GString *, gunichar);
extern GList *g_queue_find_custom(GQueue *, gconstpointer, GCompareFunc);
extern void g_key_file_set_string_list(GKeyFile *, const gchar *,
				       const gchar *,
				       const gchar * const *, gsize);
extern const guint glib_micro_version;
extern guint32 g_date_get_julian(const GDate *);
extern gpointer g_dataset_id_get_data(gconstpointer, GQuark);
extern gboolean g_date_valid_day(GDateDay);
extern GHook *g_hook_first_valid(GHookList *, gboolean);
extern GIOStatus g_io_channel_read_to_end(GIOChannel *, gchar * *, gsize *,
					  GError * *);
extern void g_scanner_destroy(GScanner *);
extern GString *g_string_insert_c(GString *, gssize, gchar);
extern void g_queue_push_head_link(GQueue *, GList *);
extern GIOChannel *g_io_channel_ref(GIOChannel *);
extern gpointer g_try_realloc(gpointer, gulong);
extern GRelation *g_relation_new(gint);
extern GNode *g_node_nth_child(GNode *, guint);
extern GByteArray *g_byte_array_sized_new(guint);
extern void g_queue_push_tail(GQueue *, gpointer);
extern gboolean g_unichar_validate(gunichar);
extern GSource *g_idle_source_new(void);
extern gchar **g_key_file_get_groups(GKeyFile *, gsize *);
extern void g_scanner_sync_file_offset(GScanner *);
extern GLogLevelFlags g_log_set_always_fatal(GLogLevelFlags);
extern gpointer *g_ptr_array_free(GPtrArray *, gboolean);
extern gint g_utf8_collate(const gchar *, const gchar *);
extern GPrintFunc g_set_print_handler(GPrintFunc);
extern const guint glib_interface_age;
extern void g_hook_list_invoke_check(GHookList *, gboolean);
extern gchar *g_utf8_offset_to_pointer(const gchar *, glong);
extern void g_scanner_input_file(GScanner *, gint);
extern gboolean g_source_get_can_recurse(GSource *);
extern GHook *g_hook_find_func_data(GHookList *, gboolean, gpointer,
				    gpointer);
extern void g_logv(const gchar *, GLogLevelFlags, const gchar *, va_list);
extern gboolean g_error_matches(const GError *, GQuark, gint);
extern gpointer g_async_queue_pop(GAsyncQueue *);
extern gchar **g_uri_list_extract_uris(const gchar *);
extern gboolean g_static_rw_lock_writer_trylock(GStaticRWLock *);
extern void g_date_add_months(GDate *, guint);
extern void g_date_add_days(GDate *, guint);
extern gchar **g_strsplit(const gchar *, const gchar *, gint);
extern GSList *g_slist_remove_all(GSList *, gconstpointer);
extern gdouble g_random_double(void);
extern gdouble g_strtod(const gchar *, gchar * *);
extern void g_queue_sort(GQueue *, GCompareDataFunc, gpointer);
extern gboolean g_str_has_suffix(const gchar *, const gchar *);
extern GList *g_queue_pop_head_link(GQueue *);
extern gint32 g_rand_int_range(GRand *, gint32, gint32);
extern gint g_unichar_to_utf8(gunichar, gchar *);
extern gchar *g_strnfill(gsize, gchar);
extern void g_relation_print(GRelation *);
extern void g_key_file_set_integer_list(GKeyFile *, const gchar *,
					const gchar *, gint *, gsize);
extern GSource *g_main_context_find_source_by_funcs_user_data(GMainContext
							      *,
							      GSourceFuncs
							      *, gpointer);
extern GDate *g_date_new_julian(guint32);
extern void g_node_traverse(GNode *, GTraverseType, GTraverseFlags, gint,
			    GNodeTraverseFunc, gpointer);
extern gchar *g_key_file_get_start_group(GKeyFile *);
extern void g_key_file_set_locale_string(GKeyFile *, const gchar *,
					 const gchar *, const gchar *,
					 const gchar *);
extern GHashTable *g_hash_table_new(GHashFunc, GEqualFunc);
extern const gchar *g_dir_read_name(GDir *);
extern gboolean g_hash_table_remove(GHashTable *, gconstpointer);
extern gchar *g_utf8_strdown(const gchar *, gssize);
extern GIOCondition g_io_channel_get_buffer_condition(GIOChannel *);
extern GSource *g_child_watch_source_new(GPid);
extern void g_static_rec_mutex_unlock(GStaticRecMutex *);
extern glong g_utf8_strlen(const gchar *, gssize);
extern GSList *g_slist_insert(GSList *, gpointer, gint);
extern GNode *g_node_prepend(GNode *, GNode *);
extern void g_propagate_error(GError * *, GError *);
extern GTokenType g_scanner_peek_next_token(GScanner *);
extern GArray *g_array_set_size(GArray *, guint);
extern GString *g_string_erase(GString *, gssize, gssize);
extern gchar *g_strcompress(const gchar *);
extern gint g_async_queue_length(GAsyncQueue *);
extern gboolean g_unichar_isdefined(gunichar);
extern GString *g_string_prepend(GString *, const gchar *);
extern guint32 g_rand_int(GRand *);
extern void g_set_error(GError * *, GQuark, gint, const gchar *, ...);
extern gboolean g_markup_parse_context_parse(GMarkupParseContext *,
					     const gchar *, gssize,
					     GError * *);
extern gboolean g_main_context_pending(GMainContext *);
extern gint g_tree_nnodes(GTree *);
extern gpointer g_datalist_id_get_data(GData * *, GQuark);
extern void g_ptr_array_sort_with_data(GPtrArray *, GCompareDataFunc,
				       gpointer);
extern void g_queue_unlink(GQueue *, GList *);
extern guint g_source_get_id(GSource *);
extern void g_thread_pool_set_max_threads(GThreadPool *, gint, GError * *);
extern gchar *g_utf8_normalize(const gchar *, gssize, GNormalizeMode);
extern GTree *g_tree_new_with_data(GCompareDataFunc, gpointer);
extern gchar *g_path_get_dirname(const gchar *);
extern gint g_thread_pool_get_max_threads(GThreadPool *);
extern GArray *g_array_sized_new(gboolean, gboolean, guint, guint);
extern gboolean g_unichar_islower(gunichar);
extern GString *g_string_assign(GString *, const gchar *);
extern gchar *g_strstr_len(const gchar *, gssize, const gchar *);
extern GArray *g_array_prepend_vals(GArray *, gconstpointer, guint);
extern gdouble g_rand_double_range(GRand *, gdouble, gdouble);
extern void g_key_file_set_list_separator(GKeyFile *, gchar);
extern gboolean g_atomic_int_compare_and_exchange(gint * volatile, gint,
						  gint);
extern void g_mem_profile(void);
extern void g_io_channel_set_buffered(GIOChannel *, gboolean);
extern GMutex *g_static_mutex_get_mutex_impl(GMutex * *);
extern GList *g_list_remove_all(GList *, gconstpointer);
extern void g_static_private_set(GStaticPrivate *, gpointer,
				 GDestroyNotify);
extern void g_timer_start(GTimer *);
extern void g_array_sort(GArray *, GCompareFunc);
extern gchar *g_build_path(const gchar *, const gchar *, ...);
extern gchar *g_key_file_get_string(GKeyFile *, const gchar *,
				    const gchar *, GError * *);
extern void g_return_if_fail_warning(const char *, const char *,
				     const char *);
extern GAsyncQueue *g_async_queue_new(void);
extern GTokenType g_scanner_get_next_token(GScanner *);
extern gchar *g_strescape(const gchar *, const gchar *);
extern gboolean g_tree_remove(GTree *, gconstpointer);
extern GFileError g_file_error_from_errno(gint);
extern GByteArray *g_byte_array_set_size(GByteArray *, guint);
extern GSList *g_slist_insert_before(GSList *, GSList *, gpointer);
extern void g_main_context_unref(GMainContext *);
extern void g_on_error_query(const gchar *);
extern gchar *g_find_program_in_path(const gchar *);
extern GNode *g_node_insert_before(GNode *, GNode *, GNode *);
extern void g_key_file_set_boolean(GKeyFile *, const gchar *,
				   const gchar *, gboolean);
extern void g_key_file_remove_key(GKeyFile *, const gchar *, const gchar *,
				  GError * *);
extern void g_dataset_foreach(gconstpointer, GDataForeachFunc, gpointer);
extern const gchar *g_get_user_data_dir(void);
extern void g_date_subtract_months(GDate *, guint);
extern gboolean g_unichar_iscntrl(gunichar);
extern guint g_timeout_add_full(gint, guint, GSourceFunc, gpointer,
				GDestroyNotify);
extern GIOStatus g_io_channel_read_chars(GIOChannel *, gchar *, gsize,
					 gsize *, GError * *);
extern gint g_bit_nth_msf(gulong, gint);
extern gboolean g_tree_steal(GTree *, gconstpointer);
extern gboolean g_date_valid(const GDate *);
extern void g_io_channel_set_close_on_unref(GIOChannel *, gboolean);
extern void g_tree_replace(GTree *, gpointer, gpointer);
extern void g_async_queue_push_unlocked(GAsyncQueue *, gpointer);
extern GNode *g_node_new(gpointer);
extern void g_mem_set_vtable(GMemVTable *);
extern void g_option_context_add_main_entries(GOptionContext *,
					      const GOptionEntry *,
					      const gchar *);
extern void g_hash_table_foreach(GHashTable *, GHFunc, gpointer);
extern GUnicodeType g_unichar_type(gunichar);
extern GPtrArray *g_ptr_array_sized_new(guint);
extern GList *g_list_insert_sorted(GList *, gpointer, GCompareFunc);
extern GLogFunc g_log_set_default_handler(GLogFunc, gpointer);
extern gsize g_date_strftime(gchar *, gsize, const gchar *, const GDate *);
extern gboolean g_option_context_get_ignore_unknown_options(GOptionContext
							    *);
extern gpointer g_static_private_get(GStaticPrivate *);
extern void g_completion_add_items(GCompletion *, GList *);
extern gchar *g_stpcpy(gchar *, const gchar *);
extern gchar *g_utf8_find_prev_char(const char *, const char *);
extern GOptionContext *g_option_context_new(const gchar *);
extern gchar *g_locale_to_utf8(const gchar *, gssize, gsize *, gsize *,
			       GError * *);
extern gint g_ascii_strncasecmp(const gchar *, const gchar *, gsize);
extern void g_slist_push_allocator(GAllocator *);
extern gboolean g_main_context_acquire(GMainContext *);
extern GSourceFuncs g_idle_funcs;
extern guint g_thread_pool_get_num_unused_threads(void);
extern void g_thread_pool_free(GThreadPool *, gboolean, gboolean);
extern guint g_date_get_sunday_week_of_year(const GDate *);
extern gdouble g_rand_double(GRand *);
extern gint g_ascii_strcasecmp(const gchar *, const gchar *);
extern void g_string_printf(GString *, const gchar *, ...);
extern GQuark g_quark_from_string(const gchar *);
extern void g_hash_table_replace(GHashTable *, gpointer, gpointer);
extern const gchar *g_strip_context(const gchar *, const gchar *);
extern const gchar *g_strerror(gint);
extern void g_mem_chunk_clean(GMemChunk *);
extern GString *g_string_prepend_len(GString *, const gchar *, gssize);
extern GArray *g_array_remove_range(GArray *, guint, guint);
extern void g_queue_remove_all(GQueue *, gconstpointer);
extern gint g_file_open_tmp(const gchar *, gchar * *, GError * *);
extern const gchar *g_get_user_name(void);
extern void g_timer_continue(GTimer *);
extern void g_main_context_set_poll_func(GMainContext *, GPollFunc);
extern void g_timer_destroy(GTimer *);
extern void g_main_context_add_poll(GMainContext *, GPollFD *, gint);
extern GSList *g_slist_alloc(void);
extern GSList *g_slist_reverse(GSList *);
extern GList *g_list_concat(GList *, GList *);
extern gunichar g_utf8_get_char(const gchar *);
extern gchar *g_shell_quote(const gchar *);
extern void g_get_current_time(GTimeVal *);
extern void g_option_group_set_translate_func(GOptionGroup *,
					      GTranslateFunc, gpointer,
					      GDestroyNotify);
extern gunichar g_unichar_totitle(gunichar);
extern gboolean g_spawn_async(const gchar *, gchar * *, gchar * *,
			      GSpawnFlags, GSpawnChildSetupFunc, gpointer,
			      GPid *, GError * *);
extern gchar *g_utf16_to_utf8(const gunichar2 *, glong, glong *, glong *,
			      GError * *);
extern void g_queue_insert_before(GQueue *, GList *, gpointer);
extern GSource *g_main_context_find_source_by_id(GMainContext *, guint);
extern void g_mem_chunk_destroy(GMemChunk *);
extern void g_thread_exit(gpointer);
extern void g_option_group_set_parse_hooks(GOptionGroup *,
					   GOptionParseFunc,
					   GOptionParseFunc);
extern GSList *g_slist_insert_sorted(GSList *, gpointer, GCompareFunc);
extern void g_source_set_callback_indirect(GSource *, gpointer,
					   GSourceCallbackFuncs *);
extern GSList *g_slist_sort_with_data(GSList *, GCompareDataFunc,
				      gpointer);
extern void g_node_reverse_children(GNode *);
extern gpointer g_queue_peek_nth(GQueue *, guint);
extern void g_list_free(GList *);
extern GList *g_list_nth_prev(GList *, guint);
extern void g_strfreev(gchar * *);
extern gboolean g_ptr_array_remove(GPtrArray *, gpointer);
extern const guint glib_major_version;
extern glong g_utf8_pointer_to_offset(const gchar *, const gchar *);
extern gpointer g_tree_lookup(GTree *, gconstpointer);
extern gchar *g_strdup_printf(const gchar *, ...);
extern gboolean g_source_remove_by_user_data(gpointer);
extern gunichar2 *g_utf8_to_utf16(const gchar *, glong, glong *, glong *,
				  GError * *);
extern gunichar *g_utf8_to_ucs4(const gchar *, glong, glong *, glong *,
				GError * *);
extern void g_date_set_day(GDate *, GDateDay);
extern gsize g_io_channel_get_buffer_size(GIOChannel *);
extern void g_hash_table_insert(GHashTable *, gpointer, gpointer);
extern guint g_spaced_primes_closest(guint);
extern void g_option_group_add_entries(GOptionGroup *,
				       const GOptionEntry *);
extern gboolean g_key_file_load_from_file(GKeyFile *, const gchar *,
					  GKeyFileFlags, GError * *);
extern gint32 g_random_int_range(gint32, gint32);
extern gpointer g_hash_table_lookup(GHashTable *, gconstpointer);
extern void g_relation_index(GRelation *, gint, GHashFunc, GEqualFunc);
extern GByteArray *g_byte_array_remove_range(GByteArray *, guint, guint);
extern gchar *g_filename_from_utf8(const gchar *, gssize, gsize *, gsize *,
				   GError * *);
extern GQuark g_thread_error_quark(void);
extern void g_hook_destroy_link(GHookList *, GHook *);
extern gdouble g_random_double_range(gdouble, gdouble);
extern gchar *g_filename_from_uri(const gchar *, gchar * *, GError * *);
extern gboolean g_tree_lookup_extended(GTree *, gconstpointer, gpointer *,
				       gpointer *);
extern gboolean g_unichar_iswide(gunichar);
extern gboolean g_unichar_isxdigit(gunichar);
extern void g_queue_push_tail_link(GQueue *, GList *);
extern void g_spawn_close_pid(GPid);
extern GRand *g_rand_new(void);
extern void g_date_set_julian(GDate *, guint32);
extern GNode *g_node_insert_after(GNode *, GNode *, GNode *);
extern const guint glib_binary_age;
extern void g_static_rec_mutex_lock_full(GStaticRecMutex *, guint);
extern GString *g_string_append_unichar(GString *, gunichar);
extern GStringChunk *g_string_chunk_new(gsize);
extern void g_atexit(GVoidFunc);
extern void g_scanner_scope_remove_symbol(GScanner *, guint,
					  const gchar *);
extern void g_main_context_remove_poll(GMainContext *, GPollFD *);
extern gchar *g_locale_from_utf8(const gchar *, gssize, gsize *, gsize *,
				 GError * *);
extern GMainContext *g_source_get_context(GSource *);
extern GSourceFuncs g_io_watch_funcs;
extern gint g_thread_pool_get_max_unused_threads(void);
extern gboolean g_unichar_isspace(gunichar);
extern GList *g_list_alloc(void);
extern gpointer g_queue_pop_tail(GQueue *);
extern gpointer g_thread_join(GThread *);
extern GSList *g_slist_append(GSList *, gpointer);
extern GNode *g_node_copy(GNode *);
extern void g_time_val_add(GTimeVal *, glong);
extern gboolean g_pattern_match(GPatternSpec *, guint, const gchar *,
				const gchar *);
extern void g_source_remove_poll(GSource *, GPollFD *);
extern gsize g_printf_string_upper_bound(const gchar *, va_list);
extern GCompletion *g_completion_new(GCompletionFunc);
extern gboolean g_date_is_last_of_month(const GDate *);
extern GHook *g_hook_find(GHookList *, gboolean, GHookFindFunc, gpointer);
extern gboolean g_static_rec_mutex_trylock(GStaticRecMutex *);
extern GError *g_error_new_literal(GQuark, gint, const gchar *);
extern void g_date_set_dmy(GDate *, GDateDay, GDateMonth, GDateYear);
extern guint g_node_max_height(GNode *);
extern gboolean g_unichar_isgraph(gunichar);
extern gint g_list_position(GList *, GList *);
extern gboolean g_pattern_match_simple(const gchar *, const gchar *);
extern const gchar *g_get_real_name(void);
extern void g_string_append_printf(GString *, const gchar *, ...);
extern void g_static_private_init(GStaticPrivate *);
extern gunichar *g_utf16_to_ucs4(const gunichar2 *, glong, glong *,
				 glong *, GError * *);
extern void g_rand_free(GRand *);
extern GList *g_queue_peek_tail_link(GQueue *);
extern gchar *g_convert_with_fallback(const gchar *, gssize, const gchar *,
				      const gchar *, gchar *, gsize *,
				      gsize *, GError * *);
extern GSource *g_timeout_source_new(guint);
extern guint g_child_watch_add_full(gint, GPid, GChildWatchFunc, gpointer,
				    GDestroyNotify);
extern void g_node_push_allocator(GAllocator *);
extern void g_queue_foreach(GQueue *, GFunc, gpointer);
extern gchar *g_strdup(const gchar *);
extern gint g_queue_index(GQueue *, gconstpointer);
extern gpointer g_datalist_id_remove_no_notify(GData * *, GQuark);
extern guint8 *g_byte_array_free(GByteArray *, gboolean);
extern void g_date_clamp(GDate *, const GDate *, const GDate *);
extern void g_list_push_allocator(GAllocator *);
extern void g_queue_insert_after(GQueue *, GList *, gpointer);
extern gpointer g_try_malloc(gulong);
extern GIOFlags g_io_channel_get_flags(GIOChannel *);
extern gchar *g_filename_display_basename(const gchar *);
extern GList *g_list_append(GList *, gpointer);
extern gchar *g_utf8_strncpy(gchar *, const gchar *, gsize);
extern gchar **g_key_file_get_string_list(GKeyFile *, const gchar *,
					  const gchar *, gsize *,
					  GError * *);
extern guint g_log_set_handler(const gchar *, GLogLevelFlags, GLogFunc,
			       gpointer);
extern gboolean g_queue_is_empty(GQueue *);
extern GList *g_queue_peek_nth_link(GQueue *, guint);
extern void g_list_foreach(GList *, GFunc, gpointer);
extern gint g_ascii_xdigit_value(gchar);
extern GQuark g_shell_error_quark(void);
extern gpointer g_ptr_array_remove_index(GPtrArray *, guint);
extern GList *g_list_insert(GList *, gpointer, gint);
extern void g_log(const gchar *, GLogLevelFlags, const gchar *, ...);
extern gchar *g_utf8_strrchr(const char *, gssize, gunichar);
extern guint g_string_hash(const GString *);
extern gchar **g_key_file_get_locale_string_list(GKeyFile *, const gchar *,
						 const gchar *,
						 const gchar *, gsize *,
						 GError * *);
extern void g_queue_insert_sorted(GQueue *, gpointer, GCompareDataFunc,
				  gpointer);
extern void g_hook_free(GHookList *, GHook *);
extern gpointer g_tree_search(GTree *, GCompareFunc, gconstpointer);
extern void g_scanner_scope_foreach_symbol(GScanner *, guint, GHFunc,
					   gpointer);
extern GDir *g_dir_open(const gchar *, guint, GError * *);
extern gchar *g_utf8_casefold(const gchar *, gssize);
extern void g_rand_set_seed_array(GRand *, const guint32 *, guint);
extern void g_date_to_struct_tm(const GDate *, struct tm *);
extern gboolean g_key_file_has_group(GKeyFile *, const gchar *);
extern GList *g_list_remove_link(GList *, GList *);
extern gboolean g_date_valid_month(GDateMonth);
extern gboolean g_spawn_command_line_sync(const gchar *, gchar * *,
					  gchar * *, gint *, GError * *);
extern gpointer g_slist_nth_data(GSList *, guint);
extern gchar *g_convert(const gchar *, gssize, const gchar *,
			const gchar *, gsize *, gsize *, GError * *);
extern void g_io_channel_unref(GIOChannel *);
extern void g_markup_parse_context_get_position(GMarkupParseContext *,
						gint *, gint *);
extern void g_datalist_foreach(GData * *, GDataForeachFunc, gpointer);
extern void g_tuples_destroy(GTuples *);
extern guint g_strv_length(gchar * *);
extern gunichar g_unichar_toupper(gunichar);
extern void g_tree_insert(GTree *, gpointer, gpointer);
extern GNode *g_node_copy_deep(GNode *, GCopyFunc, gpointer);
extern gint g_node_child_position(GNode *, GNode *);
extern void g_list_pop_allocator(void);
extern gboolean g_mem_is_system_malloc(void);
extern const gchar *g_get_home_dir(void);
extern void g_async_queue_push(GAsyncQueue *, gpointer);
extern gboolean g_key_file_has_key(GKeyFile *, const gchar *,
				   const gchar *, GError * *);
extern gboolean g_file_get_contents(const gchar *, gchar * *, gsize *,
				    GError * *);
extern gboolean g_path_is_absolute(const gchar *);
extern void g_printerr(const gchar *, ...);
extern void g_completion_set_compare(GCompletion *,
				     GCompletionStrncmpFunc);
extern guint g_timeout_add(guint32, GSourceFunc, gpointer);
extern void g_slist_foreach(GSList *, GFunc, gpointer);
extern GArray *g_array_insert_vals(GArray *, guint, gconstpointer, guint);
extern gchar *g_utf8_collate_key(const gchar *, gssize);
extern void g_static_rw_lock_reader_lock(GStaticRWLock *);
extern void g_mem_chunk_info(void);
extern gchar *g_utf8_strreverse(const gchar *, gssize);
extern GByteArray *g_byte_array_new(void);
extern gboolean g_setenv(const gchar *, const gchar *, gboolean);
extern gchar *g_get_current_dir(void);
extern GTree *g_tree_new(GCompareFunc);
extern gboolean g_unichar_isalpha(gunichar);
extern gsize g_strlcat(gchar *, const gchar *, gsize);
extern gboolean g_main_context_iteration(GMainContext *, gboolean);
extern GHook *g_hook_ref(GHookList *, GHook *);
extern GNode *g_node_find_child(GNode *, GTraverseFlags, gpointer);
extern void g_option_group_set_error_hook(GOptionGroup *,
					  GOptionErrorFunc);
extern gint g_bit_nth_lsf(gulong, gint);
extern gpointer g_async_queue_try_pop_unlocked(GAsyncQueue *);
extern GCache *g_cache_new(GCacheNewFunc, GCacheDestroyFunc, GCacheDupFunc,
			   GCacheDestroyFunc, GHashFunc, GHashFunc,
			   GEqualFunc);
extern void g_print(const gchar *, ...);
extern gint g_unichar_xdigit_value(gunichar);
extern GTimer *g_timer_new(void);
extern gchar *g_string_chunk_insert(GStringChunk *, const gchar *);
extern gchar *g_file_read_link(const gchar *, GError * *);
extern void g_assert_warning(const char *, const char *, const int,
			     const char *, const char *);
extern guint g_str_hash(gconstpointer);
extern void g_key_file_set_locale_string_list(GKeyFile *, const gchar *,
					      const gchar *, const gchar *,
					      const gchar * const *,
					      gsize);
extern GString *g_string_sized_new(gsize);
extern void g_hash_table_destroy(GHashTable *);
extern void g_static_mutex_free(GStaticMutex *);
extern gchar *g_ascii_strup(const gchar *, gssize);
extern gchar g_ascii_toupper(gchar);
extern guint g_date_get_iso8601_week_of_year(const GDate *);
extern void g_slist_free(GSList *);
extern gboolean g_string_equal(const GString *, const GString *);
extern guint g_scanner_cur_line(GScanner *);
extern gint g_date_compare(const GDate *, const GDate *);
extern GString *g_string_insert_len(GString *, gssize, const gchar *,
				    gssize);
extern gchar *g_strdelimit(gchar *, const gchar *, gchar);
extern guint g_node_n_children(GNode *);
extern GNode *g_node_last_sibling(GNode *);
extern const gchar *const *g_get_language_names(void);
extern GHook *g_hook_alloc(GHookList *);
extern GDateMonth g_date_get_month(const GDate *);
extern gboolean g_date_is_leap_year(GDateYear);
extern gpointer g_queue_pop_nth(GQueue *, guint);
extern gchar *g_strreverse(gchar *);
extern guint g_hash_table_size(GHashTable *);
extern gpointer g_mem_chunk_alloc(GMemChunk *);
extern GList *g_queue_peek_head_link(GQueue *);
extern GList *g_queue_find(GQueue *, gconstpointer);
extern void g_dataset_id_set_data_full(gconstpointer, GQuark, gpointer,
				       GDestroyNotify);
extern void g_unsetenv(const gchar *);
extern guint64 g_ascii_strtoull(const gchar *, gchar * *, guint);
extern gboolean g_spawn_command_line_async(const gchar *, GError * *);
extern GHook *g_hook_find_func(GHookList *, gboolean, gpointer);
extern gchar *g_array_free(GArray *, gboolean);
extern gpointer g_malloc0(gulong);
extern gint g_node_child_index(GNode *, gpointer);
extern GIOStatus g_io_channel_shutdown(GIOChannel *, gboolean, GError * *);
extern GQuark g_quark_try_string(const gchar *);
extern GIOStatus g_io_channel_set_encoding(GIOChannel *, const gchar *,
					   GError * *);
extern gboolean g_scanner_eof(GScanner *);
extern void g_cache_destroy(GCache *);
extern gboolean g_spawn_sync(const gchar *, gchar * *, gchar * *,
			     GSpawnFlags, GSpawnChildSetupFunc, gpointer,
			     gchar * *, gchar * *, gint *, GError * *);
extern gboolean g_static_rw_lock_reader_trylock(GStaticRWLock *);
extern void g_byte_array_sort(GByteArray *, GCompareFunc);
extern void g_atomic_int_add(gint * volatile, gint);
extern gpointer g_async_queue_timed_pop(GAsyncQueue *, GTimeVal *);
extern GHook *g_hook_get(GHookList *, gulong);
extern void g_option_context_set_help_enabled(GOptionContext *, gboolean);
extern guint g_static_rec_mutex_unlock_full(GStaticRecMutex *);
extern gboolean g_hash_table_lookup_extended(GHashTable *, gconstpointer,
					     gpointer *, gpointer *);
extern void g_date_add_years(GDate *, guint);
extern void g_static_private_free(GStaticPrivate *);
extern const gchar *g_quark_to_string(GQuark);
extern GList *g_list_prepend(GList *, gpointer);
extern gchar *g_utf8_find_next_char(const gchar *, const gchar *);
extern void g_static_rw_lock_writer_lock(GStaticRWLock *);
extern GIOStatus g_io_channel_read_line(GIOChannel *, gchar * *, gsize *,
					gsize *, GError * *);
extern void g_thread_pool_stop_unused_threads(void);
extern const gchar *const *g_get_system_data_dirs(void);
extern GLogLevelFlags g_log_set_fatal_mask(const gchar *, GLogLevelFlags);
extern GMainContext *g_main_loop_get_context(GMainLoop *);
extern gpointer g_malloc(gulong);
extern GIOStatus g_io_channel_flush(GIOChannel *, GError * *);
extern gboolean g_file_test(const gchar *, GFileTest);
extern void g_key_file_set_integer(GKeyFile *, const gchar *,
				   const gchar *, gint);
extern void g_date_set_year(GDate *, GDateYear);
extern gpointer g_once_impl(GOnce *, GThreadFunc, gpointer);
extern void g_usleep(gulong);
extern void g_thread_pool_push(GThreadPool *, gpointer, GError * *);
extern void g_key_file_remove_comment(GKeyFile *, const gchar *,
				      const gchar *, GError * *);
extern GTuples *g_relation_select(GRelation *, gconstpointer, gint);
extern gboolean g_unichar_istitle(gunichar);
extern gchar *g_strrstr(const gchar *, const gchar *);
extern GQuark g_spawn_error_quark(void);
extern GTokenType g_scanner_cur_token(GScanner *);
extern void g_date_free(GDate *);
extern gboolean g_io_channel_get_close_on_unref(GIOChannel *);
extern GScanner *g_scanner_new(const GScannerConfig *);
extern guint g_node_n_nodes(GNode *, GTraverseFlags);
extern gint g_tree_height(GTree *);
extern gboolean g_str_has_prefix(const gchar *, const gchar *);
extern gunichar g_utf8_get_char_validated(const gchar *, gssize);
extern void g_scanner_unexp_token(GScanner *, GTokenType, const gchar *,
				  const gchar *, const gchar *,
				  const gchar *, gint);
extern GString *g_string_prepend_c(GString *, gchar);
extern void g_relation_destroy(GRelation *);
extern guint g_hash_table_foreach_steal(GHashTable *, GHRFunc, gpointer);
extern void g_free(gpointer);
extern guint g_int_hash(gconstpointer);
extern gboolean g_threads_got_initialized;
extern void g_source_get_current_time(GSource *, GTimeVal *);
extern GList *g_queue_pop_tail_link(GQueue *);
extern GString *g_string_new(const gchar *);
extern void g_key_file_set_boolean_list(GKeyFile *, const gchar *,
					const gchar *, gboolean *, gsize);
extern GString *g_string_append(GString *, const gchar *);
extern GByteArray *g_byte_array_append(GByteArray *, const guint8 *,
				       guint);
extern void g_key_file_set_value(GKeyFile *, const gchar *, const gchar *,
				 const gchar *);
extern gboolean g_pattern_spec_equal(GPatternSpec *, GPatternSpec *);
extern GMainContext *g_main_context_new(void);
extern gboolean g_unichar_ispunct(gunichar);
extern guint8 g_date_get_sunday_weeks_in_year(GDateYear);
extern void g_date_subtract_days(GDate *, guint);
extern gboolean g_date_valid_weekday(GDateWeekday);
extern gchar **g_strsplit_set(const gchar *, const gchar *, gint);
extern void g_dataset_destroy(gconstpointer);
extern gpointer g_async_queue_pop_unlocked(GAsyncQueue *);
extern guint g_scanner_cur_position(GScanner *);
extern guint g_date_get_day_of_year(const GDate *);
extern GList *g_list_find_custom(GList *, gconstpointer, GCompareFunc);
extern void g_source_unref(GSource *);
extern GSList *g_slist_remove_link(GSList *, GSList *);
extern GDateDay g_date_get_day(const GDate *);
extern gboolean g_option_context_parse(GOptionContext *, gint *,
				       gchar * **, GError * *);
extern void g_tree_foreach(GTree *, GTraverseFunc, gpointer);
extern void g_string_chunk_free(GStringChunk *);
extern gchar *g_strjoinv(const gchar *, gchar * *);
extern GString *g_string_append_c(GString *, gchar);
extern GString *g_string_truncate(GString *, gsize);
extern const gchar *g_get_tmp_dir(void);
extern void g_scanner_input_text(GScanner *, const gchar *, guint);
extern gpointer g_list_nth_data(GList *, guint);
extern GNode *g_node_last_child(GNode *);
extern gboolean g_node_is_ancestor(GNode *, GNode *);
extern GString *g_string_ascii_down(GString *);
extern void g_blow_chunks(void);
extern gboolean g_unichar_get_mirror_char(gunichar, gunichar *);
extern GOptionGroup *g_option_group_new(const gchar *, const gchar *,
					const gchar *, gpointer,
					GDestroyNotify);
extern const gchar *g_get_user_cache_dir(void);
extern gboolean *g_key_file_get_boolean_list(GKeyFile *, const gchar *,
					     const gchar *, gsize *,
					     GError * *);
extern void g_scanner_warn(GScanner *, const gchar *, ...);
extern void g_queue_delete_link(GQueue *, GList *);
extern guint g_direct_hash(gconstpointer);
extern GSList *g_slist_find_custom(GSList *, gconstpointer, GCompareFunc);
extern GTokenValue g_scanner_cur_value(GScanner *);
extern guint8 g_date_get_days_in_month(GDateMonth, GDateYear);
extern gboolean g_get_charset(const char **);
extern gboolean g_unichar_isalnum(gunichar);
extern GList *g_list_reverse(GList *);
extern void g_hook_insert_sorted(GHookList *, GHook *, GHookCompareFunc);
extern guint g_source_attach(GSource *, GMainContext *);
extern gchar *g_strconcat(const gchar *, ...);
extern void g_nullify_pointer(gpointer *);
extern void g_ptr_array_remove_range(GPtrArray *, guint, guint);
extern void g_static_rw_lock_free(GStaticRWLock *);
extern GString *g_string_new_len(const gchar *, gssize);
extern GList *g_list_insert_before(GList *, GList *, gpointer);
extern void g_date_set_parse(GDate *, const gchar *);
extern void g_log_remove_handler(const gchar *, guint);
extern gboolean g_str_equal(gconstpointer, gconstpointer);
extern GMainLoop *g_main_loop_ref(GMainLoop *);
extern gchar *g_ucs4_to_utf8(const gunichar *, glong, glong *, glong *,
			     GError * *);
extern gpointer g_memdup(gconstpointer, guint);
extern GAllocator *g_allocator_new(const gchar *, guint);
extern GList *g_completion_complete_utf8(GCompletion *, const gchar *,
					 gchar * *);
extern void g_main_loop_run(GMainLoop *);
extern void g_scanner_error(GScanner *, const gchar *, ...);
extern void g_mem_chunk_reset(GMemChunk *);
extern GThread *g_thread_create_full(GThreadFunc, gpointer, gulong,
				     gboolean, gboolean, GThreadPriority,
				     GError * *);
extern gboolean g_date_is_first_of_month(const GDate *);
extern gunichar *g_utf8_to_ucs4_fast(const gchar *, glong, glong *);
extern void g_queue_reverse(GQueue *);
extern void g_node_children_foreach(GNode *, GTraverseFlags,
				    GNodeForeachFunc, gpointer);
extern void g_timer_stop(GTimer *);
extern GSourceFuncs g_timeout_funcs;
extern gboolean g_main_context_wait(GMainContext *, GCond *, GMutex *);
extern void g_set_prgname(const gchar *);
extern void g_allocator_free(GAllocator *);
extern const gchar *g_markup_parse_context_get_element(GMarkupParseContext
						       *);
extern guint g_parse_debug_string(const gchar *, const GDebugKey *, guint);
extern void g_error_free(GError *);
extern gchar *g_string_chunk_insert_len(GStringChunk *, const gchar *,
					gssize);
extern GArray *g_array_new(gboolean, gboolean, guint);
extern GDate *g_date_new_dmy(GDateDay, GDateMonth, GDateYear);
extern GMemVTable *glib_mem_profiler_table;
extern void g_qsort_with_data(gconstpointer, gint, gsize, GCompareDataFunc,
			      gpointer);
extern gboolean g_shell_parse_argv(const gchar *, gint *, gchar * **,
				   GError * *);
extern gchar *g_strchomp(gchar *);
extern guint32 g_random_int(void);
extern void g_option_context_set_main_group(GOptionContext *,
					    GOptionGroup *);
extern void g_date_clear(GDate *, guint);
extern GIOStatus g_io_channel_read_unichar(GIOChannel *, gunichar *,
					   GError * *);
extern GList *g_list_nth(GList *, guint);
extern void g_node_destroy(GNode *);
extern const gchar *glib_check_version(guint, guint, guint);
extern GThread *g_thread_self(void);
extern GList *g_list_sort_with_data(GList *, GCompareDataFunc, gpointer);
extern void g_io_channel_set_line_term(GIOChannel *, const gchar *, gint);
extern GIOChannel *g_io_channel_unix_new(gint);
extern GThreadFunctions g_thread_functions_for_glib_use;
extern GString *g_string_insert(GString *, gssize, const gchar *);
extern gpointer g_trash_stack_pop(GTrashStack * *);
extern void g_hook_list_marshal(GHookList *, gboolean, GHookMarshaller,
				gpointer);
extern size_t g_iconv(GIConv, gchar * *, gsize *, gchar * *, gsize *);
extern void g_queue_remove(GQueue *, gconstpointer);
extern const gchar *g_path_skip_root(const gchar *);
extern gint g_queue_link_index(GQueue *, GList *);
extern gpointer g_tuples_index(GTuples *, gint, gint);
extern GIOChannelError g_io_channel_error_from_errno(gint);
extern void g_main_context_wakeup(GMainContext *);
extern gboolean g_direct_equal(gconstpointer, gconstpointer);
extern GSource *g_source_new(GSourceFuncs *, guint);
extern gboolean g_idle_remove_by_data(gpointer);
extern void g_io_channel_set_buffer_size(GIOChannel *, gsize);
extern guint g_io_add_watch_full(GIOChannel *, gint, GIOCondition, GIOFunc,
				 gpointer, GDestroyNotify);
extern void g_dir_rewind(GDir *);
extern GSourceFuncs g_child_watch_funcs;
extern gint g_iconv_close(GIConv);
extern gchar *g_ascii_strdown(const gchar *, gssize);
extern gchar *g_key_file_get_locale_string(GKeyFile *, const gchar *,
					   const gchar *, const gchar *,
					   GError * *);
extern GQueue *g_queue_copy(GQueue *);
extern guint g_node_depth(GNode *);
extern const gchar *g_strsignal(gint);
extern GSList *g_slist_concat(GSList *, GSList *);
extern gboolean g_source_remove_by_funcs_user_data(GSourceFuncs *,
						   gpointer);
extern GSource *g_io_create_watch(GIOChannel *, GIOCondition);
extern gpointer g_cache_insert(GCache *, gpointer);
extern gpointer g_scanner_lookup_symbol(GScanner *, const gchar *);
extern GIOStatus g_io_channel_seek_position(GIOChannel *, gint64,
					    GSeekType, GError * *);
extern gboolean g_thread_use_default_impl;
extern guint g_io_add_watch(GIOChannel *, GIOCondition, GIOFunc, gpointer);
extern GSource *g_main_context_find_source_by_user_data(GMainContext *,
							gpointer);
extern GIConv g_iconv_open(const gchar *, const gchar *);
extern gchar *g_strdup_vprintf(const gchar *, va_list);
extern void g_datalist_clear(GData * *);
extern void g_static_rw_lock_reader_unlock(GStaticRWLock *);
extern gsize g_strlcpy(gchar *, const gchar *, gsize);
extern GRand *g_rand_new_with_seed(guint32);
extern guint g_thread_pool_unprocessed(GThreadPool *);
extern GQuark g_file_error_quark(void);
extern gdouble g_ascii_strtod(const gchar *, gchar * *);
extern GByteArray *g_byte_array_prepend(GByteArray *, const guint8 *,
					guint);
extern GQuark g_quark_from_static_string(const gchar *);
extern void g_unicode_canonical_ordering(gunichar *, gsize);
extern gboolean g_ptr_array_remove_fast(GPtrArray *, gpointer);
extern gint g_list_index(GList *, gconstpointer);
extern void g_tree_destroy(GTree *);
extern GDate *g_date_new(void);
extern void g_thread_init_with_errorcheck_mutexes(GThreadFunctions *);
extern void g_thread_init(GThreadFunctions *);
extern void g_datalist_set_flags(GData * *, guint);
extern void g_datalist_unset_flags(GData * *, guint);
extern guint g_datalist_get_flags(GData * *);
extern gchar *g_build_filenamev(gchar * *);
extern gchar *g_build_pathv(const gchar *, gchar * *);
extern gchar **g_listenv(void);
extern gboolean g_file_set_contents(const gchar *, const gchar *, gssize,
				    GError * *);
extern const gchar *g_get_host_name(void);
extern GMappedFile *g_mapped_file_new(const gchar *, gboolean, GError * *);
extern gsize g_mapped_file_get_length(GMappedFile *);
extern gchar *g_mapped_file_get_contents(GMappedFile *);
extern void g_mapped_file_free(GMappedFile *);
extern gchar *g_utf8_collate_key_for_filename(const gchar *, gssize);
extern int g_mkdir_with_parents(const gchar *, int);
</SCREEN>
</SECT2>
<SECT2>
<TITLE>glib-2.0/glib/gprintf.h</TITLE>
<PARA>
</PARA>
<SCREEN>

extern gint g_sprintf(gchar *, const gchar *, ...);
extern gint g_fprintf(FILE *, const gchar *, ...);
extern gint g_vasprintf(gchar * *, const gchar *, va_list);
extern gint g_vprintf(const gchar *, va_list);
extern gint g_printf(const gchar *, ...);
extern gint g_vfprintf(FILE *, const gchar *, va_list);
extern gint g_vsnprintf(gchar *, gulong, const gchar *, va_list);
extern gint g_vsprintf(gchar *, const gchar *, va_list);
extern gint g_snprintf(gchar *, gulong, const gchar *, ...);
</SCREEN>
</SECT2>
<SECT2>
<TITLE>glib-2.0/glib/gstdio.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define g_access	access
#define g_chdir	chdir
#define g_chmod	chmod
#define g_creat	creat
#define g_fopen	fopen
#define g_freopen	freopen
#define g_lstat	lstat
#define g_mkdir	mkdir
#define g_open	open
#define g_remove	remove
#define g_rename	rename
#define g_rmdir	rmdir
#define g_stat	stat
#define g_unlink	unlink
</SCREEN>
</SECT2>
</SECT1>
<!-- End of text generated from database -->

<!-- Start of generated text - do not edit! -->
<!-- generated from the LSB specification database by mklibspec -->
<SECT1 ID=libgobject-2.0>
<TITLE>Interfaces for libgobject-2.0</TITLE>
<PARA>
<XREF LINKEND="lib-libgobject-2.0-def"> defines the library name and shared object name
for the libgobject-2.0 library
</PARA>
<TABLE id="lib-libgobject-2.0-def">
<TITLE>libgobject-2.0 Definition</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Library:</ENTRY>
<ENTRY>libgobject-2.0</ENTRY>
</ROW>
<ROW>
<ENTRY>SONAME:</ENTRY>
<ENTRY>libgobject-2.0.so.0</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The behavior of the interfaces in this library is specified by the following specifications:<SIMPLELIST COLUMNS=1>
<MEMBER ID='REFSTD.libgobject.2.0.1'>
[Gobject 2.8] <XREF LINKEND="std.Gobject.2.8">
</MEMBER>
</SIMPLELIST>
</PARA>
<!-- debug: database interface name Gobject GTypeModule -->
<SECT2>
<!--libgroup-->
<TITLE>Gobject GTypeModule</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Interfaces for Gobject GTypeModule</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic functions
for Gobject GTypeModule specified in <XREF linkend="tbl-libgobject-2.0-gobje-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<TABLE id="tbl-libgobject-2.0-gobje-ints">
<TITLE>libgobject-2.0 - Gobject GTypeModule Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>g_type_module_add_interface</primary></indexterm>g_type_module_add_interface <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_type_module_get_type</primary></indexterm>g_type_module_get_type <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_type_module_register_enum</primary></indexterm>g_type_module_register_enum <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_type_module_register_flags</primary></indexterm>g_type_module_register_flags <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_type_module_register_type</primary></indexterm>g_type_module_register_type <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_type_module_set_name</primary></indexterm>g_type_module_set_name <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_type_module_unuse</primary></indexterm>g_type_module_unuse <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_type_module_use</primary></indexterm>g_type_module_use <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>
</SECT2>
<!-- debug: database interface name Gobject Enums and Flags -->
<SECT2>
<!--libgroup-->
<TITLE>Gobject Enums and Flags</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Interfaces for Gobject Enums and Flags</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic functions
for Gobject Enums and Flags specified in <XREF linkend="tbl-libgobject-2.0-gobjf-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<TABLE id="tbl-libgobject-2.0-gobjf-ints">
<TITLE>libgobject-2.0 - Gobject Enums and Flags Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>g_enum_complete_type_info</primary></indexterm>g_enum_complete_type_info <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_enum_get_value</primary></indexterm>g_enum_get_value <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_enum_get_value_by_name</primary></indexterm>g_enum_get_value_by_name <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_enum_get_value_by_nick</primary></indexterm>g_enum_get_value_by_nick <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_enum_register_static</primary></indexterm>g_enum_register_static <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_flags_complete_type_info</primary></indexterm>g_flags_complete_type_info <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_flags_get_first_value</primary></indexterm>g_flags_get_first_value <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_flags_get_value_by_name</primary></indexterm>g_flags_get_value_by_name <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_flags_get_value_by_nick</primary></indexterm>g_flags_get_value_by_nick <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_flags_register_static</primary></indexterm>g_flags_register_static <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>
</SECT2>
<!-- debug: database interface name Gobject Signals -->
<SECT2>
<!--libgroup-->
<TITLE>Gobject Signals</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Interfaces for Gobject Signals</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic functions
for Gobject Signals specified in <XREF linkend="tbl-libgobject-2.0-gobjg-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<TABLE id="tbl-libgobject-2.0-gobjg-ints">
<TITLE>libgobject-2.0 - Gobject Signals Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>g_signal_accumulator_true_handled</primary></indexterm>g_signal_accumulator_true_handled <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_signal_add_emission_hook</primary></indexterm>g_signal_add_emission_hook <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_signal_chain_from_overridden</primary></indexterm>g_signal_chain_from_overridden <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_signal_connect_closure</primary></indexterm>g_signal_connect_closure <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_signal_connect_closure_by_id</primary></indexterm>g_signal_connect_closure_by_id <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_signal_connect_data</primary></indexterm>g_signal_connect_data <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_signal_connect_object</primary></indexterm>g_signal_connect_object <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_signal_emit</primary></indexterm>g_signal_emit <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_signal_emit_by_name</primary></indexterm>g_signal_emit_by_name <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_signal_emit_valist</primary></indexterm>g_signal_emit_valist <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_signal_emitv</primary></indexterm>g_signal_emitv <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_signal_get_invocation_hint</primary></indexterm>g_signal_get_invocation_hint <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_signal_handler_block</primary></indexterm>g_signal_handler_block <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_signal_handler_disconnect</primary></indexterm>g_signal_handler_disconnect <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_signal_handler_find</primary></indexterm>g_signal_handler_find <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_signal_handler_is_connected</primary></indexterm>g_signal_handler_is_connected <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_signal_handler_unblock</primary></indexterm>g_signal_handler_unblock <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_signal_handlers_block_matched</primary></indexterm>g_signal_handlers_block_matched <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_signal_handlers_destroy</primary></indexterm>g_signal_handlers_destroy <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_signal_handlers_disconnect_matched</primary></indexterm>g_signal_handlers_disconnect_matched <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_signal_handlers_unblock_matched</primary></indexterm>g_signal_handlers_unblock_matched <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_signal_has_handler_pending</primary></indexterm>g_signal_has_handler_pending <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_signal_list_ids</primary></indexterm>g_signal_list_ids <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_signal_lookup</primary></indexterm>g_signal_lookup <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_signal_name</primary></indexterm>g_signal_name <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_signal_new</primary></indexterm>g_signal_new <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_signal_new_valist</primary></indexterm>g_signal_new_valist <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_signal_newv</primary></indexterm>g_signal_newv <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_signal_override_class_closure</primary></indexterm>g_signal_override_class_closure <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_signal_parse_name</primary></indexterm>g_signal_parse_name <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_signal_query</primary></indexterm>g_signal_query <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_signal_remove_emission_hook</primary></indexterm>g_signal_remove_emission_hook <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_signal_stop_emission</primary></indexterm>g_signal_stop_emission <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_signal_stop_emission_by_name</primary></indexterm>g_signal_stop_emission_by_name <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_signal_type_cclosure_new</primary></indexterm>g_signal_type_cclosure_new <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>
</SECT2>
<!-- debug: database interface name Gobject Value arrays -->
<SECT2>
<!--libgroup-->
<TITLE>Gobject Value arrays</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Interfaces for Gobject Value arrays</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic functions
for Gobject Value arrays specified in <XREF linkend="tbl-libgobject-2.0-gobjh-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<TABLE id="tbl-libgobject-2.0-gobjh-ints">
<TITLE>libgobject-2.0 - Gobject Value arrays Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>g_value_array_append</primary></indexterm>g_value_array_append <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_value_array_copy</primary></indexterm>g_value_array_copy <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_value_array_free</primary></indexterm>g_value_array_free <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_value_array_get_nth</primary></indexterm>g_value_array_get_nth <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_value_array_insert</primary></indexterm>g_value_array_insert <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_value_array_new</primary></indexterm>g_value_array_new <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_value_array_prepend</primary></indexterm>g_value_array_prepend <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_value_array_remove</primary></indexterm>g_value_array_remove <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_value_array_sort</primary></indexterm>g_value_array_sort <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_value_array_sort_with_data</primary></indexterm>g_value_array_sort_with_data <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>
</SECT2>
<!-- debug: database interface name Gobject Generic Values -->
<SECT2>
<!--libgroup-->
<TITLE>Gobject Generic Values</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Interfaces for Gobject Generic Values</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic functions
for Gobject Generic Values specified in <XREF linkend="tbl-libgobject-2.0-gobji-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<TABLE id="tbl-libgobject-2.0-gobji-ints">
<TITLE>libgobject-2.0 - Gobject Generic Values Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>g_strdup_value_contents</primary></indexterm>g_strdup_value_contents <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_value_array_get_type</primary></indexterm>g_value_array_get_type <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_value_copy</primary></indexterm>g_value_copy <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_value_fits_pointer</primary></indexterm>g_value_fits_pointer <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_value_get_type</primary></indexterm>g_value_get_type <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_value_init</primary></indexterm>g_value_init <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_value_peek_pointer</primary></indexterm>g_value_peek_pointer <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_value_register_transform_func</primary></indexterm>g_value_register_transform_func <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_value_reset</primary></indexterm>g_value_reset <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_value_set_instance</primary></indexterm>g_value_set_instance <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_value_transform</primary></indexterm>g_value_transform <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_value_type_compatible</primary></indexterm>g_value_type_compatible <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_value_type_transformable</primary></indexterm>g_value_type_transformable <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_value_unset</primary></indexterm>g_value_unset <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>
</SECT2>
<!-- debug: database interface name Gobject Parameters and Values -->
<SECT2>
<!--libgroup-->
<TITLE>Gobject Parameters and Values</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Interfaces for Gobject Parameters and Values</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic functions
for Gobject Parameters and Values specified in <XREF linkend="tbl-libgobject-2.0-gobjj-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<TABLE id="tbl-libgobject-2.0-gobjj-ints">
<TITLE>libgobject-2.0 - Gobject Parameters and Values Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>g_param_spec_boolean</primary></indexterm>g_param_spec_boolean <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_param_spec_boxed</primary></indexterm>g_param_spec_boxed <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_param_spec_char</primary></indexterm>g_param_spec_char <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_param_spec_double</primary></indexterm>g_param_spec_double <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_param_spec_enum</primary></indexterm>g_param_spec_enum <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_param_spec_flags</primary></indexterm>g_param_spec_flags <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_param_spec_float</primary></indexterm>g_param_spec_float <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_param_spec_int</primary></indexterm>g_param_spec_int <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_param_spec_int64</primary></indexterm>g_param_spec_int64 <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_param_spec_long</primary></indexterm>g_param_spec_long <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_param_spec_object</primary></indexterm>g_param_spec_object <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_param_spec_override</primary></indexterm>g_param_spec_override <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_param_spec_param</primary></indexterm>g_param_spec_param <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_param_spec_pointer</primary></indexterm>g_param_spec_pointer <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_param_spec_string</primary></indexterm>g_param_spec_string <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_param_spec_uchar</primary></indexterm>g_param_spec_uchar <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_param_spec_uint</primary></indexterm>g_param_spec_uint <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_param_spec_uint64</primary></indexterm>g_param_spec_uint64 <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_param_spec_ulong</primary></indexterm>g_param_spec_ulong <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_param_spec_unichar</primary></indexterm>g_param_spec_unichar <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_param_spec_value_array</primary></indexterm>g_param_spec_value_array <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_value_dup_boxed</primary></indexterm>g_value_dup_boxed <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_value_dup_object</primary></indexterm>g_value_dup_object <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_value_dup_param</primary></indexterm>g_value_dup_param <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_value_dup_string</primary></indexterm>g_value_dup_string <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_value_get_boolean</primary></indexterm>g_value_get_boolean <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_value_get_boxed</primary></indexterm>g_value_get_boxed <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_value_get_char</primary></indexterm>g_value_get_char <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_value_get_double</primary></indexterm>g_value_get_double <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_value_get_enum</primary></indexterm>g_value_get_enum <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_value_get_flags</primary></indexterm>g_value_get_flags <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_value_get_float</primary></indexterm>g_value_get_float <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_value_get_int</primary></indexterm>g_value_get_int <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_value_get_int64</primary></indexterm>g_value_get_int64 <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_value_get_long</primary></indexterm>g_value_get_long <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_value_get_object</primary></indexterm>g_value_get_object <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_value_get_param</primary></indexterm>g_value_get_param <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_value_get_pointer</primary></indexterm>g_value_get_pointer <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_value_get_string</primary></indexterm>g_value_get_string <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_value_get_uchar</primary></indexterm>g_value_get_uchar <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_value_get_uint</primary></indexterm>g_value_get_uint <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_value_get_uint64</primary></indexterm>g_value_get_uint64 <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_value_get_ulong</primary></indexterm>g_value_get_ulong <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_value_set_boolean</primary></indexterm>g_value_set_boolean <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_value_set_boxed</primary></indexterm>g_value_set_boxed <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_value_set_char</primary></indexterm>g_value_set_char <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_value_set_double</primary></indexterm>g_value_set_double <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_value_set_enum</primary></indexterm>g_value_set_enum <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_value_set_flags</primary></indexterm>g_value_set_flags <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_value_set_float</primary></indexterm>g_value_set_float <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_value_set_int</primary></indexterm>g_value_set_int <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_value_set_int64</primary></indexterm>g_value_set_int64 <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_value_set_long</primary></indexterm>g_value_set_long <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_value_set_object</primary></indexterm>g_value_set_object <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_value_set_param</primary></indexterm>g_value_set_param <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_value_set_pointer</primary></indexterm>g_value_set_pointer <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_value_set_static_boxed</primary></indexterm>g_value_set_static_boxed <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_value_set_static_string</primary></indexterm>g_value_set_static_string <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_value_set_string</primary></indexterm>g_value_set_string <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_value_set_uchar</primary></indexterm>g_value_set_uchar <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_value_set_uint</primary></indexterm>g_value_set_uint <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_value_set_uint64</primary></indexterm>g_value_set_uint64 <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_value_set_ulong</primary></indexterm>g_value_set_ulong <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_value_take_boxed</primary></indexterm>g_value_take_boxed <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_value_take_object</primary></indexterm>g_value_take_object <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_value_take_param</primary></indexterm>g_value_take_param <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_value_take_string</primary></indexterm>g_value_take_string <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for Gobject Parameters and Values specified in <XREF linkend="tbl-libgobject-2.0-gobjj-data">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<TABLE id="tbl-libgobject-2.0-gobjj-data">
<TITLE>libgobject-2.0 - Gobject Parameters and Values Data Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>g_param_spec_types</primary></indexterm>g_param_spec_types <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>
</SECT2>
<!-- debug: database interface name Gobject GParamSpec -->
<SECT2>
<!--libgroup-->
<TITLE>Gobject GParamSpec</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Interfaces for Gobject GParamSpec</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic functions
for Gobject GParamSpec specified in <XREF linkend="tbl-libgobject-2.0-gobjk-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<TABLE id="tbl-libgobject-2.0-gobjk-ints">
<TITLE>libgobject-2.0 - Gobject GParamSpec Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>g_param_spec_get_blurb</primary></indexterm>g_param_spec_get_blurb <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_param_spec_get_name</primary></indexterm>g_param_spec_get_name <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_param_spec_get_nick</primary></indexterm>g_param_spec_get_nick <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_param_spec_get_qdata</primary></indexterm>g_param_spec_get_qdata <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_param_spec_get_redirect_target</primary></indexterm>g_param_spec_get_redirect_target <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_param_spec_internal</primary></indexterm>g_param_spec_internal <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_param_spec_pool_insert</primary></indexterm>g_param_spec_pool_insert <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_param_spec_pool_list</primary></indexterm>g_param_spec_pool_list <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_param_spec_pool_list_owned</primary></indexterm>g_param_spec_pool_list_owned <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_param_spec_pool_lookup</primary></indexterm>g_param_spec_pool_lookup <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_param_spec_pool_new</primary></indexterm>g_param_spec_pool_new <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_param_spec_pool_remove</primary></indexterm>g_param_spec_pool_remove <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_param_spec_ref</primary></indexterm>g_param_spec_ref <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_param_spec_set_qdata</primary></indexterm>g_param_spec_set_qdata <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_param_spec_set_qdata_full</primary></indexterm>g_param_spec_set_qdata_full <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_param_spec_sink</primary></indexterm>g_param_spec_sink <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_param_spec_steal_qdata</primary></indexterm>g_param_spec_steal_qdata <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_param_spec_unref</primary></indexterm>g_param_spec_unref <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_param_type_register_static</primary></indexterm>g_param_type_register_static <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_param_value_convert</primary></indexterm>g_param_value_convert <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_param_value_defaults</primary></indexterm>g_param_value_defaults <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_param_value_set_default</primary></indexterm>g_param_value_set_default <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_param_value_validate</primary></indexterm>g_param_value_validate <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_param_values_cmp</primary></indexterm>g_param_values_cmp <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>
</SECT2>
<!-- debug: database interface name Gobject GBoxed -->
<SECT2>
<!--libgroup-->
<TITLE>Gobject GBoxed</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Interfaces for Gobject GBoxed</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic functions
for Gobject GBoxed specified in <XREF linkend="tbl-libgobject-2.0-gobjl-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<TABLE id="tbl-libgobject-2.0-gobjl-ints">
<TITLE>libgobject-2.0 - Gobject GBoxed Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>g_boxed_copy</primary></indexterm>g_boxed_copy <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_boxed_free</primary></indexterm>g_boxed_free <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_boxed_type_register_static</primary></indexterm>g_boxed_type_register_static <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_gstring_get_type</primary></indexterm>g_gstring_get_type <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_pointer_type_register_static</primary></indexterm>g_pointer_type_register_static <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_strv_get_type</primary></indexterm>g_strv_get_type <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>
</SECT2>
<!-- debug: database interface name Gobject Closures -->
<SECT2>
<!--libgroup-->
<TITLE>Gobject Closures</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Interfaces for Gobject Closures</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic functions
for Gobject Closures specified in <XREF linkend="tbl-libgobject-2.0-gobjm-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<TABLE id="tbl-libgobject-2.0-gobjm-ints">
<TITLE>libgobject-2.0 - Gobject Closures Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>g_cclosure_marshal_BOOLEAN__FLAGS</primary></indexterm>g_cclosure_marshal_BOOLEAN__FLAGS <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_cclosure_marshal_STRING__OBJECT_POINTER</primary></indexterm>g_cclosure_marshal_STRING__OBJECT_POINTER <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_cclosure_marshal_VOID__BOOLEAN</primary></indexterm>g_cclosure_marshal_VOID__BOOLEAN <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_cclosure_marshal_VOID__BOXED</primary></indexterm>g_cclosure_marshal_VOID__BOXED <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_cclosure_marshal_VOID__CHAR</primary></indexterm>g_cclosure_marshal_VOID__CHAR <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_cclosure_marshal_VOID__DOUBLE</primary></indexterm>g_cclosure_marshal_VOID__DOUBLE <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_cclosure_marshal_VOID__ENUM</primary></indexterm>g_cclosure_marshal_VOID__ENUM <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_cclosure_marshal_VOID__FLAGS</primary></indexterm>g_cclosure_marshal_VOID__FLAGS <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_cclosure_marshal_VOID__FLOAT</primary></indexterm>g_cclosure_marshal_VOID__FLOAT <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_cclosure_marshal_VOID__INT</primary></indexterm>g_cclosure_marshal_VOID__INT <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_cclosure_marshal_VOID__LONG</primary></indexterm>g_cclosure_marshal_VOID__LONG <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_cclosure_marshal_VOID__OBJECT</primary></indexterm>g_cclosure_marshal_VOID__OBJECT <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_cclosure_marshal_VOID__PARAM</primary></indexterm>g_cclosure_marshal_VOID__PARAM <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_cclosure_marshal_VOID__POINTER</primary></indexterm>g_cclosure_marshal_VOID__POINTER <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_cclosure_marshal_VOID__STRING</primary></indexterm>g_cclosure_marshal_VOID__STRING <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_cclosure_marshal_VOID__UCHAR</primary></indexterm>g_cclosure_marshal_VOID__UCHAR <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_cclosure_marshal_VOID__UINT</primary></indexterm>g_cclosure_marshal_VOID__UINT <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_cclosure_marshal_VOID__UINT_POINTER</primary></indexterm>g_cclosure_marshal_VOID__UINT_POINTER <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_cclosure_marshal_VOID__ULONG</primary></indexterm>g_cclosure_marshal_VOID__ULONG <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_cclosure_marshal_VOID__VOID</primary></indexterm>g_cclosure_marshal_VOID__VOID <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_cclosure_new</primary></indexterm>g_cclosure_new <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_cclosure_new_object</primary></indexterm>g_cclosure_new_object <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_cclosure_new_object_swap</primary></indexterm>g_cclosure_new_object_swap <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_cclosure_new_swap</primary></indexterm>g_cclosure_new_swap <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_closure_add_finalize_notifier</primary></indexterm>g_closure_add_finalize_notifier <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_closure_add_invalidate_notifier</primary></indexterm>g_closure_add_invalidate_notifier <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_closure_add_marshal_guards</primary></indexterm>g_closure_add_marshal_guards <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_closure_invalidate</primary></indexterm>g_closure_invalidate <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_closure_invoke</primary></indexterm>g_closure_invoke <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_closure_new_object</primary></indexterm>g_closure_new_object <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_closure_new_simple</primary></indexterm>g_closure_new_simple <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_closure_ref</primary></indexterm>g_closure_ref <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_closure_remove_finalize_notifier</primary></indexterm>g_closure_remove_finalize_notifier <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_closure_remove_invalidate_notifier</primary></indexterm>g_closure_remove_invalidate_notifier <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_closure_set_marshal</primary></indexterm>g_closure_set_marshal <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_closure_set_meta_marshal</primary></indexterm>g_closure_set_meta_marshal <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_closure_sink</primary></indexterm>g_closure_sink <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_closure_unref</primary></indexterm>g_closure_unref <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_source_set_closure</primary></indexterm>g_source_set_closure <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>
</SECT2>
<!-- debug: database interface name Gobject Gobject -->
<SECT2>
<!--libgroup-->
<TITLE>Gobject Gobject</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Interfaces for Gobject Gobject</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic functions
for Gobject Gobject specified in <XREF linkend="tbl-libgobject-2.0-gobjn-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<TABLE id="tbl-libgobject-2.0-gobjn-ints">
<TITLE>libgobject-2.0 - Gobject Gobject Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>g_object_add_toggle_ref</primary></indexterm>g_object_add_toggle_ref <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_object_add_weak_pointer</primary></indexterm>g_object_add_weak_pointer <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_object_class_find_property</primary></indexterm>g_object_class_find_property <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_object_class_install_property</primary></indexterm>g_object_class_install_property <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_object_class_list_properties</primary></indexterm>g_object_class_list_properties <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_object_class_override_property</primary></indexterm>g_object_class_override_property <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_object_connect</primary></indexterm>g_object_connect <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_object_disconnect</primary></indexterm>g_object_disconnect <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_object_freeze_notify</primary></indexterm>g_object_freeze_notify <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_object_get</primary></indexterm>g_object_get <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_object_get_data</primary></indexterm>g_object_get_data <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_object_get_property</primary></indexterm>g_object_get_property <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_object_get_qdata</primary></indexterm>g_object_get_qdata <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_object_get_valist</primary></indexterm>g_object_get_valist <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_object_interface_find_property</primary></indexterm>g_object_interface_find_property <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_object_interface_install_property</primary></indexterm>g_object_interface_install_property <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_object_interface_list_properties</primary></indexterm>g_object_interface_list_properties <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_object_new</primary></indexterm>g_object_new <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_object_new_valist</primary></indexterm>g_object_new_valist <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_object_newv</primary></indexterm>g_object_newv <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_object_notify</primary></indexterm>g_object_notify <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_object_ref</primary></indexterm>g_object_ref <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_object_remove_toggle_ref</primary></indexterm>g_object_remove_toggle_ref <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_object_remove_weak_pointer</primary></indexterm>g_object_remove_weak_pointer <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_object_run_dispose</primary></indexterm>g_object_run_dispose <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_object_set</primary></indexterm>g_object_set <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_object_set_data</primary></indexterm>g_object_set_data <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_object_set_data_full</primary></indexterm>g_object_set_data_full <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_object_set_property</primary></indexterm>g_object_set_property <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_object_set_qdata</primary></indexterm>g_object_set_qdata <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_object_set_qdata_full</primary></indexterm>g_object_set_qdata_full <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_object_set_valist</primary></indexterm>g_object_set_valist <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_object_steal_data</primary></indexterm>g_object_steal_data <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_object_steal_qdata</primary></indexterm>g_object_steal_qdata <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_object_thaw_notify</primary></indexterm>g_object_thaw_notify <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_object_unref</primary></indexterm>g_object_unref <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_object_watch_closure</primary></indexterm>g_object_watch_closure <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_object_weak_ref</primary></indexterm>g_object_weak_ref <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_object_weak_unref</primary></indexterm>g_object_weak_unref <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>
</SECT2>
<!-- debug: database interface name Gobject GType -->
<SECT2>
<!--libgroup-->
<TITLE>Gobject GType</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Interfaces for Gobject GType</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic functions
for Gobject GType specified in <XREF linkend="tbl-libgobject-2.0-gobjo-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<TABLE id="tbl-libgobject-2.0-gobjo-ints">
<TITLE>libgobject-2.0 - Gobject GType Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>g_closure_get_type</primary></indexterm>g_closure_get_type <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_io_channel_get_type</primary></indexterm>g_io_channel_get_type <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_io_condition_get_type</primary></indexterm>g_io_condition_get_type <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_type_add_class_cache_func</primary></indexterm>g_type_add_class_cache_func <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_type_add_interface_check</primary></indexterm>g_type_add_interface_check <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_type_add_interface_dynamic</primary></indexterm>g_type_add_interface_dynamic <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_type_add_interface_static</primary></indexterm>g_type_add_interface_static <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_type_check_class_cast</primary></indexterm>g_type_check_class_cast <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_type_check_class_is_a</primary></indexterm>g_type_check_class_is_a <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_type_check_instance</primary></indexterm>g_type_check_instance <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_type_check_instance_cast</primary></indexterm>g_type_check_instance_cast <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_type_check_instance_is_a</primary></indexterm>g_type_check_instance_is_a <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_type_check_is_value_type</primary></indexterm>g_type_check_is_value_type <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_type_check_value</primary></indexterm>g_type_check_value <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_type_check_value_holds</primary></indexterm>g_type_check_value_holds <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_type_children</primary></indexterm>g_type_children <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_type_class_add_private</primary></indexterm>g_type_class_add_private <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_type_class_peek</primary></indexterm>g_type_class_peek <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_type_class_peek_parent</primary></indexterm>g_type_class_peek_parent <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_type_class_peek_static</primary></indexterm>g_type_class_peek_static <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_type_class_ref</primary></indexterm>g_type_class_ref <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_type_class_unref</primary></indexterm>g_type_class_unref <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_type_class_unref_uncached</primary></indexterm>g_type_class_unref_uncached <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_type_create_instance</primary></indexterm>g_type_create_instance <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_type_default_interface_peek</primary></indexterm>g_type_default_interface_peek <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_type_default_interface_ref</primary></indexterm>g_type_default_interface_ref <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_type_default_interface_unref</primary></indexterm>g_type_default_interface_unref <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_type_depth</primary></indexterm>g_type_depth <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_type_free_instance</primary></indexterm>g_type_free_instance <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_type_from_name</primary></indexterm>g_type_from_name <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_type_fundamental</primary></indexterm>g_type_fundamental <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_type_fundamental_next</primary></indexterm>g_type_fundamental_next <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_type_get_plugin</primary></indexterm>g_type_get_plugin <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_type_get_qdata</primary></indexterm>g_type_get_qdata <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_type_init</primary></indexterm>g_type_init <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_type_init_with_debug_flags</primary></indexterm>g_type_init_with_debug_flags <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_type_instance_get_private</primary></indexterm>g_type_instance_get_private <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_type_interface_add_prerequisite</primary></indexterm>g_type_interface_add_prerequisite <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_type_interface_get_plugin</primary></indexterm>g_type_interface_get_plugin <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_type_interface_peek</primary></indexterm>g_type_interface_peek <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_type_interface_peek_parent</primary></indexterm>g_type_interface_peek_parent <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_type_interface_prerequisites</primary></indexterm>g_type_interface_prerequisites <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_type_interfaces</primary></indexterm>g_type_interfaces <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_type_is_a</primary></indexterm>g_type_is_a <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_type_name</primary></indexterm>g_type_name <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_type_name_from_class</primary></indexterm>g_type_name_from_class <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_type_name_from_instance</primary></indexterm>g_type_name_from_instance <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_type_next_base</primary></indexterm>g_type_next_base <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_type_parent</primary></indexterm>g_type_parent <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_type_qname</primary></indexterm>g_type_qname <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_type_query</primary></indexterm>g_type_query <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_type_register_dynamic</primary></indexterm>g_type_register_dynamic <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_type_register_fundamental</primary></indexterm>g_type_register_fundamental <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_type_register_static</primary></indexterm>g_type_register_static <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_type_remove_class_cache_func</primary></indexterm>g_type_remove_class_cache_func <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_type_remove_interface_check</primary></indexterm>g_type_remove_interface_check <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_type_set_qdata</primary></indexterm>g_type_set_qdata <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_type_test_flags</primary></indexterm>g_type_test_flags <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_type_value_table_peek</primary></indexterm>g_type_value_table_peek <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>
</SECT2>
<!-- debug: database interface name Gobject GTypePlugin -->
<SECT2>
<!--libgroup-->
<TITLE>Gobject GTypePlugin</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Interfaces for Gobject GTypePlugin</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic functions
for Gobject GTypePlugin specified in <XREF linkend="tbl-libgobject-2.0-gobjp-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<TABLE id="tbl-libgobject-2.0-gobjp-ints">
<TITLE>libgobject-2.0 - Gobject GTypePlugin Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>g_type_plugin_complete_interface_info</primary></indexterm>g_type_plugin_complete_interface_info <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_type_plugin_complete_type_info</primary></indexterm>g_type_plugin_complete_type_info <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_type_plugin_get_type</primary></indexterm>g_type_plugin_get_type <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_type_plugin_unuse</primary></indexterm>g_type_plugin_unuse <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_type_plugin_use</primary></indexterm>g_type_plugin_use <LINK LINKEND="REFSTD.libgobject.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>
</SECT2>
</SECT1>
<SECT1 ID=libgobject-2.0-ddefs>
<TITLE>Data Definitions for libgobject-2.0</TITLE>
<PARA>
This section defines global identifiers and their values that are associated
with interfaces contained in libgobject-2.0.
These definitions are organized into groups that
correspond to system headers. This convention is used as a
convenience for the reader, and does not imply the existence
of these headers, or their content.
Where an interface is defined as requiring a particular system header file
all of the data definitions for that system header file presented here shall be in effect.
</PARA>
<PARA>
This section gives data definitions to promote binary application
portability, not to repeat source interface definitions available
elsewhere. System providers and application developers should use this ABI
to supplement - not to replace - source interface definition specifications.
</PARA>
<PARA>
This specification uses the <XREF LINKEND='std.ISOC99'> C Language as the reference programming language, and data definitions are specified in ISO C format. The C language is used here as a convenient notation. Using a C language description of these data objects does not preclude their use by other programming languages.</PARA>
<SECT2>
<TITLE>glib-2.0/glib-object.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define G_CLOSURE_NEEDS_MARSHAL(closure)	 \
	(((GClosure*) (closure))->marshal == NULL)
#define G_TYPE_FROM_INTERFACE(g_iface)	 \
	(((GTypeInterface*) (g_iface))->g_type)
#define G_CLOSURE_N_NOTIFIERS(cl)	 \
	((cl)->meta_marshal + ((cl)->n_guards &lt;&lt; 1L) + (cl)->n_fnotifiers + \
	(cl)->n_inotifiers)
#define _G_TYPE_CCC(cp,gt,ct)	 \
	((ct*) g_type_check_class_cast ((GTypeClass*) cp, gt))
#define _G_TYPE_CIC(ip,gt,ct)	 \
	((ct*) g_type_check_instance_cast ((GTypeInstance*) ip, gt))
#define _G_TYPE_IGI(ip,gt,ct)	 \
	((ct*) g_type_interface_peek (((GTypeInstance*) ip)->g_class, gt))
#define G_TYPE_INSTANCE_GET_PRIVATE(instance,g_type,c_type)	 \
	((c_type*) g_type_instance_get_private ((GTypeInstance*) (instance), \
	(g_type)))
#define G_TYPE_MAKE_FUNDAMENTAL(x)	 \
	((GType) ((x) &lt;&lt; G_TYPE_FUNDAMENTAL_SHIFT))
#define _G_TYPE_CCT(cp,gt)	 \
	(G_GNUC_EXTENSION ({ GTypeClass *__class = (GTypeClass*) cp; GType \
	__t = gt; gboolean __r; if (__class &amp;&amp; __class->g_type == __t) __r = \
	TRUE; else __r = g_type_check_class_is_a (__class, __t); __r; }))
#define _G_TYPE_CIT(ip,gt)	 \
	(G_GNUC_EXTENSION ({ GTypeInstance *__inst = (GTypeInstance*) ip; \
	GType __t = gt; gboolean __r; if (__inst &amp;&amp; __inst->g_class &amp;&amp; \
	__inst->g_class->g_type == __t) __r = TRUE; else __r = \
	g_type_check_instance_is_a (__inst, __t); __r; }))
#define _G_TYPE_CVH(vl,gt)	 \
	(G_GNUC_EXTENSION ({ GValue *__val = (GValue*) vl; GType __t = gt; \
	gboolean __r; if (__val &amp;&amp; __val->g_type == __t) __r = TRUE; else __r \
	= g_type_check_value_holds (__val, __t); __r; }))
#define G_ENUM_CLASS(class)	 \
	(G_TYPE_CHECK_CLASS_CAST ((class), G_TYPE_ENUM, GEnumClass))
#define G_FLAGS_CLASS(class)	 \
	(G_TYPE_CHECK_CLASS_CAST ((class), G_TYPE_FLAGS, GFlagsClass))
#define G_OBJECT_CLASS(class)	 \
	(G_TYPE_CHECK_CLASS_CAST ((class), G_TYPE_OBJECT, GObjectClass))
#define G_TYPE_MODULE_CLASS(class)	 \
	(G_TYPE_CHECK_CLASS_CAST ((class), G_TYPE_TYPE_MODULE, \
	GTypeModuleClass))
#define G_PARAM_SPEC_CLASS(pclass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((pclass), G_TYPE_PARAM, GParamSpecClass))
#define G_TYPE_PLUGIN_CLASS(vtable)	 \
	(G_TYPE_CHECK_CLASS_CAST ((vtable), G_TYPE_TYPE_PLUGIN, \
	GTypePluginClass))
#define G_IS_ENUM_CLASS(class)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((class), G_TYPE_ENUM))
#define G_IS_FLAGS_CLASS(class)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((class), G_TYPE_FLAGS))
#define G_IS_OBJECT_CLASS(class)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((class), G_TYPE_OBJECT))
#define G_IS_TYPE_MODULE_CLASS(class)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((class), G_TYPE_TYPE_MODULE))
#define G_IS_PARAM_SPEC_CLASS(pclass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((pclass), G_TYPE_PARAM))
#define G_IS_TYPE_PLUGIN_CLASS(vtable)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((vtable), G_TYPE_TYPE_PLUGIN))
#define G_TYPE_PLUGIN(inst)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((inst), G_TYPE_TYPE_PLUGIN, \
	GTypePlugin))
#define G_TYPE_MODULE(module)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((module), G_TYPE_TYPE_MODULE, \
	GTypeModule))
#define G_OBJECT(object)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((object), G_TYPE_OBJECT, GObject))
#define G_PARAM_SPEC(pspec)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((pspec), G_TYPE_PARAM, GParamSpec))
#define G_PARAM_SPEC_BOOLEAN(pspec)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((pspec), G_TYPE_PARAM_BOOLEAN, \
	GParamSpecBoolean))
#define G_PARAM_SPEC_BOXED(pspec)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((pspec), G_TYPE_PARAM_BOXED, \
	GParamSpecBoxed))
#define G_PARAM_SPEC_CHAR(pspec)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((pspec), G_TYPE_PARAM_CHAR, \
	GParamSpecChar))
#define G_PARAM_SPEC_DOUBLE(pspec)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((pspec), G_TYPE_PARAM_DOUBLE, \
	GParamSpecDouble))
#define G_PARAM_SPEC_ENUM(pspec)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((pspec), G_TYPE_PARAM_ENUM, \
	GParamSpecEnum))
#define G_PARAM_SPEC_FLAGS(pspec)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((pspec), G_TYPE_PARAM_FLAGS, \
	GParamSpecFlags))
#define G_PARAM_SPEC_FLOAT(pspec)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((pspec), G_TYPE_PARAM_FLOAT, \
	GParamSpecFloat))
#define G_PARAM_SPEC_INT(pspec)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((pspec), G_TYPE_PARAM_INT, \
	GParamSpecInt))
#define G_PARAM_SPEC_INT64(pspec)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((pspec), G_TYPE_PARAM_INT64, \
	GParamSpecInt64))
#define G_PARAM_SPEC_LONG(pspec)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((pspec), G_TYPE_PARAM_LONG, \
	GParamSpecLong))
#define G_PARAM_SPEC_OBJECT(pspec)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((pspec), G_TYPE_PARAM_OBJECT, \
	GParamSpecObject))
#define G_PARAM_SPEC_OVERRIDE(pspec)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((pspec), G_TYPE_PARAM_OVERRIDE, \
	GParamSpecOverride))
#define G_PARAM_SPEC_PARAM(pspec)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((pspec), G_TYPE_PARAM_PARAM, \
	GParamSpecParam))
#define G_PARAM_SPEC_POINTER(pspec)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((pspec), G_TYPE_PARAM_POINTER, \
	GParamSpecPointer))
#define G_PARAM_SPEC_STRING(pspec)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((pspec), G_TYPE_PARAM_STRING, \
	GParamSpecString))
#define G_PARAM_SPEC_UCHAR(pspec)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((pspec), G_TYPE_PARAM_UCHAR, \
	GParamSpecUChar))
#define G_PARAM_SPEC_UINT(pspec)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((pspec), G_TYPE_PARAM_UINT, \
	GParamSpecUInt))
#define G_PARAM_SPEC_UINT64(pspec)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((pspec), G_TYPE_PARAM_UINT64, \
	GParamSpecUInt64))
#define G_PARAM_SPEC_ULONG(pspec)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((pspec), G_TYPE_PARAM_ULONG, \
	GParamSpecULong))
#define G_PARAM_SPEC_UNICHAR(pspec)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((pspec), G_TYPE_PARAM_UNICHAR, \
	GParamSpecUnichar))
#define G_PARAM_SPEC_VALUE_ARRAY(pspec)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((pspec), G_TYPE_PARAM_VALUE_ARRAY, \
	GParamSpecValueArray))
#define G_IS_TYPE_PLUGIN(inst)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((inst), G_TYPE_TYPE_PLUGIN))
#define G_IS_TYPE_MODULE(module)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((module), G_TYPE_TYPE_MODULE))
#define G_IS_OBJECT(object)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((object), G_TYPE_OBJECT))
#define G_IS_PARAM_SPEC(pspec)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((pspec), G_TYPE_PARAM))
#define G_IS_PARAM_SPEC_BOOLEAN(pspec)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((pspec), G_TYPE_PARAM_BOOLEAN))
#define G_IS_PARAM_SPEC_BOXED(pspec)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((pspec), G_TYPE_PARAM_BOXED))
#define G_IS_PARAM_SPEC_CHAR(pspec)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((pspec), G_TYPE_PARAM_CHAR))
#define G_IS_PARAM_SPEC_DOUBLE(pspec)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((pspec), G_TYPE_PARAM_DOUBLE))
#define G_IS_PARAM_SPEC_ENUM(pspec)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((pspec), G_TYPE_PARAM_ENUM))
#define G_IS_PARAM_SPEC_FLAGS(pspec)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((pspec), G_TYPE_PARAM_FLAGS))
#define G_IS_PARAM_SPEC_FLOAT(pspec)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((pspec), G_TYPE_PARAM_FLOAT))
#define G_IS_PARAM_SPEC_INT(pspec)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((pspec), G_TYPE_PARAM_INT))
#define G_IS_PARAM_SPEC_INT64(pspec)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((pspec), G_TYPE_PARAM_INT64))
#define G_IS_PARAM_SPEC_LONG(pspec)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((pspec), G_TYPE_PARAM_LONG))
#define G_IS_PARAM_SPEC_OBJECT(pspec)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((pspec), G_TYPE_PARAM_OBJECT))
#define G_IS_PARAM_SPEC_OVERRIDE(pspec)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((pspec), G_TYPE_PARAM_OVERRIDE))
#define G_IS_PARAM_SPEC_PARAM(pspec)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((pspec), G_TYPE_PARAM_PARAM))
#define G_IS_PARAM_SPEC_POINTER(pspec)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((pspec), G_TYPE_PARAM_POINTER))
#define G_IS_PARAM_SPEC_STRING(pspec)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((pspec), G_TYPE_PARAM_STRING))
#define G_IS_PARAM_SPEC_UCHAR(pspec)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((pspec), G_TYPE_PARAM_UCHAR))
#define G_IS_PARAM_SPEC_UINT(pspec)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((pspec), G_TYPE_PARAM_UINT))
#define G_IS_PARAM_SPEC_UINT64(pspec)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((pspec), G_TYPE_PARAM_UINT64))
#define G_IS_PARAM_SPEC_ULONG(pspec)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((pspec), G_TYPE_PARAM_ULONG))
#define G_IS_PARAM_SPEC_UNICHAR(pspec)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((pspec), G_TYPE_PARAM_UNICHAR))
#define G_IS_PARAM_SPEC_VALUE_ARRAY(pspec)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((pspec), G_TYPE_PARAM_VALUE_ARRAY))
#define G_VALUE_HOLDS(value,type)	 \
	(G_TYPE_CHECK_VALUE_TYPE ((value), (type)))
#define G_VALUE_HOLDS_BOOLEAN(value)	 \
	(G_TYPE_CHECK_VALUE_TYPE ((value), G_TYPE_BOOLEAN))
#define G_VALUE_HOLDS_BOXED(value)	 \
	(G_TYPE_CHECK_VALUE_TYPE ((value), G_TYPE_BOXED))
#define G_VALUE_HOLDS_CHAR(value)	 \
	(G_TYPE_CHECK_VALUE_TYPE ((value), G_TYPE_CHAR))
#define G_VALUE_HOLDS_DOUBLE(value)	 \
	(G_TYPE_CHECK_VALUE_TYPE ((value), G_TYPE_DOUBLE))
#define G_VALUE_HOLDS_ENUM(value)	 \
	(G_TYPE_CHECK_VALUE_TYPE ((value), G_TYPE_ENUM))
#define G_VALUE_HOLDS_FLAGS(value)	 \
	(G_TYPE_CHECK_VALUE_TYPE ((value), G_TYPE_FLAGS))
#define G_VALUE_HOLDS_FLOAT(value)	 \
	(G_TYPE_CHECK_VALUE_TYPE ((value), G_TYPE_FLOAT))
#define G_VALUE_HOLDS_INT(value)	 \
	(G_TYPE_CHECK_VALUE_TYPE ((value), G_TYPE_INT))
#define G_VALUE_HOLDS_INT64(value)	 \
	(G_TYPE_CHECK_VALUE_TYPE ((value), G_TYPE_INT64))
#define G_VALUE_HOLDS_LONG(value)	 \
	(G_TYPE_CHECK_VALUE_TYPE ((value), G_TYPE_LONG))
#define G_VALUE_HOLDS_OBJECT(value)	 \
	(G_TYPE_CHECK_VALUE_TYPE ((value), G_TYPE_OBJECT))
#define G_VALUE_HOLDS_PARAM(value)	 \
	(G_TYPE_CHECK_VALUE_TYPE ((value), G_TYPE_PARAM))
#define G_VALUE_HOLDS_POINTER(value)	 \
	(G_TYPE_CHECK_VALUE_TYPE ((value), G_TYPE_POINTER))
#define G_VALUE_HOLDS_STRING(value)	 \
	(G_TYPE_CHECK_VALUE_TYPE ((value), G_TYPE_STRING))
#define G_VALUE_HOLDS_UCHAR(value)	 \
	(G_TYPE_CHECK_VALUE_TYPE ((value), G_TYPE_UCHAR))
#define G_VALUE_HOLDS_UINT(value)	 \
	(G_TYPE_CHECK_VALUE_TYPE ((value), G_TYPE_UINT))
#define G_VALUE_HOLDS_UINT64(value)	 \
	(G_TYPE_CHECK_VALUE_TYPE ((value), G_TYPE_UINT64))
#define G_VALUE_HOLDS_ULONG(value)	 \
	(G_TYPE_CHECK_VALUE_TYPE ((value), G_TYPE_ULONG))
#define G_TYPE_FROM_INSTANCE(instance)	 \
	(G_TYPE_FROM_CLASS (((GTypeInstance*) (instance))->g_class))
#define G_TYPE_IS_INTERFACE(type)	 \
	(G_TYPE_FUNDAMENTAL (type) == G_TYPE_INTERFACE)
#define G_TYPE_IS_OBJECT(type)	 \
	(G_TYPE_FUNDAMENTAL (type) == G_TYPE_OBJECT)
#define G_TYPE_MODULE_GET_CLASS(module)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((module), G_TYPE_TYPE_MODULE, \
	GTypeModuleClass))
#define G_OBJECT_GET_CLASS(object)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((object), G_TYPE_OBJECT, GObjectClass))
#define G_PARAM_SPEC_GET_CLASS(pspec)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((pspec), G_TYPE_PARAM, GParamSpecClass))
#define G_TYPE_PLUGIN_GET_CLASS(inst)	 \
	(G_TYPE_INSTANCE_GET_INTERFACE ((inst), G_TYPE_TYPE_PLUGIN, \
	GTypePluginClass))
#define G_ENUM_CLASS_TYPE_NAME(class)	 \
	(g_type_name (G_ENUM_CLASS_TYPE (class)))
#define G_FLAGS_CLASS_TYPE_NAME(class)	 \
	(g_type_name (G_FLAGS_TYPE (class)))
#define G_OBJECT_CLASS_NAME(class)	 \
	(g_type_name (G_OBJECT_CLASS_TYPE (class)))
#define G_PARAM_SPEC_TYPE_NAME(pspec)	 \
	(g_type_name (G_PARAM_SPEC_TYPE (pspec)))
#define G_TYPE_IS_ABSTRACT(type)	 \
	(g_type_test_flags ((type), G_TYPE_FLAG_ABSTRACT))
#define G_TYPE_IS_CLASSED(type)	 \
	(g_type_test_flags ((type), G_TYPE_FLAG_CLASSED))
#define G_TYPE_IS_DEEP_DERIVABLE(type)	 \
	(g_type_test_flags ((type), G_TYPE_FLAG_DEEP_DERIVABLE))
#define G_TYPE_IS_DERIVABLE(type)	 \
	(g_type_test_flags ((type), G_TYPE_FLAG_DERIVABLE))
#define G_TYPE_IS_INSTANTIATABLE(type)	 \
	(g_type_test_flags ((type), G_TYPE_FLAG_INSTANTIATABLE))
#define G_TYPE_IS_VALUE_ABSTRACT(type)	 \
	(g_type_test_flags ((type), G_TYPE_FLAG_VALUE_ABSTRACT))
#define G_TYPE_HAS_VALUE_TABLE(type)	 \
	(g_type_value_table_peek (type) != NULL)
#define G_TYPE_CHECK_CLASS_CAST(g_class,g_type,c_type)	 \
	(_G_TYPE_CCC ((g_class), (g_type), c_type))
#define G_TYPE_CHECK_CLASS_TYPE(g_class,g_type)	 \
	(_G_TYPE_CCT ((g_class), (g_type)))
#define G_TYPE_CHECK_INSTANCE(instance)	 \
	(_G_TYPE_CHI ((GTypeInstance*) (instance)))
#define G_TYPE_CHECK_INSTANCE_CAST(instance,g_type,c_type)	 \
	(_G_TYPE_CIC ((instance), (g_type), c_type))
#define G_TYPE_CHECK_INSTANCE_TYPE(instance,g_type)	 \
	(_G_TYPE_CIT ((instance), (g_type)))
#define G_TYPE_CHECK_VALUE_TYPE(value,g_type)	 \
	(_G_TYPE_CVH ((value), (g_type)))
#define G_TYPE_INSTANCE_GET_CLASS(instance,g_type,c_type)	 \
	(_G_TYPE_IGC ((instance), (g_type), c_type))
#define G_TYPE_INSTANCE_GET_INTERFACE(instance,g_type,c_type)	 \
	(_G_TYPE_IGI ((instance), (g_type), c_type))
#define G_DEFINE_TYPE_WITH_CODE(TN,t_n,T_P,_C_)	 \
	G_DEFINE_TYPE_EXTENDED (TN, t_n, T_P, 0, _C_)
#define G_DEFINE_TYPE(TN,t_n,T_P)	 \
	G_DEFINE_TYPE_EXTENDED (TN, t_n, T_P, 0, {})
#define G_DEFINE_ABSTRACT_TYPE_WITH_CODE(TN,t_n,T_P,_C_)	 \
	G_DEFINE_TYPE_EXTENDED (TN, t_n, T_P, G_TYPE_FLAG_ABSTRACT, _C_)
#define G_DEFINE_ABSTRACT_TYPE(TN,t_n,T_P)	 \
	G_DEFINE_TYPE_EXTENDED (TN, t_n, T_P, G_TYPE_FLAG_ABSTRACT, {})
#define G_OBJECT_WARN_INVALID_PROPERTY_ID(object,property_id,pspec)	 \
	G_OBJECT_WARN_INVALID_PSPEC ((object), "property", (property_id), \
	(pspec))
#define g_signal_connect(instance,detailed_signal,c_handler,data)	 \
	g_signal_connect_data ((instance), (detailed_signal), (c_handler), \
	(data), NULL, (GConnectFlags) 0)
#define g_signal_connect_after(instance,detailed_signal,c_handler,data)	 \
	g_signal_connect_data ((instance), (detailed_signal), (c_handler), \
	(data), NULL, G_CONNECT_AFTER)
#define g_signal_connect_swapped(instance,detailed_signal,c_handler,data)	 \
	g_signal_connect_data ((instance), (detailed_signal), (c_handler), \
	(data), NULL, G_CONNECT_SWAPPED)
#define g_signal_handlers_block_by_func(instance,func,data)	 \
	g_signal_handlers_block_matched ((instance), (GSignalMatchType) \
	(G_SIGNAL_MATCH_FUNC | G_SIGNAL_MATCH_DATA), 0, 0, NULL, (func), \
	(data))
#define g_signal_handlers_disconnect_by_func(instance,func,data)	 \
	g_signal_handlers_disconnect_matched ((instance), (GSignalMatchType) \
	(G_SIGNAL_MATCH_FUNC | G_SIGNAL_MATCH_DATA), 0, 0, NULL, (func), \
	(data))
#define g_signal_handlers_unblock_by_func(instance,func,data)	 \
	g_signal_handlers_unblock_matched ((instance), (GSignalMatchType) \
	(G_SIGNAL_MATCH_FUNC | G_SIGNAL_MATCH_DATA), 0, 0, NULL, (func), \
	(data))
#define G_OBJECT_WARN_INVALID_PSPEC(object,pname,property_id,pspec)	 \
	G_STMT_START { GObject *_object = (GObject*) (object); GParamSpec \
	*_pspec = (GParamSpec*) (pspec); guint _property_id = (property_id); \
	g_warning ("%s: invalid %s id %u for \"%s\" of type %s in %s", \
	G_STRLOC, (pname), _property_id, _pspec->name, g_type_name \
	(G_PARAM_SPEC_TYPE (_pspec)), G_OBJECT_TYPE_NAME (_object)); } \
	G_STMT_END
#define G_DEFINE_TYPE_EXTENDED(TypeName,type_name,TYPE_PARENT,flags,CODE)	 \
	static void type_name ##_init (TypeName *self); static void type_name \
	##_class_init (TypeName ##Class *klass); static gpointer type_name \
	##_parent_class = NULL; static void type_name ##_class_intern_init \
	(gpointer klass) { type_name ##_parent_class = \
	g_type_class_peek_parent (klass); type_name ##_class_init ((TypeName \
	##Class*) klass); } GType type_name ##_get_type (void) { static GType \
	g_define_type_id = 0; if (G_UNLIKELY (g_define_type_id == 0)) { static \
	const GTypeInfo g_define_type_info = { sizeof (TypeName ##Class), \
	(GBaseInitFunc) NULL, (GBaseFinalizeFunc) NULL, (GClassInitFunc) \
	type_name ##_class_intern_init, (GClassFinalizeFunc) NULL, NULL, \
	sizeof (TypeName), 0, (GInstanceInitFunc) type_name ##_init, NULL }; \
	g_define_type_id = g_type_register_static (TYPE_PARENT, #TypeName, \
	&amp;g_define_type_info, (GTypeFlags) flags); { CODE ; } } return \
	g_define_type_id; }
#define G_IMPLEMENT_INTERFACE(TYPE_IFACE,iface_init)	 \
	{ static const GInterfaceInfo g_implement_interface_info = { \
	(GInterfaceInitFunc) iface_init }; g_type_add_interface_static \
	(g_define_type_id, TYPE_IFACE, &amp;g_implement_interface_info); }
#define G_CCLOSURE_SWAP_DATA(cclosure)	 \
 (((GClosure*) (cclosure))->derivative_flag)
#define G_TYPE_FROM_CLASS(g_class)	(((GTypeClass*) (g_class))->g_type)
#define G_VALUE_TYPE(value)	(((GValue*) (value))->g_type)
#define _G_TYPE_IGC(ip,gt,ct)	((ct*) (((GTypeInstance*) ip)->g_class))
#define G_CALLBACK(f)	((GCallback) (f))
#define G_TYPE_FLAG_RESERVED_ID_BIT	((GType) (1 &lt;&lt; 0))
#define G_TYPE_IS_FUNDAMENTAL(type)	((type) &lt;= G_TYPE_FUNDAMENTAL_MAX)
#define G_TYPE_IS_DERIVED(type)	((type) > G_TYPE_FUNDAMENTAL_MAX)
#define G_PARAM_MASK	(0x000000ff)
#define G_VALUE_NOCOPY_CONTENTS	(1 &lt;&lt; 27)
#define G_TYPE_FUNDAMENTAL_SHIFT	(2)
#define G_TYPE_RESERVED_GLIB_FIRST	(21)
#define G_TYPE_FUNDAMENTAL_MAX	(255 &lt;&lt; G_TYPE_FUNDAMENTAL_SHIFT)
#define G_TYPE_RESERVED_GLIB_LAST	(31)
#define G_TYPE_RESERVED_BSE_FIRST	(32)
#define G_TYPE_RESERVED_BSE_LAST	(48)
#define G_TYPE_RESERVED_USER_FIRST	(49)
#define G_PARAM_USER_SHIFT	(8)
#define G_TYPE_CLOSURE	(g_closure_get_type ())
#define G_TYPE_GSTRING	(g_gstring_get_type ())
#define G_TYPE_IO_CHANNEL	(g_io_channel_get_type ())
#define G_TYPE_IO_CONDITION	(g_io_condition_get_type ())
#define G_PARAM_READWRITE	(G_PARAM_READABLE | G_PARAM_WRITABLE)
#define G_PARAM_SPEC_VALUE_TYPE(pspec)	(G_PARAM_SPEC (pspec)->value_type)
#define G_TYPE_PARAM_CHAR	(g_param_spec_types[0])
#define G_TYPE_PARAM_ENUM	(g_param_spec_types[10])
#define G_TYPE_PARAM_FLAGS	(g_param_spec_types[11])
#define G_TYPE_PARAM_FLOAT	(g_param_spec_types[12])
#define G_TYPE_PARAM_DOUBLE	(g_param_spec_types[13])
#define G_TYPE_PARAM_STRING	(g_param_spec_types[14])
#define G_TYPE_PARAM_PARAM	(g_param_spec_types[15])
#define G_TYPE_PARAM_BOXED	(g_param_spec_types[16])
#define G_TYPE_PARAM_POINTER	(g_param_spec_types[17])
#define G_TYPE_PARAM_VALUE_ARRAY	(g_param_spec_types[18])
#define G_TYPE_PARAM_OBJECT	(g_param_spec_types[19])
#define G_TYPE_PARAM_UCHAR	(g_param_spec_types[1])
#define G_TYPE_PARAM_OVERRIDE	(g_param_spec_types[20])
#define G_TYPE_PARAM_BOOLEAN	(g_param_spec_types[2])
#define G_TYPE_PARAM_INT	(g_param_spec_types[3])
#define G_TYPE_PARAM_UINT	(g_param_spec_types[4])
#define G_TYPE_PARAM_LONG	(g_param_spec_types[5])
#define G_TYPE_PARAM_ULONG	(g_param_spec_types[6])
#define G_TYPE_PARAM_INT64	(g_param_spec_types[7])
#define G_TYPE_PARAM_UINT64	(g_param_spec_types[8])
#define G_TYPE_PARAM_UNICHAR	(g_param_spec_types[9])
#define G_TYPE_STRV	(g_strv_get_type ())
#define _G_TYPE_CHI(ip)	(g_type_check_instance ((GTypeInstance*) ip))
#define G_TYPE_IS_VALUE(type)	(g_type_check_is_value_type (type))
#define G_TYPE_IS_VALUE_TYPE(type)	(g_type_check_is_value_type (type))
#define _G_TYPE_CHV(vl)	(g_type_check_value ((GValue*) vl))
#define G_IS_VALUE(value)	(G_TYPE_CHECK_VALUE (value))
#define G_SIGNAL_TYPE_STATIC_SCOPE	(G_TYPE_FLAG_RESERVED_ID_BIT)
#define G_ENUM_CLASS_TYPE(class)	(G_TYPE_FROM_CLASS (class))
#define G_FLAGS_CLASS_TYPE(class)	(G_TYPE_FROM_CLASS (class))
#define G_OBJECT_CLASS_TYPE(class)	(G_TYPE_FROM_CLASS (class))
#define G_OBJECT_TYPE(object)	(G_TYPE_FROM_INSTANCE (object))
#define G_PARAM_SPEC_TYPE(pspec)	(G_TYPE_FROM_INSTANCE (pspec))
#define G_TYPE_IS_BOXED(type)	(G_TYPE_FUNDAMENTAL (type) == G_TYPE_BOXED)
#define G_TYPE_IS_ENUM(type)	(G_TYPE_FUNDAMENTAL (type) == G_TYPE_ENUM)
#define G_TYPE_IS_FLAGS(type)	(G_TYPE_FUNDAMENTAL (type) == G_TYPE_FLAGS)
#define G_TYPE_IS_PARAM(type)	(G_TYPE_FUNDAMENTAL (type) == G_TYPE_PARAM)
#define G_TYPE_FUNDAMENTAL(type)	(g_type_fundamental (type))
#define G_TYPE_TYPE_MODULE	(g_type_module_get_type ())
#define G_OBJECT_TYPE_NAME(object)	(g_type_name (G_OBJECT_TYPE (object)))
#define G_VALUE_TYPE_NAME(value)	(g_type_name (G_VALUE_TYPE (value)))
#define G_TYPE_TYPE_PLUGIN	(g_type_plugin_get_type ())
#define G_TYPE_VALUE_ARRAY	(g_value_array_get_type ())
#define G_TYPE_VALUE	(g_value_get_type ())
#define G_TYPE_CHECK_VALUE(value)	(_G_TYPE_CHV ((value)))
#define G_SIGNAL_MATCH_MASK	0x3f
#define G_SIGNAL_FLAGS_MASK	0x7f
#define GOBJECT_VAR	extern
#define g_cclosure_marshal_BOOL__FLAGS	g_cclosure_marshal_BOOLEAN__FLAGS
#define G_TYPE_INVALID	G_TYPE_MAKE_FUNDAMENTAL (0)
#define G_TYPE_NONE	G_TYPE_MAKE_FUNDAMENTAL (1)
#define G_TYPE_INT64	G_TYPE_MAKE_FUNDAMENTAL (10)
#define G_TYPE_UINT64	G_TYPE_MAKE_FUNDAMENTAL (11)
#define G_TYPE_ENUM	G_TYPE_MAKE_FUNDAMENTAL (12)
#define G_TYPE_FLAGS	G_TYPE_MAKE_FUNDAMENTAL (13)
#define G_TYPE_FLOAT	G_TYPE_MAKE_FUNDAMENTAL (14)
#define G_TYPE_DOUBLE	G_TYPE_MAKE_FUNDAMENTAL (15)
#define G_TYPE_STRING	G_TYPE_MAKE_FUNDAMENTAL (16)
#define G_TYPE_POINTER	G_TYPE_MAKE_FUNDAMENTAL (17)
#define G_TYPE_BOXED	G_TYPE_MAKE_FUNDAMENTAL (18)
#define G_TYPE_PARAM	G_TYPE_MAKE_FUNDAMENTAL (19)
#define G_TYPE_INTERFACE	G_TYPE_MAKE_FUNDAMENTAL (2)
#define G_TYPE_OBJECT	G_TYPE_MAKE_FUNDAMENTAL (20)
#define G_TYPE_CHAR	G_TYPE_MAKE_FUNDAMENTAL (3)
#define G_TYPE_UCHAR	G_TYPE_MAKE_FUNDAMENTAL (4)
#define G_TYPE_BOOLEAN	G_TYPE_MAKE_FUNDAMENTAL (5)
#define G_TYPE_INT	G_TYPE_MAKE_FUNDAMENTAL (6)
#define G_TYPE_UINT	G_TYPE_MAKE_FUNDAMENTAL (7)
#define G_TYPE_LONG	G_TYPE_MAKE_FUNDAMENTAL (8)
#define G_TYPE_ULONG	G_TYPE_MAKE_FUNDAMENTAL (9)

typedef gulong GType;
typedef struct _GTypeClass {
    GType g_type;
} GTypeClass;
typedef struct _GTypeInstance {
    GTypeClass *g_class;
} GTypeInstance;
typedef struct _GObject {
    GTypeInstance g_type_instance;
    volatile guint ref_count;
    GData *qdata;
} GObject;
typedef float gfloat;
typedef struct _GValue {
    GType g_type;
    union {
	gint v_int;
	guint v_uint;
	glong v_long;
	gulong v_ulong;
	gint64 v_int64;
	guint64 v_uint64;
	gfloat v_float;
	gdouble v_double;
	gpointer v_pointer;
    } data[2];
} GValue;
typedef enum {
    G_PARAM_READABLE = 1,
    G_PARAM_WRITABLE = 2,
    G_PARAM_CONSTRUCT = 4,
    G_PARAM_CONSTRUCT_ONLY = 8,
    G_PARAM_LAX_VALIDATION = 16,
    G_PARAM_STATIC_NAME = 32,
    G_PARAM_PRIVATE = G_PARAM_STATIC_NAME,
    G_PARAM_STATIC_NICK = 64,
    G_PARAM_STATIC_BLURB = 128
} GParamFlags;
typedef struct _GParamSpec {
    GTypeInstance g_type_instance;
    gchar *name;
    GParamFlags flags;
    GType value_type;
    GType owner_type;
    gchar *_nick;
    gchar *_blurb;
    GData *qdata;
    guint ref_count;
    guint param_id;
} GParamSpec;
typedef struct _GObjectConstructParam {
    GParamSpec *pspec;
    GValue *value;
} GObjectConstructParam;
typedef struct _GObjectClass {
    GTypeClass g_type_class;
    GSList *construct_properties;
    GObject *(*constructor) (GType, guint, GObjectConstructParam *);
    void (*set_property) (GObject *, guint, const GValue *, GParamSpec *);
    void (*get_property) (GObject *, guint, GValue *, GParamSpec *);
    void (*dispose) (GObject *);
    void (*finalize) (GObject *);
    void (*dispatch_properties_changed) (GObject *, guint, GParamSpec * *);
    void (*notify) (GObject *, GParamSpec *);
    gpointer pdummy[8];
} GObjectClass;
typedef struct _GClosure {
    volatile guint ref_count:15;
    volatile guint meta_marshal:1;
    volatile guint n_guards:1;
    volatile guint n_fnotifiers:2;
    volatile guint n_inotifiers:8;
    volatile guint in_inotify:1;
    volatile guint floating:1;
    volatile guint derivative_flag:1;
    volatile guint in_marshal:1;
    volatile guint is_invalid:1;
    void (*marshal) (GClosure *, GValue *, guint, const GValue *, gpointer,
		     gpointer);
    gpointer data;
    GClosureNotifyData *notifiers;
} GClosure;
typedef void (*GClosureNotify) (gpointer, GClosure *);
typedef struct _GClosureNotifyData {
    gpointer data;
    GClosureNotify notify;
} GClosureNotifyData;
typedef void (*GTypeInterfaceCheckFunc) (gpointer, gpointer);
typedef struct _GValueArray {
    guint n_values;
    GValue *values;
    guint n_prealloced;
} GValueArray;
typedef struct _GEnumValue {
    gint value;
    gchar *value_name;
    gchar *value_nick;
} GEnumValue;
typedef struct _GEnumClass {
    GTypeClass g_type_class;
    gint minimum;
    gint maximum;
    guint n_values;
    GEnumValue *values;
} GEnumClass;
typedef struct _GParamSpecPool GParamSpecPool;
typedef enum {
    G_TYPE_DEBUG_NONE = 0,
    G_TYPE_DEBUG_OBJECTS = 1,
    G_TYPE_DEBUG_SIGNALS = 2,
    G_TYPE_DEBUG_MASK = 3
} GTypeDebugFlags;
typedef struct _GTypePlugin GTypePlugin;
typedef enum {
    G_SIGNAL_MATCH_ID = 1,
    G_SIGNAL_MATCH_DETAIL = 2,
    G_SIGNAL_MATCH_CLOSURE = 4,
    G_SIGNAL_MATCH_FUNC = 8,
    G_SIGNAL_MATCH_DATA = 16,
    G_SIGNAL_MATCH_UNBLOCKED = 32
} GSignalMatchType;
typedef struct _GFlagsValue {
    guint value;
    gchar *value_name;
    gchar *value_nick;
} GFlagsValue;
typedef void (*GClosureMarshal) (GClosure *, GValue *, guint,
				 const GValue *, gpointer, gpointer);
typedef void (*GCallback) (void);
typedef struct _GFlagsClass {
    GTypeClass g_type_class;
    guint mask;
    guint n_values;
    GFlagsValue *values;
} GFlagsClass;
typedef gboolean(*GTypeClassCacheFunc) (gpointer, GTypeClass *);
typedef enum {
    G_SIGNAL_RUN_FIRST = 1,
    G_SIGNAL_RUN_LAST = 2,
    G_SIGNAL_RUN_CLEANUP = 4,
    G_SIGNAL_NO_RECURSE = 8,
    G_SIGNAL_DETAILED = 16,
    G_SIGNAL_ACTION = 32,
    G_SIGNAL_NO_HOOKS = 64
} GSignalFlags;
typedef struct _GSignalInvocationHint {
    guint signal_id;
    GQuark detail;
    GSignalFlags run_type;
} GSignalInvocationHint;
typedef void (*GWeakNotify) (gpointer, GObject *);
typedef void (*GBaseInitFunc) (gpointer);
typedef void (*GBaseFinalizeFunc) (gpointer);
typedef void (*GClassInitFunc) (gpointer, gpointer);
typedef void (*GClassFinalizeFunc) (gpointer, gpointer);
typedef void (*GInstanceInitFunc) (GTypeInstance *, gpointer);
typedef union _GTypeCValue GTypeCValue;
typedef struct _GTypeValueTable {
    void (*value_init) (GValue *);
    void (*value_free) (GValue *);
    void (*value_copy) (const GValue *, GValue *);
     gpointer(*value_peek_pointer) (const GValue *);
    gchar *collect_format;
    gchar *(*collect_value) (GValue *, guint, GTypeCValue *, guint);
    gchar *lcopy_format;
    gchar *(*lcopy_value) (const GValue *, guint, GTypeCValue *, guint);
} GTypeValueTable;
typedef struct _GTypeInfo {
    guint16 class_size;
    GBaseInitFunc base_init;
    GBaseFinalizeFunc base_finalize;
    GClassInitFunc class_init;
    GClassFinalizeFunc class_finalize;
    gconstpointer class_data;
    guint16 instance_size;
    guint16 n_preallocs;
    GInstanceInitFunc instance_init;
    const GTypeValueTable *value_table;
} GTypeInfo;
typedef enum {
    G_TYPE_FLAG_ABSTRACT = 16,
    G_TYPE_FLAG_VALUE_ABSTRACT = 32
} GTypeFlags;
typedef struct _GTypeModule {
    GObject parent_instance;
    guint use_count;
    GSList *type_infos;
    GSList *interface_infos;
    gchar *name;
} GTypeModule;
typedef void (*GInterfaceInitFunc) (gpointer, gpointer);
typedef void (*GInterfaceFinalizeFunc) (gpointer, gpointer);
typedef struct _GInterfaceInfo {
    GInterfaceInitFunc interface_init;
    GInterfaceFinalizeFunc interface_finalize;
    gpointer interface_data;
} GInterfaceInfo;
typedef gboolean(*GSignalAccumulator) (GSignalInvocationHint *, GValue *,
				       const GValue *, gpointer);
typedef GClosureMarshal GSignalCMarshaller;
typedef enum {
    G_CONNECT_AFTER = 1,
    G_CONNECT_SWAPPED = 2
} GConnectFlags;
typedef enum {
    G_TYPE_FLAG_CLASSED = 1,
    G_TYPE_FLAG_INSTANTIATABLE = 2,
    G_TYPE_FLAG_DERIVABLE = 4,
    G_TYPE_FLAG_DEEP_DERIVABLE = 8
} GTypeFundamentalFlags;
typedef struct _GTypeFundamentalInfo {
    GTypeFundamentalFlags type_flags;
} GTypeFundamentalInfo;
typedef struct _GTypeQuery {
    GType type;
    const gchar *type_name;
    guint class_size;
    guint instance_size;
} GTypeQuery;
typedef gboolean(*GSignalEmissionHook) (GSignalInvocationHint *, guint,
					const GValue *, gpointer);
typedef void (*GValueTransform) (const GValue *, GValue *);
typedef struct _GParameter {
    const gchar *name;
    GValue value;
} GParameter;
typedef struct _GParamSpecTypeInfo {
    guint16 instance_size;
    guint16 n_preallocs;
    void (*instance_init) (GParamSpec *);
    GType value_type;
    void (*finalize) (GParamSpec *);
    void (*value_set_default) (GParamSpec *, GValue *);
     gboolean(*value_validate) (GParamSpec *, GValue *);
     gint(*values_cmp) (GParamSpec *, const GValue *, const GValue *);
} GParamSpecTypeInfo;
typedef gpointer(*GBoxedCopyFunc) (gpointer);
typedef void (*GBoxedFreeFunc) (gpointer);
typedef struct _GSignalQuery {
    guint signal_id;
    const gchar *signal_name;
    GType itype;
    GSignalFlags signal_flags;
    GType return_type;
    guint n_params;
    const GType *param_types;
} GSignalQuery;
typedef struct _GTypeInterface {
    GType g_type;
    GType g_instance_type;
} GTypeInterface;
typedef void (*GTypePluginCompleteInterfaceInfo) (GTypePlugin *, GType,
						  GType, GInterfaceInfo *);
typedef struct _GParamSpecObject {
    GParamSpec parent_instance;
} GParamSpecObject;
typedef void (*GTypePluginUnuse) (GTypePlugin *);
typedef void (*GTypePluginUse) (GTypePlugin *);
typedef void (*GTypePluginCompleteTypeInfo) (GTypePlugin *, GType,
					     GTypeInfo *,
					     GTypeValueTable *);
typedef struct _GTypePluginClass {
    GTypeInterface base_iface;
    GTypePluginUse use_plugin;
    GTypePluginUnuse unuse_plugin;
    GTypePluginCompleteTypeInfo complete_type_info;
    GTypePluginCompleteInterfaceInfo complete_interface_info;
} GTypePluginClass;
typedef struct _GCClosure {
    GClosure closure;
    gpointer callback;
} GCClosure;
typedef struct _GParamSpecUnichar {
    GParamSpec parent_instance;
    gunichar default_value;
} GParamSpecUnichar;
typedef struct _GParamSpecUInt64 {
    GParamSpec parent_instance;
    guint64 minimum;
    guint64 maximum;
    guint64 default_value;
} GParamSpecUInt64;
typedef struct _GParamSpecBoxed {
    GParamSpec parent_instance;
} GParamSpecBoxed;
typedef struct _GParamSpecOverride {
    GParamSpec parent_instance;
    GParamSpec *overridden;
} GParamSpecOverride;
typedef struct _GParamSpecClass {
    GTypeClass g_type_class;
    GType value_type;
    void (*finalize) (GParamSpec *);
    void (*value_set_default) (GParamSpec *, GValue *);
     gboolean(*value_validate) (GParamSpec *, GValue *);
     gint(*values_cmp) (GParamSpec *, const GValue *, const GValue *);
    gpointer dummy[4];
} GParamSpecClass;
typedef struct _GParamSpecLong {
    GParamSpec parent_instance;
    glong minimum;
    glong maximum;
    glong default_value;
} GParamSpecLong;
typedef struct _GParamSpecEnum {
    GParamSpec parent_instance;
    GEnumClass *enum_class;
    gint default_value;
} GParamSpecEnum;
typedef struct _GParamSpecFloat {
    GParamSpec parent_instance;
    gfloat minimum;
    gfloat maximum;
    gfloat default_value;
    gfloat epsilon;
} GParamSpecFloat;
typedef struct _GParamSpecString {
    GParamSpec parent_instance;
    gchar *default_value;
    gchar *cset_first;
    gchar *cset_nth;
    gchar substitutor;
    guint null_fold_if_empty:1;
    guint ensure_non_null:1;
} GParamSpecString;
typedef struct _GParamSpecDouble {
    GParamSpec parent_instance;
    gdouble minimum;
    gdouble maximum;
    gdouble default_value;
    gdouble epsilon;
} GParamSpecDouble;
typedef struct _GParamSpecParam {
    GParamSpec parent_instance;
} GParamSpecParam;
typedef struct _GParamSpecValueArray {
    GParamSpec parent_instance;
    GParamSpec *element_spec;
    guint fixed_n_elements;
} GParamSpecValueArray;
typedef struct _GParamSpecFlags {
    GParamSpec parent_instance;
    GFlagsClass *flags_class;
    guint default_value;
} GParamSpecFlags;
typedef struct _GParamSpecInt64 {
    GParamSpec parent_instance;
    gint64 minimum;
    gint64 maximum;
    gint64 default_value;
} GParamSpecInt64;
typedef struct _GParamSpecPointer {
    GParamSpec parent_instance;
} GParamSpecPointer;
typedef struct _GParamSpecInt {
    GParamSpec parent_instance;
    gint minimum;
    gint maximum;
    gint default_value;
} GParamSpecInt;
typedef struct _GTypeModuleClass {
    GObjectClass parent_class;
     gboolean(*load) (GTypeModule *);
    void (*unload) (GTypeModule *);
    void (*reserved1) (void);
    void (*reserved2) (void);
    void (*reserved3) (void);
    void (*reserved4) (void);
} GTypeModuleClass;
typedef struct _GParamSpecUInt {
    GParamSpec parent_instance;
    guint minimum;
    guint maximum;
    guint default_value;
} GParamSpecUInt;
typedef struct _GParamSpecUChar {
    GParamSpec parent_instance;
    guint8 minimum;
    guint8 maximum;
    guint8 default_value;
} GParamSpecUChar;
typedef struct _GParamSpecULong {
    GParamSpec parent_instance;
    gulong minimum;
    gulong maximum;
    gulong default_value;
} GParamSpecULong;
typedef struct _GParamSpecChar {
    GParamSpec parent_instance;
    gint8 minimum;
    gint8 maximum;
    gint8 default_value;
} GParamSpecChar;
typedef struct _GParamSpecBoolean {
    GParamSpec parent_instance;
    gboolean default_value;
} GParamSpecBoolean;
typedef void (*GObjectFinalizeFunc) (GObject *);
typedef void (*GObjectGetPropertyFunc) (GObject *, guint, GValue *,
					GParamSpec *);
typedef void (*GObjectSetPropertyFunc) (GObject *, guint, const GValue *,
					GParamSpec *);
typedef gchar *gchararray;
typedef gchar **GStrv;
typedef void (*GToggleNotify) (gpointer, GObject *, gboolean);
extern void g_object_set_property(GObject *, const gchar *,
				  const GValue *);
extern void g_value_set_param(GValue *, GParamSpec *);
extern gpointer g_object_steal_qdata(GObject *, GQuark);
extern void g_object_class_override_property(GObjectClass *, guint,
					     const gchar *);
extern void g_cclosure_marshal_VOID__INT(GClosure *, GValue *, guint,
					 const GValue *, gpointer,
					 gpointer);
extern void g_closure_sink(GClosure *);
extern gboolean g_type_check_value_holds(GValue *, GType);
extern void g_type_remove_interface_check(gpointer,
					  GTypeInterfaceCheckFunc);
extern GValueArray *g_value_array_remove(GValueArray *, guint);
extern gboolean g_param_value_defaults(GParamSpec *, GValue *);
extern GParamSpec *g_param_spec_long(const gchar *, const gchar *,
				     const gchar *, glong, glong, glong,
				     GParamFlags);
extern gpointer g_param_spec_internal(GType, const gchar *, const gchar *,
				      const gchar *, GParamFlags);
extern void g_cclosure_marshal_VOID__LONG(GClosure *, GValue *, guint,
					  const GValue *, gpointer,
					  gpointer);
extern GType g_io_channel_get_type(void);
extern GEnumValue *g_enum_get_value(GEnumClass *, gint);
extern GParamSpec *g_param_spec_boolean(const gchar *, const gchar *,
					const gchar *, gboolean,
					GParamFlags);
extern GParamSpec *g_param_spec_pointer(const gchar *, const gchar *,
					const gchar *, GParamFlags);
extern GClosure *g_closure_new_object(guint, GObject *);
extern void g_param_spec_pool_insert(GParamSpecPool *, GParamSpec *,
				     GType);
extern void g_type_init_with_debug_flags(GTypeDebugFlags);
extern GType *g_type_interfaces(GType, guint *);
extern GClosure *g_closure_new_simple(guint, gpointer);
extern GParamSpec *g_param_spec_string(const gchar *, const gchar *,
				       const gchar *, const gchar *,
				       GParamFlags);
extern GValueArray *g_value_array_copy(const GValueArray *);
extern gpointer g_type_instance_get_private(GTypeInstance *, GType);
extern void g_cclosure_marshal_VOID__FLAGS(GClosure *, GValue *, guint,
					   const GValue *, gpointer,
					   gpointer);
extern GTypePlugin *g_type_get_plugin(GType);
extern void g_param_spec_unref(GParamSpec *);
extern gint g_param_values_cmp(GParamSpec *, const GValue *,
			       const GValue *);
extern void g_value_set_object(GValue *, gpointer);
extern GParamSpec *g_param_spec_boxed(const gchar *, const gchar *,
				      const gchar *, GType, GParamFlags);
extern void g_value_set_int(GValue *, gint);
extern gboolean g_signal_parse_name(const gchar *, GType, guint *,
				    GQuark *, gboolean);
extern GParamSpec *g_param_spec_pool_lookup(GParamSpecPool *,
					    const gchar *, GType,
					    gboolean);
extern GTypeInstance *g_type_create_instance(GType);
extern void g_signal_override_class_closure(guint, GType, GClosure *);
extern gboolean g_param_value_validate(GParamSpec *, GValue *);
extern void g_closure_add_invalidate_notifier(GClosure *, gpointer,
					      GClosureNotify);
extern gpointer g_type_interface_peek(gpointer, GType);
extern gboolean g_type_test_flags(GType, guint);
extern void g_signal_emit_by_name(gpointer, const gchar *, ...);
extern void g_value_set_int64(GValue *, gint64);
extern void g_cclosure_marshal_VOID__UINT(GClosure *, GValue *, guint,
					  const GValue *, gpointer,
					  gpointer);
extern GType g_enum_register_static(const gchar *, const GEnumValue *);
extern guint g_signal_handlers_disconnect_matched(gpointer,
						  GSignalMatchType, guint,
						  GQuark, GClosure *,
						  gpointer, gpointer);
extern gpointer g_value_get_pointer(const GValue *);
extern GType g_flags_register_static(const gchar *, const GFlagsValue *);
extern gboolean g_value_fits_pointer(const GValue *);
extern void g_closure_set_marshal(GClosure *, GClosureMarshal);
extern void g_value_set_float(GValue *, gfloat);
extern void g_signal_emit(gpointer, guint, GQuark, ...);
extern GParamSpec *g_param_spec_uint(const gchar *, const gchar *,
				     const gchar *, guint, guint, guint,
				     GParamFlags);
extern GClosure *g_cclosure_new_object_swap(GCallback, GObject *);
extern void g_param_spec_set_qdata(GParamSpec *, GQuark, gpointer);
extern guint *g_signal_list_ids(GType, guint *);
extern GFlagsValue *g_flags_get_first_value(GFlagsClass *, guint);
extern void g_type_add_class_cache_func(gpointer, GTypeClassCacheFunc);
extern void g_object_unref(gpointer);
extern GParamSpec *g_value_dup_param(const GValue *);
extern void g_object_get(gpointer, const gchar *, ...);
extern void g_value_set_uint64(GValue *, guint64);
extern void g_cclosure_marshal_VOID__OBJECT(GClosure *, GValue *, guint,
					    const GValue *, gpointer,
					    gpointer);
extern guint64 g_value_get_uint64(const GValue *);
extern GType *g_type_children(GType, guint *);
extern const gchar *g_type_name(GType);
extern GTypeClass *g_type_check_class_cast(GTypeClass *, GType);
extern void g_cclosure_marshal_VOID__UCHAR(GClosure *, GValue *, guint,
					   const GValue *, gpointer,
					   gpointer);
extern gpointer g_object_new(GType, const gchar *, ...);
extern void g_type_class_unref_uncached(gpointer);
extern const gchar *g_type_name_from_class(GTypeClass *);
extern void g_object_set(gpointer, const gchar *, ...);
extern void g_signal_emit_valist(gpointer, guint, GQuark, va_list);
extern GSignalInvocationHint *g_signal_get_invocation_hint(gpointer);
extern void g_closure_invalidate(GClosure *);
extern void g_cclosure_marshal_VOID__FLOAT(GClosure *, GValue *, guint,
					   const GValue *, gpointer,
					   gpointer);
extern void g_object_weak_unref(GObject *, GWeakNotify, gpointer);
extern GParamSpec *g_param_spec_int(const gchar *, const gchar *,
				    const gchar *, gint, gint, gint,
				    GParamFlags);
extern void g_value_set_char(GValue *, gchar);
extern gpointer g_type_default_interface_ref(GType);
extern GValueArray *g_value_array_sort(GValueArray *, GCompareFunc);
extern void g_cclosure_marshal_VOID__VOID(GClosure *, GValue *, guint,
					  const GValue *, gpointer,
					  gpointer);
extern GType *g_param_spec_types;
extern GClosure *g_cclosure_new_object(GCallback, GObject *);
extern GType g_type_register_static(GType, const gchar *,
				    const GTypeInfo *, GTypeFlags);
extern GEnumValue *g_enum_get_value_by_name(GEnumClass *, const gchar *);
extern GFlagsValue *g_flags_get_value_by_nick(GFlagsClass *,
					      const gchar *);
extern guint g_type_depth(GType);
extern void g_object_class_install_property(GObjectClass *, guint,
					    GParamSpec *);
extern void g_type_plugin_unuse(GTypePlugin *);
extern void g_type_module_unuse(GTypeModule *);
extern GParamSpec *g_param_spec_flags(const gchar *, const gchar *,
				      const gchar *, GType, guint,
				      GParamFlags);
extern GParamSpec *g_param_spec_char(const gchar *, const gchar *,
				     const gchar *, gint8, gint8, gint8,
				     GParamFlags);
extern void g_closure_remove_invalidate_notifier(GClosure *, gpointer,
						 GClosureNotify);
extern gint g_value_get_enum(const GValue *);
extern GParamSpec *g_object_interface_find_property(gpointer,
						    const gchar *);
extern void g_value_copy(const GValue *, GValue *);
extern gpointer g_type_get_qdata(GType, GQuark);
extern void g_cclosure_marshal_VOID__DOUBLE(GClosure *, GValue *, guint,
					    const GValue *, gpointer,
					    gpointer);
extern gboolean g_value_type_compatible(GType, GType);
extern void g_object_set_data_full(GObject *, const gchar *, gpointer,
				   GDestroyNotify);
extern guint g_signal_handlers_block_matched(gpointer, GSignalMatchType,
					     guint, GQuark, GClosure *,
					     gpointer, gpointer);
extern gpointer g_boxed_copy(GType, gconstpointer);
extern const gchar *g_value_get_string(const GValue *);
extern void g_object_thaw_notify(GObject *);
extern void g_signal_handler_block(gpointer, gulong);
extern void g_type_plugin_complete_type_info(GTypePlugin *, GType,
					     GTypeInfo *,
					     GTypeValueTable *);
extern GTypeInstance *g_type_check_instance_cast(GTypeInstance *, GType);
extern GEnumValue *g_enum_get_value_by_nick(GEnumClass *, const gchar *);
extern GType g_type_from_name(const gchar *);
extern gboolean g_signal_accumulator_true_handled(GSignalInvocationHint *,
						  GValue *, const GValue *,
						  gpointer);
extern GType g_type_module_register_enum(GTypeModule *, const gchar *,
					 const GEnumValue *);
extern void g_closure_unref(GClosure *);
extern void g_signal_chain_from_overridden(const GValue *, GValue *);
extern gboolean g_param_value_convert(GParamSpec *, const GValue *,
				      GValue *, gboolean);
extern void g_type_class_add_private(gpointer, gsize);
extern gpointer g_type_interface_peek_parent(gpointer);
extern void g_type_add_interface_check(gpointer, GTypeInterfaceCheckFunc);
extern void g_cclosure_marshal_VOID__POINTER(GClosure *, GValue *, guint,
					     const GValue *, gpointer,
					     gpointer);
extern void g_cclosure_marshal_VOID__CHAR(GClosure *, GValue *, guint,
					  const GValue *, gpointer,
					  gpointer);
extern GParamSpec *g_param_spec_float(const gchar *, const gchar *,
				      const gchar *, gfloat, gfloat,
				      gfloat, GParamFlags);
extern gboolean g_type_is_a(GType, GType);
extern GParamSpec *g_param_spec_object(const gchar *, const gchar *,
				       const gchar *, GType, GParamFlags);
extern gpointer g_type_class_peek_parent(gpointer);
extern GType g_io_condition_get_type(void);
extern guchar g_value_get_uchar(const GValue *);
extern GParamSpec *g_param_spec_double(const gchar *, const gchar *,
				       const gchar *, gdouble, gdouble,
				       gdouble, GParamFlags);
extern GType g_strv_get_type(void);
extern void g_cclosure_marshal_STRING__OBJECT_POINTER(GClosure *, GValue *,
						      guint,
						      const GValue *,
						      gpointer, gpointer);
extern gulong g_signal_handler_find(gpointer, GSignalMatchType, guint,
				    GQuark, GClosure *, gpointer,
				    gpointer);
extern GParamSpec *g_param_spec_ref(GParamSpec *);
extern gboolean g_value_transform(const GValue *, GValue *);
extern gpointer g_type_class_peek_static(GType);
extern GObject *g_object_new_valist(GType, const gchar *, va_list);
extern void g_value_unset(GValue *);
extern gpointer g_value_dup_boxed(const GValue *);
extern void g_cclosure_marshal_VOID__STRING(GClosure *, GValue *, guint,
					    const GValue *, gpointer,
					    gpointer);
extern void g_param_spec_sink(GParamSpec *);
extern void g_object_run_dispose(GObject *);
extern GParamSpec *g_param_spec_override(const gchar *, GParamSpec *);
extern void g_value_set_instance(GValue *, gpointer);
extern gpointer g_value_peek_pointer(const GValue *);
extern GType g_type_module_register_type(GTypeModule *, GType,
					 const gchar *, const GTypeInfo *,
					 GTypeFlags);
extern void g_signal_handlers_destroy(gpointer);
extern void g_value_set_boolean(GValue *, gboolean);
extern void g_type_plugin_complete_interface_info(GTypePlugin *, GType,
						  GType, GInterfaceInfo *);
extern GParamSpec *g_param_spec_get_redirect_target(GParamSpec *);
extern GParamSpec **g_object_interface_list_properties(gpointer, guint *);
extern gint64 g_value_get_int64(const GValue *);
extern GType g_type_module_register_flags(GTypeModule *, const gchar *,
					  const GFlagsValue *);
extern void g_cclosure_marshal_BOOLEAN__FLAGS(GClosure *, GValue *, guint,
					      const GValue *, gpointer,
					      gpointer);
extern gpointer g_param_spec_get_qdata(GParamSpec *, GQuark);
extern void g_type_init(void);
extern gulong g_value_get_ulong(const GValue *);
extern gchar *g_strdup_value_contents(const GValue *);
extern guint g_signal_new_valist(const gchar *, GType, GSignalFlags,
				 GClosure *, GSignalAccumulator, gpointer,
				 GSignalCMarshaller, GType, guint,
				 va_list);
extern void g_object_disconnect(gpointer, const gchar *, ...);
extern void g_object_add_weak_pointer(GObject *, gpointer *);
extern GParamSpec *g_param_spec_param(const gchar *, const gchar *,
				      const gchar *, GType, GParamFlags);
extern void g_signal_stop_emission_by_name(gpointer, const gchar *);
extern GValueArray *g_value_array_sort_with_data(GValueArray *,
						 GCompareDataFunc,
						 gpointer);
extern GType g_value_array_get_type(void);
extern void g_value_take_string(GValue *, gchar *);
extern GType g_closure_get_type(void);
extern void g_signal_stop_emission(gpointer, guint, GQuark);
extern void g_object_notify(GObject *, const gchar *);
extern gfloat g_value_get_float(const GValue *);
extern gchar g_value_get_char(const GValue *);
extern void g_value_take_boxed(GValue *, gconstpointer);
extern void g_cclosure_marshal_VOID__BOOLEAN(GClosure *, GValue *, guint,
					     const GValue *, gpointer,
					     gpointer);
extern gulong g_signal_connect_data(gpointer, const gchar *, GCallback,
				    gpointer, GClosureNotify,
				    GConnectFlags);
extern void g_object_set_data(GObject *, const gchar *, gpointer);
extern GType g_type_register_fundamental(GType, const gchar *,
					 const GTypeInfo *,
					 const GTypeFundamentalInfo *,
					 GTypeFlags);
extern GParamSpec **g_object_class_list_properties(GObjectClass *,
						   guint *);
extern void g_cclosure_marshal_VOID__UINT_POINTER(GClosure *, GValue *,
						  guint, const GValue *,
						  gpointer, gpointer);
extern void g_type_class_unref(gpointer);
extern void g_cclosure_marshal_VOID__BOXED(GClosure *, GValue *, guint,
					   const GValue *, gpointer,
					   gpointer);
extern gboolean g_value_type_transformable(GType, GType);
extern void g_signal_handler_unblock(gpointer, gulong);
extern GValue *g_value_init(GValue *, GType);
extern gpointer g_object_ref(gpointer);
extern void g_object_get_valist(GObject *, const gchar *, va_list);
extern gboolean g_value_get_boolean(const GValue *);
extern void g_type_query(GType, GTypeQuery *);
extern void g_type_interface_add_prerequisite(GType, GType);
extern gint g_value_get_int(const GValue *);
extern void g_cclosure_marshal_VOID__ENUM(GClosure *, GValue *, guint,
					  const GValue *, gpointer,
					  gpointer);
extern GType g_type_fundamental_next(void);
extern gboolean g_type_check_value(GValue *);
extern gpointer g_value_get_boxed(const GValue *);
extern GClosure *g_signal_type_cclosure_new(GType, guint);
extern void g_value_set_static_boxed(GValue *, gconstpointer);
extern GType g_type_plugin_get_type(void);
extern GType *g_type_interface_prerequisites(GType, guint *);
extern void g_boxed_free(GType, gpointer);
extern GParamSpec *g_param_spec_uint64(const gchar *, const gchar *,
				       const gchar *, guint64, guint64,
				       guint64, GParamFlags);
extern GType g_type_next_base(GType, GType);
extern const gchar *g_type_name_from_instance(GTypeInstance *);
extern const gchar *g_param_spec_get_name(GParamSpec *);
extern gulong g_signal_add_emission_hook(guint, GQuark,
					 GSignalEmissionHook, gpointer,
					 GDestroyNotify);
extern GParamSpec *g_object_class_find_property(GObjectClass *,
						const gchar *);
extern void g_value_set_long(GValue *, glong);
extern void g_param_spec_pool_remove(GParamSpecPool *, GParamSpec *);
extern void g_signal_emitv(const GValue *, guint, GQuark, GValue *);
extern GType g_type_module_get_type(void);
extern GObject *g_value_dup_object(const GValue *);
extern void g_flags_complete_type_info(GType, GTypeInfo *,
				       const GFlagsValue *);
extern gulong g_signal_connect_closure_by_id(gpointer, guint, GQuark,
					     GClosure *, gboolean);
extern GType g_value_get_type(void);
extern gulong g_signal_connect_closure(gpointer, const gchar *, GClosure *,
				       gboolean);
extern gulong g_signal_connect_object(gpointer, const gchar *, GCallback,
				      gpointer, GConnectFlags);
extern void g_value_take_param(GValue *, GParamSpec *);
extern void g_value_set_ulong(GValue *, gulong);
extern void g_value_register_transform_func(GType, GType, GValueTransform);
extern GType g_type_parent(GType);
extern void g_type_plugin_use(GTypePlugin *);
extern GType g_type_register_dynamic(GType, const gchar *, GTypePlugin *,
				     GTypeFlags);
extern GType g_pointer_type_register_static(const gchar *);
extern void g_closure_add_finalize_notifier(GClosure *, gpointer,
					    GClosureNotify);
extern GFlagsValue *g_flags_get_value_by_name(GFlagsClass *,
					      const gchar *);
extern void g_cclosure_marshal_VOID__PARAM(GClosure *, GValue *, guint,
					   const GValue *, gpointer,
					   gpointer);
extern gboolean g_signal_handler_is_connected(gpointer, gulong);
extern void g_closure_set_meta_marshal(GClosure *, gpointer,
				       GClosureMarshal);
extern void g_value_set_uchar(GValue *, guchar);
extern GValueArray *g_value_array_prepend(GValueArray *, const GValue *);
extern void g_source_set_closure(GSource *, GClosure *);
extern GParamSpec **g_param_spec_pool_list(GParamSpecPool *, GType,
					   guint *);
extern GQuark g_type_qname(GType);
extern gboolean g_type_module_use(GTypeModule *);
extern void g_type_add_interface_dynamic(GType, GType, GTypePlugin *);
extern gpointer g_type_class_ref(GType);
extern void g_closure_remove_finalize_notifier(GClosure *, gpointer,
					       GClosureNotify);
extern gpointer g_object_connect(gpointer, const gchar *, ...);
extern void g_type_remove_class_cache_func(gpointer, GTypeClassCacheFunc);
extern gpointer g_object_newv(GType, guint, GParameter *);
extern GValueArray *g_value_array_insert(GValueArray *, guint,
					 const GValue *);
extern gboolean g_signal_has_handler_pending(gpointer, guint, GQuark,
					     gboolean);
extern guint g_signal_lookup(const gchar *, GType);
extern void g_type_free_instance(GTypeInstance *);
extern void g_closure_invoke(GClosure *, GValue *, guint, const GValue *,
			     gpointer);
extern GType g_type_fundamental(GType);
extern GTypeValueTable *g_type_value_table_peek(GType);
extern GList *g_param_spec_pool_list_owned(GParamSpecPool *, GType);
extern void g_value_set_enum(GValue *, gint);
extern gchar *g_value_dup_string(const GValue *);
extern void g_signal_handler_disconnect(gpointer, gulong);
extern GType g_param_type_register_static(const gchar *,
					  const GParamSpecTypeInfo *);
extern void g_object_remove_weak_pointer(GObject *, gpointer *);
extern glong g_value_get_long(const GValue *);
extern gboolean g_type_check_is_value_type(GType);
extern void g_value_set_double(GValue *, gdouble);
extern void g_value_set_static_string(GValue *, const gchar *);
extern const gchar *g_param_spec_get_nick(GParamSpec *);
extern GClosure *g_cclosure_new(GCallback, gpointer, GClosureNotify);
extern guint g_value_get_uint(const GValue *);
extern GClosure *g_cclosure_new_swap(GCallback, gpointer, GClosureNotify);
extern GValue *g_value_reset(GValue *);
extern void g_object_set_qdata(GObject *, GQuark, gpointer);
extern gpointer g_object_get_data(GObject *, const gchar *);
extern gpointer g_object_get_qdata(GObject *, GQuark);
extern void g_object_set_valist(GObject *, const gchar *, va_list);
extern void g_object_freeze_notify(GObject *);
extern void g_value_set_pointer(GValue *, gpointer);
extern gpointer g_object_steal_data(GObject *, const gchar *);
extern void g_object_interface_install_property(gpointer, GParamSpec *);
extern void g_object_watch_closure(GObject *, GClosure *);
extern void g_value_take_object(GValue *, gpointer);
extern GValueArray *g_value_array_new(guint);
extern GParamSpec *g_value_get_param(const GValue *);
extern void g_param_value_set_default(GParamSpec *, GValue *);
extern void g_closure_add_marshal_guards(GClosure *, gpointer,
					 GClosureNotify, gpointer,
					 GClosureNotify);
extern gdouble g_value_get_double(const GValue *);
extern GValue *g_value_array_get_nth(GValueArray *, guint);
extern GTypePlugin *g_type_interface_get_plugin(GType, GType);
extern void g_object_weak_ref(GObject *, GWeakNotify, gpointer);
extern GType g_gstring_get_type(void);
extern void g_value_set_flags(GValue *, guint);
extern void g_object_get_property(GObject *, const gchar *, GValue *);
extern GParamSpec *g_param_spec_unichar(const gchar *, const gchar *,
					const gchar *, gunichar,
					GParamFlags);
extern void g_type_default_interface_unref(gpointer);
extern GParamSpec *g_param_spec_uchar(const gchar *, const gchar *,
				      const gchar *, guint8, guint8,
				      guint8, GParamFlags);
extern void g_object_set_qdata_full(GObject *, GQuark, gpointer,
				    GDestroyNotify);
extern void g_type_set_qdata(GType, GQuark, gpointer);
extern void g_value_set_string(GValue *, const gchar *);
extern gpointer g_type_class_peek(GType);
extern void g_value_set_boxed(GValue *, gconstpointer);
extern void g_type_module_set_name(GTypeModule *, const gchar *);
extern GClosure *g_closure_ref(GClosure *);
extern guint g_signal_handlers_unblock_matched(gpointer, GSignalMatchType,
					       guint, GQuark, GClosure *,
					       gpointer, gpointer);
extern GParamSpec *g_param_spec_value_array(const gchar *, const gchar *,
					    const gchar *, GParamSpec *,
					    GParamFlags);
extern GParamSpec *g_param_spec_enum(const gchar *, const gchar *,
				     const gchar *, GType, gint,
				     GParamFlags);
extern void g_param_spec_set_qdata_full(GParamSpec *, GQuark, gpointer,
					GDestroyNotify);
extern GParamSpec *g_param_spec_ulong(const gchar *, const gchar *,
				      const gchar *, gulong, gulong,
				      gulong, GParamFlags);
extern guint g_value_get_flags(const GValue *);
extern void g_type_module_add_interface(GTypeModule *, GType, GType,
					const GInterfaceInfo *);
extern gboolean g_type_check_instance(GTypeInstance *);
extern GValueArray *g_value_array_append(GValueArray *, const GValue *);
extern void g_type_add_interface_static(GType, GType,
					const GInterfaceInfo *);
extern gpointer g_param_spec_steal_qdata(GParamSpec *, GQuark);
extern gboolean g_type_check_class_is_a(GTypeClass *, GType);
extern const gchar *g_param_spec_get_blurb(GParamSpec *);
extern void g_value_set_uint(GValue *, guint);
extern GParamSpecPool *g_param_spec_pool_new(gboolean);
extern const gchar *g_signal_name(guint);
extern GParamSpec *g_param_spec_int64(const gchar *, const gchar *,
				      const gchar *, gint64, gint64,
				      gint64, GParamFlags);
extern guint g_signal_newv(const gchar *, GType, GSignalFlags, GClosure *,
			   GSignalAccumulator, gpointer,
			   GSignalCMarshaller, GType, guint, GType *);
extern guint g_signal_new(const gchar *, GType, GSignalFlags, guint,
			  GSignalAccumulator, gpointer, GSignalCMarshaller,
			  GType, guint, ...);
extern GType g_boxed_type_register_static(const gchar *, GBoxedCopyFunc,
					  GBoxedFreeFunc);
extern void g_value_array_free(GValueArray *);
extern void g_cclosure_marshal_VOID__ULONG(GClosure *, GValue *, guint,
					   const GValue *, gpointer,
					   gpointer);
extern void g_signal_remove_emission_hook(guint, gulong);
extern void g_enum_complete_type_info(GType, GTypeInfo *,
				      const GEnumValue *);
extern gpointer g_value_get_object(const GValue *);
extern gpointer g_type_default_interface_peek(GType);
extern void g_signal_query(guint, GSignalQuery *);
extern gboolean g_type_check_instance_is_a(GTypeInstance *, GType);
extern void g_object_add_toggle_ref(GObject *, GToggleNotify, gpointer);
extern void g_object_remove_toggle_ref(GObject *, GToggleNotify, gpointer);
</SCREEN>
</SECT2>
<SECT2>
<TITLE>glib-2.0/gobject/gvaluecollector.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define G_VALUE_LCOPY(value,var_args,flags,__error)	 \
	G_STMT_START { const GValue *_value = (value); guint _flags = \
	(flags); GType _value_type = G_VALUE_TYPE (_value); GTypeValueTable \
	*_vtable = g_type_value_table_peek (_value_type); gchar *_lcopy_format \
	= _vtable->lcopy_format; GTypeCValue \
	_cvalues[G_VALUE_COLLECT_FORMAT_MAX_LENGTH] = { { 0, }, }; guint \
	_n_values = 0; while (*_lcopy_format) { GTypeCValue *_cvalue = \
	_cvalues + _n_values++; switch (*_lcopy_format++) { case \
	G_VALUE_COLLECT_INT: _cvalue->v_int = va_arg ((var_args), gint); \
	break; case G_VALUE_COLLECT_LONG: _cvalue->v_long = va_arg \
	((var_args), glong); break; case G_VALUE_COLLECT_INT64: \
	_cvalue->v_int64 = va_arg ((var_args), gint64); break; case \
	G_VALUE_COLLECT_DOUBLE: _cvalue->v_double = va_arg ((var_args), \
	gdouble); break; case G_VALUE_COLLECT_POINTER: _cvalue->v_pointer = \
	va_arg ((var_args), gpointer); break; default: g_assert_not_reached \
	(); } } *(__error) = _vtable->lcopy_value (_value, _n_values, \
	_cvalues, _flags); } G_STMT_END
#define G_VALUE_COLLECT(value,var_args,flags,__error)	 \
	G_STMT_START { GValue *_value = (value); guint _flags = (flags); \
	GType _value_type = G_VALUE_TYPE (_value); GTypeValueTable *_vtable = \
	g_type_value_table_peek (_value_type); gchar *_collect_format = \
	_vtable->collect_format; GTypeCValue \
	_cvalues[G_VALUE_COLLECT_FORMAT_MAX_LENGTH] = { { 0, }, }; guint \
	_n_values = 0; if (_vtable->value_free) _vtable->value_free (_value); \
	_value->g_type = _value_type; memset (_value->data, 0, sizeof \
	(_value->data)); while (*_collect_format) { GTypeCValue *_cvalue = \
	_cvalues + _n_values++; switch (*_collect_format++) { case \
	G_VALUE_COLLECT_INT: _cvalue->v_int = va_arg ((var_args), gint); \
	break; case G_VALUE_COLLECT_LONG: _cvalue->v_long = va_arg \
	((var_args), glong); break; case G_VALUE_COLLECT_INT64: \
	_cvalue->v_int64 = va_arg ((var_args), gint64); break; case \
	G_VALUE_COLLECT_DOUBLE: _cvalue->v_double = va_arg ((var_args), \
	gdouble); break; case G_VALUE_COLLECT_POINTER: _cvalue->v_pointer = \
	va_arg ((var_args), gpointer); break; default: g_assert_not_reached \
	(); } } *(__error) = _vtable->collect_value (_value, _n_values, \
	_cvalues, _flags); } G_STMT_END
#define G_VALUE_COLLECT_FORMAT_MAX_LENGTH	(8)

enum {
    G_VALUE_COLLECT_INT = 'i',
    G_VALUE_COLLECT_LONG = 'l',
    G_VALUE_COLLECT_INT64 = 'q',
    G_VALUE_COLLECT_DOUBLE = 'd',
    G_VALUE_COLLECT_POINTER = 'p'
};
</SCREEN>
</SECT2>
</SECT1>
<!-- End of text generated from database -->

<!-- Start of generated text - do not edit! -->
<!-- generated from the LSB specification database by mklibspec -->
<SECT1 ID=libgmodule-2.0>
<TITLE>Interfaces for libgmodule-2.0</TITLE>
<PARA>
<XREF LINKEND="lib-libgmodule-2.0-def"> defines the library name and shared object name
for the libgmodule-2.0 library
</PARA>
<TABLE id="lib-libgmodule-2.0-def">
<TITLE>libgmodule-2.0 Definition</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Library:</ENTRY>
<ENTRY>libgmodule-2.0</ENTRY>
</ROW>
<ROW>
<ENTRY>SONAME:</ENTRY>
<ENTRY>libgmodule-2.0.so.0</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The behavior of the interfaces in this library is specified by the following specifications:<SIMPLELIST COLUMNS=1>
<MEMBER ID='REFSTD.libgmodule.2.0.1'>
[Glib 2.8] <XREF LINKEND="std.Glib.2.8">
</MEMBER>
</SIMPLELIST>
</PARA>
<!-- debug: database interface name Glib-Dynamic loading of Modules -->
<SECT2>
<!--libgroup-->
<TITLE>Glib-Dynamic loading of Modules</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Interfaces for Glib-Dynamic loading of Modules</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic functions
for Glib-Dynamic loading of Modules specified in <XREF linkend="tbl-libgmodule-2.0-glib-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<TABLE id="tbl-libgmodule-2.0-glib-ints">
<TITLE>libgmodule-2.0 - Glib-Dynamic loading of Modules Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>g_module_build_path</primary></indexterm>g_module_build_path <LINK LINKEND="REFSTD.libgmodule.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_module_close</primary></indexterm>g_module_close <LINK LINKEND="REFSTD.libgmodule.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_module_error</primary></indexterm>g_module_error <LINK LINKEND="REFSTD.libgmodule.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_module_make_resident</primary></indexterm>g_module_make_resident <LINK LINKEND="REFSTD.libgmodule.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_module_name</primary></indexterm>g_module_name <LINK LINKEND="REFSTD.libgmodule.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_module_open</primary></indexterm>g_module_open <LINK LINKEND="REFSTD.libgmodule.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>g_module_supported</primary></indexterm>g_module_supported <LINK LINKEND="REFSTD.libgmodule.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_module_symbol</primary></indexterm>g_module_symbol <LINK LINKEND="REFSTD.libgmodule.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>
</SECT2>
</SECT1>
<SECT1 ID=libgmodule-2.0-ddefs>
<TITLE>Data Definitions for libgmodule-2.0</TITLE>
<PARA>
This section defines global identifiers and their values that are associated
with interfaces contained in libgmodule-2.0.
These definitions are organized into groups that
correspond to system headers. This convention is used as a
convenience for the reader, and does not imply the existence
of these headers, or their content.
Where an interface is defined as requiring a particular system header file
all of the data definitions for that system header file presented here shall be in effect.
</PARA>
<PARA>
This section gives data definitions to promote binary application
portability, not to repeat source interface definitions available
elsewhere. System providers and application developers should use this ABI
to supplement - not to replace - source interface definition specifications.
</PARA>
<PARA>
This specification uses the <XREF LINKEND='std.ISOC99'> C Language as the reference programming language, and data definitions are specified in ISO C format. The C language is used here as a convenient notation. Using a C language description of these data objects does not preclude their use by other programming languages.</PARA>
<SECT2>
<TITLE>glib-2.0/gmodule.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define G_MODULE_EXPORT
#define G_MODULE_IMPORT	extern

typedef struct _GModule GModule;
typedef enum {
    G_MODULE_BIND_LAZY = 1,
    G_MODULE_BIND_LOCAL = 2,
    G_MODULE_BIND_MASK = 3
} GModuleFlags;
typedef void (*GModuleUnload) (GModule *);
typedef const gchar *(*GModuleCheckInit) (GModule *);
extern void g_module_make_resident(GModule *);
extern gchar *g_module_build_path(const gchar *, const gchar *);
extern gboolean g_module_close(GModule *);
extern GModule *g_module_open(const gchar *, GModuleFlags);
extern gboolean g_module_symbol(GModule *, const gchar *, gpointer *);
extern const gchar *g_module_error(void);
extern const gchar *g_module_name(GModule *);
extern gboolean g_module_supported(void);
</SCREEN>
</SECT2>
</SECT1>
<!-- End of text generated from database -->

<!-- Start of generated text - do not edit! -->
<!-- generated from the LSB specification database by mklibspec -->
<SECT1 ID=libgthread-2.0>
<TITLE>Interfaces for libgthread-2.0</TITLE>
<PARA>
<XREF LINKEND="lib-libgthread-2.0-def"> defines the library name and shared object name
for the libgthread-2.0 library
</PARA>
<TABLE id="lib-libgthread-2.0-def">
<TITLE>libgthread-2.0 Definition</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Library:</ENTRY>
<ENTRY>libgthread-2.0</ENTRY>
</ROW>
<ROW>
<ENTRY>SONAME:</ENTRY>
<ENTRY>libgthread-2.0.so.0</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The behavior of the interfaces in this library is specified by the following specifications:<SIMPLELIST COLUMNS=1>
<MEMBER ID='REFSTD.libgthread.2.0.1'>
[Glib 2.8] <XREF LINKEND="std.Glib.2.8">
</MEMBER>
</SIMPLELIST>
</PARA>
<!-- debug: database interface name Glib thread abstraction -->
<SECT2>
<!--libgroup-->
<TITLE>Glib thread abstraction</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Interfaces for Glib thread abstraction</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic functions
for Glib thread abstraction specified in <XREF linkend="tbl-libgthread-2.0-glib-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<TABLE id="tbl-libgthread-2.0-glib-ints">
<TITLE>libgthread-2.0 - Glib thread abstraction Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>g_thread_init</primary></indexterm>g_thread_init <LINK LINKEND="REFSTD.libgthread.2.0.1">[Glib 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>g_thread_init_with_errorcheck_mutexes</primary></indexterm>g_thread_init_with_errorcheck_mutexes <LINK LINKEND="REFSTD.libgthread.2.0.1">[Glib 2.8]</LINK></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>
</SECT2>
</SECT1>
<!-- End of text generated from database -->

<!-- Start of generated text - do not edit! -->
<!-- generated from the LSB specification database by mklibspec -->
<SECT1 ID=libatk-1.0>
<TITLE>Interfaces for libatk-1.0</TITLE>
<PARA>
<XREF LINKEND="lib-libatk-1.0-def"> defines the library name and shared object name
for the libatk-1.0 library
</PARA>
<TABLE id="lib-libatk-1.0-def">
<TITLE>libatk-1.0 Definition</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Library:</ENTRY>
<ENTRY>libatk-1.0</ENTRY>
</ROW>
<ROW>
<ENTRY>SONAME:</ENTRY>
<ENTRY>libatk-1.0.so.0</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The behavior of the interfaces in this library is specified by the following specifications:<SIMPLELIST COLUMNS=1>
<MEMBER ID='REFSTD.libatk.1.0.1'>
[ATK 1.10] <XREF LINKEND="std.ATK.1.10">
</MEMBER>
<MEMBER ID='REFSTD.libatk.1.0.2'>
[Gobject 2.8] <XREF LINKEND="std.Gobject.2.8">
</MEMBER>
</SIMPLELIST>
</PARA>
<!-- debug: database interface name GTK Accessibility Toolkit -->
<SECT2>
<!--libgroup-->
<TITLE>GTK Accessibility Toolkit</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Interfaces for GTK Accessibility Toolkit</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic functions
for GTK Accessibility Toolkit specified in <XREF linkend="tbl-libatk-1.0-gtk-a-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<TABLE id="tbl-libatk-1.0-gtk-a-ints">
<TITLE>libatk-1.0 - GTK Accessibility Toolkit Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>atk_action_do_action</primary></indexterm>atk_action_do_action <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_action_get_description</primary></indexterm>atk_action_get_description <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK 1.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>atk_action_get_keybinding</primary></indexterm>atk_action_get_keybinding <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_action_get_localized_name</primary></indexterm>atk_action_get_localized_name <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK 1.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>atk_action_get_n_actions</primary></indexterm>atk_action_get_n_actions <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_action_get_name</primary></indexterm>atk_action_get_name <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK 1.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>atk_action_get_type</primary></indexterm>atk_action_get_type <LINK LINKEND="REFSTD.libatk.1.0.2">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_action_set_description</primary></indexterm>atk_action_set_description <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK 1.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>atk_add_focus_tracker</primary></indexterm>atk_add_focus_tracker <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_add_global_event_listener</primary></indexterm>atk_add_global_event_listener <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK 1.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>atk_add_key_event_listener</primary></indexterm>atk_add_key_event_listener <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_attribute_set_free</primary></indexterm>atk_attribute_set_free <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK 1.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>atk_component_add_focus_handler</primary></indexterm>atk_component_add_focus_handler <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_component_contains</primary></indexterm>atk_component_contains <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK 1.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>atk_component_get_extents</primary></indexterm>atk_component_get_extents <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_component_get_layer</primary></indexterm>atk_component_get_layer <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK 1.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>atk_component_get_mdi_zorder</primary></indexterm>atk_component_get_mdi_zorder <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_component_get_position</primary></indexterm>atk_component_get_position <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK 1.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>atk_component_get_size</primary></indexterm>atk_component_get_size <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_component_get_type</primary></indexterm>atk_component_get_type <LINK LINKEND="REFSTD.libatk.1.0.2">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>atk_component_grab_focus</primary></indexterm>atk_component_grab_focus <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_component_ref_accessible_at_point</primary></indexterm>atk_component_ref_accessible_at_point <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK 1.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>atk_component_remove_focus_handler</primary></indexterm>atk_component_remove_focus_handler <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_component_set_extents</primary></indexterm>atk_component_set_extents <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK 1.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>atk_component_set_position</primary></indexterm>atk_component_set_position <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_component_set_size</primary></indexterm>atk_component_set_size <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK 1.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>atk_coord_type_get_type</primary></indexterm>atk_coord_type_get_type <LINK LINKEND="REFSTD.libatk.1.0.2">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_document_get_document</primary></indexterm>atk_document_get_document <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK 1.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>atk_document_get_document_type</primary></indexterm>atk_document_get_document_type <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_document_get_type</primary></indexterm>atk_document_get_type <LINK LINKEND="REFSTD.libatk.1.0.2">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>atk_editable_text_copy_text</primary></indexterm>atk_editable_text_copy_text <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_editable_text_cut_text</primary></indexterm>atk_editable_text_cut_text <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK 1.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>atk_editable_text_delete_text</primary></indexterm>atk_editable_text_delete_text <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_editable_text_get_type</primary></indexterm>atk_editable_text_get_type <LINK LINKEND="REFSTD.libatk.1.0.2">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>atk_editable_text_insert_text</primary></indexterm>atk_editable_text_insert_text <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_editable_text_paste_text</primary></indexterm>atk_editable_text_paste_text <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK 1.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>atk_editable_text_set_run_attributes</primary></indexterm>atk_editable_text_set_run_attributes <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_editable_text_set_text_contents</primary></indexterm>atk_editable_text_set_text_contents <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK 1.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>atk_focus_tracker_init</primary></indexterm>atk_focus_tracker_init <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_focus_tracker_notify</primary></indexterm>atk_focus_tracker_notify <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK 1.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>atk_get_default_registry</primary></indexterm>atk_get_default_registry <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_get_focus_object</primary></indexterm>atk_get_focus_object <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK 1.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>atk_get_root</primary></indexterm>atk_get_root <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_get_toolkit_name</primary></indexterm>atk_get_toolkit_name <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK 1.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>atk_get_toolkit_version</primary></indexterm>atk_get_toolkit_version <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_gobject_accessible_for_object</primary></indexterm>atk_gobject_accessible_for_object <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK 1.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>atk_gobject_accessible_get_object</primary></indexterm>atk_gobject_accessible_get_object <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_gobject_accessible_get_type</primary></indexterm>atk_gobject_accessible_get_type <LINK LINKEND="REFSTD.libatk.1.0.2">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>atk_hyperlink_get_end_index</primary></indexterm>atk_hyperlink_get_end_index <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_hyperlink_get_n_anchors</primary></indexterm>atk_hyperlink_get_n_anchors <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK 1.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>atk_hyperlink_get_object</primary></indexterm>atk_hyperlink_get_object <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_hyperlink_get_start_index</primary></indexterm>atk_hyperlink_get_start_index <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK 1.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>atk_hyperlink_get_type</primary></indexterm>atk_hyperlink_get_type <LINK LINKEND="REFSTD.libatk.1.0.2">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_hyperlink_get_uri</primary></indexterm>atk_hyperlink_get_uri <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK 1.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>atk_hyperlink_is_inline</primary></indexterm>atk_hyperlink_is_inline <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_hyperlink_is_selected_link</primary></indexterm>atk_hyperlink_is_selected_link <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK 1.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>atk_hyperlink_is_valid</primary></indexterm>atk_hyperlink_is_valid <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_hyperlink_state_flags_get_type</primary></indexterm>atk_hyperlink_state_flags_get_type <LINK LINKEND="REFSTD.libatk.1.0.2">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>atk_hypertext_get_link</primary></indexterm>atk_hypertext_get_link <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_hypertext_get_link_index</primary></indexterm>atk_hypertext_get_link_index <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK 1.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>atk_hypertext_get_n_links</primary></indexterm>atk_hypertext_get_n_links <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_hypertext_get_type</primary></indexterm>atk_hypertext_get_type <LINK LINKEND="REFSTD.libatk.1.0.2">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>atk_image_get_image_description</primary></indexterm>atk_image_get_image_description <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_image_get_image_position</primary></indexterm>atk_image_get_image_position <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK 1.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>atk_image_get_image_size</primary></indexterm>atk_image_get_image_size <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_image_get_type</primary></indexterm>atk_image_get_type <LINK LINKEND="REFSTD.libatk.1.0.2">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>atk_image_set_image_description</primary></indexterm>atk_image_set_image_description <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_implementor_get_type</primary></indexterm>atk_implementor_get_type <LINK LINKEND="REFSTD.libatk.1.0.2">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>atk_implementor_ref_accessible</primary></indexterm>atk_implementor_ref_accessible <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_key_event_type_get_type</primary></indexterm>atk_key_event_type_get_type <LINK LINKEND="REFSTD.libatk.1.0.2">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>atk_layer_get_type</primary></indexterm>atk_layer_get_type <LINK LINKEND="REFSTD.libatk.1.0.2">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_no_op_object_factory_get_type</primary></indexterm>atk_no_op_object_factory_get_type <LINK LINKEND="REFSTD.libatk.1.0.2">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>atk_no_op_object_factory_new</primary></indexterm>atk_no_op_object_factory_new <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_no_op_object_get_type</primary></indexterm>atk_no_op_object_get_type <LINK LINKEND="REFSTD.libatk.1.0.2">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>atk_no_op_object_new</primary></indexterm>atk_no_op_object_new <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_object_add_relationship</primary></indexterm>atk_object_add_relationship <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK 1.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>atk_object_connect_property_change_handler</primary></indexterm>atk_object_connect_property_change_handler <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_object_factory_create_accessible</primary></indexterm>atk_object_factory_create_accessible <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK 1.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>atk_object_factory_get_accessible_type</primary></indexterm>atk_object_factory_get_accessible_type <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_object_factory_get_type</primary></indexterm>atk_object_factory_get_type <LINK LINKEND="REFSTD.libatk.1.0.2">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>atk_object_factory_invalidate</primary></indexterm>atk_object_factory_invalidate <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_object_get_description</primary></indexterm>atk_object_get_description <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK 1.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>atk_object_get_index_in_parent</primary></indexterm>atk_object_get_index_in_parent <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_object_get_n_accessible_children</primary></indexterm>atk_object_get_n_accessible_children <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK 1.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>atk_object_get_name</primary></indexterm>atk_object_get_name <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_object_get_parent</primary></indexterm>atk_object_get_parent <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK 1.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>atk_object_get_role</primary></indexterm>atk_object_get_role <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_object_get_type</primary></indexterm>atk_object_get_type <LINK LINKEND="REFSTD.libatk.1.0.2">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>atk_object_initialize</primary></indexterm>atk_object_initialize <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_object_notify_state_change</primary></indexterm>atk_object_notify_state_change <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK 1.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>atk_object_ref_accessible_child</primary></indexterm>atk_object_ref_accessible_child <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_object_ref_relation_set</primary></indexterm>atk_object_ref_relation_set <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK 1.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>atk_object_ref_state_set</primary></indexterm>atk_object_ref_state_set <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_object_remove_property_change_handler</primary></indexterm>atk_object_remove_property_change_handler <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK 1.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>atk_object_remove_relationship</primary></indexterm>atk_object_remove_relationship <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_object_set_description</primary></indexterm>atk_object_set_description <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK 1.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>atk_object_set_name</primary></indexterm>atk_object_set_name <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_object_set_parent</primary></indexterm>atk_object_set_parent <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK 1.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>atk_object_set_role</primary></indexterm>atk_object_set_role <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_rectangle_get_type</primary></indexterm>atk_rectangle_get_type <LINK LINKEND="REFSTD.libatk.1.0.2">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>atk_registry_get_factory</primary></indexterm>atk_registry_get_factory <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_registry_get_factory_type</primary></indexterm>atk_registry_get_factory_type <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK 1.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>atk_registry_get_type</primary></indexterm>atk_registry_get_type <LINK LINKEND="REFSTD.libatk.1.0.2">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_registry_set_factory_type</primary></indexterm>atk_registry_set_factory_type <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK 1.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>atk_relation_add_target</primary></indexterm>atk_relation_add_target <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_relation_get_relation_type</primary></indexterm>atk_relation_get_relation_type <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK 1.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>atk_relation_get_target</primary></indexterm>atk_relation_get_target <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_relation_get_type</primary></indexterm>atk_relation_get_type <LINK LINKEND="REFSTD.libatk.1.0.2">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>atk_relation_new</primary></indexterm>atk_relation_new <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_relation_set_add</primary></indexterm>atk_relation_set_add <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK 1.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>atk_relation_set_add_relation_by_type</primary></indexterm>atk_relation_set_add_relation_by_type <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_relation_set_contains</primary></indexterm>atk_relation_set_contains <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK 1.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>atk_relation_set_get_n_relations</primary></indexterm>atk_relation_set_get_n_relations <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_relation_set_get_relation</primary></indexterm>atk_relation_set_get_relation <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK 1.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>atk_relation_set_get_relation_by_type</primary></indexterm>atk_relation_set_get_relation_by_type <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_relation_set_get_type</primary></indexterm>atk_relation_set_get_type <LINK LINKEND="REFSTD.libatk.1.0.2">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>atk_relation_set_new</primary></indexterm>atk_relation_set_new <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_relation_set_remove</primary></indexterm>atk_relation_set_remove <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK 1.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>atk_relation_type_for_name</primary></indexterm>atk_relation_type_for_name <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_relation_type_get_name</primary></indexterm>atk_relation_type_get_name <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK 1.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>atk_relation_type_get_type</primary></indexterm>atk_relation_type_get_type <LINK LINKEND="REFSTD.libatk.1.0.2">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_relation_type_register</primary></indexterm>atk_relation_type_register <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK 1.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>atk_remove_focus_tracker</primary></indexterm>atk_remove_focus_tracker <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_remove_global_event_listener</primary></indexterm>atk_remove_global_event_listener <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK 1.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>atk_remove_key_event_listener</primary></indexterm>atk_remove_key_event_listener <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_role_for_name</primary></indexterm>atk_role_for_name <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK 1.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>atk_role_get_localized_name</primary></indexterm>atk_role_get_localized_name <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_role_get_name</primary></indexterm>atk_role_get_name <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK 1.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>atk_role_get_type</primary></indexterm>atk_role_get_type <LINK LINKEND="REFSTD.libatk.1.0.2">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_role_register</primary></indexterm>atk_role_register <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK 1.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>atk_selection_add_selection</primary></indexterm>atk_selection_add_selection <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_selection_clear_selection</primary></indexterm>atk_selection_clear_selection <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK 1.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>atk_selection_get_selection_count</primary></indexterm>atk_selection_get_selection_count <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_selection_get_type</primary></indexterm>atk_selection_get_type <LINK LINKEND="REFSTD.libatk.1.0.2">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>atk_selection_is_child_selected</primary></indexterm>atk_selection_is_child_selected <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_selection_ref_selection</primary></indexterm>atk_selection_ref_selection <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK 1.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>atk_selection_remove_selection</primary></indexterm>atk_selection_remove_selection <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_selection_select_all_selection</primary></indexterm>atk_selection_select_all_selection <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK 1.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>atk_state_set_add_state</primary></indexterm>atk_state_set_add_state <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_state_set_add_states</primary></indexterm>atk_state_set_add_states <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK 1.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>atk_state_set_and_sets</primary></indexterm>atk_state_set_and_sets <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_state_set_clear_states</primary></indexterm>atk_state_set_clear_states <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK 1.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>atk_state_set_contains_state</primary></indexterm>atk_state_set_contains_state <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_state_set_contains_states</primary></indexterm>atk_state_set_contains_states <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK 1.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>atk_state_set_get_type</primary></indexterm>atk_state_set_get_type <LINK LINKEND="REFSTD.libatk.1.0.2">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_state_set_is_empty</primary></indexterm>atk_state_set_is_empty <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK 1.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>atk_state_set_new</primary></indexterm>atk_state_set_new <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_state_set_or_sets</primary></indexterm>atk_state_set_or_sets <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK 1.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>atk_state_set_remove_state</primary></indexterm>atk_state_set_remove_state <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_state_set_xor_sets</primary></indexterm>atk_state_set_xor_sets <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK 1.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>atk_state_type_for_name</primary></indexterm>atk_state_type_for_name <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_state_type_get_name</primary></indexterm>atk_state_type_get_name <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK 1.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>atk_state_type_get_type</primary></indexterm>atk_state_type_get_type <LINK LINKEND="REFSTD.libatk.1.0.2">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_state_type_register</primary></indexterm>atk_state_type_register <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK 1.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>atk_streamable_content_get_mime_type</primary></indexterm>atk_streamable_content_get_mime_type <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_streamable_content_get_n_mime_types</primary></indexterm>atk_streamable_content_get_n_mime_types <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK 1.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>atk_streamable_content_get_stream</primary></indexterm>atk_streamable_content_get_stream <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_streamable_content_get_type</primary></indexterm>atk_streamable_content_get_type <LINK LINKEND="REFSTD.libatk.1.0.2">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>atk_table_add_column_selection</primary></indexterm>atk_table_add_column_selection <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_table_add_row_selection</primary></indexterm>atk_table_add_row_selection <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK 1.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>atk_table_get_caption</primary></indexterm>atk_table_get_caption <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_table_get_column_at_index</primary></indexterm>atk_table_get_column_at_index <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK 1.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>atk_table_get_column_description</primary></indexterm>atk_table_get_column_description <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_table_get_column_extent_at</primary></indexterm>atk_table_get_column_extent_at <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK 1.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>atk_table_get_column_header</primary></indexterm>atk_table_get_column_header <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_table_get_index_at</primary></indexterm>atk_table_get_index_at <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK 1.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>atk_table_get_n_columns</primary></indexterm>atk_table_get_n_columns <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_table_get_n_rows</primary></indexterm>atk_table_get_n_rows <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK 1.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>atk_table_get_row_at_index</primary></indexterm>atk_table_get_row_at_index <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_table_get_row_description</primary></indexterm>atk_table_get_row_description <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK 1.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>atk_table_get_row_extent_at</primary></indexterm>atk_table_get_row_extent_at <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_table_get_row_header</primary></indexterm>atk_table_get_row_header <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK 1.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>atk_table_get_selected_columns</primary></indexterm>atk_table_get_selected_columns <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_table_get_selected_rows</primary></indexterm>atk_table_get_selected_rows <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK 1.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>atk_table_get_summary</primary></indexterm>atk_table_get_summary <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_table_get_type</primary></indexterm>atk_table_get_type <LINK LINKEND="REFSTD.libatk.1.0.2">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>atk_table_is_column_selected</primary></indexterm>atk_table_is_column_selected <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_table_is_row_selected</primary></indexterm>atk_table_is_row_selected <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK 1.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>atk_table_is_selected</primary></indexterm>atk_table_is_selected <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_table_ref_at</primary></indexterm>atk_table_ref_at <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK 1.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>atk_table_remove_column_selection</primary></indexterm>atk_table_remove_column_selection <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_table_remove_row_selection</primary></indexterm>atk_table_remove_row_selection <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK 1.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>atk_table_set_caption</primary></indexterm>atk_table_set_caption <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_table_set_column_description</primary></indexterm>atk_table_set_column_description <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK 1.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>atk_table_set_column_header</primary></indexterm>atk_table_set_column_header <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_table_set_row_description</primary></indexterm>atk_table_set_row_description <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK 1.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>atk_table_set_row_header</primary></indexterm>atk_table_set_row_header <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_table_set_summary</primary></indexterm>atk_table_set_summary <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK 1.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>atk_text_add_selection</primary></indexterm>atk_text_add_selection <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_text_attribute_for_name</primary></indexterm>atk_text_attribute_for_name <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK 1.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>atk_text_attribute_get_name</primary></indexterm>atk_text_attribute_get_name <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_text_attribute_get_type</primary></indexterm>atk_text_attribute_get_type <LINK LINKEND="REFSTD.libatk.1.0.2">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>atk_text_attribute_get_value</primary></indexterm>atk_text_attribute_get_value <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_text_attribute_register</primary></indexterm>atk_text_attribute_register <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK 1.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>atk_text_boundary_get_type</primary></indexterm>atk_text_boundary_get_type <LINK LINKEND="REFSTD.libatk.1.0.2">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_text_clip_type_get_type</primary></indexterm>atk_text_clip_type_get_type <LINK LINKEND="REFSTD.libatk.1.0.2">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>atk_text_free_ranges</primary></indexterm>atk_text_free_ranges <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_text_get_bounded_ranges</primary></indexterm>atk_text_get_bounded_ranges <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK 1.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>atk_text_get_caret_offset</primary></indexterm>atk_text_get_caret_offset <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_text_get_character_at_offset</primary></indexterm>atk_text_get_character_at_offset <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK 1.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>atk_text_get_character_count</primary></indexterm>atk_text_get_character_count <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_text_get_character_extents</primary></indexterm>atk_text_get_character_extents <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK 1.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>atk_text_get_default_attributes</primary></indexterm>atk_text_get_default_attributes <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_text_get_n_selections</primary></indexterm>atk_text_get_n_selections <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK 1.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>atk_text_get_offset_at_point</primary></indexterm>atk_text_get_offset_at_point <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_text_get_range_extents</primary></indexterm>atk_text_get_range_extents <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK 1.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>atk_text_get_run_attributes</primary></indexterm>atk_text_get_run_attributes <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_text_get_selection</primary></indexterm>atk_text_get_selection <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK 1.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>atk_text_get_text</primary></indexterm>atk_text_get_text <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_text_get_text_after_offset</primary></indexterm>atk_text_get_text_after_offset <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK 1.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>atk_text_get_text_at_offset</primary></indexterm>atk_text_get_text_at_offset <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_text_get_text_before_offset</primary></indexterm>atk_text_get_text_before_offset <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK 1.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>atk_text_get_type</primary></indexterm>atk_text_get_type <LINK LINKEND="REFSTD.libatk.1.0.2">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_text_remove_selection</primary></indexterm>atk_text_remove_selection <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK 1.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>atk_text_set_caret_offset</primary></indexterm>atk_text_set_caret_offset <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_text_set_selection</primary></indexterm>atk_text_set_selection <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK 1.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>atk_util_get_type</primary></indexterm>atk_util_get_type <LINK LINKEND="REFSTD.libatk.1.0.2">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_value_get_current_value</primary></indexterm>atk_value_get_current_value <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK 1.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>atk_value_get_maximum_value</primary></indexterm>atk_value_get_maximum_value <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_value_get_minimum_value</primary></indexterm>atk_value_get_minimum_value <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK 1.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>atk_value_get_type</primary></indexterm>atk_value_get_type <LINK LINKEND="REFSTD.libatk.1.0.2">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_value_set_current_value</primary></indexterm>atk_value_set_current_value <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK 1.10]</LINK></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>
</SECT2>
</SECT1>
<SECT1 ID=libatk-1.0-ddefs>
<TITLE>Data Definitions for libatk-1.0</TITLE>
<PARA>
This section defines global identifiers and their values that are associated
with interfaces contained in libatk-1.0.
These definitions are organized into groups that
correspond to system headers. This convention is used as a
convenience for the reader, and does not imply the existence
of these headers, or their content.
Where an interface is defined as requiring a particular system header file
all of the data definitions for that system header file presented here shall be in effect.
</PARA>
<PARA>
This section gives data definitions to promote binary application
portability, not to repeat source interface definitions available
elsewhere. System providers and application developers should use this ABI
to supplement - not to replace - source interface definition specifications.
</PARA>
<PARA>
This specification uses the <XREF LINKEND='std.ISOC99'> C Language as the reference programming language, and data definitions are specified in ISO C format. The C language is used here as a convenient notation. Using a C language description of these data objects does not preclude their use by other programming languages.</PARA>
<SECT2>
<TITLE>atk-1.0/atk/atk-enum-types.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define ATK_TYPE_HYPERLINK_STATE_FLAGS	 \
	(atk_hyperlink_state_flags_get_type())
#define ATK_TYPE_COORD_TYPE	(atk_coord_type_get_type())
#define ATK_TYPE_KEY_EVENT_TYPE	(atk_key_event_type_get_type())
#define ATK_TYPE_LAYER	(atk_layer_get_type())
#define ATK_TYPE_RELATION_TYPE	(atk_relation_type_get_type())
#define ATK_TYPE_ROLE	(atk_role_get_type())
#define ATK_TYPE_STATE_TYPE	(atk_state_type_get_type())
#define ATK_TYPE_TEXT_ATTRIBUTE	(atk_text_attribute_get_type())
#define ATK_TYPE_TEXT_BOUNDARY	(atk_text_boundary_get_type())
#define ATK_TYPE_TEXT_CLIP_TYPE	(atk_text_clip_type_get_type())

extern GType atk_state_type_get_type(void);
extern GType atk_role_get_type(void);
extern GType atk_text_boundary_get_type(void);
extern GType atk_relation_type_get_type(void);
extern GType atk_layer_get_type(void);
extern GType atk_hyperlink_state_flags_get_type(void);
extern GType atk_text_clip_type_get_type(void);
extern GType atk_key_event_type_get_type(void);
extern GType atk_coord_type_get_type(void);
extern GType atk_text_attribute_get_type(void);
</SCREEN>
</SECT2>
<SECT2>
<TITLE>atk-1.0/atk/atk.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define _TYPEDEF_ATK_ACTION_
#define _TYPEDEF_ATK_COMPONENT_
#define _TYPEDEF_ATK_DOCUMENT_
#define _TYPEDEF_ATK_EDITABLE_TEXT_
#define _TYPEDEF_ATK_HYPERTEXT_
#define _TYPEDEF_ATK_IMAGE_
#define _TYPEDEF_ATK_SELECTION_
#define _TYPEDEF_ATK_STREAMABLE_CONTENT
#define _TYPEDEF_ATK_TABLE_
#define _TYPEDEF_ATK_TEXT_
#define _TYPEDEF_ATK_UTIL_
#define _TYPEDEF_ATK_VALUE__
#define ATK_TYPE_NO_OP_OBJECT_FACTORY	 \
	(atk_no_op_object_factory_get_type ())
#define ATK_GOBJECT_ACCESSIBLE_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), ATK_TYPE_GOBJECT_ACCESSIBLE, \
	AtkGObjectAccessibleClass))
#define ATK_HYPERLINK_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), ATK_TYPE_HYPERLINK, \
	AtkHyperlinkClass))
#define ATK_NO_OP_OBJECT_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), ATK_TYPE_NO_OP_OBJECT, \
	AtkNoOpObjectClass))
#define ATK_NO_OP_OBJECT_FACTORY_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), ATK_TYPE_NO_OP_OBJECT_FACTORY, \
	AtkNoOpObjectFactoryClass))
#define ATK_OBJECT_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), ATK_TYPE_OBJECT, AtkObjectClass))
#define ATK_OBJECT_FACTORY_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), ATK_TYPE_OBJECT_FACTORY, \
	AtkObjectFactoryClass))
#define ATK_REGISTRY_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), ATK_TYPE_REGISTRY, \
	AtkRegistryClass))
#define ATK_RELATION_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), ATK_TYPE_RELATION, \
	AtkRelationClass))
#define ATK_RELATION_SET_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), ATK_TYPE_RELATION_SET, \
	AtkRelationSetClass))
#define ATK_STATE_SET_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), ATK_TYPE_STATE_SET, \
	AtkStateSetClass))
#define ATK_UTIL_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), ATK_TYPE_UTIL, AtkUtilClass))
#define ATK_IS_GOBJECT_ACCESSIBLE_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), ATK_TYPE_GOBJECT_ACCESSIBLE))
#define ATK_IS_HYPERLINK_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), ATK_TYPE_HYPERLINK))
#define ATK_IS_NO_OP_OBJECT_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), ATK_TYPE_NO_OP_OBJECT))
#define ATK_IS_NO_OP_OBJECT_FACTORY_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), ATK_TYPE_NO_OP_OBJECT_FACTORY))
#define ATK_IS_OBJECT_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), ATK_TYPE_OBJECT))
#define ATK_IS_OBJECT_FACTORY_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), ATK_TYPE_OBJECT_FACTORY))
#define ATK_IS_REGISTRY_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), ATK_TYPE_REGISTRY))
#define ATK_IS_RELATION_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), ATK_TYPE_RELATION))
#define ATK_IS_RELATION_SET_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), ATK_TYPE_RELATION_SET))
#define ATK_IS_STATE_SET_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), ATK_TYPE_STATE_SET))
#define ATK_IS_UTIL_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), ATK_TYPE_UTIL))
#define ATK_GOBJECT_ACCESSIBLE(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), ATK_TYPE_GOBJECT_ACCESSIBLE, \
	AtkGObjectAccessible))
#define ATK_HYPERLINK(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), ATK_TYPE_HYPERLINK, \
	AtkHyperlink))
#define ATK_NO_OP_OBJECT(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), ATK_TYPE_NO_OP_OBJECT, \
	AtkNoOpObject))
#define ATK_NO_OP_OBJECT_FACTORY(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), ATK_TYPE_NO_OP_OBJECT_FACTORY, \
	AtkNoOpObjectFactory))
#define ATK_OBJECT(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), ATK_TYPE_OBJECT, AtkObject))
#define ATK_OBJECT_FACTORY(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), ATK_TYPE_OBJECT_FACTORY, \
	AtkObjectFactory))
#define ATK_REGISTRY(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), ATK_TYPE_REGISTRY, AtkRegistry))
#define ATK_RELATION(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), ATK_TYPE_RELATION, AtkRelation))
#define ATK_RELATION_SET(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), ATK_TYPE_RELATION_SET, \
	AtkRelationSet))
#define ATK_STATE_SET(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), ATK_TYPE_STATE_SET, AtkStateSet))
#define ATK_IS_GOBJECT_ACCESSIBLE(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), ATK_TYPE_GOBJECT_ACCESSIBLE))
#define ATK_IS_HYPERLINK(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), ATK_TYPE_HYPERLINK))
#define ATK_IS_NO_OP_OBJECT(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), ATK_TYPE_NO_OP_OBJECT))
#define ATK_IS_NO_OP_OBJECT_FACTORY(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), ATK_TYPE_NO_OP_OBJECT_FACTORY))
#define ATK_IS_OBJECT(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), ATK_TYPE_OBJECT))
#define ATK_IS_OBJECT_FACTORY(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), ATK_TYPE_OBJECT_FACTORY))
#define ATK_IS_REGISTRY(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), ATK_TYPE_REGISTRY))
#define ATK_IS_RELATION(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), ATK_TYPE_RELATION))
#define ATK_IS_RELATION_SET(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), ATK_TYPE_RELATION_SET))
#define ATK_IS_STATE_SET(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), ATK_TYPE_STATE_SET))
#define ATK_NO_OP_OBJECT_FACTORY_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ( (obj), ATK_TYPE_NO_OP_OBJECT_FACTORY, \
	AtkNoOpObjectFactoryClass))
#define ATK_GOBJECT_ACCESSIBLE_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), ATK_TYPE_GOBJECT_ACCESSIBLE, \
	AtkGObjectAccessibleClass))
#define ATK_HYPERLINK_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), ATK_TYPE_HYPERLINK, \
	AtkHyperlinkClass))
#define ATK_NO_OP_OBJECT_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), ATK_TYPE_NO_OP_OBJECT, \
	AtkNoOpObjectClass))
#define ATK_OBJECT_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), ATK_TYPE_OBJECT, AtkObjectClass))
#define ATK_OBJECT_FACTORY_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), ATK_TYPE_OBJECT_FACTORY, \
	AtkObjectFactoryClass))
#define ATK_REGISTRY_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), ATK_TYPE_REGISTRY, \
	AtkRegistryClass))
#define ATK_RELATION_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), ATK_TYPE_RELATION, \
	AtkRelationClass))
#define ATK_RELATION_SET_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), ATK_TYPE_RELATION_SET, \
	AtkRelationSetClass))
#define ATK_STATE_SET_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), ATK_TYPE_STATE_SET, \
	AtkStateSetClass))
#define ATK_UTIL_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), ATK_TYPE_UTIL, AtkUtilClass))
#define ATK_ACTION_GET_IFACE(obj)	 \
	(G_TYPE_INSTANCE_GET_INTERFACE ((obj), ATK_TYPE_ACTION, \
	AtkActionIface))
#define ATK_COMPONENT_GET_IFACE(obj)	 \
	(G_TYPE_INSTANCE_GET_INTERFACE ((obj), ATK_TYPE_COMPONENT, \
	AtkComponentIface))
#define ATK_DOCUMENT_GET_IFACE(obj)	 \
	(G_TYPE_INSTANCE_GET_INTERFACE ((obj), ATK_TYPE_DOCUMENT, \
	AtkDocumentIface))
#define ATK_EDITABLE_TEXT_GET_IFACE(obj)	 \
	(G_TYPE_INSTANCE_GET_INTERFACE ((obj), ATK_TYPE_EDITABLE_TEXT, \
	AtkEditableTextIface))
#define ATK_HYPERTEXT_GET_IFACE(obj)	 \
	(G_TYPE_INSTANCE_GET_INTERFACE ((obj), ATK_TYPE_HYPERTEXT, \
	AtkHypertextIface))
#define ATK_IMAGE_GET_IFACE(obj)	 \
	(G_TYPE_INSTANCE_GET_INTERFACE ((obj), ATK_TYPE_IMAGE, \
	AtkImageIface))
#define ATK_IMPLEMENTOR_GET_IFACE(obj)	 \
	(G_TYPE_INSTANCE_GET_INTERFACE ((obj), ATK_TYPE_IMPLEMENTOR, \
	AtkImplementorIface))
#define ATK_SELECTION_GET_IFACE(obj)	 \
	(G_TYPE_INSTANCE_GET_INTERFACE ((obj), ATK_TYPE_SELECTION, \
	AtkSelectionIface))
#define ATK_STREAMABLE_CONTENT_GET_IFACE(obj)	 \
	(G_TYPE_INSTANCE_GET_INTERFACE ((obj), ATK_TYPE_STREAMABLE_CONTENT, \
	AtkStreamableContentIface))
#define ATK_TABLE_GET_IFACE(obj)	 \
	(G_TYPE_INSTANCE_GET_INTERFACE ((obj), ATK_TYPE_TABLE, \
	AtkTableIface))
#define ATK_TEXT_GET_IFACE(obj)	 \
	(G_TYPE_INSTANCE_GET_INTERFACE ((obj), ATK_TYPE_TEXT, AtkTextIface))
#define ATK_VALUE_GET_IFACE(obj)	 \
	(G_TYPE_INSTANCE_GET_INTERFACE ((obj), ATK_TYPE_VALUE, \
	AtkValueIface))
#define ATK_ACTION(obj)	 \
	G_TYPE_CHECK_INSTANCE_CAST ((obj), ATK_TYPE_ACTION, AtkAction)
#define ATK_COMPONENT(obj)	 \
	G_TYPE_CHECK_INSTANCE_CAST ((obj), ATK_TYPE_COMPONENT, AtkComponent)
#define ATK_DOCUMENT(obj)	 \
	G_TYPE_CHECK_INSTANCE_CAST ((obj), ATK_TYPE_DOCUMENT, AtkDocument)
#define ATK_EDITABLE_TEXT(obj)	 \
	G_TYPE_CHECK_INSTANCE_CAST ((obj), ATK_TYPE_EDITABLE_TEXT, \
	AtkEditableText)
#define ATK_HYPERTEXT(obj)	 \
	G_TYPE_CHECK_INSTANCE_CAST ((obj), ATK_TYPE_HYPERTEXT, AtkHypertext)
#define ATK_IMAGE(obj)	 \
	G_TYPE_CHECK_INSTANCE_CAST ((obj), ATK_TYPE_IMAGE, AtkImage)
#define ATK_IMPLEMENTOR(obj)	 \
	G_TYPE_CHECK_INSTANCE_CAST ((obj), ATK_TYPE_IMPLEMENTOR, \
	AtkImplementor)
#define ATK_SELECTION(obj)	 \
	G_TYPE_CHECK_INSTANCE_CAST ((obj), ATK_TYPE_SELECTION, AtkSelection)
#define ATK_STREAMABLE_CONTENT(obj)	 \
	G_TYPE_CHECK_INSTANCE_CAST ((obj), ATK_TYPE_STREAMABLE_CONTENT, \
	AtkStreamableContent)
#define ATK_TABLE(obj)	 \
	G_TYPE_CHECK_INSTANCE_CAST ((obj), ATK_TYPE_TABLE, AtkTable)
#define ATK_TEXT(obj)	 \
	G_TYPE_CHECK_INSTANCE_CAST ((obj), ATK_TYPE_TEXT, AtkText)
#define ATK_UTIL(obj)	 \
	G_TYPE_CHECK_INSTANCE_CAST ((obj), ATK_TYPE_UTIL, AtkUtil)
#define ATK_VALUE(obj)	 \
	G_TYPE_CHECK_INSTANCE_CAST ((obj), ATK_TYPE_VALUE, AtkValue)
#define ATK_IS_ACTION(obj)	 \
	G_TYPE_CHECK_INSTANCE_TYPE ((obj), ATK_TYPE_ACTION)
#define ATK_IS_COMPONENT(obj)	 \
	G_TYPE_CHECK_INSTANCE_TYPE ((obj), ATK_TYPE_COMPONENT)
#define ATK_IS_DOCUMENT(obj)	 \
	G_TYPE_CHECK_INSTANCE_TYPE ((obj), ATK_TYPE_DOCUMENT)
#define ATK_IS_EDITABLE_TEXT(obj)	 \
	G_TYPE_CHECK_INSTANCE_TYPE ((obj), ATK_TYPE_EDITABLE_TEXT)
#define ATK_IS_HYPERTEXT(obj)	 \
	G_TYPE_CHECK_INSTANCE_TYPE ((obj), ATK_TYPE_HYPERTEXT)
#define ATK_IS_IMAGE(obj)	 \
	G_TYPE_CHECK_INSTANCE_TYPE ((obj), ATK_TYPE_IMAGE)
#define ATK_IS_IMPLEMENTOR(obj)	 \
	G_TYPE_CHECK_INSTANCE_TYPE ((obj), ATK_TYPE_IMPLEMENTOR)
#define ATK_IS_SELECTION(obj)	 \
	G_TYPE_CHECK_INSTANCE_TYPE ((obj), ATK_TYPE_SELECTION)
#define ATK_IS_STREAMABLE_CONTENT(obj)	 \
	G_TYPE_CHECK_INSTANCE_TYPE ((obj), ATK_TYPE_STREAMABLE_CONTENT)
#define ATK_IS_TABLE(obj)	 \
	G_TYPE_CHECK_INSTANCE_TYPE ((obj), ATK_TYPE_TABLE)
#define ATK_IS_VALUE(obj)	 \
	G_TYPE_CHECK_INSTANCE_TYPE ((obj), ATK_TYPE_VALUE)
#define ATK_TYPE_ACTION	(atk_action_get_type ())
#define ATK_TYPE_COMPONENT	(atk_component_get_type ())
#define ATK_TYPE_DOCUMENT	(atk_document_get_type ())
#define ATK_TYPE_EDITABLE_TEXT	(atk_editable_text_get_type ())
#define ATK_TYPE_GOBJECT_ACCESSIBLE	(atk_gobject_accessible_get_type ())
#define ATK_TYPE_HYPERLINK	(atk_hyperlink_get_type ())
#define ATK_TYPE_HYPERTEXT	(atk_hypertext_get_type ())
#define ATK_TYPE_IMAGE	(atk_image_get_type ())
#define ATK_TYPE_IMPLEMENTOR	(atk_implementor_get_type ())
#define ATK_TYPE_NO_OP_OBJECT	(atk_no_op_object_get_type ())
#define ATK_TYPE_OBJECT_FACTORY	(atk_object_factory_get_type ())
#define ATK_TYPE_OBJECT	(atk_object_get_type ())
#define ATK_TYPE_RECTANGLE	(atk_rectangle_get_type ())
#define ATK_TYPE_REGISTRY	(atk_registry_get_type ())
#define ATK_TYPE_RELATION	(atk_relation_get_type ())
#define ATK_TYPE_RELATION_SET	(atk_relation_set_get_type ())
#define ATK_TYPE_SELECTION	(atk_selection_get_type ())
#define ATK_TYPE_STATE_SET	(atk_state_set_get_type ())
#define ATK_TYPE_STREAMABLE_CONTENT	(atk_streamable_content_get_type ())
#define ATK_TYPE_TABLE	(atk_table_get_type ())
#define ATK_TYPE_TEXT	(atk_text_get_type ())
#define ATK_TYPE_UTIL	(atk_util_get_type ())
#define ATK_TYPE_VALUE	(atk_value_get_type ())
#define ATK_IS_TEXT(obj)	G_TYPE_CHECK_INSTANCE_TYPE ((obj), ATK_TYPE_TEXT)
#define ATK_IS_UTIL(obj)	G_TYPE_CHECK_INSTANCE_TYPE ((obj), ATK_TYPE_UTIL)

typedef struct _AtkText AtkText;
typedef struct _AtkObject {
    GObject parent;
    gchar *description;
    gchar *name;
    AtkObject *accessible_parent;
    AtkRole role;
    AtkRelationSet *relation_set;
    AtkLayer layer;
} AtkObject;
typedef enum {
    ATK_ROLE_INVALID = 0,
    ATK_ROLE_ACCEL_LABEL = 1,
    ATK_ROLE_ALERT = 2,
    ATK_ROLE_ANIMATION = 3,
    ATK_ROLE_ARROW = 4,
    ATK_ROLE_CALENDAR = 5,
    ATK_ROLE_CANVAS = 6,
    ATK_ROLE_CHECK_BOX = 7,
    ATK_ROLE_CHECK_MENU_ITEM = 8,
    ATK_ROLE_COLOR_CHOOSER = 9,
    ATK_ROLE_COLUMN_HEADER = 10,
    ATK_ROLE_COMBO_BOX = 11,
    ATK_ROLE_DATE_EDITOR = 12,
    ATK_ROLE_DESKTOP_ICON = 13,
    ATK_ROLE_DESKTOP_FRAME = 14,
    ATK_ROLE_DIAL = 15,
    ATK_ROLE_DIALOG = 16,
    ATK_ROLE_DIRECTORY_PANE = 17,
    ATK_ROLE_DRAWING_AREA = 18,
    ATK_ROLE_FILE_CHOOSER = 19,
    ATK_ROLE_FILLER = 20,
    ATK_ROLE_FONT_CHOOSER = 21,
    ATK_ROLE_FRAME = 22,
    ATK_ROLE_GLASS_PANE = 23,
    ATK_ROLE_HTML_CONTAINER = 24,
    ATK_ROLE_ICON = 25,
    ATK_ROLE_IMAGE = 26,
    ATK_ROLE_INTERNAL_FRAME = 27,
    ATK_ROLE_LABEL = 28,
    ATK_ROLE_LAYERED_PANE = 29,
    ATK_ROLE_LIST = 30,
    ATK_ROLE_LIST_ITEM = 31,
    ATK_ROLE_MENU = 32,
    ATK_ROLE_MENU_BAR = 33,
    ATK_ROLE_MENU_ITEM = 34,
    ATK_ROLE_OPTION_PANE = 35,
    ATK_ROLE_PAGE_TAB = 36,
    ATK_ROLE_PAGE_TAB_LIST = 37,
    ATK_ROLE_PANEL = 38,
    ATK_ROLE_PASSWORD_TEXT = 39,
    ATK_ROLE_POPUP_MENU = 40,
    ATK_ROLE_PROGRESS_BAR = 41,
    ATK_ROLE_PUSH_BUTTON = 42,
    ATK_ROLE_RADIO_BUTTON = 43,
    ATK_ROLE_RADIO_MENU_ITEM = 44,
    ATK_ROLE_ROOT_PANE = 45,
    ATK_ROLE_ROW_HEADER = 46,
    ATK_ROLE_SCROLL_BAR = 47,
    ATK_ROLE_SCROLL_PANE = 48,
    ATK_ROLE_SEPARATOR = 49,
    ATK_ROLE_SLIDER = 50,
    ATK_ROLE_SPLIT_PANE = 51,
    ATK_ROLE_SPIN_BUTTON = 52,
    ATK_ROLE_STATUSBAR = 53,
    ATK_ROLE_TABLE = 54,
    ATK_ROLE_TABLE_CELL = 55,
    ATK_ROLE_TABLE_COLUMN_HEADER = 56,
    ATK_ROLE_TABLE_ROW_HEADER = 57,
    ATK_ROLE_TEAR_OFF_MENU_ITEM = 58,
    ATK_ROLE_TERMINAL = 59,
    ATK_ROLE_TEXT = 60,
    ATK_ROLE_TOGGLE_BUTTON = 61,
    ATK_ROLE_TOOL_BAR = 62,
    ATK_ROLE_TOOL_TIP = 63,
    ATK_ROLE_TREE = 64,
    ATK_ROLE_TREE_TABLE = 65,
    ATK_ROLE_UNKNOWN = 66,
    ATK_ROLE_VIEWPORT = 67,
    ATK_ROLE_WINDOW = 68,
    ATK_ROLE_HEADER = 69,
    ATK_ROLE_FOOTER = 70,
    ATK_ROLE_PARAGRAPH = 71,
    ATK_ROLE_RULER = 72,
    ATK_ROLE_APPLICATION = 73,
    ATK_ROLE_AUTOCOMPLETE = 74,
    ATK_ROLE_EDITBAR = 75,
    ATK_ROLE_EMBEDDED = 76,
    ATK_ROLE_LAST_DEFINED = 77
} AtkRole;
typedef struct _AtkRelationSet {
    GObject parent;
    GPtrArray *relations;
} AtkRelationSet;
typedef enum {
    ATK_LAYER_INVALID = 0,
    ATK_LAYER_BACKGROUND = 1,
    ATK_LAYER_CANVAS = 2,
    ATK_LAYER_WIDGET = 3,
    ATK_LAYER_MDI = 4,
    ATK_LAYER_POPUP = 5,
    ATK_LAYER_OVERLAY = 6,
    ATK_LAYER_WINDOW = 7
} AtkLayer;
typedef struct _AtkPropertyValues {
    const gchar *property_name;
    GValue old_value;
    GValue new_value;
} AtkPropertyValues;
typedef void (*AtkPropertyChangeHandler) (AtkObject *,
					  AtkPropertyValues *);
typedef struct _AtkImage AtkImage;
typedef enum {
    ATK_XY_SCREEN = 0,
    ATK_XY_WINDOW = 1
} AtkCoordType;
typedef enum {
    ATK_RELATION_NULL = 0,
    ATK_RELATION_CONTROLLED_BY = 1,
    ATK_RELATION_CONTROLLER_FOR = 2,
    ATK_RELATION_LABEL_FOR = 3,
    ATK_RELATION_LABELLED_BY = 4,
    ATK_RELATION_MEMBER_OF = 5,
    ATK_RELATION_NODE_CHILD_OF = 6,
    ATK_RELATION_FLOWS_TO = 7,
    ATK_RELATION_FLOWS_FROM = 8,
    ATK_RELATION_SUBWINDOW_OF = 9,
    ATK_RELATION_EMBEDS = 10,
    ATK_RELATION_EMBEDDED_BY = 11,
    ATK_RELATION_POPUP_FOR = 12,
    ATK_RELATION_PARENT_WINDOW_OF = 13,
    ATK_RELATION_LAST_DEFINED = 14
} AtkRelationType;
typedef struct _AtkRelation {
    GObject parent;
    GPtrArray *target;
    AtkRelationType relationship;
} AtkRelation;
typedef struct _AtkDocument AtkDocument;
typedef struct _AtkTable AtkTable;
typedef struct _AtkHyperlink {
    GObject parent;
} AtkHyperlink;
typedef struct _AtkStateSet {
    GObject parent;
} AtkStateSet;
typedef struct _AtkObjectFactory {
    GObject parent;
} AtkObjectFactory;
typedef struct _AtkRegistry {
    GObject parent;
    GHashTable *factory_type_registry;
    GHashTable *factory_singleton_cache;
} AtkRegistry;
typedef struct _AtkEditableText AtkEditableText;
typedef GSList AtkAttributeSet;
typedef struct _AtkHypertext AtkHypertext;
typedef struct _AtkSelection AtkSelection;
typedef struct _AtkAction AtkAction;
typedef struct _AtkComponent AtkComponent;
typedef struct _AtkValue AtkValue;
typedef struct _AtkStreamableContent AtkStreamableContent;
typedef void (*AtkEventListenerInit) (void);
typedef enum {
    ATK_TEXT_ATTR_INVALID = 0,
    ATK_TEXT_ATTR_LEFT_MARGIN = 1,
    ATK_TEXT_ATTR_RIGHT_MARGIN = 2,
    ATK_TEXT_ATTR_INDENT = 3,
    ATK_TEXT_ATTR_INVISIBLE = 4,
    ATK_TEXT_ATTR_EDITABLE = 5,
    ATK_TEXT_ATTR_PIXELS_ABOVE_LINES = 6,
    ATK_TEXT_ATTR_PIXELS_BELOW_LINES = 7,
    ATK_TEXT_ATTR_PIXELS_INSIDE_WRAP = 8,
    ATK_TEXT_ATTR_BG_FULL_HEIGHT = 9,
    ATK_TEXT_ATTR_RISE = 10,
    ATK_TEXT_ATTR_UNDERLINE = 11,
    ATK_TEXT_ATTR_STRIKETHROUGH = 12,
    ATK_TEXT_ATTR_SIZE = 13,
    ATK_TEXT_ATTR_SCALE = 14,
    ATK_TEXT_ATTR_WEIGHT = 15,
    ATK_TEXT_ATTR_LANGUAGE = 16,
    ATK_TEXT_ATTR_FAMILY_NAME = 17,
    ATK_TEXT_ATTR_BG_COLOR = 18,
    ATK_TEXT_ATTR_FG_COLOR = 19,
    ATK_TEXT_ATTR_BG_STIPPLE = 20,
    ATK_TEXT_ATTR_FG_STIPPLE = 21,
    ATK_TEXT_ATTR_WRAP_MODE = 22,
    ATK_TEXT_ATTR_DIRECTION = 23,
    ATK_TEXT_ATTR_JUSTIFICATION = 24,
    ATK_TEXT_ATTR_STRETCH = 25,
    ATK_TEXT_ATTR_VARIANT = 26,
    ATK_TEXT_ATTR_STYLE = 27,
    ATK_TEXT_ATTR_LAST_DEFINED = 28
} AtkTextAttribute;
typedef enum {
    ATK_TEXT_BOUNDARY_CHAR = 0,
    ATK_TEXT_BOUNDARY_WORD_START = 1,
    ATK_TEXT_BOUNDARY_WORD_END = 2,
    ATK_TEXT_BOUNDARY_SENTENCE_START = 3,
    ATK_TEXT_BOUNDARY_SENTENCE_END = 4,
    ATK_TEXT_BOUNDARY_LINE_START = 5,
    ATK_TEXT_BOUNDARY_LINE_END = 6
} AtkTextBoundary;
typedef enum {
    ATK_STATE_INVALID = 0,
    ATK_STATE_ACTIVE = 1,
    ATK_STATE_ARMED = 2,
    ATK_STATE_BUSY = 3,
    ATK_STATE_CHECKED = 4,
    ATK_STATE_DEFUNCT = 5,
    ATK_STATE_EDITABLE = 6,
    ATK_STATE_ENABLED = 7,
    ATK_STATE_EXPANDABLE = 8,
    ATK_STATE_EXPANDED = 9,
    ATK_STATE_FOCUSABLE = 10,
    ATK_STATE_FOCUSED = 11,
    ATK_STATE_HORIZONTAL = 12,
    ATK_STATE_ICONIFIED = 13,
    ATK_STATE_MODAL = 14,
    ATK_STATE_MULTI_LINE = 15,
    ATK_STATE_MULTISELECTABLE = 16,
    ATK_STATE_OPAQUE = 17,
    ATK_STATE_PRESSED = 18,
    ATK_STATE_RESIZABLE = 19,
    ATK_STATE_SELECTABLE = 20,
    ATK_STATE_SELECTED = 21,
    ATK_STATE_SENSITIVE = 22,
    ATK_STATE_SHOWING = 23,
    ATK_STATE_SINGLE_LINE = 24,
    ATK_STATE_STALE = 25,
    ATK_STATE_TRANSIENT = 26,
    ATK_STATE_VERTICAL = 27,
    ATK_STATE_VISIBLE = 28,
    ATK_STATE_MANAGES_DESCENDANTS = 29,
    ATK_STATE_INDETERMINATE = 30,
    ATK_STATE_TRUNCATED = 31,
    ATK_STATE_LAST_DEFINED = 32
} AtkStateType;
typedef struct _AtkGObjectAccessible {
    AtkObject parent;
} AtkGObjectAccessible;
typedef guint64 AtkState;
typedef void (*AtkFocusHandler) (AtkObject *, gboolean);
typedef struct _AtkKeyEventStruct {
    gint type;
    guint state;
    guint keyval;
    gint length;
    gchar *string;
    guint16 keycode;
    guint32 timestamp;
} AtkKeyEventStruct;
typedef gint(*AtkKeySnoopFunc) (AtkKeyEventStruct *, gpointer);
typedef struct _AtkTextRectangle {
    gint x;
    gint y;
    gint width;
    gint height;
} AtkTextRectangle;
typedef struct _AtkTextRange {
    AtkTextRectangle bounds;
    gint start_offset;
    gint end_offset;
    gchar *content;
} AtkTextRange;
typedef enum {
    ATK_TEXT_CLIP_NONE = 0,
    ATK_TEXT_CLIP_MIN = 1,
    ATK_TEXT_CLIP_MAX = 2,
    ATK_TEXT_CLIP_BOTH = 3
} AtkTextClipType;
typedef struct _AtkImplementor AtkImplementor;
typedef void (*AtkEventListener) (AtkObject *);
typedef gboolean(*AtkFunction) (gpointer);
typedef struct _AtkImplementorIface {
    GTypeInterface parent;
    AtkObject *(*ref_accessible) (AtkImplementor *);
} AtkImplementorIface;
typedef struct _AtkRegistryClass {
    GObjectClass parent_class;
} AtkRegistryClass;
typedef struct _AtkHypertextIface {
    GTypeInterface parent;
    AtkHyperlink *(*get_link) (AtkHypertext *, gint);
     gint(*get_n_links) (AtkHypertext *);
     gint(*get_link_index) (AtkHypertext *, gint);
    void (*link_selected) (AtkHypertext *, gint);
    AtkFunction pad1;
    AtkFunction pad2;
    AtkFunction pad3;
} AtkHypertextIface;
typedef struct _AtkStreamableContentIface {
    GTypeInterface parent;
     gint(*get_n_mime_types) (AtkStreamableContent *);
    const gchar *(*get_mime_type) (AtkStreamableContent *, gint);
    GIOChannel *(*get_stream) (AtkStreamableContent *, const gchar *);
    AtkFunction pad1;
    AtkFunction pad2;
    AtkFunction pad3;
    AtkFunction pad4;
} AtkStreamableContentIface;
typedef struct _AtkRectangle {
    gint x;
    gint y;
    gint width;
    gint height;
} AtkRectangle;
typedef struct _AtkStateSetClass {
    GObjectClass parent;
} AtkStateSetClass;
typedef struct _AtkAttribute {
    gchar *name;
    gchar *value;
} AtkAttribute;
typedef struct _AtkObjectClass {
    GObjectClass parent;
    const gchar *(*get_name) (AtkObject *);
    const gchar *(*get_description) (AtkObject *);
    AtkObject *(*get_parent) (AtkObject *);
     gint(*get_n_children) (AtkObject *);
    AtkObject *(*ref_child) (AtkObject *, gint);
     gint(*get_index_in_parent) (AtkObject *);
    AtkRelationSet *(*ref_relation_set) (AtkObject *);
     AtkRole(*get_role) (AtkObject *);
     AtkLayer(*get_layer) (AtkObject *);
     gint(*get_mdi_zorder) (AtkObject *);
    AtkStateSet *(*ref_state_set) (AtkObject *);
    void (*set_name) (AtkObject *, const gchar *);
    void (*set_description) (AtkObject *, const gchar *);
    void (*set_parent) (AtkObject *, AtkObject *);
    void (*set_role) (AtkObject *, AtkRole);
     guint(*connect_property_change_handler) (AtkObject *,
					      AtkPropertyChangeHandler *);
    void (*remove_property_change_handler) (AtkObject *, guint);
    void (*initialize) (AtkObject *, gpointer);
    void (*children_changed) (AtkObject *, guint, gpointer);
    void (*focus_event) (AtkObject *, gboolean);
    void (*property_change) (AtkObject *, AtkPropertyValues *);
    void (*state_change) (AtkObject *, const gchar *, gboolean);
    void (*visible_data_changed) (AtkObject *);
    void (*active_descendant_changed) (AtkObject *, gpointer *);
    AtkFunction pad1;
    AtkFunction pad2;
    AtkFunction pad3;
} AtkObjectClass;
typedef struct _AtkGObjectAccessibleClass {
    AtkObjectClass parent_class;
    AtkFunction pad1;
    AtkFunction pad2;
} AtkGObjectAccessibleClass;
typedef struct _AtkObjectFactoryClass {
    GObjectClass parent_class;
    AtkObject *(*create_accessible) (GObject *);
    void (*invalidate) (AtkObjectFactory *);
     GType(*get_accessible_type) (void);
    AtkFunction pad1;
    AtkFunction pad2;
} AtkObjectFactoryClass;
typedef struct _AtkNoOpObjectFactoryClass {
    AtkObjectFactoryClass parent_class;
} AtkNoOpObjectFactoryClass;
typedef struct _AtkActionIface {
    GTypeInterface parent;
     gboolean(*do_action) (AtkAction *, gint);
     gint(*get_n_actions) (AtkAction *);
    const gchar *(*get_description) (AtkAction *, gint);
    const gchar *(*get_name) (AtkAction *, gint);
    const gchar *(*get_keybinding) (AtkAction *, gint);
     gboolean(*set_description) (AtkAction *, gint, const gchar *);
    const gchar *(*get_localized_name) (AtkAction *, gint);
    AtkFunction pad2;
} AtkActionIface;
typedef struct _AtkTableIface {
    GTypeInterface parent;
    AtkObject *(*ref_at) (AtkTable *, gint, gint);
     gint(*get_index_at) (AtkTable *, gint, gint);
     gint(*get_column_at_index) (AtkTable *, gint);
     gint(*get_row_at_index) (AtkTable *, gint);
     gint(*get_n_columns) (AtkTable *);
     gint(*get_n_rows) (AtkTable *);
     gint(*get_column_extent_at) (AtkTable *, gint, gint);
     gint(*get_row_extent_at) (AtkTable *, gint, gint);
    AtkObject *(*get_caption) (AtkTable *);
    const gchar *(*get_column_description) (AtkTable *, gint);
    AtkObject *(*get_column_header) (AtkTable *, gint);
    const gchar *(*get_row_description) (AtkTable *, gint);
    AtkObject *(*get_row_header) (AtkTable *, gint);
    AtkObject *(*get_summary) (AtkTable *);
    void (*set_caption) (AtkTable *, AtkObject *);
    void (*set_column_description) (AtkTable *, gint, const gchar *);
    void (*set_column_header) (AtkTable *, gint, AtkObject *);
    void (*set_row_description) (AtkTable *, gint, const gchar *);
    void (*set_row_header) (AtkTable *, gint, AtkObject *);
    void (*set_summary) (AtkTable *, AtkObject *);
     gint(*get_selected_columns) (AtkTable *, gint * *);
     gint(*get_selected_rows) (AtkTable *, gint * *);
     gboolean(*is_column_selected) (AtkTable *, gint);
     gboolean(*is_row_selected) (AtkTable *, gint);
     gboolean(*is_selected) (AtkTable *, gint, gint);
     gboolean(*add_row_selection) (AtkTable *, gint);
     gboolean(*remove_row_selection) (AtkTable *, gint);
     gboolean(*add_column_selection) (AtkTable *, gint);
     gboolean(*remove_column_selection) (AtkTable *, gint);
    void (*row_inserted) (AtkTable *, gint, gint);
    void (*column_inserted) (AtkTable *, gint, gint);
    void (*row_deleted) (AtkTable *, gint, gint);
    void (*column_deleted) (AtkTable *, gint, gint);
    void (*row_reordered) (AtkTable *);
    void (*column_reordered) (AtkTable *);
    void (*model_changed) (AtkTable *);
    AtkFunction pad1;
    AtkFunction pad2;
    AtkFunction pad3;
    AtkFunction pad4;
} AtkTableIface;
typedef struct _AtkValueIface {
    GTypeInterface parent;
    void (*get_current_value) (AtkValue *, GValue *);
    void (*get_maximum_value) (AtkValue *, GValue *);
    void (*get_minimum_value) (AtkValue *, GValue *);
     gboolean(*set_current_value) (AtkValue *, const GValue *);
    AtkFunction pad1;
    AtkFunction pad2;
} AtkValueIface;
typedef struct _AtkRelationClass {
    GObjectClass parent;
} AtkRelationClass;
typedef struct _AtkTextIface {
    GTypeInterface parent;
    gchar *(*get_text) (AtkText *, gint, gint);
    gchar *(*get_text_after_offset) (AtkText *, gint, AtkTextBoundary,
				     gint *, gint *);
    gchar *(*get_text_at_offset) (AtkText *, gint, AtkTextBoundary, gint *,
				  gint *);
     gunichar(*get_character_at_offset) (AtkText *, gint);
    gchar *(*get_text_before_offset) (AtkText *, gint, AtkTextBoundary,
				      gint *, gint *);
     gint(*get_caret_offset) (AtkText *);
    AtkAttributeSet *(*get_run_attributes) (AtkText *, gint, gint *,
					    gint *);
    AtkAttributeSet *(*get_default_attributes) (AtkText *);
    void (*get_character_extents) (AtkText *, gint, gint *, gint *, gint *,
				   gint *, AtkCoordType);
     gint(*get_character_count) (AtkText *);
     gint(*get_offset_at_point) (AtkText *, gint, gint, AtkCoordType);
     gint(*get_n_selections) (AtkText *);
    gchar *(*get_selection) (AtkText *, gint, gint *, gint *);
     gboolean(*add_selection) (AtkText *, gint, gint);
     gboolean(*remove_selection) (AtkText *, gint);
     gboolean(*set_selection) (AtkText *, gint, gint, gint);
     gboolean(*set_caret_offset) (AtkText *, gint);
    void (*text_changed) (AtkText *, gint, gint);
    void (*text_caret_moved) (AtkText *, gint);
    void (*text_selection_changed) (AtkText *);
    void (*text_attributes_changed) (AtkText *);
    void (*get_range_extents) (AtkText *, gint, gint, AtkCoordType,
			       AtkTextRectangle *);
    AtkTextRange **(*get_bounded_ranges) (AtkText *, AtkTextRectangle *,
					  AtkCoordType, AtkTextClipType,
					  AtkTextClipType);
    AtkFunction pad4;
} AtkTextIface;
typedef struct _AtkRelationSetClass {
    GObjectClass parent;
    AtkFunction pad1;
    AtkFunction pad2;
} AtkRelationSetClass;
typedef struct _AtkSelectionIface {
    GTypeInterface parent;
     gboolean(*add_selection) (AtkSelection *, gint);
     gboolean(*clear_selection) (AtkSelection *);
    AtkObject *(*ref_selection) (AtkSelection *, gint);
     gint(*get_selection_count) (AtkSelection *);
     gboolean(*is_child_selected) (AtkSelection *, gint);
     gboolean(*remove_selection) (AtkSelection *, gint);
     gboolean(*select_all_selection) (AtkSelection *);
    void (*selection_changed) (AtkSelection *);
    AtkFunction pad1;
    AtkFunction pad2;
} AtkSelectionIface;
typedef struct _AtkUtilClass {
    GObjectClass parent;
     guint(*add_global_event_listener) (GSignalEmissionHook,
					const gchar *);
    void (*remove_global_event_listener) (guint);
     guint(*add_key_event_listener) (AtkKeySnoopFunc, gpointer);
    void (*remove_key_event_listener) (guint);
    AtkObject *(*get_root) (void);
    const gchar *(*get_toolkit_name) (void);
    const gchar *(*get_toolkit_version) (void);
} AtkUtilClass;
typedef struct _AtkNoOpObjectClass {
    AtkObjectClass parent_class;
} AtkNoOpObjectClass;
typedef struct _AtkImageIface {
    GTypeInterface parent;
    void (*get_image_position) (AtkImage *, gint *, gint *, AtkCoordType);
    const gchar *(*get_image_description) (AtkImage *);
    void (*get_image_size) (AtkImage *, gint *, gint *);
     gboolean(*set_image_description) (AtkImage *, const gchar *);
    AtkFunction pad1;
    AtkFunction pad2;
} AtkImageIface;
typedef struct _AtkComponentIface {
    GTypeInterface parent;
     guint(*add_focus_handler) (AtkComponent *, AtkFocusHandler);
     gboolean(*contains) (AtkComponent *, gint, gint, AtkCoordType);
    AtkObject *(*ref_accessible_at_point) (AtkComponent *, gint, gint,
					   AtkCoordType);
    void (*get_extents) (AtkComponent *, gint *, gint *, gint *, gint *,
			 AtkCoordType);
    void (*get_position) (AtkComponent *, gint *, gint *, AtkCoordType);
    void (*get_size) (AtkComponent *, gint *, gint *);
     gboolean(*grab_focus) (AtkComponent *);
    void (*remove_focus_handler) (AtkComponent *, guint);
     gboolean(*set_extents) (AtkComponent *, gint, gint, gint, gint,
			     AtkCoordType);
     gboolean(*set_position) (AtkComponent *, gint, gint, AtkCoordType);
     gboolean(*set_size) (AtkComponent *, gint, gint);
     AtkLayer(*get_layer) (AtkComponent *);
     gint(*get_mdi_zorder) (AtkComponent *);
    void (*bounds_changed) (AtkComponent *, AtkRectangle *);
    AtkFunction pad2;
} AtkComponentIface;
typedef struct _AtkEditableTextIface {
    GTypeInterface parent_interface;
     gboolean(*set_run_attributes) (AtkEditableText *, AtkAttributeSet *,
				    gint, gint);
    void (*set_text_contents) (AtkEditableText *, const gchar *);
    void (*insert_text) (AtkEditableText *, const gchar *, gint, gint *);
    void (*copy_text) (AtkEditableText *, gint, gint);
    void (*cut_text) (AtkEditableText *, gint, gint);
    void (*delete_text) (AtkEditableText *, gint, gint);
    void (*paste_text) (AtkEditableText *, gint);
    AtkFunction pad1;
    AtkFunction pad2;
} AtkEditableTextIface;
typedef struct _AtkDocumentIface {
    GTypeInterface parent;
    const gchar *(*get_document_type) (AtkDocument *);
     gpointer(*get_document) (AtkDocument *);
    AtkFunction pad1;
    AtkFunction pad2;
    AtkFunction pad3;
    AtkFunction pad4;
    AtkFunction pad5;
    AtkFunction pad6;
    AtkFunction pad7;
    AtkFunction pad8;
} AtkDocumentIface;
typedef struct _AtkHyperlinkClass {
    GObjectClass parent;
    gchar *(*get_uri) (AtkHyperlink *, gint);
    AtkObject *(*get_object) (AtkHyperlink *, gint);
     gint(*get_end_index) (AtkHyperlink *);
     gint(*get_start_index) (AtkHyperlink *);
     gboolean(*is_valid) (AtkHyperlink *);
     gint(*get_n_anchors) (AtkHyperlink *);
     guint(*link_state) (AtkHyperlink *);
     gboolean(*is_selected_link) (AtkHyperlink *);
    void (*link_activated) (AtkHyperlink *);
    AtkFunction pad1;
} AtkHyperlinkClass;
typedef enum {
    ATK_KEY_EVENT_PRESS,
    ATK_KEY_EVENT_RELEASE,
    ATK_KEY_EVENT_LAST_DEFINED
} AtkKeyEventType;
typedef struct _AtkUtil {
    GObject parent;
} AtkUtil;
typedef enum {
    ATK_HYPERLINK_IS_INLINE = 1 &lt;&lt; 0
} AtkHyperlinkStateFlags;
typedef struct _AtkNoOpObjectFactory {
    AtkObjectFactory parent;
} AtkNoOpObjectFactory;
typedef struct _AtkNoOpObject {
    AtkObject parent;
} AtkNoOpObject;
extern gchar *atk_text_get_selection(AtkText *, gint, gint *, gint *);
extern guint atk_object_connect_property_change_handler(AtkObject *,
							AtkPropertyChangeHandler
							*);
extern void atk_image_get_image_position(AtkImage *, gint *, gint *,
					 AtkCoordType);
extern AtkRelationType atk_relation_get_relation_type(AtkRelation *);
extern const gchar *atk_role_get_localized_name(AtkRole);
extern GType atk_hyperlink_get_type(void);
extern const gchar *atk_document_get_document_type(AtkDocument *);
extern AtkObject *atk_table_get_caption(AtkTable *);
extern gint atk_hyperlink_get_start_index(AtkHyperlink *);
extern gpointer atk_document_get_document(AtkDocument *);
extern AtkStateSet *atk_state_set_or_sets(AtkStateSet *, AtkStateSet *);
extern AtkObjectFactory *atk_no_op_object_factory_new(void);
extern AtkObject *atk_table_get_column_header(AtkTable *, gint);
extern const gchar *atk_object_get_name(AtkObject *);
extern void atk_registry_set_factory_type(AtkRegistry *, GType, GType);
extern gboolean atk_editable_text_set_run_attributes(AtkEditableText *,
						     AtkAttributeSet *,
						     gint, gint);
extern GType atk_object_factory_get_type(void);
extern void atk_object_remove_property_change_handler(AtkObject *, guint);
extern gboolean atk_image_set_image_description(AtkImage *, const gchar *);
extern GType atk_gobject_accessible_get_type(void);
extern AtkHyperlink *atk_hypertext_get_link(AtkHypertext *, gint);
extern void atk_attribute_set_free(AtkAttributeSet *);
extern void atk_focus_tracker_notify(AtkObject *);
extern void atk_relation_set_remove(AtkRelationSet *, AtkRelation *);
extern void atk_editable_text_cut_text(AtkEditableText *, gint, gint);
extern void atk_remove_key_event_listener(guint);
extern gboolean atk_selection_add_selection(AtkSelection *, gint);
extern gint atk_action_get_n_actions(AtkAction *);
extern gboolean atk_component_set_extents(AtkComponent *, gint, gint, gint,
					  gint, AtkCoordType);
extern void atk_editable_text_set_text_contents(AtkEditableText *,
						const gchar *);
extern AtkObject *atk_table_get_summary(AtkTable *);
extern AtkRole atk_role_register(const gchar *);
extern void atk_component_remove_focus_handler(AtkComponent *, guint);
extern gint atk_hyperlink_get_n_anchors(AtkHyperlink *);
extern gboolean atk_value_set_current_value(AtkValue *, const GValue *);
extern gint atk_streamable_content_get_n_mime_types(AtkStreamableContent
						    *);
extern void atk_table_set_caption(AtkTable *, AtkObject *);
extern void atk_focus_tracker_init(AtkEventListenerInit);
extern void atk_relation_set_add(AtkRelationSet *, AtkRelation *);
extern GType atk_text_get_type(void);
extern void atk_object_initialize(AtkObject *, gpointer);
extern void atk_object_set_role(AtkObject *, AtkRole);
extern void atk_table_set_row_header(AtkTable *, gint, AtkObject *);
extern const gchar
    *atk_streamable_content_get_mime_type(AtkStreamableContent *, gint);
extern const gchar *atk_text_attribute_get_value(AtkTextAttribute, gint);
extern gboolean atk_table_add_column_selection(AtkTable *, gint);
extern AtkLayer atk_component_get_layer(AtkComponent *);
extern AtkObject *atk_selection_ref_selection(AtkSelection *, gint);
extern gboolean atk_hyperlink_is_selected_link(AtkHyperlink *);
extern gboolean atk_relation_set_contains(AtkRelationSet *,
					  AtkRelationType);
extern void atk_image_get_image_size(AtkImage *, int *, int *);
extern gchar *atk_text_get_text_before_offset(AtkText *, gint,
					      AtkTextBoundary, gint *,
					      gint *);
extern GType atk_action_get_type(void);
extern void atk_text_get_character_extents(AtkText *, gint, gint *, gint *,
					   gint *, gint *, AtkCoordType);
extern const gchar *atk_action_get_localized_name(AtkAction *, gint);
extern void atk_state_set_clear_states(AtkStateSet *);
extern GType atk_relation_set_get_type(void);
extern gboolean atk_state_set_contains_state(AtkStateSet *, AtkStateType);
extern GIOChannel *atk_streamable_content_get_stream(AtkStreamableContent
						     *, const gchar *);
extern AtkStateSet *atk_state_set_and_sets(AtkStateSet *, AtkStateSet *);
extern gboolean atk_table_remove_column_selection(AtkTable *, gint);
extern GType atk_streamable_content_get_type(void);
extern void atk_object_set_name(AtkObject *, const gchar *);
extern void atk_relation_set_add_relation_by_type(AtkRelationSet *,
						  AtkRelationType,
						  AtkObject *);
extern void atk_remove_global_event_listener(guint);
extern gchar *atk_text_get_text(AtkText *, gint, gint);
extern void atk_editable_text_copy_text(AtkEditableText *, gint, gint);
extern GObject *atk_gobject_accessible_get_object(AtkGObjectAccessible *);
extern AtkRole atk_role_for_name(const gchar *);
extern const gchar *atk_table_get_column_description(AtkTable *, gint);
extern const gchar *atk_role_get_name(AtkRole);
extern gint atk_table_get_n_rows(AtkTable *);
extern void atk_object_factory_invalidate(AtkObjectFactory *);
extern void atk_object_notify_state_change(AtkObject *, AtkState,
					   gboolean);
extern AtkRelation *atk_relation_set_get_relation_by_type(AtkRelationSet *,
							  AtkRelationType);
extern gint atk_relation_set_get_n_relations(AtkRelationSet *);
extern gint atk_object_get_n_accessible_children(AtkObject *);
extern void atk_table_set_row_description(AtkTable *, gint, const gchar *);
extern GType atk_state_set_get_type(void);
extern AtkRelation *atk_relation_set_get_relation(AtkRelationSet *, gint);
extern AtkObject *atk_get_focus_object(void);
extern gunichar atk_text_get_character_at_offset(AtkText *, gint);
extern AtkRelation *atk_relation_new(AtkObject * *, gint, AtkRelationType);
extern void atk_object_set_parent(AtkObject *, AtkObject *);
extern AtkAttributeSet *atk_text_get_run_attributes(AtkText *, gint,
						    gint *, gint *);
extern gboolean atk_object_remove_relationship(AtkObject *,
					       AtkRelationType,
					       AtkObject *);
extern gboolean atk_selection_remove_selection(AtkSelection *, gint);
extern guint atk_component_add_focus_handler(AtkComponent *,
					     AtkFocusHandler);
extern gint atk_table_get_index_at(AtkTable *, gint, gint);
extern AtkRelationSet *atk_relation_set_new(void);
extern AtkObjectFactory *atk_registry_get_factory(AtkRegistry *, GType);
extern const gchar *atk_get_toolkit_version(void);
extern const gchar *atk_text_attribute_get_name(AtkTextAttribute);
extern GType atk_image_get_type(void);
extern AtkRelationSet *atk_object_ref_relation_set(AtkObject *);
extern AtkStateSet *atk_state_set_new(void);
extern AtkStateSet *atk_state_set_xor_sets(AtkStateSet *, AtkStateSet *);
extern AtkObject *atk_hyperlink_get_object(AtkHyperlink *, gint);
extern gint atk_object_get_index_in_parent(AtkObject *);
extern gboolean atk_text_set_caret_offset(AtkText *, gint);
extern GType atk_registry_get_type(void);
extern AtkRelationType atk_relation_type_for_name(const gchar *);
extern const gchar *atk_get_toolkit_name(void);
extern gboolean atk_state_set_add_state(AtkStateSet *, AtkStateType);
extern AtkStateSet *atk_object_ref_state_set(AtkObject *);
extern const gchar *atk_image_get_image_description(AtkImage *);
extern gboolean atk_text_add_selection(AtkText *, gint, gint);
extern GType atk_registry_get_factory_type(AtkRegistry *, GType);
extern gboolean atk_selection_clear_selection(AtkSelection *);
extern const gchar *atk_action_get_name(AtkAction *, gint);
extern void atk_relation_add_target(AtkRelation *, AtkObject *);
extern AtkTextAttribute atk_text_attribute_register(const gchar *);
extern gboolean atk_hyperlink_is_valid(AtkHyperlink *);
extern GType atk_implementor_get_type(void);
extern gboolean atk_object_add_relationship(AtkObject *, AtkRelationType,
					    AtkObject *);
extern GType atk_hypertext_get_type(void);
extern void atk_table_set_column_header(AtkTable *, gint, AtkObject *);
extern gboolean atk_table_add_row_selection(AtkTable *, gint);
extern gint atk_selection_get_selection_count(AtkSelection *);
extern guint atk_add_key_event_listener(AtkKeySnoopFunc, gpointer);
extern gboolean atk_table_is_row_selected(AtkTable *, gint);
extern GPtrArray *atk_relation_get_target(AtkRelation *);
extern AtkAttributeSet *atk_text_get_default_attributes(AtkText *);
extern void atk_editable_text_insert_text(AtkEditableText *, const gchar *,
					  gint, gint *);
extern gint atk_hypertext_get_link_index(AtkHypertext *, gint);
extern const gchar *atk_table_get_row_description(AtkTable *, gint);
extern GType atk_table_get_type(void);
extern const gchar *atk_state_type_get_name(AtkStateType);
extern AtkObject *atk_no_op_object_new(GObject *);
extern gint atk_table_get_column_extent_at(AtkTable *, gint, gint);
extern gint atk_hyperlink_get_end_index(AtkHyperlink *);
extern void atk_editable_text_delete_text(AtkEditableText *, gint, gint);
extern void atk_editable_text_paste_text(AtkEditableText *, gint);
extern AtkTextRange **atk_text_get_bounded_ranges(AtkText *,
						  AtkTextRectangle *,
						  AtkCoordType,
						  AtkTextClipType,
						  AtkTextClipType);
extern void atk_component_get_position(AtkComponent *, gint *, gint *,
				       AtkCoordType);
extern GType atk_value_get_type(void);
extern const gchar *atk_object_get_description(AtkObject *);
extern gint atk_table_get_selected_columns(AtkTable *, gint * *);
extern gint atk_table_get_column_at_index(AtkTable *, gint);
extern void atk_value_get_maximum_value(AtkValue *, GValue *);
extern GType atk_selection_get_type(void);
extern GType atk_rectangle_get_type(void);
extern GType atk_object_factory_get_accessible_type(AtkObjectFactory *);
extern GType atk_relation_get_type(void);
extern gboolean atk_action_do_action(AtkAction *, gint);
extern void atk_state_set_add_states(AtkStateSet *, AtkStateType *, gint);
extern GType atk_util_get_type(void);
extern AtkObject *atk_component_ref_accessible_at_point(AtkComponent *,
							gint, gint,
							AtkCoordType);
extern gchar *atk_text_get_text_after_offset(AtkText *, gint,
					     AtkTextBoundary, gint *,
					     gint *);
extern gint atk_table_get_row_extent_at(AtkTable *, gint, gint);
extern guint atk_add_global_event_listener(GSignalEmissionHook,
					   const gchar *);
extern gboolean atk_state_set_remove_state(AtkStateSet *, AtkStateType);
extern gboolean atk_table_remove_row_selection(AtkTable *, gint);
extern AtkObject *atk_table_ref_at(AtkTable *, gint, gint);
extern void atk_object_set_description(AtkObject *, const gchar *);
extern GType atk_no_op_object_factory_get_type(void);
extern AtkRole atk_object_get_role(AtkObject *);
extern void atk_table_set_column_description(AtkTable *, gint,
					     const gchar *);
extern gchar *atk_text_get_text_at_offset(AtkText *, gint, AtkTextBoundary,
					  gint *, gint *);
extern AtkRelationType atk_relation_type_register(const gchar *);
extern void atk_component_get_extents(AtkComponent *, gint *, gint *,
				      gint *, gint *, AtkCoordType);
extern void atk_text_get_range_extents(AtkText *, gint, gint, AtkCoordType,
				       AtkTextRectangle *);
extern const gchar *atk_relation_type_get_name(AtkRelationType);
extern void atk_component_get_size(AtkComponent *, gint *, gint *);
extern AtkObject *atk_object_factory_create_accessible(AtkObjectFactory *,
						       GObject *);
extern void atk_value_get_minimum_value(AtkValue *, GValue *);
extern GType atk_document_get_type(void);
extern AtkStateType atk_state_type_for_name(const gchar *);
extern gboolean atk_state_set_contains_states(AtkStateSet *,
					      AtkStateType *, gint);
extern gint atk_text_get_caret_offset(AtkText *);
extern const gchar *atk_action_get_description(AtkAction *, gint);
extern gint atk_text_get_offset_at_point(AtkText *, gint, gint,
					 AtkCoordType);
extern AtkObject *atk_gobject_accessible_for_object(GObject *);
extern gboolean atk_action_set_description(AtkAction *, gint,
					   const gchar *);
extern gboolean atk_text_set_selection(AtkText *, gint, gint, gint);
extern gint atk_table_get_selected_rows(AtkTable *, gint * *);
extern AtkObject *atk_implementor_ref_accessible(AtkImplementor *);
extern gint atk_text_get_n_selections(AtkText *);
extern gint atk_component_get_mdi_zorder(AtkComponent *);
extern gchar *atk_hyperlink_get_uri(AtkHyperlink *, gint);
extern void atk_value_get_current_value(AtkValue *, GValue *);
extern AtkRegistry *atk_get_default_registry(void);
extern gboolean atk_component_set_position(AtkComponent *, gint, gint,
					   AtkCoordType);
extern void atk_remove_focus_tracker(guint);
extern GType atk_no_op_object_get_type(void);
extern gboolean atk_component_grab_focus(AtkComponent *);
extern gint atk_table_get_n_columns(AtkTable *);
extern gboolean atk_hyperlink_is_inline(AtkHyperlink *);
extern gboolean atk_table_is_column_selected(AtkTable *, gint);
extern AtkObject *atk_table_get_row_header(AtkTable *, gint);
extern gboolean atk_text_remove_selection(AtkText *, gint);
extern AtkTextAttribute atk_text_attribute_for_name(const gchar *);
extern void atk_table_set_summary(AtkTable *, AtkObject *);
extern gboolean atk_selection_is_child_selected(AtkSelection *, gint);
extern gboolean atk_table_is_selected(AtkTable *, gint, gint);
extern guint atk_add_focus_tracker(AtkEventListener);
extern GType atk_component_get_type(void);
extern gboolean atk_component_contains(AtkComponent *, gint, gint,
				       AtkCoordType);
extern gint atk_text_get_character_count(AtkText *);
extern gint atk_table_get_row_at_index(AtkTable *, gint);
extern gboolean atk_selection_select_all_selection(AtkSelection *);
extern gint atk_hypertext_get_n_links(AtkHypertext *);
extern const gchar *atk_action_get_keybinding(AtkAction *, gint);
extern void atk_text_free_ranges(AtkTextRange * *);
extern gboolean atk_component_set_size(AtkComponent *, gint, gint);
extern AtkStateType atk_state_type_register(const gchar *);
extern AtkObject *atk_get_root(void);
extern AtkObject *atk_object_get_parent(AtkObject *);
extern GType atk_editable_text_get_type(void);
extern gboolean atk_state_set_is_empty(AtkStateSet *);
extern GType atk_object_get_type(void);
extern AtkObject *atk_object_ref_accessible_child(AtkObject *, gint);
</SCREEN>
</SECT2>
</SECT1>
<!-- End of text generated from database -->

<!-- Start of generated text - do not edit! -->
<!-- generated from the LSB specification database by mklibspec -->
<SECT1 ID=libpango-1.0>
<TITLE>Interfaces for libpango-1.0</TITLE>
<PARA>
<XREF LINKEND="lib-libpango-1.0-def"> defines the library name and shared object name
for the libpango-1.0 library
</PARA>
<TABLE id="lib-libpango-1.0-def">
<TITLE>libpango-1.0 Definition</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Library:</ENTRY>
<ENTRY>libpango-1.0</ENTRY>
</ROW>
<ROW>
<ENTRY>SONAME:</ENTRY>
<ENTRY>libpango-1.0.so.0</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The behavior of the interfaces in this library is specified by the following specifications:<SIMPLELIST COLUMNS=1>
<MEMBER ID='REFSTD.libpango.1.0.1'>
[Gobject 2.8] <XREF LINKEND="std.Gobject.2.8">
</MEMBER>
<MEMBER ID='REFSTD.libpango.1.0.2'>
[Pango 1.10] <XREF LINKEND="std.Pango.1.10">
</MEMBER>
</SIMPLELIST>
</PARA>
<!-- debug: database interface name GTK Internationalized Text Layout and Rendering library -->
<SECT2>
<!--libgroup-->
<TITLE>GTK Internationalized Text Layout and Rendering library</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Interfaces for GTK Internationalized Text Layout and Rendering library</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic functions
for GTK Internationalized Text Layout and Rendering library specified in <XREF linkend="tbl-libpango-1.0-gtk-i-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<TABLE id="tbl-libpango-1.0-gtk-i-ints">
<TITLE>libpango-1.0 - GTK Internationalized Text Layout and Rendering library Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>pango_alignment_get_type</primary></indexterm>pango_alignment_get_type <LINK LINKEND="REFSTD.libpango.1.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_attr_background_new</primary></indexterm>pango_attr_background_new <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_attr_fallback_new</primary></indexterm>pango_attr_fallback_new <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_attr_family_new</primary></indexterm>pango_attr_family_new <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_attr_font_desc_new</primary></indexterm>pango_attr_font_desc_new <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_attr_foreground_new</primary></indexterm>pango_attr_foreground_new <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_attr_iterator_copy</primary></indexterm>pango_attr_iterator_copy <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_attr_iterator_destroy</primary></indexterm>pango_attr_iterator_destroy <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_attr_iterator_get</primary></indexterm>pango_attr_iterator_get <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_attr_iterator_get_attrs</primary></indexterm>pango_attr_iterator_get_attrs <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_attr_iterator_get_font</primary></indexterm>pango_attr_iterator_get_font <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_attr_iterator_next</primary></indexterm>pango_attr_iterator_next <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_attr_iterator_range</primary></indexterm>pango_attr_iterator_range <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_attr_language_new</primary></indexterm>pango_attr_language_new <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_attr_letter_spacing_new</primary></indexterm>pango_attr_letter_spacing_new <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_attr_list_change</primary></indexterm>pango_attr_list_change <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_attr_list_copy</primary></indexterm>pango_attr_list_copy <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_attr_list_filter</primary></indexterm>pango_attr_list_filter <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_attr_list_get_iterator</primary></indexterm>pango_attr_list_get_iterator <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_attr_list_get_type</primary></indexterm>pango_attr_list_get_type <LINK LINKEND="REFSTD.libpango.1.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_attr_list_insert</primary></indexterm>pango_attr_list_insert <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_attr_list_insert_before</primary></indexterm>pango_attr_list_insert_before <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_attr_list_new</primary></indexterm>pango_attr_list_new <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_attr_list_ref</primary></indexterm>pango_attr_list_ref <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_attr_list_splice</primary></indexterm>pango_attr_list_splice <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_attr_list_unref</primary></indexterm>pango_attr_list_unref <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_attr_rise_new</primary></indexterm>pango_attr_rise_new <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_attr_scale_new</primary></indexterm>pango_attr_scale_new <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_attr_shape_new</primary></indexterm>pango_attr_shape_new <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_attr_shape_new_with_data</primary></indexterm>pango_attr_shape_new_with_data <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_attr_size_new</primary></indexterm>pango_attr_size_new <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_attr_size_new_absolute</primary></indexterm>pango_attr_size_new_absolute <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_attr_stretch_new</primary></indexterm>pango_attr_stretch_new <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_attr_strikethrough_color_new</primary></indexterm>pango_attr_strikethrough_color_new <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_attr_strikethrough_new</primary></indexterm>pango_attr_strikethrough_new <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_attr_style_new</primary></indexterm>pango_attr_style_new <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_attr_type_get_type</primary></indexterm>pango_attr_type_get_type <LINK LINKEND="REFSTD.libpango.1.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_attr_type_register</primary></indexterm>pango_attr_type_register <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_attr_underline_color_new</primary></indexterm>pango_attr_underline_color_new <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_attr_underline_new</primary></indexterm>pango_attr_underline_new <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_attr_variant_new</primary></indexterm>pango_attr_variant_new <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_attr_weight_new</primary></indexterm>pango_attr_weight_new <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_attribute_copy</primary></indexterm>pango_attribute_copy <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_attribute_destroy</primary></indexterm>pango_attribute_destroy <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_attribute_equal</primary></indexterm>pango_attribute_equal <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_break</primary></indexterm>pango_break <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_color_copy</primary></indexterm>pango_color_copy <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_color_free</primary></indexterm>pango_color_free <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_color_get_type</primary></indexterm>pango_color_get_type <LINK LINKEND="REFSTD.libpango.1.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_color_parse</primary></indexterm>pango_color_parse <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_context_get_base_dir</primary></indexterm>pango_context_get_base_dir <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_context_get_font_description</primary></indexterm>pango_context_get_font_description <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_context_get_font_map</primary></indexterm>pango_context_get_font_map <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_context_get_language</primary></indexterm>pango_context_get_language <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_context_get_matrix</primary></indexterm>pango_context_get_matrix <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_context_get_metrics</primary></indexterm>pango_context_get_metrics <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_context_get_type</primary></indexterm>pango_context_get_type <LINK LINKEND="REFSTD.libpango.1.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_context_list_families</primary></indexterm>pango_context_list_families <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_context_load_font</primary></indexterm>pango_context_load_font <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_context_load_fontset</primary></indexterm>pango_context_load_fontset <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_context_set_base_dir</primary></indexterm>pango_context_set_base_dir <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_context_set_font_description</primary></indexterm>pango_context_set_font_description <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_context_set_language</primary></indexterm>pango_context_set_language <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_context_set_matrix</primary></indexterm>pango_context_set_matrix <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_coverage_from_bytes</primary></indexterm>pango_coverage_from_bytes <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_coverage_get</primary></indexterm>pango_coverage_get <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_coverage_level_get_type</primary></indexterm>pango_coverage_level_get_type <LINK LINKEND="REFSTD.libpango.1.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_coverage_max</primary></indexterm>pango_coverage_max <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_coverage_new</primary></indexterm>pango_coverage_new <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_coverage_ref</primary></indexterm>pango_coverage_ref <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_coverage_set</primary></indexterm>pango_coverage_set <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_coverage_to_bytes</primary></indexterm>pango_coverage_to_bytes <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_coverage_unref</primary></indexterm>pango_coverage_unref <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_direction_get_type</primary></indexterm>pango_direction_get_type <LINK LINKEND="REFSTD.libpango.1.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_ellipsize_mode_get_type</primary></indexterm>pango_ellipsize_mode_get_type <LINK LINKEND="REFSTD.libpango.1.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_find_base_dir</primary></indexterm>pango_find_base_dir <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_find_paragraph_boundary</primary></indexterm>pango_find_paragraph_boundary <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_font_describe</primary></indexterm>pango_font_describe <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_font_description_better_match</primary></indexterm>pango_font_description_better_match <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_font_description_copy</primary></indexterm>pango_font_description_copy <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_font_description_copy_static</primary></indexterm>pango_font_description_copy_static <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_font_description_equal</primary></indexterm>pango_font_description_equal <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_font_description_free</primary></indexterm>pango_font_description_free <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_font_description_from_string</primary></indexterm>pango_font_description_from_string <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_font_description_get_family</primary></indexterm>pango_font_description_get_family <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_font_description_get_set_fields</primary></indexterm>pango_font_description_get_set_fields <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_font_description_get_size</primary></indexterm>pango_font_description_get_size <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_font_description_get_size_is_absolute</primary></indexterm>pango_font_description_get_size_is_absolute <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_font_description_get_stretch</primary></indexterm>pango_font_description_get_stretch <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_font_description_get_style</primary></indexterm>pango_font_description_get_style <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_font_description_get_type</primary></indexterm>pango_font_description_get_type <LINK LINKEND="REFSTD.libpango.1.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_font_description_get_variant</primary></indexterm>pango_font_description_get_variant <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_font_description_get_weight</primary></indexterm>pango_font_description_get_weight <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_font_description_hash</primary></indexterm>pango_font_description_hash <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_font_description_merge</primary></indexterm>pango_font_description_merge <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_font_description_merge_static</primary></indexterm>pango_font_description_merge_static <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_font_description_new</primary></indexterm>pango_font_description_new <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_font_description_set_absolute_size</primary></indexterm>pango_font_description_set_absolute_size <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_font_description_set_family</primary></indexterm>pango_font_description_set_family <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_font_description_set_family_static</primary></indexterm>pango_font_description_set_family_static <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_font_description_set_size</primary></indexterm>pango_font_description_set_size <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_font_description_set_stretch</primary></indexterm>pango_font_description_set_stretch <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_font_description_set_style</primary></indexterm>pango_font_description_set_style <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_font_description_set_variant</primary></indexterm>pango_font_description_set_variant <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_font_description_set_weight</primary></indexterm>pango_font_description_set_weight <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_font_description_to_filename</primary></indexterm>pango_font_description_to_filename <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_font_description_to_string</primary></indexterm>pango_font_description_to_string <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_font_description_unset_fields</primary></indexterm>pango_font_description_unset_fields <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_font_descriptions_free</primary></indexterm>pango_font_descriptions_free <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_font_face_describe</primary></indexterm>pango_font_face_describe <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_font_face_get_face_name</primary></indexterm>pango_font_face_get_face_name <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_font_face_get_type</primary></indexterm>pango_font_face_get_type <LINK LINKEND="REFSTD.libpango.1.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_font_face_list_sizes</primary></indexterm>pango_font_face_list_sizes <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_font_family_get_name</primary></indexterm>pango_font_family_get_name <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_font_family_get_type</primary></indexterm>pango_font_family_get_type <LINK LINKEND="REFSTD.libpango.1.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_font_family_is_monospace</primary></indexterm>pango_font_family_is_monospace <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_font_family_list_faces</primary></indexterm>pango_font_family_list_faces <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_font_find_shaper</primary></indexterm>pango_font_find_shaper <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_font_get_coverage</primary></indexterm>pango_font_get_coverage <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_font_get_font_map</primary></indexterm>pango_font_get_font_map <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_font_get_glyph_extents</primary></indexterm>pango_font_get_glyph_extents <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_font_get_metrics</primary></indexterm>pango_font_get_metrics <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_font_get_type</primary></indexterm>pango_font_get_type <LINK LINKEND="REFSTD.libpango.1.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_font_map_get_type</primary></indexterm>pango_font_map_get_type <LINK LINKEND="REFSTD.libpango.1.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_font_map_list_families</primary></indexterm>pango_font_map_list_families <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_font_map_load_font</primary></indexterm>pango_font_map_load_font <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_font_map_load_fontset</primary></indexterm>pango_font_map_load_fontset <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_font_mask_get_type</primary></indexterm>pango_font_mask_get_type <LINK LINKEND="REFSTD.libpango.1.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_font_metrics_get_approximate_char_width</primary></indexterm>pango_font_metrics_get_approximate_char_width <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_font_metrics_get_approximate_digit_width</primary></indexterm>pango_font_metrics_get_approximate_digit_width <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_font_metrics_get_ascent</primary></indexterm>pango_font_metrics_get_ascent <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_font_metrics_get_descent</primary></indexterm>pango_font_metrics_get_descent <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_font_metrics_get_strikethrough_position</primary></indexterm>pango_font_metrics_get_strikethrough_position <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_font_metrics_get_strikethrough_thickness</primary></indexterm>pango_font_metrics_get_strikethrough_thickness <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_font_metrics_get_type</primary></indexterm>pango_font_metrics_get_type <LINK LINKEND="REFSTD.libpango.1.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_font_metrics_get_underline_position</primary></indexterm>pango_font_metrics_get_underline_position <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_font_metrics_get_underline_thickness</primary></indexterm>pango_font_metrics_get_underline_thickness <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_font_metrics_ref</primary></indexterm>pango_font_metrics_ref <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_font_metrics_unref</primary></indexterm>pango_font_metrics_unref <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_fontset_foreach</primary></indexterm>pango_fontset_foreach <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_fontset_get_font</primary></indexterm>pango_fontset_get_font <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_fontset_get_metrics</primary></indexterm>pango_fontset_get_metrics <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_fontset_get_type</primary></indexterm>pango_fontset_get_type <LINK LINKEND="REFSTD.libpango.1.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_get_log_attrs</primary></indexterm>pango_get_log_attrs <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_glyph_item_apply_attrs</primary></indexterm>pango_glyph_item_apply_attrs <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_glyph_item_free</primary></indexterm>pango_glyph_item_free <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_glyph_item_letter_space</primary></indexterm>pango_glyph_item_letter_space <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_glyph_item_split</primary></indexterm>pango_glyph_item_split <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_glyph_string_copy</primary></indexterm>pango_glyph_string_copy <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_glyph_string_extents</primary></indexterm>pango_glyph_string_extents <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_glyph_string_extents_range</primary></indexterm>pango_glyph_string_extents_range <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_glyph_string_free</primary></indexterm>pango_glyph_string_free <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_glyph_string_get_logical_widths</primary></indexterm>pango_glyph_string_get_logical_widths <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_glyph_string_get_type</primary></indexterm>pango_glyph_string_get_type <LINK LINKEND="REFSTD.libpango.1.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_glyph_string_index_to_x</primary></indexterm>pango_glyph_string_index_to_x <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_glyph_string_new</primary></indexterm>pango_glyph_string_new <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_glyph_string_set_size</primary></indexterm>pango_glyph_string_set_size <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_glyph_string_x_to_index</primary></indexterm>pango_glyph_string_x_to_index <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_is_zero_width</primary></indexterm>pango_is_zero_width <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_item_copy</primary></indexterm>pango_item_copy <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_item_free</primary></indexterm>pango_item_free <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_item_new</primary></indexterm>pango_item_new <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_item_split</primary></indexterm>pango_item_split <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_itemize</primary></indexterm>pango_itemize <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_itemize_with_base_dir</primary></indexterm>pango_itemize_with_base_dir <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_language_from_string</primary></indexterm>pango_language_from_string <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_language_get_sample_string</primary></indexterm>pango_language_get_sample_string <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_language_get_type</primary></indexterm>pango_language_get_type <LINK LINKEND="REFSTD.libpango.1.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_language_includes_script</primary></indexterm>pango_language_includes_script <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_language_matches</primary></indexterm>pango_language_matches <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_layout_context_changed</primary></indexterm>pango_layout_context_changed <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_layout_copy</primary></indexterm>pango_layout_copy <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_layout_get_alignment</primary></indexterm>pango_layout_get_alignment <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_layout_get_attributes</primary></indexterm>pango_layout_get_attributes <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_layout_get_auto_dir</primary></indexterm>pango_layout_get_auto_dir <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_layout_get_context</primary></indexterm>pango_layout_get_context <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_layout_get_cursor_pos</primary></indexterm>pango_layout_get_cursor_pos <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_layout_get_ellipsize</primary></indexterm>pango_layout_get_ellipsize <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_layout_get_extents</primary></indexterm>pango_layout_get_extents <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_layout_get_font_description</primary></indexterm>pango_layout_get_font_description <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_layout_get_indent</primary></indexterm>pango_layout_get_indent <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_layout_get_iter</primary></indexterm>pango_layout_get_iter <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_layout_get_justify</primary></indexterm>pango_layout_get_justify <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_layout_get_line</primary></indexterm>pango_layout_get_line <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_layout_get_line_count</primary></indexterm>pango_layout_get_line_count <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_layout_get_lines</primary></indexterm>pango_layout_get_lines <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_layout_get_log_attrs</primary></indexterm>pango_layout_get_log_attrs <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_layout_get_pixel_extents</primary></indexterm>pango_layout_get_pixel_extents <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_layout_get_pixel_size</primary></indexterm>pango_layout_get_pixel_size <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_layout_get_single_paragraph_mode</primary></indexterm>pango_layout_get_single_paragraph_mode <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_layout_get_size</primary></indexterm>pango_layout_get_size <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_layout_get_spacing</primary></indexterm>pango_layout_get_spacing <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_layout_get_tabs</primary></indexterm>pango_layout_get_tabs <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_layout_get_text</primary></indexterm>pango_layout_get_text <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_layout_get_type</primary></indexterm>pango_layout_get_type <LINK LINKEND="REFSTD.libpango.1.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_layout_get_width</primary></indexterm>pango_layout_get_width <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_layout_get_wrap</primary></indexterm>pango_layout_get_wrap <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_layout_index_to_pos</primary></indexterm>pango_layout_index_to_pos <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_layout_iter_at_last_line</primary></indexterm>pango_layout_iter_at_last_line <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_layout_iter_free</primary></indexterm>pango_layout_iter_free <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_layout_iter_get_baseline</primary></indexterm>pango_layout_iter_get_baseline <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_layout_iter_get_char_extents</primary></indexterm>pango_layout_iter_get_char_extents <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_layout_iter_get_cluster_extents</primary></indexterm>pango_layout_iter_get_cluster_extents <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_layout_iter_get_index</primary></indexterm>pango_layout_iter_get_index <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_layout_iter_get_layout_extents</primary></indexterm>pango_layout_iter_get_layout_extents <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_layout_iter_get_line</primary></indexterm>pango_layout_iter_get_line <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_layout_iter_get_line_extents</primary></indexterm>pango_layout_iter_get_line_extents <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_layout_iter_get_line_yrange</primary></indexterm>pango_layout_iter_get_line_yrange <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_layout_iter_get_run</primary></indexterm>pango_layout_iter_get_run <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_layout_iter_get_run_extents</primary></indexterm>pango_layout_iter_get_run_extents <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_layout_iter_get_type</primary></indexterm>pango_layout_iter_get_type <LINK LINKEND="REFSTD.libpango.1.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_layout_iter_next_char</primary></indexterm>pango_layout_iter_next_char <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_layout_iter_next_cluster</primary></indexterm>pango_layout_iter_next_cluster <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_layout_iter_next_line</primary></indexterm>pango_layout_iter_next_line <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_layout_iter_next_run</primary></indexterm>pango_layout_iter_next_run <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_layout_line_get_extents</primary></indexterm>pango_layout_line_get_extents <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_layout_line_get_pixel_extents</primary></indexterm>pango_layout_line_get_pixel_extents <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_layout_line_get_x_ranges</primary></indexterm>pango_layout_line_get_x_ranges <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_layout_line_index_to_x</primary></indexterm>pango_layout_line_index_to_x <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_layout_line_ref</primary></indexterm>pango_layout_line_ref <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_layout_line_unref</primary></indexterm>pango_layout_line_unref <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_layout_line_x_to_index</primary></indexterm>pango_layout_line_x_to_index <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_layout_move_cursor_visually</primary></indexterm>pango_layout_move_cursor_visually <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_layout_new</primary></indexterm>pango_layout_new <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_layout_set_alignment</primary></indexterm>pango_layout_set_alignment <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_layout_set_attributes</primary></indexterm>pango_layout_set_attributes <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_layout_set_auto_dir</primary></indexterm>pango_layout_set_auto_dir <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_layout_set_ellipsize</primary></indexterm>pango_layout_set_ellipsize <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_layout_set_font_description</primary></indexterm>pango_layout_set_font_description <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_layout_set_indent</primary></indexterm>pango_layout_set_indent <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_layout_set_justify</primary></indexterm>pango_layout_set_justify <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_layout_set_markup</primary></indexterm>pango_layout_set_markup <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_layout_set_markup_with_accel</primary></indexterm>pango_layout_set_markup_with_accel <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_layout_set_single_paragraph_mode</primary></indexterm>pango_layout_set_single_paragraph_mode <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_layout_set_spacing</primary></indexterm>pango_layout_set_spacing <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_layout_set_tabs</primary></indexterm>pango_layout_set_tabs <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_layout_set_text</primary></indexterm>pango_layout_set_text <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_layout_set_width</primary></indexterm>pango_layout_set_width <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_layout_set_wrap</primary></indexterm>pango_layout_set_wrap <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_layout_xy_to_index</primary></indexterm>pango_layout_xy_to_index <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_log2vis_get_embedding_levels</primary></indexterm>pango_log2vis_get_embedding_levels <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_matrix_concat</primary></indexterm>pango_matrix_concat <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_matrix_copy</primary></indexterm>pango_matrix_copy <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_matrix_free</primary></indexterm>pango_matrix_free <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_matrix_get_type</primary></indexterm>pango_matrix_get_type <LINK LINKEND="REFSTD.libpango.1.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_matrix_rotate</primary></indexterm>pango_matrix_rotate <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_matrix_scale</primary></indexterm>pango_matrix_scale <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_matrix_translate</primary></indexterm>pango_matrix_translate <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_parse_markup</primary></indexterm>pango_parse_markup <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_parse_stretch</primary></indexterm>pango_parse_stretch <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_parse_style</primary></indexterm>pango_parse_style <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_parse_variant</primary></indexterm>pango_parse_variant <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_parse_weight</primary></indexterm>pango_parse_weight <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_read_line</primary></indexterm>pango_read_line <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_render_part_get_type</primary></indexterm>pango_render_part_get_type <LINK LINKEND="REFSTD.libpango.1.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_renderer_activate</primary></indexterm>pango_renderer_activate <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_renderer_deactivate</primary></indexterm>pango_renderer_deactivate <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_renderer_draw_error_underline</primary></indexterm>pango_renderer_draw_error_underline <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_renderer_draw_glyph</primary></indexterm>pango_renderer_draw_glyph <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_renderer_draw_glyphs</primary></indexterm>pango_renderer_draw_glyphs <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_renderer_draw_layout</primary></indexterm>pango_renderer_draw_layout <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_renderer_draw_layout_line</primary></indexterm>pango_renderer_draw_layout_line <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_renderer_draw_rectangle</primary></indexterm>pango_renderer_draw_rectangle <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_renderer_draw_trapezoid</primary></indexterm>pango_renderer_draw_trapezoid <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_renderer_get_color</primary></indexterm>pango_renderer_get_color <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_renderer_get_matrix</primary></indexterm>pango_renderer_get_matrix <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_renderer_get_type</primary></indexterm>pango_renderer_get_type <LINK LINKEND="REFSTD.libpango.1.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_renderer_part_changed</primary></indexterm>pango_renderer_part_changed <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_renderer_set_color</primary></indexterm>pango_renderer_set_color <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_renderer_set_matrix</primary></indexterm>pango_renderer_set_matrix <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_reorder_items</primary></indexterm>pango_reorder_items <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_scan_int</primary></indexterm>pango_scan_int <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_scan_string</primary></indexterm>pango_scan_string <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_scan_word</primary></indexterm>pango_scan_word <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_script_for_unichar</primary></indexterm>pango_script_for_unichar <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_script_get_sample_language</primary></indexterm>pango_script_get_sample_language <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_script_get_type</primary></indexterm>pango_script_get_type <LINK LINKEND="REFSTD.libpango.1.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_script_iter_free</primary></indexterm>pango_script_iter_free <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_script_iter_get_range</primary></indexterm>pango_script_iter_get_range <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_script_iter_new</primary></indexterm>pango_script_iter_new <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_script_iter_next</primary></indexterm>pango_script_iter_next <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_shape</primary></indexterm>pango_shape <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_skip_space</primary></indexterm>pango_skip_space <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_split_file_list</primary></indexterm>pango_split_file_list <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_stretch_get_type</primary></indexterm>pango_stretch_get_type <LINK LINKEND="REFSTD.libpango.1.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_style_get_type</primary></indexterm>pango_style_get_type <LINK LINKEND="REFSTD.libpango.1.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_tab_align_get_type</primary></indexterm>pango_tab_align_get_type <LINK LINKEND="REFSTD.libpango.1.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_tab_array_copy</primary></indexterm>pango_tab_array_copy <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_tab_array_free</primary></indexterm>pango_tab_array_free <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_tab_array_get_positions_in_pixels</primary></indexterm>pango_tab_array_get_positions_in_pixels <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_tab_array_get_size</primary></indexterm>pango_tab_array_get_size <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_tab_array_get_tab</primary></indexterm>pango_tab_array_get_tab <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_tab_array_get_tabs</primary></indexterm>pango_tab_array_get_tabs <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_tab_array_get_type</primary></indexterm>pango_tab_array_get_type <LINK LINKEND="REFSTD.libpango.1.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_tab_array_new</primary></indexterm>pango_tab_array_new <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_tab_array_new_with_positions</primary></indexterm>pango_tab_array_new_with_positions <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_tab_array_resize</primary></indexterm>pango_tab_array_resize <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_tab_array_set_tab</primary></indexterm>pango_tab_array_set_tab <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_trim_string</primary></indexterm>pango_trim_string <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_underline_get_type</primary></indexterm>pango_underline_get_type <LINK LINKEND="REFSTD.libpango.1.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_unichar_direction</primary></indexterm>pango_unichar_direction <LINK LINKEND="REFSTD.libpango.1.0.2">[Pango 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_variant_get_type</primary></indexterm>pango_variant_get_type <LINK LINKEND="REFSTD.libpango.1.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_weight_get_type</primary></indexterm>pango_weight_get_type <LINK LINKEND="REFSTD.libpango.1.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_wrap_mode_get_type</primary></indexterm>pango_wrap_mode_get_type <LINK LINKEND="REFSTD.libpango.1.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>
</SECT2>
</SECT1>
<SECT1 ID=libpango-1.0-ddefs>
<TITLE>Data Definitions for libpango-1.0</TITLE>
<PARA>
This section defines global identifiers and their values that are associated
with interfaces contained in libpango-1.0.
These definitions are organized into groups that
correspond to system headers. This convention is used as a
convenience for the reader, and does not imply the existence
of these headers, or their content.
Where an interface is defined as requiring a particular system header file
all of the data definitions for that system header file presented here shall be in effect.
</PARA>
<PARA>
This section gives data definitions to promote binary application
portability, not to repeat source interface definitions available
elsewhere. System providers and application developers should use this ABI
to supplement - not to replace - source interface definition specifications.
</PARA>
<PARA>
This specification uses the <XREF LINKEND='std.ISOC99'> C Language as the reference programming language, and data definitions are specified in ISO C format. The C language is used here as a convenient notation. Using a C language description of these data objects does not preclude their use by other programming languages.</PARA>
<SECT2>
<TITLE>pango-1.0/pango/pango-utils.h</TITLE>
<PARA>
</PARA>
<SCREEN>

extern char *pango_trim_string(const char *);
extern gboolean pango_scan_word(const char **, GString *);
extern gboolean pango_skip_space(const char **);
extern gboolean pango_parse_stretch(const char *, PangoStretch *,
				    gboolean);
extern gboolean pango_scan_int(const char **, int *);
extern gboolean pango_parse_weight(const char *, PangoWeight *, gboolean);
extern gint pango_read_line(FILE *, GString *);
extern gboolean pango_log2vis_get_embedding_levels(gunichar *, gint,
						   PangoDirection *,
						   guint8 *);
extern const char *pango_language_get_sample_string(PangoLanguage *);
extern gboolean pango_parse_style(const char *, PangoStyle *, gboolean);
extern gboolean pango_scan_string(const char **, GString *);
extern gboolean pango_parse_variant(const char *, PangoVariant *,
				    gboolean);
extern char **pango_split_file_list(const char *);
extern gboolean pango_is_zero_width(gunichar);
</SCREEN>
</SECT2>
<SECT2>
<TITLE>pango-1.0/pango/pango.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define PANGO_CONTEXT_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), PANGO_TYPE_CONTEXT, \
	PangoContextClass))
#define PANGO_LAYOUT_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), PANGO_TYPE_LAYOUT, \
	PangoLayoutClass))
#define PANGO_RENDERER_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), PANGO_TYPE_RENDERER, \
	PangoRendererClass))
#define PANGO_IS_CONTEXT_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), PANGO_TYPE_CONTEXT))
#define PANGO_IS_LAYOUT_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), PANGO_TYPE_LAYOUT))
#define PANGO_IS_RENDERER_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), PANGO_TYPE_RENDERER))
#define PANGO_CONTEXT(object)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((object), PANGO_TYPE_CONTEXT, \
	PangoContext))
#define PANGO_FONT(object)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((object), PANGO_TYPE_FONT, PangoFont))
#define PANGO_FONTSET(object)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((object), PANGO_TYPE_FONTSET, \
	PangoFontset))
#define PANGO_FONT_FACE(object)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((object), PANGO_TYPE_FONT_FACE, \
	PangoFontFace))
#define PANGO_FONT_FAMILY(object)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((object), PANGO_TYPE_FONT_FAMILY, \
	PangoFontFamily))
#define PANGO_FONT_MAP(object)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((object), PANGO_TYPE_FONT_MAP, \
	PangoFontMap))
#define PANGO_LAYOUT(object)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((object), PANGO_TYPE_LAYOUT, \
	PangoLayout))
#define PANGO_RENDERER(object)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((object), PANGO_TYPE_RENDERER, \
	PangoRenderer))
#define PANGO_IS_CONTEXT(object)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((object), PANGO_TYPE_CONTEXT))
#define PANGO_IS_FONT(object)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((object), PANGO_TYPE_FONT))
#define PANGO_IS_FONTSET(object)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((object), PANGO_TYPE_FONTSET))
#define PANGO_IS_FONT_FACE(object)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((object), PANGO_TYPE_FONT_FACE))
#define PANGO_IS_FONT_FAMILY(object)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((object), PANGO_TYPE_FONT_FAMILY))
#define PANGO_IS_FONT_MAP(object)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((object), PANGO_TYPE_FONT_MAP))
#define PANGO_IS_LAYOUT(object)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((object), PANGO_TYPE_LAYOUT))
#define PANGO_IS_RENDERER(object)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((object), PANGO_TYPE_RENDERER))
#define PANGO_CONTEXT_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), PANGO_TYPE_CONTEXT, \
	PangoContextClass))
#define PANGO_LAYOUT_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), PANGO_TYPE_LAYOUT, \
	PangoLayoutClass))
#define PANGO_RENDERER_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), PANGO_TYPE_RENDERER, \
	PangoRendererClass))
#define PANGO_PIXELS(d)	(((int)(d) + 512) >> 10)
#define pango_language_to_string(language)	((const char *)language)
#define PANGO_SCALE_XX_SMALL	((double)0.5787037037037)
#define PANGO_SCALE_X_SMALL	((double)0.6444444444444)
#define PANGO_SCALE_SMALL	((double)0.8333333333333)
#define PANGO_SCALE_MEDIUM	((double)1.0)
#define PANGO_SCALE_LARGE	((double)1.2)
#define PANGO_SCALE_X_LARGE	((double)1.4399999999999)
#define PANGO_SCALE_XX_LARGE	((double)1.728)
#if defined(PANGO_ENABLE_ENGINE) || defined(PANGO_ENABLE_BACKEND)
#define PANGO_GET_UNKNOWN_GLYPH(wc)	((PangoGlyph)(wc)|PANGO_GLYPH_UNKNOWN_FLAG)
#endif
#if defined(PANGO_ENABLE_ENGINE) || defined(PANGO_ENABLE_BACKEND)
#define PANGO_GLYPH_UNKNOWN_FLAG	((PangoGlyph)0x10000000)
#endif
#define PANGO_RBEARING(rect)	((rect).x + (rect).width)
#define PANGO_LBEARING(rect)	((rect).x)
#define PANGO_DESCENT(rect)	((rect).y + (rect).height)
#define PANGO_ASCENT(rect)	(-(rect).y)
#define PANGO_TYPE_ALIGNMENT	(pango_alignment_get_type())
#define PANGO_TYPE_ATTR_TYPE	(pango_attr_type_get_type())
#define PANGO_TYPE_CONTEXT	(pango_context_get_type ())
#define PANGO_TYPE_COVERAGE_LEVEL	(pango_coverage_level_get_type())
#define PANGO_TYPE_DIRECTION	(pango_direction_get_type())
#define PANGO_TYPE_ELLIPSIZE_MODE	(pango_ellipsize_mode_get_type())
#define PANGO_TYPE_FONTSET	(pango_fontset_get_type ())
#define PANGO_TYPE_FONT_DESCRIPTION	(pango_font_description_get_type ())
#define PANGO_TYPE_FONT_FACE	(pango_font_face_get_type ())
#define PANGO_TYPE_FONT_FAMILY	(pango_font_family_get_type ())
#define PANGO_TYPE_FONT	(pango_font_get_type ())
#define PANGO_TYPE_FONT_MAP	(pango_font_map_get_type ())
#define PANGO_TYPE_FONT_MASK	(pango_font_mask_get_type())
#define PANGO_TYPE_FONT_METRICS	(pango_font_metrics_get_type ())
#define PANGO_TYPE_GLYPH_STRING	(pango_glyph_string_get_type ())
#define PANGO_TYPE_LANGUAGE	(pango_language_get_type ())
#define PANGO_TYPE_LAYOUT	(pango_layout_get_type ())
#define PANGO_TYPE_LAYOUT_ITER	(pango_layout_iter_get_type ())
#define PANGO_TYPE_MATRIX	(pango_matrix_get_type ())
#define PANGO_TYPE_RENDERER	(pango_renderer_get_type())
#define PANGO_TYPE_RENDER_PART	(pango_render_part_get_type())
#define PANGO_TYPE_SCRIPT	(pango_script_get_type())
#define PANGO_TYPE_STRETCH	(pango_stretch_get_type())
#define PANGO_TYPE_STYLE	(pango_style_get_type())
#define PANGO_TYPE_TAB_ALIGN	(pango_tab_align_get_type())
#define PANGO_TYPE_TAB_ARRAY	(pango_tab_array_get_type ())
#define PANGO_TYPE_UNDERLINE	(pango_underline_get_type())
#define PANGO_TYPE_VARIANT	(pango_variant_get_type())
#define PANGO_TYPE_WEIGHT	(pango_weight_get_type())
#define PANGO_TYPE_WRAP_MODE	(pango_wrap_mode_get_type())
#define PANGO_SCALE	1024
#define PANGO_TYPE_ATTR_LIST	pango_attr_list_get_type ()
#define PANGO_TYPE_COLOR	pango_color_get_type ()
#define PANGO_MATRIX_INIT	{ 1., 0., 0., 1., 0., 0. }

typedef struct _PangoFontFace PangoFontFace;
typedef enum {
    PANGO_WRAP_WORD = 0,
    PANGO_WRAP_CHAR = 1,
    PANGO_WRAP_WORD_CHAR = 2
} PangoWrapMode;
typedef struct _PangoLayout PangoLayout;
typedef struct _PangoScriptIter PangoScriptIter;
typedef enum {
    PANGO_SCRIPT_INVALID_CODE = -1,
    PANGO_SCRIPT_COMMON = 0,
    PANGO_SCRIPT_INHERITED = 1,
    PANGO_SCRIPT_ARABIC = 2,
    PANGO_SCRIPT_ARMENIAN = 3,
    PANGO_SCRIPT_BENGALI = 4,
    PANGO_SCRIPT_BOPOMOFO = 5,
    PANGO_SCRIPT_CHEROKEE = 6,
    PANGO_SCRIPT_COPTIC = 7,
    PANGO_SCRIPT_CYRILLIC = 8,
    PANGO_SCRIPT_DESERET = 9,
    PANGO_SCRIPT_DEVANAGARI = 10,
    PANGO_SCRIPT_ETHIOPIC = 11,
    PANGO_SCRIPT_GEORGIAN = 12,
    PANGO_SCRIPT_GOTHIC = 13,
    PANGO_SCRIPT_GREEK = 14,
    PANGO_SCRIPT_GUJARATI = 15,
    PANGO_SCRIPT_GURMUKHI = 16,
    PANGO_SCRIPT_HAN = 17,
    PANGO_SCRIPT_HANGUL = 18,
    PANGO_SCRIPT_HEBREW = 19,
    PANGO_SCRIPT_HIRAGANA = 20,
    PANGO_SCRIPT_KANNADA = 21,
    PANGO_SCRIPT_KATAKANA = 22,
    PANGO_SCRIPT_KHMER = 23,
    PANGO_SCRIPT_LAO = 24,
    PANGO_SCRIPT_LATIN = 25,
    PANGO_SCRIPT_MALAYALAM = 26,
    PANGO_SCRIPT_MONGOLIAN = 27,
    PANGO_SCRIPT_MYANMAR = 28,
    PANGO_SCRIPT_OGHAM = 29,
    PANGO_SCRIPT_OLD_ITALIC = 30,
    PANGO_SCRIPT_ORIYA = 31,
    PANGO_SCRIPT_RUNIC = 32,
    PANGO_SCRIPT_SINHALA = 33,
    PANGO_SCRIPT_SYRIAC = 34,
    PANGO_SCRIPT_TAMIL = 35,
    PANGO_SCRIPT_TELUGU = 36,
    PANGO_SCRIPT_THAANA = 37,
    PANGO_SCRIPT_THAI = 38,
    PANGO_SCRIPT_TIBETAN = 39,
    PANGO_SCRIPT_CANADIAN_ABORIGINAL = 40,
    PANGO_SCRIPT_YI = 41,
    PANGO_SCRIPT_TAGALOG = 42,
    PANGO_SCRIPT_HANUNOO = 43,
    PANGO_SCRIPT_BUHID = 44,
    PANGO_SCRIPT_TAGBANWA = 45,
    PANGO_SCRIPT_BRAILLE = 46,
    PANGO_SCRIPT_CYPRIOT = 47,
    PANGO_SCRIPT_LIMBU = 48,
    PANGO_SCRIPT_OSMANYA = 49,
    PANGO_SCRIPT_SHAVIAN = 50,
    PANGO_SCRIPT_LINEAR_B = 51,
    PANGO_SCRIPT_TAI_LE = 52,
    PANGO_SCRIPT_UGARITIC = 53
} PangoScript;
typedef struct _PangoFont PangoFont;
typedef struct _PangoContext PangoContext;
typedef struct _PangoFontDescription PangoFontDescription;
typedef enum {
    PANGO_ATTR_INVALID = 0,
    PANGO_ATTR_LANGUAGE = 1,
    PANGO_ATTR_FAMILY = 2,
    PANGO_ATTR_STYLE = 3,
    PANGO_ATTR_WEIGHT = 4,
    PANGO_ATTR_VARIANT = 5,
    PANGO_ATTR_STRETCH = 6,
    PANGO_ATTR_SIZE = 7,
    PANGO_ATTR_FONT_DESC = 8,
    PANGO_ATTR_FOREGROUND = 9,
    PANGO_ATTR_BACKGROUND = 10,
    PANGO_ATTR_UNDERLINE = 11,
    PANGO_ATTR_STRIKETHROUGH = 12,
    PANGO_ATTR_RISE = 13,
    PANGO_ATTR_SHAPE = 14,
    PANGO_ATTR_SCALE = 15,
    PANGO_ATTR_FALLBACK = 16,
    PANGO_ATTR_LETTER_SPACING = 17,
    PANGO_ATTR_UNDERLINE_COLOR = 18,
    PANGO_ATTR_STRIKETHROUGH_COLOR = 19,
    PANGO_ATTR_ABSOLUTE_SIZE = 20
} PangoAttrType;
typedef struct _PangoAttribute {
    const PangoAttrClass *klass;
    guint start_index;
    guint end_index;
} PangoAttribute;
typedef struct _PangoAttrClass {
    PangoAttrType type;
    PangoAttribute *(*copy) (const PangoAttribute *);
    void (*destroy) (PangoAttribute *);
     gboolean(*equal) (const PangoAttribute *, const PangoAttribute *);
} PangoAttrClass;
typedef struct _PangoLanguage PangoLanguage;
typedef struct _PangoLogAttr {
    guint is_line_break:1;
    guint is_mandatory_break:1;
    guint is_char_break:1;
    guint is_white:1;
    guint is_cursor_position:1;
    guint is_word_start:1;
    guint is_word_end:1;
    guint is_sentence_boundary:1;
    guint is_sentence_start:1;
    guint is_sentence_end:1;
    guint backspace_deletes_character:1;
} PangoLogAttr;
typedef struct _PangoColor {
    guint16 red;
    guint16 green;
    guint16 blue;
} PangoColor;
typedef struct _PangoMatrix {
    double xx;
    double xy;
    double yx;
    double yy;
    double x0;
    double y0;
} PangoMatrix;
typedef struct _PangoEngineShape PangoEngineShape;
typedef struct _PangoEngineLang PangoEngineLang;
typedef struct _PangoAnalysis {
    PangoEngineShape *shape_engine;
    PangoEngineLang *lang_engine;
    PangoFont *font;
    guint8 level;
    PangoLanguage *language;
    GSList *extra_attrs;
} PangoAnalysis;
typedef struct _PangoItem {
    gint offset;
    gint length;
    gint num_chars;
    PangoAnalysis analysis;
} PangoItem;
typedef guint32 PangoGlyph;
typedef gint32 PangoGlyphUnit;
typedef struct _PangoGlyphGeometry {
    PangoGlyphUnit width;
    PangoGlyphUnit x_offset;
    PangoGlyphUnit y_offset;
} PangoGlyphGeometry;
typedef struct _PangoGlyphVisAttr {
    guint is_cluster_start:1;
} PangoGlyphVisAttr;
typedef struct _PangoGlyphInfo {
    PangoGlyph glyph;
    PangoGlyphGeometry geometry;
    PangoGlyphVisAttr attr;
} PangoGlyphInfo;
typedef struct _PangoGlyphString {
    gint num_glyphs;
    PangoGlyphInfo *glyphs;
    gint *log_clusters;
    gint space;
} PangoGlyphString;
typedef struct _PangoGlyphItem {
    PangoItem *item;
    PangoGlyphString *glyphs;
} PangoGlyphItem;
typedef PangoGlyphItem PangoLayoutRun;
typedef struct _PangoLayoutIter PangoLayoutIter;
typedef enum {
    PANGO_UNDERLINE_NONE = 0,
    PANGO_UNDERLINE_SINGLE = 1,
    PANGO_UNDERLINE_DOUBLE = 2,
    PANGO_UNDERLINE_LOW = 3,
    PANGO_UNDERLINE_ERROR = 4
} PangoUnderline;
typedef struct _PangoRendererPrivate PangoRendererPrivate;
typedef struct _PangoRenderer {
    GObject parent_instance;
    PangoUnderline underline;
    gboolean strikethrough;
    int active_count;
    PangoMatrix *matrix;
    PangoRendererPrivate *priv;
} PangoRenderer;
typedef enum {
    PANGO_RENDER_PART_FOREGROUND = 0,
    PANGO_RENDER_PART_BACKGROUND = 1,
    PANGO_RENDER_PART_UNDERLINE = 2,
    PANGO_RENDER_PART_STRIKETHROUGH = 3
} PangoRenderPart;
typedef struct _PangoAttrList PangoAttrList;
typedef struct _PangoLayoutLine {
    PangoLayout *layout;
    gint start_index;
    gint length;
    GSList *runs;
    guint is_paragraph_start:1;
    guint resolved_dir:3;
} PangoLayoutLine;
typedef enum {
    PANGO_STRETCH_ULTRA_CONDENSED = 0,
    PANGO_STRETCH_EXTRA_CONDENSED = 1,
    PANGO_STRETCH_CONDENSED = 2,
    PANGO_STRETCH_SEMI_CONDENSED = 3,
    PANGO_STRETCH_NORMAL = 4,
    PANGO_STRETCH_SEMI_EXPANDED = 5,
    PANGO_STRETCH_EXPANDED = 6,
    PANGO_STRETCH_EXTRA_EXPANDED = 7,
    PANGO_STRETCH_ULTRA_EXPANDED = 8
} PangoStretch;
typedef struct _PangoRectangle {
    int x;
    int y;
    int width;
    int height;
} PangoRectangle;
typedef struct _PangoFontFamily PangoFontFamily;
typedef struct _PangoFontMetrics PangoFontMetrics;
typedef struct _PangoTabArray PangoTabArray;
typedef enum {
    PANGO_TAB_LEFT = 0
} PangoTabAlign;
typedef enum {
    PANGO_ALIGN_LEFT = 0,
    PANGO_ALIGN_CENTER = 1,
    PANGO_ALIGN_RIGHT = 2
} PangoAlignment;
typedef struct _PangoAttrIterator PangoAttrIterator;
typedef enum {
    PANGO_FONT_MASK_FAMILY = 1,
    PANGO_FONT_MASK_STYLE = 2,
    PANGO_FONT_MASK_VARIANT = 4,
    PANGO_FONT_MASK_WEIGHT = 8,
    PANGO_FONT_MASK_STRETCH = 16,
    PANGO_FONT_MASK_SIZE = 32
} PangoFontMask;
typedef enum {
    PANGO_DIRECTION_LTR = 0,
    PANGO_DIRECTION_RTL = 1,
    PANGO_DIRECTION_TTB_LTR = 2,
    PANGO_DIRECTION_TTB_RTL = 3,
    PANGO_DIRECTION_WEAK_LTR = 4,
    PANGO_DIRECTION_WEAK_RTL = 5,
    PANGO_DIRECTION_NEUTRAL = 6
} PangoDirection;
typedef enum {
    PANGO_ELLIPSIZE_NONE = 0,
    PANGO_ELLIPSIZE_START = 1,
    PANGO_ELLIPSIZE_MIDDLE = 2,
    PANGO_ELLIPSIZE_END = 3
} PangoEllipsizeMode;
typedef struct _PangoCoverage PangoCoverage;
typedef enum {
    PANGO_STYLE_NORMAL = 0,
    PANGO_STYLE_OBLIQUE = 1,
    PANGO_STYLE_ITALIC = 2
} PangoStyle;
typedef enum {
    PANGO_COVERAGE_NONE = 0,
    PANGO_COVERAGE_FALLBACK = 1,
    PANGO_COVERAGE_APPROXIMATE = 2,
    PANGO_COVERAGE_EXACT = 3
} PangoCoverageLevel;
typedef struct _PangoFontMap PangoFontMap;
typedef gboolean(*PangoAttrFilterFunc) (PangoAttribute *, gpointer);
typedef struct _PangoFontset PangoFontset;
typedef enum {
    PANGO_WEIGHT_ULTRALIGHT = 200,
    PANGO_WEIGHT_LIGHT = 300,
    PANGO_WEIGHT_NORMAL = 400,
    PANGO_WEIGHT_SEMIBOLD = 600,
    PANGO_WEIGHT_BOLD = 700,
    PANGO_WEIGHT_ULTRABOLD = 800,
    PANGO_WEIGHT_HEAVY = 900
} PangoWeight;
typedef gboolean(*PangoFontsetForeachFunc) (PangoFontset *, PangoFont *,
					    gpointer);
typedef enum {
    PANGO_VARIANT_NORMAL = 0,
    PANGO_VARIANT_SMALL_CAPS = 1
} PangoVariant;
typedef gpointer(*PangoAttrDataCopyFunc) (gconstpointer);
typedef struct _PangoAttrShape {
    PangoAttribute attr;
    PangoRectangle ink_rect;
    PangoRectangle logical_rect;
    gpointer data;
    PangoAttrDataCopyFunc copy_func;
    GDestroyNotify destroy_func;
} PangoAttrShape;
typedef struct _PangoContextClass PangoContextClass;
typedef struct _PangoAttrString {
    PangoAttribute attr;
    char *value;
} PangoAttrString;
typedef struct _PangoAttrColor {
    PangoAttribute attr;
    PangoColor color;
} PangoAttrColor;
typedef struct _PangoAttrFontDesc {
    PangoAttribute attr;
    PangoFontDescription *desc;
} PangoAttrFontDesc;
typedef struct _PangoAttrFloat {
    PangoAttribute attr;
    double value;
} PangoAttrFloat;
typedef struct _PangoRendererClass {
    GObjectClass parent_class;
    void (*draw_glyphs) (PangoRenderer *, PangoFont *, PangoGlyphString *,
			 int, int);
    void (*draw_rectangle) (PangoRenderer *, PangoRenderPart, int, int,
			    int, int);
    void (*draw_error_underline) (PangoRenderer *, int, int, int, int);
    void (*draw_shape) (PangoRenderer *, PangoAttrShape *, int, int);
    void (*draw_trapezoid) (PangoRenderer *, PangoRenderPart, double,
			    double, double, double, double, double);
    void (*draw_glyph) (PangoRenderer *, PangoFont *, PangoGlyph, double,
			double);
    void (*part_changed) (PangoRenderer *, PangoRenderPart);
    void (*begin) (PangoRenderer *);
    void (*end) (PangoRenderer *);
    void (*prepare_run) (PangoRenderer *, PangoLayoutRun *);
    void (*_pango_reserved1) (void);
    void (*_pango_reserved2) (void);
    void (*_pango_reserved3) (void);
    void (*_pango_reserved4) (void);
} PangoRendererClass;
typedef struct _PangoAttrLanguage {
    PangoAttribute attr;
    PangoLanguage *value;
} PangoAttrLanguage;
typedef struct _PangoAttrInt {
    PangoAttribute attr;
    int value;
} PangoAttrInt;
typedef struct _PangoAttrSize {
    PangoAttribute attr;
    int size;
    guint absolute:1;
} PangoAttrSize;
typedef struct _PangoLayoutClass PangoLayoutClass;
extern GType pango_script_get_type(void);
extern const char *pango_font_face_get_face_name(PangoFontFace *);
extern PangoWrapMode pango_layout_get_wrap(PangoLayout *);
extern void pango_layout_context_changed(PangoLayout *);
extern gboolean pango_script_iter_next(PangoScriptIter *);
extern PangoScript pango_script_for_unichar(gunichar);
extern PangoFont *pango_context_load_font(PangoContext *,
					  const PangoFontDescription *);
extern gboolean pango_attribute_equal(const PangoAttribute *,
				      const PangoAttribute *);
extern void pango_get_log_attrs(const char *, int, int, PangoLanguage *,
				PangoLogAttr *, int);
extern gboolean pango_color_parse(PangoColor *, const char *);
extern gboolean pango_font_description_equal(const PangoFontDescription *,
					     const PangoFontDescription *);
extern PangoAttribute *pango_attr_rise_new(int);
extern void pango_matrix_translate(PangoMatrix *, double, double);
extern PangoLayoutRun *pango_layout_iter_get_run(PangoLayoutIter *);
extern PangoLayout *pango_layout_new(PangoContext *);
extern PangoAttribute *pango_attr_size_new(int);
extern PangoAttribute *pango_attr_family_new(const char *);
extern void pango_layout_set_markup_with_accel(PangoLayout *, const char *,
					       int, gunichar, gunichar *);
extern PangoLanguage *pango_script_get_sample_language(PangoScript);
extern void pango_renderer_draw_trapezoid(PangoRenderer *, PangoRenderPart,
					  double, double, double, double,
					  double, double);
extern void pango_attr_list_insert_before(PangoAttrList *,
					  PangoAttribute *);
extern PangoAttribute *pango_attr_underline_new(PangoUnderline);
extern void pango_layout_line_unref(PangoLayoutLine *);
extern void pango_glyph_string_get_logical_widths(PangoGlyphString *,
						  const char *, int, int,
						  int *);
extern PangoStretch pango_font_description_get_stretch(const
						       PangoFontDescription
						       *);
extern void pango_layout_iter_get_char_extents(PangoLayoutIter *,
					       PangoRectangle *);
extern PangoAttribute *pango_attr_scale_new(double);
extern void pango_layout_set_width(PangoLayout *, int);
extern void pango_layout_line_index_to_x(PangoLayoutLine *, int, int,
					 int *);
extern gboolean pango_font_family_is_monospace(PangoFontFamily *);
extern void pango_font_descriptions_free(PangoFontDescription * *, int);
extern void pango_layout_set_single_paragraph_mode(PangoLayout *,
						   gboolean);
extern char *pango_font_description_to_filename(const PangoFontDescription
						*);
extern PangoLayout *pango_layout_copy(PangoLayout *);
extern int pango_font_metrics_get_approximate_char_width(PangoFontMetrics
							 *);
extern void pango_shape(const gchar *, gint, PangoAnalysis *,
			PangoGlyphString *);
extern void pango_layout_line_get_pixel_extents(PangoLayoutLine *,
						PangoRectangle *,
						PangoRectangle *);
extern void pango_layout_set_wrap(PangoLayout *, PangoWrapMode);
extern const char *pango_font_description_get_family(const
						     PangoFontDescription
						     *);
extern void pango_tab_array_get_tabs(PangoTabArray *, PangoTabAlign * *,
				     gint * *);
extern void pango_script_iter_get_range(PangoScriptIter *, const char **,
					const char **, PangoScript *);
extern gboolean pango_layout_iter_next_line(PangoLayoutIter *);
extern void pango_layout_get_log_attrs(PangoLayout *, PangoLogAttr * *,
				       gint *);
extern void pango_tab_array_free(PangoTabArray *);
extern PangoTabArray *pango_layout_get_tabs(PangoLayout *);
extern PangoFontDescription *pango_font_describe(PangoFont *);
extern void pango_context_set_font_description(PangoContext *,
					       const PangoFontDescription
					       *);
extern gint pango_tab_array_get_size(PangoTabArray *);
extern PangoAlignment pango_layout_get_alignment(PangoLayout *);
extern const PangoMatrix *pango_renderer_get_matrix(PangoRenderer *);
extern PangoAttrIterator *pango_attr_iterator_copy(PangoAttrIterator *);
extern GType pango_style_get_type(void);
extern PangoFontMask pango_font_description_get_set_fields(const
							   PangoFontDescription
							   *);
extern gboolean pango_language_matches(PangoLanguage *, const char *);
extern int pango_font_metrics_get_descent(PangoFontMetrics *);
extern void pango_layout_get_extents(PangoLayout *, PangoRectangle *,
				     PangoRectangle *);
extern char *pango_font_description_to_string(const PangoFontDescription
					      *);
extern void pango_layout_set_justify(PangoLayout *, gboolean);
extern void pango_find_paragraph_boundary(const gchar *, gint, gint *,
					  gint *);
extern PangoDirection pango_unichar_direction(gunichar);
extern GList *pango_reorder_items(GList *);
extern void pango_glyph_string_set_size(PangoGlyphString *, gint);
extern PangoFontDescription *pango_font_description_from_string(const char
								*);
extern int pango_font_metrics_get_strikethrough_position(PangoFontMetrics
							 *);
extern PangoEngineShape *pango_font_find_shaper(PangoFont *,
						PangoLanguage *, guint32);
extern GType pango_glyph_string_get_type(void);
extern PangoEllipsizeMode pango_layout_get_ellipsize(PangoLayout *);
extern PangoFontDescription *pango_font_face_describe(PangoFontFace *);
extern PangoMatrix *pango_matrix_copy(const PangoMatrix *);
extern const PangoMatrix *pango_context_get_matrix(PangoContext *);
extern void pango_attr_iterator_range(PangoAttrIterator *, gint *, gint *);
extern void pango_context_set_language(PangoContext *, PangoLanguage *);
extern void pango_glyph_item_letter_space(PangoGlyphItem *, const char *,
					  PangoLogAttr *, int);
extern void pango_coverage_max(PangoCoverage *, PangoCoverage *);
extern PangoStyle pango_font_description_get_style(const
						   PangoFontDescription *);
extern void pango_layout_line_get_extents(PangoLayoutLine *,
					  PangoRectangle *,
					  PangoRectangle *);
extern void pango_attribute_destroy(PangoAttribute *);
extern PangoLayoutLine *pango_layout_get_line(PangoLayout *, int);
extern gboolean pango_layout_get_auto_dir(PangoLayout *);
extern int pango_font_metrics_get_approximate_digit_width(PangoFontMetrics
							  *);
extern void pango_attr_list_splice(PangoAttrList *, PangoAttrList *, gint,
				   gint);
extern PangoLayoutLine *pango_layout_iter_get_line(PangoLayoutIter *);
extern PangoFontDescription *pango_font_description_new(void);
extern PangoAttribute *pango_attr_font_desc_new(const PangoFontDescription
						*);
extern PangoFontDescription *pango_font_description_copy_static(const
								PangoFontDescription
								*);
extern void pango_font_metrics_unref(PangoFontMetrics *);
extern PangoDirection pango_find_base_dir(const gchar *, gint);
extern void pango_layout_iter_get_run_extents(PangoLayoutIter *,
					      PangoRectangle *,
					      PangoRectangle *);
extern void pango_layout_index_to_pos(PangoLayout *, int,
				      PangoRectangle *);
extern const char *pango_font_family_get_name(PangoFontFamily *);
extern void pango_layout_line_get_x_ranges(PangoLayoutLine *, int, int,
					   int **, int *);
extern void pango_item_free(PangoItem *);
extern GType pango_renderer_get_type(void);
extern void pango_layout_set_indent(PangoLayout *, int);
extern void pango_layout_set_text(PangoLayout *, const char *, int);
extern gint pango_font_description_get_size(const PangoFontDescription *);
extern GType pango_fontset_get_type(void);
extern GType pango_weight_get_type(void);
extern guint pango_font_description_hash(const PangoFontDescription *);
extern void pango_renderer_activate(PangoRenderer *);
extern PangoContext *pango_layout_get_context(PangoLayout *);
extern PangoCoverage *pango_coverage_new(void);
extern PangoAttribute *pango_attr_strikethrough_new(gboolean);
extern void pango_coverage_set(PangoCoverage *, int, PangoCoverageLevel);
extern PangoFont *pango_font_map_load_font(PangoFontMap *, PangoContext *,
					   const PangoFontDescription *);
extern int pango_layout_iter_get_baseline(PangoLayoutIter *);
extern gboolean pango_font_description_better_match(const
						    PangoFontDescription *,
						    const
						    PangoFontDescription *,
						    const
						    PangoFontDescription
						    *);
extern void pango_layout_iter_get_line_extents(PangoLayoutIter *,
					       PangoRectangle *,
					       PangoRectangle *);
extern PangoItem *pango_item_new(void);
extern GType pango_font_mask_get_type(void);
extern void pango_tab_array_get_tab(PangoTabArray *, gint, PangoTabAlign *,
				    gint *);
extern gboolean pango_attr_iterator_next(PangoAttrIterator *);
extern gboolean pango_layout_get_justify(PangoLayout *);
extern PangoCoverage *pango_coverage_ref(PangoCoverage *);
extern PangoAttribute *pango_attr_foreground_new(guint16, guint16,
						 guint16);
extern PangoAttrList *pango_attr_list_filter(PangoAttrList *,
					     PangoAttrFilterFunc,
					     gpointer);
extern PangoFontDescription
    *pango_context_get_font_description(PangoContext *);
extern PangoTabArray *pango_tab_array_new_with_positions(gint, gboolean,
							 PangoTabAlign,
							 gint, ...);
extern GSList *pango_glyph_item_apply_attrs(PangoGlyphItem *, const char *,
					    PangoAttrList *);
extern PangoAttribute *pango_attr_shape_new(const PangoRectangle *,
					    const PangoRectangle *);
extern GType pango_variant_get_type(void);
extern void pango_layout_set_spacing(PangoLayout *, int);
extern PangoAttrList *pango_attr_list_ref(PangoAttrList *);
extern void pango_font_description_set_family_static(PangoFontDescription
						     *, const char *);
extern gboolean pango_layout_iter_next_char(PangoLayoutIter *);
extern void pango_glyph_string_index_to_x(PangoGlyphString *, char *, int,
					  PangoAnalysis *, int, gboolean,
					  int *);
extern PangoAttribute *pango_attr_stretch_new(PangoStretch);
extern GType pango_attr_type_get_type(void);
extern GType pango_language_get_type(void);
extern void pango_font_get_glyph_extents(PangoFont *, PangoGlyph,
					 PangoRectangle *,
					 PangoRectangle *);
extern PangoAttribute *pango_attr_fallback_new(gboolean);
extern void pango_font_description_merge_static(PangoFontDescription *,
						const PangoFontDescription
						*, gboolean);
extern PangoAttrList *pango_layout_get_attributes(PangoLayout *);
extern PangoFontset *pango_font_map_load_fontset(PangoFontMap *,
						 PangoContext *,
						 const PangoFontDescription
						 *, PangoLanguage *);
extern void pango_layout_set_tabs(PangoLayout *, PangoTabArray *);
extern GType pango_attr_list_get_type(void);
extern GType pango_font_family_get_type(void);
extern void pango_matrix_free(PangoMatrix *);
extern PangoAttribute *pango_attr_language_new(PangoLanguage *);
extern void pango_layout_iter_get_cluster_extents(PangoLayoutIter *,
						  PangoRectangle *,
						  PangoRectangle *);
extern PangoAttrType pango_attr_type_register(const gchar *);
extern void pango_context_set_matrix(PangoContext *, const PangoMatrix *);
extern void pango_layout_set_markup(PangoLayout *, const char *, int);
extern GType pango_coverage_level_get_type(void);
extern PangoTabArray *pango_tab_array_copy(PangoTabArray *);
extern void pango_attr_list_change(PangoAttrList *, PangoAttribute *);
extern PangoColor *pango_renderer_get_color(PangoRenderer *,
					    PangoRenderPart);
extern void pango_renderer_part_changed(PangoRenderer *, PangoRenderPart);
extern void pango_glyph_string_x_to_index(PangoGlyphString *, char *, int,
					  PangoAnalysis *, int, int *,
					  gboolean *);
extern void pango_tab_array_resize(PangoTabArray *, gint);
extern void pango_break(const gchar *, gint, PangoAnalysis *,
			PangoLogAttr *, int);
extern void pango_coverage_unref(PangoCoverage *);
extern void pango_font_map_list_families(PangoFontMap *,
					 PangoFontFamily * **, int *);
extern void pango_matrix_concat(PangoMatrix *, const PangoMatrix *);
extern PangoAttrList *pango_attr_list_copy(PangoAttrList *);
extern GType pango_layout_iter_get_type(void);
extern void pango_layout_set_attributes(PangoLayout *, PangoAttrList *);
extern void pango_color_free(PangoColor *);
extern PangoItem *pango_item_copy(PangoItem *);
extern void pango_font_description_set_weight(PangoFontDescription *,
					      PangoWeight);
extern PangoAttribute *pango_attr_letter_spacing_new(int);
extern PangoLanguage *pango_language_from_string(const char *);
extern PangoAttribute *pango_attr_strikethrough_color_new(guint16, guint16,
							  guint16);
extern void pango_attr_list_insert(PangoAttrList *, PangoAttribute *);
extern gboolean pango_layout_line_x_to_index(PangoLayoutLine *, int, int *,
					     int *);
extern PangoFontMap *pango_context_get_font_map(PangoContext *);
extern GType pango_direction_get_type(void);
extern void pango_layout_iter_get_layout_extents(PangoLayoutIter *,
						 PangoRectangle *,
						 PangoRectangle *);
extern void pango_glyph_string_free(PangoGlyphString *);
extern gboolean pango_tab_array_get_positions_in_pixels(PangoTabArray *);
extern PangoFontMetrics *pango_fontset_get_metrics(PangoFontset *);
extern int pango_layout_iter_get_index(PangoLayoutIter *);
extern int pango_layout_get_spacing(PangoLayout *);
extern gboolean pango_layout_get_single_paragraph_mode(PangoLayout *);
extern GSList *pango_layout_get_lines(PangoLayout *);
extern GType pango_underline_get_type(void);
extern void pango_layout_get_pixel_extents(PangoLayout *, PangoRectangle *,
					   PangoRectangle *);
extern void pango_matrix_scale(PangoMatrix *, double, double);
extern void pango_attr_iterator_destroy(PangoAttrIterator *);
extern void pango_glyph_string_extents(PangoGlyphString *, PangoFont *,
				       PangoRectangle *, PangoRectangle *);
extern PangoTabArray *pango_tab_array_new(gint, gboolean);
extern PangoAttribute *pango_attr_weight_new(PangoWeight);
extern int pango_layout_get_width(PangoLayout *);
extern gboolean pango_parse_markup(const char *, int, gunichar,
				   PangoAttrList * *, char **, gunichar *,
				   GError * *);
extern void pango_matrix_rotate(PangoMatrix *, double);
extern void pango_font_description_set_style(PangoFontDescription *,
					     PangoStyle);
extern void pango_layout_set_auto_dir(PangoLayout *, gboolean);
extern GType pango_context_get_type(void);
extern PangoAttribute *pango_attr_background_new(guint16, guint16,
						 guint16);
extern void pango_coverage_to_bytes(PangoCoverage *, guchar * *, int *);
extern void pango_font_description_set_size(PangoFontDescription *, gint);
extern void pango_attr_list_unref(PangoAttrList *);
extern int pango_font_metrics_get_strikethrough_thickness(PangoFontMetrics
							  *);
extern PangoAttribute *pango_attr_size_new_absolute(int);
extern PangoAttribute *pango_attribute_copy(const PangoAttribute *);
extern PangoAttribute *pango_attr_iterator_get(PangoAttrIterator *,
					       PangoAttrType);
extern GType pango_matrix_get_type(void);
extern PangoDirection pango_context_get_base_dir(PangoContext *);
extern PangoAttribute *pango_attr_style_new(PangoStyle);
extern void pango_attr_iterator_get_font(PangoAttrIterator *,
					 PangoFontDescription *,
					 PangoLanguage * *, GSList * *);
extern void pango_renderer_draw_glyph(PangoRenderer *, PangoFont *,
				      PangoGlyph, double, double);
extern void pango_glyph_item_free(PangoGlyphItem *);
extern gboolean pango_language_includes_script(PangoLanguage *,
					       PangoScript);
extern gboolean pango_font_description_get_size_is_absolute(const
							    PangoFontDescription
							    *);
extern GSList *pango_attr_iterator_get_attrs(PangoAttrIterator *);
extern GType pango_ellipsize_mode_get_type(void);
extern void pango_font_face_list_sizes(PangoFontFace *, int **, int *);
extern void pango_layout_get_size(PangoLayout *, int *, int *);
extern void pango_renderer_draw_glyphs(PangoRenderer *, PangoFont *,
				       PangoGlyphString *, int, int);
extern GType pango_tab_array_get_type(void);
extern PangoGlyphItem *pango_glyph_item_split(PangoGlyphItem *,
					      const char *, int);
extern PangoLayoutIter *pango_layout_get_iter(PangoLayout *);
extern PangoGlyphString *pango_glyph_string_new(void);
extern gboolean pango_layout_iter_next_run(PangoLayoutIter *);
extern void pango_glyph_string_extents_range(PangoGlyphString *, int, int,
					     PangoFont *, PangoRectangle *,
					     PangoRectangle *);
extern PangoWeight pango_font_description_get_weight(const
						     PangoFontDescription
						     *);
extern GType pango_font_description_get_type(void);
extern void pango_renderer_deactivate(PangoRenderer *);
extern PangoGlyphString *pango_glyph_string_copy(PangoGlyphString *);
extern void pango_script_iter_free(PangoScriptIter *);
extern PangoCoverage *pango_coverage_from_bytes(guchar *, int);
extern void pango_layout_iter_get_line_yrange(PangoLayoutIter *, int *,
					      int *);
extern GType pango_stretch_get_type(void);
extern int pango_layout_get_line_count(PangoLayout *);
extern void pango_layout_set_ellipsize(PangoLayout *, PangoEllipsizeMode);
extern PangoCoverage *pango_font_get_coverage(PangoFont *,
					      PangoLanguage *);
extern PangoFontDescription *pango_font_description_copy(const
							 PangoFontDescription
							 *);
extern void pango_fontset_foreach(PangoFontset *, PangoFontsetForeachFunc,
				  gpointer);
extern GType pango_font_get_type(void);
extern void pango_layout_set_alignment(PangoLayout *, PangoAlignment);
extern GType pango_layout_get_type(void);
extern void pango_renderer_draw_layout_line(PangoRenderer *,
					    PangoLayoutLine *, int, int);
extern GType pango_alignment_get_type(void);
extern void pango_renderer_draw_rectangle(PangoRenderer *, PangoRenderPart,
					  int, int, int, int);
extern void pango_context_list_families(PangoContext *,
					PangoFontFamily * **, int *);
extern void pango_font_description_set_absolute_size(PangoFontDescription
						     *, double);
extern void pango_layout_iter_free(PangoLayoutIter *);
extern PangoCoverageLevel pango_coverage_get(PangoCoverage *, int);
extern void pango_renderer_draw_error_underline(PangoRenderer *, int, int,
						int, int);
extern PangoFontset *pango_context_load_fontset(PangoContext *,
						const PangoFontDescription
						*, PangoLanguage *);
extern PangoLayoutLine *pango_layout_line_ref(PangoLayoutLine *);
extern void pango_font_description_set_family(PangoFontDescription *,
					      const char *);
extern gboolean pango_layout_iter_at_last_line(PangoLayoutIter *);
extern GType pango_render_part_get_type(void);
extern PangoAttrList *pango_attr_list_new(void);
extern void pango_font_description_set_stretch(PangoFontDescription *,
					       PangoStretch);
extern void pango_font_description_merge(PangoFontDescription *,
					 const PangoFontDescription *,
					 gboolean);
extern int pango_font_metrics_get_underline_thickness(PangoFontMetrics *);
extern const char *pango_layout_get_text(PangoLayout *);
extern int pango_font_metrics_get_ascent(PangoFontMetrics *);
extern PangoFont *pango_fontset_get_font(PangoFontset *, guint);
extern void pango_renderer_draw_layout(PangoRenderer *, PangoLayout *, int,
				       int);
extern int pango_font_metrics_get_underline_position(PangoFontMetrics *);
extern GType pango_color_get_type(void);
extern PangoFontMetrics *pango_context_get_metrics(PangoContext *,
						   const
						   PangoFontDescription *,
						   PangoLanguage *);
extern gboolean pango_layout_xy_to_index(PangoLayout *, int, int, int *,
					 gint *);
extern void pango_renderer_set_matrix(PangoRenderer *,
				      const PangoMatrix *);
extern void pango_font_description_set_variant(PangoFontDescription *,
					       PangoVariant);
extern GList *pango_itemize(PangoContext *, const char *, int, int,
			    PangoAttrList *, PangoAttrIterator *);
extern void pango_layout_move_cursor_visually(PangoLayout *, gboolean, int,
					      int, int, int *, int *);
extern int pango_layout_get_indent(PangoLayout *);
extern PangoAttrIterator *pango_attr_list_get_iterator(PangoAttrList *);
extern void pango_layout_get_pixel_size(PangoLayout *, int *, int *);
extern void pango_font_description_unset_fields(PangoFontDescription *,
						PangoFontMask);
extern GType pango_tab_align_get_type(void);
extern PangoItem *pango_item_split(PangoItem *, int, int);
extern PangoFontMetrics *pango_font_metrics_ref(PangoFontMetrics *);
extern void pango_context_set_base_dir(PangoContext *, PangoDirection);
extern PangoAttribute *pango_attr_underline_color_new(guint16, guint16,
						      guint16);
extern gboolean pango_layout_iter_next_cluster(PangoLayoutIter *);
extern PangoAttribute *pango_attr_variant_new(PangoVariant);
extern GType pango_font_face_get_type(void);
extern void pango_font_family_list_faces(PangoFontFamily *,
					 PangoFontFace * **, int *);
extern PangoColor *pango_color_copy(const PangoColor *);
extern GType pango_wrap_mode_get_type(void);
extern void pango_tab_array_set_tab(PangoTabArray *, gint, PangoTabAlign,
				    gint);
extern PangoAttribute *pango_attr_shape_new_with_data(const PangoRectangle
						      *,
						      const PangoRectangle
						      *, gpointer,
						      PangoAttrDataCopyFunc,
						      GDestroyNotify);
extern PangoVariant pango_font_description_get_variant(const
						       PangoFontDescription
						       *);
extern void pango_font_description_free(PangoFontDescription *);
extern GType pango_font_metrics_get_type(void);
extern void pango_layout_get_cursor_pos(PangoLayout *, int,
					PangoRectangle *,
					PangoRectangle *);
extern GList *pango_itemize_with_base_dir(PangoContext *, PangoDirection,
					  const char *, int, int,
					  PangoAttrList *,
					  PangoAttrIterator *);
extern PangoLanguage *pango_context_get_language(PangoContext *);
extern void pango_renderer_set_color(PangoRenderer *, PangoRenderPart,
				     const PangoColor *);
extern GType pango_font_map_get_type(void);
extern const PangoFontDescription
    *pango_layout_get_font_description(PangoLayout *);
extern void pango_layout_set_font_description(PangoLayout *,
					      const PangoFontDescription
					      *);
extern PangoFontMetrics *pango_font_get_metrics(PangoFont *,
						PangoLanguage *);
extern PangoScriptIter *pango_script_iter_new(const char *, int);
extern PangoFontMap *pango_font_get_font_map(PangoFont *);
</SCREEN>
</SECT2>
</SECT1>
<!-- End of text generated from database -->

<!-- Start of generated text - do not edit! -->
<!-- generated from the LSB specification database by mklibspec -->
<SECT1 ID=libpangocairo-1.0>
<TITLE>Interfaces for libpangocairo-1.0</TITLE>
<PARA>
<XREF LINKEND="lib-libpangocairo-1.0-def"> defines the library name and shared object name
for the libpangocairo-1.0 library
</PARA>
<TABLE id="lib-libpangocairo-1.0-def">
<TITLE>libpangocairo-1.0 Definition</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Library:</ENTRY>
<ENTRY>libpangocairo-1.0</ENTRY>
</ROW>
<ROW>
<ENTRY>SONAME:</ENTRY>
<ENTRY>libpangocairo-1.0.so.0</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The behavior of the interfaces in this library is specified by the following specifications:<SIMPLELIST COLUMNS=1>
<MEMBER ID='REFSTD.libpangocairo.1.0.1'>
[Pango 1.10] <XREF LINKEND="std.Pango.1.10">
</MEMBER>
</SIMPLELIST>
</PARA>
<!-- debug: database interface name Pango Cairo Rendering -->
<SECT2>
<!--libgroup-->
<TITLE>Pango Cairo Rendering</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Interfaces for Pango Cairo Rendering</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic functions
for Pango Cairo Rendering specified in <XREF linkend="tbl-libpangocairo-1.0-pango-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<TABLE id="tbl-libpangocairo-1.0-pango-ints">
<TITLE>libpangocairo-1.0 - Pango Cairo Rendering Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>pango_cairo_context_get_font_options</primary></indexterm>pango_cairo_context_get_font_options <LINK LINKEND="REFSTD.libpangocairo.1.0.1">[Pango 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_cairo_context_get_resolution</primary></indexterm>pango_cairo_context_get_resolution <LINK LINKEND="REFSTD.libpangocairo.1.0.1">[Pango 1.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_cairo_context_set_font_options</primary></indexterm>pango_cairo_context_set_font_options <LINK LINKEND="REFSTD.libpangocairo.1.0.1">[Pango 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_cairo_context_set_resolution</primary></indexterm>pango_cairo_context_set_resolution <LINK LINKEND="REFSTD.libpangocairo.1.0.1">[Pango 1.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_cairo_create_layout</primary></indexterm>pango_cairo_create_layout <LINK LINKEND="REFSTD.libpangocairo.1.0.1">[Pango 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_cairo_font_map_create_context</primary></indexterm>pango_cairo_font_map_create_context <LINK LINKEND="REFSTD.libpangocairo.1.0.1">[Pango 1.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_cairo_font_map_get_default</primary></indexterm>pango_cairo_font_map_get_default <LINK LINKEND="REFSTD.libpangocairo.1.0.1">[Pango 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_cairo_font_map_get_resolution</primary></indexterm>pango_cairo_font_map_get_resolution <LINK LINKEND="REFSTD.libpangocairo.1.0.1">[Pango 1.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_cairo_font_map_new</primary></indexterm>pango_cairo_font_map_new <LINK LINKEND="REFSTD.libpangocairo.1.0.1">[Pango 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_cairo_font_map_set_resolution</primary></indexterm>pango_cairo_font_map_set_resolution <LINK LINKEND="REFSTD.libpangocairo.1.0.1">[Pango 1.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_cairo_glyph_string_path</primary></indexterm>pango_cairo_glyph_string_path <LINK LINKEND="REFSTD.libpangocairo.1.0.1">[Pango 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_cairo_layout_line_path</primary></indexterm>pango_cairo_layout_line_path <LINK LINKEND="REFSTD.libpangocairo.1.0.1">[Pango 1.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_cairo_layout_path</primary></indexterm>pango_cairo_layout_path <LINK LINKEND="REFSTD.libpangocairo.1.0.1">[Pango 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_cairo_show_glyph_string</primary></indexterm>pango_cairo_show_glyph_string <LINK LINKEND="REFSTD.libpangocairo.1.0.1">[Pango 1.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_cairo_show_layout</primary></indexterm>pango_cairo_show_layout <LINK LINKEND="REFSTD.libpangocairo.1.0.1">[Pango 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_cairo_show_layout_line</primary></indexterm>pango_cairo_show_layout_line <LINK LINKEND="REFSTD.libpangocairo.1.0.1">[Pango 1.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_cairo_update_context</primary></indexterm>pango_cairo_update_context <LINK LINKEND="REFSTD.libpangocairo.1.0.1">[Pango 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_cairo_update_layout</primary></indexterm>pango_cairo_update_layout <LINK LINKEND="REFSTD.libpangocairo.1.0.1">[Pango 1.10]</LINK></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>
</SECT2>
</SECT1>
<SECT1 ID=libpangocairo-1.0-ddefs>
<TITLE>Data Definitions for libpangocairo-1.0</TITLE>
<PARA>
This section defines global identifiers and their values that are associated
with interfaces contained in libpangocairo-1.0.
These definitions are organized into groups that
correspond to system headers. This convention is used as a
convenience for the reader, and does not imply the existence
of these headers, or their content.
Where an interface is defined as requiring a particular system header file
all of the data definitions for that system header file presented here shall be in effect.
</PARA>
<PARA>
This section gives data definitions to promote binary application
portability, not to repeat source interface definitions available
elsewhere. System providers and application developers should use this ABI
to supplement - not to replace - source interface definition specifications.
</PARA>
<PARA>
This specification uses the <XREF LINKEND='std.ISOC99'> C Language as the reference programming language, and data definitions are specified in ISO C format. The C language is used here as a convenient notation. Using a C language description of these data objects does not preclude their use by other programming languages.</PARA>
<SECT2>
<TITLE>pango-1.0/pango/pangocairo.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define PANGO_CAIRO_FONT_MAP(object)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((object), PANGO_TYPE_CAIRO_FONT_MAP, \
	PangoCairoFontMap))
#define PANGO_IS_CAIRO_FONT_MAP(object)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((object), PANGO_TYPE_CAIRO_FONT_MAP))
#define PANGO_TYPE_CAIRO_FONT_MAP	(pango_cairo_font_map_get_type ())

typedef struct _PangoCairoFont PangoCairoFont;
typedef struct _PangoCairoFontMap PangoCairoFontMap;
extern PangoFontMap *pango_cairo_font_map_new(void);
extern PangoFontMap *pango_cairo_font_map_get_default(void);
extern void pango_cairo_font_map_set_resolution(PangoCairoFontMap *,
						double);
extern double pango_cairo_font_map_get_resolution(PangoCairoFontMap *);
extern PangoContext *pango_cairo_font_map_create_context(PangoCairoFontMap
							 *);
extern void pango_cairo_update_context(cairo_t *, PangoContext *);
extern void pango_cairo_context_set_font_options(PangoContext *,
						 const cairo_font_options_t
						 *);
extern const cairo_font_options_t
    *pango_cairo_context_get_font_options(PangoContext *);
extern void pango_cairo_context_set_resolution(PangoContext *, double);
extern double pango_cairo_context_get_resolution(PangoContext *);
extern PangoLayout *pango_cairo_create_layout(cairo_t *);
extern void pango_cairo_update_layout(cairo_t *, PangoLayout *);
extern void pango_cairo_show_glyph_string(cairo_t *, PangoFont *,
					  PangoGlyphString *);
extern void pango_cairo_show_layout_line(cairo_t *, PangoLayoutLine *);
extern void pango_cairo_show_layout(cairo_t *, PangoLayout *);
extern void pango_cairo_glyph_string_path(cairo_t *, PangoFont *,
					  PangoGlyphString *);
extern void pango_cairo_layout_line_path(cairo_t *, PangoLayoutLine *);
extern void pango_cairo_layout_path(cairo_t *, PangoLayout *);
</SCREEN>
</SECT2>
</SECT1>
<!-- End of text generated from database -->

<!-- Start of generated text - do not edit! -->
<!-- generated from the LSB specification database by mklibspec -->
<SECT1 ID=libpangoxft-1.0>
<TITLE>Interfaces for libpangoxft-1.0</TITLE>
<PARA>
<XREF LINKEND="lib-libpangoxft-1.0-def"> defines the library name and shared object name
for the libpangoxft-1.0 library
</PARA>
<TABLE id="lib-libpangoxft-1.0-def">
<TITLE>libpangoxft-1.0 Definition</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Library:</ENTRY>
<ENTRY>libpangoxft-1.0</ENTRY>
</ROW>
<ROW>
<ENTRY>SONAME:</ENTRY>
<ENTRY>libpangoxft-1.0.so.0</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The behavior of the interfaces in this library is specified by the following specifications:<SIMPLELIST COLUMNS=1>
<MEMBER ID='REFSTD.libpangoxft.1.0.1'>
[Gobject 2.8] <XREF LINKEND="std.Gobject.2.8">
</MEMBER>
<MEMBER ID='REFSTD.libpangoxft.1.0.2'>
[Pango 1.10] <XREF LINKEND="std.Pango.1.10">
</MEMBER>
</SIMPLELIST>
</PARA>
<!-- debug: database interface name Pango Xft Fonts and Rendering library -->
<SECT2>
<!--libgroup-->
<TITLE>Pango Xft Fonts and Rendering library</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Interfaces for Pango Xft Fonts and Rendering library</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic functions
for Pango Xft Fonts and Rendering library specified in <XREF linkend="tbl-libpangoxft-1.0-pango-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<TABLE id="tbl-libpangoxft-1.0-pango-ints">
<TITLE>libpangoxft-1.0 - Pango Xft Fonts and Rendering library Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>pango_xft_font_get_type</primary></indexterm>pango_xft_font_get_type <LINK LINKEND="REFSTD.libpangoxft.1.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_xft_font_map_get_type</primary></indexterm>pango_xft_font_map_get_type <LINK LINKEND="REFSTD.libpangoxft.1.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_xft_get_context</primary></indexterm>pango_xft_get_context <LINK LINKEND="REFSTD.libpangoxft.1.0.2">[Pango 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_xft_get_font_map</primary></indexterm>pango_xft_get_font_map <LINK LINKEND="REFSTD.libpangoxft.1.0.2">[Pango 1.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_xft_picture_render</primary></indexterm>pango_xft_picture_render <LINK LINKEND="REFSTD.libpangoxft.1.0.2">[Pango 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_xft_render</primary></indexterm>pango_xft_render <LINK LINKEND="REFSTD.libpangoxft.1.0.2">[Pango 1.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_xft_render_layout</primary></indexterm>pango_xft_render_layout <LINK LINKEND="REFSTD.libpangoxft.1.0.2">[Pango 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_xft_render_layout_line</primary></indexterm>pango_xft_render_layout_line <LINK LINKEND="REFSTD.libpangoxft.1.0.2">[Pango 1.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_xft_render_transformed</primary></indexterm>pango_xft_render_transformed <LINK LINKEND="REFSTD.libpangoxft.1.0.2">[Pango 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_xft_renderer_get_type</primary></indexterm>pango_xft_renderer_get_type <LINK LINKEND="REFSTD.libpangoxft.1.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_xft_renderer_new</primary></indexterm>pango_xft_renderer_new <LINK LINKEND="REFSTD.libpangoxft.1.0.2">[Pango 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_xft_renderer_set_default_color</primary></indexterm>pango_xft_renderer_set_default_color <LINK LINKEND="REFSTD.libpangoxft.1.0.2">[Pango 1.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_xft_renderer_set_draw</primary></indexterm>pango_xft_renderer_set_draw <LINK LINKEND="REFSTD.libpangoxft.1.0.2">[Pango 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_xft_set_default_substitute</primary></indexterm>pango_xft_set_default_substitute <LINK LINKEND="REFSTD.libpangoxft.1.0.2">[Pango 1.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_xft_shutdown_display</primary></indexterm>pango_xft_shutdown_display <LINK LINKEND="REFSTD.libpangoxft.1.0.2">[Pango 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_xft_substitute_changed</primary></indexterm>pango_xft_substitute_changed <LINK LINKEND="REFSTD.libpangoxft.1.0.2">[Pango 1.10]</LINK></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>
</SECT2>
</SECT1>
<SECT1 ID=libpangoxft-1.0-ddefs>
<TITLE>Data Definitions for libpangoxft-1.0</TITLE>
<PARA>
This section defines global identifiers and their values that are associated
with interfaces contained in libpangoxft-1.0.
These definitions are organized into groups that
correspond to system headers. This convention is used as a
convenience for the reader, and does not imply the existence
of these headers, or their content.
Where an interface is defined as requiring a particular system header file
all of the data definitions for that system header file presented here shall be in effect.
</PARA>
<PARA>
This section gives data definitions to promote binary application
portability, not to repeat source interface definitions available
elsewhere. System providers and application developers should use this ABI
to supplement - not to replace - source interface definition specifications.
</PARA>
<PARA>
This specification uses the <XREF LINKEND='std.ISOC99'> C Language as the reference programming language, and data definitions are specified in ISO C format. The C language is used here as a convenient notation. Using a C language description of these data objects does not preclude their use by other programming languages.</PARA>
<SECT2>
<TITLE>pango-1.0/pango/pangoxft.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define PANGO_XFT_RENDERER_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), PANGO_TYPE_XFT_RENDERER, \
	PangoXftRendererClass))
#define PANGO_IS_XFT_RENDERER_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), PANGO_TYPE_XFT_RENDERER))
#define PANGO_XFT_FONT(object)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((object), PANGO_TYPE_XFT_FONT, \
	PangoXftFont))
#define PANGO_XFT_FONT_MAP(object)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((object), PANGO_TYPE_XFT_FONT_MAP, \
	PangoXftFontMap))
#define PANGO_XFT_RENDERER(object)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((object), PANGO_TYPE_XFT_RENDERER, \
	PangoXftRenderer))
#define PANGO_XFT_IS_FONT(object)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((object), PANGO_TYPE_XFT_FONT))
#define PANGO_XFT_IS_FONT_MAP(object)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((object), PANGO_TYPE_XFT_FONT_MAP))
#define PANGO_IS_XFT_RENDERER(object)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((object), PANGO_TYPE_XFT_RENDERER))
#define PANGO_XFT_RENDERER_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), PANGO_TYPE_XFT_RENDERER, \
	PangoXftRendererClass))
#define PANGO_TYPE_XFT_FONT	(pango_xft_font_get_type ())
#define PANGO_TYPE_XFT_FONT_MAP	(pango_xft_font_map_get_type ())
#define PANGO_TYPE_XFT_RENDERER	(pango_xft_renderer_get_type())
#define PANGO_RENDER_TYPE_XFT	"PangoRenderXft"

typedef struct _PangoXftRenderer PangoXftRenderer;
typedef void (*PangoXftSubstituteFunc) (FcPattern *, gpointer);
typedef struct _PangoXftFontMap PangoXftFontMap;
typedef struct _PangoXftRendererClass {
    PangoRendererClass parent_class;
    void (*composite_trapezoids) (PangoXftRenderer *, PangoRenderPart,
				  XTrapezoid *, int);
    void (*composite_glyphs) (PangoXftRenderer *, XftFont *,
			      XftGlyphSpec *, int);
} PangoXftRendererClass;
typedef struct _PangoFcFontClass PangoFcFontClass;
typedef struct _PangoFcFont PangoFcFont;
typedef struct _PangoXftFont PangoXftFont;
typedef struct _PangoXftRendererPrivate PangoXftRendererPrivate;
extern void pango_xft_substitute_changed(Display *, int);
extern void pango_xft_render(XftDraw *, XftColor *, PangoFont *,
			     PangoGlyphString *, gint, gint);
extern PangoRenderer *pango_xft_renderer_new(Display *, int);
extern GType pango_xft_renderer_get_type(void);
extern void pango_xft_renderer_set_default_color(PangoXftRenderer *,
						 PangoColor *);
extern GType pango_xft_font_get_type(void);
extern void pango_xft_picture_render(Display *, Picture, Picture,
				     PangoFont *, PangoGlyphString *, gint,
				     gint);
extern void pango_xft_render_layout(XftDraw *, XftColor *, PangoLayout *,
				    int, int);
extern void pango_xft_render_transformed(XftDraw *, XftColor *,
					 PangoMatrix *, PangoFont *,
					 PangoGlyphString *, int, int);
extern void pango_xft_renderer_set_draw(PangoXftRenderer *, XftDraw *);
extern void pango_xft_render_layout_line(XftDraw *, XftColor *,
					 PangoLayoutLine *, int, int);
extern void pango_xft_shutdown_display(Display *, int);
extern PangoFontMap *pango_xft_get_font_map(Display *, int);
extern PangoContext *pango_xft_get_context(Display *, int);
extern GType pango_xft_font_map_get_type(void);
extern void pango_xft_set_default_substitute(Display *, int,
					     PangoXftSubstituteFunc,
					     gpointer, GDestroyNotify);
</SCREEN>
</SECT2>
</SECT1>
<!-- End of text generated from database -->

<!-- Start of generated text - do not edit! -->
<!-- generated from the LSB specification database by mklibspec -->
<SECT1 ID=libpangoft2-1.0>
<TITLE>Interfaces for libpangoft2-1.0</TITLE>
<PARA>
<XREF LINKEND="lib-libpangoft2-1.0-def"> defines the library name and shared object name
for the libpangoft2-1.0 library
</PARA>
<TABLE id="lib-libpangoft2-1.0-def">
<TITLE>libpangoft2-1.0 Definition</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Library:</ENTRY>
<ENTRY>libpangoft2-1.0</ENTRY>
</ROW>
<ROW>
<ENTRY>SONAME:</ENTRY>
<ENTRY>libpangoft2-1.0.so.0</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The behavior of the interfaces in this library is specified by the following specifications:<SIMPLELIST COLUMNS=1>
<MEMBER ID='REFSTD.libpangoft2.1.0.1'>
[Gobject 2.8] <XREF LINKEND="std.Gobject.2.8">
</MEMBER>
<MEMBER ID='REFSTD.libpangoft2.1.0.2'>
[Pango 1.10] <XREF LINKEND="std.Pango.1.10">
</MEMBER>
</SIMPLELIST>
</PARA>
<!-- debug: database interface name Pango Freetype Fonts and Rendering library -->
<SECT2>
<!--libgroup-->
<TITLE>Pango Freetype Fonts and Rendering library</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Interfaces for Pango Freetype Fonts and Rendering library</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic functions
for Pango Freetype Fonts and Rendering library specified in <XREF linkend="tbl-libpangoft2-1.0-pango-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<TABLE id="tbl-libpangoft2-1.0-pango-ints">
<TITLE>libpangoft2-1.0 - Pango Freetype Fonts and Rendering library Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>pango_fc_decoder_get_charset</primary></indexterm>pango_fc_decoder_get_charset <LINK LINKEND="REFSTD.libpangoft2.1.0.2">[Pango 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_fc_decoder_get_glyph</primary></indexterm>pango_fc_decoder_get_glyph <LINK LINKEND="REFSTD.libpangoft2.1.0.2">[Pango 1.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_fc_decoder_get_type</primary></indexterm>pango_fc_decoder_get_type <LINK LINKEND="REFSTD.libpangoft2.1.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_fc_font_description_from_pattern</primary></indexterm>pango_fc_font_description_from_pattern <LINK LINKEND="REFSTD.libpangoft2.1.0.2">[Pango 1.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_fc_font_get_type</primary></indexterm>pango_fc_font_get_type <LINK LINKEND="REFSTD.libpangoft2.1.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_fc_font_lock_face</primary></indexterm>pango_fc_font_lock_face <LINK LINKEND="REFSTD.libpangoft2.1.0.2">[Pango 1.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_fc_font_map_add_decoder_find_func</primary></indexterm>pango_fc_font_map_add_decoder_find_func <LINK LINKEND="REFSTD.libpangoft2.1.0.2">[Pango 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_fc_font_map_get_type</primary></indexterm>pango_fc_font_map_get_type <LINK LINKEND="REFSTD.libpangoft2.1.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_fc_font_unlock_face</primary></indexterm>pango_fc_font_unlock_face <LINK LINKEND="REFSTD.libpangoft2.1.0.2">[Pango 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_ft2_font_map_create_context</primary></indexterm>pango_ft2_font_map_create_context <LINK LINKEND="REFSTD.libpangoft2.1.0.2">[Pango 1.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_ft2_font_map_get_type</primary></indexterm>pango_ft2_font_map_get_type <LINK LINKEND="REFSTD.libpangoft2.1.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_ft2_font_map_new</primary></indexterm>pango_ft2_font_map_new <LINK LINKEND="REFSTD.libpangoft2.1.0.2">[Pango 1.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_ft2_font_map_set_default_substitute</primary></indexterm>pango_ft2_font_map_set_default_substitute <LINK LINKEND="REFSTD.libpangoft2.1.0.2">[Pango 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_ft2_font_map_set_resolution</primary></indexterm>pango_ft2_font_map_set_resolution <LINK LINKEND="REFSTD.libpangoft2.1.0.2">[Pango 1.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_ft2_font_map_substitute_changed</primary></indexterm>pango_ft2_font_map_substitute_changed <LINK LINKEND="REFSTD.libpangoft2.1.0.2">[Pango 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_ft2_render</primary></indexterm>pango_ft2_render <LINK LINKEND="REFSTD.libpangoft2.1.0.2">[Pango 1.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_ft2_render_layout</primary></indexterm>pango_ft2_render_layout <LINK LINKEND="REFSTD.libpangoft2.1.0.2">[Pango 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_ft2_render_layout_line</primary></indexterm>pango_ft2_render_layout_line <LINK LINKEND="REFSTD.libpangoft2.1.0.2">[Pango 1.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_ft2_render_layout_line_subpixel</primary></indexterm>pango_ft2_render_layout_line_subpixel <LINK LINKEND="REFSTD.libpangoft2.1.0.2">[Pango 1.10]</LINK></ENTRY>
<ENTRY><indexterm><primary>pango_ft2_render_layout_subpixel</primary></indexterm>pango_ft2_render_layout_subpixel <LINK LINKEND="REFSTD.libpangoft2.1.0.2">[Pango 1.10]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pango_ft2_render_transformed</primary></indexterm>pango_ft2_render_transformed <LINK LINKEND="REFSTD.libpangoft2.1.0.2">[Pango 1.10]</LINK></ENTRY>
<ENTRY></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>
</SECT2>
</SECT1>
<SECT1 ID=libpangoft2-1.0-ddefs>
<TITLE>Data Definitions for libpangoft2-1.0</TITLE>
<PARA>
This section defines global identifiers and their values that are associated
with interfaces contained in libpangoft2-1.0.
These definitions are organized into groups that
correspond to system headers. This convention is used as a
convenience for the reader, and does not imply the existence
of these headers, or their content.
Where an interface is defined as requiring a particular system header file
all of the data definitions for that system header file presented here shall be in effect.
</PARA>
<PARA>
This section gives data definitions to promote binary application
portability, not to repeat source interface definitions available
elsewhere. System providers and application developers should use this ABI
to supplement - not to replace - source interface definition specifications.
</PARA>
<PARA>
This specification uses the <XREF LINKEND='std.ISOC99'> C Language as the reference programming language, and data definitions are specified in ISO C format. The C language is used here as a convenient notation. Using a C language description of these data objects does not preclude their use by other programming languages.</PARA>
<SECT2>
<TITLE>pango-1.0/pango/pangofc-decoder.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define PANGO_FC_DECODER_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), PANGO_TYPE_FC_DECODER, \
	PangoFcDecoderClass))
#define PANGO_IS_FC_DECODER_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), PANGO_TYPE_FC_DECODER))
#define PANGO_FC_DECODER(object)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((object), PANGO_TYPE_FC_DECODER, \
	PangoFcDecoder))
#define PANGO_IS_FC_DECODER(object)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((object), PANGO_TYPE_FC_DECODER))
#define PANGO_FC_DECODER_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), PANGO_TYPE_FC_DECODER, \
	PangoFcDecoderClass))
#define PANGO_TYPE_FC_DECODER	(pango_fc_decoder_get_type())

typedef struct _PangoFcDecoder {
    GObject parent_instance;
} PangoFcDecoder;
typedef struct _PangoFcDecoderClass {
    GObjectClass parent_class;
    FcCharSet *(*get_charset) (PangoFcDecoder *, PangoFcFont *);
     PangoGlyph(*get_glyph) (PangoFcDecoder *, PangoFcFont *, guint32);
    void (*_pango_reserved1) (void);
    void (*_pango_reserved2) (void);
    void (*_pango_reserved3) (void);
    void (*_pango_reserved4) (void);
} PangoFcDecoderClass;
extern FcCharSet *pango_fc_decoder_get_charset(PangoFcDecoder *,
					       PangoFcFont *);
extern PangoGlyph pango_fc_decoder_get_glyph(PangoFcDecoder *,
					     PangoFcFont *, guint32);
extern GType pango_fc_decoder_get_type(void);
</SCREEN>
</SECT2>
<SECT2>
<TITLE>pango-1.0/pango/pangofc-fontmap.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define PANGO_FC_FONT_MAP(object)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((object), PANGO_TYPE_FC_FONT_MAP, \
	PangoFcFontMap))
#define PANGO_IS_FC_FONT_MAP(object)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((object), PANGO_TYPE_FC_FONT_MAP))
#define PANGO_TYPE_FC_FONT_MAP	(pango_fc_font_map_get_type ())

typedef struct _PangoFcFontMap PangoFcFontMap;
typedef PangoFcDecoder *(*PangoFcDecoderFindFunc) (FcPattern *, gpointer);
typedef struct _PangoFcFontMapClass PangoFcFontMapClass;
extern void pango_fc_font_map_add_decoder_find_func(PangoFcFontMap *,
						    PangoFcDecoderFindFunc,
						    gpointer,
						    GDestroyNotify);
extern PangoFontDescription
    *pango_fc_font_description_from_pattern(FcPattern *, gboolean);
extern GType pango_fc_font_map_get_type(void);
</SCREEN>
</SECT2>
<SECT2>
<TITLE>pango-1.0/pango/pangoft2.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define PANGO_FC_FONT(object)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((object), PANGO_TYPE_FC_FONT, \
	PangoFcFont))
#define PANGO_FT2_FONT_MAP(object)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((object), PANGO_TYPE_FT2_FONT_MAP, \
	PangoFT2FontMap))
#define PANGO_IS_FC_FONT(object)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((object), PANGO_TYPE_FC_FONT))
#define PANGO_FT2_IS_FONT_MAP(object)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((object), PANGO_TYPE_FT2_FONT_MAP))
#define PANGO_TYPE_FC_FONT	(pango_fc_font_get_type ())
#define PANGO_TYPE_FT2_FONT_MAP	(pango_ft2_font_map_get_type ())

typedef struct _PangoFT2FontMap PangoFT2FontMap;
typedef void (*PangoFT2SubstituteFunc) (FcPattern *, gpointer);
extern void pango_ft2_font_map_set_default_substitute(PangoFT2FontMap *,
						      PangoFT2SubstituteFunc,
						      gpointer,
						      GDestroyNotify);
extern void pango_fc_font_unlock_face(PangoFcFont *);
extern GType pango_ft2_font_map_get_type(void);
extern void pango_ft2_render_transformed(FT_Bitmap *, const PangoMatrix *,
					 PangoFont *, PangoGlyphString *,
					 int, int);
extern PangoContext *pango_ft2_font_map_create_context(PangoFT2FontMap *);
extern void pango_ft2_render_layout_subpixel(FT_Bitmap *, PangoLayout *,
					     int, int);
extern void pango_ft2_render_layout(FT_Bitmap *, PangoLayout *, int, int);
extern void pango_ft2_font_map_set_resolution(PangoFT2FontMap *, double,
					      double);
extern void pango_ft2_render(FT_Bitmap *, PangoFont *, PangoGlyphString *,
			     int, int);
extern void pango_ft2_font_map_substitute_changed(PangoFT2FontMap *);
extern void pango_ft2_render_layout_line(FT_Bitmap *, PangoLayoutLine *,
					 int, int);
extern GType pango_fc_font_get_type(void);
extern void pango_ft2_render_layout_line_subpixel(FT_Bitmap *,
						  PangoLayoutLine *, int,
						  int);
extern FT_Face pango_fc_font_lock_face(PangoFcFont *);
extern PangoFontMap *pango_ft2_font_map_new(void);
</SCREEN>
</SECT2>
</SECT1>
<!-- End of text generated from database -->

<!-- Start of generated text - do not edit! -->
<!-- generated from the LSB specification database by mklibspec -->
<SECT1 ID=libgdk-pixbuf-2.0>
<TITLE>Interfaces for libgdk_pixbuf-2.0</TITLE>
<PARA>
<XREF LINKEND="lib-libgdk-pixbuf-2.0-def"> defines the library name and shared object name
for the libgdk_pixbuf-2.0 library
</PARA>
<TABLE id="lib-libgdk-pixbuf-2.0-def">
<TITLE>libgdk_pixbuf-2.0 Definition</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Library:</ENTRY>
<ENTRY>libgdk_pixbuf-2.0</ENTRY>
</ROW>
<ROW>
<ENTRY>SONAME:</ENTRY>
<ENTRY>libgdk_pixbuf-2.0.so.0</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The behavior of the interfaces in this library is specified by the following specifications:<SIMPLELIST COLUMNS=1>
<MEMBER ID='REFSTD.libgdk.pixbuf.2.0.1'>
[Gdk-pixbuf 2.8] <XREF LINKEND="std.Gdk.pixbuf.2.8">
</MEMBER>
<MEMBER ID='REFSTD.libgdk.pixbuf.2.0.2'>
[Gobject 2.8] <XREF LINKEND="std.Gobject.2.8">
</MEMBER>
</SIMPLELIST>
</PARA>
<!-- debug: database interface name GDK pixbuf rendering on drawables library -->
<SECT2>
<!--libgroup-->
<TITLE>GDK pixbuf rendering on drawables library</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Interfaces for GDK pixbuf rendering on drawables library</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic functions
for GDK pixbuf rendering on drawables library specified in <XREF linkend="tbl-libgdk-pixbuf-2.0-gdk-p-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<TABLE id="tbl-libgdk-pixbuf-2.0-gdk-p-ints">
<TITLE>libgdk_pixbuf-2.0 - GDK pixbuf rendering on drawables library Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>gdk_colorspace_get_type</primary></indexterm>gdk_colorspace_get_type <LINK LINKEND="REFSTD.libgdk.pixbuf.2.0.2">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_interp_type_get_type</primary></indexterm>gdk_interp_type_get_type <LINK LINKEND="REFSTD.libgdk.pixbuf.2.0.2">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_pixbuf_add_alpha</primary></indexterm>gdk_pixbuf_add_alpha <LINK LINKEND="REFSTD.libgdk.pixbuf.2.0.1">[Gdk-pixbuf 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_pixbuf_alpha_mode_get_type</primary></indexterm>gdk_pixbuf_alpha_mode_get_type <LINK LINKEND="REFSTD.libgdk.pixbuf.2.0.2">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_pixbuf_animation_get_height</primary></indexterm>gdk_pixbuf_animation_get_height <LINK LINKEND="REFSTD.libgdk.pixbuf.2.0.1">[Gdk-pixbuf 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_pixbuf_animation_get_iter</primary></indexterm>gdk_pixbuf_animation_get_iter <LINK LINKEND="REFSTD.libgdk.pixbuf.2.0.1">[Gdk-pixbuf 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_pixbuf_animation_get_static_image</primary></indexterm>gdk_pixbuf_animation_get_static_image <LINK LINKEND="REFSTD.libgdk.pixbuf.2.0.1">[Gdk-pixbuf 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_pixbuf_animation_get_type</primary></indexterm>gdk_pixbuf_animation_get_type <LINK LINKEND="REFSTD.libgdk.pixbuf.2.0.2">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_pixbuf_animation_get_width</primary></indexterm>gdk_pixbuf_animation_get_width <LINK LINKEND="REFSTD.libgdk.pixbuf.2.0.1">[Gdk-pixbuf 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_pixbuf_animation_is_static_image</primary></indexterm>gdk_pixbuf_animation_is_static_image <LINK LINKEND="REFSTD.libgdk.pixbuf.2.0.1">[Gdk-pixbuf 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_pixbuf_animation_iter_advance</primary></indexterm>gdk_pixbuf_animation_iter_advance <LINK LINKEND="REFSTD.libgdk.pixbuf.2.0.1">[Gdk-pixbuf 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_pixbuf_animation_iter_get_delay_time</primary></indexterm>gdk_pixbuf_animation_iter_get_delay_time <LINK LINKEND="REFSTD.libgdk.pixbuf.2.0.1">[Gdk-pixbuf 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_pixbuf_animation_iter_get_pixbuf</primary></indexterm>gdk_pixbuf_animation_iter_get_pixbuf <LINK LINKEND="REFSTD.libgdk.pixbuf.2.0.1">[Gdk-pixbuf 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_pixbuf_animation_iter_get_type</primary></indexterm>gdk_pixbuf_animation_iter_get_type <LINK LINKEND="REFSTD.libgdk.pixbuf.2.0.2">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_pixbuf_animation_iter_on_currently_loading_frame</primary></indexterm>gdk_pixbuf_animation_iter_on_currently_loading_frame <LINK LINKEND="REFSTD.libgdk.pixbuf.2.0.1">[Gdk-pixbuf 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_pixbuf_animation_new_from_file</primary></indexterm>gdk_pixbuf_animation_new_from_file <LINK LINKEND="REFSTD.libgdk.pixbuf.2.0.1">[Gdk-pixbuf 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_pixbuf_composite</primary></indexterm>gdk_pixbuf_composite <LINK LINKEND="REFSTD.libgdk.pixbuf.2.0.1">[Gdk-pixbuf 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_pixbuf_composite_color</primary></indexterm>gdk_pixbuf_composite_color <LINK LINKEND="REFSTD.libgdk.pixbuf.2.0.1">[Gdk-pixbuf 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_pixbuf_composite_color_simple</primary></indexterm>gdk_pixbuf_composite_color_simple <LINK LINKEND="REFSTD.libgdk.pixbuf.2.0.1">[Gdk-pixbuf 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_pixbuf_copy</primary></indexterm>gdk_pixbuf_copy <LINK LINKEND="REFSTD.libgdk.pixbuf.2.0.1">[Gdk-pixbuf 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_pixbuf_copy_area</primary></indexterm>gdk_pixbuf_copy_area <LINK LINKEND="REFSTD.libgdk.pixbuf.2.0.1">[Gdk-pixbuf 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_pixbuf_error_get_type</primary></indexterm>gdk_pixbuf_error_get_type <LINK LINKEND="REFSTD.libgdk.pixbuf.2.0.2">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_pixbuf_error_quark</primary></indexterm>gdk_pixbuf_error_quark <LINK LINKEND="REFSTD.libgdk.pixbuf.2.0.1">[Gdk-pixbuf 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_pixbuf_fill</primary></indexterm>gdk_pixbuf_fill <LINK LINKEND="REFSTD.libgdk.pixbuf.2.0.1">[Gdk-pixbuf 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_pixbuf_flip</primary></indexterm>gdk_pixbuf_flip <LINK LINKEND="REFSTD.libgdk.pixbuf.2.0.1">[Gdk-pixbuf 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_pixbuf_format_get_description</primary></indexterm>gdk_pixbuf_format_get_description <LINK LINKEND="REFSTD.libgdk.pixbuf.2.0.1">[Gdk-pixbuf 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_pixbuf_format_get_extensions</primary></indexterm>gdk_pixbuf_format_get_extensions <LINK LINKEND="REFSTD.libgdk.pixbuf.2.0.1">[Gdk-pixbuf 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_pixbuf_format_get_license</primary></indexterm>gdk_pixbuf_format_get_license <LINK LINKEND="REFSTD.libgdk.pixbuf.2.0.1">[Gdk-pixbuf 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_pixbuf_format_get_mime_types</primary></indexterm>gdk_pixbuf_format_get_mime_types <LINK LINKEND="REFSTD.libgdk.pixbuf.2.0.1">[Gdk-pixbuf 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_pixbuf_format_get_name</primary></indexterm>gdk_pixbuf_format_get_name <LINK LINKEND="REFSTD.libgdk.pixbuf.2.0.1">[Gdk-pixbuf 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_pixbuf_format_is_disabled</primary></indexterm>gdk_pixbuf_format_is_disabled <LINK LINKEND="REFSTD.libgdk.pixbuf.2.0.1">[Gdk-pixbuf 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_pixbuf_format_is_scalable</primary></indexterm>gdk_pixbuf_format_is_scalable <LINK LINKEND="REFSTD.libgdk.pixbuf.2.0.1">[Gdk-pixbuf 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_pixbuf_format_is_writable</primary></indexterm>gdk_pixbuf_format_is_writable <LINK LINKEND="REFSTD.libgdk.pixbuf.2.0.1">[Gdk-pixbuf 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_pixbuf_format_set_disabled</primary></indexterm>gdk_pixbuf_format_set_disabled <LINK LINKEND="REFSTD.libgdk.pixbuf.2.0.1">[Gdk-pixbuf 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_pixbuf_from_pixdata</primary></indexterm>gdk_pixbuf_from_pixdata <LINK LINKEND="REFSTD.libgdk.pixbuf.2.0.1">[Gdk-pixbuf 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_pixbuf_get_bits_per_sample</primary></indexterm>gdk_pixbuf_get_bits_per_sample <LINK LINKEND="REFSTD.libgdk.pixbuf.2.0.1">[Gdk-pixbuf 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_pixbuf_get_colorspace</primary></indexterm>gdk_pixbuf_get_colorspace <LINK LINKEND="REFSTD.libgdk.pixbuf.2.0.1">[Gdk-pixbuf 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_pixbuf_get_file_info</primary></indexterm>gdk_pixbuf_get_file_info <LINK LINKEND="REFSTD.libgdk.pixbuf.2.0.1">[Gdk-pixbuf 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_pixbuf_get_formats</primary></indexterm>gdk_pixbuf_get_formats <LINK LINKEND="REFSTD.libgdk.pixbuf.2.0.1">[Gdk-pixbuf 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_pixbuf_get_has_alpha</primary></indexterm>gdk_pixbuf_get_has_alpha <LINK LINKEND="REFSTD.libgdk.pixbuf.2.0.1">[Gdk-pixbuf 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_pixbuf_get_height</primary></indexterm>gdk_pixbuf_get_height <LINK LINKEND="REFSTD.libgdk.pixbuf.2.0.1">[Gdk-pixbuf 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_pixbuf_get_n_channels</primary></indexterm>gdk_pixbuf_get_n_channels <LINK LINKEND="REFSTD.libgdk.pixbuf.2.0.1">[Gdk-pixbuf 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_pixbuf_get_option</primary></indexterm>gdk_pixbuf_get_option <LINK LINKEND="REFSTD.libgdk.pixbuf.2.0.1">[Gdk-pixbuf 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_pixbuf_get_pixels</primary></indexterm>gdk_pixbuf_get_pixels <LINK LINKEND="REFSTD.libgdk.pixbuf.2.0.1">[Gdk-pixbuf 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_pixbuf_get_rowstride</primary></indexterm>gdk_pixbuf_get_rowstride <LINK LINKEND="REFSTD.libgdk.pixbuf.2.0.1">[Gdk-pixbuf 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_pixbuf_get_type</primary></indexterm>gdk_pixbuf_get_type <LINK LINKEND="REFSTD.libgdk.pixbuf.2.0.2">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_pixbuf_get_width</primary></indexterm>gdk_pixbuf_get_width <LINK LINKEND="REFSTD.libgdk.pixbuf.2.0.1">[Gdk-pixbuf 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_pixbuf_loader_close</primary></indexterm>gdk_pixbuf_loader_close <LINK LINKEND="REFSTD.libgdk.pixbuf.2.0.1">[Gdk-pixbuf 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_pixbuf_loader_get_animation</primary></indexterm>gdk_pixbuf_loader_get_animation <LINK LINKEND="REFSTD.libgdk.pixbuf.2.0.1">[Gdk-pixbuf 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_pixbuf_loader_get_format</primary></indexterm>gdk_pixbuf_loader_get_format <LINK LINKEND="REFSTD.libgdk.pixbuf.2.0.1">[Gdk-pixbuf 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_pixbuf_loader_get_pixbuf</primary></indexterm>gdk_pixbuf_loader_get_pixbuf <LINK LINKEND="REFSTD.libgdk.pixbuf.2.0.1">[Gdk-pixbuf 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_pixbuf_loader_get_type</primary></indexterm>gdk_pixbuf_loader_get_type <LINK LINKEND="REFSTD.libgdk.pixbuf.2.0.2">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_pixbuf_loader_new</primary></indexterm>gdk_pixbuf_loader_new <LINK LINKEND="REFSTD.libgdk.pixbuf.2.0.1">[Gdk-pixbuf 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_pixbuf_loader_new_with_mime_type</primary></indexterm>gdk_pixbuf_loader_new_with_mime_type <LINK LINKEND="REFSTD.libgdk.pixbuf.2.0.1">[Gdk-pixbuf 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_pixbuf_loader_new_with_type</primary></indexterm>gdk_pixbuf_loader_new_with_type <LINK LINKEND="REFSTD.libgdk.pixbuf.2.0.1">[Gdk-pixbuf 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_pixbuf_loader_set_size</primary></indexterm>gdk_pixbuf_loader_set_size <LINK LINKEND="REFSTD.libgdk.pixbuf.2.0.1">[Gdk-pixbuf 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_pixbuf_loader_write</primary></indexterm>gdk_pixbuf_loader_write <LINK LINKEND="REFSTD.libgdk.pixbuf.2.0.1">[Gdk-pixbuf 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_pixbuf_new</primary></indexterm>gdk_pixbuf_new <LINK LINKEND="REFSTD.libgdk.pixbuf.2.0.1">[Gdk-pixbuf 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_pixbuf_new_from_data</primary></indexterm>gdk_pixbuf_new_from_data <LINK LINKEND="REFSTD.libgdk.pixbuf.2.0.1">[Gdk-pixbuf 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_pixbuf_new_from_file</primary></indexterm>gdk_pixbuf_new_from_file <LINK LINKEND="REFSTD.libgdk.pixbuf.2.0.1">[Gdk-pixbuf 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_pixbuf_new_from_file_at_scale</primary></indexterm>gdk_pixbuf_new_from_file_at_scale <LINK LINKEND="REFSTD.libgdk.pixbuf.2.0.1">[Gdk-pixbuf 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_pixbuf_new_from_file_at_size</primary></indexterm>gdk_pixbuf_new_from_file_at_size <LINK LINKEND="REFSTD.libgdk.pixbuf.2.0.1">[Gdk-pixbuf 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_pixbuf_new_from_inline</primary></indexterm>gdk_pixbuf_new_from_inline <LINK LINKEND="REFSTD.libgdk.pixbuf.2.0.1">[Gdk-pixbuf 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_pixbuf_new_from_xpm_data</primary></indexterm>gdk_pixbuf_new_from_xpm_data <LINK LINKEND="REFSTD.libgdk.pixbuf.2.0.1">[Gdk-pixbuf 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_pixbuf_new_subpixbuf</primary></indexterm>gdk_pixbuf_new_subpixbuf <LINK LINKEND="REFSTD.libgdk.pixbuf.2.0.1">[Gdk-pixbuf 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_pixbuf_rotate_simple</primary></indexterm>gdk_pixbuf_rotate_simple <LINK LINKEND="REFSTD.libgdk.pixbuf.2.0.1">[Gdk-pixbuf 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_pixbuf_rotation_get_type</primary></indexterm>gdk_pixbuf_rotation_get_type <LINK LINKEND="REFSTD.libgdk.pixbuf.2.0.2">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_pixbuf_saturate_and_pixelate</primary></indexterm>gdk_pixbuf_saturate_and_pixelate <LINK LINKEND="REFSTD.libgdk.pixbuf.2.0.1">[Gdk-pixbuf 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_pixbuf_save</primary></indexterm>gdk_pixbuf_save <LINK LINKEND="REFSTD.libgdk.pixbuf.2.0.1">[Gdk-pixbuf 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_pixbuf_save_to_buffer</primary></indexterm>gdk_pixbuf_save_to_buffer <LINK LINKEND="REFSTD.libgdk.pixbuf.2.0.1">[Gdk-pixbuf 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_pixbuf_save_to_bufferv</primary></indexterm>gdk_pixbuf_save_to_bufferv <LINK LINKEND="REFSTD.libgdk.pixbuf.2.0.1">[Gdk-pixbuf 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_pixbuf_save_to_callback</primary></indexterm>gdk_pixbuf_save_to_callback <LINK LINKEND="REFSTD.libgdk.pixbuf.2.0.1">[Gdk-pixbuf 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_pixbuf_save_to_callbackv</primary></indexterm>gdk_pixbuf_save_to_callbackv <LINK LINKEND="REFSTD.libgdk.pixbuf.2.0.1">[Gdk-pixbuf 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_pixbuf_savev</primary></indexterm>gdk_pixbuf_savev <LINK LINKEND="REFSTD.libgdk.pixbuf.2.0.1">[Gdk-pixbuf 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_pixbuf_scale</primary></indexterm>gdk_pixbuf_scale <LINK LINKEND="REFSTD.libgdk.pixbuf.2.0.1">[Gdk-pixbuf 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_pixbuf_scale_simple</primary></indexterm>gdk_pixbuf_scale_simple <LINK LINKEND="REFSTD.libgdk.pixbuf.2.0.1">[Gdk-pixbuf 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_pixbuf_simple_anim_add_frame</primary></indexterm>gdk_pixbuf_simple_anim_add_frame <LINK LINKEND="REFSTD.libgdk.pixbuf.2.0.1">[Gdk-pixbuf 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_pixbuf_simple_anim_get_type</primary></indexterm>gdk_pixbuf_simple_anim_get_type <LINK LINKEND="REFSTD.libgdk.pixbuf.2.0.2">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_pixbuf_simple_anim_iter_get_type</primary></indexterm>gdk_pixbuf_simple_anim_iter_get_type <LINK LINKEND="REFSTD.libgdk.pixbuf.2.0.2">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_pixbuf_simple_anim_new</primary></indexterm>gdk_pixbuf_simple_anim_new <LINK LINKEND="REFSTD.libgdk.pixbuf.2.0.1">[Gdk-pixbuf 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_pixdata_deserialize</primary></indexterm>gdk_pixdata_deserialize <LINK LINKEND="REFSTD.libgdk.pixbuf.2.0.1">[Gdk-pixbuf 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_pixdata_from_pixbuf</primary></indexterm>gdk_pixdata_from_pixbuf <LINK LINKEND="REFSTD.libgdk.pixbuf.2.0.1">[Gdk-pixbuf 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_pixdata_serialize</primary></indexterm>gdk_pixdata_serialize <LINK LINKEND="REFSTD.libgdk.pixbuf.2.0.1">[Gdk-pixbuf 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_pixdata_to_csource</primary></indexterm>gdk_pixdata_to_csource <LINK LINKEND="REFSTD.libgdk.pixbuf.2.0.1">[Gdk-pixbuf 2.8]</LINK></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for GDK pixbuf rendering on drawables library specified in <XREF linkend="tbl-libgdk-pixbuf-2.0-gdk-p-data">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<TABLE id="tbl-libgdk-pixbuf-2.0-gdk-p-data">
<TITLE>libgdk_pixbuf-2.0 - GDK pixbuf rendering on drawables library Data Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>gdk_pixbuf_major_version</primary></indexterm>gdk_pixbuf_major_version <LINK LINKEND="REFSTD.libgdk.pixbuf.2.0.1">[Gdk-pixbuf 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_pixbuf_micro_version</primary></indexterm>gdk_pixbuf_micro_version <LINK LINKEND="REFSTD.libgdk.pixbuf.2.0.1">[Gdk-pixbuf 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_pixbuf_minor_version</primary></indexterm>gdk_pixbuf_minor_version <LINK LINKEND="REFSTD.libgdk.pixbuf.2.0.1">[Gdk-pixbuf 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_pixbuf_version</primary></indexterm>gdk_pixbuf_version <LINK LINKEND="REFSTD.libgdk.pixbuf.2.0.1">[Gdk-pixbuf 2.8]</LINK></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>
</SECT2>
</SECT1>
<SECT1 ID=libgdk-pixbuf-2.0-ddefs>
<TITLE>Data Definitions for libgdk_pixbuf-2.0</TITLE>
<PARA>
This section defines global identifiers and their values that are associated
with interfaces contained in libgdk_pixbuf-2.0.
These definitions are organized into groups that
correspond to system headers. This convention is used as a
convenience for the reader, and does not imply the existence
of these headers, or their content.
Where an interface is defined as requiring a particular system header file
all of the data definitions for that system header file presented here shall be in effect.
</PARA>
<PARA>
This section gives data definitions to promote binary application
portability, not to repeat source interface definitions available
elsewhere. System providers and application developers should use this ABI
to supplement - not to replace - source interface definition specifications.
</PARA>
<PARA>
This specification uses the <XREF LINKEND='std.ISOC99'> C Language as the reference programming language, and data definitions are specified in ISO C format. The C language is used here as a convenient notation. Using a C language description of these data objects does not preclude their use by other programming languages.</PARA>
<SECT2>
<TITLE>gtk-2.0/gdk-pixbuf/gdk-pixbuf.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define GDK_TYPE_PIXBUF_ANIMATION_ITER	 \
	(gdk_pixbuf_animation_iter_get_type ())
#define GDK_PIXBUF_LOADER_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GDK_TYPE_PIXBUF_LOADER, \
	GdkPixbufLoaderClass))
#define GDK_IS_PIXBUF_LOADER_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GDK_TYPE_PIXBUF_LOADER))
#define GDK_PIXBUF_LOADER(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GDK_TYPE_PIXBUF_LOADER, \
	GdkPixbufLoader))
#define GDK_PIXBUF(object)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((object), GDK_TYPE_PIXBUF, GdkPixbuf))
#define GDK_PIXBUF_ANIMATION(object)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((object), GDK_TYPE_PIXBUF_ANIMATION, \
	GdkPixbufAnimation))
#define GDK_PIXBUF_ANIMATION_ITER(object)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((object), \
	GDK_TYPE_PIXBUF_ANIMATION_ITER, GdkPixbufAnimationIter))
#define GDK_IS_PIXBUF_LOADER(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GDK_TYPE_PIXBUF_LOADER))
#define GDK_IS_PIXBUF(object)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((object), GDK_TYPE_PIXBUF))
#define GDK_IS_PIXBUF_ANIMATION(object)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((object), GDK_TYPE_PIXBUF_ANIMATION))
#define GDK_IS_PIXBUF_ANIMATION_ITER(object)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((object), \
	GDK_TYPE_PIXBUF_ANIMATION_ITER))
#define GDK_PIXBUF_LOADER_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GDK_TYPE_PIXBUF_LOADER, \
	GdkPixbufLoaderClass))
#define GDK_PIXBUF_MICRO	(10)
#define GDK_PIXBUF_MAJOR	(2)
#define GDK_PIXBUF_MINOR	(6)
#define GDK_TYPE_COLORSPACE	(gdk_colorspace_get_type())
#define GDK_TYPE_INTERP_TYPE	(gdk_interp_type_get_type())
#define GDK_TYPE_PIXBUF_ALPHA_MODE	(gdk_pixbuf_alpha_mode_get_type())
#define GDK_TYPE_PIXBUF_ANIMATION	(gdk_pixbuf_animation_get_type ())
#define GDK_TYPE_PIXBUF_ERROR	(gdk_pixbuf_error_get_type())
#define GDK_TYPE_PIXBUF	(gdk_pixbuf_get_type ())
#define GDK_TYPE_PIXBUF_LOADER	(gdk_pixbuf_loader_get_type ())
#define GDK_TYPE_PIXBUF_ROTATION	(gdk_pixbuf_rotation_get_type())
#define GDK_TYPE_PIXBUF_SIMPLE_ANIM	(gdk_pixbuf_simple_anim_get_type ())
#define GDK_PIXBUF_SIMPLE_ANIM_CLASS(klass)	(G_TYPE_CHECK_CLASS_CAST ((klass), GDK_TYPE_PIXBUF_SIMPLE_ANIM, GdkPixbufSimpleAnimClass))

#define GDK_IS_PIXBUF_SIMPLE_ANIM_CLASS(klass)	(G_TYPE_CHECK_CLASS_TYPE ((klass), GDK_TYPE_PIXBUF_SIMPLE_ANIM))
#define GDK_PIXBUF_SIMPLE_ANIM(object)	(G_TYPE_CHECK_INSTANCE_CAST ((object), GDK_TYPE_PIXBUF_SIMPLE_ANIM, GdkPixbufSimpleAnim))
#define GDK_IS_PIXBUF_SIMPLE_ANIM(object)	(G_TYPE_CHECK_INSTANCE_TYPE ((object), GDK_TYPE_PIXBUF_SIMPLE_ANIM))
#define GDK_PIXBUF_SIMPLE_ANIM_GET_CLASS(obj)	(G_TYPE_INSTANCE_GET_CLASS ((obj), GDK_TYPE_PIXBUF_SIMPLE_ANIM, GdkPixbufSimpleAnimClass))
#define GDK_PIXBUF_VERSION	"2.8.11"
#define GDK_PIXBUF_VAR	extern
#define GDK_PIXBUF_ERROR	gdk_pixbuf_error_quark ()

typedef struct _GdkPixbuf GdkPixbuf;
typedef gboolean(*GdkPixbufSaveFunc) (const gchar *, gsize, GError * *,
				      gpointer);
typedef struct _GdkPixbufLoader {
    GObject parent_instance;
    gpointer priv;
} GdkPixbufLoader;
typedef struct _GdkPixbufFormat GdkPixbufFormat;
typedef enum {
    GDK_INTERP_NEAREST = 0,
    GDK_INTERP_TILES = 1,
    GDK_INTERP_BILINEAR = 2,
    GDK_INTERP_HYPER = 3
} GdkInterpType;
typedef enum {
    GDK_COLORSPACE_RGB = 0
} GdkColorspace;
typedef void (*GdkPixbufDestroyNotify) (guchar *, gpointer);
typedef struct _GdkPixbufAnimationIter GdkPixbufAnimationIter;
typedef struct _GdkPixbufAnimation GdkPixbufAnimation;
typedef enum {
    GDK_PIXBUF_ROTATE_NONE = 0,
    GDK_PIXBUF_ROTATE_COUNTERCLOCKWISE = 90,
    GDK_PIXBUF_ROTATE_UPSIDEDOWN = 180,
    GDK_PIXBUF_ROTATE_CLOCKWISE = 270
} GdkPixbufRotation;
typedef struct _GdkPixbufLoaderClass {
    GObjectClass parent_class;
    void (*size_prepared) (GdkPixbufLoader *, int, int);
    void (*area_prepared) (GdkPixbufLoader *);
    void (*area_updated) (GdkPixbufLoader *, int, int, int, int);
    void (*closed) (GdkPixbufLoader *);
} GdkPixbufLoaderClass;
typedef enum {
    GDK_PIXBUF_ERROR_CORRUPT_IMAGE,
    GDK_PIXBUF_ERROR_INSUFFICIENT_MEMORY,
    GDK_PIXBUF_ERROR_BAD_OPTION,
    GDK_PIXBUF_ERROR_UNKNOWN_TYPE,
    GDK_PIXBUF_ERROR_UNSUPPORTED_OPERATION,
    GDK_PIXBUF_ERROR_FAILED
} GdkPixbufError;
typedef enum {
    GDK_PIXBUF_ALPHA_BILEVEL,
    GDK_PIXBUF_ALPHA_FULL
} GdkPixbufAlphaMode;
typedef struct _GdkPixbufSimpleAnim GdkPixbufSimpleAnim;
typedef struct _GdkPixbufSimpleAnimClass GdkPixbufSimpleAnimClass;
extern gboolean gdk_pixbuf_save_to_callbackv(GdkPixbuf *,
					     GdkPixbufSaveFunc, gpointer,
					     const char *, char **,
					     char **, GError * *);
extern gboolean gdk_pixbuf_save_to_bufferv(GdkPixbuf *, gchar * *, gsize *,
					   const char *, char **, char **,
					   GError * *);
extern GdkPixbuf *gdk_pixbuf_new_from_file_at_scale(const char *, int, int,
						    gboolean, GError * *);
extern GdkPixbufLoader *gdk_pixbuf_loader_new_with_type(const char *,
							GError * *);
extern GSList *gdk_pixbuf_get_formats(void);
extern guchar *gdk_pixbuf_get_pixels(const GdkPixbuf *);
extern const guint gdk_pixbuf_minor_version;
extern void gdk_pixbuf_format_set_disabled(GdkPixbufFormat *, gboolean);
extern gboolean gdk_pixbuf_format_is_scalable(GdkPixbufFormat *);
extern int gdk_pixbuf_get_n_channels(const GdkPixbuf *);
extern GdkPixbuf *gdk_pixbuf_scale_simple(const GdkPixbuf *, int, int,
					  GdkInterpType);
extern GdkPixbuf *gdk_pixbuf_new_from_data(const guchar *, GdkColorspace,
					   gboolean, int, int, int, int,
					   GdkPixbufDestroyNotify,
					   gpointer);
extern gboolean gdk_pixbuf_loader_close(GdkPixbufLoader *, GError * *);
extern GType gdk_pixbuf_animation_get_type(void);
extern gboolean gdk_pixbuf_save_to_buffer(GdkPixbuf *, gchar * *, gsize *,
					  const char *, GError * *, ...);
extern GType gdk_interp_type_get_type(void);
extern GdkPixbuf *gdk_pixbuf_new_from_file_at_size(const char *, int, int,
						   GError * *);
extern GdkPixbuf *gdk_pixbuf_new_from_xpm_data(const char **);
extern GdkPixbufLoader *gdk_pixbuf_loader_new(void);
extern gboolean gdk_pixbuf_save_to_callback(GdkPixbuf *, GdkPixbufSaveFunc,
					    gpointer, const char *,
					    GError * *, ...);
extern GdkPixbuf *gdk_pixbuf_add_alpha(const GdkPixbuf *, gboolean, guchar,
				       guchar, guchar);
extern gboolean gdk_pixbuf_animation_iter_advance(GdkPixbufAnimationIter *,
						  const GTimeVal *);
extern void gdk_pixbuf_saturate_and_pixelate(const GdkPixbuf *,
					     GdkPixbuf *, gfloat,
					     gboolean);
extern GType gdk_pixbuf_animation_iter_get_type(void);
extern int gdk_pixbuf_get_bits_per_sample(const GdkPixbuf *);
extern GdkPixbuf *gdk_pixbuf_new_from_inline(gint, const guint8 *,
					     gboolean, GError * *);
extern const guint gdk_pixbuf_major_version;
extern GdkPixbuf *gdk_pixbuf_animation_get_static_image(GdkPixbufAnimation
							*);
extern const guint gdk_pixbuf_micro_version;
extern int gdk_pixbuf_get_height(const GdkPixbuf *);
extern GdkPixbuf *gdk_pixbuf_flip(const GdkPixbuf *, gboolean);
extern GdkPixbufAnimationIter
    *gdk_pixbuf_animation_get_iter(GdkPixbufAnimation *, const GTimeVal *);
extern gboolean
gdk_pixbuf_animation_iter_on_currently_loading_frame(GdkPixbufAnimationIter
						     *);
extern GdkPixbufAnimation *gdk_pixbuf_loader_get_animation(GdkPixbufLoader
							   *);
extern int gdk_pixbuf_get_rowstride(const GdkPixbuf *);
extern GdkPixbuf *gdk_pixbuf_new_from_file(const char *, GError * *);
extern void gdk_pixbuf_loader_set_size(GdkPixbufLoader *, gint, gint);
extern GType gdk_pixbuf_loader_get_type(void);
extern GdkPixbuf *gdk_pixbuf_composite_color_simple(const GdkPixbuf *, int,
						    int, GdkInterpType,
						    int, int, guint32,
						    guint32);
extern gboolean gdk_pixbuf_save(GdkPixbuf *, const char *, const char *,
				GError * *, ...);
extern GdkPixbuf *gdk_pixbuf_new_subpixbuf(GdkPixbuf *, int, int, int,
					   int);
extern gchar *gdk_pixbuf_format_get_license(GdkPixbufFormat *);
extern GdkPixbufAnimation *gdk_pixbuf_animation_new_from_file(const char *,
							      GError * *);
extern void gdk_pixbuf_fill(GdkPixbuf *, guint32);
extern void gdk_pixbuf_composite_color(const GdkPixbuf *, GdkPixbuf *, int,
				       int, int, int, double, double,
				       double, double, GdkInterpType, int,
				       int, int, int, guint32, guint32);
extern void gdk_pixbuf_composite(const GdkPixbuf *, GdkPixbuf *, int, int,
				 int, int, double, double, double, double,
				 GdkInterpType, int);
extern int gdk_pixbuf_animation_get_width(GdkPixbufAnimation *);
extern gboolean gdk_pixbuf_animation_is_static_image(GdkPixbufAnimation *);
extern void gdk_pixbuf_scale(const GdkPixbuf *, GdkPixbuf *, int, int, int,
			     int, double, double, double, double,
			     GdkInterpType);
extern GdkPixbuf
    *gdk_pixbuf_animation_iter_get_pixbuf(GdkPixbufAnimationIter *);
extern const char *gdk_pixbuf_version;
extern gchar *gdk_pixbuf_format_get_name(GdkPixbufFormat *);
extern gchar **gdk_pixbuf_format_get_mime_types(GdkPixbufFormat *);
extern GType gdk_pixbuf_rotation_get_type(void);
extern GType gdk_colorspace_get_type(void);
extern GdkPixbufFormat *gdk_pixbuf_loader_get_format(GdkPixbufLoader *);
extern GType gdk_pixbuf_alpha_mode_get_type(void);
extern gboolean gdk_pixbuf_format_is_disabled(GdkPixbufFormat *);
extern GdkPixbuf *gdk_pixbuf_rotate_simple(const GdkPixbuf *,
					   GdkPixbufRotation);
extern void gdk_pixbuf_copy_area(const GdkPixbuf *, int, int, int, int,
				 GdkPixbuf *, int, int);
extern GQuark gdk_pixbuf_error_quark(void);
extern gboolean gdk_pixbuf_format_is_writable(GdkPixbufFormat *);
extern GType gdk_pixbuf_get_type(void);
extern GdkPixbufFormat *gdk_pixbuf_get_file_info(const gchar *, gint *,
						 gint *);
extern GdkPixbuf *gdk_pixbuf_copy(const GdkPixbuf *);
extern gboolean gdk_pixbuf_savev(GdkPixbuf *, const char *, const char *,
				 char **, char **, GError * *);
extern gchar *gdk_pixbuf_format_get_description(GdkPixbufFormat *);
extern GdkPixbuf *gdk_pixbuf_loader_get_pixbuf(GdkPixbufLoader *);
extern gboolean gdk_pixbuf_loader_write(GdkPixbufLoader *, const guchar *,
					gsize, GError * *);
extern int gdk_pixbuf_animation_get_height(GdkPixbufAnimation *);
extern int gdk_pixbuf_get_width(const GdkPixbuf *);
extern GdkPixbuf *gdk_pixbuf_new(GdkColorspace, gboolean, int, int, int);
extern gchar **gdk_pixbuf_format_get_extensions(GdkPixbufFormat *);
extern GdkColorspace gdk_pixbuf_get_colorspace(const GdkPixbuf *);
extern GdkPixbufLoader *gdk_pixbuf_loader_new_with_mime_type(const char *,
							     GError * *);
extern GType gdk_pixbuf_error_get_type(void);
extern gboolean gdk_pixbuf_get_has_alpha(const GdkPixbuf *);
extern const gchar *gdk_pixbuf_get_option(GdkPixbuf *, const gchar *);
extern int gdk_pixbuf_animation_iter_get_delay_time(GdkPixbufAnimationIter
						    *);
extern GType gdk_pixbuf_simple_anim_get_type(void);
extern GType gdk_pixbuf_simple_anim_iter_get_type(void);
extern GdkPixbufSimpleAnim *gdk_pixbuf_simple_anim_new(gint, gint, gfloat);
extern void gdk_pixbuf_simple_anim_add_frame(GdkPixbufSimpleAnim *,
					     GdkPixbuf *);
</SCREEN>
</SECT2>
<SECT2>
<TITLE>gtk-2.0/gdk-pixbuf/gdk-pixdata.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define GDK_PIXBUF_MAGIC_NUMBER	(0x47646b50)
#define GDK_PIXDATA_HEADER_LENGTH	(4 + 4 + 4 + 4 + 4 + 4)

typedef struct _GdkPixdata {
    guint32 magic;
    gint32 length;
    guint32 pixdata_type;
    guint32 rowstride;
    guint32 width;
    guint32 height;
    guint8 *pixel_data;
} GdkPixdata;
typedef enum {
    GDK_PIXDATA_DUMP_PIXDATA_STREAM = 0,
    GDK_PIXDATA_DUMP_PIXDATA_STRUCT = 1,
    GDK_PIXDATA_DUMP_MACROS = 2,
    GDK_PIXDATA_DUMP_GTYPES = 0,
    GDK_PIXDATA_DUMP_CTYPES = 256,
    GDK_PIXDATA_DUMP_STATIC = 512,
    GDK_PIXDATA_DUMP_CONST = 1024,
    GDK_PIXDATA_DUMP_RLE_DECODER = 65536
} GdkPixdataDumpType;
typedef enum {
    GDK_PIXDATA_COLOR_TYPE_RGB = 0x01,
    GDK_PIXDATA_COLOR_TYPE_RGBA = 0x02,
    GDK_PIXDATA_COLOR_TYPE_MASK = 0xff,
    GDK_PIXDATA_SAMPLE_WIDTH_8 = 0x01 &lt;&lt; 16,
    GDK_PIXDATA_SAMPLE_WIDTH_MASK = 0x0f &lt;&lt; 16,
    GDK_PIXDATA_ENCODING_RAW = 0x01 &lt;&lt; 24,
    GDK_PIXDATA_ENCODING_RLE = 0x02 &lt;&lt; 24,
    GDK_PIXDATA_ENCODING_MASK = 0x0f &lt;&lt; 24
} GdkPixdataType;
extern gboolean gdk_pixdata_deserialize(GdkPixdata *, guint,
					const guint8 *, GError * *);
extern gpointer gdk_pixdata_from_pixbuf(GdkPixdata *, const GdkPixbuf *,
					gboolean);
extern guint8 *gdk_pixdata_serialize(const GdkPixdata *, guint *);
extern GString *gdk_pixdata_to_csource(GdkPixdata *, const gchar *,
				       GdkPixdataDumpType);
extern GdkPixbuf *gdk_pixbuf_from_pixdata(const GdkPixdata *, gboolean,
					  GError * *);
</SCREEN>
</SECT2>
</SECT1>
<!-- End of text generated from database -->

<!-- Start of generated text - do not edit! -->
<!-- generated from the LSB specification database by mklibspec -->
<SECT1 ID=libgdk-pixbuf-xlib-2.0>
<TITLE>Interfaces for libgdk_pixbuf_xlib-2.0</TITLE>
<PARA>
<XREF LINKEND="lib-libgdk-pixbuf-xlib-2.0-def"> defines the library name and shared object name
for the libgdk_pixbuf_xlib-2.0 library
</PARA>
<TABLE id="lib-libgdk-pixbuf-xlib-2.0-def">
<TITLE>libgdk_pixbuf_xlib-2.0 Definition</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Library:</ENTRY>
<ENTRY>libgdk_pixbuf_xlib-2.0</ENTRY>
</ROW>
<ROW>
<ENTRY>SONAME:</ENTRY>
<ENTRY>libgdk_pixbuf_xlib-2.0.so.0</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The behavior of the interfaces in this library is specified by the following specifications:<SIMPLELIST COLUMNS=1>
<MEMBER ID='REFSTD.libgdk.pixbuf.xlib.2.0.1'>
[Gdk-pixbuf 2.8] <XREF LINKEND="std.Gdk.pixbuf.2.8">
</MEMBER>
</SIMPLELIST>
</PARA>
<!-- debug: database interface name GDK pixbuf rendering to an X drawable library -->
<SECT2>
<!--libgroup-->
<TITLE>GDK pixbuf rendering to an X drawable library</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Interfaces for GDK pixbuf rendering to an X drawable library</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic functions
for GDK pixbuf rendering to an X drawable library specified in <XREF linkend="tbl-libgdk-pixbuf-xlib-2.0-gdk-p-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<TABLE id="tbl-libgdk-pixbuf-xlib-2.0-gdk-p-ints">
<TITLE>libgdk_pixbuf_xlib-2.0 - GDK pixbuf rendering to an X drawable library Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>gdk_pixbuf_xlib_get_from_drawable</primary></indexterm>gdk_pixbuf_xlib_get_from_drawable <LINK LINKEND="REFSTD.libgdk.pixbuf.xlib.2.0.1">[Gdk-pixbuf 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_pixbuf_xlib_init</primary></indexterm>gdk_pixbuf_xlib_init <LINK LINKEND="REFSTD.libgdk.pixbuf.xlib.2.0.1">[Gdk-pixbuf 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_pixbuf_xlib_init_with_depth</primary></indexterm>gdk_pixbuf_xlib_init_with_depth <LINK LINKEND="REFSTD.libgdk.pixbuf.xlib.2.0.1">[Gdk-pixbuf 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_pixbuf_xlib_render_pixmap_and_mask</primary></indexterm>gdk_pixbuf_xlib_render_pixmap_and_mask <LINK LINKEND="REFSTD.libgdk.pixbuf.xlib.2.0.1">[Gdk-pixbuf 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_pixbuf_xlib_render_threshold_alpha</primary></indexterm>gdk_pixbuf_xlib_render_threshold_alpha <LINK LINKEND="REFSTD.libgdk.pixbuf.xlib.2.0.1">[Gdk-pixbuf 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_pixbuf_xlib_render_to_drawable</primary></indexterm>gdk_pixbuf_xlib_render_to_drawable <LINK LINKEND="REFSTD.libgdk.pixbuf.xlib.2.0.1">[Gdk-pixbuf 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_pixbuf_xlib_render_to_drawable_alpha</primary></indexterm>gdk_pixbuf_xlib_render_to_drawable_alpha <LINK LINKEND="REFSTD.libgdk.pixbuf.xlib.2.0.1">[Gdk-pixbuf 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>xlib_draw_gray_image</primary></indexterm>xlib_draw_gray_image <LINK LINKEND="REFSTD.libgdk.pixbuf.xlib.2.0.1">[Gdk-pixbuf 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>xlib_draw_indexed_image</primary></indexterm>xlib_draw_indexed_image <LINK LINKEND="REFSTD.libgdk.pixbuf.xlib.2.0.1">[Gdk-pixbuf 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>xlib_draw_rgb_32_image</primary></indexterm>xlib_draw_rgb_32_image <LINK LINKEND="REFSTD.libgdk.pixbuf.xlib.2.0.1">[Gdk-pixbuf 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>xlib_draw_rgb_image</primary></indexterm>xlib_draw_rgb_image <LINK LINKEND="REFSTD.libgdk.pixbuf.xlib.2.0.1">[Gdk-pixbuf 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>xlib_draw_rgb_image_dithalign</primary></indexterm>xlib_draw_rgb_image_dithalign <LINK LINKEND="REFSTD.libgdk.pixbuf.xlib.2.0.1">[Gdk-pixbuf 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>xlib_rgb_cmap_free</primary></indexterm>xlib_rgb_cmap_free <LINK LINKEND="REFSTD.libgdk.pixbuf.xlib.2.0.1">[Gdk-pixbuf 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>xlib_rgb_cmap_new</primary></indexterm>xlib_rgb_cmap_new <LINK LINKEND="REFSTD.libgdk.pixbuf.xlib.2.0.1">[Gdk-pixbuf 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>xlib_rgb_ditherable</primary></indexterm>xlib_rgb_ditherable <LINK LINKEND="REFSTD.libgdk.pixbuf.xlib.2.0.1">[Gdk-pixbuf 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>xlib_rgb_gc_set_background</primary></indexterm>xlib_rgb_gc_set_background <LINK LINKEND="REFSTD.libgdk.pixbuf.xlib.2.0.1">[Gdk-pixbuf 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>xlib_rgb_gc_set_foreground</primary></indexterm>xlib_rgb_gc_set_foreground <LINK LINKEND="REFSTD.libgdk.pixbuf.xlib.2.0.1">[Gdk-pixbuf 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>xlib_rgb_get_cmap</primary></indexterm>xlib_rgb_get_cmap <LINK LINKEND="REFSTD.libgdk.pixbuf.xlib.2.0.1">[Gdk-pixbuf 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>xlib_rgb_get_depth</primary></indexterm>xlib_rgb_get_depth <LINK LINKEND="REFSTD.libgdk.pixbuf.xlib.2.0.1">[Gdk-pixbuf 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>xlib_rgb_get_display</primary></indexterm>xlib_rgb_get_display <LINK LINKEND="REFSTD.libgdk.pixbuf.xlib.2.0.1">[Gdk-pixbuf 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>xlib_rgb_get_screen</primary></indexterm>xlib_rgb_get_screen <LINK LINKEND="REFSTD.libgdk.pixbuf.xlib.2.0.1">[Gdk-pixbuf 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>xlib_rgb_get_visual</primary></indexterm>xlib_rgb_get_visual <LINK LINKEND="REFSTD.libgdk.pixbuf.xlib.2.0.1">[Gdk-pixbuf 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>xlib_rgb_get_visual_info</primary></indexterm>xlib_rgb_get_visual_info <LINK LINKEND="REFSTD.libgdk.pixbuf.xlib.2.0.1">[Gdk-pixbuf 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>xlib_rgb_init</primary></indexterm>xlib_rgb_init <LINK LINKEND="REFSTD.libgdk.pixbuf.xlib.2.0.1">[Gdk-pixbuf 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>xlib_rgb_init_with_depth</primary></indexterm>xlib_rgb_init_with_depth <LINK LINKEND="REFSTD.libgdk.pixbuf.xlib.2.0.1">[Gdk-pixbuf 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>xlib_rgb_set_install</primary></indexterm>xlib_rgb_set_install <LINK LINKEND="REFSTD.libgdk.pixbuf.xlib.2.0.1">[Gdk-pixbuf 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>xlib_rgb_set_min_colors</primary></indexterm>xlib_rgb_set_min_colors <LINK LINKEND="REFSTD.libgdk.pixbuf.xlib.2.0.1">[Gdk-pixbuf 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>xlib_rgb_set_verbose</primary></indexterm>xlib_rgb_set_verbose <LINK LINKEND="REFSTD.libgdk.pixbuf.xlib.2.0.1">[Gdk-pixbuf 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>xlib_rgb_xpixel_from_rgb</primary></indexterm>xlib_rgb_xpixel_from_rgb <LINK LINKEND="REFSTD.libgdk.pixbuf.xlib.2.0.1">[Gdk-pixbuf 2.8]</LINK></ENTRY>
<ENTRY></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>
</SECT2>
</SECT1>
<SECT1 ID=libgdk-pixbuf-xlib-2.0-ddefs>
<TITLE>Data Definitions for libgdk_pixbuf_xlib-2.0</TITLE>
<PARA>
This section defines global identifiers and their values that are associated
with interfaces contained in libgdk_pixbuf_xlib-2.0.
These definitions are organized into groups that
correspond to system headers. This convention is used as a
convenience for the reader, and does not imply the existence
of these headers, or their content.
Where an interface is defined as requiring a particular system header file
all of the data definitions for that system header file presented here shall be in effect.
</PARA>
<PARA>
This section gives data definitions to promote binary application
portability, not to repeat source interface definitions available
elsewhere. System providers and application developers should use this ABI
to supplement - not to replace - source interface definition specifications.
</PARA>
<PARA>
This specification uses the <XREF LINKEND='std.ISOC99'> C Language as the reference programming language, and data definitions are specified in ISO C format. The C language is used here as a convenient notation. Using a C language description of these data objects does not preclude their use by other programming languages.</PARA>
<SECT2>
<TITLE>gtk-2.0/gdk-pixbuf-xlib/gdk-pixbuf-xlib.h</TITLE>
<PARA>
</PARA>
<SCREEN>

typedef enum {
    XLIB_RGB_DITHER_NONE = 0,
    XLIB_RGB_DITHER_NORMAL = 1,
    XLIB_RGB_DITHER_MAX = 2
} XlibRgbDither;
typedef struct _XlibRgbCmap {
    unsigned int colors[256];
    unsigned char lut[256];
} XlibRgbCmap;
extern void gdk_pixbuf_xlib_init_with_depth(Display *, int, int);
extern Visual *xlib_rgb_get_visual(void);
extern void gdk_pixbuf_xlib_render_to_drawable(GdkPixbuf *, Drawable, GC,
					       int, int, int, int, int,
					       int, XlibRgbDither, int,
					       int);
extern GdkPixbuf *gdk_pixbuf_xlib_get_from_drawable(GdkPixbuf *, Drawable,
						    Colormap, Visual *,
						    int, int, int, int,
						    int, int);
extern XVisualInfo *xlib_rgb_get_visual_info(void);
extern void xlib_rgb_set_install(int);
extern void xlib_rgb_cmap_free(XlibRgbCmap *);
extern int xlib_rgb_get_depth(void);
extern long unsigned int xlib_rgb_xpixel_from_rgb(guint32);
extern void xlib_rgb_gc_set_foreground(GC, guint32);
extern void xlib_rgb_set_verbose(int);
extern int xlib_rgb_ditherable(void);
extern void xlib_rgb_set_min_colors(int);
extern void gdk_pixbuf_xlib_render_threshold_alpha(GdkPixbuf *, Pixmap,
						   int, int, int, int, int,
						   int, int);
extern Display *xlib_rgb_get_display(void);
extern void xlib_rgb_init(Display *, Screen *);
extern void gdk_pixbuf_xlib_init(Display *, int);
extern Screen *xlib_rgb_get_screen(void);
extern Colormap xlib_rgb_get_cmap(void);
extern void xlib_draw_gray_image(Drawable, GC, int, int, int, int,
				 XlibRgbDither, unsigned char *, int);
extern void xlib_draw_indexed_image(Drawable, GC, int, int, int, int,
				    XlibRgbDither, unsigned char *, int,
				    XlibRgbCmap *);
extern XlibRgbCmap *xlib_rgb_cmap_new(guint32 *, int);
extern void xlib_draw_rgb_32_image(Drawable, GC, int, int, int, int,
				   XlibRgbDither, unsigned char *, int);
extern void xlib_draw_rgb_image_dithalign(Drawable, GC, int, int, int, int,
					  XlibRgbDither, unsigned char *,
					  int, int, int);
extern void xlib_rgb_gc_set_background(GC, guint32);
extern void gdk_pixbuf_xlib_render_pixmap_and_mask(GdkPixbuf *, Pixmap *,
						   Pixmap *, int);
extern void gdk_pixbuf_xlib_render_to_drawable_alpha(GdkPixbuf *, Drawable,
						     int, int, int, int,
						     int, int,
						     GdkPixbufAlphaMode,
						     int, XlibRgbDither,
						     int, int);
extern void xlib_draw_rgb_image(Drawable, GC, int, int, int, int,
				XlibRgbDither, unsigned char *, int);
extern void xlib_rgb_init_with_depth(Display *, Screen *, int);
</SCREEN>
</SECT2>
</SECT1>
<!-- End of text generated from database -->

<!-- Start of generated text - do not edit! -->
<!-- generated from the LSB specification database by mklibspec -->
<SECT1 ID=libgdk-x11-2.0>
<TITLE>Interfaces for libgdk-x11-2.0</TITLE>
<PARA>
<XREF LINKEND="lib-libgdk-x11-2.0-def"> defines the library name and shared object name
for the libgdk-x11-2.0 library
</PARA>
<TABLE id="lib-libgdk-x11-2.0-def">
<TITLE>libgdk-x11-2.0 Definition</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Library:</ENTRY>
<ENTRY>libgdk-x11-2.0</ENTRY>
</ROW>
<ROW>
<ENTRY>SONAME:</ENTRY>
<ENTRY>libgdk-x11-2.0.so.0</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The behavior of the interfaces in this library is specified by the following specifications:<SIMPLELIST COLUMNS=1>
<MEMBER ID='REFSTD.libgdk.x11.2.0.1'>
[Gdk 2.8] <XREF LINKEND="std.Gdk.2.8">
</MEMBER>
<MEMBER ID='REFSTD.libgdk.x11.2.0.2'>
[Gobject 2.8] <XREF LINKEND="std.Gobject.2.8">
</MEMBER>
</SIMPLELIST>
</PARA>
<!-- debug: database interface name GTK Drawing toolkit -->
<SECT2>
<!--libgroup-->
<TITLE>GTK Drawing toolkit</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Interfaces for GTK Drawing toolkit</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic functions
for GTK Drawing toolkit specified in <XREF linkend="tbl-libgdk-x11-2.0-gtk-d-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<TABLE id="tbl-libgdk-x11-2.0-gtk-d-ints">
<TITLE>libgdk-x11-2.0 - GTK Drawing toolkit Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>gdk_add_client_message_filter</primary></indexterm>gdk_add_client_message_filter <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_atom_intern</primary></indexterm>gdk_atom_intern <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_atom_name</primary></indexterm>gdk_atom_name <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_axis_use_get_type</primary></indexterm>gdk_axis_use_get_type <LINK LINKEND="REFSTD.libgdk.x11.2.0.2">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_beep</primary></indexterm>gdk_beep <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_bitmap_create_from_data</primary></indexterm>gdk_bitmap_create_from_data <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_byte_order_get_type</primary></indexterm>gdk_byte_order_get_type <LINK LINKEND="REFSTD.libgdk.x11.2.0.2">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_cairo_create</primary></indexterm>gdk_cairo_create <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_cairo_rectangle</primary></indexterm>gdk_cairo_rectangle <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_cairo_region</primary></indexterm>gdk_cairo_region <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_cairo_set_source_color</primary></indexterm>gdk_cairo_set_source_color <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_cairo_set_source_pixbuf</primary></indexterm>gdk_cairo_set_source_pixbuf <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_cap_style_get_type</primary></indexterm>gdk_cap_style_get_type <LINK LINKEND="REFSTD.libgdk.x11.2.0.2">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_color_copy</primary></indexterm>gdk_color_copy <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_color_equal</primary></indexterm>gdk_color_equal <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_color_free</primary></indexterm>gdk_color_free <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_color_get_type</primary></indexterm>gdk_color_get_type <LINK LINKEND="REFSTD.libgdk.x11.2.0.2">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_color_hash</primary></indexterm>gdk_color_hash <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_color_parse</primary></indexterm>gdk_color_parse <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_colormap_alloc_color</primary></indexterm>gdk_colormap_alloc_color <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_colormap_alloc_colors</primary></indexterm>gdk_colormap_alloc_colors <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_colormap_free_colors</primary></indexterm>gdk_colormap_free_colors <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_colormap_get_screen</primary></indexterm>gdk_colormap_get_screen <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_colormap_get_system</primary></indexterm>gdk_colormap_get_system <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_colormap_get_type</primary></indexterm>gdk_colormap_get_type <LINK LINKEND="REFSTD.libgdk.x11.2.0.2">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_colormap_get_visual</primary></indexterm>gdk_colormap_get_visual <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_colormap_new</primary></indexterm>gdk_colormap_new <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_colormap_query_color</primary></indexterm>gdk_colormap_query_color <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_crossing_mode_get_type</primary></indexterm>gdk_crossing_mode_get_type <LINK LINKEND="REFSTD.libgdk.x11.2.0.2">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_cursor_get_display</primary></indexterm>gdk_cursor_get_display <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_cursor_get_image</primary></indexterm>gdk_cursor_get_image <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_cursor_get_type</primary></indexterm>gdk_cursor_get_type <LINK LINKEND="REFSTD.libgdk.x11.2.0.2">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_cursor_new</primary></indexterm>gdk_cursor_new <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_cursor_new_for_display</primary></indexterm>gdk_cursor_new_for_display <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_cursor_new_from_name</primary></indexterm>gdk_cursor_new_from_name <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_cursor_new_from_pixbuf</primary></indexterm>gdk_cursor_new_from_pixbuf <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_cursor_new_from_pixmap</primary></indexterm>gdk_cursor_new_from_pixmap <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_cursor_ref</primary></indexterm>gdk_cursor_ref <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_cursor_type_get_type</primary></indexterm>gdk_cursor_type_get_type <LINK LINKEND="REFSTD.libgdk.x11.2.0.2">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_cursor_unref</primary></indexterm>gdk_cursor_unref <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_device_free_history</primary></indexterm>gdk_device_free_history <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_device_get_axis</primary></indexterm>gdk_device_get_axis <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_device_get_core_pointer</primary></indexterm>gdk_device_get_core_pointer <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_device_get_history</primary></indexterm>gdk_device_get_history <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_device_get_state</primary></indexterm>gdk_device_get_state <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_device_get_type</primary></indexterm>gdk_device_get_type <LINK LINKEND="REFSTD.libgdk.x11.2.0.2">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_device_set_axis_use</primary></indexterm>gdk_device_set_axis_use <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_device_set_key</primary></indexterm>gdk_device_set_key <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_device_set_mode</primary></indexterm>gdk_device_set_mode <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_device_set_source</primary></indexterm>gdk_device_set_source <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_devices_list</primary></indexterm>gdk_devices_list <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_display_add_client_message_filter</primary></indexterm>gdk_display_add_client_message_filter <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_display_beep</primary></indexterm>gdk_display_beep <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_display_close</primary></indexterm>gdk_display_close <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_display_flush</primary></indexterm>gdk_display_flush <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_display_get_core_pointer</primary></indexterm>gdk_display_get_core_pointer <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_display_get_default</primary></indexterm>gdk_display_get_default <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_display_get_default_cursor_size</primary></indexterm>gdk_display_get_default_cursor_size <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_display_get_default_group</primary></indexterm>gdk_display_get_default_group <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_display_get_default_screen</primary></indexterm>gdk_display_get_default_screen <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_display_get_event</primary></indexterm>gdk_display_get_event <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_display_get_maximal_cursor_size</primary></indexterm>gdk_display_get_maximal_cursor_size <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_display_get_n_screens</primary></indexterm>gdk_display_get_n_screens <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_display_get_name</primary></indexterm>gdk_display_get_name <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_display_get_pointer</primary></indexterm>gdk_display_get_pointer <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_display_get_screen</primary></indexterm>gdk_display_get_screen <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_display_get_type</primary></indexterm>gdk_display_get_type <LINK LINKEND="REFSTD.libgdk.x11.2.0.2">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_display_get_window_at_pointer</primary></indexterm>gdk_display_get_window_at_pointer <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_display_keyboard_ungrab</primary></indexterm>gdk_display_keyboard_ungrab <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_display_list_devices</primary></indexterm>gdk_display_list_devices <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_display_manager_get</primary></indexterm>gdk_display_manager_get <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_display_manager_get_default_display</primary></indexterm>gdk_display_manager_get_default_display <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_display_manager_get_type</primary></indexterm>gdk_display_manager_get_type <LINK LINKEND="REFSTD.libgdk.x11.2.0.2">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_display_manager_list_displays</primary></indexterm>gdk_display_manager_list_displays <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_display_manager_set_default_display</primary></indexterm>gdk_display_manager_set_default_display <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_display_open</primary></indexterm>gdk_display_open <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_display_peek_event</primary></indexterm>gdk_display_peek_event <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_display_pointer_is_grabbed</primary></indexterm>gdk_display_pointer_is_grabbed <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_display_pointer_ungrab</primary></indexterm>gdk_display_pointer_ungrab <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_display_put_event</primary></indexterm>gdk_display_put_event <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_display_request_selection_notification</primary></indexterm>gdk_display_request_selection_notification <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_display_set_double_click_distance</primary></indexterm>gdk_display_set_double_click_distance <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_display_set_double_click_time</primary></indexterm>gdk_display_set_double_click_time <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_display_set_pointer_hooks</primary></indexterm>gdk_display_set_pointer_hooks <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_display_store_clipboard</primary></indexterm>gdk_display_store_clipboard <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_display_supports_clipboard_persistence</primary></indexterm>gdk_display_supports_clipboard_persistence <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_display_supports_cursor_alpha</primary></indexterm>gdk_display_supports_cursor_alpha <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_display_supports_cursor_color</primary></indexterm>gdk_display_supports_cursor_color <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_display_supports_selection_notification</primary></indexterm>gdk_display_supports_selection_notification <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_display_sync</primary></indexterm>gdk_display_sync <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_display_warp_pointer</primary></indexterm>gdk_display_warp_pointer <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_drag_abort</primary></indexterm>gdk_drag_abort <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_drag_action_get_type</primary></indexterm>gdk_drag_action_get_type <LINK LINKEND="REFSTD.libgdk.x11.2.0.2">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_drag_begin</primary></indexterm>gdk_drag_begin <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_drag_context_get_type</primary></indexterm>gdk_drag_context_get_type <LINK LINKEND="REFSTD.libgdk.x11.2.0.2">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_drag_context_new</primary></indexterm>gdk_drag_context_new <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_drag_drop</primary></indexterm>gdk_drag_drop <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_drag_drop_succeeded</primary></indexterm>gdk_drag_drop_succeeded <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_drag_find_window</primary></indexterm>gdk_drag_find_window <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_drag_find_window_for_screen</primary></indexterm>gdk_drag_find_window_for_screen <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_drag_get_protocol</primary></indexterm>gdk_drag_get_protocol <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_drag_get_protocol_for_display</primary></indexterm>gdk_drag_get_protocol_for_display <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_drag_get_selection</primary></indexterm>gdk_drag_get_selection <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_drag_motion</primary></indexterm>gdk_drag_motion <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_drag_protocol_get_type</primary></indexterm>gdk_drag_protocol_get_type <LINK LINKEND="REFSTD.libgdk.x11.2.0.2">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_drag_status</primary></indexterm>gdk_drag_status <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_draw_arc</primary></indexterm>gdk_draw_arc <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_draw_drawable</primary></indexterm>gdk_draw_drawable <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_draw_glyphs</primary></indexterm>gdk_draw_glyphs <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_draw_glyphs_transformed</primary></indexterm>gdk_draw_glyphs_transformed <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_draw_gray_image</primary></indexterm>gdk_draw_gray_image <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_draw_image</primary></indexterm>gdk_draw_image <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_draw_indexed_image</primary></indexterm>gdk_draw_indexed_image <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_draw_layout</primary></indexterm>gdk_draw_layout <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_draw_layout_line</primary></indexterm>gdk_draw_layout_line <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_draw_layout_line_with_colors</primary></indexterm>gdk_draw_layout_line_with_colors <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_draw_layout_with_colors</primary></indexterm>gdk_draw_layout_with_colors <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_draw_line</primary></indexterm>gdk_draw_line <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_draw_lines</primary></indexterm>gdk_draw_lines <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_draw_pixbuf</primary></indexterm>gdk_draw_pixbuf <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_draw_point</primary></indexterm>gdk_draw_point <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_draw_points</primary></indexterm>gdk_draw_points <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_draw_polygon</primary></indexterm>gdk_draw_polygon <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_draw_rectangle</primary></indexterm>gdk_draw_rectangle <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_draw_rgb_32_image</primary></indexterm>gdk_draw_rgb_32_image <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_draw_rgb_32_image_dithalign</primary></indexterm>gdk_draw_rgb_32_image_dithalign <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_draw_rgb_image</primary></indexterm>gdk_draw_rgb_image <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_draw_rgb_image_dithalign</primary></indexterm>gdk_draw_rgb_image_dithalign <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_draw_segments</primary></indexterm>gdk_draw_segments <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_draw_trapezoids</primary></indexterm>gdk_draw_trapezoids <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_drawable_copy_to_image</primary></indexterm>gdk_drawable_copy_to_image <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_drawable_get_clip_region</primary></indexterm>gdk_drawable_get_clip_region <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_drawable_get_colormap</primary></indexterm>gdk_drawable_get_colormap <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_drawable_get_depth</primary></indexterm>gdk_drawable_get_depth <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_drawable_get_display</primary></indexterm>gdk_drawable_get_display <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_drawable_get_image</primary></indexterm>gdk_drawable_get_image <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_drawable_get_screen</primary></indexterm>gdk_drawable_get_screen <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_drawable_get_size</primary></indexterm>gdk_drawable_get_size <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_drawable_get_type</primary></indexterm>gdk_drawable_get_type <LINK LINKEND="REFSTD.libgdk.x11.2.0.2">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_drawable_get_visible_region</primary></indexterm>gdk_drawable_get_visible_region <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_drawable_get_visual</primary></indexterm>gdk_drawable_get_visual <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_drawable_set_colormap</primary></indexterm>gdk_drawable_set_colormap <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_drop_finish</primary></indexterm>gdk_drop_finish <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_drop_reply</primary></indexterm>gdk_drop_reply <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_error_trap_pop</primary></indexterm>gdk_error_trap_pop <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_error_trap_push</primary></indexterm>gdk_error_trap_push <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_event_copy</primary></indexterm>gdk_event_copy <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_event_free</primary></indexterm>gdk_event_free <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_event_get</primary></indexterm>gdk_event_get <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_event_get_axis</primary></indexterm>gdk_event_get_axis <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_event_get_coords</primary></indexterm>gdk_event_get_coords <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_event_get_graphics_expose</primary></indexterm>gdk_event_get_graphics_expose <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_event_get_root_coords</primary></indexterm>gdk_event_get_root_coords <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_event_get_screen</primary></indexterm>gdk_event_get_screen <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_event_get_state</primary></indexterm>gdk_event_get_state <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_event_get_time</primary></indexterm>gdk_event_get_time <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_event_get_type</primary></indexterm>gdk_event_get_type <LINK LINKEND="REFSTD.libgdk.x11.2.0.2">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_event_handler_set</primary></indexterm>gdk_event_handler_set <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_event_mask_get_type</primary></indexterm>gdk_event_mask_get_type <LINK LINKEND="REFSTD.libgdk.x11.2.0.2">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_event_new</primary></indexterm>gdk_event_new <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_event_peek</primary></indexterm>gdk_event_peek <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_event_put</primary></indexterm>gdk_event_put <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_event_send_client_message</primary></indexterm>gdk_event_send_client_message <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_event_send_client_message_for_display</primary></indexterm>gdk_event_send_client_message_for_display <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_event_send_clientmessage_toall</primary></indexterm>gdk_event_send_clientmessage_toall <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_event_set_screen</primary></indexterm>gdk_event_set_screen <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_event_type_get_type</primary></indexterm>gdk_event_type_get_type <LINK LINKEND="REFSTD.libgdk.x11.2.0.2">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_events_pending</primary></indexterm>gdk_events_pending <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_extension_mode_get_type</primary></indexterm>gdk_extension_mode_get_type <LINK LINKEND="REFSTD.libgdk.x11.2.0.2">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_fill_get_type</primary></indexterm>gdk_fill_get_type <LINK LINKEND="REFSTD.libgdk.x11.2.0.2">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_fill_rule_get_type</primary></indexterm>gdk_fill_rule_get_type <LINK LINKEND="REFSTD.libgdk.x11.2.0.2">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_filter_return_get_type</primary></indexterm>gdk_filter_return_get_type <LINK LINKEND="REFSTD.libgdk.x11.2.0.2">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_flush</primary></indexterm>gdk_flush <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_font_type_get_type</primary></indexterm>gdk_font_type_get_type <LINK LINKEND="REFSTD.libgdk.x11.2.0.2">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_free_compound_text</primary></indexterm>gdk_free_compound_text <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_free_text_list</primary></indexterm>gdk_free_text_list <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_function_get_type</primary></indexterm>gdk_function_get_type <LINK LINKEND="REFSTD.libgdk.x11.2.0.2">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_gc_copy</primary></indexterm>gdk_gc_copy <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_gc_get_colormap</primary></indexterm>gdk_gc_get_colormap <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_gc_get_screen</primary></indexterm>gdk_gc_get_screen <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_gc_get_type</primary></indexterm>gdk_gc_get_type <LINK LINKEND="REFSTD.libgdk.x11.2.0.2">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_gc_get_values</primary></indexterm>gdk_gc_get_values <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_gc_new</primary></indexterm>gdk_gc_new <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_gc_new_with_values</primary></indexterm>gdk_gc_new_with_values <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_gc_offset</primary></indexterm>gdk_gc_offset <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_gc_set_background</primary></indexterm>gdk_gc_set_background <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_gc_set_clip_mask</primary></indexterm>gdk_gc_set_clip_mask <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_gc_set_clip_origin</primary></indexterm>gdk_gc_set_clip_origin <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_gc_set_clip_rectangle</primary></indexterm>gdk_gc_set_clip_rectangle <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_gc_set_clip_region</primary></indexterm>gdk_gc_set_clip_region <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_gc_set_colormap</primary></indexterm>gdk_gc_set_colormap <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_gc_set_dashes</primary></indexterm>gdk_gc_set_dashes <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_gc_set_exposures</primary></indexterm>gdk_gc_set_exposures <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_gc_set_fill</primary></indexterm>gdk_gc_set_fill <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_gc_set_foreground</primary></indexterm>gdk_gc_set_foreground <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_gc_set_function</primary></indexterm>gdk_gc_set_function <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_gc_set_line_attributes</primary></indexterm>gdk_gc_set_line_attributes <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_gc_set_rgb_bg_color</primary></indexterm>gdk_gc_set_rgb_bg_color <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_gc_set_rgb_fg_color</primary></indexterm>gdk_gc_set_rgb_fg_color <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_gc_set_stipple</primary></indexterm>gdk_gc_set_stipple <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_gc_set_subwindow</primary></indexterm>gdk_gc_set_subwindow <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_gc_set_tile</primary></indexterm>gdk_gc_set_tile <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_gc_set_ts_origin</primary></indexterm>gdk_gc_set_ts_origin <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_gc_set_values</primary></indexterm>gdk_gc_set_values <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_gc_values_mask_get_type</primary></indexterm>gdk_gc_values_mask_get_type <LINK LINKEND="REFSTD.libgdk.x11.2.0.2">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_get_default_root_window</primary></indexterm>gdk_get_default_root_window <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_get_display</primary></indexterm>gdk_get_display <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_get_display_arg_name</primary></indexterm>gdk_get_display_arg_name <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_get_program_class</primary></indexterm>gdk_get_program_class <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_get_show_events</primary></indexterm>gdk_get_show_events <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_grab_status_get_type</primary></indexterm>gdk_grab_status_get_type <LINK LINKEND="REFSTD.libgdk.x11.2.0.2">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_gravity_get_type</primary></indexterm>gdk_gravity_get_type <LINK LINKEND="REFSTD.libgdk.x11.2.0.2">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_image_get_colormap</primary></indexterm>gdk_image_get_colormap <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_image_get_pixel</primary></indexterm>gdk_image_get_pixel <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_image_get_type</primary></indexterm>gdk_image_get_type <LINK LINKEND="REFSTD.libgdk.x11.2.0.2">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_image_new</primary></indexterm>gdk_image_new <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_image_put_pixel</primary></indexterm>gdk_image_put_pixel <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_image_set_colormap</primary></indexterm>gdk_image_set_colormap <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_image_type_get_type</primary></indexterm>gdk_image_type_get_type <LINK LINKEND="REFSTD.libgdk.x11.2.0.2">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_init</primary></indexterm>gdk_init <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_init_check</primary></indexterm>gdk_init_check <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_input_condition_get_type</primary></indexterm>gdk_input_condition_get_type <LINK LINKEND="REFSTD.libgdk.x11.2.0.2">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_input_mode_get_type</primary></indexterm>gdk_input_mode_get_type <LINK LINKEND="REFSTD.libgdk.x11.2.0.2">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_input_set_extension_events</primary></indexterm>gdk_input_set_extension_events <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_input_source_get_type</primary></indexterm>gdk_input_source_get_type <LINK LINKEND="REFSTD.libgdk.x11.2.0.2">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_join_style_get_type</primary></indexterm>gdk_join_style_get_type <LINK LINKEND="REFSTD.libgdk.x11.2.0.2">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_keyboard_grab</primary></indexterm>gdk_keyboard_grab <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_keyboard_ungrab</primary></indexterm>gdk_keyboard_ungrab <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_keymap_get_default</primary></indexterm>gdk_keymap_get_default <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_keymap_get_direction</primary></indexterm>gdk_keymap_get_direction <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_keymap_get_entries_for_keycode</primary></indexterm>gdk_keymap_get_entries_for_keycode <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_keymap_get_entries_for_keyval</primary></indexterm>gdk_keymap_get_entries_for_keyval <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_keymap_get_for_display</primary></indexterm>gdk_keymap_get_for_display <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_keymap_get_type</primary></indexterm>gdk_keymap_get_type <LINK LINKEND="REFSTD.libgdk.x11.2.0.2">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_keymap_lookup_key</primary></indexterm>gdk_keymap_lookup_key <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_keymap_translate_keyboard_state</primary></indexterm>gdk_keymap_translate_keyboard_state <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_keyval_convert_case</primary></indexterm>gdk_keyval_convert_case <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_keyval_from_name</primary></indexterm>gdk_keyval_from_name <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_keyval_is_lower</primary></indexterm>gdk_keyval_is_lower <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_keyval_is_upper</primary></indexterm>gdk_keyval_is_upper <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_keyval_name</primary></indexterm>gdk_keyval_name <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_keyval_to_lower</primary></indexterm>gdk_keyval_to_lower <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_keyval_to_unicode</primary></indexterm>gdk_keyval_to_unicode <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_keyval_to_upper</primary></indexterm>gdk_keyval_to_upper <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_line_style_get_type</primary></indexterm>gdk_line_style_get_type <LINK LINKEND="REFSTD.libgdk.x11.2.0.2">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_list_visuals</primary></indexterm>gdk_list_visuals <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_modifier_type_get_type</primary></indexterm>gdk_modifier_type_get_type <LINK LINKEND="REFSTD.libgdk.x11.2.0.2">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_net_wm_supports</primary></indexterm>gdk_net_wm_supports <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_notify_startup_complete</primary></indexterm>gdk_notify_startup_complete <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_notify_type_get_type</primary></indexterm>gdk_notify_type_get_type <LINK LINKEND="REFSTD.libgdk.x11.2.0.2">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_overlap_type_get_type</primary></indexterm>gdk_overlap_type_get_type <LINK LINKEND="REFSTD.libgdk.x11.2.0.2">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_owner_change_get_type</primary></indexterm>gdk_owner_change_get_type <LINK LINKEND="REFSTD.libgdk.x11.2.0.2">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_pango_attr_embossed_new</primary></indexterm>gdk_pango_attr_embossed_new <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_pango_attr_stipple_new</primary></indexterm>gdk_pango_attr_stipple_new <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_pango_context_get</primary></indexterm>gdk_pango_context_get <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_pango_context_get_for_screen</primary></indexterm>gdk_pango_context_get_for_screen <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_pango_layout_get_clip_region</primary></indexterm>gdk_pango_layout_get_clip_region <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_pango_layout_line_get_clip_region</primary></indexterm>gdk_pango_layout_line_get_clip_region <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_pango_renderer_get_default</primary></indexterm>gdk_pango_renderer_get_default <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_pango_renderer_get_type</primary></indexterm>gdk_pango_renderer_get_type <LINK LINKEND="REFSTD.libgdk.x11.2.0.2">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_pango_renderer_new</primary></indexterm>gdk_pango_renderer_new <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_pango_renderer_set_drawable</primary></indexterm>gdk_pango_renderer_set_drawable <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_pango_renderer_set_gc</primary></indexterm>gdk_pango_renderer_set_gc <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_pango_renderer_set_override_color</primary></indexterm>gdk_pango_renderer_set_override_color <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_pango_renderer_set_stipple</primary></indexterm>gdk_pango_renderer_set_stipple <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_parse_args</primary></indexterm>gdk_parse_args <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_pixbuf_get_from_drawable</primary></indexterm>gdk_pixbuf_get_from_drawable <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_pixbuf_get_from_image</primary></indexterm>gdk_pixbuf_get_from_image <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_pixbuf_render_pixmap_and_mask</primary></indexterm>gdk_pixbuf_render_pixmap_and_mask <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_pixbuf_render_pixmap_and_mask_for_colormap</primary></indexterm>gdk_pixbuf_render_pixmap_and_mask_for_colormap <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_pixbuf_render_threshold_alpha</primary></indexterm>gdk_pixbuf_render_threshold_alpha <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_pixmap_colormap_create_from_xpm</primary></indexterm>gdk_pixmap_colormap_create_from_xpm <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_pixmap_colormap_create_from_xpm_d</primary></indexterm>gdk_pixmap_colormap_create_from_xpm_d <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_pixmap_create_from_data</primary></indexterm>gdk_pixmap_create_from_data <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_pixmap_create_from_xpm</primary></indexterm>gdk_pixmap_create_from_xpm <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_pixmap_create_from_xpm_d</primary></indexterm>gdk_pixmap_create_from_xpm_d <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_pixmap_foreign_new</primary></indexterm>gdk_pixmap_foreign_new <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_pixmap_foreign_new_for_display</primary></indexterm>gdk_pixmap_foreign_new_for_display <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_pixmap_get_type</primary></indexterm>gdk_pixmap_get_type <LINK LINKEND="REFSTD.libgdk.x11.2.0.2">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_pixmap_lookup</primary></indexterm>gdk_pixmap_lookup <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_pixmap_lookup_for_display</primary></indexterm>gdk_pixmap_lookup_for_display <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_pixmap_new</primary></indexterm>gdk_pixmap_new <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_pointer_grab</primary></indexterm>gdk_pointer_grab <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_pointer_is_grabbed</primary></indexterm>gdk_pointer_is_grabbed <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_pointer_ungrab</primary></indexterm>gdk_pointer_ungrab <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_prop_mode_get_type</primary></indexterm>gdk_prop_mode_get_type <LINK LINKEND="REFSTD.libgdk.x11.2.0.2">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_property_change</primary></indexterm>gdk_property_change <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_property_delete</primary></indexterm>gdk_property_delete <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_property_get</primary></indexterm>gdk_property_get <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_property_state_get_type</primary></indexterm>gdk_property_state_get_type <LINK LINKEND="REFSTD.libgdk.x11.2.0.2">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_query_depths</primary></indexterm>gdk_query_depths <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_query_visual_types</primary></indexterm>gdk_query_visual_types <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_rectangle_get_type</primary></indexterm>gdk_rectangle_get_type <LINK LINKEND="REFSTD.libgdk.x11.2.0.2">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_rectangle_intersect</primary></indexterm>gdk_rectangle_intersect <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_rectangle_union</primary></indexterm>gdk_rectangle_union <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_region_copy</primary></indexterm>gdk_region_copy <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_region_destroy</primary></indexterm>gdk_region_destroy <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_region_empty</primary></indexterm>gdk_region_empty <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_region_equal</primary></indexterm>gdk_region_equal <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_region_get_clipbox</primary></indexterm>gdk_region_get_clipbox <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_region_get_rectangles</primary></indexterm>gdk_region_get_rectangles <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_region_intersect</primary></indexterm>gdk_region_intersect <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_region_new</primary></indexterm>gdk_region_new <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_region_offset</primary></indexterm>gdk_region_offset <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_region_point_in</primary></indexterm>gdk_region_point_in <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_region_polygon</primary></indexterm>gdk_region_polygon <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_region_rect_in</primary></indexterm>gdk_region_rect_in <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_region_rectangle</primary></indexterm>gdk_region_rectangle <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_region_shrink</primary></indexterm>gdk_region_shrink <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_region_spans_intersect_foreach</primary></indexterm>gdk_region_spans_intersect_foreach <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_region_subtract</primary></indexterm>gdk_region_subtract <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_region_union</primary></indexterm>gdk_region_union <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_region_union_with_rect</primary></indexterm>gdk_region_union_with_rect <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_region_xor</primary></indexterm>gdk_region_xor <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_rgb_cmap_free</primary></indexterm>gdk_rgb_cmap_free <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_rgb_cmap_new</primary></indexterm>gdk_rgb_cmap_new <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_rgb_colormap_ditherable</primary></indexterm>gdk_rgb_colormap_ditherable <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_rgb_dither_get_type</primary></indexterm>gdk_rgb_dither_get_type <LINK LINKEND="REFSTD.libgdk.x11.2.0.2">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_rgb_ditherable</primary></indexterm>gdk_rgb_ditherable <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_rgb_find_color</primary></indexterm>gdk_rgb_find_color <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_rgb_get_colormap</primary></indexterm>gdk_rgb_get_colormap <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_rgb_get_visual</primary></indexterm>gdk_rgb_get_visual <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_rgb_set_install</primary></indexterm>gdk_rgb_set_install <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_rgb_set_min_colors</primary></indexterm>gdk_rgb_set_min_colors <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_rgb_set_verbose</primary></indexterm>gdk_rgb_set_verbose <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_screen_broadcast_client_message</primary></indexterm>gdk_screen_broadcast_client_message <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_screen_get_default</primary></indexterm>gdk_screen_get_default <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_screen_get_default_colormap</primary></indexterm>gdk_screen_get_default_colormap <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_screen_get_display</primary></indexterm>gdk_screen_get_display <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_screen_get_height</primary></indexterm>gdk_screen_get_height <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_screen_get_height_mm</primary></indexterm>gdk_screen_get_height_mm <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_screen_get_monitor_at_point</primary></indexterm>gdk_screen_get_monitor_at_point <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_screen_get_monitor_at_window</primary></indexterm>gdk_screen_get_monitor_at_window <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_screen_get_monitor_geometry</primary></indexterm>gdk_screen_get_monitor_geometry <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_screen_get_n_monitors</primary></indexterm>gdk_screen_get_n_monitors <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_screen_get_number</primary></indexterm>gdk_screen_get_number <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_screen_get_rgb_colormap</primary></indexterm>gdk_screen_get_rgb_colormap <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_screen_get_rgb_visual</primary></indexterm>gdk_screen_get_rgb_visual <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_screen_get_rgba_colormap</primary></indexterm>gdk_screen_get_rgba_colormap <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_screen_get_rgba_visual</primary></indexterm>gdk_screen_get_rgba_visual <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_screen_get_root_window</primary></indexterm>gdk_screen_get_root_window <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_screen_get_setting</primary></indexterm>gdk_screen_get_setting <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_screen_get_system_colormap</primary></indexterm>gdk_screen_get_system_colormap <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_screen_get_system_visual</primary></indexterm>gdk_screen_get_system_visual <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_screen_get_toplevel_windows</primary></indexterm>gdk_screen_get_toplevel_windows <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_screen_get_type</primary></indexterm>gdk_screen_get_type <LINK LINKEND="REFSTD.libgdk.x11.2.0.2">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_screen_get_width</primary></indexterm>gdk_screen_get_width <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_screen_get_width_mm</primary></indexterm>gdk_screen_get_width_mm <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_screen_height</primary></indexterm>gdk_screen_height <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_screen_height_mm</primary></indexterm>gdk_screen_height_mm <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_screen_list_visuals</primary></indexterm>gdk_screen_list_visuals <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_screen_make_display_name</primary></indexterm>gdk_screen_make_display_name <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_screen_set_default_colormap</primary></indexterm>gdk_screen_set_default_colormap <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_screen_width</primary></indexterm>gdk_screen_width <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_screen_width_mm</primary></indexterm>gdk_screen_width_mm <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_scroll_direction_get_type</primary></indexterm>gdk_scroll_direction_get_type <LINK LINKEND="REFSTD.libgdk.x11.2.0.2">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_selection_convert</primary></indexterm>gdk_selection_convert <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_selection_owner_get</primary></indexterm>gdk_selection_owner_get <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_selection_owner_get_for_display</primary></indexterm>gdk_selection_owner_get_for_display <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_selection_owner_set</primary></indexterm>gdk_selection_owner_set <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_selection_owner_set_for_display</primary></indexterm>gdk_selection_owner_set_for_display <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_selection_property_get</primary></indexterm>gdk_selection_property_get <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_selection_send_notify</primary></indexterm>gdk_selection_send_notify <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_selection_send_notify_for_display</primary></indexterm>gdk_selection_send_notify_for_display <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_set_double_click_time</primary></indexterm>gdk_set_double_click_time <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_set_locale</primary></indexterm>gdk_set_locale <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_set_pointer_hooks</primary></indexterm>gdk_set_pointer_hooks <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_set_program_class</primary></indexterm>gdk_set_program_class <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_set_show_events</primary></indexterm>gdk_set_show_events <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_set_sm_client_id</primary></indexterm>gdk_set_sm_client_id <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_setting_action_get_type</primary></indexterm>gdk_setting_action_get_type <LINK LINKEND="REFSTD.libgdk.x11.2.0.2">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_setting_get</primary></indexterm>gdk_setting_get <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_spawn_command_line_on_screen</primary></indexterm>gdk_spawn_command_line_on_screen <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_spawn_on_screen</primary></indexterm>gdk_spawn_on_screen <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_spawn_on_screen_with_pipes</primary></indexterm>gdk_spawn_on_screen_with_pipes <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_status_get_type</primary></indexterm>gdk_status_get_type <LINK LINKEND="REFSTD.libgdk.x11.2.0.2">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_string_to_compound_text</primary></indexterm>gdk_string_to_compound_text <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_string_to_compound_text_for_display</primary></indexterm>gdk_string_to_compound_text_for_display <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_subwindow_mode_get_type</primary></indexterm>gdk_subwindow_mode_get_type <LINK LINKEND="REFSTD.libgdk.x11.2.0.2">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_synthesize_window_state</primary></indexterm>gdk_synthesize_window_state <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_text_property_to_text_list</primary></indexterm>gdk_text_property_to_text_list <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_text_property_to_text_list_for_display</primary></indexterm>gdk_text_property_to_text_list_for_display <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_text_property_to_utf8_list</primary></indexterm>gdk_text_property_to_utf8_list <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_text_property_to_utf8_list_for_display</primary></indexterm>gdk_text_property_to_utf8_list_for_display <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_threads_enter</primary></indexterm>gdk_threads_enter <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_threads_init</primary></indexterm>gdk_threads_init <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_threads_leave</primary></indexterm>gdk_threads_leave <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_threads_set_lock_functions</primary></indexterm>gdk_threads_set_lock_functions <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_unicode_to_keyval</primary></indexterm>gdk_unicode_to_keyval <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_utf8_to_compound_text</primary></indexterm>gdk_utf8_to_compound_text <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_utf8_to_compound_text_for_display</primary></indexterm>gdk_utf8_to_compound_text_for_display <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_utf8_to_string_target</primary></indexterm>gdk_utf8_to_string_target <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_visibility_state_get_type</primary></indexterm>gdk_visibility_state_get_type <LINK LINKEND="REFSTD.libgdk.x11.2.0.2">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_visual_get_best</primary></indexterm>gdk_visual_get_best <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_visual_get_best_depth</primary></indexterm>gdk_visual_get_best_depth <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_visual_get_best_type</primary></indexterm>gdk_visual_get_best_type <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_visual_get_best_with_both</primary></indexterm>gdk_visual_get_best_with_both <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_visual_get_best_with_depth</primary></indexterm>gdk_visual_get_best_with_depth <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_visual_get_best_with_type</primary></indexterm>gdk_visual_get_best_with_type <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_visual_get_screen</primary></indexterm>gdk_visual_get_screen <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_visual_get_system</primary></indexterm>gdk_visual_get_system <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_visual_get_type</primary></indexterm>gdk_visual_get_type <LINK LINKEND="REFSTD.libgdk.x11.2.0.2">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_visual_type_get_type</primary></indexterm>gdk_visual_type_get_type <LINK LINKEND="REFSTD.libgdk.x11.2.0.2">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_window_add_filter</primary></indexterm>gdk_window_add_filter <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_window_at_pointer</primary></indexterm>gdk_window_at_pointer <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_window_attributes_type_get_type</primary></indexterm>gdk_window_attributes_type_get_type <LINK LINKEND="REFSTD.libgdk.x11.2.0.2">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_window_begin_move_drag</primary></indexterm>gdk_window_begin_move_drag <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_window_begin_paint_rect</primary></indexterm>gdk_window_begin_paint_rect <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_window_begin_paint_region</primary></indexterm>gdk_window_begin_paint_region <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_window_begin_resize_drag</primary></indexterm>gdk_window_begin_resize_drag <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_window_class_get_type</primary></indexterm>gdk_window_class_get_type <LINK LINKEND="REFSTD.libgdk.x11.2.0.2">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_window_clear</primary></indexterm>gdk_window_clear <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_window_clear_area</primary></indexterm>gdk_window_clear_area <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_window_clear_area_e</primary></indexterm>gdk_window_clear_area_e <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_window_configure_finished</primary></indexterm>gdk_window_configure_finished <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_window_constrain_size</primary></indexterm>gdk_window_constrain_size <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_window_deiconify</primary></indexterm>gdk_window_deiconify <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_window_destroy</primary></indexterm>gdk_window_destroy <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_window_destroy_notify</primary></indexterm>gdk_window_destroy_notify <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_window_edge_get_type</primary></indexterm>gdk_window_edge_get_type <LINK LINKEND="REFSTD.libgdk.x11.2.0.2">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_window_enable_synchronized_configure</primary></indexterm>gdk_window_enable_synchronized_configure <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_window_end_paint</primary></indexterm>gdk_window_end_paint <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_window_focus</primary></indexterm>gdk_window_focus <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_window_foreign_new</primary></indexterm>gdk_window_foreign_new <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_window_foreign_new_for_display</primary></indexterm>gdk_window_foreign_new_for_display <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_window_freeze_updates</primary></indexterm>gdk_window_freeze_updates <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_window_fullscreen</primary></indexterm>gdk_window_fullscreen <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_window_get_children</primary></indexterm>gdk_window_get_children <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_window_get_decorations</primary></indexterm>gdk_window_get_decorations <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_window_get_events</primary></indexterm>gdk_window_get_events <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_window_get_frame_extents</primary></indexterm>gdk_window_get_frame_extents <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_window_get_geometry</primary></indexterm>gdk_window_get_geometry <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_window_get_group</primary></indexterm>gdk_window_get_group <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_window_get_internal_paint_info</primary></indexterm>gdk_window_get_internal_paint_info <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_window_get_origin</primary></indexterm>gdk_window_get_origin <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_window_get_parent</primary></indexterm>gdk_window_get_parent <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_window_get_pointer</primary></indexterm>gdk_window_get_pointer <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_window_get_position</primary></indexterm>gdk_window_get_position <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_window_get_root_origin</primary></indexterm>gdk_window_get_root_origin <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_window_get_state</primary></indexterm>gdk_window_get_state <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_window_get_toplevel</primary></indexterm>gdk_window_get_toplevel <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_window_get_toplevels</primary></indexterm>gdk_window_get_toplevels <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_window_get_update_area</primary></indexterm>gdk_window_get_update_area <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_window_get_user_data</primary></indexterm>gdk_window_get_user_data <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_window_get_window_type</primary></indexterm>gdk_window_get_window_type <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_window_hide</primary></indexterm>gdk_window_hide <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_window_hints_get_type</primary></indexterm>gdk_window_hints_get_type <LINK LINKEND="REFSTD.libgdk.x11.2.0.2">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_window_iconify</primary></indexterm>gdk_window_iconify <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_window_invalidate_maybe_recurse</primary></indexterm>gdk_window_invalidate_maybe_recurse <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_window_invalidate_rect</primary></indexterm>gdk_window_invalidate_rect <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_window_invalidate_region</primary></indexterm>gdk_window_invalidate_region <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_window_is_viewable</primary></indexterm>gdk_window_is_viewable <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_window_is_visible</primary></indexterm>gdk_window_is_visible <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_window_lookup</primary></indexterm>gdk_window_lookup <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_window_lookup_for_display</primary></indexterm>gdk_window_lookup_for_display <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_window_lower</primary></indexterm>gdk_window_lower <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_window_maximize</primary></indexterm>gdk_window_maximize <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_window_merge_child_shapes</primary></indexterm>gdk_window_merge_child_shapes <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_window_move</primary></indexterm>gdk_window_move <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_window_move_region</primary></indexterm>gdk_window_move_region <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_window_move_resize</primary></indexterm>gdk_window_move_resize <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_window_new</primary></indexterm>gdk_window_new <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_window_object_get_type</primary></indexterm>gdk_window_object_get_type <LINK LINKEND="REFSTD.libgdk.x11.2.0.2">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_window_peek_children</primary></indexterm>gdk_window_peek_children <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_window_process_all_updates</primary></indexterm>gdk_window_process_all_updates <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_window_process_updates</primary></indexterm>gdk_window_process_updates <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_window_raise</primary></indexterm>gdk_window_raise <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_window_register_dnd</primary></indexterm>gdk_window_register_dnd <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_window_remove_filter</primary></indexterm>gdk_window_remove_filter <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_window_reparent</primary></indexterm>gdk_window_reparent <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_window_resize</primary></indexterm>gdk_window_resize <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_window_scroll</primary></indexterm>gdk_window_scroll <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_window_set_accept_focus</primary></indexterm>gdk_window_set_accept_focus <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_window_set_back_pixmap</primary></indexterm>gdk_window_set_back_pixmap <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_window_set_background</primary></indexterm>gdk_window_set_background <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_window_set_child_shapes</primary></indexterm>gdk_window_set_child_shapes <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_window_set_cursor</primary></indexterm>gdk_window_set_cursor <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_window_set_debug_updates</primary></indexterm>gdk_window_set_debug_updates <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_window_set_decorations</primary></indexterm>gdk_window_set_decorations <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_window_set_events</primary></indexterm>gdk_window_set_events <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_window_set_focus_on_map</primary></indexterm>gdk_window_set_focus_on_map <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_window_set_functions</primary></indexterm>gdk_window_set_functions <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_window_set_geometry_hints</primary></indexterm>gdk_window_set_geometry_hints <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_window_set_group</primary></indexterm>gdk_window_set_group <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_window_set_icon</primary></indexterm>gdk_window_set_icon <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_window_set_icon_list</primary></indexterm>gdk_window_set_icon_list <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_window_set_icon_name</primary></indexterm>gdk_window_set_icon_name <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_window_set_keep_above</primary></indexterm>gdk_window_set_keep_above <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_window_set_keep_below</primary></indexterm>gdk_window_set_keep_below <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_window_set_modal_hint</primary></indexterm>gdk_window_set_modal_hint <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_window_set_override_redirect</primary></indexterm>gdk_window_set_override_redirect <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_window_set_role</primary></indexterm>gdk_window_set_role <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_window_set_skip_pager_hint</primary></indexterm>gdk_window_set_skip_pager_hint <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_window_set_skip_taskbar_hint</primary></indexterm>gdk_window_set_skip_taskbar_hint <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_window_set_static_gravities</primary></indexterm>gdk_window_set_static_gravities <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_window_set_title</primary></indexterm>gdk_window_set_title <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_window_set_transient_for</primary></indexterm>gdk_window_set_transient_for <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_window_set_type_hint</primary></indexterm>gdk_window_set_type_hint <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_window_set_urgency_hint</primary></indexterm>gdk_window_set_urgency_hint <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_window_set_user_data</primary></indexterm>gdk_window_set_user_data <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_window_shape_combine_mask</primary></indexterm>gdk_window_shape_combine_mask <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_window_shape_combine_region</primary></indexterm>gdk_window_shape_combine_region <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_window_show</primary></indexterm>gdk_window_show <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_window_show_unraised</primary></indexterm>gdk_window_show_unraised <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_window_state_get_type</primary></indexterm>gdk_window_state_get_type <LINK LINKEND="REFSTD.libgdk.x11.2.0.2">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_window_stick</primary></indexterm>gdk_window_stick <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_window_thaw_updates</primary></indexterm>gdk_window_thaw_updates <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_window_type_get_type</primary></indexterm>gdk_window_type_get_type <LINK LINKEND="REFSTD.libgdk.x11.2.0.2">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_window_type_hint_get_type</primary></indexterm>gdk_window_type_hint_get_type <LINK LINKEND="REFSTD.libgdk.x11.2.0.2">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_window_unfullscreen</primary></indexterm>gdk_window_unfullscreen <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_window_unmaximize</primary></indexterm>gdk_window_unmaximize <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_window_unstick</primary></indexterm>gdk_window_unstick <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_window_withdraw</primary></indexterm>gdk_window_withdraw <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_wm_decoration_get_type</primary></indexterm>gdk_wm_decoration_get_type <LINK LINKEND="REFSTD.libgdk.x11.2.0.2">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_wm_function_get_type</primary></indexterm>gdk_wm_function_get_type <LINK LINKEND="REFSTD.libgdk.x11.2.0.2">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_x11_atom_to_xatom</primary></indexterm>gdk_x11_atom_to_xatom <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_x11_atom_to_xatom_for_display</primary></indexterm>gdk_x11_atom_to_xatom_for_display <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_x11_colormap_foreign_new</primary></indexterm>gdk_x11_colormap_foreign_new <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_x11_colormap_get_xcolormap</primary></indexterm>gdk_x11_colormap_get_xcolormap <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_x11_colormap_get_xdisplay</primary></indexterm>gdk_x11_colormap_get_xdisplay <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_x11_cursor_get_xcursor</primary></indexterm>gdk_x11_cursor_get_xcursor <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_x11_cursor_get_xdisplay</primary></indexterm>gdk_x11_cursor_get_xdisplay <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_x11_display_get_user_time</primary></indexterm>gdk_x11_display_get_user_time <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_x11_display_get_xdisplay</primary></indexterm>gdk_x11_display_get_xdisplay <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_x11_display_grab</primary></indexterm>gdk_x11_display_grab <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_x11_display_set_cursor_theme</primary></indexterm>gdk_x11_display_set_cursor_theme <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_x11_display_ungrab</primary></indexterm>gdk_x11_display_ungrab <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_x11_drawable_get_xdisplay</primary></indexterm>gdk_x11_drawable_get_xdisplay <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_x11_drawable_get_xid</primary></indexterm>gdk_x11_drawable_get_xid <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_x11_gc_get_xdisplay</primary></indexterm>gdk_x11_gc_get_xdisplay <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_x11_gc_get_xgc</primary></indexterm>gdk_x11_gc_get_xgc <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_x11_get_default_root_xwindow</primary></indexterm>gdk_x11_get_default_root_xwindow <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_x11_get_default_screen</primary></indexterm>gdk_x11_get_default_screen <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_x11_get_default_xdisplay</primary></indexterm>gdk_x11_get_default_xdisplay <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_x11_get_server_time</primary></indexterm>gdk_x11_get_server_time <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_x11_get_xatom_by_name</primary></indexterm>gdk_x11_get_xatom_by_name <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_x11_get_xatom_by_name_for_display</primary></indexterm>gdk_x11_get_xatom_by_name_for_display <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_x11_get_xatom_name</primary></indexterm>gdk_x11_get_xatom_name <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_x11_get_xatom_name_for_display</primary></indexterm>gdk_x11_get_xatom_name_for_display <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_x11_grab_server</primary></indexterm>gdk_x11_grab_server <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_x11_image_get_xdisplay</primary></indexterm>gdk_x11_image_get_xdisplay <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_x11_image_get_ximage</primary></indexterm>gdk_x11_image_get_ximage <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_x11_lookup_xdisplay</primary></indexterm>gdk_x11_lookup_xdisplay <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_x11_register_standard_event_type</primary></indexterm>gdk_x11_register_standard_event_type <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_x11_screen_get_screen_number</primary></indexterm>gdk_x11_screen_get_screen_number <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_x11_screen_get_window_manager_name</primary></indexterm>gdk_x11_screen_get_window_manager_name <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_x11_screen_get_xscreen</primary></indexterm>gdk_x11_screen_get_xscreen <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_x11_screen_lookup_visual</primary></indexterm>gdk_x11_screen_lookup_visual <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_x11_screen_supports_net_wm_hint</primary></indexterm>gdk_x11_screen_supports_net_wm_hint <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_x11_ungrab_server</primary></indexterm>gdk_x11_ungrab_server <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_x11_visual_get_xvisual</primary></indexterm>gdk_x11_visual_get_xvisual <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_x11_window_move_to_current_desktop</primary></indexterm>gdk_x11_window_move_to_current_desktop <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_x11_window_set_user_time</primary></indexterm>gdk_x11_window_set_user_time <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_x11_xatom_to_atom</primary></indexterm>gdk_x11_xatom_to_atom <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_x11_xatom_to_atom_for_display</primary></indexterm>gdk_x11_xatom_to_atom_for_display <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_xid_table_lookup</primary></indexterm>gdk_xid_table_lookup <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_xid_table_lookup_for_display</primary></indexterm>gdk_xid_table_lookup_for_display <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdkx_visual_get</primary></indexterm>gdkx_visual_get <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for GTK Drawing toolkit specified in <XREF linkend="tbl-libgdk-x11-2.0-gtk-d-data">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<TABLE id="tbl-libgdk-x11-2.0-gtk-d-data">
<TITLE>libgdk-x11-2.0 - GTK Drawing toolkit Data Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>gdk_display</primary></indexterm>gdk_display <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_threads_lock</primary></indexterm>gdk_threads_lock <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_threads_unlock</primary></indexterm>gdk_threads_unlock <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk 2.8]</LINK></ENTRY>
<ENTRY></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>
</SECT2>
</SECT1>
<SECT1 ID=libgdk-x11-2.0-ddefs>
<TITLE>Data Definitions for libgdk-x11-2.0</TITLE>
<PARA>
This section defines global identifiers and their values that are associated
with interfaces contained in libgdk-x11-2.0.
These definitions are organized into groups that
correspond to system headers. This convention is used as a
convenience for the reader, and does not imply the existence
of these headers, or their content.
Where an interface is defined as requiring a particular system header file
all of the data definitions for that system header file presented here shall be in effect.
</PARA>
<PARA>
This section gives data definitions to promote binary application
portability, not to repeat source interface definitions available
elsewhere. System providers and application developers should use this ABI
to supplement - not to replace - source interface definition specifications.
</PARA>
<PARA>
This specification uses the <XREF LINKEND='std.ISOC99'> C Language as the reference programming language, and data definitions are specified in ISO C format. The C language is used here as a convenient notation. Using a C language description of these data objects does not preclude their use by other programming languages.</PARA>
<SECT2>
<TITLE>gtk-2.0/gdk/gdk.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define GDK_WINDOWING_X11
#define GDK_PIXMAP_OBJECT(object)	 \
	((GdkPixmapObject *) GDK_PIXMAP (object))
#define GDK_WINDOW_OBJECT(object)	 \
	((GdkWindowObject *) GDK_WINDOW (object))
#define GDK_TYPE_WINDOW_ATTRIBUTES_TYPE	 \
	(gdk_window_attributes_type_get_type())
#define GDK_COLORMAP_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GDK_TYPE_COLORMAP, \
	GdkColormapClass))
#define GDK_DEVICE_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GDK_TYPE_DEVICE, GdkDeviceClass))
#define GDK_DISPLAY_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GDK_TYPE_DISPLAY, \
	GdkDisplayClass))
#define GDK_DISPLAY_MANAGER_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GDK_TYPE_DISPLAY_MANAGER, \
	GdkDisplayManagerClass))
#define GDK_DRAG_CONTEXT_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GDK_TYPE_DRAG_CONTEXT, \
	GdkDragContextClass))
#define GDK_DRAWABLE_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GDK_TYPE_DRAWABLE, \
	GdkDrawableClass))
#define GDK_GC_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GDK_TYPE_GC, GdkGCClass))
#define GDK_IMAGE_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GDK_TYPE_IMAGE, GdkImageClass))
#define GDK_KEYMAP_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GDK_TYPE_KEYMAP, GdkKeymapClass))
#define GDK_PANGO_RENDERER_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GDK_TYPE_PANGO_RENDERER, \
	GdkPangoRendererClass))
#define GDK_PIXMAP_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GDK_TYPE_PIXMAP, \
	GdkPixmapObjectClass))
#define GDK_SCREEN_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GDK_TYPE_SCREEN, GdkScreenClass))
#define GDK_VISUAL_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GDK_TYPE_VISUAL, GdkVisualClass))
#define GDK_WINDOW_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GDK_TYPE_WINDOW, \
	GdkWindowObjectClass))
#define GDK_IS_COLORMAP_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GDK_TYPE_COLORMAP))
#define GDK_IS_DEVICE_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GDK_TYPE_DEVICE))
#define GDK_IS_DISPLAY_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GDK_TYPE_DISPLAY))
#define GDK_IS_DISPLAY_MANAGER_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GDK_TYPE_DISPLAY_MANAGER))
#define GDK_IS_DRAG_CONTEXT_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GDK_TYPE_DRAG_CONTEXT))
#define GDK_IS_DRAWABLE_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GDK_TYPE_DRAWABLE))
#define GDK_IS_GC_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GDK_TYPE_GC))
#define GDK_IS_IMAGE_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GDK_TYPE_IMAGE))
#define GDK_IS_KEYMAP_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GDK_TYPE_KEYMAP))
#define GDK_IS_PANGO_RENDERER_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GDK_TYPE_PANGO_RENDERER))
#define GDK_IS_PIXMAP_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GDK_TYPE_PIXMAP))
#define GDK_IS_SCREEN_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GDK_TYPE_SCREEN))
#define GDK_IS_VISUAL_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GDK_TYPE_VISUAL))
#define GDK_IS_WINDOW_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GDK_TYPE_WINDOW))
#define GDK_COLORMAP(object)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((object), GDK_TYPE_COLORMAP, \
	GdkColormap))
#define GDK_DEVICE(object)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((object), GDK_TYPE_DEVICE, GdkDevice))
#define GDK_DISPLAY_OBJECT(object)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((object), GDK_TYPE_DISPLAY, GdkDisplay))
#define GDK_DISPLAY_MANAGER(object)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((object), GDK_TYPE_DISPLAY_MANAGER, \
	GdkDisplayManager))
#define GDK_DRAG_CONTEXT(object)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((object), GDK_TYPE_DRAG_CONTEXT, \
	GdkDragContext))
#define GDK_DRAWABLE(object)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((object), GDK_TYPE_DRAWABLE, \
	GdkDrawable))
#define GDK_GC(object)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((object), GDK_TYPE_GC, GdkGC))
#define GDK_IMAGE(object)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((object), GDK_TYPE_IMAGE, GdkImage))
#define GDK_KEYMAP(object)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((object), GDK_TYPE_KEYMAP, GdkKeymap))
#define GDK_PANGO_RENDERER(object)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((object), GDK_TYPE_PANGO_RENDERER, \
	GdkPangoRenderer))
#define GDK_PIXMAP(object)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((object), GDK_TYPE_PIXMAP, GdkPixmap))
#define GDK_SCREEN(object)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((object), GDK_TYPE_SCREEN, GdkScreen))
#define GDK_VISUAL(object)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((object), GDK_TYPE_VISUAL, GdkVisual))
#define GDK_WINDOW(object)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((object), GDK_TYPE_WINDOW, GdkWindow))
#define GDK_IS_COLORMAP(object)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((object), GDK_TYPE_COLORMAP))
#define GDK_IS_DEVICE(object)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((object), GDK_TYPE_DEVICE))
#define GDK_IS_DISPLAY(object)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((object), GDK_TYPE_DISPLAY))
#define GDK_IS_DISPLAY_MANAGER(object)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((object), GDK_TYPE_DISPLAY_MANAGER))
#define GDK_IS_DRAG_CONTEXT(object)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((object), GDK_TYPE_DRAG_CONTEXT))
#define GDK_IS_DRAWABLE(object)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((object), GDK_TYPE_DRAWABLE))
#define GDK_IS_GC(object)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((object), GDK_TYPE_GC))
#define GDK_IS_IMAGE(object)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((object), GDK_TYPE_IMAGE))
#define GDK_IS_KEYMAP(object)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((object), GDK_TYPE_KEYMAP))
#define GDK_IS_PANGO_RENDERER(object)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((object), GDK_TYPE_PANGO_RENDERER))
#define GDK_IS_PIXMAP(object)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((object), GDK_TYPE_PIXMAP))
#define GDK_IS_SCREEN(object)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((object), GDK_TYPE_SCREEN))
#define GDK_IS_VISUAL(object)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((object), GDK_TYPE_VISUAL))
#define GDK_IS_WINDOW(object)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((object), GDK_TYPE_WINDOW))
#define GDK_COLORMAP_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GDK_TYPE_COLORMAP, \
	GdkColormapClass))
#define GDK_DEVICE_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GDK_TYPE_DEVICE, GdkDeviceClass))
#define GDK_DISPLAY_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GDK_TYPE_DISPLAY, \
	GdkDisplayClass))
#define GDK_DISPLAY_MANAGER_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GDK_TYPE_DISPLAY_MANAGER, \
	GdkDisplayManagerClass))
#define GDK_DRAG_CONTEXT_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GDK_TYPE_DRAG_CONTEXT, \
	GdkDragContextClass))
#define GDK_DRAWABLE_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GDK_TYPE_DRAWABLE, \
	GdkDrawableClass))
#define GDK_GC_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GDK_TYPE_GC, GdkGCClass))
#define GDK_IMAGE_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GDK_TYPE_IMAGE, GdkImageClass))
#define GDK_KEYMAP_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GDK_TYPE_KEYMAP, GdkKeymapClass))
#define GDK_PANGO_RENDERER_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GDK_TYPE_PANGO_RENDERER, \
	GdkPangoRendererClass))
#define GDK_PIXMAP_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GDK_TYPE_PIXMAP, \
	GdkPixmapObjectClass))
#define GDK_SCREEN_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GDK_TYPE_SCREEN, GdkScreenClass))
#define GDK_VISUAL_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GDK_TYPE_VISUAL, GdkVisualClass))
#define GDK_WINDOW_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GDK_TYPE_WINDOW, \
	GdkWindowObjectClass))
#define GDK_THREADS_ENTER()	 \
	G_STMT_START { if (gdk_threads_lock) (*gdk_threads_lock) (); } \
	G_STMT_END
#define GDK_THREADS_LEAVE()	 \
	G_STMT_START { if (gdk_threads_unlock) (*gdk_threads_unlock) (); } \
	G_STMT_END
#define GDK_POINTER_TO_ATOM(ptr)	((GdkAtom)(ptr))
#define _GDK_MAKE_ATOM(val)	((GdkAtom)GUINT_TO_POINTER(val))
#define GDK_ATOM_TO_POINTER(atom)	(atom)
#define GDK_TYPE_AXIS_USE	(gdk_axis_use_get_type())
#define GDK_TYPE_BYTE_ORDER	(gdk_byte_order_get_type())
#define GDK_TYPE_CAP_STYLE	(gdk_cap_style_get_type())
#define GDK_TYPE_COLORMAP	(gdk_colormap_get_type ())
#define GDK_TYPE_COLOR	(gdk_color_get_type ())
#define GDK_TYPE_CROSSING_MODE	(gdk_crossing_mode_get_type())
#define GDK_TYPE_CURSOR	(gdk_cursor_get_type ())
#define GDK_TYPE_CURSOR_TYPE	(gdk_cursor_type_get_type())
#define GDK_TYPE_DEVICE	(gdk_device_get_type ())
#define GDK_TYPE_DISPLAY	(gdk_display_get_type ())
#define GDK_TYPE_DISPLAY_MANAGER	(gdk_display_manager_get_type ())
#define GDK_TYPE_DRAG_ACTION	(gdk_drag_action_get_type())
#define GDK_TYPE_DRAG_CONTEXT	(gdk_drag_context_get_type ())
#define GDK_TYPE_DRAG_PROTOCOL	(gdk_drag_protocol_get_type())
#define GDK_TYPE_DRAWABLE	(gdk_drawable_get_type ())
#define GDK_TYPE_EVENT	(gdk_event_get_type ())
#define GDK_TYPE_EVENT_MASK	(gdk_event_mask_get_type())
#define GDK_TYPE_EVENT_TYPE	(gdk_event_type_get_type())
#define GDK_TYPE_EXTENSION_MODE	(gdk_extension_mode_get_type())
#define GDK_TYPE_FILL	(gdk_fill_get_type())
#define GDK_TYPE_FILL_RULE	(gdk_fill_rule_get_type())
#define GDK_TYPE_FILTER_RETURN	(gdk_filter_return_get_type())
#define GDK_TYPE_FONT_TYPE	(gdk_font_type_get_type())
#define GDK_TYPE_FUNCTION	(gdk_function_get_type())
#define GDK_TYPE_GC	(gdk_gc_get_type ())
#define GDK_TYPE_GC_VALUES_MASK	(gdk_gc_values_mask_get_type())
#define GDK_TYPE_GRAB_STATUS	(gdk_grab_status_get_type())
#define GDK_TYPE_GRAVITY	(gdk_gravity_get_type())
#define GDK_TYPE_IMAGE	(gdk_image_get_type ())
#define GDK_TYPE_IMAGE_TYPE	(gdk_image_type_get_type())
#define GDK_TYPE_INPUT_CONDITION	(gdk_input_condition_get_type())
#define GDK_TYPE_INPUT_MODE	(gdk_input_mode_get_type())
#define GDK_TYPE_INPUT_SOURCE	(gdk_input_source_get_type())
#define GDK_TYPE_JOIN_STYLE	(gdk_join_style_get_type())
#define GDK_TYPE_KEYMAP	(gdk_keymap_get_type ())
#define GDK_TYPE_LINE_STYLE	(gdk_line_style_get_type())
#define GDK_TYPE_MODIFIER_TYPE	(gdk_modifier_type_get_type())
#define GDK_TYPE_NOTIFY_TYPE	(gdk_notify_type_get_type())
#define GDK_TYPE_OVERLAP_TYPE	(gdk_overlap_type_get_type())
#define GDK_TYPE_OWNER_CHANGE	(gdk_owner_change_get_type())
#define GDK_TYPE_PANGO_RENDERER	(gdk_pango_renderer_get_type())
#define GDK_TYPE_PIXMAP	(gdk_pixmap_get_type ())
#define GDK_TYPE_PROPERTY_STATE	(gdk_property_state_get_type())
#define GDK_TYPE_PROP_MODE	(gdk_prop_mode_get_type())
#define GDK_TYPE_RECTANGLE	(gdk_rectangle_get_type ())
#define GDK_TYPE_RGB_DITHER	(gdk_rgb_dither_get_type())
#define GDK_TYPE_SCREEN	(gdk_screen_get_type ())
#define GDK_TYPE_SCROLL_DIRECTION	(gdk_scroll_direction_get_type())
#define GDK_TYPE_SETTING_ACTION	(gdk_setting_action_get_type())
#define GDK_TYPE_STATUS	(gdk_status_get_type())
#define GDK_TYPE_SUBWINDOW_MODE	(gdk_subwindow_mode_get_type())
#define GDK_TYPE_VISIBILITY_STATE	(gdk_visibility_state_get_type())
#define GDK_TYPE_VISUAL	(gdk_visual_get_type ())
#define GDK_TYPE_VISUAL_TYPE	(gdk_visual_type_get_type())
#define GDK_TYPE_WINDOW_CLASS	(gdk_window_class_get_type())
#define GDK_TYPE_WINDOW_EDGE	(gdk_window_edge_get_type())
#define GDK_TYPE_WINDOW_HINTS	(gdk_window_hints_get_type())
#define GDK_TYPE_WINDOW	(gdk_window_object_get_type ())
#define GDK_TYPE_WINDOW_STATE	(gdk_window_state_get_type())
#define GDK_TYPE_WINDOW_TYPE	(gdk_window_type_get_type())
#define GDK_TYPE_WINDOW_TYPE_HINT	(gdk_window_type_hint_get_type())
#define GDK_TYPE_WM_DECORATION	(gdk_wm_decoration_get_type())
#define GDK_TYPE_WM_FUNCTION	(gdk_wm_function_get_type())
#define GDK_PRIORITY_EVENTS	(G_PRIORITY_DEFAULT)
#define GDK_PRIORITY_REDRAW	(G_PRIORITY_HIGH_IDLE + 20)
#define GDK_CURRENT_TIME	0L
#define GDK_HAVE_WCHAR_H	1
#define GDK_HAVE_WCTYPE_H	1
#define GDK_MAX_TIMECOORD_AXES	128
#define GDK_PARENT_RELATIVE	1L
#define GDKVAR	extern
#define gdk_draw_bitmap	gdk_draw_drawable
#define GDK_NONE	_GDK_MAKE_ATOM (0)
#define GDK_SELECTION_PRIMARY	_GDK_MAKE_ATOM (1)
#define GDK_SELECTION_TYPE_DRAWABLE	_GDK_MAKE_ATOM (17)
#define GDK_TARGET_DRAWABLE	_GDK_MAKE_ATOM (17)
#define GDK_SELECTION_TYPE_INTEGER	_GDK_MAKE_ATOM (19)
#define GDK_SELECTION_SECONDARY	_GDK_MAKE_ATOM (2)
#define GDK_SELECTION_TYPE_PIXMAP	_GDK_MAKE_ATOM (20)
#define GDK_TARGET_PIXMAP	_GDK_MAKE_ATOM (20)
#define GDK_SELECTION_TYPE_STRING	_GDK_MAKE_ATOM (31)
#define GDK_TARGET_STRING	_GDK_MAKE_ATOM (31)
#define GDK_SELECTION_TYPE_WINDOW	_GDK_MAKE_ATOM (33)
#define GDK_SELECTION_TYPE_ATOM	_GDK_MAKE_ATOM (4)
#define GDK_SELECTION_TYPE_BITMAP	_GDK_MAKE_ATOM (5)
#define GDK_TARGET_BITMAP	_GDK_MAKE_ATOM (5)
#define GDK_SELECTION_CLIPBOARD	_GDK_MAKE_ATOM (69)
#define GDK_SELECTION_TYPE_COLORMAP	_GDK_MAKE_ATOM (7)
#define GDK_TARGET_COLORMAP	_GDK_MAKE_ATOM (7)

typedef struct _GdkDrawable {
    GObject parent_instance;
} GdkWindow;
typedef struct _GdkColor {
    guint32 pixel;
    guint16 red;
    guint16 green;
    guint16 blue;
} GdkColor;
typedef enum {
    GDK_VISUAL_STATIC_GRAY = 0,
    GDK_VISUAL_GRAYSCALE = 1,
    GDK_VISUAL_STATIC_COLOR = 2,
    GDK_VISUAL_PSEUDO_COLOR = 3,
    GDK_VISUAL_TRUE_COLOR = 4,
    GDK_VISUAL_DIRECT_COLOR = 5
} GdkVisualType;
typedef enum {
    GDK_LSB_FIRST = 0,
    GDK_MSB_FIRST = 1
} GdkByteOrder;
typedef struct _GdkVisual {
    GObject parent_instance;
    GdkVisualType type;
    gint depth;
    GdkByteOrder byte_order;
    gint colormap_size;
    gint bits_per_rgb;
    guint32 red_mask;
    gint red_shift;
    gint red_prec;
    guint32 green_mask;
    gint green_shift;
    gint green_prec;
    guint32 blue_mask;
    gint blue_shift;
    gint blue_prec;
} GdkVisual;
typedef struct _GdkColormap {
    GObject parent_instance;
    gint size;
    GdkColor *colors;
    GdkVisual *visual;
    gpointer windowing_data;
} GdkColormap;
typedef struct _GdkGC {
    GObject parent_instance;
    gint clip_x_origin;
    gint clip_y_origin;
    gint ts_x_origin;
    gint ts_y_origin;
    GdkColormap *colormap;
} GdkGC;
typedef struct _GdkDrawable {
    GObject parent_instance;
} GdkDrawable;
typedef enum {
    GDK_SOURCE_MOUSE = 0,
    GDK_SOURCE_PEN = 1,
    GDK_SOURCE_ERASER = 2,
    GDK_SOURCE_CURSOR = 3
} GdkInputSource;
typedef enum {
    GDK_MODE_DISABLED = 0,
    GDK_MODE_SCREEN = 1,
    GDK_MODE_WINDOW = 2
} GdkInputMode;
typedef enum {
    GDK_AXIS_IGNORE = 0,
    GDK_AXIS_X = 1,
    GDK_AXIS_Y = 2,
    GDK_AXIS_PRESSURE = 3,
    GDK_AXIS_XTILT = 4,
    GDK_AXIS_YTILT = 5,
    GDK_AXIS_WHEEL = 6,
    GDK_AXIS_LAST = 7
} GdkAxisUse;
typedef struct _GdkDeviceAxis {
    GdkAxisUse use;
    gdouble min;
    gdouble max;
} GdkDeviceAxis;
typedef enum {
    GDK_SHIFT_MASK = 1,
    GDK_LOCK_MASK = 2,
    GDK_CONTROL_MASK = 4,
    GDK_MOD1_MASK = 8,
    GDK_MOD2_MASK = 16,
    GDK_MOD3_MASK = 32,
    GDK_MOD4_MASK = 64,
    GDK_MOD5_MASK = 128,
    GDK_BUTTON1_MASK = 256,
    GDK_BUTTON2_MASK = 512,
    GDK_BUTTON3_MASK = 1024,
    GDK_BUTTON4_MASK = 2048,
    GDK_BUTTON5_MASK = 4096,
    GDK_RELEASE_MASK = 1073741824,
    GDK_MODIFIER_MASK = 1073750015
} GdkModifierType;
typedef struct _GdkDeviceKey {
    guint keyval;
    GdkModifierType modifiers;
} GdkDeviceKey;
typedef struct _GdkDevice {
    GObject parent_instance;
    gchar *name;
    GdkInputSource source;
    GdkInputMode mode;
    gboolean has_cursor;
    gint num_axes;
    GdkDeviceAxis *axes;
    gint num_keys;
    GdkDeviceKey *keys;
} GdkDevice;
typedef struct _GdkDisplay {
    GObject parent_instance;
    GList *queued_events;
    GList *queued_tail;
    guint32 button_click_time[2];
    GdkWindow *button_window[2];
    gint button_number[2];
    guint double_click_time;
    GdkDevice *core_pointer;
    const GdkDisplayPointerHooks *pointer_hooks;
    guint closed:1;
    guint double_click_distance;
    gint button_x[2];
    gint button_y[2];
} GdkDisplay;
typedef struct _GdkScreen GdkScreen;
typedef struct _GdkDisplayPointerHooks {
    void (*get_pointer) (GdkDisplay *, GdkScreen * *, gint *, gint *,
			 GdkModifierType *);
    GdkWindow *(*window_get_pointer) (GdkDisplay *, GdkWindow *, gint *,
				      gint *, GdkModifierType *);
    GdkWindow *(*window_at_pointer) (GdkDisplay *, gint *, gint *);
} GdkDisplayPointerHooks;
typedef enum {
    GDK_EXPOSURE_MASK = 2,
    GDK_POINTER_MOTION_MASK = 4,
    GDK_POINTER_MOTION_HINT_MASK = 8,
    GDK_BUTTON_MOTION_MASK = 16,
    GDK_BUTTON1_MOTION_MASK = 32,
    GDK_BUTTON2_MOTION_MASK = 64,
    GDK_BUTTON3_MOTION_MASK = 128,
    GDK_BUTTON_PRESS_MASK = 256,
    GDK_BUTTON_RELEASE_MASK = 512,
    GDK_KEY_PRESS_MASK = 1024,
    GDK_KEY_RELEASE_MASK = 2048,
    GDK_ENTER_NOTIFY_MASK = 4096,
    GDK_LEAVE_NOTIFY_MASK = 8192,
    GDK_FOCUS_CHANGE_MASK = 16384,
    GDK_STRUCTURE_MASK = 32768,
    GDK_PROPERTY_CHANGE_MASK = 65536,
    GDK_VISIBILITY_NOTIFY_MASK = 131072,
    GDK_PROXIMITY_IN_MASK = 262144,
    GDK_PROXIMITY_OUT_MASK = 524288,
    GDK_SUBSTRUCTURE_MASK = 1048576,
    GDK_SCROLL_MASK = 2097152,
    GDK_ALL_EVENTS_MASK = 4194302
} GdkEventMask;
typedef enum {
    GDK_X_CURSOR = 0,
    GDK_ARROW = 2,
    GDK_BASED_ARROW_DOWN = 4,
    GDK_BASED_ARROW_UP = 6,
    GDK_BOAT = 8,
    GDK_BOGOSITY = 10,
    GDK_BOTTOM_LEFT_CORNER = 12,
    GDK_BOTTOM_RIGHT_CORNER = 14,
    GDK_BOTTOM_SIDE = 16,
    GDK_BOTTOM_TEE = 18,
    GDK_BOX_SPIRAL = 20,
    GDK_CENTER_PTR = 22,
    GDK_CIRCLE = 24,
    GDK_CLOCK = 26,
    GDK_COFFEE_MUG = 28,
    GDK_CROSS = 30,
    GDK_CROSS_REVERSE = 32,
    GDK_CROSSHAIR = 34,
    GDK_DIAMOND_CROSS = 36,
    GDK_DOT = 38,
    GDK_DOTBOX = 40,
    GDK_DOUBLE_ARROW = 42,
    GDK_DRAFT_LARGE = 44,
    GDK_DRAFT_SMALL = 46,
    GDK_DRAPED_BOX = 48,
    GDK_EXCHANGE = 50,
    GDK_FLEUR = 52,
    GDK_GOBBLER = 54,
    GDK_GUMBY = 56,
    GDK_HAND1 = 58,
    GDK_HAND2 = 60,
    GDK_HEART = 62,
    GDK_ICON = 64,
    GDK_IRON_CROSS = 66,
    GDK_LEFT_PTR = 68,
    GDK_LEFT_SIDE = 70,
    GDK_LEFT_TEE = 72,
    GDK_LEFTBUTTON = 74,
    GDK_LL_ANGLE = 76,
    GDK_LR_ANGLE = 78,
    GDK_MAN = 80,
    GDK_MIDDLEBUTTON = 82,
    GDK_MOUSE = 84,
    GDK_PENCIL = 86,
    GDK_PIRATE = 88,
    GDK_PLUS = 90,
    GDK_QUESTION_ARROW = 92,
    GDK_RIGHT_PTR = 94,
    GDK_RIGHT_SIDE = 96,
    GDK_RIGHT_TEE = 98,
    GDK_RIGHTBUTTON = 100,
    GDK_RTL_LOGO = 102,
    GDK_SAILBOAT = 104,
    GDK_SB_DOWN_ARROW = 106,
    GDK_SB_H_DOUBLE_ARROW = 108,
    GDK_SB_LEFT_ARROW = 110,
    GDK_SB_RIGHT_ARROW = 112,
    GDK_SB_UP_ARROW = 114,
    GDK_SB_V_DOUBLE_ARROW = 116,
    GDK_SHUTTLE = 118,
    GDK_SIZING = 120,
    GDK_SPIDER = 122,
    GDK_SPRAYCAN = 124,
    GDK_STAR = 126,
    GDK_TARGET = 128,
    GDK_TCROSS = 130,
    GDK_TOP_LEFT_ARROW = 132,
    GDK_TOP_LEFT_CORNER = 134,
    GDK_TOP_RIGHT_CORNER = 136,
    GDK_TOP_SIDE = 138,
    GDK_TOP_TEE = 140,
    GDK_TREK = 142,
    GDK_UL_ANGLE = 144,
    GDK_UMBRELLA = 146,
    GDK_UR_ANGLE = 148,
    GDK_WATCH = 150,
    GDK_XTERM = 152,
    GDK_LAST_CURSOR = 153,
    GDK_CURSOR_IS_PIXMAP = -1
} GdkCursorType;
typedef struct _GdkCursor {
    GdkCursorType type;
    guint ref_count;
} GdkCursor;
typedef struct _GdkKeymap {
    GObject parent_instance;
    GdkDisplay *display;
} GdkKeymap;
typedef struct _GdkAtom *GdkAtom;
typedef enum {
    GDK_FILTER_CONTINUE = 0,
    GDK_FILTER_TRANSLATE = 1,
    GDK_FILTER_REMOVE = 2
} GdkFilterReturn;
typedef void GdkXEvent;
typedef enum {
    GDK_NOTHING = -1,
    GDK_DELETE = 0,
    GDK_DESTROY = 1,
    GDK_EXPOSE = 2,
    GDK_MOTION_NOTIFY = 3,
    GDK_BUTTON_PRESS = 4,
    GDK_2BUTTON_PRESS = 5,
    GDK_3BUTTON_PRESS = 6,
    GDK_BUTTON_RELEASE = 7,
    GDK_KEY_PRESS = 8,
    GDK_KEY_RELEASE = 9,
    GDK_ENTER_NOTIFY = 10,
    GDK_LEAVE_NOTIFY = 11,
    GDK_FOCUS_CHANGE = 12,
    GDK_CONFIGURE = 13,
    GDK_MAP = 14,
    GDK_UNMAP = 15,
    GDK_PROPERTY_NOTIFY = 16,
    GDK_SELECTION_CLEAR = 17,
    GDK_SELECTION_REQUEST = 18,
    GDK_SELECTION_NOTIFY = 19,
    GDK_PROXIMITY_IN = 20,
    GDK_PROXIMITY_OUT = 21,
    GDK_DRAG_ENTER = 22,
    GDK_DRAG_LEAVE = 23,
    GDK_DRAG_MOTION = 24,
    GDK_DRAG_STATUS = 25,
    GDK_DROP_START = 26,
    GDK_DROP_FINISHED = 27,
    GDK_CLIENT_EVENT = 28,
    GDK_VISIBILITY_NOTIFY = 29,
    GDK_NO_EXPOSE = 30,
    GDK_SCROLL = 31,
    GDK_WINDOW_STATE = 32,
    GDK_SETTING = 33,
    GDK_OWNER_CHANGE = 34
} GdkEventType;
typedef struct _GdkEventAny {
    GdkEventType type;
    GdkWindow *window;
    gint8 send_event;
} GdkEventAny;
typedef struct _GdkRectangle {
    gint x;
    gint y;
    gint width;
    gint height;
} GdkRectangle;
typedef struct _GdkRegion GdkRegion;
typedef struct _GdkEventExpose {
    GdkEventType type;
    GdkWindow *window;
    gint8 send_event;
    GdkRectangle area;
    GdkRegion *region;
    gint count;
} GdkEventExpose;
typedef struct _GdkEventNoExpose {
    GdkEventType type;
    GdkWindow *window;
    gint8 send_event;
} GdkEventNoExpose;
typedef enum {
    GDK_VISIBILITY_UNOBSCURED = 0,
    GDK_VISIBILITY_PARTIAL = 1,
    GDK_VISIBILITY_FULLY_OBSCURED = 2
} GdkVisibilityState;
typedef struct _GdkEventVisibility {
    GdkEventType type;
    GdkWindow *window;
    gint8 send_event;
    GdkVisibilityState state;
} GdkEventVisibility;
typedef struct _GdkEventMotion {
    GdkEventType type;
    GdkWindow *window;
    gint8 send_event;
    guint32 time;
    gdouble x;
    gdouble y;
    gdouble *axes;
    guint state;
    gint16 is_hint;
    GdkDevice *device;
    gdouble x_root;
    gdouble y_root;
} GdkEventMotion;
typedef struct _GdkEventButton {
    GdkEventType type;
    GdkWindow *window;
    gint8 send_event;
    guint32 time;
    gdouble x;
    gdouble y;
    gdouble *axes;
    guint state;
    guint button;
    GdkDevice *device;
    gdouble x_root;
    gdouble y_root;
} GdkEventButton;
typedef enum {
    GDK_SCROLL_UP = 0,
    GDK_SCROLL_DOWN = 1,
    GDK_SCROLL_LEFT = 2,
    GDK_SCROLL_RIGHT = 3
} GdkScrollDirection;
typedef struct _GdkEventScroll {
    GdkEventType type;
    GdkWindow *window;
    gint8 send_event;
    guint32 time;
    gdouble x;
    gdouble y;
    guint state;
    GdkScrollDirection direction;
    GdkDevice *device;
    gdouble x_root;
    gdouble y_root;
} GdkEventScroll;
typedef struct _GdkEventKey {
    GdkEventType type;
    GdkWindow *window;
    gint8 send_event;
    guint32 time;
    guint state;
    guint keyval;
    gint length;
    gchar *string;
    guint16 hardware_keycode;
    guint8 group;
} GdkEventKey;
typedef enum {
    GDK_CROSSING_NORMAL = 0,
    GDK_CROSSING_GRAB = 1,
    GDK_CROSSING_UNGRAB = 2
} GdkCrossingMode;
typedef enum {
    GDK_NOTIFY_ANCESTOR = 0,
    GDK_NOTIFY_VIRTUAL = 1,
    GDK_NOTIFY_INFERIOR = 2,
    GDK_NOTIFY_NONLINEAR = 3,
    GDK_NOTIFY_NONLINEAR_VIRTUAL = 4,
    GDK_NOTIFY_UNKNOWN = 5
} GdkNotifyType;
typedef struct _GdkEventCrossing {
    GdkEventType type;
    GdkWindow *window;
    gint8 send_event;
    GdkWindow *subwindow;
    guint32 time;
    gdouble x;
    gdouble y;
    gdouble x_root;
    gdouble y_root;
    GdkCrossingMode mode;
    GdkNotifyType detail;
    gboolean focus;
    guint state;
} GdkEventCrossing;
typedef struct _GdkEventFocus {
    GdkEventType type;
    GdkWindow *window;
    gint8 send_event;
    gint16 in;
} GdkEventFocus;
typedef struct _GdkEventConfigure {
    GdkEventType type;
    GdkWindow *window;
    gint8 send_event;
    gint x;
    gint y;
    gint width;
    gint height;
} GdkEventConfigure;
typedef struct _GdkEventProperty {
    GdkEventType type;
    GdkWindow *window;
    gint8 send_event;
    GdkAtom atom;
    guint32 time;
    guint state;
} GdkEventProperty;
typedef guint32 GdkNativeWindow;
typedef struct _GdkEventSelection {
    GdkEventType type;
    GdkWindow *window;
    gint8 send_event;
    GdkAtom selection;
    GdkAtom target;
    GdkAtom property;
    guint32 time;
    GdkNativeWindow requestor;
} GdkEventSelection;
typedef enum {
    GDK_OWNER_CHANGE_NEW_OWNER = 0,
    GDK_OWNER_CHANGE_DESTROY = 1,
    GDK_OWNER_CHANGE_CLOSE = 2
} GdkOwnerChange;
typedef struct _GdkEventOwnerChange {
    GdkEventType type;
    GdkWindow *window;
    gint8 send_event;
    GdkNativeWindow owner;
    GdkOwnerChange reason;
    GdkAtom selection;
    guint32 time;
    guint32 selection_time;
} GdkEventOwnerChange;
typedef struct _GdkEventProximity {
    GdkEventType type;
    GdkWindow *window;
    gint8 send_event;
    guint32 time;
    GdkDevice *device;
} GdkEventProximity;
typedef struct _GdkEventClient {
    GdkEventType type;
    GdkWindow *window;
    gint8 send_event;
    GdkAtom message_type;
    gushort data_format;
    union {
	char b[20];
	short int s[10];
	long int l[5];
    } data;
} GdkEventClient;
typedef enum {
    GDK_DRAG_PROTO_MOTIF = 0,
    GDK_DRAG_PROTO_XDND = 1,
    GDK_DRAG_PROTO_ROOTWIN = 2,
    GDK_DRAG_PROTO_NONE = 3,
    GDK_DRAG_PROTO_WIN32_DROPFILES = 4,
    GDK_DRAG_PROTO_OLE2 = 5,
    GDK_DRAG_PROTO_LOCAL = 6
} GdkDragProtocol;
typedef enum {
    GDK_ACTION_DEFAULT = 1,
    GDK_ACTION_COPY = 2,
    GDK_ACTION_MOVE = 4,
    GDK_ACTION_LINK = 8,
    GDK_ACTION_PRIVATE = 16,
    GDK_ACTION_ASK = 32
} GdkDragAction;
typedef struct _GdkDragContext {
    GObject parent_instance;
    GdkDragProtocol protocol;
    gboolean is_source;
    GdkWindow *source_window;
    GdkWindow *dest_window;
    GList *targets;
    GdkDragAction actions;
    GdkDragAction suggested_action;
    GdkDragAction action;
    guint32 start_time;
    gpointer windowing_data;
} GdkDragContext;
typedef short int gshort;
typedef struct _GdkEventDND {
    GdkEventType type;
    GdkWindow *window;
    gint8 send_event;
    GdkDragContext *context;
    guint32 time;
    gshort x_root;
    gshort y_root;
} GdkEventDND;
typedef enum {
    GDK_WINDOW_STATE_WITHDRAWN = 1,
    GDK_WINDOW_STATE_ICONIFIED = 2,
    GDK_WINDOW_STATE_MAXIMIZED = 4,
    GDK_WINDOW_STATE_STICKY = 8,
    GDK_WINDOW_STATE_FULLSCREEN = 16,
    GDK_WINDOW_STATE_ABOVE = 32,
    GDK_WINDOW_STATE_BELOW = 64
} GdkWindowState;
typedef struct _GdkEventWindowState {
    GdkEventType type;
    GdkWindow *window;
    gint8 send_event;
    GdkWindowState changed_mask;
    GdkWindowState new_window_state;
} GdkEventWindowState;
typedef enum {
    GDK_SETTING_ACTION_NEW = 0,
    GDK_SETTING_ACTION_CHANGED = 1,
    GDK_SETTING_ACTION_DELETED = 2
} GdkSettingAction;
typedef struct _GdkEventSetting {
    GdkEventType type;
    GdkWindow *window;
    gint8 send_event;
    GdkSettingAction action;
    char *name;
} GdkEventSetting;
typedef union _GdkEvent {
    GdkEventType type;
    GdkEventAny any;
    GdkEventExpose expose;
    GdkEventNoExpose no_expose;
    GdkEventVisibility visibility;
    GdkEventMotion motion;
    GdkEventButton button;
    GdkEventScroll scroll;
    GdkEventKey key;
    GdkEventCrossing crossing;
    GdkEventFocus focus_change;
    GdkEventConfigure configure;
    GdkEventProperty property;
    GdkEventSelection selection;
    GdkEventOwnerChange owner_change;
    GdkEventProximity proximity;
    GdkEventClient client;
    GdkEventDND dnd;
    GdkEventWindowState window_state;
    GdkEventSetting setting;
} GdkEvent;
typedef GdkFilterReturn(*GdkFilterFunc) (GdkXEvent *, GdkEvent *,
					 gpointer);
typedef struct _GdkDrawable {
    GObject parent_instance;
} GdkPixmap;
typedef struct _GdkDrawable {
    GObject parent_instance;
} GdkBitmap;
typedef struct _GdkDisplayManager GdkDisplayManager;
typedef enum {
    GDK_CLIP_BY_CHILDREN = 0,
    GDK_INCLUDE_INFERIORS = 1
} GdkSubwindowMode;
typedef enum {
    GDK_WINDOW_EDGE_NORTH_WEST = 0,
    GDK_WINDOW_EDGE_NORTH = 1,
    GDK_WINDOW_EDGE_NORTH_EAST = 2,
    GDK_WINDOW_EDGE_WEST = 3,
    GDK_WINDOW_EDGE_EAST = 4,
    GDK_WINDOW_EDGE_SOUTH_WEST = 5,
    GDK_WINDOW_EDGE_SOUTH = 6,
    GDK_WINDOW_EDGE_SOUTH_EAST = 7
} GdkWindowEdge;
typedef enum {
    GDK_IMAGE_NORMAL = 0,
    GDK_IMAGE_SHARED = 1,
    GDK_IMAGE_FASTEST = 2
} GdkImageType;
typedef struct _GdkImage {
    GObject parent_instance;
    GdkImageType type;
    GdkVisual *visual;
    GdkByteOrder byte_order;
    gint width;
    gint height;
    guint16 depth;
    guint16 bpp;
    guint16 bpl;
    guint16 bits_per_pixel;
    gpointer mem;
    GdkColormap *colormap;
    gpointer windowing_data;
} GdkImage;
typedef struct _GdkPangoRendererPrivate GdkPangoRendererPrivate;
typedef struct _GdkPangoRenderer {
    PangoRenderer parent_instance;
    GdkPangoRendererPrivate *priv;
} GdkPangoRenderer;
typedef enum {
    GDK_GRAB_SUCCESS = 0,
    GDK_GRAB_ALREADY_GRABBED = 1,
    GDK_GRAB_INVALID_TIME = 2,
    GDK_GRAB_NOT_VIEWABLE = 3,
    GDK_GRAB_FROZEN = 4
} GdkGrabStatus;
typedef enum {
    GDK_SOLID = 0,
    GDK_TILED = 1,
    GDK_STIPPLED = 2,
    GDK_OPAQUE_STIPPLED = 3
} GdkFill;
typedef enum {
    GDK_WINDOW_TYPE_HINT_NORMAL = 0,
    GDK_WINDOW_TYPE_HINT_DIALOG = 1,
    GDK_WINDOW_TYPE_HINT_MENU = 2,
    GDK_WINDOW_TYPE_HINT_TOOLBAR = 3,
    GDK_WINDOW_TYPE_HINT_SPLASHSCREEN = 4,
    GDK_WINDOW_TYPE_HINT_UTILITY = 5,
    GDK_WINDOW_TYPE_HINT_DOCK = 6,
    GDK_WINDOW_TYPE_HINT_DESKTOP = 7
} GdkWindowTypeHint;
typedef struct _GdkTimeCoord {
    guint32 time;
    gdouble axes[128];
} GdkTimeCoord;
typedef struct _GdkPoint {
    gint x;
    gint y;
} GdkPoint;
typedef struct _GdkFont GdkFont;
typedef enum {
    GDK_DECOR_ALL = 1,
    GDK_DECOR_BORDER = 2,
    GDK_DECOR_RESIZEH = 4,
    GDK_DECOR_TITLE = 8,
    GDK_DECOR_MENU = 16,
    GDK_DECOR_MINIMIZE = 32,
    GDK_DECOR_MAXIMIZE = 64
} GdkWMDecoration;
typedef enum {
    GDK_FUNC_ALL = 1,
    GDK_FUNC_RESIZE = 2,
    GDK_FUNC_MOVE = 4,
    GDK_FUNC_MINIMIZE = 8,
    GDK_FUNC_MAXIMIZE = 16,
    GDK_FUNC_CLOSE = 32
} GdkWMFunction;
typedef struct _GdkKeymapKey {
    guint keycode;
    gint group;
    gint level;
} GdkKeymapKey;
typedef enum {
    GDK_RGB_DITHER_NONE = 0,
    GDK_RGB_DITHER_NORMAL = 1,
    GDK_RGB_DITHER_MAX = 2
} GdkRgbDither;
typedef struct _GdkRgbCmap {
    guint32 colors[256];
    gint n_colors;
    GSList *info_list;
} GdkRgbCmap;
typedef enum {
    GDK_COPY = 0,
    GDK_INVERT = 1,
    GDK_XOR = 2,
    GDK_CLEAR = 3,
    GDK_AND = 4,
    GDK_AND_REVERSE = 5,
    GDK_AND_INVERT = 6,
    GDK_NOOP = 7,
    GDK_OR = 8,
    GDK_EQUIV = 9,
    GDK_OR_REVERSE = 10,
    GDK_COPY_INVERT = 11,
    GDK_OR_INVERT = 12,
    GDK_NAND = 13,
    GDK_NOR = 14,
    GDK_SET = 15
} GdkFunction;
typedef enum {
    GDK_LINE_SOLID = 0,
    GDK_LINE_ON_OFF_DASH = 1,
    GDK_LINE_DOUBLE_DASH = 2
} GdkLineStyle;
typedef enum {
    GDK_CAP_NOT_LAST = 0,
    GDK_CAP_BUTT = 1,
    GDK_CAP_ROUND = 2,
    GDK_CAP_PROJECTING = 3
} GdkCapStyle;
typedef enum {
    GDK_JOIN_MITER = 0,
    GDK_JOIN_ROUND = 1,
    GDK_JOIN_BEVEL = 2
} GdkJoinStyle;
typedef struct _GdkGCValues {
    GdkColor foreground;
    GdkColor background;
    GdkFont *font;
    GdkFunction function;
    GdkFill fill;
    GdkPixmap *tile;
    GdkPixmap *stipple;
    GdkPixmap *clip_mask;
    GdkSubwindowMode subwindow_mode;
    gint ts_x_origin;
    gint ts_y_origin;
    gint clip_x_origin;
    gint clip_y_origin;
    gint graphics_exposures;
    gint line_width;
    GdkLineStyle line_style;
    GdkCapStyle cap_style;
    GdkJoinStyle join_style;
} GdkGCValues;
typedef enum {
    GDK_GC_FOREGROUND = 1,
    GDK_GC_BACKGROUND = 2,
    GDK_GC_FONT = 4,
    GDK_GC_FUNCTION = 8,
    GDK_GC_FILL = 16,
    GDK_GC_TILE = 32,
    GDK_GC_STIPPLE = 64,
    GDK_GC_CLIP_MASK = 128,
    GDK_GC_SUBWINDOW = 256,
    GDK_GC_TS_X_ORIGIN = 512,
    GDK_GC_TS_Y_ORIGIN = 1024,
    GDK_GC_CLIP_X_ORIGIN = 2048,
    GDK_GC_CLIP_Y_ORIGIN = 4096,
    GDK_GC_EXPOSURES = 8192,
    GDK_GC_LINE_WIDTH = 16384,
    GDK_GC_LINE_STYLE = 32768,
    GDK_GC_CAP_STYLE = 65536,
    GDK_GC_JOIN_STYLE = 131072
} GdkGCValuesMask;
typedef enum {
    GDK_WINDOW_ROOT = 0,
    GDK_WINDOW_TOPLEVEL = 1,
    GDK_WINDOW_CHILD = 2,
    GDK_WINDOW_DIALOG = 3,
    GDK_WINDOW_TEMP = 4,
    GDK_WINDOW_FOREIGN = 5
} GdkWindowType;
typedef struct _GdkSpan {
    gint x;
    gint y;
    gint width;
} GdkSpan;
typedef void (*GdkSpanFunc) (GdkSpan *, gpointer);
typedef enum {
    GDK_GRAVITY_NORTH_WEST = 1,
    GDK_GRAVITY_NORTH = 2,
    GDK_GRAVITY_NORTH_EAST = 3,
    GDK_GRAVITY_WEST = 4,
    GDK_GRAVITY_CENTER = 5,
    GDK_GRAVITY_EAST = 6,
    GDK_GRAVITY_SOUTH_WEST = 7,
    GDK_GRAVITY_SOUTH = 8,
    GDK_GRAVITY_SOUTH_EAST = 9,
    GDK_GRAVITY_STATIC = 10
} GdkGravity;
typedef struct _GdkGeometry {
    gint min_width;
    gint min_height;
    gint max_width;
    gint max_height;
    gint base_width;
    gint base_height;
    gint width_inc;
    gint height_inc;
    gdouble min_aspect;
    gdouble max_aspect;
    GdkGravity win_gravity;
} GdkGeometry;
typedef enum {
    GDK_HINT_POS = 1,
    GDK_HINT_MIN_SIZE = 2,
    GDK_HINT_MAX_SIZE = 4,
    GDK_HINT_BASE_SIZE = 8,
    GDK_HINT_ASPECT = 16,
    GDK_HINT_RESIZE_INC = 32,
    GDK_HINT_WIN_GRAVITY = 64,
    GDK_HINT_USER_POS = 128,
    GDK_HINT_USER_SIZE = 256
} GdkWindowHints;
typedef void (*GdkEventFunc) (GdkEvent *, gpointer);
typedef enum {
    GDK_OVERLAP_RECTANGLE_IN = 0,
    GDK_OVERLAP_RECTANGLE_OUT = 1,
    GDK_OVERLAP_RECTANGLE_PART = 2
} GdkOverlapType;
typedef struct _GdkSegment {
    gint x1;
    gint y1;
    gint x2;
    gint y2;
} GdkSegment;
typedef enum {
    GDK_PROP_MODE_REPLACE = 0,
    GDK_PROP_MODE_PREPEND = 1,
    GDK_PROP_MODE_APPEND = 2
} GdkPropMode;
typedef enum {
    GDK_INPUT_OUTPUT = 0,
    GDK_INPUT_ONLY = 1
} GdkWindowClass;
typedef struct _GdkWindowAttr {
    gchar *title;
    gint event_mask;
    gint x;
    gint y;
    gint width;
    gint height;
    GdkWindowClass wclass;
    GdkVisual *visual;
    GdkColormap *colormap;
    GdkWindowType window_type;
    GdkCursor *cursor;
    gchar *wmclass_name;
    gchar *wmclass_class;
    gboolean override_redirect;
} GdkWindowAttr;
typedef struct _GdkTrapezoid {
    double y1;
    double x11;
    double x21;
    double y2;
    double x12;
    double x22;
} GdkTrapezoid;
typedef enum {
    GDK_EVEN_ODD_RULE = 0,
    GDK_WINDING_RULE = 1
} GdkFillRule;
typedef struct _GdkPointerHooks {
    GdkWindow *(*get_pointer) (GdkWindow *, gint *, gint *,
			       GdkModifierType *);
    GdkWindow *(*window_at_pointer) (GdkScreen *, gint *, gint *);
} GdkPointerHooks;
typedef enum {
    GDK_EXTENSION_EVENTS_NONE = 0,
    GDK_EXTENSION_EVENTS_ALL = 1,
    GDK_EXTENSION_EVENTS_CURSOR = 2
} GdkExtensionMode;
typedef struct _GdkWindowObject {
    GdkDrawable parent_instance;
    GdkDrawable *impl;
    GdkWindowObject *parent;
    gpointer user_data;
    gint x;
    gint y;
    gint extension_events;
    GList *filters;
    GList *children;
    GdkColor bg_color;
    GdkPixmap *bg_pixmap;
    GSList *paint_stack;
    GdkRegion *update_area;
    guint update_freeze_count;
    guint8 window_type;
    guint8 depth;
    guint8 resize_count;
    GdkWindowState state;
    guint guffaw_gravity:1;
    guint input_only:1;
    guint modal_hint:1;
    guint destroyed:2;
    guint accept_focus:1;
    guint focus_on_map:1;
    GdkEventMask event_mask;
} GdkWindowObject;
typedef struct _GdkScreenClass {
    GObjectClass parent_class;
    void (*size_changed) (GdkScreen *);
} GdkScreenClass;
typedef guint32 GdkWChar;
typedef struct _GdkPixmapObject {
    GdkDrawable parent_instance;
    GdkDrawable *impl;
    gint depth;
} GdkPixmapObject;
typedef enum {
    GDK_INPUT_READ = 1,
    GDK_INPUT_WRITE = 2,
    GDK_INPUT_EXCEPTION = 4
} GdkInputCondition;
typedef void (*GdkInputFunction) (gpointer, gint, GdkInputCondition);
typedef struct _GdkImageClass {
    GObjectClass parent_class;
} GdkImageClass;
typedef void (*GdkDestroyNotify) (gpointer);
typedef struct _GdkKeymapClass {
    GObjectClass parent_class;
    void (*direction_changed) (GdkKeymap *);
    void (*keys_changed) (GdkKeymap *);
} GdkKeymapClass;
typedef struct _GdkDrawableClass {
    GObjectClass parent_class;
    GdkGC *(*create_gc) (GdkDrawable *, GdkGCValues *, GdkGCValuesMask);
    void (*draw_rectangle) (GdkDrawable *, GdkGC *, gboolean, gint, gint,
			    gint, gint);
    void (*draw_arc) (GdkDrawable *, GdkGC *, gboolean, gint, gint, gint,
		      gint, gint, gint);
    void (*draw_polygon) (GdkDrawable *, GdkGC *, gboolean, GdkPoint *,
			  gint);
    void (*draw_text) (GdkDrawable *, GdkFont *, GdkGC *, gint, gint,
		       const gchar *, gint);
    void (*draw_text_wc) (GdkDrawable *, GdkFont *, GdkGC *, gint, gint,
			  const GdkWChar *, gint);
    void (*draw_drawable) (GdkDrawable *, GdkGC *, GdkDrawable *, gint,
			   gint, gint, gint, gint, gint);
    void (*draw_points) (GdkDrawable *, GdkGC *, GdkPoint *, gint);
    void (*draw_segments) (GdkDrawable *, GdkGC *, GdkSegment *, gint);
    void (*draw_lines) (GdkDrawable *, GdkGC *, GdkPoint *, gint);
    void (*draw_glyphs) (GdkDrawable *, GdkGC *, PangoFont *, gint, gint,
			 PangoGlyphString *);
    void (*draw_image) (GdkDrawable *, GdkGC *, GdkImage *, gint, gint,
			gint, gint, gint, gint);
     gint(*get_depth) (GdkDrawable *);
    void (*get_size) (GdkDrawable *, gint *, gint *);
    void (*set_colormap) (GdkDrawable *, GdkColormap *);
    GdkColormap *(*get_colormap) (GdkDrawable *);
    GdkVisual *(*get_visual) (GdkDrawable *);
    GdkScreen *(*get_screen) (GdkDrawable *);
    GdkImage *(*get_image) (GdkDrawable *, gint, gint, gint, gint);
    GdkRegion *(*get_clip_region) (GdkDrawable *);
    GdkRegion *(*get_visible_region) (GdkDrawable *);
    GdkDrawable *(*get_composite_drawable) (GdkDrawable *, gint, gint,
					    gint, gint, gint *, gint *);
    void (*draw_pixbuf) (GdkDrawable *, GdkGC *, GdkPixbuf *, gint, gint,
			 gint, gint, gint, gint, GdkRgbDither, gint, gint);
    GdkImage *(*_copy_to_image) (GdkDrawable *, GdkImage *, gint, gint,
				 gint, gint, gint, gint);
    void (*draw_glyphs_transformed) (GdkDrawable *, GdkGC *, PangoMatrix *,
				     PangoFont *, gint, gint,
				     PangoGlyphString *);
    void (*draw_trapezoids) (GdkDrawable *, GdkGC *, GdkTrapezoid *, gint);
    void (*_gdk_reserved3) (void);
    void (*_gdk_reserved4) (void);
    void (*_gdk_reserved5) (void);
    void (*_gdk_reserved6) (void);
    void (*_gdk_reserved7) (void);
    void (*_gdk_reserved9) (void);
    void (*_gdk_reserved10) (void);
    void (*_gdk_reserved11) (void);
    void (*_gdk_reserved12) (void);
    void (*_gdk_reserved13) (void);
    void (*_gdk_reserved14) (void);
    void (*_gdk_reserved15) (void);
    void (*_gdk_reserved16) (void);
} GdkDrawableClass;
typedef struct _GdkPangoAttrEmbossed {
    PangoAttribute attr;
    gboolean embossed;
} GdkPangoAttrEmbossed;
typedef struct _GdkDisplayManagerClass {
    GObjectClass parent_class;
    void (*display_opened) (GdkDisplayManager *, GdkDisplay *);
} GdkDisplayManagerClass;
typedef struct _GdkPixmapObjectClass {
    GdkDrawableClass parent_class;
} GdkPixmapObjectClass;
typedef struct _GdkPangoRendererClass {
    PangoRendererClass parent_class;
} GdkPangoRendererClass;
typedef struct _GdkDisplayClass {
    GObjectClass parent_class;
    const gchar *(*get_display_name) (GdkDisplay *);
     gint(*get_n_screens) (GdkDisplay *);
    GdkScreen *(*get_screen) (GdkDisplay *, gint);
    GdkScreen *(*get_default_screen) (GdkDisplay *);
    void (*closed) (GdkDisplay *, gboolean);
} GdkDisplayClass;
typedef struct _GdkPangoAttrStipple {
    PangoAttribute attr;
    GdkBitmap *stipple;
} GdkPangoAttrStipple;
typedef struct _GdkColormapClass {
    GObjectClass parent_class;
} GdkColormapClass;
typedef struct _GdkDragContextClass {
    GObjectClass parent_class;
} GdkDragContextClass;
typedef struct _GdkWindowObjectClass {
    GdkDrawableClass parent_class;
} GdkWindowObjectClass;
typedef struct _GdkGCClass {
    GObjectClass parent_class;
    void (*get_values) (GdkGC *, GdkGCValues *);
    void (*set_values) (GdkGC *, GdkGCValues *, GdkGCValuesMask);
    void (*set_dashes) (GdkGC *, gint, gint8 *, gint);
    void (*_gdk_reserved1) (void);
    void (*_gdk_reserved2) (void);
    void (*_gdk_reserved3) (void);
    void (*_gdk_reserved4) (void);
} GdkGCClass;
typedef struct _GdkDeviceClass GdkDeviceClass;
typedef struct _GdkVisualClass GdkVisualClass;
typedef enum {
    GDK_OK = 0,
    GDK_ERROR = -1,
    GDK_ERROR_PARAM = -2,
    GDK_ERROR_FILE = -3,
    GDK_ERROR_MEM = -4
} GdkStatus;
typedef enum {
    GDK_PROPERTY_NEW_VALUE,
    GDK_PROPERTY_DELETE
} GdkPropertyState;
typedef enum {
    GDK_WA_TITLE = 1 &lt;&lt; 1,
    GDK_WA_X = 1 &lt;&lt; 2,
    GDK_WA_Y = 1 &lt;&lt; 3,
    GDK_WA_CURSOR = 1 &lt;&lt; 4,
    GDK_WA_COLORMAP = 1 &lt;&lt; 5,
    GDK_WA_VISUAL = 1 &lt;&lt; 6,
    GDK_WA_WMCLASS = 1 &lt;&lt; 7,
    GDK_WA_NOREDIR = 1 &lt;&lt; 8
} GdkWindowAttributesType;
extern void gdk_window_deiconify(GdkWindow *);
extern GType gdk_device_get_type(void);
extern void gdk_gc_set_clip_origin(GdkGC *, gint, gint);
extern GdkColormap *gdk_drawable_get_colormap(GdkDrawable *);
extern void gdk_flush(void);
extern gint gdk_screen_height_mm(void);
extern void gdk_display_get_pointer(GdkDisplay *, GdkScreen * *, gint *,
				    gint *, GdkModifierType *);
extern GdkEventMask gdk_window_get_events(GdkWindow *);
extern void gdk_window_scroll(GdkWindow *, gint, gint);
extern GType gdk_window_object_get_type(void);
extern GdkCursor *gdk_cursor_new_from_pixbuf(GdkDisplay *, GdkPixbuf *,
					     gint, gint);
extern GType gdk_axis_use_get_type(void);
extern GType gdk_fill_get_type(void);
extern void gdk_window_resize(GdkWindow *, gint, gint);
extern GdkKeymap *gdk_keymap_get_for_display(GdkDisplay *);
extern void gdk_display_add_client_message_filter(GdkDisplay *, GdkAtom,
						  GdkFilterFunc, gpointer);
extern GdkPixmap *gdk_pixmap_create_from_xpm_d(GdkDrawable *,
					       GdkBitmap * *,
					       const GdkColor *,
					       gchar * *);
extern gboolean gdk_display_supports_selection_notification(GdkDisplay *);
extern GSList *gdk_display_manager_list_displays(GdkDisplayManager *);
extern void gdk_gc_set_subwindow(GdkGC *, GdkSubwindowMode);
extern void gdk_gc_set_colormap(GdkGC *, GdkColormap *);
extern GType gdk_grab_status_get_type(void);
extern GType gdk_visual_get_type(void);
extern GdkVisual *gdk_rgb_get_visual(void);
extern GType gdk_event_get_type(void);
extern void gdk_display_set_double_click_time(GdkDisplay *, guint);
extern GList *gdk_devices_list(void);
extern void gdk_draw_layout_line(GdkDrawable *, GdkGC *, gint, gint,
				 PangoLayoutLine *);
extern gboolean gdk_init_check(int *, char ***);
extern gboolean gdk_event_get_root_coords(GdkEvent *, gdouble *,
					  gdouble *);
extern void gdk_window_begin_resize_drag(GdkWindow *, GdkWindowEdge, gint,
					 gint, gint, guint32);
extern guint gdk_keyval_from_name(const gchar *);
extern gboolean gdk_display_request_selection_notification(GdkDisplay *,
							   GdkAtom);
extern void gdk_window_raise(GdkWindow *);
extern GdkImage *gdk_image_new(GdkImageType, GdkVisual *, gint, gint);
extern GdkAtom gdk_atom_intern(const gchar *, gboolean);
extern void gdk_window_get_frame_extents(GdkWindow *, GdkRectangle *);
extern gboolean gdk_rectangle_intersect(GdkRectangle *, GdkRectangle *,
					GdkRectangle *);
extern GdkWindow *gdk_selection_owner_get_for_display(GdkDisplay *,
						      GdkAtom);
extern PangoRenderer *gdk_pango_renderer_get_default(GdkScreen *);
extern gchar *gdk_get_display(void);
extern void gdk_gc_set_dashes(GdkGC *, gint, gint8 *, gint);
extern void gdk_device_set_key(GdkDevice *, guint, guint, GdkModifierType);
extern void gdk_pango_renderer_set_override_color(GdkPangoRenderer *,
						  PangoRenderPart,
						  const GdkColor *);
extern void gdk_window_iconify(GdkWindow *);
extern void gdk_display_set_double_click_distance(GdkDisplay *, guint);
extern GdkWindow *gdk_window_get_group(GdkWindow *);
extern GdkDevice *gdk_device_get_core_pointer(void);
extern guint gdk_color_hash(const GdkColor *);
extern void gdk_screen_get_monitor_geometry(GdkScreen *, gint,
					    GdkRectangle *);
extern void gdk_device_set_source(GdkDevice *, GdkInputSource);
extern GType gdk_input_mode_get_type(void);
extern GdkWindow *gdk_get_default_root_window(void);
extern gchar *gdk_screen_make_display_name(GdkScreen *);
extern GdkGrabStatus gdk_pointer_grab(GdkWindow *, gboolean, GdkEventMask,
				      GdkWindow *, GdkCursor *, guint32);
extern void gdk_window_set_title(GdkWindow *, const gchar *);
extern void gdk_property_delete(GdkWindow *, GdkAtom);
extern GdkColormap *gdk_rgb_get_colormap(void);
extern void gdk_free_text_list(gchar * *);
extern gint gdk_colormap_alloc_colors(GdkColormap *, GdkColor *, gint,
				      gboolean, gboolean, gboolean *);
extern void gdk_window_process_all_updates(void);
extern guint32 gdk_event_get_time(GdkEvent *);
extern gint gdk_text_property_to_text_list_for_display(GdkDisplay *,
						       GdkAtom, gint,
						       const guchar *,
						       gint, gchar * **);
extern GdkAtom gdk_drag_get_selection(GdkDragContext *);
extern GdkScreen *gdk_screen_get_default(void);
extern void gdk_window_set_skip_pager_hint(GdkWindow *, gboolean);
extern GdkPixmap *gdk_pixmap_foreign_new(GdkNativeWindow);
extern GType gdk_window_hints_get_type(void);
extern void gdk_drag_drop(GdkDragContext *, guint32);
extern void gdk_gc_set_fill(GdkGC *, GdkFill);
extern void gdk_init(int *, char ***);
extern gboolean gdk_property_get(GdkWindow *, GdkAtom, GdkAtom, gulong,
				 gulong, gint, GdkAtom *, gint *, gint *,
				 guchar * *);
extern void gdk_gc_set_rgb_fg_color(GdkGC *, const GdkColor *);
extern void gdk_window_set_transient_for(GdkWindow *, GdkWindow *);
extern GdkRegion *gdk_pango_layout_line_get_clip_region(PangoLayoutLine *,
							gint, gint, gint *,
							gint);
extern GdkVisual *gdk_screen_get_system_visual(GdkScreen *);
extern GdkDisplay
    *gdk_display_manager_get_default_display(GdkDisplayManager *);
extern gint gdk_text_property_to_utf8_list(GdkAtom, gint, const guchar *,
					   gint, gchar * **);
extern void gdk_window_set_type_hint(GdkWindow *, GdkWindowTypeHint);
extern void gdk_parse_args(int *, char ***);
extern GdkPixmap *gdk_pixmap_create_from_xpm(GdkDrawable *, GdkBitmap * *,
					     const GdkColor *,
					     const gchar *);
extern void gdk_window_set_group(GdkWindow *, GdkWindow *);
extern void gdk_window_focus(GdkWindow *, guint32);
extern void gdk_event_set_screen(GdkEvent *, GdkScreen *);
extern void gdk_display_flush(GdkDisplay *);
extern GType gdk_owner_change_get_type(void);
extern void gdk_region_subtract(GdkRegion *, GdkRegion *);
extern GType gdk_cap_style_get_type(void);
extern void gdk_window_unstick(GdkWindow *);
extern void gdk_draw_glyphs(GdkDrawable *, GdkGC *, PangoFont *, gint,
			    gint, PangoGlyphString *);
extern gint gdk_text_property_to_utf8_list_for_display(GdkDisplay *,
						       GdkAtom, gint,
						       const guchar *,
						       gint, gchar * **);
extern void gdk_drag_abort(GdkDragContext *, guint32);
extern GdkWindow *gdk_display_get_window_at_pointer(GdkDisplay *, gint *,
						    gint *);
extern GdkDisplayPointerHooks *gdk_display_set_pointer_hooks(GdkDisplay *,
							     const
							     GdkDisplayPointerHooks
							     *);
extern void gdk_window_set_debug_updates(gboolean);
extern gboolean gdk_spawn_command_line_on_screen(GdkScreen *,
						 const gchar *,
						 GError * *);
extern GdkRegion *gdk_region_copy(GdkRegion *);
extern GdkEvent *gdk_display_peek_event(GdkDisplay *);
extern GdkColormap *gdk_gc_get_colormap(GdkGC *);
extern void gdk_selection_send_notify(guint32, GdkAtom, GdkAtom, GdkAtom,
				      guint32);
extern const char *gdk_get_program_class(void);
extern GType gdk_filter_return_get_type(void);
extern void gdk_drop_reply(GdkDragContext *, gboolean, guint32);
extern void gdk_threads_enter(void);
extern void gdk_device_free_history(GdkTimeCoord * *, gint);
extern GdkImage *gdk_drawable_get_image(GdkDrawable *, gint, gint, gint,
					gint);
extern GType gdk_event_mask_get_type(void);
extern void gdk_set_program_class(const char *);
extern void gdk_draw_polygon(GdkDrawable *, GdkGC *, gboolean, GdkPoint *,
			     gint);
extern GType gdk_function_get_type(void);
extern void gdk_display_close(GdkDisplay *);
extern gint gdk_screen_get_n_monitors(GdkScreen *);
extern gboolean gdk_keymap_translate_keyboard_state(GdkKeymap *, guint,
						    GdkModifierType, gint,
						    guint *, gint *,
						    gint *,
						    GdkModifierType *);
extern GType gdk_rectangle_get_type(void);
extern GdkDisplay *gdk_screen_get_display(GdkScreen *);
extern GList *gdk_window_get_toplevels(void);
extern GdkVisual *gdk_visual_get_best_with_depth(gint);
extern gboolean gdk_display_supports_cursor_alpha(GdkDisplay *);
extern void gdk_window_set_decorations(GdkWindow *, GdkWMDecoration);
extern PangoContext *gdk_pango_context_get_for_screen(GdkScreen *);
extern GdkVisual *gdk_colormap_get_visual(GdkColormap *);
extern void gdk_error_trap_push(void);
extern void gdk_display_beep(GdkDisplay *);
extern gboolean gdk_spawn_on_screen(GdkScreen *, const gchar *, gchar * *,
				    gchar * *, GSpawnFlags,
				    GSpawnChildSetupFunc, gpointer, gint *,
				    GError * *);
extern void gdk_add_client_message_filter(GdkAtom, GdkFilterFunc,
					  gpointer);
extern PangoDirection gdk_keymap_get_direction(GdkKeymap *);
extern PangoAttribute *gdk_pango_attr_stipple_new(GdkBitmap *);
extern void gdk_window_lower(GdkWindow *);
extern gboolean gdk_rgb_ditherable(void);
extern gboolean gdk_colormap_alloc_color(GdkColormap *, GdkColor *,
					 gboolean, gboolean);
extern GdkWindow *gdk_display_get_default_group(GdkDisplay *);
extern GType gdk_event_type_get_type(void);
extern GType gdk_color_get_type(void);
extern GType gdk_drag_protocol_get_type(void);
extern GType gdk_gravity_get_type(void);
extern gboolean gdk_events_pending(void);
extern GType gdk_input_condition_get_type(void);
extern GType gdk_input_source_get_type(void);
extern gchar *gdk_utf8_to_string_target(const gchar *);
extern void gdk_threads_init(void);
extern void gdk_gc_set_foreground(GdkGC *, const GdkColor *);
extern gint gdk_string_to_compound_text_for_display(GdkDisplay *,
						    const gchar *,
						    GdkAtom *, gint *,
						    guchar * *, gint *);
extern GdkWindow *gdk_window_get_toplevel(GdkWindow *);
extern void gdk_drop_finish(GdkDragContext *, gboolean, guint32);
extern void gdk_window_set_functions(GdkWindow *, GdkWMFunction);
extern void gdk_window_invalidate_maybe_recurse(GdkWindow *, GdkRegion *,
						gboolean(*)(GdkWindow *,
							    gpointer)
						, gpointer);
extern gint gdk_screen_get_height(GdkScreen *);
extern gboolean gdk_keymap_get_entries_for_keyval(GdkKeymap *, guint,
						  GdkKeymapKey * *,
						  gint *);
extern GdkDragContext *gdk_drag_context_new(void);
extern void gdk_colormap_query_color(GdkColormap *, gulong, GdkColor *);
extern void gdk_pixbuf_render_pixmap_and_mask_for_colormap(GdkPixbuf *,
							   GdkColormap *,
							   GdkPixmap * *,
							   GdkBitmap * *,
							   int);
extern void gdk_region_intersect(GdkRegion *, GdkRegion *);
extern GdkWindow *gdk_selection_owner_get(GdkAtom);
extern void gdk_draw_pixbuf(GdkDrawable *, GdkGC *, GdkPixbuf *, gint,
			    gint, gint, gint, gint, gint, GdkRgbDither,
			    gint, gint);
extern void gdk_rgb_cmap_free(GdkRgbCmap *);
extern GdkDisplay *gdk_display_open(const gchar *);
extern GdkPixmap *gdk_pixmap_colormap_create_from_xpm_d(GdkDrawable *,
							GdkColormap *,
							GdkBitmap * *,
							const GdkColor *,
							gchar * *);
extern gboolean gdk_keyval_is_lower(guint);
extern GCallback gdk_threads_unlock;
extern GType gdk_modifier_type_get_type(void);
extern gint gdk_visual_get_best_depth(void);
extern gboolean gdk_setting_get(const gchar *, GValue *);
extern GType gdk_screen_get_type(void);
extern guint32 gdk_drag_get_protocol_for_display(GdkDisplay *, guint32,
						 GdkDragProtocol *);
extern GList *gdk_screen_get_toplevel_windows(GdkScreen *);
extern GdkGC *gdk_gc_new_with_values(GdkDrawable *, GdkGCValues *,
				     GdkGCValuesMask);
extern GdkScreen *gdk_display_get_default_screen(GdkDisplay *);
extern gboolean gdk_drag_motion(GdkDragContext *, GdkWindow *,
				GdkDragProtocol, gint, gint, GdkDragAction,
				GdkDragAction, guint32);
extern GdkRegion *gdk_drawable_get_visible_region(GdkDrawable *);
extern void gdk_pango_renderer_set_stipple(GdkPangoRenderer *,
					   PangoRenderPart, GdkBitmap *);
extern void gdk_display_get_maximal_cursor_size(GdkDisplay *, guint *,
						guint *);
extern GdkRegion *gdk_window_get_update_area(GdkWindow *);
extern void gdk_drag_status(GdkDragContext *, GdkDragAction, guint32);
extern gboolean gdk_keyval_is_upper(guint);
extern void gdk_window_begin_paint_region(GdkWindow *, GdkRegion *);
extern void gdk_pango_renderer_set_drawable(GdkPangoRenderer *,
					    GdkDrawable *);
extern gint gdk_screen_get_monitor_at_point(GdkScreen *, gint, gint);
extern gboolean gdk_utf8_to_compound_text_for_display(GdkDisplay *,
						      const gchar *,
						      GdkAtom *, gint *,
						      guchar * *, gint *);
extern GdkColormap *gdk_image_get_colormap(GdkImage *);
extern gint gdk_window_get_origin(GdkWindow *, gint *, gint *);
extern void gdk_set_double_click_time(guint);
extern void gdk_gc_get_values(GdkGC *, GdkGCValues *);
extern GdkColor *gdk_color_copy(const GdkColor *);
extern void gdk_gc_set_tile(GdkGC *, GdkPixmap *);
extern gboolean gdk_event_get_coords(GdkEvent *, gdouble *, gdouble *);
extern void gdk_gc_set_ts_origin(GdkGC *, gint, gint);
extern GdkWindowType gdk_window_get_window_type(GdkWindow *);
extern void gdk_window_set_focus_on_map(GdkWindow *, gboolean);
extern void gdk_region_union_with_rect(GdkRegion *, GdkRectangle *);
extern gboolean gdk_keymap_get_entries_for_keycode(GdkKeymap *, guint,
						   GdkKeymapKey * *,
						   guint * *, gint *);
extern gboolean gdk_selection_property_get(GdkWindow *, guchar * *,
					   GdkAtom *, gint *);
extern void gdk_display_keyboard_ungrab(GdkDisplay *, guint32);
extern GdkDisplay *gdk_drawable_get_display(GdkDrawable *);
extern void gdk_gc_set_stipple(GdkGC *, GdkPixmap *);
extern void gdk_window_clear_area_e(GdkWindow *, gint, gint, gint, gint);
extern void gdk_window_set_keep_below(GdkWindow *, gboolean);
extern GType gdk_font_type_get_type(void);
extern GType gdk_visual_type_get_type(void);
extern GdkEvent *gdk_display_get_event(GdkDisplay *);
extern void gdk_pixbuf_render_pixmap_and_mask(GdkPixbuf *, GdkPixmap * *,
					      GdkBitmap * *, int);
extern GdkVisual *gdk_drawable_get_visual(GdkDrawable *);
extern void gdk_image_set_colormap(GdkImage *, GdkColormap *);
extern guint gdk_keyval_to_upper(guint);
extern void gdk_set_show_events(gboolean);
extern GdkWindow *gdk_window_lookup_for_display(GdkDisplay *,
						GdkNativeWindow);
extern GdkPixmap *gdk_pixmap_new(GdkDrawable *, gint, gint, gint);
extern GdkColormap *gdk_screen_get_rgb_colormap(GdkScreen *);
extern void gdk_rgb_find_color(GdkColormap *, GdkColor *);
extern void gdk_window_set_override_redirect(GdkWindow *, gboolean);
extern void gdk_window_set_accept_focus(GdkWindow *, gboolean);
extern GdkEvent *gdk_event_peek(void);
extern void gdk_window_show(GdkWindow *);
extern GType gdk_overlap_type_get_type(void);
extern void gdk_window_show_unraised(GdkWindow *);
extern GType gdk_gc_values_mask_get_type(void);
extern void gdk_screen_broadcast_client_message(GdkScreen *, GdkEvent *);
extern void gdk_window_set_events(GdkWindow *, GdkEventMask);
extern void gdk_window_set_icon(GdkWindow *, GdkWindow *, GdkPixmap *,
				GdkBitmap *);
extern GType gdk_join_style_get_type(void);
extern gboolean gdk_utf8_to_compound_text(const gchar *, GdkAtom *, gint *,
					  guchar * *, gint *);
extern void gdk_display_put_event(GdkDisplay *, GdkEvent *);
extern GList *gdk_window_peek_children(GdkWindow *);
extern void gdk_window_enable_synchronized_configure(GdkWindow *);
extern void gdk_window_set_role(GdkWindow *, const gchar *);
extern GdkDisplay *gdk_display_get_default(void);
extern void gdk_window_remove_filter(GdkWindow *, GdkFilterFunc, gpointer);
extern void gdk_gc_set_function(GdkGC *, GdkFunction);
extern GList *gdk_list_visuals(void);
extern void gdk_pixbuf_render_threshold_alpha(GdkPixbuf *, GdkBitmap *,
					      int, int, int, int, int, int,
					      int);
extern void gdk_region_spans_intersect_foreach(GdkRegion *, GdkSpan *, int,
					       gboolean, GdkSpanFunc,
					       gpointer);
extern void gdk_display_pointer_ungrab(GdkDisplay *, guint32);
extern GdkColormap *gdk_screen_get_default_colormap(GdkScreen *);
extern gboolean gdk_rgb_colormap_ditherable(GdkColormap *);
extern void gdk_window_move(GdkWindow *, gint, gint);
extern GdkImage *gdk_drawable_copy_to_image(GdkDrawable *, GdkImage *,
					    gint, gint, gint, gint, gint,
					    gint);
extern void gdk_window_reparent(GdkWindow *, GdkWindow *, gint, gint);
extern GList *gdk_display_list_devices(GdkDisplay *);
extern GdkVisual *gdk_screen_get_rgb_visual(GdkScreen *);
extern void gdk_set_sm_client_id(const gchar *);
extern void gdk_region_destroy(GdkRegion *);
extern void gdk_display_manager_set_default_display(GdkDisplayManager *,
						    GdkDisplay *);
extern void gdk_beep(void);
extern GdkColormap *gdk_colormap_get_system(void);
extern void gdk_display_store_clipboard(GdkDisplay *, GdkWindow *, guint32,
					GdkAtom *, gint);
extern gint gdk_error_trap_pop(void);
extern PangoAttribute *gdk_pango_attr_embossed_new(gboolean);
extern void gdk_drawable_set_colormap(GdkDrawable *, GdkColormap *);
extern GdkDisplay *gdk_cursor_get_display(GdkCursor *);
extern void gdk_window_add_filter(GdkWindow *, GdkFilterFunc, gpointer);
extern void gdk_draw_line(GdkDrawable *, GdkGC *, gint, gint, gint, gint);
extern gboolean gdk_event_send_client_message(GdkEvent *, GdkNativeWindow);
extern void gdk_window_set_geometry_hints(GdkWindow *, GdkGeometry *,
					  GdkWindowHints);
extern GType gdk_window_class_get_type(void);
extern guint gdk_unicode_to_keyval(guint32);
extern void gdk_draw_arc(GdkDrawable *, GdkGC *, gboolean, gint, gint,
			 gint, gint, gint, gint);
extern void gdk_event_handler_set(GdkEventFunc, gpointer, GDestroyNotify);
extern void gdk_region_get_clipbox(GdkRegion *, GdkRectangle *);
extern GType gdk_drawable_get_type(void);
extern void gdk_window_clear_area(GdkWindow *, gint, gint, gint, gint);
extern void gdk_draw_layout(GdkDrawable *, GdkGC *, int, int,
			    PangoLayout *);
extern void gdk_window_get_root_origin(GdkWindow *, gint *, gint *);
extern gint gdk_color_parse(const gchar *, GdkColor *);
extern void gdk_window_set_skip_taskbar_hint(GdkWindow *, gboolean);
extern GType gdk_gc_get_type(void);
extern GdkRegion *gdk_pango_layout_get_clip_region(PangoLayout *, gint,
						   gint, gint *, gint);
extern void gdk_window_fullscreen(GdkWindow *);
extern gchar *gdk_keyval_name(guint);
extern GdkCursor *gdk_cursor_new(GdkCursorType);
extern PangoContext *gdk_pango_context_get(void);
extern GType gdk_rgb_dither_get_type(void);
extern void gdk_window_hide(GdkWindow *);
extern void gdk_window_register_dnd(GdkWindow *);
extern GType gdk_notify_type_get_type(void);
extern void gdk_window_invalidate_rect(GdkWindow *, GdkRectangle *,
				       gboolean);
extern void gdk_window_unmaximize(GdkWindow *);
extern void gdk_gc_copy(GdkGC *, GdkGC *);
extern guint gdk_display_get_default_cursor_size(GdkDisplay *);
extern void gdk_window_set_cursor(GdkWindow *, GdkCursor *);
extern void gdk_keyval_convert_case(guint, guint *, guint *);
extern GdkVisual *gdk_visual_get_best_with_type(GdkVisualType);
extern void gdk_gc_set_exposures(GdkGC *, gboolean);
extern GdkDisplayManager *gdk_display_manager_get(void);
extern void gdk_gc_set_background(GdkGC *, const GdkColor *);
extern void gdk_draw_point(GdkDrawable *, GdkGC *, gint, gint);
extern GdkVisual *gdk_visual_get_best(void);
extern GList *gdk_window_get_children(GdkWindow *);
extern gint gdk_screen_height(void);
extern void gdk_selection_convert(GdkWindow *, GdkAtom, GdkAtom, guint32);
extern GdkWindow *gdk_window_get_pointer(GdkWindow *, gint *, gint *,
					 GdkModifierType *);
extern void gdk_window_end_paint(GdkWindow *);
extern GType gdk_pixmap_get_type(void);
extern GType gdk_property_state_get_type(void);
extern void gdk_window_maximize(GdkWindow *);
extern void gdk_window_get_user_data(GdkWindow *, gpointer *);
extern GdkGrabStatus gdk_keyboard_grab(GdkWindow *, gboolean, guint32);
extern GType gdk_visibility_state_get_type(void);
extern void gdk_draw_indexed_image(GdkDrawable *, GdkGC *, gint, gint,
				   gint, gint, GdkRgbDither, guchar *,
				   gint, GdkRgbCmap *);
extern gboolean gdk_color_equal(const GdkColor *, const GdkColor *);
extern gboolean gdk_region_empty(GdkRegion *);
extern void gdk_region_offset(GdkRegion *, gint, gint);
extern gint gdk_string_to_compound_text(const gchar *, GdkAtom *, gint *,
					guchar * *, gint *);
extern GdkScreen *gdk_gc_get_screen(GdkGC *);
extern GdkOverlapType gdk_region_rect_in(GdkRegion *, GdkRectangle *);
extern GType gdk_cursor_type_get_type(void);
extern gboolean gdk_window_set_static_gravities(GdkWindow *, gboolean);
extern gint gdk_screen_get_number(GdkScreen *);
extern void gdk_draw_segments(GdkDrawable *, GdkGC *, GdkSegment *, gint);
extern guint32 gdk_keyval_to_unicode(guint);
extern void gdk_draw_layout_line_with_colors(GdkDrawable *, GdkGC *, gint,
					     gint, PangoLayoutLine *,
					     const GdkColor *,
					     const GdkColor *);
extern void gdk_property_change(GdkWindow *, GdkAtom, GdkAtom, gint,
				GdkPropMode, const guchar *, gint);
extern gboolean gdk_event_send_client_message_for_display(GdkDisplay *,
							  GdkEvent *,
							  GdkNativeWindow);
extern gboolean gdk_screen_get_setting(GdkScreen *, const gchar *,
				       GValue *);
extern GList *gdk_screen_list_visuals(GdkScreen *);
extern GType gdk_window_attributes_type_get_type(void);
extern GdkWindow *gdk_window_new(GdkWindow *, GdkWindowAttr *, gint);
extern void gdk_window_begin_move_drag(GdkWindow *, gint, gint, gint,
				       guint32);
extern void gdk_device_get_state(GdkDevice *, GdkWindow *, gdouble *,
				 GdkModifierType *);
extern void gdk_window_set_modal_hint(GdkWindow *, gboolean);
extern GdkEvent *gdk_event_new(GdkEventType);
extern void gdk_window_destroy(GdkWindow *);
extern GType gdk_wm_function_get_type(void);
extern GdkColormap *gdk_colormap_new(GdkVisual *, gboolean);
extern void gdk_draw_rgb_32_image(GdkDrawable *, GdkGC *, gint, gint, gint,
				  gint, GdkRgbDither, guchar *, gint);
extern void gdk_window_set_background(GdkWindow *, const GdkColor *);
extern void gdk_window_stick(GdkWindow *);
extern GType gdk_pango_renderer_get_type(void);
extern void gdk_window_set_back_pixmap(GdkWindow *, GdkPixmap *, gboolean);
extern gboolean gdk_display_supports_cursor_color(GdkDisplay *);
extern GdkDragContext *gdk_drag_begin(GdkWindow *, GList *);
extern void gdk_notify_startup_complete(void);
extern void gdk_display_sync(GdkDisplay *);
extern gboolean gdk_event_get_state(GdkEvent *, GdkModifierType *);
extern void gdk_gc_set_values(GdkGC *, GdkGCValues *, GdkGCValuesMask);
extern GdkEvent *gdk_event_get_graphics_expose(GdkWindow *);
extern void gdk_color_free(GdkColor *);
extern void gdk_rectangle_union(GdkRectangle *, GdkRectangle *,
				GdkRectangle *);
extern void gdk_window_configure_finished(GdkWindow *);
extern gboolean gdk_drag_drop_succeeded(GdkDragContext *);
extern gint gdk_display_get_n_screens(GdkDisplay *);
extern void gdk_draw_layout_with_colors(GdkDrawable *, GdkGC *, int, int,
					PangoLayout *, const GdkColor *,
					const GdkColor *);
extern gint gdk_drawable_get_depth(GdkDrawable *);
extern GdkPixmap *gdk_pixmap_foreign_new_for_display(GdkDisplay *,
						     GdkNativeWindow);
extern void gdk_event_send_clientmessage_toall(GdkEvent *);
extern GdkPixbuf *gdk_pixbuf_get_from_drawable(GdkPixbuf *, GdkDrawable *,
					       GdkColormap *, int, int,
					       int, int, int, int);
extern void gdk_draw_gray_image(GdkDrawable *, GdkGC *, gint, gint, gint,
				gint, GdkRgbDither, guchar *, gint);
extern gint gdk_text_property_to_text_list(GdkAtom, gint, const guchar *,
					   gint, gchar * **);
extern GCallback gdk_threads_lock;
extern gboolean gdk_region_equal(GdkRegion *, GdkRegion *);
extern GdkEvent *gdk_event_get(void);
extern void gdk_window_freeze_updates(GdkWindow *);
extern GdkScreen *gdk_visual_get_screen(GdkVisual *);
extern gboolean gdk_device_get_history(GdkDevice *, GdkWindow *, guint32,
				       guint32, GdkTimeCoord * **, gint *);
extern void gdk_image_put_pixel(GdkImage *, gint, gint, guint32);
extern void gdk_screen_set_default_colormap(GdkScreen *, GdkColormap *);
extern GType gdk_wm_decoration_get_type(void);
extern void gdk_draw_image(GdkDrawable *, GdkGC *, GdkImage *, gint, gint,
			   gint, gint, gint, gint);
extern void gdk_window_shape_combine_region(GdkWindow *, GdkRegion *, gint,
					    gint);
extern GdkGC *gdk_gc_new(GdkDrawable *);
extern GType gdk_status_get_type(void);
extern void gdk_window_set_keep_above(GdkWindow *, gboolean);
extern gboolean gdk_selection_owner_set_for_display(GdkDisplay *,
						    GdkWindow *, GdkAtom,
						    guint32, gboolean);
extern GdkDevice *gdk_display_get_core_pointer(GdkDisplay *);
extern void gdk_cursor_unref(GdkCursor *);
extern GType gdk_display_manager_get_type(void);
extern const gchar *gdk_get_display_arg_name(void);
extern gboolean gdk_window_is_visible(GdkWindow *);
extern void gdk_region_union(GdkRegion *, GdkRegion *);
extern gint gdk_screen_get_width_mm(GdkScreen *);
extern void gdk_draw_lines(GdkDrawable *, GdkGC *, GdkPoint *, gint);
extern GType gdk_colormap_get_type(void);
extern guint32 gdk_drag_get_protocol(guint32, GdkDragProtocol *);
extern gint gdk_screen_get_width(GdkScreen *);
extern void gdk_selection_send_notify_for_display(GdkDisplay *, guint32,
						  GdkAtom, GdkAtom,
						  GdkAtom, guint32);
extern gchar *gdk_set_locale(void);
extern GdkKeymap *gdk_keymap_get_default(void);
extern GdkScreen *gdk_colormap_get_screen(GdkColormap *);
extern GType gdk_byte_order_get_type(void);
extern void gdk_window_constrain_size(GdkGeometry *, guint, gint, gint,
				      gint *, gint *);
extern GdkWindow *gdk_screen_get_root_window(GdkScreen *);
extern void gdk_window_set_user_data(GdkWindow *, gpointer);
extern void gdk_colormap_free_colors(GdkColormap *, GdkColor *, gint);
extern void gdk_window_get_internal_paint_info(GdkWindow *,
					       GdkDrawable * *, gint *,
					       gint *);
extern gboolean gdk_window_is_viewable(GdkWindow *);
extern struct _GdkDrawable *gdk_bitmap_create_from_data(GdkDrawable *,
							const gchar *,
							gint, gint);
extern void gdk_window_unfullscreen(GdkWindow *);
extern void gdk_drag_find_window(GdkDragContext *, GdkWindow *, gint, gint,
				 GdkWindow * *, GdkDragProtocol *);
extern GType gdk_keymap_get_type(void);
extern GType gdk_window_type_hint_get_type(void);
extern void gdk_gc_set_clip_mask(GdkGC *, GdkBitmap *);
extern gchar *gdk_atom_name(GdkAtom);
extern void gdk_rgb_set_verbose(gboolean);
extern void gdk_draw_rgb_image(GdkDrawable *, GdkGC *, gint, gint, gint,
			       gint, GdkRgbDither, guchar *, gint);
extern void gdk_query_visual_types(GdkVisualType * *, gint *);
extern GType gdk_crossing_mode_get_type(void);
extern void gdk_draw_trapezoids(GdkDrawable *, GdkGC *, GdkTrapezoid *,
				gint);
extern GdkPixmap *gdk_pixmap_create_from_data(GdkDrawable *, const gchar *,
					      gint, gint, gint,
					      const GdkColor *,
					      const GdkColor *);
extern GType gdk_line_style_get_type(void);
extern gboolean gdk_window_get_decorations(GdkWindow *, GdkWMDecoration *);
extern GType gdk_window_state_get_type(void);
extern void gdk_gc_offset(GdkGC *, gint, gint);
extern void gdk_event_free(GdkEvent *);
extern void gdk_gc_set_clip_region(GdkGC *, GdkRegion *);
extern gboolean gdk_device_set_mode(GdkDevice *, GdkInputMode);
extern void gdk_query_depths(gint * *, gint *);
extern void gdk_draw_rgb_32_image_dithalign(GdkDrawable *, GdkGC *, gint,
					    gint, gint, gint, GdkRgbDither,
					    guchar *, gint, gint, gint);
extern GType gdk_subwindow_mode_get_type(void);
extern void gdk_rgb_set_install(gboolean);
extern guint gdk_keyval_to_lower(guint);
extern GType gdk_window_edge_get_type(void);
extern GdkPixmap *gdk_pixmap_lookup_for_display(GdkDisplay *,
						GdkNativeWindow);
extern gboolean gdk_display_pointer_is_grabbed(GdkDisplay *);
extern GType gdk_prop_mode_get_type(void);
extern void gdk_window_withdraw(GdkWindow *);
extern void gdk_drawable_get_size(GdkDrawable *, gint *, gint *);
extern void gdk_window_merge_child_shapes(GdkWindow *);
extern guint gdk_keymap_lookup_key(GdkKeymap *, const GdkKeymapKey *);
extern GdkRegion *gdk_region_polygon(GdkPoint *, gint, GdkFillRule);
extern void gdk_window_clear(GdkWindow *);
extern const gchar *gdk_display_get_name(GdkDisplay *);
extern void gdk_pango_renderer_set_gc(GdkPangoRenderer *, GdkGC *);
extern gboolean gdk_spawn_on_screen_with_pipes(GdkScreen *, const gchar *,
					       gchar * *, gchar * *,
					       GSpawnFlags,
					       GSpawnChildSetupFunc,
					       gpointer, gint *, gint *,
					       gint *, gint *, GError * *);
extern void gdk_event_put(GdkEvent *);
extern GType gdk_window_type_get_type(void);
extern GdkScreen *gdk_event_get_screen(GdkEvent *);
extern GdkPointerHooks *gdk_set_pointer_hooks(const GdkPointerHooks *);
extern void gdk_draw_glyphs_transformed(GdkDrawable *, GdkGC *,
					PangoMatrix *, PangoFont *, gint,
					gint, PangoGlyphString *);
extern void gdk_draw_rgb_image_dithalign(GdkDrawable *, GdkGC *, gint,
					 gint, gint, gint, GdkRgbDither,
					 guchar *, gint, gint, gint);
extern void gdk_window_process_updates(GdkWindow *, gboolean);
extern GType gdk_extension_mode_get_type(void);
extern gboolean gdk_event_get_axis(GdkEvent *, GdkAxisUse, gdouble *);
extern void gdk_gc_set_clip_rectangle(GdkGC *, GdkRectangle *);
extern void gdk_gc_set_rgb_bg_color(GdkGC *, const GdkColor *);
extern void gdk_region_xor(GdkRegion *, GdkRegion *);
extern GdkCursor *gdk_cursor_ref(GdkCursor *);
extern GdkVisual *gdk_visual_get_best_with_both(gint, GdkVisualType);
extern GType gdk_scroll_direction_get_type(void);
extern void gdk_draw_points(GdkDrawable *, GdkGC *, GdkPoint *, gint);
extern GdkRgbCmap *gdk_rgb_cmap_new(guint32 *, gint);
extern GdkWindow *gdk_window_foreign_new(GdkNativeWindow);
extern GdkWindow *gdk_window_get_parent(GdkWindow *);
extern void gdk_draw_drawable(GdkDrawable *, GdkGC *, GdkDrawable *, gint,
			      gint, gint, gint, gint, gint);
extern void gdk_threads_set_lock_functions(GCallback, GCallback);
extern gint gdk_screen_get_height_mm(GdkScreen *);
extern gboolean gdk_device_get_axis(GdkDevice *, gdouble *, GdkAxisUse,
				    gdouble *);
extern gboolean gdk_get_show_events(void);
extern void gdk_window_begin_paint_rect(GdkWindow *, GdkRectangle *);
extern void gdk_pointer_ungrab(guint32);
extern GdkPixmap *gdk_pixmap_lookup(GdkNativeWindow);
extern void gdk_threads_leave(void);
extern gboolean gdk_pointer_is_grabbed(void);
extern gboolean gdk_region_point_in(GdkRegion *, int, int);
extern GdkWindowState gdk_window_get_state(GdkWindow *);
extern void gdk_region_get_rectangles(GdkRegion *, GdkRectangle * *,
				      gint *);
extern void gdk_draw_rectangle(GdkDrawable *, GdkGC *, gboolean, gint,
			       gint, gint, gint);
extern void gdk_gc_set_line_attributes(GdkGC *, gint, GdkLineStyle,
				       GdkCapStyle, GdkJoinStyle);
extern void gdk_window_get_geometry(GdkWindow *, gint *, gint *, gint *,
				    gint *, gint *);
extern void gdk_rgb_set_min_colors(gint);
extern gint gdk_screen_get_monitor_at_window(GdkScreen *, GdkWindow *);
extern GdkWindow *gdk_window_foreign_new_for_display(GdkDisplay *,
						     GdkNativeWindow);
extern GdkRegion *gdk_region_rectangle(GdkRectangle *);
extern void gdk_window_set_icon_list(GdkWindow *, GList *);
extern GdkPixbuf *gdk_pixbuf_get_from_image(GdkPixbuf *, GdkImage *,
					    GdkColormap *, int, int, int,
					    int, int, int);
extern void gdk_device_set_axis_use(GdkDevice *, guint, GdkAxisUse);
extern void gdk_keyboard_ungrab(guint32);
extern GdkWindow *gdk_window_at_pointer(gint *, gint *);
extern GdkVisual *gdk_visual_get_system(void);
extern void gdk_drag_find_window_for_screen(GdkDragContext *, GdkWindow *,
					    GdkScreen *, gint, gint,
					    GdkWindow * *,
					    GdkDragProtocol *);
extern GdkRegion *gdk_region_new(void);
extern GType gdk_image_type_get_type(void);
extern GType gdk_image_get_type(void);
extern gboolean gdk_display_supports_clipboard_persistence(GdkDisplay *);
extern gint gdk_screen_width(void);
extern void gdk_input_set_extension_events(GdkWindow *, gint,
					   GdkExtensionMode);
extern GType gdk_display_get_type(void);
extern GdkCursor *gdk_cursor_new_for_display(GdkDisplay *, GdkCursorType);
extern GdkRegion *gdk_drawable_get_clip_region(GdkDrawable *);
extern GdkScreen *gdk_display_get_screen(GdkDisplay *, gint);
extern GdkColormap *gdk_screen_get_system_colormap(GdkScreen *);
extern GdkVisualType gdk_visual_get_best_type(void);
extern GType gdk_setting_action_get_type(void);
extern GdkCursor *gdk_cursor_new_from_pixmap(GdkPixmap *, GdkPixmap *,
					     const GdkColor *,
					     const GdkColor *, gint, gint);
extern GType gdk_fill_rule_get_type(void);
extern void gdk_window_invalidate_region(GdkWindow *, GdkRegion *,
					 gboolean);
extern gint gdk_screen_width_mm(void);
extern void gdk_window_set_child_shapes(GdkWindow *);
extern void gdk_window_move_resize(GdkWindow *, gint, gint, gint, gint);
extern GType gdk_cursor_get_type(void);
extern void gdk_free_compound_text(guchar *);
extern PangoRenderer *gdk_pango_renderer_new(GdkScreen *);
extern GdkScreen *gdk_drawable_get_screen(GdkDrawable *);
extern GdkWindow *gdk_window_lookup(GdkNativeWindow);
extern void gdk_window_set_icon_name(GdkWindow *, const gchar *);
extern GType gdk_drag_context_get_type(void);
extern void gdk_window_thaw_updates(GdkWindow *);
extern GdkPixmap *gdk_pixmap_colormap_create_from_xpm(GdkDrawable *,
						      GdkColormap *,
						      GdkBitmap * *,
						      const GdkColor *,
						      const gchar *);
extern GdkEvent *gdk_event_copy(GdkEvent *);
extern gboolean gdk_selection_owner_set(GdkWindow *, GdkAtom, guint32,
					gboolean);
extern void gdk_window_get_position(GdkWindow *, gint *, gint *);
extern GType gdk_drag_action_get_type(void);
extern guint32 gdk_image_get_pixel(GdkImage *, gint, gint);
extern void gdk_window_shape_combine_mask(GdkWindow *, GdkBitmap *, gint,
					  gint);
extern void gdk_region_shrink(GdkRegion *, int, int);
extern GdkPixbuf *gdk_cursor_get_image(GdkCursor *);
extern GdkCursor *gdk_cursor_new_from_name(GdkDisplay *, const gchar *);
extern void gdk_display_warp_pointer(GdkDisplay *, GdkScreen *, gint,
				     gint);
extern GdkColormap *gdk_screen_get_rgba_colormap(GdkScreen *);
extern GdkVisual *gdk_screen_get_rgba_visual(GdkScreen *);
extern void gdk_window_move_region(GdkWindow *, GdkRegion *, gint, gint);
extern void gdk_window_set_urgency_hint(GdkWindow *, gboolean);
</SCREEN>
</SECT2>
<SECT2>
<TITLE>gtk-2.0/gdk/gdkcairo.h</TITLE>
<PARA>
</PARA>
<SCREEN>

extern cairo_t *gdk_cairo_create(GdkDrawable *);
extern void gdk_cairo_set_source_color(cairo_t *, GdkColor *);
extern void gdk_cairo_set_source_pixbuf(cairo_t *, GdkPixbuf *, double,
					double);
extern void gdk_cairo_rectangle(cairo_t *, GdkRectangle *);
extern void gdk_cairo_region(cairo_t *, GdkRegion *);
</SCREEN>
</SECT2>
<SECT2>
<TITLE>gtk-2.0/gdk/gdkkeysyms.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define GDK_space	0x020
#define GDK_exclam	0x021
#define GDK_quotedbl	0x022
#define GDK_numbersign	0x023
#define GDK_dollar	0x024
#define GDK_percent	0x025
#define GDK_ampersand	0x026
#define GDK_apostrophe	0x027
#define GDK_quoteright	0x027
#define GDK_parenleft	0x028
#define GDK_parenright	0x029
#define GDK_asterisk	0x02a
#define GDK_plus	0x02b
#define GDK_comma	0x02c
#define GDK_minus	0x02d
#define GDK_period	0x02e
#define GDK_slash	0x02f
#define GDK_0	0x030
#define GDK_1	0x031
#define GDK_2	0x032
#define GDK_3	0x033
#define GDK_4	0x034
#define GDK_5	0x035
#define GDK_6	0x036
#define GDK_7	0x037
#define GDK_8	0x038
#define GDK_9	0x039
#define GDK_colon	0x03a
#define GDK_semicolon	0x03b
#define GDK_less	0x03c
#define GDK_equal	0x03d
#define GDK_greater	0x03e
#define GDK_question	0x03f
#define GDK_at	0x040
#define GDK_A	0x041
#define GDK_B	0x042
#define GDK_C	0x043
#define GDK_D	0x044
#define GDK_E	0x045
#define GDK_F	0x046
#define GDK_G	0x047
#define GDK_H	0x048
#define GDK_I	0x049
#define GDK_J	0x04a
#define GDK_K	0x04b
#define GDK_L	0x04c
#define GDK_M	0x04d
#define GDK_N	0x04e
#define GDK_O	0x04f
#define GDK_P	0x050
#define GDK_Q	0x051
#define GDK_R	0x052
#define GDK_S	0x053
#define GDK_T	0x054
#define GDK_U	0x055
#define GDK_V	0x056
#define GDK_W	0x057
#define GDK_X	0x058
#define GDK_Y	0x059
#define GDK_Z	0x05a
#define GDK_bracketleft	0x05b
#define GDK_backslash	0x05c
#define GDK_bracketright	0x05d
#define GDK_asciicircum	0x05e
#define GDK_underscore	0x05f
#define GDK_grave	0x060
#define GDK_quoteleft	0x060
#define GDK_a	0x061
#define GDK_b	0x062
#define GDK_c	0x063
#define GDK_d	0x064
#define GDK_e	0x065
#define GDK_f	0x066
#define GDK_g	0x067
#define GDK_h	0x068
#define GDK_i	0x069
#define GDK_j	0x06a
#define GDK_k	0x06b
#define GDK_l	0x06c
#define GDK_m	0x06d
#define GDK_n	0x06e
#define GDK_o	0x06f
#define GDK_p	0x070
#define GDK_q	0x071
#define GDK_r	0x072
#define GDK_s	0x073
#define GDK_t	0x074
#define GDK_u	0x075
#define GDK_v	0x076
#define GDK_w	0x077
#define GDK_x	0x078
#define GDK_y	0x079
#define GDK_z	0x07a
#define GDK_braceleft	0x07b
#define GDK_bar	0x07c
#define GDK_braceright	0x07d
#define GDK_asciitilde	0x07e
#define GDK_nobreakspace	0x0a0
#define GDK_exclamdown	0x0a1
#define GDK_cent	0x0a2
#define GDK_sterling	0x0a3
#define GDK_currency	0x0a4
#define GDK_yen	0x0a5
#define GDK_brokenbar	0x0a6
#define GDK_section	0x0a7
#define GDK_diaeresis	0x0a8
#define GDK_copyright	0x0a9
#define GDK_ordfeminine	0x0aa
#define GDK_guillemotleft	0x0ab
#define GDK_notsign	0x0ac
#define GDK_hyphen	0x0ad
#define GDK_registered	0x0ae
#define GDK_macron	0x0af
#define GDK_degree	0x0b0
#define GDK_plusminus	0x0b1
#define GDK_twosuperior	0x0b2
#define GDK_threesuperior	0x0b3
#define GDK_acute	0x0b4
#define GDK_mu	0x0b5
#define GDK_paragraph	0x0b6
#define GDK_periodcentered	0x0b7
#define GDK_cedilla	0x0b8
#define GDK_onesuperior	0x0b9
#define GDK_masculine	0x0ba
#define GDK_guillemotright	0x0bb
#define GDK_onequarter	0x0bc
#define GDK_onehalf	0x0bd
#define GDK_threequarters	0x0be
#define GDK_questiondown	0x0bf
#define GDK_Agrave	0x0c0
#define GDK_Aacute	0x0c1
#define GDK_Acircumflex	0x0c2
#define GDK_Atilde	0x0c3
#define GDK_Adiaeresis	0x0c4
#define GDK_Aring	0x0c5
#define GDK_AE	0x0c6
#define GDK_Ccedilla	0x0c7
#define GDK_Egrave	0x0c8
#define GDK_Eacute	0x0c9
#define GDK_Ecircumflex	0x0ca
#define GDK_Ediaeresis	0x0cb
#define GDK_Igrave	0x0cc
#define GDK_Iacute	0x0cd
#define GDK_Icircumflex	0x0ce
#define GDK_Idiaeresis	0x0cf
#define GDK_ETH	0x0d0
#define GDK_Eth	0x0d0
#define GDK_Ntilde	0x0d1
#define GDK_Ograve	0x0d2
#define GDK_Oacute	0x0d3
#define GDK_Ocircumflex	0x0d4
#define GDK_Otilde	0x0d5
#define GDK_Odiaeresis	0x0d6
#define GDK_multiply	0x0d7
#define GDK_Ooblique	0x0d8
#define GDK_Ugrave	0x0d9
#define GDK_Uacute	0x0da
#define GDK_Ucircumflex	0x0db
#define GDK_Udiaeresis	0x0dc
#define GDK_Yacute	0x0dd
#define GDK_THORN	0x0de
#define GDK_Thorn	0x0de
#define GDK_ssharp	0x0df
#define GDK_agrave	0x0e0
#define GDK_aacute	0x0e1
#define GDK_acircumflex	0x0e2
#define GDK_atilde	0x0e3
#define GDK_adiaeresis	0x0e4
#define GDK_aring	0x0e5
#define GDK_ae	0x0e6
#define GDK_ccedilla	0x0e7
#define GDK_egrave	0x0e8
#define GDK_eacute	0x0e9
#define GDK_ecircumflex	0x0ea
#define GDK_ediaeresis	0x0eb
#define GDK_igrave	0x0ec
#define GDK_iacute	0x0ed
#define GDK_icircumflex	0x0ee
#define GDK_idiaeresis	0x0ef
#define GDK_eth	0x0f0
#define GDK_ntilde	0x0f1
#define GDK_ograve	0x0f2
#define GDK_oacute	0x0f3
#define GDK_ocircumflex	0x0f4
#define GDK_otilde	0x0f5
#define GDK_odiaeresis	0x0f6
#define GDK_division	0x0f7
#define GDK_oslash	0x0f8
#define GDK_ugrave	0x0f9
#define GDK_uacute	0x0fa
#define GDK_ucircumflex	0x0fb
#define GDK_udiaeresis	0x0fc
#define GDK_yacute	0x0fd
#define GDK_thorn	0x0fe
#define GDK_ydiaeresis	0x0ff
#define GDK_OE	0x13bc
#define GDK_oe	0x13bd
#define GDK_Ydiaeresis	0x13be
#define GDK_Aogonek	0x1a1
#define GDK_breve	0x1a2
#define GDK_Lstroke	0x1a3
#define GDK_Lcaron	0x1a5
#define GDK_Sacute	0x1a6
#define GDK_Scaron	0x1a9
#define GDK_Scedilla	0x1aa
#define GDK_Tcaron	0x1ab
#define GDK_Zacute	0x1ac
#define GDK_Zcaron	0x1ae
#define GDK_Zabovedot	0x1af
#define GDK_aogonek	0x1b1
#define GDK_ogonek	0x1b2
#define GDK_lstroke	0x1b3
#define GDK_lcaron	0x1b5
#define GDK_sacute	0x1b6
#define GDK_caron	0x1b7
#define GDK_scaron	0x1b9
#define GDK_scedilla	0x1ba
#define GDK_tcaron	0x1bb
#define GDK_zacute	0x1bc
#define GDK_doubleacute	0x1bd
#define GDK_zcaron	0x1be
#define GDK_zabovedot	0x1bf
#define GDK_Racute	0x1c0
#define GDK_Abreve	0x1c3
#define GDK_Lacute	0x1c5
#define GDK_Cacute	0x1c6
#define GDK_Ccaron	0x1c8
#define GDK_Eogonek	0x1ca
#define GDK_Ecaron	0x1cc
#define GDK_Dcaron	0x1cf
#define GDK_Dstroke	0x1d0
#define GDK_Nacute	0x1d1
#define GDK_Ncaron	0x1d2
#define GDK_Odoubleacute	0x1d5
#define GDK_Rcaron	0x1d8
#define GDK_Uring	0x1d9
#define GDK_Udoubleacute	0x1db
#define GDK_Tcedilla	0x1de
#define GDK_racute	0x1e0
#define GDK_abreve	0x1e3
#define GDK_lacute	0x1e5
#define GDK_cacute	0x1e6
#define GDK_ccaron	0x1e8
#define GDK_eogonek	0x1ea
#define GDK_ecaron	0x1ec
#define GDK_dcaron	0x1ef
#define GDK_dstroke	0x1f0
#define GDK_nacute	0x1f1
#define GDK_ncaron	0x1f2
#define GDK_odoubleacute	0x1f5
#define GDK_rcaron	0x1f8
#define GDK_uring	0x1f9
#define GDK_udoubleacute	0x1fb
#define GDK_tcedilla	0x1fe
#define GDK_abovedot	0x1ff
#define GDK_EcuSign	0x20a0
#define GDK_ColonSign	0x20a1
#define GDK_CruzeiroSign	0x20a2
#define GDK_FFrancSign	0x20a3
#define GDK_LiraSign	0x20a4
#define GDK_MillSign	0x20a5
#define GDK_NairaSign	0x20a6
#define GDK_PesetaSign	0x20a7
#define GDK_RupeeSign	0x20a8
#define GDK_WonSign	0x20a9
#define GDK_NewSheqelSign	0x20aa
#define GDK_DongSign	0x20ab
#define GDK_EuroSign	0x20ac
#define GDK_Hstroke	0x2a1
#define GDK_Hcircumflex	0x2a6
#define GDK_Iabovedot	0x2a9
#define GDK_Gbreve	0x2ab
#define GDK_Jcircumflex	0x2ac
#define GDK_hstroke	0x2b1
#define GDK_hcircumflex	0x2b6
#define GDK_idotless	0x2b9
#define GDK_gbreve	0x2bb
#define GDK_jcircumflex	0x2bc
#define GDK_Cabovedot	0x2c5
#define GDK_Ccircumflex	0x2c6
#define GDK_Gabovedot	0x2d5
#define GDK_Gcircumflex	0x2d8
#define GDK_Ubreve	0x2dd
#define GDK_Scircumflex	0x2de
#define GDK_cabovedot	0x2e5
#define GDK_ccircumflex	0x2e6
#define GDK_gabovedot	0x2f5
#define GDK_gcircumflex	0x2f8
#define GDK_ubreve	0x2fd
#define GDK_scircumflex	0x2fe
#define GDK_kappa	0x3a2
#define GDK_kra	0x3a2
#define GDK_Rcedilla	0x3a3
#define GDK_Itilde	0x3a5
#define GDK_Lcedilla	0x3a6
#define GDK_Emacron	0x3aa
#define GDK_Gcedilla	0x3ab
#define GDK_Tslash	0x3ac
#define GDK_rcedilla	0x3b3
#define GDK_itilde	0x3b5
#define GDK_lcedilla	0x3b6
#define GDK_emacron	0x3ba
#define GDK_gcedilla	0x3bb
#define GDK_tslash	0x3bc
#define GDK_ENG	0x3bd
#define GDK_eng	0x3bf
#define GDK_Amacron	0x3c0
#define GDK_Iogonek	0x3c7
#define GDK_Eabovedot	0x3cc
#define GDK_Imacron	0x3cf
#define GDK_Ncedilla	0x3d1
#define GDK_Omacron	0x3d2
#define GDK_Kcedilla	0x3d3
#define GDK_Uogonek	0x3d9
#define GDK_Utilde	0x3dd
#define GDK_Umacron	0x3de
#define GDK_amacron	0x3e0
#define GDK_iogonek	0x3e7
#define GDK_eabovedot	0x3ec
#define GDK_imacron	0x3ef
#define GDK_ncedilla	0x3f1
#define GDK_omacron	0x3f2
#define GDK_kcedilla	0x3f3
#define GDK_uogonek	0x3f9
#define GDK_utilde	0x3fd
#define GDK_umacron	0x3fe
#define GDK_overline	0x47e
#define GDK_kana_fullstop	0x4a1
#define GDK_kana_openingbracket	0x4a2
#define GDK_kana_closingbracket	0x4a3
#define GDK_kana_comma	0x4a4
#define GDK_kana_conjunctive	0x4a5
#define GDK_kana_middledot	0x4a5
#define GDK_kana_WO	0x4a6
#define GDK_kana_a	0x4a7
#define GDK_kana_i	0x4a8
#define GDK_kana_u	0x4a9
#define GDK_kana_e	0x4aa
#define GDK_kana_o	0x4ab
#define GDK_kana_ya	0x4ac
#define GDK_kana_yu	0x4ad
#define GDK_kana_yo	0x4ae
#define GDK_kana_tsu	0x4af
#define GDK_kana_tu	0x4af
#define GDK_prolongedsound	0x4b0
#define GDK_kana_A	0x4b1
#define GDK_kana_I	0x4b2
#define GDK_kana_U	0x4b3
#define GDK_kana_E	0x4b4
#define GDK_kana_O	0x4b5
#define GDK_kana_KA	0x4b6
#define GDK_kana_KI	0x4b7
#define GDK_kana_KU	0x4b8
#define GDK_kana_KE	0x4b9
#define GDK_kana_KO	0x4ba
#define GDK_kana_SA	0x4bb
#define GDK_kana_SHI	0x4bc
#define GDK_kana_SU	0x4bd
#define GDK_kana_SE	0x4be
#define GDK_kana_SO	0x4bf
#define GDK_kana_TA	0x4c0
#define GDK_kana_CHI	0x4c1
#define GDK_kana_TI	0x4c1
#define GDK_kana_TSU	0x4c2
#define GDK_kana_TU	0x4c2
#define GDK_kana_TE	0x4c3
#define GDK_kana_TO	0x4c4
#define GDK_kana_NA	0x4c5
#define GDK_kana_NI	0x4c6
#define GDK_kana_NU	0x4c7
#define GDK_kana_NE	0x4c8
#define GDK_kana_NO	0x4c9
#define GDK_kana_HA	0x4ca
#define GDK_kana_HI	0x4cb
#define GDK_kana_FU	0x4cc
#define GDK_kana_HU	0x4cc
#define GDK_kana_HE	0x4cd
#define GDK_kana_HO	0x4ce
#define GDK_kana_MA	0x4cf
#define GDK_kana_MI	0x4d0
#define GDK_kana_MU	0x4d1
#define GDK_kana_ME	0x4d2
#define GDK_kana_MO	0x4d3
#define GDK_kana_YA	0x4d4
#define GDK_kana_YU	0x4d5
#define GDK_kana_YO	0x4d6
#define GDK_kana_RA	0x4d7
#define GDK_kana_RI	0x4d8
#define GDK_kana_RU	0x4d9
#define GDK_kana_RE	0x4da
#define GDK_kana_RO	0x4db
#define GDK_kana_WA	0x4dc
#define GDK_kana_N	0x4dd
#define GDK_voicedsound	0x4de
#define GDK_semivoicedsound	0x4df
#define GDK_Arabic_comma	0x5ac
#define GDK_Arabic_semicolon	0x5bb
#define GDK_Arabic_question_mark	0x5bf
#define GDK_Arabic_hamza	0x5c1
#define GDK_Arabic_maddaonalef	0x5c2
#define GDK_Arabic_hamzaonalef	0x5c3
#define GDK_Arabic_hamzaonwaw	0x5c4
#define GDK_Arabic_hamzaunderalef	0x5c5
#define GDK_Arabic_hamzaonyeh	0x5c6
#define GDK_Arabic_alef	0x5c7
#define GDK_Arabic_beh	0x5c8
#define GDK_Arabic_tehmarbuta	0x5c9
#define GDK_Arabic_teh	0x5ca
#define GDK_Arabic_theh	0x5cb
#define GDK_Arabic_jeem	0x5cc
#define GDK_Arabic_hah	0x5cd
#define GDK_Arabic_khah	0x5ce
#define GDK_Arabic_dal	0x5cf
#define GDK_Arabic_thal	0x5d0
#define GDK_Arabic_ra	0x5d1
#define GDK_Arabic_zain	0x5d2
#define GDK_Arabic_seen	0x5d3
#define GDK_Arabic_sheen	0x5d4
#define GDK_Arabic_sad	0x5d5
#define GDK_Arabic_dad	0x5d6
#define GDK_Arabic_tah	0x5d7
#define GDK_Arabic_zah	0x5d8
#define GDK_Arabic_ain	0x5d9
#define GDK_Arabic_ghain	0x5da
#define GDK_Arabic_tatweel	0x5e0
#define GDK_Arabic_feh	0x5e1
#define GDK_Arabic_qaf	0x5e2
#define GDK_Arabic_kaf	0x5e3
#define GDK_Arabic_lam	0x5e4
#define GDK_Arabic_meem	0x5e5
#define GDK_Arabic_noon	0x5e6
#define GDK_Arabic_ha	0x5e7
#define GDK_Arabic_heh	0x5e7
#define GDK_Arabic_waw	0x5e8
#define GDK_Arabic_alefmaksura	0x5e9
#define GDK_Arabic_yeh	0x5ea
#define GDK_Arabic_fathatan	0x5eb
#define GDK_Arabic_dammatan	0x5ec
#define GDK_Arabic_kasratan	0x5ed
#define GDK_Arabic_fatha	0x5ee
#define GDK_Arabic_damma	0x5ef
#define GDK_Arabic_kasra	0x5f0
#define GDK_Arabic_shadda	0x5f1
#define GDK_Arabic_sukun	0x5f2
#define GDK_Serbian_dje	0x6a1
#define GDK_Macedonia_gje	0x6a2
#define GDK_Cyrillic_io	0x6a3
#define GDK_Ukrainian_ie	0x6a4
#define GDK_Ukranian_je	0x6a4
#define GDK_Macedonia_dse	0x6a5
#define GDK_Ukrainian_i	0x6a6
#define GDK_Ukranian_i	0x6a6
#define GDK_Ukrainian_yi	0x6a7
#define GDK_Ukranian_yi	0x6a7
#define GDK_Cyrillic_je	0x6a8
#define GDK_Serbian_je	0x6a8
#define GDK_Cyrillic_lje	0x6a9
#define GDK_Serbian_lje	0x6a9
#define GDK_Cyrillic_nje	0x6aa
#define GDK_Serbian_nje	0x6aa
#define GDK_Serbian_tshe	0x6ab
#define GDK_Macedonia_kje	0x6ac
#define GDK_Ukrainian_ghe_with_upturn	0x6ad
#define GDK_Byelorussian_shortu	0x6ae
#define GDK_Cyrillic_dzhe	0x6af
#define GDK_Serbian_dze	0x6af
#define GDK_numerosign	0x6b0
#define GDK_Serbian_DJE	0x6b1
#define GDK_Macedonia_GJE	0x6b2
#define GDK_Cyrillic_IO	0x6b3
#define GDK_Ukrainian_IE	0x6b4
#define GDK_Ukranian_JE	0x6b4
#define GDK_Macedonia_DSE	0x6b5
#define GDK_Ukrainian_I	0x6b6
#define GDK_Ukranian_I	0x6b6
#define GDK_Ukrainian_YI	0x6b7
#define GDK_Ukranian_YI	0x6b7
#define GDK_Cyrillic_JE	0x6b8
#define GDK_Serbian_JE	0x6b8
#define GDK_Cyrillic_LJE	0x6b9
#define GDK_Serbian_LJE	0x6b9
#define GDK_Cyrillic_NJE	0x6ba
#define GDK_Serbian_NJE	0x6ba
#define GDK_Serbian_TSHE	0x6bb
#define GDK_Macedonia_KJE	0x6bc
#define GDK_Ukrainian_GHE_WITH_UPTURN	0x6bd
#define GDK_Byelorussian_SHORTU	0x6be
#define GDK_Cyrillic_DZHE	0x6bf
#define GDK_Serbian_DZE	0x6bf
#define GDK_Cyrillic_yu	0x6c0
#define GDK_Cyrillic_a	0x6c1
#define GDK_Cyrillic_be	0x6c2
#define GDK_Cyrillic_tse	0x6c3
#define GDK_Cyrillic_de	0x6c4
#define GDK_Cyrillic_ie	0x6c5
#define GDK_Cyrillic_ef	0x6c6
#define GDK_Cyrillic_ghe	0x6c7
#define GDK_Cyrillic_ha	0x6c8
#define GDK_Cyrillic_i	0x6c9
#define GDK_Cyrillic_shorti	0x6ca
#define GDK_Cyrillic_ka	0x6cb
#define GDK_Cyrillic_el	0x6cc
#define GDK_Cyrillic_em	0x6cd
#define GDK_Cyrillic_en	0x6ce
#define GDK_Cyrillic_o	0x6cf
#define GDK_Cyrillic_pe	0x6d0
#define GDK_Cyrillic_ya	0x6d1
#define GDK_Cyrillic_er	0x6d2
#define GDK_Cyrillic_es	0x6d3
#define GDK_Cyrillic_te	0x6d4
#define GDK_Cyrillic_u	0x6d5
#define GDK_Cyrillic_zhe	0x6d6
#define GDK_Cyrillic_ve	0x6d7
#define GDK_Cyrillic_softsign	0x6d8
#define GDK_Cyrillic_yeru	0x6d9
#define GDK_Cyrillic_ze	0x6da
#define GDK_Cyrillic_sha	0x6db
#define GDK_Cyrillic_e	0x6dc
#define GDK_Cyrillic_shcha	0x6dd
#define GDK_Cyrillic_che	0x6de
#define GDK_Cyrillic_hardsign	0x6df
#define GDK_Cyrillic_YU	0x6e0
#define GDK_Cyrillic_A	0x6e1
#define GDK_Cyrillic_BE	0x6e2
#define GDK_Cyrillic_TSE	0x6e3
#define GDK_Cyrillic_DE	0x6e4
#define GDK_Cyrillic_IE	0x6e5
#define GDK_Cyrillic_EF	0x6e6
#define GDK_Cyrillic_GHE	0x6e7
#define GDK_Cyrillic_HA	0x6e8
#define GDK_Cyrillic_I	0x6e9
#define GDK_Cyrillic_SHORTI	0x6ea
#define GDK_Cyrillic_KA	0x6eb
#define GDK_Cyrillic_EL	0x6ec
#define GDK_Cyrillic_EM	0x6ed
#define GDK_Cyrillic_EN	0x6ee
#define GDK_Cyrillic_O	0x6ef
#define GDK_Cyrillic_PE	0x6f0
#define GDK_Cyrillic_YA	0x6f1
#define GDK_Cyrillic_ER	0x6f2
#define GDK_Cyrillic_ES	0x6f3
#define GDK_Cyrillic_TE	0x6f4
#define GDK_Cyrillic_U	0x6f5
#define GDK_Cyrillic_ZHE	0x6f6
#define GDK_Cyrillic_VE	0x6f7
#define GDK_Cyrillic_SOFTSIGN	0x6f8
#define GDK_Cyrillic_YERU	0x6f9
#define GDK_Cyrillic_ZE	0x6fa
#define GDK_Cyrillic_SHA	0x6fb
#define GDK_Cyrillic_E	0x6fc
#define GDK_Cyrillic_SHCHA	0x6fd
#define GDK_Cyrillic_CHE	0x6fe
#define GDK_Cyrillic_HARDSIGN	0x6ff
#define GDK_Greek_ALPHAaccent	0x7a1
#define GDK_Greek_EPSILONaccent	0x7a2
#define GDK_Greek_ETAaccent	0x7a3
#define GDK_Greek_IOTAaccent	0x7a4
#define GDK_Greek_IOTAdieresis	0x7a5
#define GDK_Greek_OMICRONaccent	0x7a7
#define GDK_Greek_UPSILONaccent	0x7a8
#define GDK_Greek_UPSILONdieresis	0x7a9
#define GDK_Greek_OMEGAaccent	0x7ab
#define GDK_Greek_accentdieresis	0x7ae
#define GDK_Greek_horizbar	0x7af
#define GDK_Greek_alphaaccent	0x7b1
#define GDK_Greek_epsilonaccent	0x7b2
#define GDK_Greek_etaaccent	0x7b3
#define GDK_Greek_iotaaccent	0x7b4
#define GDK_Greek_iotadieresis	0x7b5
#define GDK_Greek_iotaaccentdieresis	0x7b6
#define GDK_Greek_omicronaccent	0x7b7
#define GDK_Greek_upsilonaccent	0x7b8
#define GDK_Greek_upsilondieresis	0x7b9
#define GDK_Greek_upsilonaccentdieresis	0x7ba
#define GDK_Greek_omegaaccent	0x7bb
#define GDK_Greek_ALPHA	0x7c1
#define GDK_Greek_BETA	0x7c2
#define GDK_Greek_GAMMA	0x7c3
#define GDK_Greek_DELTA	0x7c4
#define GDK_Greek_EPSILON	0x7c5
#define GDK_Greek_ZETA	0x7c6
#define GDK_Greek_ETA	0x7c7
#define GDK_Greek_THETA	0x7c8
#define GDK_Greek_IOTA	0x7c9
#define GDK_Greek_KAPPA	0x7ca
#define GDK_Greek_LAMBDA	0x7cb
#define GDK_Greek_LAMDA	0x7cb
#define GDK_Greek_MU	0x7cc
#define GDK_Greek_NU	0x7cd
#define GDK_Greek_XI	0x7ce
#define GDK_Greek_OMICRON	0x7cf
#define GDK_Greek_PI	0x7d0
#define GDK_Greek_RHO	0x7d1
#define GDK_Greek_SIGMA	0x7d2
#define GDK_Greek_TAU	0x7d4
#define GDK_Greek_UPSILON	0x7d5
#define GDK_Greek_PHI	0x7d6
#define GDK_Greek_CHI	0x7d7
#define GDK_Greek_PSI	0x7d8
#define GDK_Greek_OMEGA	0x7d9
#define GDK_Greek_alpha	0x7e1
#define GDK_Greek_beta	0x7e2
#define GDK_Greek_gamma	0x7e3
#define GDK_Greek_delta	0x7e4
#define GDK_Greek_epsilon	0x7e5
#define GDK_Greek_zeta	0x7e6
#define GDK_Greek_eta	0x7e7
#define GDK_Greek_theta	0x7e8
#define GDK_Greek_iota	0x7e9
#define GDK_Greek_kappa	0x7ea
#define GDK_Greek_lambda	0x7eb
#define GDK_Greek_lamda	0x7eb
#define GDK_Greek_mu	0x7ec
#define GDK_Greek_nu	0x7ed
#define GDK_Greek_xi	0x7ee
#define GDK_Greek_omicron	0x7ef
#define GDK_Greek_pi	0x7f0
#define GDK_Greek_rho	0x7f1
#define GDK_Greek_sigma	0x7f2
#define GDK_Greek_finalsmallsigma	0x7f3
#define GDK_Greek_tau	0x7f4
#define GDK_Greek_upsilon	0x7f5
#define GDK_Greek_phi	0x7f6
#define GDK_Greek_chi	0x7f7
#define GDK_Greek_psi	0x7f8
#define GDK_Greek_omega	0x7f9
#define GDK_leftradical	0x8a1
#define GDK_topleftradical	0x8a2
#define GDK_horizconnector	0x8a3
#define GDK_topintegral	0x8a4
#define GDK_botintegral	0x8a5
#define GDK_vertconnector	0x8a6
#define GDK_topleftsqbracket	0x8a7
#define GDK_botleftsqbracket	0x8a8
#define GDK_toprightsqbracket	0x8a9
#define GDK_botrightsqbracket	0x8aa
#define GDK_topleftparens	0x8ab
#define GDK_botleftparens	0x8ac
#define GDK_toprightparens	0x8ad
#define GDK_botrightparens	0x8ae
#define GDK_leftmiddlecurlybrace	0x8af
#define GDK_rightmiddlecurlybrace	0x8b0
#define GDK_topleftsummation	0x8b1
#define GDK_botleftsummation	0x8b2
#define GDK_topvertsummationconnector	0x8b3
#define GDK_botvertsummationconnector	0x8b4
#define GDK_toprightsummation	0x8b5
#define GDK_botrightsummation	0x8b6
#define GDK_rightmiddlesummation	0x8b7
#define GDK_lessthanequal	0x8bc
#define GDK_notequal	0x8bd
#define GDK_greaterthanequal	0x8be
#define GDK_integral	0x8bf
#define GDK_therefore	0x8c0
#define GDK_variation	0x8c1
#define GDK_infinity	0x8c2
#define GDK_nabla	0x8c5
#define GDK_approximate	0x8c8
#define GDK_similarequal	0x8c9
#define GDK_ifonlyif	0x8cd
#define GDK_implies	0x8ce
#define GDK_identical	0x8cf
#define GDK_radical	0x8d6
#define GDK_includedin	0x8da
#define GDK_includes	0x8db
#define GDK_intersection	0x8dc
#define GDK_union	0x8dd
#define GDK_logicaland	0x8de
#define GDK_logicalor	0x8df
#define GDK_partialderivative	0x8ef
#define GDK_function	0x8f6
#define GDK_leftarrow	0x8fb
#define GDK_uparrow	0x8fc
#define GDK_rightarrow	0x8fd
#define GDK_downarrow	0x8fe
#define GDK_blank	0x9df
#define GDK_soliddiamond	0x9e0
#define GDK_checkerboard	0x9e1
#define GDK_ht	0x9e2
#define GDK_ff	0x9e3
#define GDK_cr	0x9e4
#define GDK_lf	0x9e5
#define GDK_nl	0x9e8
#define GDK_vt	0x9e9
#define GDK_lowrightcorner	0x9ea
#define GDK_uprightcorner	0x9eb
#define GDK_upleftcorner	0x9ec
#define GDK_lowleftcorner	0x9ed
#define GDK_crossinglines	0x9ee
#define GDK_horizlinescan1	0x9ef
#define GDK_horizlinescan3	0x9f0
#define GDK_horizlinescan5	0x9f1
#define GDK_horizlinescan7	0x9f2
#define GDK_horizlinescan9	0x9f3
#define GDK_leftt	0x9f4
#define GDK_rightt	0x9f5
#define GDK_bott	0x9f6
#define GDK_topt	0x9f7
#define GDK_vertbar	0x9f8
#define GDK_emspace	0xaa1
#define GDK_enspace	0xaa2
#define GDK_em3space	0xaa3
#define GDK_em4space	0xaa4
#define GDK_digitspace	0xaa5
#define GDK_punctspace	0xaa6
#define GDK_thinspace	0xaa7
#define GDK_hairspace	0xaa8
#define GDK_emdash	0xaa9
#define GDK_endash	0xaaa
#define GDK_signifblank	0xaac
#define GDK_ellipsis	0xaae
#define GDK_doubbaselinedot	0xaaf
#define GDK_onethird	0xab0
#define GDK_twothirds	0xab1
#define GDK_onefifth	0xab2
#define GDK_twofifths	0xab3
#define GDK_threefifths	0xab4
#define GDK_fourfifths	0xab5
#define GDK_onesixth	0xab6
#define GDK_fivesixths	0xab7
#define GDK_careof	0xab8
#define GDK_figdash	0xabb
#define GDK_leftanglebracket	0xabc
#define GDK_decimalpoint	0xabd
#define GDK_rightanglebracket	0xabe
#define GDK_marker	0xabf
#define GDK_oneeighth	0xac3
#define GDK_threeeighths	0xac4
#define GDK_fiveeighths	0xac5
#define GDK_seveneighths	0xac6
#define GDK_trademark	0xac9
#define GDK_signaturemark	0xaca
#define GDK_trademarkincircle	0xacb
#define GDK_leftopentriangle	0xacc
#define GDK_rightopentriangle	0xacd
#define GDK_emopencircle	0xace
#define GDK_emopenrectangle	0xacf
#define GDK_leftsinglequotemark	0xad0
#define GDK_rightsinglequotemark	0xad1
#define GDK_leftdoublequotemark	0xad2
#define GDK_rightdoublequotemark	0xad3
#define GDK_prescription	0xad4
#define GDK_minutes	0xad6
#define GDK_seconds	0xad7
#define GDK_latincross	0xad9
#define GDK_hexagram	0xada
#define GDK_filledrectbullet	0xadb
#define GDK_filledlefttribullet	0xadc
#define GDK_filledrighttribullet	0xadd
#define GDK_emfilledcircle	0xade
#define GDK_emfilledrect	0xadf
#define GDK_enopencircbullet	0xae0
#define GDK_enopensquarebullet	0xae1
#define GDK_openrectbullet	0xae2
#define GDK_opentribulletup	0xae3
#define GDK_opentribulletdown	0xae4
#define GDK_openstar	0xae5
#define GDK_enfilledcircbullet	0xae6
#define GDK_enfilledsqbullet	0xae7
#define GDK_filledtribulletup	0xae8
#define GDK_filledtribulletdown	0xae9
#define GDK_leftpointer	0xaea
#define GDK_rightpointer	0xaeb
#define GDK_club	0xaec
#define GDK_diamond	0xaed
#define GDK_heart	0xaee
#define GDK_maltesecross	0xaf0
#define GDK_dagger	0xaf1
#define GDK_doubledagger	0xaf2
#define GDK_checkmark	0xaf3
#define GDK_ballotcross	0xaf4
#define GDK_musicalsharp	0xaf5
#define GDK_musicalflat	0xaf6
#define GDK_malesymbol	0xaf7
#define GDK_femalesymbol	0xaf8
#define GDK_telephone	0xaf9
#define GDK_telephonerecorder	0xafa
#define GDK_phonographcopyright	0xafb
#define GDK_caret	0xafc
#define GDK_singlelowquotemark	0xafd
#define GDK_doublelowquotemark	0xafe
#define GDK_cursor	0xaff
#define GDK_leftcaret	0xba3
#define GDK_rightcaret	0xba6
#define GDK_downcaret	0xba8
#define GDK_upcaret	0xba9
#define GDK_overbar	0xbc0
#define GDK_downtack	0xbc2
#define GDK_upshoe	0xbc3
#define GDK_downstile	0xbc4
#define GDK_underbar	0xbc6
#define GDK_jot	0xbca
#define GDK_quad	0xbcc
#define GDK_uptack	0xbce
#define GDK_circle	0xbcf
#define GDK_upstile	0xbd3
#define GDK_downshoe	0xbd6
#define GDK_rightshoe	0xbd8
#define GDK_leftshoe	0xbda
#define GDK_lefttack	0xbdc
#define GDK_righttack	0xbfc
#define GDK_hebrew_doublelowline	0xcdf
#define GDK_hebrew_aleph	0xce0
#define GDK_hebrew_bet	0xce1
#define GDK_hebrew_beth	0xce1
#define GDK_hebrew_gimel	0xce2
#define GDK_hebrew_gimmel	0xce2
#define GDK_hebrew_dalet	0xce3
#define GDK_hebrew_daleth	0xce3
#define GDK_hebrew_he	0xce4
#define GDK_hebrew_waw	0xce5
#define GDK_hebrew_zain	0xce6
#define GDK_hebrew_zayin	0xce6
#define GDK_hebrew_chet	0xce7
#define GDK_hebrew_het	0xce7
#define GDK_hebrew_tet	0xce8
#define GDK_hebrew_teth	0xce8
#define GDK_hebrew_yod	0xce9
#define GDK_hebrew_finalkaph	0xcea
#define GDK_hebrew_kaph	0xceb
#define GDK_hebrew_lamed	0xcec
#define GDK_hebrew_finalmem	0xced
#define GDK_hebrew_mem	0xcee
#define GDK_hebrew_finalnun	0xcef
#define GDK_hebrew_nun	0xcf0
#define GDK_hebrew_samech	0xcf1
#define GDK_hebrew_samekh	0xcf1
#define GDK_hebrew_ayin	0xcf2
#define GDK_hebrew_finalpe	0xcf3
#define GDK_hebrew_pe	0xcf4
#define GDK_hebrew_finalzade	0xcf5
#define GDK_hebrew_finalzadi	0xcf5
#define GDK_hebrew_zade	0xcf6
#define GDK_hebrew_zadi	0xcf6
#define GDK_hebrew_kuf	0xcf7
#define GDK_hebrew_qoph	0xcf7
#define GDK_hebrew_resh	0xcf8
#define GDK_hebrew_shin	0xcf9
#define GDK_hebrew_taf	0xcfa
#define GDK_hebrew_taw	0xcfa
#define GDK_Thai_kokai	0xda1
#define GDK_Thai_khokhai	0xda2
#define GDK_Thai_khokhuat	0xda3
#define GDK_Thai_khokhwai	0xda4
#define GDK_Thai_khokhon	0xda5
#define GDK_Thai_khorakhang	0xda6
#define GDK_Thai_ngongu	0xda7
#define GDK_Thai_chochan	0xda8
#define GDK_Thai_choching	0xda9
#define GDK_Thai_chochang	0xdaa
#define GDK_Thai_soso	0xdab
#define GDK_Thai_chochoe	0xdac
#define GDK_Thai_yoying	0xdad
#define GDK_Thai_dochada	0xdae
#define GDK_Thai_topatak	0xdaf
#define GDK_Thai_thothan	0xdb0
#define GDK_Thai_thonangmontho	0xdb1
#define GDK_Thai_thophuthao	0xdb2
#define GDK_Thai_nonen	0xdb3
#define GDK_Thai_dodek	0xdb4
#define GDK_Thai_totao	0xdb5
#define GDK_Thai_thothung	0xdb6
#define GDK_Thai_thothahan	0xdb7
#define GDK_Thai_thothong	0xdb8
#define GDK_Thai_nonu	0xdb9
#define GDK_Thai_bobaimai	0xdba
#define GDK_Thai_popla	0xdbb
#define GDK_Thai_phophung	0xdbc
#define GDK_Thai_fofa	0xdbd
#define GDK_Thai_phophan	0xdbe
#define GDK_Thai_fofan	0xdbf
#define GDK_Thai_phosamphao	0xdc0
#define GDK_Thai_moma	0xdc1
#define GDK_Thai_yoyak	0xdc2
#define GDK_Thai_rorua	0xdc3
#define GDK_Thai_ru	0xdc4
#define GDK_Thai_loling	0xdc5
#define GDK_Thai_lu	0xdc6
#define GDK_Thai_wowaen	0xdc7
#define GDK_Thai_sosala	0xdc8
#define GDK_Thai_sorusi	0xdc9
#define GDK_Thai_sosua	0xdca
#define GDK_Thai_hohip	0xdcb
#define GDK_Thai_lochula	0xdcc
#define GDK_Thai_oang	0xdcd
#define GDK_Thai_honokhuk	0xdce
#define GDK_Thai_paiyannoi	0xdcf
#define GDK_Thai_saraa	0xdd0
#define GDK_Thai_maihanakat	0xdd1
#define GDK_Thai_saraaa	0xdd2
#define GDK_Thai_saraam	0xdd3
#define GDK_Thai_sarai	0xdd4
#define GDK_Thai_saraii	0xdd5
#define GDK_Thai_saraue	0xdd6
#define GDK_Thai_sarauee	0xdd7
#define GDK_Thai_sarau	0xdd8
#define GDK_Thai_sarauu	0xdd9
#define GDK_Thai_phinthu	0xdda
#define GDK_Thai_maihanakat_maitho	0xdde
#define GDK_Thai_baht	0xddf
#define GDK_Thai_sarae	0xde0
#define GDK_Thai_saraae	0xde1
#define GDK_Thai_sarao	0xde2
#define GDK_Thai_saraaimaimuan	0xde3
#define GDK_Thai_saraaimaimalai	0xde4
#define GDK_Thai_lakkhangyao	0xde5
#define GDK_Thai_maiyamok	0xde6
#define GDK_Thai_maitaikhu	0xde7
#define GDK_Thai_maiek	0xde8
#define GDK_Thai_maitho	0xde9
#define GDK_Thai_maitri	0xdea
#define GDK_Thai_maichattawa	0xdeb
#define GDK_Thai_thanthakhat	0xdec
#define GDK_Thai_nikhahit	0xded
#define GDK_Thai_leksun	0xdf0
#define GDK_Thai_leknung	0xdf1
#define GDK_Thai_leksong	0xdf2
#define GDK_Thai_leksam	0xdf3
#define GDK_Thai_leksi	0xdf4
#define GDK_Thai_lekha	0xdf5
#define GDK_Thai_lekhok	0xdf6
#define GDK_Thai_lekchet	0xdf7
#define GDK_Thai_lekpaet	0xdf8
#define GDK_Thai_lekkao	0xdf9
#define GDK_Hangul_Kiyeog	0xea1
#define GDK_Hangul_SsangKiyeog	0xea2
#define GDK_Hangul_KiyeogSios	0xea3
#define GDK_Hangul_Nieun	0xea4
#define GDK_Hangul_NieunJieuj	0xea5
#define GDK_Hangul_NieunHieuh	0xea6
#define GDK_Hangul_Dikeud	0xea7
#define GDK_Hangul_SsangDikeud	0xea8
#define GDK_Hangul_Rieul	0xea9
#define GDK_Hangul_RieulKiyeog	0xeaa
#define GDK_Hangul_RieulMieum	0xeab
#define GDK_Hangul_RieulPieub	0xeac
#define GDK_Hangul_RieulSios	0xead
#define GDK_Hangul_RieulTieut	0xeae
#define GDK_Hangul_RieulPhieuf	0xeaf
#define GDK_Hangul_RieulHieuh	0xeb0
#define GDK_Hangul_Mieum	0xeb1
#define GDK_Hangul_Pieub	0xeb2
#define GDK_Hangul_SsangPieub	0xeb3
#define GDK_Hangul_PieubSios	0xeb4
#define GDK_Hangul_Sios	0xeb5
#define GDK_Hangul_SsangSios	0xeb6
#define GDK_Hangul_Ieung	0xeb7
#define GDK_Hangul_Jieuj	0xeb8
#define GDK_Hangul_SsangJieuj	0xeb9
#define GDK_Hangul_Cieuc	0xeba
#define GDK_Hangul_Khieuq	0xebb
#define GDK_Hangul_Tieut	0xebc
#define GDK_Hangul_Phieuf	0xebd
#define GDK_Hangul_Hieuh	0xebe
#define GDK_Hangul_A	0xebf
#define GDK_Hangul_AE	0xec0
#define GDK_Hangul_YA	0xec1
#define GDK_Hangul_YAE	0xec2
#define GDK_Hangul_EO	0xec3
#define GDK_Hangul_E	0xec4
#define GDK_Hangul_YEO	0xec5
#define GDK_Hangul_YE	0xec6
#define GDK_Hangul_O	0xec7
#define GDK_Hangul_WA	0xec8
#define GDK_Hangul_WAE	0xec9
#define GDK_Hangul_OE	0xeca
#define GDK_Hangul_YO	0xecb
#define GDK_Hangul_U	0xecc
#define GDK_Hangul_WEO	0xecd
#define GDK_Hangul_WE	0xece
#define GDK_Hangul_WI	0xecf
#define GDK_Hangul_YU	0xed0
#define GDK_Hangul_EU	0xed1
#define GDK_Hangul_YI	0xed2
#define GDK_Hangul_I	0xed3
#define GDK_Hangul_J_Kiyeog	0xed4
#define GDK_Hangul_J_SsangKiyeog	0xed5
#define GDK_Hangul_J_KiyeogSios	0xed6
#define GDK_Hangul_J_Nieun	0xed7
#define GDK_Hangul_J_NieunJieuj	0xed8
#define GDK_Hangul_J_NieunHieuh	0xed9
#define GDK_Hangul_J_Dikeud	0xeda
#define GDK_Hangul_J_Rieul	0xedb
#define GDK_Hangul_J_RieulKiyeog	0xedc
#define GDK_Hangul_J_RieulMieum	0xedd
#define GDK_Hangul_J_RieulPieub	0xede
#define GDK_Hangul_J_RieulSios	0xedf
#define GDK_Hangul_J_RieulTieut	0xee0
#define GDK_Hangul_J_RieulPhieuf	0xee1
#define GDK_Hangul_J_RieulHieuh	0xee2
#define GDK_Hangul_J_Mieum	0xee3
#define GDK_Hangul_J_Pieub	0xee4
#define GDK_Hangul_J_PieubSios	0xee5
#define GDK_Hangul_J_Sios	0xee6
#define GDK_Hangul_J_SsangSios	0xee7
#define GDK_Hangul_J_Ieung	0xee8
#define GDK_Hangul_J_Jieuj	0xee9
#define GDK_Hangul_J_Cieuc	0xeea
#define GDK_Hangul_J_Khieuq	0xeeb
#define GDK_Hangul_J_Tieut	0xeec
#define GDK_Hangul_J_Phieuf	0xeed
#define GDK_Hangul_J_Hieuh	0xeee
#define GDK_Hangul_RieulYeorinHieuh	0xeef
#define GDK_Hangul_SunkyeongeumMieum	0xef0
#define GDK_Hangul_SunkyeongeumPieub	0xef1
#define GDK_Hangul_PanSios	0xef2
#define GDK_Hangul_KkogjiDalrinIeung	0xef3
#define GDK_Hangul_SunkyeongeumPhieuf	0xef4
#define GDK_Hangul_YeorinHieuh	0xef5
#define GDK_Hangul_AraeA	0xef6
#define GDK_Hangul_AraeAE	0xef7
#define GDK_Hangul_J_PanSios	0xef8
#define GDK_Hangul_J_KkogjiDalrinIeung	0xef9
#define GDK_Hangul_J_YeorinHieuh	0xefa
#define GDK_Korean_Won	0xeff
#define GDK_3270_Duplicate	0xFD01
#define GDK_3270_FieldMark	0xFD02
#define GDK_3270_Right2	0xFD03
#define GDK_3270_Left2	0xFD04
#define GDK_3270_BackTab	0xFD05
#define GDK_3270_EraseEOF	0xFD06
#define GDK_3270_EraseInput	0xFD07
#define GDK_3270_Reset	0xFD08
#define GDK_3270_Quit	0xFD09
#define GDK_3270_PA1	0xFD0A
#define GDK_3270_PA2	0xFD0B
#define GDK_3270_PA3	0xFD0C
#define GDK_3270_Test	0xFD0D
#define GDK_3270_Attn	0xFD0E
#define GDK_3270_CursorBlink	0xFD0F
#define GDK_3270_AltCursor	0xFD10
#define GDK_3270_KeyClick	0xFD11
#define GDK_3270_Jump	0xFD12
#define GDK_3270_Ident	0xFD13
#define GDK_3270_Rule	0xFD14
#define GDK_3270_Copy	0xFD15
#define GDK_3270_Play	0xFD16
#define GDK_3270_Setup	0xFD17
#define GDK_3270_Record	0xFD18
#define GDK_3270_ChangeScreen	0xFD19
#define GDK_3270_DeleteWord	0xFD1A
#define GDK_3270_ExSelect	0xFD1B
#define GDK_3270_CursorSelect	0xFD1C
#define GDK_3270_PrintScreen	0xFD1D
#define GDK_3270_Enter	0xFD1E
#define GDK_ISO_Lock	0xFE01
#define GDK_ISO_Level2_Latch	0xFE02
#define GDK_ISO_Level3_Shift	0xFE03
#define GDK_ISO_Level3_Latch	0xFE04
#define GDK_ISO_Level3_Lock	0xFE05
#define GDK_ISO_Group_Latch	0xFE06
#define GDK_ISO_Group_Lock	0xFE07
#define GDK_ISO_Next_Group	0xFE08
#define GDK_ISO_Next_Group_Lock	0xFE09
#define GDK_ISO_Prev_Group	0xFE0A
#define GDK_ISO_Prev_Group_Lock	0xFE0B
#define GDK_ISO_First_Group	0xFE0C
#define GDK_ISO_First_Group_Lock	0xFE0D
#define GDK_ISO_Last_Group	0xFE0E
#define GDK_ISO_Last_Group_Lock	0xFE0F
#define GDK_ISO_Left_Tab	0xFE20
#define GDK_ISO_Move_Line_Up	0xFE21
#define GDK_ISO_Move_Line_Down	0xFE22
#define GDK_ISO_Partial_Line_Up	0xFE23
#define GDK_ISO_Partial_Line_Down	0xFE24
#define GDK_ISO_Partial_Space_Left	0xFE25
#define GDK_ISO_Partial_Space_Right	0xFE26
#define GDK_ISO_Set_Margin_Left	0xFE27
#define GDK_ISO_Set_Margin_Right	0xFE28
#define GDK_ISO_Release_Margin_Left	0xFE29
#define GDK_ISO_Release_Margin_Right	0xFE2A
#define GDK_ISO_Release_Both_Margins	0xFE2B
#define GDK_ISO_Fast_Cursor_Left	0xFE2C
#define GDK_ISO_Fast_Cursor_Right	0xFE2D
#define GDK_ISO_Fast_Cursor_Up	0xFE2E
#define GDK_ISO_Fast_Cursor_Down	0xFE2F
#define GDK_ISO_Continuous_Underline	0xFE30
#define GDK_ISO_Discontinuous_Underline	0xFE31
#define GDK_ISO_Emphasize	0xFE32
#define GDK_ISO_Center_Object	0xFE33
#define GDK_ISO_Enter	0xFE34
#define GDK_dead_grave	0xFE50
#define GDK_dead_acute	0xFE51
#define GDK_dead_circumflex	0xFE52
#define GDK_dead_tilde	0xFE53
#define GDK_dead_macron	0xFE54
#define GDK_dead_breve	0xFE55
#define GDK_dead_abovedot	0xFE56
#define GDK_dead_diaeresis	0xFE57
#define GDK_dead_abovering	0xFE58
#define GDK_dead_doubleacute	0xFE59
#define GDK_dead_caron	0xFE5A
#define GDK_dead_cedilla	0xFE5B
#define GDK_dead_ogonek	0xFE5C
#define GDK_dead_iota	0xFE5D
#define GDK_dead_voiced_sound	0xFE5E
#define GDK_dead_semivoiced_sound	0xFE5F
#define GDK_dead_belowdot	0xFE60
#define GDK_dead_hook	0xFE61
#define GDK_dead_horn	0xFE62
#define GDK_AccessX_Enable	0xFE70
#define GDK_AccessX_Feedback_Enable	0xFE71
#define GDK_RepeatKeys_Enable	0xFE72
#define GDK_SlowKeys_Enable	0xFE73
#define GDK_BounceKeys_Enable	0xFE74
#define GDK_StickyKeys_Enable	0xFE75
#define GDK_MouseKeys_Enable	0xFE76
#define GDK_MouseKeys_Accel_Enable	0xFE77
#define GDK_Overlay1_Enable	0xFE78
#define GDK_Overlay2_Enable	0xFE79
#define GDK_AudibleBell_Enable	0xFE7A
#define GDK_First_Virtual_Screen	0xFED0
#define GDK_Prev_Virtual_Screen	0xFED1
#define GDK_Next_Virtual_Screen	0xFED2
#define GDK_Last_Virtual_Screen	0xFED4
#define GDK_Terminate_Server	0xFED5
#define GDK_Pointer_Left	0xFEE0
#define GDK_Pointer_Right	0xFEE1
#define GDK_Pointer_Up	0xFEE2
#define GDK_Pointer_Down	0xFEE3
#define GDK_Pointer_UpLeft	0xFEE4
#define GDK_Pointer_UpRight	0xFEE5
#define GDK_Pointer_DownLeft	0xFEE6
#define GDK_Pointer_DownRight	0xFEE7
#define GDK_Pointer_Button_Dflt	0xFEE8
#define GDK_Pointer_Button1	0xFEE9
#define GDK_Pointer_Button2	0xFEEA
#define GDK_Pointer_Button3	0xFEEB
#define GDK_Pointer_Button4	0xFEEC
#define GDK_Pointer_Button5	0xFEED
#define GDK_Pointer_DblClick_Dflt	0xFEEE
#define GDK_Pointer_DblClick1	0xFEEF
#define GDK_Pointer_DblClick2	0xFEF0
#define GDK_Pointer_DblClick3	0xFEF1
#define GDK_Pointer_DblClick4	0xFEF2
#define GDK_Pointer_DblClick5	0xFEF3
#define GDK_Pointer_Drag_Dflt	0xFEF4
#define GDK_Pointer_Drag1	0xFEF5
#define GDK_Pointer_Drag2	0xFEF6
#define GDK_Pointer_Drag3	0xFEF7
#define GDK_Pointer_Drag4	0xFEF8
#define GDK_Pointer_EnableKeys	0xFEF9
#define GDK_Pointer_Accelerate	0xFEFA
#define GDK_Pointer_DfltBtnNext	0xFEFB
#define GDK_Pointer_DfltBtnPrev	0xFEFC
#define GDK_Pointer_Drag5	0xFEFD
#define GDK_BackSpace	0xFF08
#define GDK_Tab	0xFF09
#define GDK_Linefeed	0xFF0A
#define GDK_Clear	0xFF0B
#define GDK_Return	0xFF0D
#define GDK_Pause	0xFF13
#define GDK_Scroll_Lock	0xFF14
#define GDK_Sys_Req	0xFF15
#define GDK_Escape	0xFF1B
#define GDK_Multi_key	0xFF20
#define GDK_Kanji	0xFF21
#define GDK_Muhenkan	0xFF22
#define GDK_Henkan	0xFF23
#define GDK_Henkan_Mode	0xFF23
#define GDK_Romaji	0xFF24
#define GDK_Hiragana	0xFF25
#define GDK_Katakana	0xFF26
#define GDK_Hiragana_Katakana	0xFF27
#define GDK_Zenkaku	0xFF28
#define GDK_Hankaku	0xFF29
#define GDK_Zenkaku_Hankaku	0xFF2A
#define GDK_Touroku	0xFF2B
#define GDK_Massyo	0xFF2C
#define GDK_Kana_Lock	0xFF2D
#define GDK_Kana_Shift	0xFF2E
#define GDK_Eisu_Shift	0xFF2F
#define GDK_Eisu_toggle	0xFF30
#define GDK_Hangul	0xff31
#define GDK_Hangul_Start	0xff32
#define GDK_Hangul_End	0xff33
#define GDK_Hangul_Hanja	0xff34
#define GDK_Hangul_Jamo	0xff35
#define GDK_Hangul_Romaja	0xff36
#define GDK_Codeinput	0xFF37
#define GDK_Hangul_Codeinput	0xff37
#define GDK_Kanji_Bangou	0xFF37
#define GDK_Hangul_Jeonja	0xff38
#define GDK_Hangul_Banja	0xff39
#define GDK_Hangul_PreHanja	0xff3a
#define GDK_Hangul_PostHanja	0xff3b
#define GDK_Hangul_SingleCandidate	0xff3c
#define GDK_SingleCandidate	0xFF3C
#define GDK_Hangul_MultipleCandidate	0xff3d
#define GDK_MultipleCandidate	0xFF3D
#define GDK_Zen_Koho	0xFF3D
#define GDK_Hangul_PreviousCandidate	0xff3e
#define GDK_Mae_Koho	0xFF3E
#define GDK_PreviousCandidate	0xFF3E
#define GDK_Hangul_Special	0xff3f
#define GDK_Home	0xFF50
#define GDK_Left	0xFF51
#define GDK_Up	0xFF52
#define GDK_Right	0xFF53
#define GDK_Down	0xFF54
#define GDK_Page_Up	0xFF55
#define GDK_Prior	0xFF55
#define GDK_Next	0xFF56
#define GDK_Page_Down	0xFF56
#define GDK_End	0xFF57
#define GDK_Begin	0xFF58
#define GDK_Select	0xFF60
#define GDK_Print	0xFF61
#define GDK_Execute	0xFF62
#define GDK_Insert	0xFF63
#define GDK_Undo	0xFF65
#define GDK_Redo	0xFF66
#define GDK_Menu	0xFF67
#define GDK_Find	0xFF68
#define GDK_Cancel	0xFF69
#define GDK_Help	0xFF6A
#define GDK_Break	0xFF6B
#define GDK_Arabic_switch	0xFF7E
#define GDK_Greek_switch	0xFF7E
#define GDK_Hangul_switch	0xFF7E
#define GDK_Hebrew_switch	0xFF7E
#define GDK_ISO_Group_Shift	0xFF7E
#define GDK_Mode_switch	0xFF7E
#define GDK_kana_switch	0xFF7E
#define GDK_script_switch	0xFF7E
#define GDK_Num_Lock	0xFF7F
#define GDK_KP_Space	0xFF80
#define GDK_KP_Tab	0xFF89
#define GDK_KP_Enter	0xFF8D
#define GDK_KP_F1	0xFF91
#define GDK_KP_F2	0xFF92
#define GDK_KP_F3	0xFF93
#define GDK_KP_F4	0xFF94
#define GDK_KP_Home	0xFF95
#define GDK_KP_Left	0xFF96
#define GDK_KP_Up	0xFF97
#define GDK_KP_Right	0xFF98
#define GDK_KP_Down	0xFF99
#define GDK_KP_Page_Up	0xFF9A
#define GDK_KP_Prior	0xFF9A
#define GDK_KP_Next	0xFF9B
#define GDK_KP_Page_Down	0xFF9B
#define GDK_KP_End	0xFF9C
#define GDK_KP_Begin	0xFF9D
#define GDK_KP_Insert	0xFF9E
#define GDK_KP_Delete	0xFF9F
#define GDK_KP_Multiply	0xFFAA
#define GDK_KP_Add	0xFFAB
#define GDK_KP_Separator	0xFFAC
#define GDK_KP_Subtract	0xFFAD
#define GDK_KP_Decimal	0xFFAE
#define GDK_KP_Divide	0xFFAF
#define GDK_KP_0	0xFFB0
#define GDK_KP_1	0xFFB1
#define GDK_KP_2	0xFFB2
#define GDK_KP_3	0xFFB3
#define GDK_KP_4	0xFFB4
#define GDK_KP_5	0xFFB5
#define GDK_KP_6	0xFFB6
#define GDK_KP_7	0xFFB7
#define GDK_KP_8	0xFFB8
#define GDK_KP_9	0xFFB9
#define GDK_KP_Equal	0xFFBD
#define GDK_F1	0xFFBE
#define GDK_F2	0xFFBF
#define GDK_F3	0xFFC0
#define GDK_F4	0xFFC1
#define GDK_F5	0xFFC2
#define GDK_F6	0xFFC3
#define GDK_F7	0xFFC4
#define GDK_F8	0xFFC5
#define GDK_F9	0xFFC6
#define GDK_F10	0xFFC7
#define GDK_F11	0xFFC8
#define GDK_L1	0xFFC8
#define GDK_F12	0xFFC9
#define GDK_L2	0xFFC9
#define GDK_F13	0xFFCA
#define GDK_L3	0xFFCA
#define GDK_F14	0xFFCB
#define GDK_L4	0xFFCB
#define GDK_F15	0xFFCC
#define GDK_L5	0xFFCC
#define GDK_F16	0xFFCD
#define GDK_L6	0xFFCD
#define GDK_F17	0xFFCE
#define GDK_L7	0xFFCE
#define GDK_F18	0xFFCF
#define GDK_L8	0xFFCF
#define GDK_F19	0xFFD0
#define GDK_L9	0xFFD0
#define GDK_F20	0xFFD1
#define GDK_L10	0xFFD1
#define GDK_F21	0xFFD2
#define GDK_R1	0xFFD2
#define GDK_F22	0xFFD3
#define GDK_R2	0xFFD3
#define GDK_F23	0xFFD4
#define GDK_R3	0xFFD4
#define GDK_F24	0xFFD5
#define GDK_R4	0xFFD5
#define GDK_F25	0xFFD6
#define GDK_R5	0xFFD6
#define GDK_F26	0xFFD7
#define GDK_R6	0xFFD7
#define GDK_F27	0xFFD8
#define GDK_R7	0xFFD8
#define GDK_F28	0xFFD9
#define GDK_R8	0xFFD9
#define GDK_F29	0xFFDA
#define GDK_R9	0xFFDA
#define GDK_F30	0xFFDB
#define GDK_R10	0xFFDB
#define GDK_F31	0xFFDC
#define GDK_R11	0xFFDC
#define GDK_F32	0xFFDD
#define GDK_R12	0xFFDD
#define GDK_F33	0xFFDE
#define GDK_R13	0xFFDE
#define GDK_F34	0xFFDF
#define GDK_R14	0xFFDF
#define GDK_F35	0xFFE0
#define GDK_R15	0xFFE0
#define GDK_Shift_L	0xFFE1
#define GDK_Shift_R	0xFFE2
#define GDK_Control_L	0xFFE3
#define GDK_Control_R	0xFFE4
#define GDK_Caps_Lock	0xFFE5
#define GDK_Shift_Lock	0xFFE6
#define GDK_Meta_L	0xFFE7
#define GDK_Meta_R	0xFFE8
#define GDK_Alt_L	0xFFE9
#define GDK_Alt_R	0xFFEA
#define GDK_Super_L	0xFFEB
#define GDK_Super_R	0xFFEC
#define GDK_Hyper_L	0xFFED
#define GDK_Hyper_R	0xFFEE
#define GDK_Delete	0xFFFF
#define GDK_VoidSymbol	0xFFFFFF
#define GDK_Greek_IOTAdiaeresis	GDK_Greek_IOTAdieresis
</SCREEN>
</SECT2>
<SECT2>
<TITLE>gtk-2.0/gdk/gdkx.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define GDK_WINDOW_DESTROYED(d)	 \
	(((GdkWindowObject*)(GDK_WINDOW (d)))->destroyed)
#define GDK_WINDOW_TYPE(d)	 \
	(((GdkWindowObject*)(GDK_WINDOW (d)))->window_type)
#define GDK_COLORMAP_XCOLORMAP(cmap)	 \
	(gdk_x11_colormap_get_xcolormap (cmap))
#define GDK_DISPLAY_XDISPLAY(display)	 \
	(gdk_x11_display_get_xdisplay (display))
#define GDK_SCREEN_XDISPLAY(screen)	 \
	(gdk_x11_display_get_xdisplay (gdk_screen_get_display (screen)))
#define GDK_PIXMAP_XDISPLAY(win)	 \
	(gdk_x11_drawable_get_xdisplay (((GdkPixmapObject *)win)->impl))
#define GDK_WINDOW_XDISPLAY(win)	 \
	(gdk_x11_drawable_get_xdisplay (((GdkWindowObject *)win)->impl))
#define GDK_SCREEN_XNUMBER(screen)	 \
	(gdk_x11_screen_get_screen_number (screen))
#define GDK_PARENT_RELATIVE_BG	((GdkPixmap *)1L)
#define GDK_NO_BG	((GdkPixmap *)2L)
#define GDK_COLORMAP_XDISPLAY(cmap)	(gdk_x11_colormap_get_xdisplay (cmap))
#define GDK_CURSOR_XCURSOR(cursor)	(gdk_x11_cursor_get_xcursor (cursor))
#define GDK_CURSOR_XDISPLAY(cursor)	(gdk_x11_cursor_get_xdisplay (cursor))
#define GDK_DRAWABLE_XDISPLAY(win)	(gdk_x11_drawable_get_xdisplay (win))
#define GDK_DRAWABLE_XID(win)	(gdk_x11_drawable_get_xid (win))
#define GDK_PIXMAP_XID(win)	(gdk_x11_drawable_get_xid (win))
#define GDK_WINDOW_XID(win)	(gdk_x11_drawable_get_xid (win))
#define GDK_WINDOW_XWINDOW(win)	(gdk_x11_drawable_get_xid (win))
#define GDK_GC_XDISPLAY(gc)	(gdk_x11_gc_get_xdisplay (gc))
#define GDK_GC_XGC(gc)	(gdk_x11_gc_get_xgc (gc))
#define GDK_ROOT_WINDOW()	(gdk_x11_get_default_root_xwindow ())
#define GDK_IMAGE_XDISPLAY(image)	(gdk_x11_image_get_xdisplay (image))
#define GDK_IMAGE_XIMAGE(image)	(gdk_x11_image_get_ximage (image))
#define GDK_SCREEN_XSCREEN(screen)	(gdk_x11_screen_get_xscreen (screen))
#define GDK_VISUAL_XVISUAL(visual)	(gdk_x11_visual_get_xvisual (visual))
#define GDK_DISPLAY()	gdk_display

extern guint32 gdk_x11_get_server_time(GdkWindow *);
extern gpointer gdk_xid_table_lookup_for_display(GdkDisplay *, XID);
extern GdkVisual *gdk_x11_screen_lookup_visual(GdkScreen *, VisualID);
extern Window gdk_x11_get_default_root_xwindow(void);
extern Visual *gdk_x11_visual_get_xvisual(GdkVisual *);
extern void gdk_x11_display_ungrab(GdkDisplay *);
extern void gdk_x11_register_standard_event_type(GdkDisplay *, gint, gint);
extern void gdk_window_destroy_notify(GdkWindow *);
extern const gchar *gdk_x11_get_xatom_name(Atom);
extern Atom gdk_x11_get_xatom_by_name_for_display(GdkDisplay *,
						  const gchar *);
extern GdkColormap *gdk_x11_colormap_foreign_new(GdkVisual *, Colormap);
extern gboolean gdk_net_wm_supports(GdkAtom);
extern const gchar *gdk_x11_get_xatom_name_for_display(GdkDisplay *, Atom);
extern GdkVisual *gdkx_visual_get(VisualID);
extern Atom gdk_x11_get_xatom_by_name(const gchar *);
extern gpointer gdk_xid_table_lookup(XID);
extern XID gdk_x11_drawable_get_xid(GdkDrawable *);
extern Display *gdk_x11_gc_get_xdisplay(GdkGC *);
extern Colormap gdk_x11_colormap_get_xcolormap(GdkColormap *);
extern GdkDisplay *gdk_x11_lookup_xdisplay(Display *);
extern GC gdk_x11_gc_get_xgc(GdkGC *);
extern void gdk_x11_grab_server(void);
extern int gdk_x11_screen_get_screen_number(GdkScreen *);
extern const char *gdk_x11_screen_get_window_manager_name(GdkScreen *);
extern GdkAtom gdk_x11_xatom_to_atom_for_display(GdkDisplay *, Atom);
extern Screen *gdk_x11_screen_get_xscreen(GdkScreen *);
extern void gdk_x11_ungrab_server(void);
extern gint gdk_x11_get_default_screen(void);
extern Display *gdk_x11_drawable_get_xdisplay(GdkDrawable *);
extern GdkAtom gdk_x11_xatom_to_atom(Atom);
extern Display *gdk_x11_colormap_get_xdisplay(GdkColormap *);
extern void gdk_x11_window_set_user_time(GdkWindow *, guint32);
extern Atom gdk_x11_atom_to_xatom(GdkAtom);
extern XImage *gdk_x11_image_get_ximage(GdkImage *);
extern Display *gdk_x11_cursor_get_xdisplay(GdkCursor *);
extern void gdk_x11_display_grab(GdkDisplay *);
extern Display *gdk_display;
extern Display *gdk_x11_image_get_xdisplay(GdkImage *);
extern Display *gdk_x11_get_default_xdisplay(void);
extern gboolean gdk_x11_screen_supports_net_wm_hint(GdkScreen *, GdkAtom);
extern void gdk_synthesize_window_state(GdkWindow *, GdkWindowState,
					GdkWindowState);
extern Display *gdk_x11_display_get_xdisplay(GdkDisplay *);
extern Atom gdk_x11_atom_to_xatom_for_display(GdkDisplay *, GdkAtom);
extern Cursor gdk_x11_cursor_get_xcursor(GdkCursor *);
extern guint32 gdk_x11_display_get_user_time(GdkDisplay *);
extern void gdk_x11_display_set_cursor_theme(GdkDisplay *, const gchar *,
					     const gint);
extern void gdk_x11_window_move_to_current_desktop(GdkWindow *);
</SCREEN>
</SECT2>
</SECT1>
<!-- End of text generated from database -->

<!-- Start of generated text - do not edit! -->
<!-- generated from the LSB specification database by mklibspec -->
<SECT1 ID=libgtk-x11-2.0>
<TITLE>Interfaces for libgtk-x11-2.0</TITLE>
<PARA>
<XREF LINKEND="lib-libgtk-x11-2.0-def"> defines the library name and shared object name
for the libgtk-x11-2.0 library
</PARA>
<TABLE id="lib-libgtk-x11-2.0-def">
<TITLE>libgtk-x11-2.0 Definition</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Library:</ENTRY>
<ENTRY>libgtk-x11-2.0</ENTRY>
</ROW>
<ROW>
<ENTRY>SONAME:</ENTRY>
<ENTRY>libgtk-x11-2.0.so.0</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The behavior of the interfaces in this library is specified by the following specifications:<SIMPLELIST COLUMNS=1>
<MEMBER ID='REFSTD.libgtk.x11.2.0.1'>
[Gobject 2.8] <XREF LINKEND="std.Gobject.2.8">
</MEMBER>
<MEMBER ID='REFSTD.libgtk.x11.2.0.2'>
[Gtk 2.8] <XREF LINKEND="std.Gtk.2.8">
</MEMBER>
<MEMBER ID='REFSTD.libgtk.x11.2.0.3'>
[LSB] <XREF LINKEND="std.LSB">
</MEMBER>
</SIMPLELIST>
</PARA>
<!-- debug: database interface name GTK main Widgets library -->
<SECT2>
<!--libgroup-->
<TITLE>GTK main Widgets library</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Interfaces for GTK main Widgets library</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic functions
for GTK main Widgets library specified in <XREF linkend="tbl-libgtk-x11-2.0-gtk-m-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<TABLE id="tbl-libgtk-x11-2.0-gtk-m-ints">
<TITLE>libgtk-x11-2.0 - GTK main Widgets library Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>gtk_about_dialog_get_artists</primary></indexterm>gtk_about_dialog_get_artists <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_about_dialog_get_authors</primary></indexterm>gtk_about_dialog_get_authors <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_about_dialog_get_comments</primary></indexterm>gtk_about_dialog_get_comments <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_about_dialog_get_copyright</primary></indexterm>gtk_about_dialog_get_copyright <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_about_dialog_get_documenters</primary></indexterm>gtk_about_dialog_get_documenters <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_about_dialog_get_license</primary></indexterm>gtk_about_dialog_get_license <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_about_dialog_get_logo</primary></indexterm>gtk_about_dialog_get_logo <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_about_dialog_get_logo_icon_name</primary></indexterm>gtk_about_dialog_get_logo_icon_name <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_about_dialog_get_name</primary></indexterm>gtk_about_dialog_get_name <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_about_dialog_get_translator_credits</primary></indexterm>gtk_about_dialog_get_translator_credits <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_about_dialog_get_type</primary></indexterm>gtk_about_dialog_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_about_dialog_get_version</primary></indexterm>gtk_about_dialog_get_version <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_about_dialog_get_website</primary></indexterm>gtk_about_dialog_get_website <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_about_dialog_get_website_label</primary></indexterm>gtk_about_dialog_get_website_label <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_about_dialog_get_wrap_license</primary></indexterm>gtk_about_dialog_get_wrap_license <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_about_dialog_new</primary></indexterm>gtk_about_dialog_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_about_dialog_set_artists</primary></indexterm>gtk_about_dialog_set_artists <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_about_dialog_set_authors</primary></indexterm>gtk_about_dialog_set_authors <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_about_dialog_set_comments</primary></indexterm>gtk_about_dialog_set_comments <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_about_dialog_set_copyright</primary></indexterm>gtk_about_dialog_set_copyright <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_about_dialog_set_documenters</primary></indexterm>gtk_about_dialog_set_documenters <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_about_dialog_set_email_hook</primary></indexterm>gtk_about_dialog_set_email_hook <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_about_dialog_set_license</primary></indexterm>gtk_about_dialog_set_license <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_about_dialog_set_logo</primary></indexterm>gtk_about_dialog_set_logo <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_about_dialog_set_logo_icon_name</primary></indexterm>gtk_about_dialog_set_logo_icon_name <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_about_dialog_set_name</primary></indexterm>gtk_about_dialog_set_name <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_about_dialog_set_translator_credits</primary></indexterm>gtk_about_dialog_set_translator_credits <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_about_dialog_set_url_hook</primary></indexterm>gtk_about_dialog_set_url_hook <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_about_dialog_set_version</primary></indexterm>gtk_about_dialog_set_version <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_about_dialog_set_website</primary></indexterm>gtk_about_dialog_set_website <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_about_dialog_set_website_label</primary></indexterm>gtk_about_dialog_set_website_label <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_about_dialog_set_wrap_license</primary></indexterm>gtk_about_dialog_set_wrap_license <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_accel_flags_get_type</primary></indexterm>gtk_accel_flags_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_accel_group_activate</primary></indexterm>gtk_accel_group_activate <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_accel_group_connect</primary></indexterm>gtk_accel_group_connect <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_accel_group_connect_by_path</primary></indexterm>gtk_accel_group_connect_by_path <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_accel_group_disconnect</primary></indexterm>gtk_accel_group_disconnect <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_accel_group_disconnect_key</primary></indexterm>gtk_accel_group_disconnect_key <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_accel_group_find</primary></indexterm>gtk_accel_group_find <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_accel_group_from_accel_closure</primary></indexterm>gtk_accel_group_from_accel_closure <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_accel_group_get_type</primary></indexterm>gtk_accel_group_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_accel_group_lock</primary></indexterm>gtk_accel_group_lock <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_accel_group_new</primary></indexterm>gtk_accel_group_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_accel_group_query</primary></indexterm>gtk_accel_group_query <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_accel_group_unlock</primary></indexterm>gtk_accel_group_unlock <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_accel_groups_activate</primary></indexterm>gtk_accel_groups_activate <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_accel_groups_from_object</primary></indexterm>gtk_accel_groups_from_object <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_accel_label_get_accel_widget</primary></indexterm>gtk_accel_label_get_accel_widget <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_accel_label_get_accel_width</primary></indexterm>gtk_accel_label_get_accel_width <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_accel_label_get_type</primary></indexterm>gtk_accel_label_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_accel_label_new</primary></indexterm>gtk_accel_label_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_accel_label_refetch</primary></indexterm>gtk_accel_label_refetch <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_accel_label_set_accel_closure</primary></indexterm>gtk_accel_label_set_accel_closure <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_accel_label_set_accel_widget</primary></indexterm>gtk_accel_label_set_accel_widget <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_accel_map_add_entry</primary></indexterm>gtk_accel_map_add_entry <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_accel_map_add_filter</primary></indexterm>gtk_accel_map_add_filter <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_accel_map_change_entry</primary></indexterm>gtk_accel_map_change_entry <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_accel_map_foreach</primary></indexterm>gtk_accel_map_foreach <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_accel_map_foreach_unfiltered</primary></indexterm>gtk_accel_map_foreach_unfiltered <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_accel_map_get</primary></indexterm>gtk_accel_map_get <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_accel_map_get_type</primary></indexterm>gtk_accel_map_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_accel_map_load</primary></indexterm>gtk_accel_map_load <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_accel_map_load_fd</primary></indexterm>gtk_accel_map_load_fd <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_accel_map_load_scanner</primary></indexterm>gtk_accel_map_load_scanner <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_accel_map_lock_path</primary></indexterm>gtk_accel_map_lock_path <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_accel_map_lookup_entry</primary></indexterm>gtk_accel_map_lookup_entry <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_accel_map_save</primary></indexterm>gtk_accel_map_save <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_accel_map_save_fd</primary></indexterm>gtk_accel_map_save_fd <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_accel_map_unlock_path</primary></indexterm>gtk_accel_map_unlock_path <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_accelerator_get_default_mod_mask</primary></indexterm>gtk_accelerator_get_default_mod_mask <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_accelerator_get_label</primary></indexterm>gtk_accelerator_get_label <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_accelerator_name</primary></indexterm>gtk_accelerator_name <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_accelerator_parse</primary></indexterm>gtk_accelerator_parse <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_accelerator_set_default_mod_mask</primary></indexterm>gtk_accelerator_set_default_mod_mask <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_accelerator_valid</primary></indexterm>gtk_accelerator_valid <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_accessible_connect_widget_destroyed</primary></indexterm>gtk_accessible_connect_widget_destroyed <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_accessible_get_type</primary></indexterm>gtk_accessible_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_action_activate</primary></indexterm>gtk_action_activate <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_action_block_activate_from</primary></indexterm>gtk_action_block_activate_from <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_action_connect_accelerator</primary></indexterm>gtk_action_connect_accelerator <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_action_connect_proxy</primary></indexterm>gtk_action_connect_proxy <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_action_create_icon</primary></indexterm>gtk_action_create_icon <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_action_create_menu_item</primary></indexterm>gtk_action_create_menu_item <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_action_create_tool_item</primary></indexterm>gtk_action_create_tool_item <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_action_disconnect_accelerator</primary></indexterm>gtk_action_disconnect_accelerator <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_action_disconnect_proxy</primary></indexterm>gtk_action_disconnect_proxy <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_action_get_accel_closure</primary></indexterm>gtk_action_get_accel_closure <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_action_get_accel_path</primary></indexterm>gtk_action_get_accel_path <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_action_get_name</primary></indexterm>gtk_action_get_name <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_action_get_proxies</primary></indexterm>gtk_action_get_proxies <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_action_get_sensitive</primary></indexterm>gtk_action_get_sensitive <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_action_get_type</primary></indexterm>gtk_action_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_action_get_visible</primary></indexterm>gtk_action_get_visible <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_action_group_add_action</primary></indexterm>gtk_action_group_add_action <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_action_group_add_action_with_accel</primary></indexterm>gtk_action_group_add_action_with_accel <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_action_group_add_actions</primary></indexterm>gtk_action_group_add_actions <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_action_group_add_actions_full</primary></indexterm>gtk_action_group_add_actions_full <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_action_group_add_radio_actions</primary></indexterm>gtk_action_group_add_radio_actions <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_action_group_add_radio_actions_full</primary></indexterm>gtk_action_group_add_radio_actions_full <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_action_group_add_toggle_actions</primary></indexterm>gtk_action_group_add_toggle_actions <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_action_group_add_toggle_actions_full</primary></indexterm>gtk_action_group_add_toggle_actions_full <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_action_group_get_action</primary></indexterm>gtk_action_group_get_action <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_action_group_get_name</primary></indexterm>gtk_action_group_get_name <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_action_group_get_sensitive</primary></indexterm>gtk_action_group_get_sensitive <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_action_group_get_type</primary></indexterm>gtk_action_group_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_action_group_get_visible</primary></indexterm>gtk_action_group_get_visible <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_action_group_list_actions</primary></indexterm>gtk_action_group_list_actions <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_action_group_new</primary></indexterm>gtk_action_group_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_action_group_remove_action</primary></indexterm>gtk_action_group_remove_action <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_action_group_set_sensitive</primary></indexterm>gtk_action_group_set_sensitive <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_action_group_set_translate_func</primary></indexterm>gtk_action_group_set_translate_func <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_action_group_set_translation_domain</primary></indexterm>gtk_action_group_set_translation_domain <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_action_group_set_visible</primary></indexterm>gtk_action_group_set_visible <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_action_group_translate_string</primary></indexterm>gtk_action_group_translate_string <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_action_is_sensitive</primary></indexterm>gtk_action_is_sensitive <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_action_is_visible</primary></indexterm>gtk_action_is_visible <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_action_new</primary></indexterm>gtk_action_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_action_set_accel_group</primary></indexterm>gtk_action_set_accel_group <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_action_set_accel_path</primary></indexterm>gtk_action_set_accel_path <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_action_set_sensitive</primary></indexterm>gtk_action_set_sensitive <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_action_set_visible</primary></indexterm>gtk_action_set_visible <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_action_unblock_activate_from</primary></indexterm>gtk_action_unblock_activate_from <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_adjustment_changed</primary></indexterm>gtk_adjustment_changed <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_adjustment_clamp_page</primary></indexterm>gtk_adjustment_clamp_page <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_adjustment_get_type</primary></indexterm>gtk_adjustment_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_adjustment_get_value</primary></indexterm>gtk_adjustment_get_value <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_adjustment_new</primary></indexterm>gtk_adjustment_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_adjustment_set_value</primary></indexterm>gtk_adjustment_set_value <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_adjustment_value_changed</primary></indexterm>gtk_adjustment_value_changed <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_alignment_get_padding</primary></indexterm>gtk_alignment_get_padding <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_alignment_get_type</primary></indexterm>gtk_alignment_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_alignment_new</primary></indexterm>gtk_alignment_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_alignment_set</primary></indexterm>gtk_alignment_set <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_alignment_set_padding</primary></indexterm>gtk_alignment_set_padding <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_alternative_dialog_button_order</primary></indexterm>gtk_alternative_dialog_button_order <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_anchor_type_get_type</primary></indexterm>gtk_anchor_type_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_arg_flags_get_type</primary></indexterm>gtk_arg_flags_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_arrow_get_type</primary></indexterm>gtk_arrow_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_arrow_new</primary></indexterm>gtk_arrow_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_arrow_set</primary></indexterm>gtk_arrow_set <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_arrow_type_get_type</primary></indexterm>gtk_arrow_type_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_aspect_frame_get_type</primary></indexterm>gtk_aspect_frame_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_aspect_frame_new</primary></indexterm>gtk_aspect_frame_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_aspect_frame_set</primary></indexterm>gtk_aspect_frame_set <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_attach_options_get_type</primary></indexterm>gtk_attach_options_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_bin_get_child</primary></indexterm>gtk_bin_get_child <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_bin_get_type</primary></indexterm>gtk_bin_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_binding_entry_add_signal</primary></indexterm>gtk_binding_entry_add_signal <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_binding_entry_add_signall</primary></indexterm>gtk_binding_entry_add_signall <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_binding_entry_clear</primary></indexterm>gtk_binding_entry_clear <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_binding_entry_remove</primary></indexterm>gtk_binding_entry_remove <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_binding_parse_binding</primary></indexterm>gtk_binding_parse_binding <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_binding_set_activate</primary></indexterm>gtk_binding_set_activate <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_binding_set_add_path</primary></indexterm>gtk_binding_set_add_path <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_binding_set_by_class</primary></indexterm>gtk_binding_set_by_class <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_binding_set_find</primary></indexterm>gtk_binding_set_find <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_binding_set_new</primary></indexterm>gtk_binding_set_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_bindings_activate</primary></indexterm>gtk_bindings_activate <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_bindings_activate_event</primary></indexterm>gtk_bindings_activate_event <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_border_copy</primary></indexterm>gtk_border_copy <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_border_free</primary></indexterm>gtk_border_free <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_border_get_type</primary></indexterm>gtk_border_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_box_get_homogeneous</primary></indexterm>gtk_box_get_homogeneous <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_box_get_spacing</primary></indexterm>gtk_box_get_spacing <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_box_get_type</primary></indexterm>gtk_box_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_box_pack_end</primary></indexterm>gtk_box_pack_end <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_box_pack_end_defaults</primary></indexterm>gtk_box_pack_end_defaults <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_box_pack_start</primary></indexterm>gtk_box_pack_start <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_box_pack_start_defaults</primary></indexterm>gtk_box_pack_start_defaults <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_box_query_child_packing</primary></indexterm>gtk_box_query_child_packing <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_box_reorder_child</primary></indexterm>gtk_box_reorder_child <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_box_set_child_packing</primary></indexterm>gtk_box_set_child_packing <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_box_set_homogeneous</primary></indexterm>gtk_box_set_homogeneous <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_box_set_spacing</primary></indexterm>gtk_box_set_spacing <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_button_box_get_child_secondary</primary></indexterm>gtk_button_box_get_child_secondary <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_button_box_get_layout</primary></indexterm>gtk_button_box_get_layout <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_button_box_get_type</primary></indexterm>gtk_button_box_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_button_box_set_child_secondary</primary></indexterm>gtk_button_box_set_child_secondary <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_button_box_set_layout</primary></indexterm>gtk_button_box_set_layout <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_button_box_style_get_type</primary></indexterm>gtk_button_box_style_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_button_clicked</primary></indexterm>gtk_button_clicked <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_button_enter</primary></indexterm>gtk_button_enter <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_button_get_alignment</primary></indexterm>gtk_button_get_alignment <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_button_get_focus_on_click</primary></indexterm>gtk_button_get_focus_on_click <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_button_get_image</primary></indexterm>gtk_button_get_image <LINK LINKEND="REFSTD.libgtk.x11.2.0.3">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_button_get_label</primary></indexterm>gtk_button_get_label <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_button_get_relief</primary></indexterm>gtk_button_get_relief <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_button_get_type</primary></indexterm>gtk_button_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_button_get_use_stock</primary></indexterm>gtk_button_get_use_stock <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_button_get_use_underline</primary></indexterm>gtk_button_get_use_underline <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_button_leave</primary></indexterm>gtk_button_leave <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_button_new</primary></indexterm>gtk_button_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_button_new_from_stock</primary></indexterm>gtk_button_new_from_stock <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_button_new_with_label</primary></indexterm>gtk_button_new_with_label <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_button_new_with_mnemonic</primary></indexterm>gtk_button_new_with_mnemonic <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_button_pressed</primary></indexterm>gtk_button_pressed <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_button_released</primary></indexterm>gtk_button_released <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_button_set_alignment</primary></indexterm>gtk_button_set_alignment <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_button_set_focus_on_click</primary></indexterm>gtk_button_set_focus_on_click <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_button_set_image</primary></indexterm>gtk_button_set_image <LINK LINKEND="REFSTD.libgtk.x11.2.0.3">[LSB]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_button_set_label</primary></indexterm>gtk_button_set_label <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_button_set_relief</primary></indexterm>gtk_button_set_relief <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_button_set_use_stock</primary></indexterm>gtk_button_set_use_stock <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_button_set_use_underline</primary></indexterm>gtk_button_set_use_underline <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_buttons_type_get_type</primary></indexterm>gtk_buttons_type_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_calendar_clear_marks</primary></indexterm>gtk_calendar_clear_marks <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_calendar_display_options_get_type</primary></indexterm>gtk_calendar_display_options_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_calendar_get_date</primary></indexterm>gtk_calendar_get_date <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_calendar_get_display_options</primary></indexterm>gtk_calendar_get_display_options <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_calendar_get_type</primary></indexterm>gtk_calendar_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_calendar_mark_day</primary></indexterm>gtk_calendar_mark_day <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_calendar_new</primary></indexterm>gtk_calendar_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_calendar_select_day</primary></indexterm>gtk_calendar_select_day <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_calendar_select_month</primary></indexterm>gtk_calendar_select_month <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_calendar_set_display_options</primary></indexterm>gtk_calendar_set_display_options <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_calendar_unmark_day</primary></indexterm>gtk_calendar_unmark_day <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_cell_editable_editing_done</primary></indexterm>gtk_cell_editable_editing_done <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_cell_editable_get_type</primary></indexterm>gtk_cell_editable_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_cell_editable_remove_widget</primary></indexterm>gtk_cell_editable_remove_widget <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_cell_editable_start_editing</primary></indexterm>gtk_cell_editable_start_editing <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_cell_layout_add_attribute</primary></indexterm>gtk_cell_layout_add_attribute <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_cell_layout_clear</primary></indexterm>gtk_cell_layout_clear <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_cell_layout_clear_attributes</primary></indexterm>gtk_cell_layout_clear_attributes <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_cell_layout_get_type</primary></indexterm>gtk_cell_layout_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_cell_layout_pack_end</primary></indexterm>gtk_cell_layout_pack_end <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_cell_layout_pack_start</primary></indexterm>gtk_cell_layout_pack_start <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_cell_layout_reorder</primary></indexterm>gtk_cell_layout_reorder <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_cell_layout_set_attributes</primary></indexterm>gtk_cell_layout_set_attributes <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_cell_layout_set_cell_data_func</primary></indexterm>gtk_cell_layout_set_cell_data_func <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_cell_renderer_activate</primary></indexterm>gtk_cell_renderer_activate <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_cell_renderer_combo_get_type</primary></indexterm>gtk_cell_renderer_combo_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_cell_renderer_combo_new</primary></indexterm>gtk_cell_renderer_combo_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_cell_renderer_get_fixed_size</primary></indexterm>gtk_cell_renderer_get_fixed_size <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_cell_renderer_get_size</primary></indexterm>gtk_cell_renderer_get_size <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_cell_renderer_get_type</primary></indexterm>gtk_cell_renderer_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_cell_renderer_mode_get_type</primary></indexterm>gtk_cell_renderer_mode_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_cell_renderer_pixbuf_get_type</primary></indexterm>gtk_cell_renderer_pixbuf_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_cell_renderer_pixbuf_new</primary></indexterm>gtk_cell_renderer_pixbuf_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_cell_renderer_progress_get_type</primary></indexterm>gtk_cell_renderer_progress_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_cell_renderer_progress_new</primary></indexterm>gtk_cell_renderer_progress_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_cell_renderer_render</primary></indexterm>gtk_cell_renderer_render <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_cell_renderer_set_fixed_size</primary></indexterm>gtk_cell_renderer_set_fixed_size <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_cell_renderer_start_editing</primary></indexterm>gtk_cell_renderer_start_editing <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_cell_renderer_state_get_type</primary></indexterm>gtk_cell_renderer_state_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_cell_renderer_stop_editing</primary></indexterm>gtk_cell_renderer_stop_editing <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_cell_renderer_text_get_type</primary></indexterm>gtk_cell_renderer_text_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_cell_renderer_text_new</primary></indexterm>gtk_cell_renderer_text_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_cell_renderer_text_set_fixed_height_from_font</primary></indexterm>gtk_cell_renderer_text_set_fixed_height_from_font <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_cell_renderer_toggle_get_active</primary></indexterm>gtk_cell_renderer_toggle_get_active <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_cell_renderer_toggle_get_radio</primary></indexterm>gtk_cell_renderer_toggle_get_radio <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_cell_renderer_toggle_get_type</primary></indexterm>gtk_cell_renderer_toggle_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_cell_renderer_toggle_new</primary></indexterm>gtk_cell_renderer_toggle_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_cell_renderer_toggle_set_active</primary></indexterm>gtk_cell_renderer_toggle_set_active <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_cell_renderer_toggle_set_radio</primary></indexterm>gtk_cell_renderer_toggle_set_radio <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_cell_view_get_cell_renderers</primary></indexterm>gtk_cell_view_get_cell_renderers <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_cell_view_get_displayed_row</primary></indexterm>gtk_cell_view_get_displayed_row <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_cell_view_get_size_of_row</primary></indexterm>gtk_cell_view_get_size_of_row <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_cell_view_get_type</primary></indexterm>gtk_cell_view_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_cell_view_new</primary></indexterm>gtk_cell_view_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_cell_view_new_with_markup</primary></indexterm>gtk_cell_view_new_with_markup <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_cell_view_new_with_pixbuf</primary></indexterm>gtk_cell_view_new_with_pixbuf <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_cell_view_new_with_text</primary></indexterm>gtk_cell_view_new_with_text <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_cell_view_set_background_color</primary></indexterm>gtk_cell_view_set_background_color <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_cell_view_set_displayed_row</primary></indexterm>gtk_cell_view_set_displayed_row <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_cell_view_set_model</primary></indexterm>gtk_cell_view_set_model <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_check_button_get_type</primary></indexterm>gtk_check_button_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_check_button_new</primary></indexterm>gtk_check_button_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_check_button_new_with_label</primary></indexterm>gtk_check_button_new_with_label <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_check_button_new_with_mnemonic</primary></indexterm>gtk_check_button_new_with_mnemonic <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_check_menu_item_get_active</primary></indexterm>gtk_check_menu_item_get_active <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_check_menu_item_get_draw_as_radio</primary></indexterm>gtk_check_menu_item_get_draw_as_radio <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_check_menu_item_get_inconsistent</primary></indexterm>gtk_check_menu_item_get_inconsistent <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_check_menu_item_get_type</primary></indexterm>gtk_check_menu_item_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_check_menu_item_new</primary></indexterm>gtk_check_menu_item_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_check_menu_item_new_with_label</primary></indexterm>gtk_check_menu_item_new_with_label <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_check_menu_item_new_with_mnemonic</primary></indexterm>gtk_check_menu_item_new_with_mnemonic <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_check_menu_item_set_active</primary></indexterm>gtk_check_menu_item_set_active <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_check_menu_item_set_draw_as_radio</primary></indexterm>gtk_check_menu_item_set_draw_as_radio <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_check_menu_item_set_inconsistent</primary></indexterm>gtk_check_menu_item_set_inconsistent <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_check_menu_item_toggled</primary></indexterm>gtk_check_menu_item_toggled <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_check_version</primary></indexterm>gtk_check_version <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_clipboard_clear</primary></indexterm>gtk_clipboard_clear <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_clipboard_get</primary></indexterm>gtk_clipboard_get <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_clipboard_get_display</primary></indexterm>gtk_clipboard_get_display <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_clipboard_get_for_display</primary></indexterm>gtk_clipboard_get_for_display <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_clipboard_get_owner</primary></indexterm>gtk_clipboard_get_owner <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_clipboard_get_type</primary></indexterm>gtk_clipboard_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_clipboard_request_contents</primary></indexterm>gtk_clipboard_request_contents <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_clipboard_request_image</primary></indexterm>gtk_clipboard_request_image <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_clipboard_request_targets</primary></indexterm>gtk_clipboard_request_targets <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_clipboard_request_text</primary></indexterm>gtk_clipboard_request_text <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_clipboard_set_can_store</primary></indexterm>gtk_clipboard_set_can_store <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_clipboard_set_image</primary></indexterm>gtk_clipboard_set_image <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_clipboard_set_text</primary></indexterm>gtk_clipboard_set_text <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_clipboard_set_with_data</primary></indexterm>gtk_clipboard_set_with_data <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_clipboard_set_with_owner</primary></indexterm>gtk_clipboard_set_with_owner <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_clipboard_store</primary></indexterm>gtk_clipboard_store <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_clipboard_wait_for_contents</primary></indexterm>gtk_clipboard_wait_for_contents <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_clipboard_wait_for_image</primary></indexterm>gtk_clipboard_wait_for_image <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_clipboard_wait_for_targets</primary></indexterm>gtk_clipboard_wait_for_targets <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_clipboard_wait_for_text</primary></indexterm>gtk_clipboard_wait_for_text <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_clipboard_wait_is_image_available</primary></indexterm>gtk_clipboard_wait_is_image_available <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_clipboard_wait_is_target_available</primary></indexterm>gtk_clipboard_wait_is_target_available <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_clipboard_wait_is_text_available</primary></indexterm>gtk_clipboard_wait_is_text_available <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_color_button_get_alpha</primary></indexterm>gtk_color_button_get_alpha <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_color_button_get_color</primary></indexterm>gtk_color_button_get_color <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_color_button_get_title</primary></indexterm>gtk_color_button_get_title <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_color_button_get_type</primary></indexterm>gtk_color_button_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_color_button_get_use_alpha</primary></indexterm>gtk_color_button_get_use_alpha <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_color_button_new</primary></indexterm>gtk_color_button_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_color_button_new_with_color</primary></indexterm>gtk_color_button_new_with_color <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_color_button_set_alpha</primary></indexterm>gtk_color_button_set_alpha <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_color_button_set_color</primary></indexterm>gtk_color_button_set_color <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_color_button_set_title</primary></indexterm>gtk_color_button_set_title <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_color_button_set_use_alpha</primary></indexterm>gtk_color_button_set_use_alpha <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_color_selection_dialog_get_type</primary></indexterm>gtk_color_selection_dialog_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_color_selection_dialog_new</primary></indexterm>gtk_color_selection_dialog_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_color_selection_get_current_alpha</primary></indexterm>gtk_color_selection_get_current_alpha <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_color_selection_get_current_color</primary></indexterm>gtk_color_selection_get_current_color <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_color_selection_get_has_opacity_control</primary></indexterm>gtk_color_selection_get_has_opacity_control <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_color_selection_get_has_palette</primary></indexterm>gtk_color_selection_get_has_palette <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_color_selection_get_previous_alpha</primary></indexterm>gtk_color_selection_get_previous_alpha <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_color_selection_get_previous_color</primary></indexterm>gtk_color_selection_get_previous_color <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_color_selection_get_type</primary></indexterm>gtk_color_selection_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_color_selection_is_adjusting</primary></indexterm>gtk_color_selection_is_adjusting <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_color_selection_new</primary></indexterm>gtk_color_selection_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_color_selection_palette_from_string</primary></indexterm>gtk_color_selection_palette_from_string <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_color_selection_palette_to_string</primary></indexterm>gtk_color_selection_palette_to_string <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_color_selection_set_change_palette_with_screen_hook</primary></indexterm>gtk_color_selection_set_change_palette_with_screen_hook <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_color_selection_set_current_alpha</primary></indexterm>gtk_color_selection_set_current_alpha <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_color_selection_set_current_color</primary></indexterm>gtk_color_selection_set_current_color <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_color_selection_set_has_opacity_control</primary></indexterm>gtk_color_selection_set_has_opacity_control <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_color_selection_set_has_palette</primary></indexterm>gtk_color_selection_set_has_palette <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_color_selection_set_previous_alpha</primary></indexterm>gtk_color_selection_set_previous_alpha <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_color_selection_set_previous_color</primary></indexterm>gtk_color_selection_set_previous_color <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_combo_box_append_text</primary></indexterm>gtk_combo_box_append_text <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_combo_box_entry_get_text_column</primary></indexterm>gtk_combo_box_entry_get_text_column <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_combo_box_entry_get_type</primary></indexterm>gtk_combo_box_entry_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_combo_box_entry_new</primary></indexterm>gtk_combo_box_entry_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_combo_box_entry_new_text</primary></indexterm>gtk_combo_box_entry_new_text <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_combo_box_entry_new_with_model</primary></indexterm>gtk_combo_box_entry_new_with_model <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_combo_box_entry_set_text_column</primary></indexterm>gtk_combo_box_entry_set_text_column <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_combo_box_get_active</primary></indexterm>gtk_combo_box_get_active <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_combo_box_get_active_iter</primary></indexterm>gtk_combo_box_get_active_iter <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_combo_box_get_active_text</primary></indexterm>gtk_combo_box_get_active_text <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_combo_box_get_add_tearoffs</primary></indexterm>gtk_combo_box_get_add_tearoffs <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_combo_box_get_column_span_column</primary></indexterm>gtk_combo_box_get_column_span_column <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_combo_box_get_focus_on_click</primary></indexterm>gtk_combo_box_get_focus_on_click <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_combo_box_get_model</primary></indexterm>gtk_combo_box_get_model <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_combo_box_get_popup_accessible</primary></indexterm>gtk_combo_box_get_popup_accessible <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_combo_box_get_row_separator_func</primary></indexterm>gtk_combo_box_get_row_separator_func <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_combo_box_get_row_span_column</primary></indexterm>gtk_combo_box_get_row_span_column <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_combo_box_get_type</primary></indexterm>gtk_combo_box_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_combo_box_get_wrap_width</primary></indexterm>gtk_combo_box_get_wrap_width <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_combo_box_insert_text</primary></indexterm>gtk_combo_box_insert_text <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_combo_box_new</primary></indexterm>gtk_combo_box_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_combo_box_new_text</primary></indexterm>gtk_combo_box_new_text <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_combo_box_new_with_model</primary></indexterm>gtk_combo_box_new_with_model <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_combo_box_popdown</primary></indexterm>gtk_combo_box_popdown <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_combo_box_popup</primary></indexterm>gtk_combo_box_popup <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_combo_box_prepend_text</primary></indexterm>gtk_combo_box_prepend_text <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_combo_box_remove_text</primary></indexterm>gtk_combo_box_remove_text <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_combo_box_set_active</primary></indexterm>gtk_combo_box_set_active <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_combo_box_set_active_iter</primary></indexterm>gtk_combo_box_set_active_iter <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_combo_box_set_add_tearoffs</primary></indexterm>gtk_combo_box_set_add_tearoffs <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_combo_box_set_column_span_column</primary></indexterm>gtk_combo_box_set_column_span_column <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_combo_box_set_focus_on_click</primary></indexterm>gtk_combo_box_set_focus_on_click <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_combo_box_set_model</primary></indexterm>gtk_combo_box_set_model <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_combo_box_set_row_separator_func</primary></indexterm>gtk_combo_box_set_row_separator_func <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_combo_box_set_row_span_column</primary></indexterm>gtk_combo_box_set_row_span_column <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_combo_box_set_wrap_width</primary></indexterm>gtk_combo_box_set_wrap_width <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_combo_get_type</primary></indexterm>gtk_combo_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_container_add</primary></indexterm>gtk_container_add <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_container_add_with_properties</primary></indexterm>gtk_container_add_with_properties <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_container_check_resize</primary></indexterm>gtk_container_check_resize <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_container_child_get</primary></indexterm>gtk_container_child_get <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_container_child_get_property</primary></indexterm>gtk_container_child_get_property <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_container_child_get_valist</primary></indexterm>gtk_container_child_get_valist <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_container_child_set</primary></indexterm>gtk_container_child_set <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_container_child_set_property</primary></indexterm>gtk_container_child_set_property <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_container_child_set_valist</primary></indexterm>gtk_container_child_set_valist <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_container_child_type</primary></indexterm>gtk_container_child_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_container_class_find_child_property</primary></indexterm>gtk_container_class_find_child_property <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_container_class_install_child_property</primary></indexterm>gtk_container_class_install_child_property <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_container_class_list_child_properties</primary></indexterm>gtk_container_class_list_child_properties <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_container_forall</primary></indexterm>gtk_container_forall <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_container_foreach</primary></indexterm>gtk_container_foreach <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_container_get_border_width</primary></indexterm>gtk_container_get_border_width <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_container_get_children</primary></indexterm>gtk_container_get_children <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_container_get_focus_chain</primary></indexterm>gtk_container_get_focus_chain <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_container_get_focus_hadjustment</primary></indexterm>gtk_container_get_focus_hadjustment <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_container_get_focus_vadjustment</primary></indexterm>gtk_container_get_focus_vadjustment <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_container_get_resize_mode</primary></indexterm>gtk_container_get_resize_mode <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_container_get_type</primary></indexterm>gtk_container_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_container_propagate_expose</primary></indexterm>gtk_container_propagate_expose <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_container_remove</primary></indexterm>gtk_container_remove <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_container_resize_children</primary></indexterm>gtk_container_resize_children <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_container_set_border_width</primary></indexterm>gtk_container_set_border_width <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_container_set_focus_chain</primary></indexterm>gtk_container_set_focus_chain <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_container_set_focus_child</primary></indexterm>gtk_container_set_focus_child <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_container_set_focus_hadjustment</primary></indexterm>gtk_container_set_focus_hadjustment <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_container_set_focus_vadjustment</primary></indexterm>gtk_container_set_focus_vadjustment <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_container_set_reallocate_redraws</primary></indexterm>gtk_container_set_reallocate_redraws <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_container_set_resize_mode</primary></indexterm>gtk_container_set_resize_mode <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_container_unset_focus_chain</primary></indexterm>gtk_container_unset_focus_chain <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_corner_type_get_type</primary></indexterm>gtk_corner_type_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_curve_get_type</primary></indexterm>gtk_curve_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_curve_get_vector</primary></indexterm>gtk_curve_get_vector <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_curve_new</primary></indexterm>gtk_curve_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_curve_reset</primary></indexterm>gtk_curve_reset <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_curve_set_curve_type</primary></indexterm>gtk_curve_set_curve_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_curve_set_gamma</primary></indexterm>gtk_curve_set_gamma <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_curve_set_range</primary></indexterm>gtk_curve_set_range <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_curve_set_vector</primary></indexterm>gtk_curve_set_vector <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_curve_type_get_type</primary></indexterm>gtk_curve_type_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_debug_flag_get_type</primary></indexterm>gtk_debug_flag_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_delete_type_get_type</primary></indexterm>gtk_delete_type_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_dest_defaults_get_type</primary></indexterm>gtk_dest_defaults_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_dialog_add_action_widget</primary></indexterm>gtk_dialog_add_action_widget <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_dialog_add_button</primary></indexterm>gtk_dialog_add_button <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_dialog_add_buttons</primary></indexterm>gtk_dialog_add_buttons <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_dialog_flags_get_type</primary></indexterm>gtk_dialog_flags_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_dialog_get_has_separator</primary></indexterm>gtk_dialog_get_has_separator <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_dialog_get_response_for_widget</primary></indexterm>gtk_dialog_get_response_for_widget <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_dialog_get_type</primary></indexterm>gtk_dialog_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_dialog_new</primary></indexterm>gtk_dialog_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_dialog_new_with_buttons</primary></indexterm>gtk_dialog_new_with_buttons <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_dialog_response</primary></indexterm>gtk_dialog_response <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_dialog_run</primary></indexterm>gtk_dialog_run <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_dialog_set_alternative_button_order</primary></indexterm>gtk_dialog_set_alternative_button_order <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_dialog_set_alternative_button_order_from_array</primary></indexterm>gtk_dialog_set_alternative_button_order_from_array <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_dialog_set_default_response</primary></indexterm>gtk_dialog_set_default_response <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_dialog_set_has_separator</primary></indexterm>gtk_dialog_set_has_separator <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_dialog_set_response_sensitive</primary></indexterm>gtk_dialog_set_response_sensitive <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_direction_type_get_type</primary></indexterm>gtk_direction_type_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_disable_setlocale</primary></indexterm>gtk_disable_setlocale <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_drag_begin</primary></indexterm>gtk_drag_begin <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_drag_check_threshold</primary></indexterm>gtk_drag_check_threshold <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_drag_dest_add_image_targets</primary></indexterm>gtk_drag_dest_add_image_targets <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_drag_dest_add_text_targets</primary></indexterm>gtk_drag_dest_add_text_targets <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_drag_dest_add_uri_targets</primary></indexterm>gtk_drag_dest_add_uri_targets <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_drag_dest_find_target</primary></indexterm>gtk_drag_dest_find_target <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_drag_dest_get_target_list</primary></indexterm>gtk_drag_dest_get_target_list <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_drag_dest_set</primary></indexterm>gtk_drag_dest_set <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_drag_dest_set_proxy</primary></indexterm>gtk_drag_dest_set_proxy <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_drag_dest_set_target_list</primary></indexterm>gtk_drag_dest_set_target_list <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_drag_dest_unset</primary></indexterm>gtk_drag_dest_unset <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_drag_finish</primary></indexterm>gtk_drag_finish <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_drag_get_data</primary></indexterm>gtk_drag_get_data <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_drag_get_source_widget</primary></indexterm>gtk_drag_get_source_widget <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_drag_highlight</primary></indexterm>gtk_drag_highlight <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_drag_set_icon_default</primary></indexterm>gtk_drag_set_icon_default <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_drag_set_icon_name</primary></indexterm>gtk_drag_set_icon_name <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_drag_set_icon_pixbuf</primary></indexterm>gtk_drag_set_icon_pixbuf <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_drag_set_icon_pixmap</primary></indexterm>gtk_drag_set_icon_pixmap <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_drag_set_icon_stock</primary></indexterm>gtk_drag_set_icon_stock <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_drag_set_icon_widget</primary></indexterm>gtk_drag_set_icon_widget <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_drag_source_add_image_targets</primary></indexterm>gtk_drag_source_add_image_targets <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_drag_source_add_text_targets</primary></indexterm>gtk_drag_source_add_text_targets <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_drag_source_add_uri_targets</primary></indexterm>gtk_drag_source_add_uri_targets <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_drag_source_get_target_list</primary></indexterm>gtk_drag_source_get_target_list <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_drag_source_set</primary></indexterm>gtk_drag_source_set <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_drag_source_set_icon</primary></indexterm>gtk_drag_source_set_icon <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_drag_source_set_icon_name</primary></indexterm>gtk_drag_source_set_icon_name <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_drag_source_set_icon_pixbuf</primary></indexterm>gtk_drag_source_set_icon_pixbuf <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_drag_source_set_icon_stock</primary></indexterm>gtk_drag_source_set_icon_stock <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_drag_source_set_target_list</primary></indexterm>gtk_drag_source_set_target_list <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_drag_source_unset</primary></indexterm>gtk_drag_source_unset <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_drag_unhighlight</primary></indexterm>gtk_drag_unhighlight <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_draw_insertion_cursor</primary></indexterm>gtk_draw_insertion_cursor <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_drawing_area_get_type</primary></indexterm>gtk_drawing_area_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_drawing_area_new</primary></indexterm>gtk_drawing_area_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_editable_copy_clipboard</primary></indexterm>gtk_editable_copy_clipboard <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_editable_cut_clipboard</primary></indexterm>gtk_editable_cut_clipboard <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_editable_delete_selection</primary></indexterm>gtk_editable_delete_selection <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_editable_delete_text</primary></indexterm>gtk_editable_delete_text <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_editable_get_chars</primary></indexterm>gtk_editable_get_chars <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_editable_get_editable</primary></indexterm>gtk_editable_get_editable <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_editable_get_position</primary></indexterm>gtk_editable_get_position <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_editable_get_selection_bounds</primary></indexterm>gtk_editable_get_selection_bounds <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_editable_get_type</primary></indexterm>gtk_editable_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_editable_insert_text</primary></indexterm>gtk_editable_insert_text <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_editable_paste_clipboard</primary></indexterm>gtk_editable_paste_clipboard <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_editable_select_region</primary></indexterm>gtk_editable_select_region <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_editable_set_editable</primary></indexterm>gtk_editable_set_editable <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_editable_set_position</primary></indexterm>gtk_editable_set_position <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_entry_completion_complete</primary></indexterm>gtk_entry_completion_complete <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_entry_completion_delete_action</primary></indexterm>gtk_entry_completion_delete_action <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_entry_completion_get_entry</primary></indexterm>gtk_entry_completion_get_entry <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_entry_completion_get_inline_completion</primary></indexterm>gtk_entry_completion_get_inline_completion <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_entry_completion_get_minimum_key_length</primary></indexterm>gtk_entry_completion_get_minimum_key_length <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_entry_completion_get_model</primary></indexterm>gtk_entry_completion_get_model <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_entry_completion_get_popup_completion</primary></indexterm>gtk_entry_completion_get_popup_completion <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_entry_completion_get_popup_set_width</primary></indexterm>gtk_entry_completion_get_popup_set_width <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_entry_completion_get_popup_single_match</primary></indexterm>gtk_entry_completion_get_popup_single_match <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_entry_completion_get_text_column</primary></indexterm>gtk_entry_completion_get_text_column <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_entry_completion_get_type</primary></indexterm>gtk_entry_completion_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_entry_completion_insert_action_markup</primary></indexterm>gtk_entry_completion_insert_action_markup <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_entry_completion_insert_action_text</primary></indexterm>gtk_entry_completion_insert_action_text <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_entry_completion_insert_prefix</primary></indexterm>gtk_entry_completion_insert_prefix <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_entry_completion_new</primary></indexterm>gtk_entry_completion_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_entry_completion_set_inline_completion</primary></indexterm>gtk_entry_completion_set_inline_completion <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_entry_completion_set_match_func</primary></indexterm>gtk_entry_completion_set_match_func <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_entry_completion_set_minimum_key_length</primary></indexterm>gtk_entry_completion_set_minimum_key_length <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_entry_completion_set_model</primary></indexterm>gtk_entry_completion_set_model <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_entry_completion_set_popup_completion</primary></indexterm>gtk_entry_completion_set_popup_completion <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_entry_completion_set_popup_set_width</primary></indexterm>gtk_entry_completion_set_popup_set_width <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_entry_completion_set_popup_single_match</primary></indexterm>gtk_entry_completion_set_popup_single_match <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_entry_completion_set_text_column</primary></indexterm>gtk_entry_completion_set_text_column <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_entry_get_activates_default</primary></indexterm>gtk_entry_get_activates_default <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_entry_get_alignment</primary></indexterm>gtk_entry_get_alignment <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_entry_get_completion</primary></indexterm>gtk_entry_get_completion <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_entry_get_has_frame</primary></indexterm>gtk_entry_get_has_frame <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_entry_get_invisible_char</primary></indexterm>gtk_entry_get_invisible_char <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_entry_get_layout</primary></indexterm>gtk_entry_get_layout <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_entry_get_layout_offsets</primary></indexterm>gtk_entry_get_layout_offsets <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_entry_get_max_length</primary></indexterm>gtk_entry_get_max_length <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_entry_get_text</primary></indexterm>gtk_entry_get_text <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_entry_get_type</primary></indexterm>gtk_entry_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_entry_get_visibility</primary></indexterm>gtk_entry_get_visibility <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_entry_get_width_chars</primary></indexterm>gtk_entry_get_width_chars <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_entry_layout_index_to_text_index</primary></indexterm>gtk_entry_layout_index_to_text_index <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_entry_new</primary></indexterm>gtk_entry_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_entry_set_activates_default</primary></indexterm>gtk_entry_set_activates_default <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_entry_set_alignment</primary></indexterm>gtk_entry_set_alignment <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_entry_set_completion</primary></indexterm>gtk_entry_set_completion <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_entry_set_has_frame</primary></indexterm>gtk_entry_set_has_frame <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_entry_set_invisible_char</primary></indexterm>gtk_entry_set_invisible_char <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_entry_set_max_length</primary></indexterm>gtk_entry_set_max_length <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_entry_set_text</primary></indexterm>gtk_entry_set_text <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_entry_set_visibility</primary></indexterm>gtk_entry_set_visibility <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_entry_set_width_chars</primary></indexterm>gtk_entry_set_width_chars <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_entry_text_index_to_layout_index</primary></indexterm>gtk_entry_text_index_to_layout_index <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_event_box_get_above_child</primary></indexterm>gtk_event_box_get_above_child <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_event_box_get_type</primary></indexterm>gtk_event_box_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_event_box_get_visible_window</primary></indexterm>gtk_event_box_get_visible_window <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_event_box_new</primary></indexterm>gtk_event_box_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_event_box_set_above_child</primary></indexterm>gtk_event_box_set_above_child <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_event_box_set_visible_window</primary></indexterm>gtk_event_box_set_visible_window <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_events_pending</primary></indexterm>gtk_events_pending <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_expander_get_expanded</primary></indexterm>gtk_expander_get_expanded <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_expander_get_label</primary></indexterm>gtk_expander_get_label <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_expander_get_label_widget</primary></indexterm>gtk_expander_get_label_widget <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_expander_get_spacing</primary></indexterm>gtk_expander_get_spacing <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_expander_get_type</primary></indexterm>gtk_expander_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_expander_get_use_markup</primary></indexterm>gtk_expander_get_use_markup <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_expander_get_use_underline</primary></indexterm>gtk_expander_get_use_underline <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_expander_new</primary></indexterm>gtk_expander_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_expander_new_with_mnemonic</primary></indexterm>gtk_expander_new_with_mnemonic <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_expander_set_expanded</primary></indexterm>gtk_expander_set_expanded <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_expander_set_label</primary></indexterm>gtk_expander_set_label <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_expander_set_label_widget</primary></indexterm>gtk_expander_set_label_widget <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_expander_set_spacing</primary></indexterm>gtk_expander_set_spacing <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_expander_set_use_markup</primary></indexterm>gtk_expander_set_use_markup <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_expander_set_use_underline</primary></indexterm>gtk_expander_set_use_underline <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_expander_style_get_type</primary></indexterm>gtk_expander_style_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_false</primary></indexterm>gtk_false <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_file_chooser_action_get_type</primary></indexterm>gtk_file_chooser_action_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_file_chooser_add_filter</primary></indexterm>gtk_file_chooser_add_filter <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_file_chooser_add_shortcut_folder</primary></indexterm>gtk_file_chooser_add_shortcut_folder <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_file_chooser_add_shortcut_folder_uri</primary></indexterm>gtk_file_chooser_add_shortcut_folder_uri <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_file_chooser_button_get_title</primary></indexterm>gtk_file_chooser_button_get_title <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_file_chooser_button_get_type</primary></indexterm>gtk_file_chooser_button_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_file_chooser_button_get_width_chars</primary></indexterm>gtk_file_chooser_button_get_width_chars <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_file_chooser_button_new</primary></indexterm>gtk_file_chooser_button_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_file_chooser_button_new_with_backend</primary></indexterm>gtk_file_chooser_button_new_with_backend <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_file_chooser_button_new_with_dialog</primary></indexterm>gtk_file_chooser_button_new_with_dialog <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_file_chooser_button_set_title</primary></indexterm>gtk_file_chooser_button_set_title <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_file_chooser_button_set_width_chars</primary></indexterm>gtk_file_chooser_button_set_width_chars <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_file_chooser_dialog_get_type</primary></indexterm>gtk_file_chooser_dialog_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_file_chooser_dialog_new</primary></indexterm>gtk_file_chooser_dialog_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_file_chooser_dialog_new_with_backend</primary></indexterm>gtk_file_chooser_dialog_new_with_backend <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_file_chooser_error_get_type</primary></indexterm>gtk_file_chooser_error_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_file_chooser_error_quark</primary></indexterm>gtk_file_chooser_error_quark <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_file_chooser_get_action</primary></indexterm>gtk_file_chooser_get_action <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_file_chooser_get_current_folder</primary></indexterm>gtk_file_chooser_get_current_folder <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_file_chooser_get_current_folder_uri</primary></indexterm>gtk_file_chooser_get_current_folder_uri <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_file_chooser_get_do_overwrite_confirmation</primary></indexterm>gtk_file_chooser_get_do_overwrite_confirmation <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_file_chooser_get_extra_widget</primary></indexterm>gtk_file_chooser_get_extra_widget <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_file_chooser_get_filename</primary></indexterm>gtk_file_chooser_get_filename <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_file_chooser_get_filenames</primary></indexterm>gtk_file_chooser_get_filenames <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_file_chooser_get_filter</primary></indexterm>gtk_file_chooser_get_filter <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_file_chooser_get_local_only</primary></indexterm>gtk_file_chooser_get_local_only <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_file_chooser_get_preview_filename</primary></indexterm>gtk_file_chooser_get_preview_filename <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_file_chooser_get_preview_uri</primary></indexterm>gtk_file_chooser_get_preview_uri <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_file_chooser_get_preview_widget</primary></indexterm>gtk_file_chooser_get_preview_widget <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_file_chooser_get_preview_widget_active</primary></indexterm>gtk_file_chooser_get_preview_widget_active <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_file_chooser_get_select_multiple</primary></indexterm>gtk_file_chooser_get_select_multiple <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_file_chooser_get_show_hidden</primary></indexterm>gtk_file_chooser_get_show_hidden <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_file_chooser_get_type</primary></indexterm>gtk_file_chooser_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_file_chooser_get_uri</primary></indexterm>gtk_file_chooser_get_uri <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_file_chooser_get_uris</primary></indexterm>gtk_file_chooser_get_uris <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_file_chooser_get_use_preview_label</primary></indexterm>gtk_file_chooser_get_use_preview_label <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_file_chooser_list_filters</primary></indexterm>gtk_file_chooser_list_filters <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_file_chooser_list_shortcut_folder_uris</primary></indexterm>gtk_file_chooser_list_shortcut_folder_uris <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_file_chooser_list_shortcut_folders</primary></indexterm>gtk_file_chooser_list_shortcut_folders <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_file_chooser_remove_filter</primary></indexterm>gtk_file_chooser_remove_filter <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_file_chooser_remove_shortcut_folder</primary></indexterm>gtk_file_chooser_remove_shortcut_folder <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_file_chooser_remove_shortcut_folder_uri</primary></indexterm>gtk_file_chooser_remove_shortcut_folder_uri <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_file_chooser_select_all</primary></indexterm>gtk_file_chooser_select_all <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_file_chooser_select_filename</primary></indexterm>gtk_file_chooser_select_filename <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_file_chooser_select_uri</primary></indexterm>gtk_file_chooser_select_uri <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_file_chooser_set_action</primary></indexterm>gtk_file_chooser_set_action <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_file_chooser_set_current_folder</primary></indexterm>gtk_file_chooser_set_current_folder <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_file_chooser_set_current_folder_uri</primary></indexterm>gtk_file_chooser_set_current_folder_uri <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_file_chooser_set_current_name</primary></indexterm>gtk_file_chooser_set_current_name <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_file_chooser_set_do_overwrite_confirmation</primary></indexterm>gtk_file_chooser_set_do_overwrite_confirmation <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_file_chooser_set_extra_widget</primary></indexterm>gtk_file_chooser_set_extra_widget <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_file_chooser_set_filename</primary></indexterm>gtk_file_chooser_set_filename <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_file_chooser_set_filter</primary></indexterm>gtk_file_chooser_set_filter <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_file_chooser_set_local_only</primary></indexterm>gtk_file_chooser_set_local_only <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_file_chooser_set_preview_widget</primary></indexterm>gtk_file_chooser_set_preview_widget <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_file_chooser_set_preview_widget_active</primary></indexterm>gtk_file_chooser_set_preview_widget_active <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_file_chooser_set_select_multiple</primary></indexterm>gtk_file_chooser_set_select_multiple <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_file_chooser_set_show_hidden</primary></indexterm>gtk_file_chooser_set_show_hidden <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_file_chooser_set_uri</primary></indexterm>gtk_file_chooser_set_uri <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_file_chooser_set_use_preview_label</primary></indexterm>gtk_file_chooser_set_use_preview_label <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_file_chooser_unselect_all</primary></indexterm>gtk_file_chooser_unselect_all <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_file_chooser_unselect_filename</primary></indexterm>gtk_file_chooser_unselect_filename <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_file_chooser_unselect_uri</primary></indexterm>gtk_file_chooser_unselect_uri <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_file_chooser_widget_get_type</primary></indexterm>gtk_file_chooser_widget_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_file_chooser_widget_new</primary></indexterm>gtk_file_chooser_widget_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_file_chooser_widget_new_with_backend</primary></indexterm>gtk_file_chooser_widget_new_with_backend <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_file_filter_add_custom</primary></indexterm>gtk_file_filter_add_custom <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_file_filter_add_mime_type</primary></indexterm>gtk_file_filter_add_mime_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_file_filter_add_pattern</primary></indexterm>gtk_file_filter_add_pattern <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_file_filter_add_pixbuf_formats</primary></indexterm>gtk_file_filter_add_pixbuf_formats <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_file_filter_filter</primary></indexterm>gtk_file_filter_filter <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_file_filter_flags_get_type</primary></indexterm>gtk_file_filter_flags_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_file_filter_get_name</primary></indexterm>gtk_file_filter_get_name <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_file_filter_get_needed</primary></indexterm>gtk_file_filter_get_needed <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_file_filter_get_type</primary></indexterm>gtk_file_filter_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_file_filter_new</primary></indexterm>gtk_file_filter_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_file_filter_set_name</primary></indexterm>gtk_file_filter_set_name <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_file_selection_complete</primary></indexterm>gtk_file_selection_complete <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_file_selection_get_filename</primary></indexterm>gtk_file_selection_get_filename <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_file_selection_get_select_multiple</primary></indexterm>gtk_file_selection_get_select_multiple <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_file_selection_get_selections</primary></indexterm>gtk_file_selection_get_selections <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_file_selection_get_type</primary></indexterm>gtk_file_selection_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_file_selection_hide_fileop_buttons</primary></indexterm>gtk_file_selection_hide_fileop_buttons <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_file_selection_new</primary></indexterm>gtk_file_selection_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_file_selection_set_filename</primary></indexterm>gtk_file_selection_set_filename <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_file_selection_set_select_multiple</primary></indexterm>gtk_file_selection_set_select_multiple <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_file_selection_show_fileop_buttons</primary></indexterm>gtk_file_selection_show_fileop_buttons <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_fixed_get_has_window</primary></indexterm>gtk_fixed_get_has_window <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_fixed_get_type</primary></indexterm>gtk_fixed_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_fixed_move</primary></indexterm>gtk_fixed_move <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_fixed_new</primary></indexterm>gtk_fixed_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_fixed_put</primary></indexterm>gtk_fixed_put <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_fixed_set_has_window</primary></indexterm>gtk_fixed_set_has_window <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_font_button_get_font_name</primary></indexterm>gtk_font_button_get_font_name <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_font_button_get_show_size</primary></indexterm>gtk_font_button_get_show_size <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_font_button_get_show_style</primary></indexterm>gtk_font_button_get_show_style <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_font_button_get_title</primary></indexterm>gtk_font_button_get_title <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_font_button_get_type</primary></indexterm>gtk_font_button_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_font_button_get_use_font</primary></indexterm>gtk_font_button_get_use_font <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_font_button_get_use_size</primary></indexterm>gtk_font_button_get_use_size <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_font_button_new</primary></indexterm>gtk_font_button_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_font_button_new_with_font</primary></indexterm>gtk_font_button_new_with_font <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_font_button_set_font_name</primary></indexterm>gtk_font_button_set_font_name <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_font_button_set_show_size</primary></indexterm>gtk_font_button_set_show_size <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_font_button_set_show_style</primary></indexterm>gtk_font_button_set_show_style <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_font_button_set_title</primary></indexterm>gtk_font_button_set_title <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_font_button_set_use_font</primary></indexterm>gtk_font_button_set_use_font <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_font_button_set_use_size</primary></indexterm>gtk_font_button_set_use_size <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_font_selection_dialog_get_font_name</primary></indexterm>gtk_font_selection_dialog_get_font_name <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_font_selection_dialog_get_preview_text</primary></indexterm>gtk_font_selection_dialog_get_preview_text <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_font_selection_dialog_get_type</primary></indexterm>gtk_font_selection_dialog_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_font_selection_dialog_new</primary></indexterm>gtk_font_selection_dialog_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_font_selection_dialog_set_font_name</primary></indexterm>gtk_font_selection_dialog_set_font_name <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_font_selection_dialog_set_preview_text</primary></indexterm>gtk_font_selection_dialog_set_preview_text <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_font_selection_get_font_name</primary></indexterm>gtk_font_selection_get_font_name <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_font_selection_get_preview_text</primary></indexterm>gtk_font_selection_get_preview_text <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_font_selection_get_type</primary></indexterm>gtk_font_selection_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_font_selection_new</primary></indexterm>gtk_font_selection_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_font_selection_set_font_name</primary></indexterm>gtk_font_selection_set_font_name <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_font_selection_set_preview_text</primary></indexterm>gtk_font_selection_set_preview_text <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_frame_get_label</primary></indexterm>gtk_frame_get_label <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_frame_get_label_align</primary></indexterm>gtk_frame_get_label_align <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_frame_get_label_widget</primary></indexterm>gtk_frame_get_label_widget <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_frame_get_shadow_type</primary></indexterm>gtk_frame_get_shadow_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_frame_get_type</primary></indexterm>gtk_frame_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_frame_new</primary></indexterm>gtk_frame_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_frame_set_label</primary></indexterm>gtk_frame_set_label <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_frame_set_label_align</primary></indexterm>gtk_frame_set_label_align <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_frame_set_label_widget</primary></indexterm>gtk_frame_set_label_widget <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_frame_set_shadow_type</primary></indexterm>gtk_frame_set_shadow_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_gamma_curve_get_type</primary></indexterm>gtk_gamma_curve_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_gamma_curve_new</primary></indexterm>gtk_gamma_curve_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_gc_get</primary></indexterm>gtk_gc_get <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_gc_release</primary></indexterm>gtk_gc_release <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_get_current_event</primary></indexterm>gtk_get_current_event <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_get_current_event_state</primary></indexterm>gtk_get_current_event_state <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_get_current_event_time</primary></indexterm>gtk_get_current_event_time <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_get_default_language</primary></indexterm>gtk_get_default_language <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_get_event_widget</primary></indexterm>gtk_get_event_widget <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_get_option_group</primary></indexterm>gtk_get_option_group <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_grab_add</primary></indexterm>gtk_grab_add <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_grab_get_current</primary></indexterm>gtk_grab_get_current <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_grab_remove</primary></indexterm>gtk_grab_remove <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_handle_box_get_handle_position</primary></indexterm>gtk_handle_box_get_handle_position <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_handle_box_get_shadow_type</primary></indexterm>gtk_handle_box_get_shadow_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_handle_box_get_snap_edge</primary></indexterm>gtk_handle_box_get_snap_edge <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_handle_box_get_type</primary></indexterm>gtk_handle_box_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_handle_box_new</primary></indexterm>gtk_handle_box_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_handle_box_set_handle_position</primary></indexterm>gtk_handle_box_set_handle_position <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_handle_box_set_shadow_type</primary></indexterm>gtk_handle_box_set_shadow_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_handle_box_set_snap_edge</primary></indexterm>gtk_handle_box_set_snap_edge <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_hbox_get_type</primary></indexterm>gtk_hbox_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_hbox_new</primary></indexterm>gtk_hbox_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_hbutton_box_get_type</primary></indexterm>gtk_hbutton_box_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_hbutton_box_new</primary></indexterm>gtk_hbutton_box_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_hpaned_get_type</primary></indexterm>gtk_hpaned_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_hpaned_new</primary></indexterm>gtk_hpaned_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_hruler_get_type</primary></indexterm>gtk_hruler_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_hruler_new</primary></indexterm>gtk_hruler_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_hscale_get_type</primary></indexterm>gtk_hscale_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_hscale_new</primary></indexterm>gtk_hscale_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_hscale_new_with_range</primary></indexterm>gtk_hscale_new_with_range <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_hscrollbar_get_type</primary></indexterm>gtk_hscrollbar_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_hscrollbar_new</primary></indexterm>gtk_hscrollbar_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_hseparator_get_type</primary></indexterm>gtk_hseparator_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_hseparator_new</primary></indexterm>gtk_hseparator_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_icon_factory_add</primary></indexterm>gtk_icon_factory_add <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_icon_factory_add_default</primary></indexterm>gtk_icon_factory_add_default <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_icon_factory_get_type</primary></indexterm>gtk_icon_factory_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_icon_factory_lookup</primary></indexterm>gtk_icon_factory_lookup <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_icon_factory_lookup_default</primary></indexterm>gtk_icon_factory_lookup_default <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_icon_factory_new</primary></indexterm>gtk_icon_factory_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_icon_factory_remove_default</primary></indexterm>gtk_icon_factory_remove_default <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_icon_info_copy</primary></indexterm>gtk_icon_info_copy <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_icon_info_free</primary></indexterm>gtk_icon_info_free <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_icon_info_get_attach_points</primary></indexterm>gtk_icon_info_get_attach_points <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_icon_info_get_base_size</primary></indexterm>gtk_icon_info_get_base_size <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_icon_info_get_builtin_pixbuf</primary></indexterm>gtk_icon_info_get_builtin_pixbuf <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_icon_info_get_display_name</primary></indexterm>gtk_icon_info_get_display_name <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_icon_info_get_embedded_rect</primary></indexterm>gtk_icon_info_get_embedded_rect <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_icon_info_get_filename</primary></indexterm>gtk_icon_info_get_filename <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_icon_info_get_type</primary></indexterm>gtk_icon_info_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_icon_info_load_icon</primary></indexterm>gtk_icon_info_load_icon <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_icon_info_set_raw_coordinates</primary></indexterm>gtk_icon_info_set_raw_coordinates <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_icon_lookup_flags_get_type</primary></indexterm>gtk_icon_lookup_flags_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_icon_set_add_source</primary></indexterm>gtk_icon_set_add_source <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_icon_set_copy</primary></indexterm>gtk_icon_set_copy <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_icon_set_get_sizes</primary></indexterm>gtk_icon_set_get_sizes <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_icon_set_get_type</primary></indexterm>gtk_icon_set_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_icon_set_new</primary></indexterm>gtk_icon_set_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_icon_set_new_from_pixbuf</primary></indexterm>gtk_icon_set_new_from_pixbuf <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_icon_set_ref</primary></indexterm>gtk_icon_set_ref <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_icon_set_render_icon</primary></indexterm>gtk_icon_set_render_icon <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_icon_set_unref</primary></indexterm>gtk_icon_set_unref <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_icon_size_from_name</primary></indexterm>gtk_icon_size_from_name <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_icon_size_get_name</primary></indexterm>gtk_icon_size_get_name <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_icon_size_get_type</primary></indexterm>gtk_icon_size_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_icon_size_lookup</primary></indexterm>gtk_icon_size_lookup <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_icon_size_lookup_for_settings</primary></indexterm>gtk_icon_size_lookup_for_settings <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_icon_size_register</primary></indexterm>gtk_icon_size_register <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_icon_size_register_alias</primary></indexterm>gtk_icon_size_register_alias <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_icon_source_copy</primary></indexterm>gtk_icon_source_copy <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_icon_source_free</primary></indexterm>gtk_icon_source_free <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_icon_source_get_direction</primary></indexterm>gtk_icon_source_get_direction <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_icon_source_get_direction_wildcarded</primary></indexterm>gtk_icon_source_get_direction_wildcarded <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_icon_source_get_filename</primary></indexterm>gtk_icon_source_get_filename <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_icon_source_get_icon_name</primary></indexterm>gtk_icon_source_get_icon_name <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_icon_source_get_pixbuf</primary></indexterm>gtk_icon_source_get_pixbuf <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_icon_source_get_size</primary></indexterm>gtk_icon_source_get_size <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_icon_source_get_size_wildcarded</primary></indexterm>gtk_icon_source_get_size_wildcarded <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_icon_source_get_state</primary></indexterm>gtk_icon_source_get_state <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_icon_source_get_state_wildcarded</primary></indexterm>gtk_icon_source_get_state_wildcarded <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_icon_source_get_type</primary></indexterm>gtk_icon_source_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_icon_source_new</primary></indexterm>gtk_icon_source_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_icon_source_set_direction</primary></indexterm>gtk_icon_source_set_direction <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_icon_source_set_direction_wildcarded</primary></indexterm>gtk_icon_source_set_direction_wildcarded <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_icon_source_set_filename</primary></indexterm>gtk_icon_source_set_filename <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_icon_source_set_icon_name</primary></indexterm>gtk_icon_source_set_icon_name <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_icon_source_set_pixbuf</primary></indexterm>gtk_icon_source_set_pixbuf <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_icon_source_set_size</primary></indexterm>gtk_icon_source_set_size <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_icon_source_set_size_wildcarded</primary></indexterm>gtk_icon_source_set_size_wildcarded <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_icon_source_set_state</primary></indexterm>gtk_icon_source_set_state <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_icon_source_set_state_wildcarded</primary></indexterm>gtk_icon_source_set_state_wildcarded <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_icon_theme_add_builtin_icon</primary></indexterm>gtk_icon_theme_add_builtin_icon <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_icon_theme_append_search_path</primary></indexterm>gtk_icon_theme_append_search_path <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_icon_theme_error_get_type</primary></indexterm>gtk_icon_theme_error_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_icon_theme_error_quark</primary></indexterm>gtk_icon_theme_error_quark <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_icon_theme_get_default</primary></indexterm>gtk_icon_theme_get_default <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_icon_theme_get_example_icon_name</primary></indexterm>gtk_icon_theme_get_example_icon_name <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_icon_theme_get_for_screen</primary></indexterm>gtk_icon_theme_get_for_screen <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_icon_theme_get_icon_sizes</primary></indexterm>gtk_icon_theme_get_icon_sizes <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_icon_theme_get_search_path</primary></indexterm>gtk_icon_theme_get_search_path <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_icon_theme_get_type</primary></indexterm>gtk_icon_theme_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_icon_theme_has_icon</primary></indexterm>gtk_icon_theme_has_icon <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_icon_theme_list_icons</primary></indexterm>gtk_icon_theme_list_icons <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_icon_theme_load_icon</primary></indexterm>gtk_icon_theme_load_icon <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_icon_theme_lookup_icon</primary></indexterm>gtk_icon_theme_lookup_icon <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_icon_theme_new</primary></indexterm>gtk_icon_theme_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_icon_theme_prepend_search_path</primary></indexterm>gtk_icon_theme_prepend_search_path <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_icon_theme_rescan_if_needed</primary></indexterm>gtk_icon_theme_rescan_if_needed <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_icon_theme_set_custom_theme</primary></indexterm>gtk_icon_theme_set_custom_theme <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_icon_theme_set_screen</primary></indexterm>gtk_icon_theme_set_screen <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_icon_theme_set_search_path</primary></indexterm>gtk_icon_theme_set_search_path <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_icon_view_create_drag_icon</primary></indexterm>gtk_icon_view_create_drag_icon <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_icon_view_enable_model_drag_dest</primary></indexterm>gtk_icon_view_enable_model_drag_dest <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_icon_view_enable_model_drag_source</primary></indexterm>gtk_icon_view_enable_model_drag_source <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_icon_view_get_column_spacing</primary></indexterm>gtk_icon_view_get_column_spacing <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_icon_view_get_columns</primary></indexterm>gtk_icon_view_get_columns <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_icon_view_get_cursor</primary></indexterm>gtk_icon_view_get_cursor <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_icon_view_get_dest_item_at_pos</primary></indexterm>gtk_icon_view_get_dest_item_at_pos <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_icon_view_get_drag_dest_item</primary></indexterm>gtk_icon_view_get_drag_dest_item <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_icon_view_get_item_at_pos</primary></indexterm>gtk_icon_view_get_item_at_pos <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_icon_view_get_item_width</primary></indexterm>gtk_icon_view_get_item_width <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_icon_view_get_margin</primary></indexterm>gtk_icon_view_get_margin <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_icon_view_get_markup_column</primary></indexterm>gtk_icon_view_get_markup_column <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_icon_view_get_model</primary></indexterm>gtk_icon_view_get_model <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_icon_view_get_orientation</primary></indexterm>gtk_icon_view_get_orientation <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_icon_view_get_path_at_pos</primary></indexterm>gtk_icon_view_get_path_at_pos <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_icon_view_get_pixbuf_column</primary></indexterm>gtk_icon_view_get_pixbuf_column <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_icon_view_get_reorderable</primary></indexterm>gtk_icon_view_get_reorderable <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_icon_view_get_row_spacing</primary></indexterm>gtk_icon_view_get_row_spacing <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_icon_view_get_selected_items</primary></indexterm>gtk_icon_view_get_selected_items <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_icon_view_get_selection_mode</primary></indexterm>gtk_icon_view_get_selection_mode <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_icon_view_get_spacing</primary></indexterm>gtk_icon_view_get_spacing <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_icon_view_get_text_column</primary></indexterm>gtk_icon_view_get_text_column <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_icon_view_get_type</primary></indexterm>gtk_icon_view_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_icon_view_get_visible_range</primary></indexterm>gtk_icon_view_get_visible_range <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_icon_view_item_activated</primary></indexterm>gtk_icon_view_item_activated <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_icon_view_new</primary></indexterm>gtk_icon_view_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_icon_view_new_with_model</primary></indexterm>gtk_icon_view_new_with_model <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_icon_view_path_is_selected</primary></indexterm>gtk_icon_view_path_is_selected <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_icon_view_scroll_to_path</primary></indexterm>gtk_icon_view_scroll_to_path <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_icon_view_select_all</primary></indexterm>gtk_icon_view_select_all <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_icon_view_select_path</primary></indexterm>gtk_icon_view_select_path <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_icon_view_selected_foreach</primary></indexterm>gtk_icon_view_selected_foreach <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_icon_view_set_column_spacing</primary></indexterm>gtk_icon_view_set_column_spacing <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_icon_view_set_columns</primary></indexterm>gtk_icon_view_set_columns <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_icon_view_set_cursor</primary></indexterm>gtk_icon_view_set_cursor <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_icon_view_set_drag_dest_item</primary></indexterm>gtk_icon_view_set_drag_dest_item <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_icon_view_set_item_width</primary></indexterm>gtk_icon_view_set_item_width <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_icon_view_set_margin</primary></indexterm>gtk_icon_view_set_margin <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_icon_view_set_markup_column</primary></indexterm>gtk_icon_view_set_markup_column <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_icon_view_set_model</primary></indexterm>gtk_icon_view_set_model <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_icon_view_set_orientation</primary></indexterm>gtk_icon_view_set_orientation <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_icon_view_set_pixbuf_column</primary></indexterm>gtk_icon_view_set_pixbuf_column <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_icon_view_set_reorderable</primary></indexterm>gtk_icon_view_set_reorderable <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_icon_view_set_row_spacing</primary></indexterm>gtk_icon_view_set_row_spacing <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_icon_view_set_selection_mode</primary></indexterm>gtk_icon_view_set_selection_mode <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_icon_view_set_spacing</primary></indexterm>gtk_icon_view_set_spacing <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_icon_view_set_text_column</primary></indexterm>gtk_icon_view_set_text_column <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_icon_view_unselect_all</primary></indexterm>gtk_icon_view_unselect_all <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_icon_view_unselect_path</primary></indexterm>gtk_icon_view_unselect_path <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_icon_view_unset_model_drag_dest</primary></indexterm>gtk_icon_view_unset_model_drag_dest <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_icon_view_unset_model_drag_source</primary></indexterm>gtk_icon_view_unset_model_drag_source <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_identifier_get_type</primary></indexterm>gtk_identifier_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_im_context_delete_surrounding</primary></indexterm>gtk_im_context_delete_surrounding <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_im_context_filter_keypress</primary></indexterm>gtk_im_context_filter_keypress <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_im_context_focus_in</primary></indexterm>gtk_im_context_focus_in <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_im_context_focus_out</primary></indexterm>gtk_im_context_focus_out <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_im_context_get_preedit_string</primary></indexterm>gtk_im_context_get_preedit_string <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_im_context_get_surrounding</primary></indexterm>gtk_im_context_get_surrounding <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_im_context_get_type</primary></indexterm>gtk_im_context_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_im_context_reset</primary></indexterm>gtk_im_context_reset <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_im_context_set_client_window</primary></indexterm>gtk_im_context_set_client_window <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_im_context_set_cursor_location</primary></indexterm>gtk_im_context_set_cursor_location <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_im_context_set_surrounding</primary></indexterm>gtk_im_context_set_surrounding <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_im_context_set_use_preedit</primary></indexterm>gtk_im_context_set_use_preedit <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_im_context_simple_add_table</primary></indexterm>gtk_im_context_simple_add_table <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_im_context_simple_get_type</primary></indexterm>gtk_im_context_simple_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_im_context_simple_new</primary></indexterm>gtk_im_context_simple_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_im_multicontext_append_menuitems</primary></indexterm>gtk_im_multicontext_append_menuitems <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_im_multicontext_get_type</primary></indexterm>gtk_im_multicontext_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_im_multicontext_new</primary></indexterm>gtk_im_multicontext_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_im_preedit_style_get_type</primary></indexterm>gtk_im_preedit_style_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_im_status_style_get_type</primary></indexterm>gtk_im_status_style_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_image_clear</primary></indexterm>gtk_image_clear <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_image_get_animation</primary></indexterm>gtk_image_get_animation <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_image_get_icon_name</primary></indexterm>gtk_image_get_icon_name <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_image_get_icon_set</primary></indexterm>gtk_image_get_icon_set <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_image_get_image</primary></indexterm>gtk_image_get_image <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_image_get_pixbuf</primary></indexterm>gtk_image_get_pixbuf <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_image_get_pixel_size</primary></indexterm>gtk_image_get_pixel_size <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_image_get_pixmap</primary></indexterm>gtk_image_get_pixmap <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_image_get_stock</primary></indexterm>gtk_image_get_stock <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_image_get_storage_type</primary></indexterm>gtk_image_get_storage_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_image_get_type</primary></indexterm>gtk_image_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_image_menu_item_get_image</primary></indexterm>gtk_image_menu_item_get_image <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_image_menu_item_get_type</primary></indexterm>gtk_image_menu_item_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_image_menu_item_new</primary></indexterm>gtk_image_menu_item_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_image_menu_item_new_from_stock</primary></indexterm>gtk_image_menu_item_new_from_stock <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_image_menu_item_new_with_label</primary></indexterm>gtk_image_menu_item_new_with_label <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_image_menu_item_new_with_mnemonic</primary></indexterm>gtk_image_menu_item_new_with_mnemonic <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_image_menu_item_set_image</primary></indexterm>gtk_image_menu_item_set_image <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_image_new</primary></indexterm>gtk_image_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_image_new_from_animation</primary></indexterm>gtk_image_new_from_animation <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_image_new_from_file</primary></indexterm>gtk_image_new_from_file <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_image_new_from_icon_name</primary></indexterm>gtk_image_new_from_icon_name <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_image_new_from_icon_set</primary></indexterm>gtk_image_new_from_icon_set <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_image_new_from_image</primary></indexterm>gtk_image_new_from_image <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_image_new_from_pixbuf</primary></indexterm>gtk_image_new_from_pixbuf <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_image_new_from_pixmap</primary></indexterm>gtk_image_new_from_pixmap <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_image_new_from_stock</primary></indexterm>gtk_image_new_from_stock <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_image_set_from_animation</primary></indexterm>gtk_image_set_from_animation <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_image_set_from_file</primary></indexterm>gtk_image_set_from_file <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_image_set_from_icon_name</primary></indexterm>gtk_image_set_from_icon_name <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_image_set_from_icon_set</primary></indexterm>gtk_image_set_from_icon_set <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_image_set_from_image</primary></indexterm>gtk_image_set_from_image <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_image_set_from_pixbuf</primary></indexterm>gtk_image_set_from_pixbuf <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_image_set_from_pixmap</primary></indexterm>gtk_image_set_from_pixmap <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_image_set_from_stock</primary></indexterm>gtk_image_set_from_stock <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_image_set_pixel_size</primary></indexterm>gtk_image_set_pixel_size <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_image_type_get_type</primary></indexterm>gtk_image_type_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_init</primary></indexterm>gtk_init <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_init_add</primary></indexterm>gtk_init_add <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_init_check</primary></indexterm>gtk_init_check <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_init_with_args</primary></indexterm>gtk_init_with_args <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_input_dialog_get_type</primary></indexterm>gtk_input_dialog_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_input_dialog_new</primary></indexterm>gtk_input_dialog_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_invisible_get_screen</primary></indexterm>gtk_invisible_get_screen <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_invisible_get_type</primary></indexterm>gtk_invisible_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_invisible_new</primary></indexterm>gtk_invisible_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_invisible_new_for_screen</primary></indexterm>gtk_invisible_new_for_screen <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_invisible_set_screen</primary></indexterm>gtk_invisible_set_screen <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_item_deselect</primary></indexterm>gtk_item_deselect <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_item_get_type</primary></indexterm>gtk_item_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_item_select</primary></indexterm>gtk_item_select <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_item_toggle</primary></indexterm>gtk_item_toggle <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_justification_get_type</primary></indexterm>gtk_justification_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_key_snooper_install</primary></indexterm>gtk_key_snooper_install <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_key_snooper_remove</primary></indexterm>gtk_key_snooper_remove <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_label_get_angle</primary></indexterm>gtk_label_get_angle <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_label_get_attributes</primary></indexterm>gtk_label_get_attributes <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_label_get_ellipsize</primary></indexterm>gtk_label_get_ellipsize <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_label_get_justify</primary></indexterm>gtk_label_get_justify <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_label_get_label</primary></indexterm>gtk_label_get_label <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_label_get_layout</primary></indexterm>gtk_label_get_layout <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_label_get_layout_offsets</primary></indexterm>gtk_label_get_layout_offsets <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_label_get_line_wrap</primary></indexterm>gtk_label_get_line_wrap <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_label_get_max_width_chars</primary></indexterm>gtk_label_get_max_width_chars <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_label_get_mnemonic_keyval</primary></indexterm>gtk_label_get_mnemonic_keyval <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_label_get_mnemonic_widget</primary></indexterm>gtk_label_get_mnemonic_widget <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_label_get_selectable</primary></indexterm>gtk_label_get_selectable <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_label_get_selection_bounds</primary></indexterm>gtk_label_get_selection_bounds <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_label_get_single_line_mode</primary></indexterm>gtk_label_get_single_line_mode <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_label_get_text</primary></indexterm>gtk_label_get_text <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_label_get_type</primary></indexterm>gtk_label_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_label_get_use_markup</primary></indexterm>gtk_label_get_use_markup <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_label_get_use_underline</primary></indexterm>gtk_label_get_use_underline <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_label_get_width_chars</primary></indexterm>gtk_label_get_width_chars <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_label_new</primary></indexterm>gtk_label_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_label_new_with_mnemonic</primary></indexterm>gtk_label_new_with_mnemonic <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_label_select_region</primary></indexterm>gtk_label_select_region <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_label_set_angle</primary></indexterm>gtk_label_set_angle <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_label_set_attributes</primary></indexterm>gtk_label_set_attributes <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_label_set_ellipsize</primary></indexterm>gtk_label_set_ellipsize <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_label_set_justify</primary></indexterm>gtk_label_set_justify <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_label_set_label</primary></indexterm>gtk_label_set_label <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_label_set_line_wrap</primary></indexterm>gtk_label_set_line_wrap <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_label_set_markup</primary></indexterm>gtk_label_set_markup <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_label_set_markup_with_mnemonic</primary></indexterm>gtk_label_set_markup_with_mnemonic <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_label_set_max_width_chars</primary></indexterm>gtk_label_set_max_width_chars <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_label_set_mnemonic_widget</primary></indexterm>gtk_label_set_mnemonic_widget <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_label_set_pattern</primary></indexterm>gtk_label_set_pattern <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_label_set_selectable</primary></indexterm>gtk_label_set_selectable <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_label_set_single_line_mode</primary></indexterm>gtk_label_set_single_line_mode <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_label_set_text</primary></indexterm>gtk_label_set_text <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_label_set_text_with_mnemonic</primary></indexterm>gtk_label_set_text_with_mnemonic <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_label_set_use_markup</primary></indexterm>gtk_label_set_use_markup <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_label_set_use_underline</primary></indexterm>gtk_label_set_use_underline <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_label_set_width_chars</primary></indexterm>gtk_label_set_width_chars <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_layout_get_hadjustment</primary></indexterm>gtk_layout_get_hadjustment <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_layout_get_size</primary></indexterm>gtk_layout_get_size <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_layout_get_type</primary></indexterm>gtk_layout_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_layout_get_vadjustment</primary></indexterm>gtk_layout_get_vadjustment <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_layout_move</primary></indexterm>gtk_layout_move <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_layout_new</primary></indexterm>gtk_layout_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_layout_put</primary></indexterm>gtk_layout_put <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_layout_set_hadjustment</primary></indexterm>gtk_layout_set_hadjustment <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_layout_set_size</primary></indexterm>gtk_layout_set_size <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_layout_set_vadjustment</primary></indexterm>gtk_layout_set_vadjustment <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_list_store_append</primary></indexterm>gtk_list_store_append <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_list_store_clear</primary></indexterm>gtk_list_store_clear <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_list_store_get_type</primary></indexterm>gtk_list_store_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_list_store_insert</primary></indexterm>gtk_list_store_insert <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_list_store_insert_after</primary></indexterm>gtk_list_store_insert_after <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_list_store_insert_before</primary></indexterm>gtk_list_store_insert_before <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_list_store_insert_with_values</primary></indexterm>gtk_list_store_insert_with_values <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_list_store_insert_with_valuesv</primary></indexterm>gtk_list_store_insert_with_valuesv <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_list_store_iter_is_valid</primary></indexterm>gtk_list_store_iter_is_valid <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_list_store_move_after</primary></indexterm>gtk_list_store_move_after <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_list_store_move_before</primary></indexterm>gtk_list_store_move_before <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_list_store_new</primary></indexterm>gtk_list_store_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_list_store_newv</primary></indexterm>gtk_list_store_newv <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_list_store_prepend</primary></indexterm>gtk_list_store_prepend <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_list_store_remove</primary></indexterm>gtk_list_store_remove <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_list_store_reorder</primary></indexterm>gtk_list_store_reorder <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_list_store_set</primary></indexterm>gtk_list_store_set <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_list_store_set_column_types</primary></indexterm>gtk_list_store_set_column_types <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_list_store_set_valist</primary></indexterm>gtk_list_store_set_valist <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_list_store_set_value</primary></indexterm>gtk_list_store_set_value <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_list_store_swap</primary></indexterm>gtk_list_store_swap <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_main</primary></indexterm>gtk_main <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_main_do_event</primary></indexterm>gtk_main_do_event <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_main_iteration</primary></indexterm>gtk_main_iteration <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_main_iteration_do</primary></indexterm>gtk_main_iteration_do <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_main_level</primary></indexterm>gtk_main_level <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_main_quit</primary></indexterm>gtk_main_quit <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_match_type_get_type</primary></indexterm>gtk_match_type_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_menu_attach</primary></indexterm>gtk_menu_attach <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_menu_attach_to_widget</primary></indexterm>gtk_menu_attach_to_widget <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_menu_bar_get_child_pack_direction</primary></indexterm>gtk_menu_bar_get_child_pack_direction <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_menu_bar_get_pack_direction</primary></indexterm>gtk_menu_bar_get_pack_direction <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_menu_bar_get_type</primary></indexterm>gtk_menu_bar_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_menu_bar_new</primary></indexterm>gtk_menu_bar_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_menu_bar_set_child_pack_direction</primary></indexterm>gtk_menu_bar_set_child_pack_direction <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_menu_bar_set_pack_direction</primary></indexterm>gtk_menu_bar_set_pack_direction <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_menu_detach</primary></indexterm>gtk_menu_detach <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_menu_direction_type_get_type</primary></indexterm>gtk_menu_direction_type_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_menu_get_accel_group</primary></indexterm>gtk_menu_get_accel_group <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_menu_get_active</primary></indexterm>gtk_menu_get_active <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_menu_get_attach_widget</primary></indexterm>gtk_menu_get_attach_widget <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_menu_get_for_attach_widget</primary></indexterm>gtk_menu_get_for_attach_widget <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_menu_get_tearoff_state</primary></indexterm>gtk_menu_get_tearoff_state <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_menu_get_title</primary></indexterm>gtk_menu_get_title <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_menu_get_type</primary></indexterm>gtk_menu_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_menu_item_activate</primary></indexterm>gtk_menu_item_activate <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_menu_item_deselect</primary></indexterm>gtk_menu_item_deselect <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_menu_item_get_right_justified</primary></indexterm>gtk_menu_item_get_right_justified <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_menu_item_get_submenu</primary></indexterm>gtk_menu_item_get_submenu <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_menu_item_get_type</primary></indexterm>gtk_menu_item_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_menu_item_new</primary></indexterm>gtk_menu_item_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_menu_item_new_with_label</primary></indexterm>gtk_menu_item_new_with_label <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_menu_item_new_with_mnemonic</primary></indexterm>gtk_menu_item_new_with_mnemonic <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_menu_item_remove_submenu</primary></indexterm>gtk_menu_item_remove_submenu <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_menu_item_select</primary></indexterm>gtk_menu_item_select <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_menu_item_set_accel_path</primary></indexterm>gtk_menu_item_set_accel_path <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_menu_item_set_right_justified</primary></indexterm>gtk_menu_item_set_right_justified <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_menu_item_set_submenu</primary></indexterm>gtk_menu_item_set_submenu <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_menu_item_toggle_size_allocate</primary></indexterm>gtk_menu_item_toggle_size_allocate <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_menu_item_toggle_size_request</primary></indexterm>gtk_menu_item_toggle_size_request <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_menu_new</primary></indexterm>gtk_menu_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_menu_popdown</primary></indexterm>gtk_menu_popdown <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_menu_popup</primary></indexterm>gtk_menu_popup <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_menu_reorder_child</primary></indexterm>gtk_menu_reorder_child <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_menu_reposition</primary></indexterm>gtk_menu_reposition <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_menu_set_accel_group</primary></indexterm>gtk_menu_set_accel_group <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_menu_set_accel_path</primary></indexterm>gtk_menu_set_accel_path <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_menu_set_active</primary></indexterm>gtk_menu_set_active <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_menu_set_monitor</primary></indexterm>gtk_menu_set_monitor <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_menu_set_screen</primary></indexterm>gtk_menu_set_screen <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_menu_set_tearoff_state</primary></indexterm>gtk_menu_set_tearoff_state <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_menu_set_title</primary></indexterm>gtk_menu_set_title <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_menu_shell_activate_item</primary></indexterm>gtk_menu_shell_activate_item <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_menu_shell_append</primary></indexterm>gtk_menu_shell_append <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_menu_shell_cancel</primary></indexterm>gtk_menu_shell_cancel <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_menu_shell_deactivate</primary></indexterm>gtk_menu_shell_deactivate <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_menu_shell_deselect</primary></indexterm>gtk_menu_shell_deselect <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_menu_shell_get_take_focus</primary></indexterm>gtk_menu_shell_get_take_focus <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_menu_shell_get_type</primary></indexterm>gtk_menu_shell_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_menu_shell_insert</primary></indexterm>gtk_menu_shell_insert <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_menu_shell_prepend</primary></indexterm>gtk_menu_shell_prepend <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_menu_shell_select_first</primary></indexterm>gtk_menu_shell_select_first <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_menu_shell_select_item</primary></indexterm>gtk_menu_shell_select_item <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_menu_shell_set_take_focus</primary></indexterm>gtk_menu_shell_set_take_focus <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_menu_tool_button_get_menu</primary></indexterm>gtk_menu_tool_button_get_menu <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_menu_tool_button_get_type</primary></indexterm>gtk_menu_tool_button_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_menu_tool_button_new</primary></indexterm>gtk_menu_tool_button_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_menu_tool_button_new_from_stock</primary></indexterm>gtk_menu_tool_button_new_from_stock <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_menu_tool_button_set_arrow_tooltip</primary></indexterm>gtk_menu_tool_button_set_arrow_tooltip <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_menu_tool_button_set_menu</primary></indexterm>gtk_menu_tool_button_set_menu <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_message_dialog_format_secondary_markup</primary></indexterm>gtk_message_dialog_format_secondary_markup <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_message_dialog_format_secondary_text</primary></indexterm>gtk_message_dialog_format_secondary_text <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_message_dialog_get_type</primary></indexterm>gtk_message_dialog_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_message_dialog_new</primary></indexterm>gtk_message_dialog_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_message_dialog_new_with_markup</primary></indexterm>gtk_message_dialog_new_with_markup <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_message_dialog_set_markup</primary></indexterm>gtk_message_dialog_set_markup <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_message_type_get_type</primary></indexterm>gtk_message_type_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_metric_type_get_type</primary></indexterm>gtk_metric_type_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_misc_get_alignment</primary></indexterm>gtk_misc_get_alignment <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_misc_get_padding</primary></indexterm>gtk_misc_get_padding <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_misc_get_type</primary></indexterm>gtk_misc_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_misc_set_alignment</primary></indexterm>gtk_misc_set_alignment <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_misc_set_padding</primary></indexterm>gtk_misc_set_padding <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_movement_step_get_type</primary></indexterm>gtk_movement_step_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_notebook_append_page</primary></indexterm>gtk_notebook_append_page <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_notebook_append_page_menu</primary></indexterm>gtk_notebook_append_page_menu <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_notebook_get_current_page</primary></indexterm>gtk_notebook_get_current_page <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_notebook_get_menu_label</primary></indexterm>gtk_notebook_get_menu_label <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_notebook_get_menu_label_text</primary></indexterm>gtk_notebook_get_menu_label_text <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_notebook_get_n_pages</primary></indexterm>gtk_notebook_get_n_pages <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_notebook_get_nth_page</primary></indexterm>gtk_notebook_get_nth_page <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_notebook_get_scrollable</primary></indexterm>gtk_notebook_get_scrollable <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_notebook_get_show_border</primary></indexterm>gtk_notebook_get_show_border <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_notebook_get_show_tabs</primary></indexterm>gtk_notebook_get_show_tabs <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_notebook_get_tab_label</primary></indexterm>gtk_notebook_get_tab_label <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_notebook_get_tab_label_text</primary></indexterm>gtk_notebook_get_tab_label_text <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_notebook_get_tab_pos</primary></indexterm>gtk_notebook_get_tab_pos <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_notebook_get_type</primary></indexterm>gtk_notebook_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_notebook_insert_page</primary></indexterm>gtk_notebook_insert_page <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_notebook_insert_page_menu</primary></indexterm>gtk_notebook_insert_page_menu <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_notebook_new</primary></indexterm>gtk_notebook_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_notebook_next_page</primary></indexterm>gtk_notebook_next_page <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_notebook_page_num</primary></indexterm>gtk_notebook_page_num <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_notebook_popup_disable</primary></indexterm>gtk_notebook_popup_disable <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_notebook_popup_enable</primary></indexterm>gtk_notebook_popup_enable <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_notebook_prepend_page</primary></indexterm>gtk_notebook_prepend_page <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_notebook_prepend_page_menu</primary></indexterm>gtk_notebook_prepend_page_menu <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_notebook_prev_page</primary></indexterm>gtk_notebook_prev_page <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_notebook_query_tab_label_packing</primary></indexterm>gtk_notebook_query_tab_label_packing <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_notebook_remove_page</primary></indexterm>gtk_notebook_remove_page <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_notebook_reorder_child</primary></indexterm>gtk_notebook_reorder_child <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_notebook_set_current_page</primary></indexterm>gtk_notebook_set_current_page <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_notebook_set_menu_label</primary></indexterm>gtk_notebook_set_menu_label <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_notebook_set_menu_label_text</primary></indexterm>gtk_notebook_set_menu_label_text <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_notebook_set_scrollable</primary></indexterm>gtk_notebook_set_scrollable <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_notebook_set_show_border</primary></indexterm>gtk_notebook_set_show_border <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_notebook_set_show_tabs</primary></indexterm>gtk_notebook_set_show_tabs <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_notebook_set_tab_label</primary></indexterm>gtk_notebook_set_tab_label <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_notebook_set_tab_label_packing</primary></indexterm>gtk_notebook_set_tab_label_packing <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_notebook_set_tab_label_text</primary></indexterm>gtk_notebook_set_tab_label_text <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_notebook_set_tab_pos</primary></indexterm>gtk_notebook_set_tab_pos <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_notebook_tab_get_type</primary></indexterm>gtk_notebook_tab_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_object_destroy</primary></indexterm>gtk_object_destroy <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_object_flags_get_type</primary></indexterm>gtk_object_flags_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_object_get_type</primary></indexterm>gtk_object_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_object_sink</primary></indexterm>gtk_object_sink <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_orientation_get_type</primary></indexterm>gtk_orientation_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_pack_direction_get_type</primary></indexterm>gtk_pack_direction_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_pack_type_get_type</primary></indexterm>gtk_pack_type_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_paint_arrow</primary></indexterm>gtk_paint_arrow <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_paint_box</primary></indexterm>gtk_paint_box <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_paint_box_gap</primary></indexterm>gtk_paint_box_gap <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_paint_check</primary></indexterm>gtk_paint_check <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_paint_diamond</primary></indexterm>gtk_paint_diamond <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_paint_expander</primary></indexterm>gtk_paint_expander <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_paint_extension</primary></indexterm>gtk_paint_extension <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_paint_flat_box</primary></indexterm>gtk_paint_flat_box <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_paint_focus</primary></indexterm>gtk_paint_focus <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_paint_handle</primary></indexterm>gtk_paint_handle <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_paint_hline</primary></indexterm>gtk_paint_hline <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_paint_layout</primary></indexterm>gtk_paint_layout <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_paint_option</primary></indexterm>gtk_paint_option <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_paint_polygon</primary></indexterm>gtk_paint_polygon <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_paint_resize_grip</primary></indexterm>gtk_paint_resize_grip <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_paint_shadow</primary></indexterm>gtk_paint_shadow <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_paint_shadow_gap</primary></indexterm>gtk_paint_shadow_gap <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_paint_slider</primary></indexterm>gtk_paint_slider <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_paint_tab</primary></indexterm>gtk_paint_tab <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_paint_vline</primary></indexterm>gtk_paint_vline <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_paned_add1</primary></indexterm>gtk_paned_add1 <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_paned_add2</primary></indexterm>gtk_paned_add2 <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_paned_get_child1</primary></indexterm>gtk_paned_get_child1 <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_paned_get_child2</primary></indexterm>gtk_paned_get_child2 <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_paned_get_position</primary></indexterm>gtk_paned_get_position <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_paned_get_type</primary></indexterm>gtk_paned_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_paned_pack1</primary></indexterm>gtk_paned_pack1 <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_paned_pack2</primary></indexterm>gtk_paned_pack2 <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_paned_set_position</primary></indexterm>gtk_paned_set_position <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_parse_args</primary></indexterm>gtk_parse_args <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_path_priority_type_get_type</primary></indexterm>gtk_path_priority_type_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_path_type_get_type</primary></indexterm>gtk_path_type_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_plug_construct</primary></indexterm>gtk_plug_construct <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_plug_construct_for_display</primary></indexterm>gtk_plug_construct_for_display <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_plug_get_id</primary></indexterm>gtk_plug_get_id <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_plug_get_type</primary></indexterm>gtk_plug_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_plug_new</primary></indexterm>gtk_plug_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_plug_new_for_display</primary></indexterm>gtk_plug_new_for_display <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_policy_type_get_type</primary></indexterm>gtk_policy_type_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_position_type_get_type</primary></indexterm>gtk_position_type_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_progress_bar_get_ellipsize</primary></indexterm>gtk_progress_bar_get_ellipsize <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_progress_bar_get_fraction</primary></indexterm>gtk_progress_bar_get_fraction <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_progress_bar_get_orientation</primary></indexterm>gtk_progress_bar_get_orientation <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_progress_bar_get_pulse_step</primary></indexterm>gtk_progress_bar_get_pulse_step <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_progress_bar_get_text</primary></indexterm>gtk_progress_bar_get_text <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_progress_bar_get_type</primary></indexterm>gtk_progress_bar_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_progress_bar_new</primary></indexterm>gtk_progress_bar_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_progress_bar_orientation_get_type</primary></indexterm>gtk_progress_bar_orientation_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_progress_bar_pulse</primary></indexterm>gtk_progress_bar_pulse <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_progress_bar_set_ellipsize</primary></indexterm>gtk_progress_bar_set_ellipsize <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_progress_bar_set_fraction</primary></indexterm>gtk_progress_bar_set_fraction <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_progress_bar_set_orientation</primary></indexterm>gtk_progress_bar_set_orientation <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_progress_bar_set_pulse_step</primary></indexterm>gtk_progress_bar_set_pulse_step <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_progress_bar_set_text</primary></indexterm>gtk_progress_bar_set_text <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_progress_bar_style_get_type</primary></indexterm>gtk_progress_bar_style_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_propagate_event</primary></indexterm>gtk_propagate_event <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_quit_add</primary></indexterm>gtk_quit_add <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_quit_add_destroy</primary></indexterm>gtk_quit_add_destroy <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_quit_add_full</primary></indexterm>gtk_quit_add_full <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_quit_remove</primary></indexterm>gtk_quit_remove <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_quit_remove_by_data</primary></indexterm>gtk_quit_remove_by_data <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_radio_action_get_current_value</primary></indexterm>gtk_radio_action_get_current_value <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_radio_action_get_group</primary></indexterm>gtk_radio_action_get_group <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_radio_action_get_type</primary></indexterm>gtk_radio_action_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_radio_action_new</primary></indexterm>gtk_radio_action_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_radio_action_set_group</primary></indexterm>gtk_radio_action_set_group <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_radio_button_get_group</primary></indexterm>gtk_radio_button_get_group <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_radio_button_get_type</primary></indexterm>gtk_radio_button_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_radio_button_new</primary></indexterm>gtk_radio_button_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_radio_button_new_from_widget</primary></indexterm>gtk_radio_button_new_from_widget <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_radio_button_new_with_label</primary></indexterm>gtk_radio_button_new_with_label <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_radio_button_new_with_label_from_widget</primary></indexterm>gtk_radio_button_new_with_label_from_widget <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_radio_button_new_with_mnemonic</primary></indexterm>gtk_radio_button_new_with_mnemonic <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_radio_button_new_with_mnemonic_from_widget</primary></indexterm>gtk_radio_button_new_with_mnemonic_from_widget <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_radio_button_set_group</primary></indexterm>gtk_radio_button_set_group <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_radio_menu_item_get_group</primary></indexterm>gtk_radio_menu_item_get_group <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_radio_menu_item_get_type</primary></indexterm>gtk_radio_menu_item_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_radio_menu_item_new</primary></indexterm>gtk_radio_menu_item_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_radio_menu_item_new_from_widget</primary></indexterm>gtk_radio_menu_item_new_from_widget <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_radio_menu_item_new_with_label</primary></indexterm>gtk_radio_menu_item_new_with_label <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_radio_menu_item_new_with_label_from_widget</primary></indexterm>gtk_radio_menu_item_new_with_label_from_widget <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_radio_menu_item_new_with_mnemonic</primary></indexterm>gtk_radio_menu_item_new_with_mnemonic <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_radio_menu_item_new_with_mnemonic_from_widget</primary></indexterm>gtk_radio_menu_item_new_with_mnemonic_from_widget <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_radio_menu_item_set_group</primary></indexterm>gtk_radio_menu_item_set_group <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_radio_tool_button_get_group</primary></indexterm>gtk_radio_tool_button_get_group <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_radio_tool_button_get_type</primary></indexterm>gtk_radio_tool_button_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_radio_tool_button_new</primary></indexterm>gtk_radio_tool_button_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_radio_tool_button_new_from_stock</primary></indexterm>gtk_radio_tool_button_new_from_stock <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_radio_tool_button_new_from_widget</primary></indexterm>gtk_radio_tool_button_new_from_widget <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_radio_tool_button_new_with_stock_from_widget</primary></indexterm>gtk_radio_tool_button_new_with_stock_from_widget <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_radio_tool_button_set_group</primary></indexterm>gtk_radio_tool_button_set_group <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_range_get_adjustment</primary></indexterm>gtk_range_get_adjustment <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_range_get_inverted</primary></indexterm>gtk_range_get_inverted <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_range_get_type</primary></indexterm>gtk_range_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_range_get_update_policy</primary></indexterm>gtk_range_get_update_policy <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_range_get_value</primary></indexterm>gtk_range_get_value <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_range_set_adjustment</primary></indexterm>gtk_range_set_adjustment <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_range_set_increments</primary></indexterm>gtk_range_set_increments <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_range_set_inverted</primary></indexterm>gtk_range_set_inverted <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_range_set_range</primary></indexterm>gtk_range_set_range <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_range_set_update_policy</primary></indexterm>gtk_range_set_update_policy <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_range_set_value</primary></indexterm>gtk_range_set_value <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_rc_add_default_file</primary></indexterm>gtk_rc_add_default_file <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_rc_find_module_in_path</primary></indexterm>gtk_rc_find_module_in_path <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_rc_find_pixmap_in_path</primary></indexterm>gtk_rc_find_pixmap_in_path <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_rc_flags_get_type</primary></indexterm>gtk_rc_flags_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_rc_get_default_files</primary></indexterm>gtk_rc_get_default_files <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_rc_get_im_module_file</primary></indexterm>gtk_rc_get_im_module_file <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_rc_get_im_module_path</primary></indexterm>gtk_rc_get_im_module_path <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_rc_get_module_dir</primary></indexterm>gtk_rc_get_module_dir <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_rc_get_style</primary></indexterm>gtk_rc_get_style <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_rc_get_style_by_paths</primary></indexterm>gtk_rc_get_style_by_paths <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_rc_get_theme_dir</primary></indexterm>gtk_rc_get_theme_dir <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_rc_parse</primary></indexterm>gtk_rc_parse <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_rc_parse_color</primary></indexterm>gtk_rc_parse_color <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_rc_parse_priority</primary></indexterm>gtk_rc_parse_priority <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_rc_parse_state</primary></indexterm>gtk_rc_parse_state <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_rc_parse_string</primary></indexterm>gtk_rc_parse_string <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_rc_property_parse_border</primary></indexterm>gtk_rc_property_parse_border <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_rc_property_parse_color</primary></indexterm>gtk_rc_property_parse_color <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_rc_property_parse_enum</primary></indexterm>gtk_rc_property_parse_enum <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_rc_property_parse_flags</primary></indexterm>gtk_rc_property_parse_flags <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_rc_property_parse_requisition</primary></indexterm>gtk_rc_property_parse_requisition <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_rc_reparse_all</primary></indexterm>gtk_rc_reparse_all <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_rc_reparse_all_for_settings</primary></indexterm>gtk_rc_reparse_all_for_settings <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_rc_reset_styles</primary></indexterm>gtk_rc_reset_styles <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_rc_scanner_new</primary></indexterm>gtk_rc_scanner_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_rc_set_default_files</primary></indexterm>gtk_rc_set_default_files <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_rc_style_copy</primary></indexterm>gtk_rc_style_copy <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_rc_style_get_type</primary></indexterm>gtk_rc_style_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_rc_style_new</primary></indexterm>gtk_rc_style_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_rc_style_ref</primary></indexterm>gtk_rc_style_ref <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_rc_style_unref</primary></indexterm>gtk_rc_style_unref <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_rc_token_type_get_type</primary></indexterm>gtk_rc_token_type_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_relief_style_get_type</primary></indexterm>gtk_relief_style_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_requisition_copy</primary></indexterm>gtk_requisition_copy <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_requisition_free</primary></indexterm>gtk_requisition_free <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_requisition_get_type</primary></indexterm>gtk_requisition_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_resize_mode_get_type</primary></indexterm>gtk_resize_mode_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_response_type_get_type</primary></indexterm>gtk_response_type_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_ruler_draw_pos</primary></indexterm>gtk_ruler_draw_pos <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_ruler_draw_ticks</primary></indexterm>gtk_ruler_draw_ticks <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_ruler_get_metric</primary></indexterm>gtk_ruler_get_metric <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_ruler_get_range</primary></indexterm>gtk_ruler_get_range <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_ruler_get_type</primary></indexterm>gtk_ruler_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_ruler_set_metric</primary></indexterm>gtk_ruler_set_metric <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_ruler_set_range</primary></indexterm>gtk_ruler_set_range <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_scale_get_digits</primary></indexterm>gtk_scale_get_digits <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_scale_get_draw_value</primary></indexterm>gtk_scale_get_draw_value <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_scale_get_layout</primary></indexterm>gtk_scale_get_layout <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_scale_get_layout_offsets</primary></indexterm>gtk_scale_get_layout_offsets <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_scale_get_type</primary></indexterm>gtk_scale_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_scale_get_value_pos</primary></indexterm>gtk_scale_get_value_pos <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_scale_set_digits</primary></indexterm>gtk_scale_set_digits <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_scale_set_draw_value</primary></indexterm>gtk_scale_set_draw_value <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_scale_set_value_pos</primary></indexterm>gtk_scale_set_value_pos <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_scroll_step_get_type</primary></indexterm>gtk_scroll_step_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_scroll_type_get_type</primary></indexterm>gtk_scroll_type_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_scrollbar_get_type</primary></indexterm>gtk_scrollbar_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_scrolled_window_add_with_viewport</primary></indexterm>gtk_scrolled_window_add_with_viewport <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_scrolled_window_get_hadjustment</primary></indexterm>gtk_scrolled_window_get_hadjustment <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_scrolled_window_get_hscrollbar</primary></indexterm>gtk_scrolled_window_get_hscrollbar <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_scrolled_window_get_placement</primary></indexterm>gtk_scrolled_window_get_placement <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_scrolled_window_get_policy</primary></indexterm>gtk_scrolled_window_get_policy <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_scrolled_window_get_shadow_type</primary></indexterm>gtk_scrolled_window_get_shadow_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_scrolled_window_get_type</primary></indexterm>gtk_scrolled_window_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_scrolled_window_get_vadjustment</primary></indexterm>gtk_scrolled_window_get_vadjustment <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_scrolled_window_get_vscrollbar</primary></indexterm>gtk_scrolled_window_get_vscrollbar <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_scrolled_window_new</primary></indexterm>gtk_scrolled_window_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_scrolled_window_set_hadjustment</primary></indexterm>gtk_scrolled_window_set_hadjustment <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_scrolled_window_set_placement</primary></indexterm>gtk_scrolled_window_set_placement <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_scrolled_window_set_policy</primary></indexterm>gtk_scrolled_window_set_policy <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_scrolled_window_set_shadow_type</primary></indexterm>gtk_scrolled_window_set_shadow_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_scrolled_window_set_vadjustment</primary></indexterm>gtk_scrolled_window_set_vadjustment <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_selection_add_target</primary></indexterm>gtk_selection_add_target <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_selection_add_targets</primary></indexterm>gtk_selection_add_targets <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_selection_clear_targets</primary></indexterm>gtk_selection_clear_targets <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_selection_convert</primary></indexterm>gtk_selection_convert <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_selection_data_copy</primary></indexterm>gtk_selection_data_copy <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_selection_data_free</primary></indexterm>gtk_selection_data_free <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_selection_data_get_pixbuf</primary></indexterm>gtk_selection_data_get_pixbuf <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_selection_data_get_targets</primary></indexterm>gtk_selection_data_get_targets <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_selection_data_get_text</primary></indexterm>gtk_selection_data_get_text <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_selection_data_get_type</primary></indexterm>gtk_selection_data_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_selection_data_get_uris</primary></indexterm>gtk_selection_data_get_uris <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_selection_data_set</primary></indexterm>gtk_selection_data_set <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_selection_data_set_pixbuf</primary></indexterm>gtk_selection_data_set_pixbuf <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_selection_data_set_text</primary></indexterm>gtk_selection_data_set_text <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_selection_data_set_uris</primary></indexterm>gtk_selection_data_set_uris <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_selection_data_targets_include_image</primary></indexterm>gtk_selection_data_targets_include_image <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_selection_data_targets_include_text</primary></indexterm>gtk_selection_data_targets_include_text <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_selection_mode_get_type</primary></indexterm>gtk_selection_mode_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_selection_owner_set</primary></indexterm>gtk_selection_owner_set <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_selection_owner_set_for_display</primary></indexterm>gtk_selection_owner_set_for_display <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_selection_remove_all</primary></indexterm>gtk_selection_remove_all <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_separator_get_type</primary></indexterm>gtk_separator_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_separator_menu_item_get_type</primary></indexterm>gtk_separator_menu_item_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_separator_menu_item_new</primary></indexterm>gtk_separator_menu_item_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_separator_tool_item_get_draw</primary></indexterm>gtk_separator_tool_item_get_draw <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_separator_tool_item_get_type</primary></indexterm>gtk_separator_tool_item_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_separator_tool_item_new</primary></indexterm>gtk_separator_tool_item_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_separator_tool_item_set_draw</primary></indexterm>gtk_separator_tool_item_set_draw <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_set_locale</primary></indexterm>gtk_set_locale <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_settings_get_default</primary></indexterm>gtk_settings_get_default <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_settings_get_for_screen</primary></indexterm>gtk_settings_get_for_screen <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_settings_get_type</primary></indexterm>gtk_settings_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_settings_install_property</primary></indexterm>gtk_settings_install_property <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_settings_install_property_parser</primary></indexterm>gtk_settings_install_property_parser <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_settings_set_double_property</primary></indexterm>gtk_settings_set_double_property <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_settings_set_long_property</primary></indexterm>gtk_settings_set_long_property <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_settings_set_property_value</primary></indexterm>gtk_settings_set_property_value <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_settings_set_string_property</primary></indexterm>gtk_settings_set_string_property <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_shadow_type_get_type</primary></indexterm>gtk_shadow_type_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_show_about_dialog</primary></indexterm>gtk_show_about_dialog <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_side_type_get_type</primary></indexterm>gtk_side_type_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_signal_run_type_get_type</primary></indexterm>gtk_signal_run_type_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_size_group_add_widget</primary></indexterm>gtk_size_group_add_widget <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_size_group_get_ignore_hidden</primary></indexterm>gtk_size_group_get_ignore_hidden <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_size_group_get_mode</primary></indexterm>gtk_size_group_get_mode <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_size_group_get_type</primary></indexterm>gtk_size_group_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_size_group_mode_get_type</primary></indexterm>gtk_size_group_mode_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_size_group_new</primary></indexterm>gtk_size_group_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_size_group_remove_widget</primary></indexterm>gtk_size_group_remove_widget <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_size_group_set_ignore_hidden</primary></indexterm>gtk_size_group_set_ignore_hidden <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_size_group_set_mode</primary></indexterm>gtk_size_group_set_mode <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_socket_add_id</primary></indexterm>gtk_socket_add_id <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_socket_get_id</primary></indexterm>gtk_socket_get_id <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_socket_get_type</primary></indexterm>gtk_socket_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_socket_new</primary></indexterm>gtk_socket_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_sort_type_get_type</primary></indexterm>gtk_sort_type_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_spin_button_configure</primary></indexterm>gtk_spin_button_configure <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_spin_button_get_adjustment</primary></indexterm>gtk_spin_button_get_adjustment <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_spin_button_get_digits</primary></indexterm>gtk_spin_button_get_digits <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_spin_button_get_increments</primary></indexterm>gtk_spin_button_get_increments <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_spin_button_get_numeric</primary></indexterm>gtk_spin_button_get_numeric <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_spin_button_get_range</primary></indexterm>gtk_spin_button_get_range <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_spin_button_get_snap_to_ticks</primary></indexterm>gtk_spin_button_get_snap_to_ticks <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_spin_button_get_type</primary></indexterm>gtk_spin_button_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_spin_button_get_update_policy</primary></indexterm>gtk_spin_button_get_update_policy <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_spin_button_get_value</primary></indexterm>gtk_spin_button_get_value <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_spin_button_get_value_as_int</primary></indexterm>gtk_spin_button_get_value_as_int <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_spin_button_get_wrap</primary></indexterm>gtk_spin_button_get_wrap <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_spin_button_new</primary></indexterm>gtk_spin_button_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_spin_button_new_with_range</primary></indexterm>gtk_spin_button_new_with_range <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_spin_button_set_adjustment</primary></indexterm>gtk_spin_button_set_adjustment <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_spin_button_set_digits</primary></indexterm>gtk_spin_button_set_digits <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_spin_button_set_increments</primary></indexterm>gtk_spin_button_set_increments <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_spin_button_set_numeric</primary></indexterm>gtk_spin_button_set_numeric <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_spin_button_set_range</primary></indexterm>gtk_spin_button_set_range <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_spin_button_set_snap_to_ticks</primary></indexterm>gtk_spin_button_set_snap_to_ticks <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_spin_button_set_update_policy</primary></indexterm>gtk_spin_button_set_update_policy <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_spin_button_set_value</primary></indexterm>gtk_spin_button_set_value <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_spin_button_set_wrap</primary></indexterm>gtk_spin_button_set_wrap <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_spin_button_spin</primary></indexterm>gtk_spin_button_spin <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_spin_button_update</primary></indexterm>gtk_spin_button_update <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_spin_button_update_policy_get_type</primary></indexterm>gtk_spin_button_update_policy_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_spin_type_get_type</primary></indexterm>gtk_spin_type_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_state_type_get_type</primary></indexterm>gtk_state_type_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_statusbar_get_context_id</primary></indexterm>gtk_statusbar_get_context_id <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_statusbar_get_has_resize_grip</primary></indexterm>gtk_statusbar_get_has_resize_grip <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_statusbar_get_type</primary></indexterm>gtk_statusbar_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_statusbar_new</primary></indexterm>gtk_statusbar_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_statusbar_pop</primary></indexterm>gtk_statusbar_pop <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_statusbar_push</primary></indexterm>gtk_statusbar_push <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_statusbar_remove</primary></indexterm>gtk_statusbar_remove <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_statusbar_set_has_resize_grip</primary></indexterm>gtk_statusbar_set_has_resize_grip <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_stock_add</primary></indexterm>gtk_stock_add <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_stock_add_static</primary></indexterm>gtk_stock_add_static <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_stock_item_copy</primary></indexterm>gtk_stock_item_copy <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_stock_item_free</primary></indexterm>gtk_stock_item_free <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_stock_list_ids</primary></indexterm>gtk_stock_list_ids <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_stock_lookup</primary></indexterm>gtk_stock_lookup <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_stock_set_translate_func</primary></indexterm>gtk_stock_set_translate_func <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_style_apply_default_background</primary></indexterm>gtk_style_apply_default_background <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_style_attach</primary></indexterm>gtk_style_attach <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_style_copy</primary></indexterm>gtk_style_copy <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_style_detach</primary></indexterm>gtk_style_detach <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_style_get_type</primary></indexterm>gtk_style_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_style_lookup_icon_set</primary></indexterm>gtk_style_lookup_icon_set <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_style_new</primary></indexterm>gtk_style_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_style_render_icon</primary></indexterm>gtk_style_render_icon <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_style_set_background</primary></indexterm>gtk_style_set_background <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_submenu_direction_get_type</primary></indexterm>gtk_submenu_direction_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_submenu_placement_get_type</primary></indexterm>gtk_submenu_placement_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_table_attach</primary></indexterm>gtk_table_attach <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_table_attach_defaults</primary></indexterm>gtk_table_attach_defaults <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_table_get_col_spacing</primary></indexterm>gtk_table_get_col_spacing <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_table_get_default_col_spacing</primary></indexterm>gtk_table_get_default_col_spacing <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_table_get_default_row_spacing</primary></indexterm>gtk_table_get_default_row_spacing <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_table_get_homogeneous</primary></indexterm>gtk_table_get_homogeneous <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_table_get_row_spacing</primary></indexterm>gtk_table_get_row_spacing <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_table_get_type</primary></indexterm>gtk_table_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_table_new</primary></indexterm>gtk_table_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_table_resize</primary></indexterm>gtk_table_resize <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_table_set_col_spacing</primary></indexterm>gtk_table_set_col_spacing <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_table_set_col_spacings</primary></indexterm>gtk_table_set_col_spacings <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_table_set_homogeneous</primary></indexterm>gtk_table_set_homogeneous <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_table_set_row_spacing</primary></indexterm>gtk_table_set_row_spacing <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_table_set_row_spacings</primary></indexterm>gtk_table_set_row_spacings <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_target_flags_get_type</primary></indexterm>gtk_target_flags_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_target_list_add</primary></indexterm>gtk_target_list_add <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_target_list_add_image_targets</primary></indexterm>gtk_target_list_add_image_targets <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_target_list_add_table</primary></indexterm>gtk_target_list_add_table <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_target_list_add_text_targets</primary></indexterm>gtk_target_list_add_text_targets <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_target_list_add_uri_targets</primary></indexterm>gtk_target_list_add_uri_targets <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_target_list_find</primary></indexterm>gtk_target_list_find <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_target_list_new</primary></indexterm>gtk_target_list_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_target_list_ref</primary></indexterm>gtk_target_list_ref <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_target_list_remove</primary></indexterm>gtk_target_list_remove <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_target_list_unref</primary></indexterm>gtk_target_list_unref <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tearoff_menu_item_get_type</primary></indexterm>gtk_tearoff_menu_item_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tearoff_menu_item_new</primary></indexterm>gtk_tearoff_menu_item_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_text_attributes_copy</primary></indexterm>gtk_text_attributes_copy <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_text_attributes_copy_values</primary></indexterm>gtk_text_attributes_copy_values <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_text_attributes_get_type</primary></indexterm>gtk_text_attributes_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_text_attributes_new</primary></indexterm>gtk_text_attributes_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_text_attributes_ref</primary></indexterm>gtk_text_attributes_ref <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_text_attributes_unref</primary></indexterm>gtk_text_attributes_unref <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_text_buffer_add_selection_clipboard</primary></indexterm>gtk_text_buffer_add_selection_clipboard <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_text_buffer_apply_tag</primary></indexterm>gtk_text_buffer_apply_tag <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_text_buffer_apply_tag_by_name</primary></indexterm>gtk_text_buffer_apply_tag_by_name <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_text_buffer_backspace</primary></indexterm>gtk_text_buffer_backspace <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_text_buffer_begin_user_action</primary></indexterm>gtk_text_buffer_begin_user_action <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_text_buffer_copy_clipboard</primary></indexterm>gtk_text_buffer_copy_clipboard <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_text_buffer_create_child_anchor</primary></indexterm>gtk_text_buffer_create_child_anchor <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_text_buffer_create_mark</primary></indexterm>gtk_text_buffer_create_mark <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_text_buffer_create_tag</primary></indexterm>gtk_text_buffer_create_tag <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_text_buffer_cut_clipboard</primary></indexterm>gtk_text_buffer_cut_clipboard <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_text_buffer_delete</primary></indexterm>gtk_text_buffer_delete <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_text_buffer_delete_interactive</primary></indexterm>gtk_text_buffer_delete_interactive <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_text_buffer_delete_mark</primary></indexterm>gtk_text_buffer_delete_mark <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_text_buffer_delete_mark_by_name</primary></indexterm>gtk_text_buffer_delete_mark_by_name <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_text_buffer_delete_selection</primary></indexterm>gtk_text_buffer_delete_selection <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_text_buffer_end_user_action</primary></indexterm>gtk_text_buffer_end_user_action <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_text_buffer_get_bounds</primary></indexterm>gtk_text_buffer_get_bounds <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_text_buffer_get_char_count</primary></indexterm>gtk_text_buffer_get_char_count <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_text_buffer_get_end_iter</primary></indexterm>gtk_text_buffer_get_end_iter <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_text_buffer_get_insert</primary></indexterm>gtk_text_buffer_get_insert <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_text_buffer_get_iter_at_child_anchor</primary></indexterm>gtk_text_buffer_get_iter_at_child_anchor <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_text_buffer_get_iter_at_line</primary></indexterm>gtk_text_buffer_get_iter_at_line <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_text_buffer_get_iter_at_line_index</primary></indexterm>gtk_text_buffer_get_iter_at_line_index <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_text_buffer_get_iter_at_line_offset</primary></indexterm>gtk_text_buffer_get_iter_at_line_offset <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_text_buffer_get_iter_at_mark</primary></indexterm>gtk_text_buffer_get_iter_at_mark <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_text_buffer_get_iter_at_offset</primary></indexterm>gtk_text_buffer_get_iter_at_offset <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_text_buffer_get_line_count</primary></indexterm>gtk_text_buffer_get_line_count <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_text_buffer_get_mark</primary></indexterm>gtk_text_buffer_get_mark <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_text_buffer_get_modified</primary></indexterm>gtk_text_buffer_get_modified <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_text_buffer_get_selection_bound</primary></indexterm>gtk_text_buffer_get_selection_bound <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_text_buffer_get_selection_bounds</primary></indexterm>gtk_text_buffer_get_selection_bounds <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_text_buffer_get_slice</primary></indexterm>gtk_text_buffer_get_slice <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_text_buffer_get_start_iter</primary></indexterm>gtk_text_buffer_get_start_iter <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_text_buffer_get_tag_table</primary></indexterm>gtk_text_buffer_get_tag_table <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_text_buffer_get_text</primary></indexterm>gtk_text_buffer_get_text <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_text_buffer_get_type</primary></indexterm>gtk_text_buffer_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_text_buffer_insert</primary></indexterm>gtk_text_buffer_insert <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_text_buffer_insert_at_cursor</primary></indexterm>gtk_text_buffer_insert_at_cursor <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_text_buffer_insert_child_anchor</primary></indexterm>gtk_text_buffer_insert_child_anchor <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_text_buffer_insert_interactive</primary></indexterm>gtk_text_buffer_insert_interactive <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_text_buffer_insert_interactive_at_cursor</primary></indexterm>gtk_text_buffer_insert_interactive_at_cursor <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_text_buffer_insert_pixbuf</primary></indexterm>gtk_text_buffer_insert_pixbuf <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_text_buffer_insert_range</primary></indexterm>gtk_text_buffer_insert_range <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_text_buffer_insert_range_interactive</primary></indexterm>gtk_text_buffer_insert_range_interactive <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_text_buffer_insert_with_tags</primary></indexterm>gtk_text_buffer_insert_with_tags <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_text_buffer_insert_with_tags_by_name</primary></indexterm>gtk_text_buffer_insert_with_tags_by_name <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_text_buffer_move_mark</primary></indexterm>gtk_text_buffer_move_mark <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_text_buffer_move_mark_by_name</primary></indexterm>gtk_text_buffer_move_mark_by_name <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_text_buffer_new</primary></indexterm>gtk_text_buffer_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_text_buffer_paste_clipboard</primary></indexterm>gtk_text_buffer_paste_clipboard <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_text_buffer_place_cursor</primary></indexterm>gtk_text_buffer_place_cursor <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_text_buffer_remove_all_tags</primary></indexterm>gtk_text_buffer_remove_all_tags <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_text_buffer_remove_selection_clipboard</primary></indexterm>gtk_text_buffer_remove_selection_clipboard <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_text_buffer_remove_tag</primary></indexterm>gtk_text_buffer_remove_tag <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_text_buffer_remove_tag_by_name</primary></indexterm>gtk_text_buffer_remove_tag_by_name <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_text_buffer_select_range</primary></indexterm>gtk_text_buffer_select_range <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_text_buffer_set_modified</primary></indexterm>gtk_text_buffer_set_modified <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_text_buffer_set_text</primary></indexterm>gtk_text_buffer_set_text <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_text_child_anchor_get_deleted</primary></indexterm>gtk_text_child_anchor_get_deleted <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_text_child_anchor_get_type</primary></indexterm>gtk_text_child_anchor_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_text_child_anchor_get_widgets</primary></indexterm>gtk_text_child_anchor_get_widgets <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_text_child_anchor_new</primary></indexterm>gtk_text_child_anchor_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_text_direction_get_type</primary></indexterm>gtk_text_direction_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_text_iter_backward_char</primary></indexterm>gtk_text_iter_backward_char <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_text_iter_backward_chars</primary></indexterm>gtk_text_iter_backward_chars <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_text_iter_backward_cursor_position</primary></indexterm>gtk_text_iter_backward_cursor_position <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_text_iter_backward_cursor_positions</primary></indexterm>gtk_text_iter_backward_cursor_positions <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_text_iter_backward_find_char</primary></indexterm>gtk_text_iter_backward_find_char <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_text_iter_backward_line</primary></indexterm>gtk_text_iter_backward_line <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_text_iter_backward_lines</primary></indexterm>gtk_text_iter_backward_lines <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_text_iter_backward_search</primary></indexterm>gtk_text_iter_backward_search <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_text_iter_backward_sentence_start</primary></indexterm>gtk_text_iter_backward_sentence_start <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_text_iter_backward_sentence_starts</primary></indexterm>gtk_text_iter_backward_sentence_starts <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_text_iter_backward_to_tag_toggle</primary></indexterm>gtk_text_iter_backward_to_tag_toggle <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_text_iter_backward_visible_cursor_position</primary></indexterm>gtk_text_iter_backward_visible_cursor_position <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_text_iter_backward_visible_cursor_positions</primary></indexterm>gtk_text_iter_backward_visible_cursor_positions <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_text_iter_backward_visible_line</primary></indexterm>gtk_text_iter_backward_visible_line <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_text_iter_backward_visible_lines</primary></indexterm>gtk_text_iter_backward_visible_lines <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_text_iter_backward_visible_word_start</primary></indexterm>gtk_text_iter_backward_visible_word_start <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_text_iter_backward_visible_word_starts</primary></indexterm>gtk_text_iter_backward_visible_word_starts <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_text_iter_backward_word_start</primary></indexterm>gtk_text_iter_backward_word_start <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_text_iter_backward_word_starts</primary></indexterm>gtk_text_iter_backward_word_starts <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_text_iter_begins_tag</primary></indexterm>gtk_text_iter_begins_tag <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_text_iter_can_insert</primary></indexterm>gtk_text_iter_can_insert <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_text_iter_compare</primary></indexterm>gtk_text_iter_compare <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_text_iter_copy</primary></indexterm>gtk_text_iter_copy <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_text_iter_editable</primary></indexterm>gtk_text_iter_editable <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_text_iter_ends_line</primary></indexterm>gtk_text_iter_ends_line <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_text_iter_ends_sentence</primary></indexterm>gtk_text_iter_ends_sentence <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_text_iter_ends_tag</primary></indexterm>gtk_text_iter_ends_tag <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_text_iter_ends_word</primary></indexterm>gtk_text_iter_ends_word <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_text_iter_equal</primary></indexterm>gtk_text_iter_equal <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_text_iter_forward_char</primary></indexterm>gtk_text_iter_forward_char <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_text_iter_forward_chars</primary></indexterm>gtk_text_iter_forward_chars <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_text_iter_forward_cursor_position</primary></indexterm>gtk_text_iter_forward_cursor_position <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_text_iter_forward_cursor_positions</primary></indexterm>gtk_text_iter_forward_cursor_positions <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_text_iter_forward_find_char</primary></indexterm>gtk_text_iter_forward_find_char <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_text_iter_forward_line</primary></indexterm>gtk_text_iter_forward_line <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_text_iter_forward_lines</primary></indexterm>gtk_text_iter_forward_lines <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_text_iter_forward_search</primary></indexterm>gtk_text_iter_forward_search <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_text_iter_forward_sentence_end</primary></indexterm>gtk_text_iter_forward_sentence_end <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_text_iter_forward_sentence_ends</primary></indexterm>gtk_text_iter_forward_sentence_ends <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_text_iter_forward_to_end</primary></indexterm>gtk_text_iter_forward_to_end <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_text_iter_forward_to_line_end</primary></indexterm>gtk_text_iter_forward_to_line_end <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_text_iter_forward_to_tag_toggle</primary></indexterm>gtk_text_iter_forward_to_tag_toggle <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_text_iter_forward_visible_cursor_position</primary></indexterm>gtk_text_iter_forward_visible_cursor_position <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_text_iter_forward_visible_cursor_positions</primary></indexterm>gtk_text_iter_forward_visible_cursor_positions <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_text_iter_forward_visible_line</primary></indexterm>gtk_text_iter_forward_visible_line <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_text_iter_forward_visible_lines</primary></indexterm>gtk_text_iter_forward_visible_lines <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_text_iter_forward_visible_word_end</primary></indexterm>gtk_text_iter_forward_visible_word_end <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_text_iter_forward_visible_word_ends</primary></indexterm>gtk_text_iter_forward_visible_word_ends <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_text_iter_forward_word_end</primary></indexterm>gtk_text_iter_forward_word_end <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_text_iter_forward_word_ends</primary></indexterm>gtk_text_iter_forward_word_ends <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_text_iter_free</primary></indexterm>gtk_text_iter_free <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_text_iter_get_attributes</primary></indexterm>gtk_text_iter_get_attributes <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_text_iter_get_buffer</primary></indexterm>gtk_text_iter_get_buffer <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_text_iter_get_bytes_in_line</primary></indexterm>gtk_text_iter_get_bytes_in_line <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_text_iter_get_char</primary></indexterm>gtk_text_iter_get_char <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_text_iter_get_chars_in_line</primary></indexterm>gtk_text_iter_get_chars_in_line <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_text_iter_get_child_anchor</primary></indexterm>gtk_text_iter_get_child_anchor <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_text_iter_get_language</primary></indexterm>gtk_text_iter_get_language <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_text_iter_get_line</primary></indexterm>gtk_text_iter_get_line <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_text_iter_get_line_index</primary></indexterm>gtk_text_iter_get_line_index <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_text_iter_get_line_offset</primary></indexterm>gtk_text_iter_get_line_offset <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_text_iter_get_marks</primary></indexterm>gtk_text_iter_get_marks <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_text_iter_get_offset</primary></indexterm>gtk_text_iter_get_offset <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_text_iter_get_pixbuf</primary></indexterm>gtk_text_iter_get_pixbuf <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_text_iter_get_slice</primary></indexterm>gtk_text_iter_get_slice <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_text_iter_get_tags</primary></indexterm>gtk_text_iter_get_tags <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_text_iter_get_text</primary></indexterm>gtk_text_iter_get_text <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_text_iter_get_toggled_tags</primary></indexterm>gtk_text_iter_get_toggled_tags <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_text_iter_get_type</primary></indexterm>gtk_text_iter_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_text_iter_get_visible_line_index</primary></indexterm>gtk_text_iter_get_visible_line_index <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_text_iter_get_visible_line_offset</primary></indexterm>gtk_text_iter_get_visible_line_offset <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_text_iter_get_visible_slice</primary></indexterm>gtk_text_iter_get_visible_slice <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_text_iter_get_visible_text</primary></indexterm>gtk_text_iter_get_visible_text <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_text_iter_has_tag</primary></indexterm>gtk_text_iter_has_tag <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_text_iter_in_range</primary></indexterm>gtk_text_iter_in_range <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_text_iter_inside_sentence</primary></indexterm>gtk_text_iter_inside_sentence <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_text_iter_inside_word</primary></indexterm>gtk_text_iter_inside_word <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_text_iter_is_cursor_position</primary></indexterm>gtk_text_iter_is_cursor_position <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_text_iter_is_end</primary></indexterm>gtk_text_iter_is_end <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_text_iter_is_start</primary></indexterm>gtk_text_iter_is_start <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_text_iter_order</primary></indexterm>gtk_text_iter_order <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_text_iter_set_line</primary></indexterm>gtk_text_iter_set_line <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_text_iter_set_line_index</primary></indexterm>gtk_text_iter_set_line_index <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_text_iter_set_line_offset</primary></indexterm>gtk_text_iter_set_line_offset <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_text_iter_set_offset</primary></indexterm>gtk_text_iter_set_offset <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_text_iter_set_visible_line_index</primary></indexterm>gtk_text_iter_set_visible_line_index <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_text_iter_set_visible_line_offset</primary></indexterm>gtk_text_iter_set_visible_line_offset <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_text_iter_starts_line</primary></indexterm>gtk_text_iter_starts_line <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_text_iter_starts_sentence</primary></indexterm>gtk_text_iter_starts_sentence <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_text_iter_starts_word</primary></indexterm>gtk_text_iter_starts_word <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_text_iter_toggles_tag</primary></indexterm>gtk_text_iter_toggles_tag <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_text_mark_get_buffer</primary></indexterm>gtk_text_mark_get_buffer <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_text_mark_get_deleted</primary></indexterm>gtk_text_mark_get_deleted <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_text_mark_get_left_gravity</primary></indexterm>gtk_text_mark_get_left_gravity <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_text_mark_get_name</primary></indexterm>gtk_text_mark_get_name <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_text_mark_get_type</primary></indexterm>gtk_text_mark_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_text_mark_get_visible</primary></indexterm>gtk_text_mark_get_visible <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_text_mark_set_visible</primary></indexterm>gtk_text_mark_set_visible <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_text_search_flags_get_type</primary></indexterm>gtk_text_search_flags_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_text_tag_event</primary></indexterm>gtk_text_tag_event <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_text_tag_get_priority</primary></indexterm>gtk_text_tag_get_priority <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_text_tag_get_type</primary></indexterm>gtk_text_tag_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_text_tag_new</primary></indexterm>gtk_text_tag_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_text_tag_set_priority</primary></indexterm>gtk_text_tag_set_priority <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_text_tag_table_add</primary></indexterm>gtk_text_tag_table_add <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_text_tag_table_foreach</primary></indexterm>gtk_text_tag_table_foreach <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_text_tag_table_get_size</primary></indexterm>gtk_text_tag_table_get_size <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_text_tag_table_get_type</primary></indexterm>gtk_text_tag_table_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_text_tag_table_lookup</primary></indexterm>gtk_text_tag_table_lookup <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_text_tag_table_new</primary></indexterm>gtk_text_tag_table_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_text_tag_table_remove</primary></indexterm>gtk_text_tag_table_remove <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_text_view_add_child_at_anchor</primary></indexterm>gtk_text_view_add_child_at_anchor <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_text_view_add_child_in_window</primary></indexterm>gtk_text_view_add_child_in_window <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_text_view_backward_display_line</primary></indexterm>gtk_text_view_backward_display_line <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_text_view_backward_display_line_start</primary></indexterm>gtk_text_view_backward_display_line_start <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_text_view_buffer_to_window_coords</primary></indexterm>gtk_text_view_buffer_to_window_coords <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_text_view_forward_display_line</primary></indexterm>gtk_text_view_forward_display_line <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_text_view_forward_display_line_end</primary></indexterm>gtk_text_view_forward_display_line_end <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_text_view_get_accepts_tab</primary></indexterm>gtk_text_view_get_accepts_tab <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_text_view_get_border_window_size</primary></indexterm>gtk_text_view_get_border_window_size <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_text_view_get_buffer</primary></indexterm>gtk_text_view_get_buffer <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_text_view_get_cursor_visible</primary></indexterm>gtk_text_view_get_cursor_visible <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_text_view_get_default_attributes</primary></indexterm>gtk_text_view_get_default_attributes <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_text_view_get_editable</primary></indexterm>gtk_text_view_get_editable <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_text_view_get_indent</primary></indexterm>gtk_text_view_get_indent <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_text_view_get_iter_at_location</primary></indexterm>gtk_text_view_get_iter_at_location <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_text_view_get_iter_at_position</primary></indexterm>gtk_text_view_get_iter_at_position <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_text_view_get_iter_location</primary></indexterm>gtk_text_view_get_iter_location <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_text_view_get_justification</primary></indexterm>gtk_text_view_get_justification <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_text_view_get_left_margin</primary></indexterm>gtk_text_view_get_left_margin <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_text_view_get_line_at_y</primary></indexterm>gtk_text_view_get_line_at_y <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_text_view_get_line_yrange</primary></indexterm>gtk_text_view_get_line_yrange <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_text_view_get_overwrite</primary></indexterm>gtk_text_view_get_overwrite <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_text_view_get_pixels_above_lines</primary></indexterm>gtk_text_view_get_pixels_above_lines <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_text_view_get_pixels_below_lines</primary></indexterm>gtk_text_view_get_pixels_below_lines <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_text_view_get_pixels_inside_wrap</primary></indexterm>gtk_text_view_get_pixels_inside_wrap <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_text_view_get_right_margin</primary></indexterm>gtk_text_view_get_right_margin <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_text_view_get_tabs</primary></indexterm>gtk_text_view_get_tabs <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_text_view_get_type</primary></indexterm>gtk_text_view_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_text_view_get_visible_rect</primary></indexterm>gtk_text_view_get_visible_rect <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_text_view_get_window</primary></indexterm>gtk_text_view_get_window <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_text_view_get_window_type</primary></indexterm>gtk_text_view_get_window_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_text_view_get_wrap_mode</primary></indexterm>gtk_text_view_get_wrap_mode <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_text_view_move_child</primary></indexterm>gtk_text_view_move_child <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_text_view_move_mark_onscreen</primary></indexterm>gtk_text_view_move_mark_onscreen <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_text_view_move_visually</primary></indexterm>gtk_text_view_move_visually <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_text_view_new</primary></indexterm>gtk_text_view_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_text_view_new_with_buffer</primary></indexterm>gtk_text_view_new_with_buffer <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_text_view_place_cursor_onscreen</primary></indexterm>gtk_text_view_place_cursor_onscreen <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_text_view_scroll_mark_onscreen</primary></indexterm>gtk_text_view_scroll_mark_onscreen <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_text_view_scroll_to_iter</primary></indexterm>gtk_text_view_scroll_to_iter <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_text_view_scroll_to_mark</primary></indexterm>gtk_text_view_scroll_to_mark <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_text_view_set_accepts_tab</primary></indexterm>gtk_text_view_set_accepts_tab <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_text_view_set_border_window_size</primary></indexterm>gtk_text_view_set_border_window_size <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_text_view_set_buffer</primary></indexterm>gtk_text_view_set_buffer <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_text_view_set_cursor_visible</primary></indexterm>gtk_text_view_set_cursor_visible <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_text_view_set_editable</primary></indexterm>gtk_text_view_set_editable <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_text_view_set_indent</primary></indexterm>gtk_text_view_set_indent <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_text_view_set_justification</primary></indexterm>gtk_text_view_set_justification <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_text_view_set_left_margin</primary></indexterm>gtk_text_view_set_left_margin <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_text_view_set_overwrite</primary></indexterm>gtk_text_view_set_overwrite <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_text_view_set_pixels_above_lines</primary></indexterm>gtk_text_view_set_pixels_above_lines <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_text_view_set_pixels_below_lines</primary></indexterm>gtk_text_view_set_pixels_below_lines <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_text_view_set_pixels_inside_wrap</primary></indexterm>gtk_text_view_set_pixels_inside_wrap <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_text_view_set_right_margin</primary></indexterm>gtk_text_view_set_right_margin <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_text_view_set_tabs</primary></indexterm>gtk_text_view_set_tabs <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_text_view_set_wrap_mode</primary></indexterm>gtk_text_view_set_wrap_mode <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_text_view_starts_display_line</primary></indexterm>gtk_text_view_starts_display_line <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_text_view_window_to_buffer_coords</primary></indexterm>gtk_text_view_window_to_buffer_coords <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_text_window_type_get_type</primary></indexterm>gtk_text_window_type_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_toggle_action_get_active</primary></indexterm>gtk_toggle_action_get_active <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_toggle_action_get_draw_as_radio</primary></indexterm>gtk_toggle_action_get_draw_as_radio <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_toggle_action_get_type</primary></indexterm>gtk_toggle_action_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_toggle_action_new</primary></indexterm>gtk_toggle_action_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_toggle_action_set_active</primary></indexterm>gtk_toggle_action_set_active <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_toggle_action_set_draw_as_radio</primary></indexterm>gtk_toggle_action_set_draw_as_radio <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_toggle_action_toggled</primary></indexterm>gtk_toggle_action_toggled <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_toggle_button_get_active</primary></indexterm>gtk_toggle_button_get_active <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_toggle_button_get_inconsistent</primary></indexterm>gtk_toggle_button_get_inconsistent <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_toggle_button_get_mode</primary></indexterm>gtk_toggle_button_get_mode <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_toggle_button_get_type</primary></indexterm>gtk_toggle_button_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_toggle_button_new</primary></indexterm>gtk_toggle_button_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_toggle_button_new_with_label</primary></indexterm>gtk_toggle_button_new_with_label <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_toggle_button_new_with_mnemonic</primary></indexterm>gtk_toggle_button_new_with_mnemonic <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_toggle_button_set_active</primary></indexterm>gtk_toggle_button_set_active <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_toggle_button_set_inconsistent</primary></indexterm>gtk_toggle_button_set_inconsistent <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_toggle_button_set_mode</primary></indexterm>gtk_toggle_button_set_mode <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_toggle_button_toggled</primary></indexterm>gtk_toggle_button_toggled <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_toggle_tool_button_get_active</primary></indexterm>gtk_toggle_tool_button_get_active <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_toggle_tool_button_get_type</primary></indexterm>gtk_toggle_tool_button_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_toggle_tool_button_new</primary></indexterm>gtk_toggle_tool_button_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_toggle_tool_button_new_from_stock</primary></indexterm>gtk_toggle_tool_button_new_from_stock <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_toggle_tool_button_set_active</primary></indexterm>gtk_toggle_tool_button_set_active <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tool_button_get_icon_name</primary></indexterm>gtk_tool_button_get_icon_name <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tool_button_get_icon_widget</primary></indexterm>gtk_tool_button_get_icon_widget <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tool_button_get_label</primary></indexterm>gtk_tool_button_get_label <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tool_button_get_label_widget</primary></indexterm>gtk_tool_button_get_label_widget <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tool_button_get_stock_id</primary></indexterm>gtk_tool_button_get_stock_id <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tool_button_get_type</primary></indexterm>gtk_tool_button_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tool_button_get_use_underline</primary></indexterm>gtk_tool_button_get_use_underline <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tool_button_new</primary></indexterm>gtk_tool_button_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tool_button_new_from_stock</primary></indexterm>gtk_tool_button_new_from_stock <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tool_button_set_icon_name</primary></indexterm>gtk_tool_button_set_icon_name <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tool_button_set_icon_widget</primary></indexterm>gtk_tool_button_set_icon_widget <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tool_button_set_label</primary></indexterm>gtk_tool_button_set_label <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tool_button_set_label_widget</primary></indexterm>gtk_tool_button_set_label_widget <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tool_button_set_stock_id</primary></indexterm>gtk_tool_button_set_stock_id <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tool_button_set_use_underline</primary></indexterm>gtk_tool_button_set_use_underline <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tool_item_get_expand</primary></indexterm>gtk_tool_item_get_expand <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tool_item_get_homogeneous</primary></indexterm>gtk_tool_item_get_homogeneous <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tool_item_get_icon_size</primary></indexterm>gtk_tool_item_get_icon_size <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tool_item_get_is_important</primary></indexterm>gtk_tool_item_get_is_important <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tool_item_get_orientation</primary></indexterm>gtk_tool_item_get_orientation <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tool_item_get_proxy_menu_item</primary></indexterm>gtk_tool_item_get_proxy_menu_item <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tool_item_get_relief_style</primary></indexterm>gtk_tool_item_get_relief_style <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tool_item_get_toolbar_style</primary></indexterm>gtk_tool_item_get_toolbar_style <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tool_item_get_type</primary></indexterm>gtk_tool_item_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tool_item_get_use_drag_window</primary></indexterm>gtk_tool_item_get_use_drag_window <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tool_item_get_visible_horizontal</primary></indexterm>gtk_tool_item_get_visible_horizontal <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tool_item_get_visible_vertical</primary></indexterm>gtk_tool_item_get_visible_vertical <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tool_item_new</primary></indexterm>gtk_tool_item_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tool_item_rebuild_menu</primary></indexterm>gtk_tool_item_rebuild_menu <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tool_item_retrieve_proxy_menu_item</primary></indexterm>gtk_tool_item_retrieve_proxy_menu_item <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tool_item_set_expand</primary></indexterm>gtk_tool_item_set_expand <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tool_item_set_homogeneous</primary></indexterm>gtk_tool_item_set_homogeneous <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tool_item_set_is_important</primary></indexterm>gtk_tool_item_set_is_important <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tool_item_set_proxy_menu_item</primary></indexterm>gtk_tool_item_set_proxy_menu_item <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tool_item_set_tooltip</primary></indexterm>gtk_tool_item_set_tooltip <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tool_item_set_use_drag_window</primary></indexterm>gtk_tool_item_set_use_drag_window <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tool_item_set_visible_horizontal</primary></indexterm>gtk_tool_item_set_visible_horizontal <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tool_item_set_visible_vertical</primary></indexterm>gtk_tool_item_set_visible_vertical <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_toolbar_child_type_get_type</primary></indexterm>gtk_toolbar_child_type_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_toolbar_get_drop_index</primary></indexterm>gtk_toolbar_get_drop_index <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_toolbar_get_icon_size</primary></indexterm>gtk_toolbar_get_icon_size <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_toolbar_get_item_index</primary></indexterm>gtk_toolbar_get_item_index <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_toolbar_get_n_items</primary></indexterm>gtk_toolbar_get_n_items <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_toolbar_get_nth_item</primary></indexterm>gtk_toolbar_get_nth_item <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_toolbar_get_orientation</primary></indexterm>gtk_toolbar_get_orientation <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_toolbar_get_relief_style</primary></indexterm>gtk_toolbar_get_relief_style <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_toolbar_get_show_arrow</primary></indexterm>gtk_toolbar_get_show_arrow <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_toolbar_get_style</primary></indexterm>gtk_toolbar_get_style <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_toolbar_get_tooltips</primary></indexterm>gtk_toolbar_get_tooltips <LINK LINKEND="REFSTD.libgtk.x11.2.0.3">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_toolbar_get_type</primary></indexterm>gtk_toolbar_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_toolbar_insert</primary></indexterm>gtk_toolbar_insert <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_toolbar_new</primary></indexterm>gtk_toolbar_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_toolbar_set_drop_highlight_item</primary></indexterm>gtk_toolbar_set_drop_highlight_item <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_toolbar_set_icon_size</primary></indexterm>gtk_toolbar_set_icon_size <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_toolbar_set_orientation</primary></indexterm>gtk_toolbar_set_orientation <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_toolbar_set_show_arrow</primary></indexterm>gtk_toolbar_set_show_arrow <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_toolbar_set_style</primary></indexterm>gtk_toolbar_set_style <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_toolbar_set_tooltips</primary></indexterm>gtk_toolbar_set_tooltips <LINK LINKEND="REFSTD.libgtk.x11.2.0.3">[LSB]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_toolbar_space_style_get_type</primary></indexterm>gtk_toolbar_space_style_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_toolbar_style_get_type</primary></indexterm>gtk_toolbar_style_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_toolbar_unset_style</primary></indexterm>gtk_toolbar_unset_style <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tooltips_data_get</primary></indexterm>gtk_tooltips_data_get <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tooltips_disable</primary></indexterm>gtk_tooltips_disable <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tooltips_enable</primary></indexterm>gtk_tooltips_enable <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tooltips_force_window</primary></indexterm>gtk_tooltips_force_window <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tooltips_get_info_from_tip_window</primary></indexterm>gtk_tooltips_get_info_from_tip_window <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tooltips_get_type</primary></indexterm>gtk_tooltips_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tooltips_new</primary></indexterm>gtk_tooltips_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tooltips_set_tip</primary></indexterm>gtk_tooltips_set_tip <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_drag_dest_drag_data_received</primary></indexterm>gtk_tree_drag_dest_drag_data_received <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_drag_dest_get_type</primary></indexterm>gtk_tree_drag_dest_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_drag_dest_row_drop_possible</primary></indexterm>gtk_tree_drag_dest_row_drop_possible <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_drag_source_drag_data_delete</primary></indexterm>gtk_tree_drag_source_drag_data_delete <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_drag_source_drag_data_get</primary></indexterm>gtk_tree_drag_source_drag_data_get <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_drag_source_get_type</primary></indexterm>gtk_tree_drag_source_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_drag_source_row_draggable</primary></indexterm>gtk_tree_drag_source_row_draggable <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_get_row_drag_data</primary></indexterm>gtk_tree_get_row_drag_data <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_iter_copy</primary></indexterm>gtk_tree_iter_copy <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_iter_free</primary></indexterm>gtk_tree_iter_free <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_iter_get_type</primary></indexterm>gtk_tree_iter_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_model_filter_clear_cache</primary></indexterm>gtk_tree_model_filter_clear_cache <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_model_filter_convert_child_iter_to_iter</primary></indexterm>gtk_tree_model_filter_convert_child_iter_to_iter <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_model_filter_convert_child_path_to_path</primary></indexterm>gtk_tree_model_filter_convert_child_path_to_path <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_model_filter_convert_iter_to_child_iter</primary></indexterm>gtk_tree_model_filter_convert_iter_to_child_iter <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_model_filter_convert_path_to_child_path</primary></indexterm>gtk_tree_model_filter_convert_path_to_child_path <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_model_filter_get_model</primary></indexterm>gtk_tree_model_filter_get_model <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_model_filter_get_type</primary></indexterm>gtk_tree_model_filter_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_model_filter_new</primary></indexterm>gtk_tree_model_filter_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_model_filter_refilter</primary></indexterm>gtk_tree_model_filter_refilter <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_model_filter_set_modify_func</primary></indexterm>gtk_tree_model_filter_set_modify_func <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_model_filter_set_visible_column</primary></indexterm>gtk_tree_model_filter_set_visible_column <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_model_filter_set_visible_func</primary></indexterm>gtk_tree_model_filter_set_visible_func <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_model_flags_get_type</primary></indexterm>gtk_tree_model_flags_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_model_foreach</primary></indexterm>gtk_tree_model_foreach <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_model_get</primary></indexterm>gtk_tree_model_get <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_model_get_column_type</primary></indexterm>gtk_tree_model_get_column_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_model_get_flags</primary></indexterm>gtk_tree_model_get_flags <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_model_get_iter</primary></indexterm>gtk_tree_model_get_iter <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_model_get_iter_first</primary></indexterm>gtk_tree_model_get_iter_first <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_model_get_iter_from_string</primary></indexterm>gtk_tree_model_get_iter_from_string <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_model_get_n_columns</primary></indexterm>gtk_tree_model_get_n_columns <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_model_get_path</primary></indexterm>gtk_tree_model_get_path <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_model_get_string_from_iter</primary></indexterm>gtk_tree_model_get_string_from_iter <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_model_get_type</primary></indexterm>gtk_tree_model_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_model_get_valist</primary></indexterm>gtk_tree_model_get_valist <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_model_get_value</primary></indexterm>gtk_tree_model_get_value <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_model_iter_children</primary></indexterm>gtk_tree_model_iter_children <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_model_iter_has_child</primary></indexterm>gtk_tree_model_iter_has_child <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_model_iter_n_children</primary></indexterm>gtk_tree_model_iter_n_children <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_model_iter_next</primary></indexterm>gtk_tree_model_iter_next <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_model_iter_nth_child</primary></indexterm>gtk_tree_model_iter_nth_child <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_model_iter_parent</primary></indexterm>gtk_tree_model_iter_parent <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_model_ref_node</primary></indexterm>gtk_tree_model_ref_node <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_model_row_changed</primary></indexterm>gtk_tree_model_row_changed <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_model_row_deleted</primary></indexterm>gtk_tree_model_row_deleted <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_model_row_has_child_toggled</primary></indexterm>gtk_tree_model_row_has_child_toggled <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_model_row_inserted</primary></indexterm>gtk_tree_model_row_inserted <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_model_rows_reordered</primary></indexterm>gtk_tree_model_rows_reordered <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_model_sort_clear_cache</primary></indexterm>gtk_tree_model_sort_clear_cache <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_model_sort_convert_child_iter_to_iter</primary></indexterm>gtk_tree_model_sort_convert_child_iter_to_iter <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_model_sort_convert_child_path_to_path</primary></indexterm>gtk_tree_model_sort_convert_child_path_to_path <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_model_sort_convert_iter_to_child_iter</primary></indexterm>gtk_tree_model_sort_convert_iter_to_child_iter <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_model_sort_convert_path_to_child_path</primary></indexterm>gtk_tree_model_sort_convert_path_to_child_path <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_model_sort_get_model</primary></indexterm>gtk_tree_model_sort_get_model <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_model_sort_get_type</primary></indexterm>gtk_tree_model_sort_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_model_sort_iter_is_valid</primary></indexterm>gtk_tree_model_sort_iter_is_valid <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_model_sort_new_with_model</primary></indexterm>gtk_tree_model_sort_new_with_model <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_model_sort_reset_default_sort_func</primary></indexterm>gtk_tree_model_sort_reset_default_sort_func <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_model_unref_node</primary></indexterm>gtk_tree_model_unref_node <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_path_append_index</primary></indexterm>gtk_tree_path_append_index <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_path_compare</primary></indexterm>gtk_tree_path_compare <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_path_copy</primary></indexterm>gtk_tree_path_copy <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_path_down</primary></indexterm>gtk_tree_path_down <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_path_free</primary></indexterm>gtk_tree_path_free <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_path_get_depth</primary></indexterm>gtk_tree_path_get_depth <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_path_get_indices</primary></indexterm>gtk_tree_path_get_indices <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_path_get_type</primary></indexterm>gtk_tree_path_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_path_is_ancestor</primary></indexterm>gtk_tree_path_is_ancestor <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_path_is_descendant</primary></indexterm>gtk_tree_path_is_descendant <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_path_new</primary></indexterm>gtk_tree_path_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_path_new_first</primary></indexterm>gtk_tree_path_new_first <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_path_new_from_indices</primary></indexterm>gtk_tree_path_new_from_indices <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_path_new_from_string</primary></indexterm>gtk_tree_path_new_from_string <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_path_next</primary></indexterm>gtk_tree_path_next <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_path_prepend_index</primary></indexterm>gtk_tree_path_prepend_index <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_path_prev</primary></indexterm>gtk_tree_path_prev <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_path_to_string</primary></indexterm>gtk_tree_path_to_string <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_path_up</primary></indexterm>gtk_tree_path_up <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_row_reference_copy</primary></indexterm>gtk_tree_row_reference_copy <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_row_reference_deleted</primary></indexterm>gtk_tree_row_reference_deleted <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_row_reference_free</primary></indexterm>gtk_tree_row_reference_free <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_row_reference_get_model</primary></indexterm>gtk_tree_row_reference_get_model <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_row_reference_get_path</primary></indexterm>gtk_tree_row_reference_get_path <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_row_reference_get_type</primary></indexterm>gtk_tree_row_reference_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_row_reference_inserted</primary></indexterm>gtk_tree_row_reference_inserted <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_row_reference_new</primary></indexterm>gtk_tree_row_reference_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_row_reference_new_proxy</primary></indexterm>gtk_tree_row_reference_new_proxy <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_row_reference_reordered</primary></indexterm>gtk_tree_row_reference_reordered <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_row_reference_valid</primary></indexterm>gtk_tree_row_reference_valid <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_selection_count_selected_rows</primary></indexterm>gtk_tree_selection_count_selected_rows <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_selection_get_mode</primary></indexterm>gtk_tree_selection_get_mode <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_selection_get_selected</primary></indexterm>gtk_tree_selection_get_selected <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_selection_get_selected_rows</primary></indexterm>gtk_tree_selection_get_selected_rows <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_selection_get_tree_view</primary></indexterm>gtk_tree_selection_get_tree_view <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_selection_get_type</primary></indexterm>gtk_tree_selection_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_selection_get_user_data</primary></indexterm>gtk_tree_selection_get_user_data <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_selection_iter_is_selected</primary></indexterm>gtk_tree_selection_iter_is_selected <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_selection_path_is_selected</primary></indexterm>gtk_tree_selection_path_is_selected <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_selection_select_all</primary></indexterm>gtk_tree_selection_select_all <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_selection_select_iter</primary></indexterm>gtk_tree_selection_select_iter <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_selection_select_path</primary></indexterm>gtk_tree_selection_select_path <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_selection_select_range</primary></indexterm>gtk_tree_selection_select_range <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_selection_selected_foreach</primary></indexterm>gtk_tree_selection_selected_foreach <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_selection_set_mode</primary></indexterm>gtk_tree_selection_set_mode <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_selection_set_select_function</primary></indexterm>gtk_tree_selection_set_select_function <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_selection_unselect_all</primary></indexterm>gtk_tree_selection_unselect_all <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_selection_unselect_iter</primary></indexterm>gtk_tree_selection_unselect_iter <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_selection_unselect_path</primary></indexterm>gtk_tree_selection_unselect_path <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_selection_unselect_range</primary></indexterm>gtk_tree_selection_unselect_range <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_set_row_drag_data</primary></indexterm>gtk_tree_set_row_drag_data <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_sortable_get_sort_column_id</primary></indexterm>gtk_tree_sortable_get_sort_column_id <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_sortable_get_type</primary></indexterm>gtk_tree_sortable_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_sortable_has_default_sort_func</primary></indexterm>gtk_tree_sortable_has_default_sort_func <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_sortable_set_default_sort_func</primary></indexterm>gtk_tree_sortable_set_default_sort_func <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_sortable_set_sort_column_id</primary></indexterm>gtk_tree_sortable_set_sort_column_id <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_sortable_set_sort_func</primary></indexterm>gtk_tree_sortable_set_sort_func <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_sortable_sort_column_changed</primary></indexterm>gtk_tree_sortable_sort_column_changed <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_store_append</primary></indexterm>gtk_tree_store_append <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_store_clear</primary></indexterm>gtk_tree_store_clear <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_store_get_type</primary></indexterm>gtk_tree_store_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_store_insert</primary></indexterm>gtk_tree_store_insert <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_store_insert_after</primary></indexterm>gtk_tree_store_insert_after <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_store_insert_before</primary></indexterm>gtk_tree_store_insert_before <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_store_is_ancestor</primary></indexterm>gtk_tree_store_is_ancestor <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_store_iter_depth</primary></indexterm>gtk_tree_store_iter_depth <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_store_iter_is_valid</primary></indexterm>gtk_tree_store_iter_is_valid <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_store_move_after</primary></indexterm>gtk_tree_store_move_after <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_store_move_before</primary></indexterm>gtk_tree_store_move_before <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_store_new</primary></indexterm>gtk_tree_store_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_store_newv</primary></indexterm>gtk_tree_store_newv <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_store_prepend</primary></indexterm>gtk_tree_store_prepend <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_store_remove</primary></indexterm>gtk_tree_store_remove <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_store_reorder</primary></indexterm>gtk_tree_store_reorder <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_store_set</primary></indexterm>gtk_tree_store_set <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_store_set_column_types</primary></indexterm>gtk_tree_store_set_column_types <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_store_set_valist</primary></indexterm>gtk_tree_store_set_valist <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_store_set_value</primary></indexterm>gtk_tree_store_set_value <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_store_swap</primary></indexterm>gtk_tree_store_swap <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_view_append_column</primary></indexterm>gtk_tree_view_append_column <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_view_collapse_all</primary></indexterm>gtk_tree_view_collapse_all <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_view_collapse_row</primary></indexterm>gtk_tree_view_collapse_row <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_view_column_add_attribute</primary></indexterm>gtk_tree_view_column_add_attribute <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_view_column_cell_get_position</primary></indexterm>gtk_tree_view_column_cell_get_position <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_view_column_cell_get_size</primary></indexterm>gtk_tree_view_column_cell_get_size <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_view_column_cell_is_visible</primary></indexterm>gtk_tree_view_column_cell_is_visible <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_view_column_cell_set_cell_data</primary></indexterm>gtk_tree_view_column_cell_set_cell_data <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_view_column_clear</primary></indexterm>gtk_tree_view_column_clear <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_view_column_clear_attributes</primary></indexterm>gtk_tree_view_column_clear_attributes <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_view_column_clicked</primary></indexterm>gtk_tree_view_column_clicked <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_view_column_focus_cell</primary></indexterm>gtk_tree_view_column_focus_cell <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_view_column_get_alignment</primary></indexterm>gtk_tree_view_column_get_alignment <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_view_column_get_cell_renderers</primary></indexterm>gtk_tree_view_column_get_cell_renderers <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_view_column_get_clickable</primary></indexterm>gtk_tree_view_column_get_clickable <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_view_column_get_expand</primary></indexterm>gtk_tree_view_column_get_expand <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_view_column_get_fixed_width</primary></indexterm>gtk_tree_view_column_get_fixed_width <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_view_column_get_max_width</primary></indexterm>gtk_tree_view_column_get_max_width <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_view_column_get_min_width</primary></indexterm>gtk_tree_view_column_get_min_width <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_view_column_get_reorderable</primary></indexterm>gtk_tree_view_column_get_reorderable <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_view_column_get_resizable</primary></indexterm>gtk_tree_view_column_get_resizable <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_view_column_get_sizing</primary></indexterm>gtk_tree_view_column_get_sizing <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_view_column_get_sort_column_id</primary></indexterm>gtk_tree_view_column_get_sort_column_id <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_view_column_get_sort_indicator</primary></indexterm>gtk_tree_view_column_get_sort_indicator <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_view_column_get_sort_order</primary></indexterm>gtk_tree_view_column_get_sort_order <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_view_column_get_spacing</primary></indexterm>gtk_tree_view_column_get_spacing <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_view_column_get_title</primary></indexterm>gtk_tree_view_column_get_title <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_view_column_get_type</primary></indexterm>gtk_tree_view_column_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_view_column_get_visible</primary></indexterm>gtk_tree_view_column_get_visible <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_view_column_get_widget</primary></indexterm>gtk_tree_view_column_get_widget <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_view_column_get_width</primary></indexterm>gtk_tree_view_column_get_width <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_view_column_new</primary></indexterm>gtk_tree_view_column_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_view_column_new_with_attributes</primary></indexterm>gtk_tree_view_column_new_with_attributes <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_view_column_pack_end</primary></indexterm>gtk_tree_view_column_pack_end <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_view_column_pack_start</primary></indexterm>gtk_tree_view_column_pack_start <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_view_column_queue_resize</primary></indexterm>gtk_tree_view_column_queue_resize <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_view_column_set_alignment</primary></indexterm>gtk_tree_view_column_set_alignment <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_view_column_set_attributes</primary></indexterm>gtk_tree_view_column_set_attributes <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_view_column_set_cell_data_func</primary></indexterm>gtk_tree_view_column_set_cell_data_func <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_view_column_set_clickable</primary></indexterm>gtk_tree_view_column_set_clickable <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_view_column_set_expand</primary></indexterm>gtk_tree_view_column_set_expand <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_view_column_set_fixed_width</primary></indexterm>gtk_tree_view_column_set_fixed_width <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_view_column_set_max_width</primary></indexterm>gtk_tree_view_column_set_max_width <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_view_column_set_min_width</primary></indexterm>gtk_tree_view_column_set_min_width <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_view_column_set_reorderable</primary></indexterm>gtk_tree_view_column_set_reorderable <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_view_column_set_resizable</primary></indexterm>gtk_tree_view_column_set_resizable <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_view_column_set_sizing</primary></indexterm>gtk_tree_view_column_set_sizing <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_view_column_set_sort_column_id</primary></indexterm>gtk_tree_view_column_set_sort_column_id <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_view_column_set_sort_indicator</primary></indexterm>gtk_tree_view_column_set_sort_indicator <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_view_column_set_sort_order</primary></indexterm>gtk_tree_view_column_set_sort_order <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_view_column_set_spacing</primary></indexterm>gtk_tree_view_column_set_spacing <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_view_column_set_title</primary></indexterm>gtk_tree_view_column_set_title <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_view_column_set_visible</primary></indexterm>gtk_tree_view_column_set_visible <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_view_column_set_widget</primary></indexterm>gtk_tree_view_column_set_widget <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_view_column_sizing_get_type</primary></indexterm>gtk_tree_view_column_sizing_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_view_columns_autosize</primary></indexterm>gtk_tree_view_columns_autosize <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_view_create_row_drag_icon</primary></indexterm>gtk_tree_view_create_row_drag_icon <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_view_drop_position_get_type</primary></indexterm>gtk_tree_view_drop_position_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_view_enable_model_drag_dest</primary></indexterm>gtk_tree_view_enable_model_drag_dest <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_view_enable_model_drag_source</primary></indexterm>gtk_tree_view_enable_model_drag_source <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_view_expand_all</primary></indexterm>gtk_tree_view_expand_all <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_view_expand_row</primary></indexterm>gtk_tree_view_expand_row <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_view_expand_to_path</primary></indexterm>gtk_tree_view_expand_to_path <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_view_get_background_area</primary></indexterm>gtk_tree_view_get_background_area <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_view_get_bin_window</primary></indexterm>gtk_tree_view_get_bin_window <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_view_get_cell_area</primary></indexterm>gtk_tree_view_get_cell_area <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_view_get_column</primary></indexterm>gtk_tree_view_get_column <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_view_get_columns</primary></indexterm>gtk_tree_view_get_columns <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_view_get_cursor</primary></indexterm>gtk_tree_view_get_cursor <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_view_get_dest_row_at_pos</primary></indexterm>gtk_tree_view_get_dest_row_at_pos <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_view_get_drag_dest_row</primary></indexterm>gtk_tree_view_get_drag_dest_row <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_view_get_enable_search</primary></indexterm>gtk_tree_view_get_enable_search <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_view_get_expander_column</primary></indexterm>gtk_tree_view_get_expander_column <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_view_get_fixed_height_mode</primary></indexterm>gtk_tree_view_get_fixed_height_mode <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_view_get_hadjustment</primary></indexterm>gtk_tree_view_get_hadjustment <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_view_get_headers_visible</primary></indexterm>gtk_tree_view_get_headers_visible <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_view_get_hover_expand</primary></indexterm>gtk_tree_view_get_hover_expand <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_view_get_hover_selection</primary></indexterm>gtk_tree_view_get_hover_selection <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_view_get_model</primary></indexterm>gtk_tree_view_get_model <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_view_get_path_at_pos</primary></indexterm>gtk_tree_view_get_path_at_pos <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_view_get_reorderable</primary></indexterm>gtk_tree_view_get_reorderable <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_view_get_row_separator_func</primary></indexterm>gtk_tree_view_get_row_separator_func <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_view_get_rules_hint</primary></indexterm>gtk_tree_view_get_rules_hint <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_view_get_search_column</primary></indexterm>gtk_tree_view_get_search_column <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_view_get_search_equal_func</primary></indexterm>gtk_tree_view_get_search_equal_func <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_view_get_selection</primary></indexterm>gtk_tree_view_get_selection <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_view_get_type</primary></indexterm>gtk_tree_view_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_view_get_vadjustment</primary></indexterm>gtk_tree_view_get_vadjustment <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_view_get_visible_range</primary></indexterm>gtk_tree_view_get_visible_range <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_view_get_visible_rect</primary></indexterm>gtk_tree_view_get_visible_rect <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_view_insert_column</primary></indexterm>gtk_tree_view_insert_column <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_view_insert_column_with_attributes</primary></indexterm>gtk_tree_view_insert_column_with_attributes <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_view_insert_column_with_data_func</primary></indexterm>gtk_tree_view_insert_column_with_data_func <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_view_map_expanded_rows</primary></indexterm>gtk_tree_view_map_expanded_rows <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_view_mode_get_type</primary></indexterm>gtk_tree_view_mode_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_view_move_column_after</primary></indexterm>gtk_tree_view_move_column_after <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_view_new</primary></indexterm>gtk_tree_view_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_view_new_with_model</primary></indexterm>gtk_tree_view_new_with_model <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_view_remove_column</primary></indexterm>gtk_tree_view_remove_column <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_view_row_activated</primary></indexterm>gtk_tree_view_row_activated <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_view_row_expanded</primary></indexterm>gtk_tree_view_row_expanded <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_view_scroll_to_cell</primary></indexterm>gtk_tree_view_scroll_to_cell <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_view_scroll_to_point</primary></indexterm>gtk_tree_view_scroll_to_point <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_view_set_column_drag_function</primary></indexterm>gtk_tree_view_set_column_drag_function <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_view_set_cursor</primary></indexterm>gtk_tree_view_set_cursor <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_view_set_cursor_on_cell</primary></indexterm>gtk_tree_view_set_cursor_on_cell <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_view_set_destroy_count_func</primary></indexterm>gtk_tree_view_set_destroy_count_func <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_view_set_drag_dest_row</primary></indexterm>gtk_tree_view_set_drag_dest_row <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_view_set_enable_search</primary></indexterm>gtk_tree_view_set_enable_search <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_view_set_expander_column</primary></indexterm>gtk_tree_view_set_expander_column <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_view_set_fixed_height_mode</primary></indexterm>gtk_tree_view_set_fixed_height_mode <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_view_set_hadjustment</primary></indexterm>gtk_tree_view_set_hadjustment <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_view_set_headers_clickable</primary></indexterm>gtk_tree_view_set_headers_clickable <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_view_set_headers_visible</primary></indexterm>gtk_tree_view_set_headers_visible <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_view_set_hover_expand</primary></indexterm>gtk_tree_view_set_hover_expand <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_view_set_hover_selection</primary></indexterm>gtk_tree_view_set_hover_selection <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_view_set_model</primary></indexterm>gtk_tree_view_set_model <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_view_set_reorderable</primary></indexterm>gtk_tree_view_set_reorderable <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_view_set_row_separator_func</primary></indexterm>gtk_tree_view_set_row_separator_func <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_view_set_rules_hint</primary></indexterm>gtk_tree_view_set_rules_hint <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_view_set_search_column</primary></indexterm>gtk_tree_view_set_search_column <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_view_set_search_equal_func</primary></indexterm>gtk_tree_view_set_search_equal_func <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_view_set_vadjustment</primary></indexterm>gtk_tree_view_set_vadjustment <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_view_tree_to_widget_coords</primary></indexterm>gtk_tree_view_tree_to_widget_coords <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_view_unset_rows_drag_dest</primary></indexterm>gtk_tree_view_unset_rows_drag_dest <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_view_unset_rows_drag_source</primary></indexterm>gtk_tree_view_unset_rows_drag_source <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_view_widget_to_tree_coords</primary></indexterm>gtk_tree_view_widget_to_tree_coords <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_true</primary></indexterm>gtk_true <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_type_class</primary></indexterm>gtk_type_class <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_ui_manager_add_ui</primary></indexterm>gtk_ui_manager_add_ui <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_ui_manager_add_ui_from_file</primary></indexterm>gtk_ui_manager_add_ui_from_file <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_ui_manager_add_ui_from_string</primary></indexterm>gtk_ui_manager_add_ui_from_string <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_ui_manager_ensure_update</primary></indexterm>gtk_ui_manager_ensure_update <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_ui_manager_get_accel_group</primary></indexterm>gtk_ui_manager_get_accel_group <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_ui_manager_get_action</primary></indexterm>gtk_ui_manager_get_action <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_ui_manager_get_action_groups</primary></indexterm>gtk_ui_manager_get_action_groups <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_ui_manager_get_add_tearoffs</primary></indexterm>gtk_ui_manager_get_add_tearoffs <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_ui_manager_get_toplevels</primary></indexterm>gtk_ui_manager_get_toplevels <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_ui_manager_get_type</primary></indexterm>gtk_ui_manager_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_ui_manager_get_ui</primary></indexterm>gtk_ui_manager_get_ui <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_ui_manager_get_widget</primary></indexterm>gtk_ui_manager_get_widget <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_ui_manager_insert_action_group</primary></indexterm>gtk_ui_manager_insert_action_group <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_ui_manager_item_type_get_type</primary></indexterm>gtk_ui_manager_item_type_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_ui_manager_new</primary></indexterm>gtk_ui_manager_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_ui_manager_new_merge_id</primary></indexterm>gtk_ui_manager_new_merge_id <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_ui_manager_remove_action_group</primary></indexterm>gtk_ui_manager_remove_action_group <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_ui_manager_remove_ui</primary></indexterm>gtk_ui_manager_remove_ui <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_ui_manager_set_add_tearoffs</primary></indexterm>gtk_ui_manager_set_add_tearoffs <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_update_type_get_type</primary></indexterm>gtk_update_type_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_vbox_get_type</primary></indexterm>gtk_vbox_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_vbox_new</primary></indexterm>gtk_vbox_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_vbutton_box_get_type</primary></indexterm>gtk_vbutton_box_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_vbutton_box_new</primary></indexterm>gtk_vbutton_box_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_viewport_get_hadjustment</primary></indexterm>gtk_viewport_get_hadjustment <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_viewport_get_shadow_type</primary></indexterm>gtk_viewport_get_shadow_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_viewport_get_type</primary></indexterm>gtk_viewport_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_viewport_get_vadjustment</primary></indexterm>gtk_viewport_get_vadjustment <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_viewport_new</primary></indexterm>gtk_viewport_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_viewport_set_hadjustment</primary></indexterm>gtk_viewport_set_hadjustment <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_viewport_set_shadow_type</primary></indexterm>gtk_viewport_set_shadow_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_viewport_set_vadjustment</primary></indexterm>gtk_viewport_set_vadjustment <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_visibility_get_type</primary></indexterm>gtk_visibility_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_vpaned_get_type</primary></indexterm>gtk_vpaned_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_vpaned_new</primary></indexterm>gtk_vpaned_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_vruler_get_type</primary></indexterm>gtk_vruler_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_vruler_new</primary></indexterm>gtk_vruler_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_vscale_get_type</primary></indexterm>gtk_vscale_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_vscale_new</primary></indexterm>gtk_vscale_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_vscale_new_with_range</primary></indexterm>gtk_vscale_new_with_range <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_vscrollbar_get_type</primary></indexterm>gtk_vscrollbar_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_vscrollbar_new</primary></indexterm>gtk_vscrollbar_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_vseparator_get_type</primary></indexterm>gtk_vseparator_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_vseparator_new</primary></indexterm>gtk_vseparator_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_widget_activate</primary></indexterm>gtk_widget_activate <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_widget_add_accelerator</primary></indexterm>gtk_widget_add_accelerator <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_widget_add_events</primary></indexterm>gtk_widget_add_events <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_widget_add_mnemonic_label</primary></indexterm>gtk_widget_add_mnemonic_label <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_widget_can_activate_accel</primary></indexterm>gtk_widget_can_activate_accel <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_widget_child_focus</primary></indexterm>gtk_widget_child_focus <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_widget_child_notify</primary></indexterm>gtk_widget_child_notify <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_widget_class_find_style_property</primary></indexterm>gtk_widget_class_find_style_property <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_widget_class_install_style_property</primary></indexterm>gtk_widget_class_install_style_property <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_widget_class_install_style_property_parser</primary></indexterm>gtk_widget_class_install_style_property_parser <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_widget_class_list_style_properties</primary></indexterm>gtk_widget_class_list_style_properties <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_widget_class_path</primary></indexterm>gtk_widget_class_path <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_widget_create_pango_context</primary></indexterm>gtk_widget_create_pango_context <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_widget_create_pango_layout</primary></indexterm>gtk_widget_create_pango_layout <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_widget_destroy</primary></indexterm>gtk_widget_destroy <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_widget_destroyed</primary></indexterm>gtk_widget_destroyed <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_widget_ensure_style</primary></indexterm>gtk_widget_ensure_style <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_widget_event</primary></indexterm>gtk_widget_event <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_widget_flags_get_type</primary></indexterm>gtk_widget_flags_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_widget_freeze_child_notify</primary></indexterm>gtk_widget_freeze_child_notify <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_widget_get_accessible</primary></indexterm>gtk_widget_get_accessible <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_widget_get_ancestor</primary></indexterm>gtk_widget_get_ancestor <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_widget_get_child_requisition</primary></indexterm>gtk_widget_get_child_requisition <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_widget_get_child_visible</primary></indexterm>gtk_widget_get_child_visible <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_widget_get_clipboard</primary></indexterm>gtk_widget_get_clipboard <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_widget_get_colormap</primary></indexterm>gtk_widget_get_colormap <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_widget_get_composite_name</primary></indexterm>gtk_widget_get_composite_name <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_widget_get_default_colormap</primary></indexterm>gtk_widget_get_default_colormap <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_widget_get_default_direction</primary></indexterm>gtk_widget_get_default_direction <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_widget_get_default_style</primary></indexterm>gtk_widget_get_default_style <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_widget_get_default_visual</primary></indexterm>gtk_widget_get_default_visual <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_widget_get_direction</primary></indexterm>gtk_widget_get_direction <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_widget_get_display</primary></indexterm>gtk_widget_get_display <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_widget_get_events</primary></indexterm>gtk_widget_get_events <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_widget_get_extension_events</primary></indexterm>gtk_widget_get_extension_events <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_widget_get_modifier_style</primary></indexterm>gtk_widget_get_modifier_style <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_widget_get_name</primary></indexterm>gtk_widget_get_name <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_widget_get_no_show_all</primary></indexterm>gtk_widget_get_no_show_all <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_widget_get_pango_context</primary></indexterm>gtk_widget_get_pango_context <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_widget_get_parent</primary></indexterm>gtk_widget_get_parent <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_widget_get_parent_window</primary></indexterm>gtk_widget_get_parent_window <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_widget_get_pointer</primary></indexterm>gtk_widget_get_pointer <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_widget_get_root_window</primary></indexterm>gtk_widget_get_root_window <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_widget_get_screen</primary></indexterm>gtk_widget_get_screen <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_widget_get_settings</primary></indexterm>gtk_widget_get_settings <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_widget_get_size_request</primary></indexterm>gtk_widget_get_size_request <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_widget_get_style</primary></indexterm>gtk_widget_get_style <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_widget_get_toplevel</primary></indexterm>gtk_widget_get_toplevel <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_widget_get_type</primary></indexterm>gtk_widget_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_widget_get_visual</primary></indexterm>gtk_widget_get_visual <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_widget_grab_default</primary></indexterm>gtk_widget_grab_default <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_widget_grab_focus</primary></indexterm>gtk_widget_grab_focus <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_widget_has_screen</primary></indexterm>gtk_widget_has_screen <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_widget_help_type_get_type</primary></indexterm>gtk_widget_help_type_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_widget_hide</primary></indexterm>gtk_widget_hide <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_widget_hide_all</primary></indexterm>gtk_widget_hide_all <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_widget_hide_on_delete</primary></indexterm>gtk_widget_hide_on_delete <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_widget_intersect</primary></indexterm>gtk_widget_intersect <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_widget_is_ancestor</primary></indexterm>gtk_widget_is_ancestor <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_widget_is_focus</primary></indexterm>gtk_widget_is_focus <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_widget_list_accel_closures</primary></indexterm>gtk_widget_list_accel_closures <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_widget_list_mnemonic_labels</primary></indexterm>gtk_widget_list_mnemonic_labels <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_widget_map</primary></indexterm>gtk_widget_map <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_widget_mnemonic_activate</primary></indexterm>gtk_widget_mnemonic_activate <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_widget_modify_base</primary></indexterm>gtk_widget_modify_base <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_widget_modify_bg</primary></indexterm>gtk_widget_modify_bg <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_widget_modify_fg</primary></indexterm>gtk_widget_modify_fg <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_widget_modify_font</primary></indexterm>gtk_widget_modify_font <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_widget_modify_style</primary></indexterm>gtk_widget_modify_style <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_widget_modify_text</primary></indexterm>gtk_widget_modify_text <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_widget_new</primary></indexterm>gtk_widget_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_widget_path</primary></indexterm>gtk_widget_path <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_widget_pop_colormap</primary></indexterm>gtk_widget_pop_colormap <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_widget_pop_composite_child</primary></indexterm>gtk_widget_pop_composite_child <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_widget_push_colormap</primary></indexterm>gtk_widget_push_colormap <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_widget_push_composite_child</primary></indexterm>gtk_widget_push_composite_child <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_widget_queue_draw</primary></indexterm>gtk_widget_queue_draw <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_widget_queue_draw_area</primary></indexterm>gtk_widget_queue_draw_area <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_widget_queue_resize</primary></indexterm>gtk_widget_queue_resize <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_widget_queue_resize_no_redraw</primary></indexterm>gtk_widget_queue_resize_no_redraw <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_widget_realize</primary></indexterm>gtk_widget_realize <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_widget_ref</primary></indexterm>gtk_widget_ref <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_widget_region_intersect</primary></indexterm>gtk_widget_region_intersect <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_widget_remove_accelerator</primary></indexterm>gtk_widget_remove_accelerator <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_widget_remove_mnemonic_label</primary></indexterm>gtk_widget_remove_mnemonic_label <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_widget_render_icon</primary></indexterm>gtk_widget_render_icon <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_widget_reparent</primary></indexterm>gtk_widget_reparent <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_widget_reset_rc_styles</primary></indexterm>gtk_widget_reset_rc_styles <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_widget_reset_shapes</primary></indexterm>gtk_widget_reset_shapes <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_widget_send_expose</primary></indexterm>gtk_widget_send_expose <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_widget_set_accel_path</primary></indexterm>gtk_widget_set_accel_path <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_widget_set_app_paintable</primary></indexterm>gtk_widget_set_app_paintable <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_widget_set_child_visible</primary></indexterm>gtk_widget_set_child_visible <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_widget_set_colormap</primary></indexterm>gtk_widget_set_colormap <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_widget_set_composite_name</primary></indexterm>gtk_widget_set_composite_name <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_widget_set_default_colormap</primary></indexterm>gtk_widget_set_default_colormap <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_widget_set_default_direction</primary></indexterm>gtk_widget_set_default_direction <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_widget_set_direction</primary></indexterm>gtk_widget_set_direction <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_widget_set_double_buffered</primary></indexterm>gtk_widget_set_double_buffered <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_widget_set_events</primary></indexterm>gtk_widget_set_events <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_widget_set_extension_events</primary></indexterm>gtk_widget_set_extension_events <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_widget_set_name</primary></indexterm>gtk_widget_set_name <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_widget_set_no_show_all</primary></indexterm>gtk_widget_set_no_show_all <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_widget_set_parent</primary></indexterm>gtk_widget_set_parent <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_widget_set_parent_window</primary></indexterm>gtk_widget_set_parent_window <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_widget_set_redraw_on_allocate</primary></indexterm>gtk_widget_set_redraw_on_allocate <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_widget_set_scroll_adjustments</primary></indexterm>gtk_widget_set_scroll_adjustments <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_widget_set_sensitive</primary></indexterm>gtk_widget_set_sensitive <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_widget_set_size_request</primary></indexterm>gtk_widget_set_size_request <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_widget_set_state</primary></indexterm>gtk_widget_set_state <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_widget_set_style</primary></indexterm>gtk_widget_set_style <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_widget_shape_combine_mask</primary></indexterm>gtk_widget_shape_combine_mask <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_widget_show</primary></indexterm>gtk_widget_show <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_widget_show_all</primary></indexterm>gtk_widget_show_all <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_widget_show_now</primary></indexterm>gtk_widget_show_now <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_widget_size_allocate</primary></indexterm>gtk_widget_size_allocate <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_widget_size_request</primary></indexterm>gtk_widget_size_request <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_widget_style_get</primary></indexterm>gtk_widget_style_get <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_widget_style_get_property</primary></indexterm>gtk_widget_style_get_property <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_widget_style_get_valist</primary></indexterm>gtk_widget_style_get_valist <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_widget_thaw_child_notify</primary></indexterm>gtk_widget_thaw_child_notify <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_widget_translate_coordinates</primary></indexterm>gtk_widget_translate_coordinates <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_widget_unmap</primary></indexterm>gtk_widget_unmap <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_widget_unparent</primary></indexterm>gtk_widget_unparent <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_widget_unrealize</primary></indexterm>gtk_widget_unrealize <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_widget_unref</primary></indexterm>gtk_widget_unref <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_window_activate_default</primary></indexterm>gtk_window_activate_default <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_window_activate_focus</primary></indexterm>gtk_window_activate_focus <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_window_activate_key</primary></indexterm>gtk_window_activate_key <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_window_add_accel_group</primary></indexterm>gtk_window_add_accel_group <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_window_add_embedded_xid</primary></indexterm>gtk_window_add_embedded_xid <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_window_add_mnemonic</primary></indexterm>gtk_window_add_mnemonic <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_window_begin_move_drag</primary></indexterm>gtk_window_begin_move_drag <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_window_begin_resize_drag</primary></indexterm>gtk_window_begin_resize_drag <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_window_deiconify</primary></indexterm>gtk_window_deiconify <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_window_fullscreen</primary></indexterm>gtk_window_fullscreen <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_window_get_accept_focus</primary></indexterm>gtk_window_get_accept_focus <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_window_get_decorated</primary></indexterm>gtk_window_get_decorated <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_window_get_default_icon_list</primary></indexterm>gtk_window_get_default_icon_list <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_window_get_default_size</primary></indexterm>gtk_window_get_default_size <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_window_get_destroy_with_parent</primary></indexterm>gtk_window_get_destroy_with_parent <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_window_get_focus</primary></indexterm>gtk_window_get_focus <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_window_get_focus_on_map</primary></indexterm>gtk_window_get_focus_on_map <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_window_get_frame_dimensions</primary></indexterm>gtk_window_get_frame_dimensions <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_window_get_gravity</primary></indexterm>gtk_window_get_gravity <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_window_get_has_frame</primary></indexterm>gtk_window_get_has_frame <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_window_get_icon</primary></indexterm>gtk_window_get_icon <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_window_get_icon_list</primary></indexterm>gtk_window_get_icon_list <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_window_get_icon_name</primary></indexterm>gtk_window_get_icon_name <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_window_get_mnemonic_modifier</primary></indexterm>gtk_window_get_mnemonic_modifier <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_window_get_modal</primary></indexterm>gtk_window_get_modal <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_window_get_position</primary></indexterm>gtk_window_get_position <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_window_get_resizable</primary></indexterm>gtk_window_get_resizable <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_window_get_role</primary></indexterm>gtk_window_get_role <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_window_get_screen</primary></indexterm>gtk_window_get_screen <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_window_get_size</primary></indexterm>gtk_window_get_size <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_window_get_skip_pager_hint</primary></indexterm>gtk_window_get_skip_pager_hint <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_window_get_skip_taskbar_hint</primary></indexterm>gtk_window_get_skip_taskbar_hint <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_window_get_title</primary></indexterm>gtk_window_get_title <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_window_get_transient_for</primary></indexterm>gtk_window_get_transient_for <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_window_get_type</primary></indexterm>gtk_window_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_window_get_type_hint</primary></indexterm>gtk_window_get_type_hint <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_window_get_urgency_hint</primary></indexterm>gtk_window_get_urgency_hint <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_window_group_add_window</primary></indexterm>gtk_window_group_add_window <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_window_group_get_type</primary></indexterm>gtk_window_group_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_window_group_new</primary></indexterm>gtk_window_group_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_window_group_remove_window</primary></indexterm>gtk_window_group_remove_window <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_window_has_toplevel_focus</primary></indexterm>gtk_window_has_toplevel_focus <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_window_iconify</primary></indexterm>gtk_window_iconify <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_window_is_active</primary></indexterm>gtk_window_is_active <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_window_list_toplevels</primary></indexterm>gtk_window_list_toplevels <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_window_maximize</primary></indexterm>gtk_window_maximize <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_window_mnemonic_activate</primary></indexterm>gtk_window_mnemonic_activate <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_window_move</primary></indexterm>gtk_window_move <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_window_new</primary></indexterm>gtk_window_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_window_parse_geometry</primary></indexterm>gtk_window_parse_geometry <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_window_position_get_type</primary></indexterm>gtk_window_position_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_window_present</primary></indexterm>gtk_window_present <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_window_present_with_time</primary></indexterm>gtk_window_present_with_time <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_window_propagate_key_event</primary></indexterm>gtk_window_propagate_key_event <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_window_remove_accel_group</primary></indexterm>gtk_window_remove_accel_group <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_window_remove_embedded_xid</primary></indexterm>gtk_window_remove_embedded_xid <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_window_remove_mnemonic</primary></indexterm>gtk_window_remove_mnemonic <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_window_reshow_with_initial_size</primary></indexterm>gtk_window_reshow_with_initial_size <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_window_resize</primary></indexterm>gtk_window_resize <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_window_set_accept_focus</primary></indexterm>gtk_window_set_accept_focus <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_window_set_auto_startup_notification</primary></indexterm>gtk_window_set_auto_startup_notification <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_window_set_decorated</primary></indexterm>gtk_window_set_decorated <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_window_set_default</primary></indexterm>gtk_window_set_default <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_window_set_default_icon</primary></indexterm>gtk_window_set_default_icon <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_window_set_default_icon_from_file</primary></indexterm>gtk_window_set_default_icon_from_file <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_window_set_default_icon_list</primary></indexterm>gtk_window_set_default_icon_list <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_window_set_default_icon_name</primary></indexterm>gtk_window_set_default_icon_name <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_window_set_default_size</primary></indexterm>gtk_window_set_default_size <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_window_set_destroy_with_parent</primary></indexterm>gtk_window_set_destroy_with_parent <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_window_set_focus</primary></indexterm>gtk_window_set_focus <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_window_set_focus_on_map</primary></indexterm>gtk_window_set_focus_on_map <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_window_set_frame_dimensions</primary></indexterm>gtk_window_set_frame_dimensions <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_window_set_geometry_hints</primary></indexterm>gtk_window_set_geometry_hints <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_window_set_gravity</primary></indexterm>gtk_window_set_gravity <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_window_set_has_frame</primary></indexterm>gtk_window_set_has_frame <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_window_set_icon</primary></indexterm>gtk_window_set_icon <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_window_set_icon_from_file</primary></indexterm>gtk_window_set_icon_from_file <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_window_set_icon_list</primary></indexterm>gtk_window_set_icon_list <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_window_set_icon_name</primary></indexterm>gtk_window_set_icon_name <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_window_set_keep_above</primary></indexterm>gtk_window_set_keep_above <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_window_set_keep_below</primary></indexterm>gtk_window_set_keep_below <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_window_set_mnemonic_modifier</primary></indexterm>gtk_window_set_mnemonic_modifier <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_window_set_modal</primary></indexterm>gtk_window_set_modal <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_window_set_position</primary></indexterm>gtk_window_set_position <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_window_set_resizable</primary></indexterm>gtk_window_set_resizable <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_window_set_role</primary></indexterm>gtk_window_set_role <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_window_set_screen</primary></indexterm>gtk_window_set_screen <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_window_set_skip_pager_hint</primary></indexterm>gtk_window_set_skip_pager_hint <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_window_set_skip_taskbar_hint</primary></indexterm>gtk_window_set_skip_taskbar_hint <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_window_set_title</primary></indexterm>gtk_window_set_title <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_window_set_transient_for</primary></indexterm>gtk_window_set_transient_for <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_window_set_type_hint</primary></indexterm>gtk_window_set_type_hint <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_window_set_urgency_hint</primary></indexterm>gtk_window_set_urgency_hint <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_window_set_wmclass</primary></indexterm>gtk_window_set_wmclass <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_window_stick</primary></indexterm>gtk_window_stick <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_window_type_get_type</primary></indexterm>gtk_window_type_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_window_unfullscreen</primary></indexterm>gtk_window_unfullscreen <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_window_unmaximize</primary></indexterm>gtk_window_unmaximize <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_window_unstick</primary></indexterm>gtk_window_unstick <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_wrap_mode_get_type</primary></indexterm>gtk_wrap_mode_get_type <LINK LINKEND="REFSTD.libgtk.x11.2.0.1">[Gobject 2.8]</LINK></ENTRY>
<ENTRY></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
An LSB conforming implementation shall provide the generic deprecated functions
for GTK main Widgets library specified in <XREF linkend="tbl-libgtk-x11-2.0-gtk-m-depints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<NOTE><PARA>These interfaces are deprecated, and applications
should avoid using them.
These interfaces may be withdrawn
in future releases of this specification.
</PARA></NOTE>
<!--libgroupdepints-->
<TABLE id="tbl-libgtk-x11-2.0-gtk-m-depints">
<TITLE>libgtk-x11-2.0 - GTK main Widgets library Deprecated Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>gtk_binding_parse_binding</primary></indexterm>gtk_binding_parse_binding <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_file_selection_complete</primary></indexterm>gtk_file_selection_complete <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_file_selection_get_filename</primary></indexterm>gtk_file_selection_get_filename <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_file_selection_get_select_multiple</primary></indexterm>gtk_file_selection_get_select_multiple <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_file_selection_get_selections</primary></indexterm>gtk_file_selection_get_selections <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_file_selection_hide_fileop_buttons</primary></indexterm>gtk_file_selection_hide_fileop_buttons <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_file_selection_new</primary></indexterm>gtk_file_selection_new <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_file_selection_set_filename</primary></indexterm>gtk_file_selection_set_filename <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_file_selection_set_select_multiple</primary></indexterm>gtk_file_selection_set_select_multiple <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_file_selection_show_fileop_buttons</primary></indexterm>gtk_file_selection_show_fileop_buttons <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_menu_item_remove_submenu</primary></indexterm>gtk_menu_item_remove_submenu <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_rc_style_ref</primary></indexterm>gtk_rc_style_ref <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_rc_style_unref</primary></indexterm>gtk_rc_style_unref <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_toolbar_get_tooltips</primary></indexterm>gtk_toolbar_get_tooltips <LINK LINKEND="REFSTD.libgtk.x11.2.0.3">[LSB]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_toolbar_set_tooltips</primary></indexterm>gtk_toolbar_set_tooltips <LINK LINKEND="REFSTD.libgtk.x11.2.0.3">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_tree_view_tree_to_widget_coords</primary></indexterm>gtk_tree_view_tree_to_widget_coords <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_tree_view_widget_to_tree_coords</primary></indexterm>gtk_tree_view_widget_to_tree_coords <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_widget_ref</primary></indexterm>gtk_widget_ref <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_widget_unref</primary></indexterm>gtk_widget_unref <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for GTK main Widgets library specified in <XREF linkend="tbl-libgtk-x11-2.0-gtk-m-data">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<TABLE id="tbl-libgtk-x11-2.0-gtk-m-data">
<TITLE>libgtk-x11-2.0 - GTK main Widgets library Data Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>gtk_binary_age</primary></indexterm>gtk_binary_age <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_debug_flags</primary></indexterm>gtk_debug_flags <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_interface_age</primary></indexterm>gtk_interface_age <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_major_version</primary></indexterm>gtk_major_version <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gtk_micro_version</primary></indexterm>gtk_micro_version <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
<ENTRY><indexterm><primary>gtk_minor_version</primary></indexterm>gtk_minor_version <LINK LINKEND="REFSTD.libgtk.x11.2.0.2">[Gtk 2.8]</LINK></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>
</SECT2>
</SECT1>
<SECT1 ID=libgtk-x11-2.0-ddefs>
<TITLE>Data Definitions for libgtk-x11-2.0</TITLE>
<PARA>
This section defines global identifiers and their values that are associated
with interfaces contained in libgtk-x11-2.0.
These definitions are organized into groups that
correspond to system headers. This convention is used as a
convenience for the reader, and does not imply the existence
of these headers, or their content.
Where an interface is defined as requiring a particular system header file
all of the data definitions for that system header file presented here shall be in effect.
</PARA>
<PARA>
This section gives data definitions to promote binary application
portability, not to repeat source interface definitions available
elsewhere. System providers and application developers should use this ABI
to supplement - not to replace - source interface definition specifications.
</PARA>
<PARA>
This specification uses the <XREF LINKEND='std.ISOC99'> C Language as the reference programming language, and data definitions are specified in ISO C format. The C language is used here as a convenient notation. Using a C language description of these data objects does not preclude their use by other programming languages.</PARA>
<SECT2>
<TITLE>gtk-2.0/gtk/gtk.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define GTK_NOTE(type,action)
#define GTK_OBJECT_FLOATING(obj)	 \
	((GTK_OBJECT_FLAGS (obj) &amp; GTK_FLOATING) != 0)
#define GTK_WIDGET_APP_PAINTABLE(wid)	 \
	((GTK_WIDGET_FLAGS (wid) &amp; GTK_APP_PAINTABLE) != 0)
#define GTK_WIDGET_CAN_DEFAULT(wid)	 \
	((GTK_WIDGET_FLAGS (wid) &amp; GTK_CAN_DEFAULT) != 0)
#define GTK_WIDGET_CAN_FOCUS(wid)	 \
	((GTK_WIDGET_FLAGS (wid) &amp; GTK_CAN_FOCUS) != 0)
#define GTK_WIDGET_COMPOSITE_CHILD(wid)	 \
	((GTK_WIDGET_FLAGS (wid) &amp; GTK_COMPOSITE_CHILD) != 0)
#define GTK_WIDGET_DOUBLE_BUFFERED(wid)	 \
	((GTK_WIDGET_FLAGS (wid) &amp; GTK_DOUBLE_BUFFERED) != 0)
#define GTK_WIDGET_HAS_DEFAULT(wid)	 \
	((GTK_WIDGET_FLAGS (wid) &amp; GTK_HAS_DEFAULT) != 0)
#define GTK_WIDGET_HAS_FOCUS(wid)	 \
	((GTK_WIDGET_FLAGS (wid) &amp; GTK_HAS_FOCUS) != 0)
#define GTK_WIDGET_HAS_GRAB(wid)	 \
	((GTK_WIDGET_FLAGS (wid) &amp; GTK_HAS_GRAB) != 0)
#define GTK_WIDGET_MAPPED(wid)	 \
	((GTK_WIDGET_FLAGS (wid) &amp; GTK_MAPPED) != 0)
#define GTK_WIDGET_NO_WINDOW(wid)	 \
	((GTK_WIDGET_FLAGS (wid) &amp; GTK_NO_WINDOW) != 0)
#define GTK_WIDGET_PARENT_SENSITIVE(wid)	 \
	((GTK_WIDGET_FLAGS (wid) &amp; GTK_PARENT_SENSITIVE) != 0)
#define GTK_WIDGET_RC_STYLE(wid)	 \
	((GTK_WIDGET_FLAGS (wid) &amp; GTK_RC_STYLE) != 0)
#define GTK_WIDGET_REALIZED(wid)	 \
	((GTK_WIDGET_FLAGS (wid) &amp; GTK_REALIZED) != 0)
#define GTK_WIDGET_RECEIVES_DEFAULT(wid)	 \
	((GTK_WIDGET_FLAGS (wid) &amp; GTK_RECEIVES_DEFAULT) != 0)
#define GTK_WIDGET_SENSITIVE(wid)	 \
	((GTK_WIDGET_FLAGS (wid) &amp; GTK_SENSITIVE) != 0)
#define GTK_WIDGET_TOPLEVEL(wid)	 \
	((GTK_WIDGET_FLAGS (wid) &amp; GTK_TOPLEVEL) != 0)
#define GTK_WIDGET_VISIBLE(wid)	 \
	((GTK_WIDGET_FLAGS (wid) &amp; GTK_VISIBLE) != 0)
#define GTK_TYPE_CALENDAR_DISPLAY_OPTIONS	 \
	(gtk_calendar_display_options_get_type())
#define GTK_TYPE_CELL_RENDERER_PIXBUF	 \
	(gtk_cell_renderer_pixbuf_get_type ())
#define GTK_TYPE_CELL_RENDERER_PROGRESS	 \
	(gtk_cell_renderer_progress_get_type ())
#define GTK_TYPE_CELL_RENDERER_TOGGLE	 \
	(gtk_cell_renderer_toggle_get_type ())
#define GTK_ICON_VIEW(obj)	 \
	(GTK_CHECK_CAST ((obj), GTK_TYPE_ICON_VIEW, GtkIconView))
#define GTK_OBJECT(object)	 \
	(GTK_CHECK_CAST ((object), GTK_TYPE_OBJECT, GtkObject))
#define GTK_ICON_VIEW_CLASS(klass)	 \
	(GTK_CHECK_CLASS_CAST ((klass), GTK_TYPE_ICON_VIEW, \
	GtkIconViewClass))
#define GTK_LIST_CLASS(klass)	 \
	(GTK_CHECK_CLASS_CAST ((klass), GTK_TYPE_LIST, GtkListClass))
#define GTK_OBJECT_CLASS(klass)	 \
	(GTK_CHECK_CLASS_CAST ((klass), GTK_TYPE_OBJECT, GtkObjectClass))
#define GTK_IS_ICON_VIEW_CLASS(klass)	 \
	(GTK_CHECK_CLASS_TYPE ((klass), GTK_TYPE_ICON_VIEW))
#define GTK_IS_LIST_CLASS(klass)	 \
	(GTK_CHECK_CLASS_TYPE ((klass), GTK_TYPE_LIST))
#define GTK_IS_OBJECT_CLASS(klass)	 \
	(GTK_CHECK_CLASS_TYPE ((klass), GTK_TYPE_OBJECT))
#define GTK_ICON_VIEW_GET_CLASS(obj)	 \
	(GTK_CHECK_GET_CLASS ((obj), GTK_TYPE_ICON_VIEW, GtkIconViewClass))
#define GTK_LIST_GET_CLASS(obj)	 \
	(GTK_CHECK_GET_CLASS ((obj), GTK_TYPE_LIST, GtkListClass))
#define GTK_OBJECT_GET_CLASS(object)	 \
	(GTK_CHECK_GET_CLASS ((object), GTK_TYPE_OBJECT, GtkObjectClass))
#define GTK_TYPE_COLOR_SELECTION_DIALOG	 \
	(gtk_color_selection_dialog_get_type ())
#define GTK_TYPE_FONT_SELECTION_DIALOG	 \
	(gtk_font_selection_dialog_get_type ())
#define GTK_IS_RESIZE_CONTAINER(widget)	 \
	(GTK_IS_CONTAINER (widget) &amp;&amp; ((GtkContainer*) (widget))->resize_mode \
	!= GTK_RESIZE_PARENT)
#define GTK_CHECK_VERSION(major,minor,micro)	 \
	(GTK_MAJOR_VERSION > (major) || (GTK_MAJOR_VERSION == (major) &amp;&amp; \
	GTK_MINOR_VERSION > (minor)) || (GTK_MAJOR_VERSION == (major) &amp;&amp; \
	GTK_MINOR_VERSION == (minor) &amp;&amp; GTK_MICRO_VERSION >= (micro)))
#define GTK_TYPE_PROGRESS_BAR_ORIENTATION	 \
	(gtk_progress_bar_orientation_get_type())
#define GTK_TYPE_SPIN_BUTTON_UPDATE_POLICY	 \
	(gtk_spin_button_update_policy_get_type())
#define GTK_TYPE_TREE_VIEW_COLUMN_SIZING	 \
	(gtk_tree_view_column_sizing_get_type())
#define GTK_TYPE_TREE_VIEW_DROP_POSITION	 \
	(gtk_tree_view_drop_position_get_type())
#define GTK_TYPE_UI_MANAGER_ITEM_TYPE	 \
	(gtk_ui_manager_item_type_get_type())
#define GTK_WIDGET_IS_SENSITIVE(wid)	 \
	(GTK_WIDGET_SENSITIVE (wid) &amp;&amp; GTK_WIDGET_PARENT_SENSITIVE (wid))
#define GTK_WIDGET_DRAWABLE(wid)	 \
	(GTK_WIDGET_VISIBLE (wid) &amp;&amp; GTK_WIDGET_MAPPED (wid))
#define GTK_ABOUT_DIALOG_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_ABOUT_DIALOG, \
	GtkAboutDialogClass))
#define GTK_ACCEL_GROUP_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_ACCEL_GROUP, \
	GtkAccelGroupClass))
#define GTK_ACCEL_LABEL_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_ACCEL_LABEL, \
	GtkAccelLabelClass))
#define GTK_ACCEL_MAP_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_ACCEL_MAP, \
	GtkAccelMapClass))
#define GTK_ACCESSIBLE_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_ACCESSIBLE, \
	GtkAccessibleClass))
#define GTK_ACTION_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_ACTION, GtkActionClass))
#define GTK_ADJUSTMENT_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_ADJUSTMENT, \
	GtkAdjustmentClass))
#define GTK_ALIGNMENT_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_ALIGNMENT, \
	GtkAlignmentClass))
#define GTK_ARROW_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_ARROW, GtkArrowClass))
#define GTK_ASPECT_FRAME_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_ASPECT_FRAME, \
	GtkAspectFrameClass))
#define GTK_BIN_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_BIN, GtkBinClass))
#define GTK_BOX_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_BOX, GtkBoxClass))
#define GTK_BUTTON_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_BUTTON, GtkButtonClass))
#define GTK_BUTTON_BOX_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_BUTTON_BOX, \
	GtkButtonBoxClass))
#define GTK_CALENDAR_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_CALENDAR, \
	GtkCalendarClass))
#define GTK_CELL_RENDERER_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_CELL_RENDERER, \
	GtkCellRendererClass))
#define GTK_CELL_RENDERER_COMBO_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_CELL_RENDERER_COMBO, \
	GtkCellRendererComboClass))
#define GTK_CELL_RENDERER_PIXBUF_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_CELL_RENDERER_PIXBUF, \
	GtkCellRendererPixbufClass))
#define GTK_CELL_RENDERER_PROGRESS_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_CELL_RENDERER_PROGRESS, \
	GtkCellRendererProgressClass))
#define GTK_CELL_RENDERER_TEXT_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_CELL_RENDERER_TEXT, \
	GtkCellRendererTextClass))
#define GTK_CELL_RENDERER_TOGGLE_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_CELL_RENDERER_TOGGLE, \
	GtkCellRendererToggleClass))
#define GTK_CHECK_BUTTON_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_CHECK_BUTTON, \
	GtkCheckButtonClass))
#define GTK_CHECK_MENU_ITEM_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_CHECK_MENU_ITEM, \
	GtkCheckMenuItemClass))
#define GTK_COLOR_BUTTON_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_COLOR_BUTTON, \
	GtkColorButtonClass))
#define GTK_COLOR_SELECTION_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_COLOR_SELECTION, \
	GtkColorSelectionClass))
#define GTK_COLOR_SELECTION_DIALOG_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_COLOR_SELECTION_DIALOG, \
	GtkColorSelectionDialogClass))
#define GTK_CONTAINER_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_CONTAINER, \
	GtkContainerClass))
#define GTK_CURVE_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_CURVE, GtkCurveClass))
#define GTK_DIALOG_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_DIALOG, GtkDialogClass))
#define GTK_DRAWING_AREA_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_DRAWING_AREA, \
	GtkDrawingAreaClass))
#define GTK_ENTRY_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_ENTRY, GtkEntryClass))
#define GTK_ENTRY_COMPLETION_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_ENTRY_COMPLETION, \
	GtkEntryCompletionClass))
#define GTK_EVENT_BOX_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_EVENT_BOX, \
	GtkEventBoxClass))
#define GTK_EXPANDER_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_EXPANDER, \
	GtkExpanderClass))
#define GTK_FILE_CHOOSER_BUTTON_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_FILE_CHOOSER_BUTTON, \
	GtkFileChooserButtonClass))
#define GTK_FILE_CHOOSER_DIALOG_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_FILE_CHOOSER_DIALOG, \
	GtkFileChooserDialogClass))
#define GTK_FILE_CHOOSER_WIDGET_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_FILE_CHOOSER_WIDGET, \
	GtkFileChooserWidgetClass))
#define GTK_FILE_SELECTION_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_FILE_SELECTION, \
	GtkFileSelectionClass))
#define GTK_FIXED_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_FIXED, GtkFixedClass))
#define GTK_FONT_BUTTON_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_FONT_BUTTON, \
	GtkFontButtonClass))
#define GTK_FONT_SELECTION_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_FONT_SELECTION, \
	GtkFontSelectionClass))
#define GTK_FONT_SELECTION_DIALOG_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_FONT_SELECTION_DIALOG, \
	GtkFontSelectionDialogClass))
#define GTK_FRAME_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_FRAME, GtkFrameClass))
#define GTK_GAMMA_CURVE_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_GAMMA_CURVE, \
	GtkGammaCurveClass))
#define GTK_HANDLE_BOX_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_HANDLE_BOX, \
	GtkHandleBoxClass))
#define GTK_HBOX_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_HBOX, GtkHBoxClass))
#define GTK_HBUTTON_BOX_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_HBUTTON_BOX, \
	GtkHButtonBoxClass))
#define GTK_HPANED_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_HPANED, GtkHPanedClass))
#define GTK_HRULER_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_HRULER, GtkHRulerClass))
#define GTK_HSCALE_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_HSCALE, GtkHScaleClass))
#define GTK_HSCROLLBAR_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_HSCROLLBAR, \
	GtkHScrollbarClass))
#define GTK_HSEPARATOR_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_HSEPARATOR, \
	GtkHSeparatorClass))
#define GTK_ICON_FACTORY_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_ICON_FACTORY, \
	GtkIconFactoryClass))
#define GTK_ICON_THEME_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_ICON_THEME, \
	GtkIconThemeClass))
#define GTK_IMAGE_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_IMAGE, GtkImageClass))
#define GTK_IMAGE_MENU_ITEM_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_IMAGE_MENU_ITEM, \
	GtkImageMenuItemClass))
#define GTK_IM_CONTEXT_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_IM_CONTEXT, \
	GtkIMContextClass))
#define GTK_IM_CONTEXT_SIMPLE_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_IM_CONTEXT_SIMPLE, \
	GtkIMContextSimpleClass))
#define GTK_IM_MULTICONTEXT_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_IM_MULTICONTEXT, \
	GtkIMMulticontextClass))
#define GTK_INPUT_DIALOG_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_INPUT_DIALOG, \
	GtkInputDialogClass))
#define GTK_INVISIBLE_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_INVISIBLE, \
	GtkInvisibleClass))
#define GTK_ITEM_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_ITEM, GtkItemClass))
#define GTK_LABEL_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_LABEL, GtkLabelClass))
#define GTK_LAYOUT_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_LAYOUT, GtkLayoutClass))
#define GTK_LIST_STORE_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_LIST_STORE, \
	GtkListStoreClass))
#define GTK_MENU_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_MENU, GtkMenuClass))
#define GTK_MENU_BAR_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_MENU_BAR, \
	GtkMenuBarClass))
#define GTK_MENU_ITEM_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_MENU_ITEM, \
	GtkMenuItemClass))
#define GTK_MENU_SHELL_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_MENU_SHELL, \
	GtkMenuShellClass))
#define GTK_MESSAGE_DIALOG_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_MESSAGE_DIALOG, \
	GtkMessageDialogClass))
#define GTK_MISC_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_MISC, GtkMiscClass))
#define GTK_NOTEBOOK_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_NOTEBOOK, \
	GtkNotebookClass))
#define GTK_PANED_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_PANED, GtkPanedClass))
#define GTK_PLUG_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_PLUG, GtkPlugClass))
#define GTK_PROGRESS_BAR_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_PROGRESS_BAR, \
	GtkProgressBarClass))
#define GTK_RADIO_ACTION_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_RADIO_ACTION, \
	GtkRadioActionClass))
#define GTK_RADIO_BUTTON_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_RADIO_BUTTON, \
	GtkRadioButtonClass))
#define GTK_RADIO_MENU_ITEM_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_RADIO_MENU_ITEM, \
	GtkRadioMenuItemClass))
#define GTK_RADIO_TOOL_BUTTON_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_RADIO_TOOL_BUTTON, \
	GtkRadioToolButtonClass))
#define GTK_RANGE_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_RANGE, GtkRangeClass))
#define GTK_RC_STYLE_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_RC_STYLE, \
	GtkRcStyleClass))
#define GTK_RULER_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_RULER, GtkRulerClass))
#define GTK_SCALE_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_SCALE, GtkScaleClass))
#define GTK_SCROLLBAR_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_SCROLLBAR, \
	GtkScrollbarClass))
#define GTK_SCROLLED_WINDOW_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_SCROLLED_WINDOW, \
	GtkScrolledWindowClass))
#define GTK_SEPARATOR_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_SEPARATOR, \
	GtkSeparatorClass))
#define GTK_SEPARATOR_MENU_ITEM_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_SEPARATOR_MENU_ITEM, \
	GtkSeparatorMenuItemClass))
#define GTK_SEPARATOR_TOOL_ITEM_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_SEPARATOR_TOOL_ITEM, \
	GtkSeparatorToolItemClass))
#define GTK_SETTINGS_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_SETTINGS, \
	GtkSettingsClass))
#define GTK_SIZE_GROUP_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_SIZE_GROUP, \
	GtkSizeGroupClass))
#define GTK_SOCKET_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_SOCKET, GtkSocketClass))
#define GTK_SPIN_BUTTON_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_SPIN_BUTTON, \
	GtkSpinButtonClass))
#define GTK_STATUSBAR_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_STATUSBAR, \
	GtkStatusbarClass))
#define GTK_STYLE_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_STYLE, GtkStyleClass))
#define GTK_TABLE_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_TABLE, GtkTableClass))
#define GTK_TEAROFF_MENU_ITEM_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_TEAROFF_MENU_ITEM, \
	GtkTearoffMenuItemClass))
#define GTK_TEXT_BUFFER_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_TEXT_BUFFER, \
	GtkTextBufferClass))
#define GTK_TEXT_CHILD_ANCHOR_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_TEXT_CHILD_ANCHOR, \
	GtkTextChildAnchorClass))
#define GTK_TEXT_MARK_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_TEXT_MARK, \
	GtkTextMarkClass))
#define GTK_TEXT_TAG_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_TEXT_TAG, \
	GtkTextTagClass))
#define GTK_TEXT_TAG_TABLE_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_TEXT_TAG_TABLE, \
	GtkTextTagTableClass))
#define GTK_TEXT_VIEW_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_TEXT_VIEW, \
	GtkTextViewClass))
#define GTK_TOGGLE_ACTION_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_TOGGLE_ACTION, \
	GtkToggleActionClass))
#define GTK_TOGGLE_BUTTON_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_TOGGLE_BUTTON, \
	GtkToggleButtonClass))
#define GTK_TOGGLE_TOOL_BUTTON_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_TOGGLE_TOOL_BUTTON, \
	GtkToggleToolButtonClass))
#define GTK_TOOLBAR_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_TOOLBAR, \
	GtkToolbarClass))
#define GTK_TOOLTIPS_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_TOOLTIPS, \
	GtkTooltipsClass))
#define GTK_TOOL_BUTTON_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_TOOL_BUTTON, \
	GtkToolButtonClass))
#define GTK_TOOL_ITEM_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_TOOL_ITEM, \
	GtkToolItemClass))
#define GTK_TREE_MODEL_SORT_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_TREE_MODEL_SORT, \
	GtkTreeModelSortClass))
#define GTK_TREE_SELECTION_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_TREE_SELECTION, \
	GtkTreeSelectionClass))
#define GTK_TREE_STORE_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_TREE_STORE, \
	GtkTreeStoreClass))
#define GTK_TREE_VIEW_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_TREE_VIEW, \
	GtkTreeViewClass))
#define GTK_TREE_VIEW_COLUMN_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_TREE_VIEW_COLUMN, \
	GtkTreeViewColumnClass))
#define GTK_UI_MANAGER_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_UI_MANAGER, \
	GtkUIManagerClass))
#define GTK_VBOX_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_VBOX, GtkVBoxClass))
#define GTK_VBUTTON_BOX_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_VBUTTON_BOX, \
	GtkVButtonBoxClass))
#define GTK_VIEWPORT_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_VIEWPORT, \
	GtkViewportClass))
#define GTK_VPANED_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_VPANED, GtkVPanedClass))
#define GTK_VRULER_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_VRULER, GtkVRulerClass))
#define GTK_VSCALE_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_VSCALE, GtkVScaleClass))
#define GTK_VSCROLLBAR_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_VSCROLLBAR, \
	GtkVScrollbarClass))
#define GTK_VSEPARATOR_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_VSEPARATOR, \
	GtkVSeparatorClass))
#define GTK_WIDGET_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_WIDGET, GtkWidgetClass))
#define GTK_WINDOW_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_WINDOW, GtkWindowClass))
#define GTK_WINDOW_GROUP_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_WINDOW_GROUP, \
	GtkWindowGroupClass))
#define GTK_CELL_EDITABLE_CLASS(obj)	 \
	(G_TYPE_CHECK_CLASS_CAST ((obj), GTK_TYPE_CELL_EDITABLE, \
	GtkCellEditableIface))
#define GTK_TREE_SORTABLE_CLASS(obj)	 \
	(G_TYPE_CHECK_CLASS_CAST ((obj), GTK_TYPE_TREE_SORTABLE, \
	GtkTreeSortableIface))
#define GTK_ACTION_GROUP_CLASS(vtable)	 \
	(G_TYPE_CHECK_CLASS_CAST ((vtable), GTK_TYPE_ACTION_GROUP, \
	GtkActionGroupClass))
#define GTK_CELL_VIEW_CLASS(vtable)	 \
	(G_TYPE_CHECK_CLASS_CAST ((vtable), GTK_TYPE_CELL_VIEW, \
	GtkCellViewClass))
#define GTK_COMBO_BOX_CLASS(vtable)	 \
	(G_TYPE_CHECK_CLASS_CAST ((vtable), GTK_TYPE_COMBO_BOX, \
	GtkComboBoxClass))
#define GTK_COMBO_BOX_ENTRY_CLASS(vtable)	 \
	(G_TYPE_CHECK_CLASS_CAST ((vtable), GTK_TYPE_COMBO_BOX_ENTRY, \
	GtkComboBoxEntryClass))
#define GTK_EDITABLE_CLASS(vtable)	 \
	(G_TYPE_CHECK_CLASS_CAST ((vtable), GTK_TYPE_EDITABLE, \
	GtkEditableClass))
#define GTK_TREE_MODEL_FILTER_CLASS(vtable)	 \
	(G_TYPE_CHECK_CLASS_CAST ((vtable), GTK_TYPE_TREE_MODEL_FILTER, \
	GtkTreeModelFilterClass))
#define GTK_MENU_TOOL_BUTTON_CLASS(k)	 \
	(G_TYPE_CHECK_CLASS_CAST((k), GTK_TYPE_MENU_TOOL_BUTTON, \
	GtkMenuToolButtonClass))
#define GTK_IS_MENU_TOOL_BUTTON_CLASS(k)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((k), GTK_TYPE_MENU_TOOL_BUTTON))
#define GTK_IS_ABOUT_DIALOG_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_ABOUT_DIALOG))
#define GTK_IS_ACCEL_GROUP_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_ACCEL_GROUP))
#define GTK_IS_ACCEL_LABEL_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_ACCEL_LABEL))
#define GTK_IS_ACCEL_MAP_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_ACCEL_MAP))
#define GTK_IS_ACCESSIBLE_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_ACCESSIBLE))
#define GTK_IS_ACTION_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_ACTION))
#define GTK_IS_ADJUSTMENT_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_ADJUSTMENT))
#define GTK_IS_ALIGNMENT_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_ALIGNMENT))
#define GTK_IS_ARROW_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_ARROW))
#define GTK_IS_ASPECT_FRAME_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_ASPECT_FRAME))
#define GTK_IS_BIN_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_BIN))
#define GTK_IS_BOX_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_BOX))
#define GTK_IS_BUTTON_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_BUTTON))
#define GTK_IS_BUTTON_BOX_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_BUTTON_BOX))
#define GTK_IS_CALENDAR_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_CALENDAR))
#define GTK_IS_CELL_RENDERER_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_CELL_RENDERER))
#define GTK_IS_CELL_RENDERER_COMBO_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_CELL_RENDERER_COMBO))
#define GTK_IS_CELL_RENDERER_PIXBUF_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_CELL_RENDERER_PIXBUF))
#define GTK_IS_CELL_RENDERER_PROGRESS_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_CELL_RENDERER_PROGRESS))
#define GTK_IS_CELL_RENDERER_TEXT_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_CELL_RENDERER_TEXT))
#define GTK_IS_CELL_RENDERER_TOGGLE_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_CELL_RENDERER_TOGGLE))
#define GTK_IS_CHECK_BUTTON_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_CHECK_BUTTON))
#define GTK_IS_CHECK_MENU_ITEM_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_CHECK_MENU_ITEM))
#define GTK_IS_COLOR_BUTTON_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_COLOR_BUTTON))
#define GTK_IS_COLOR_SELECTION_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_COLOR_SELECTION))
#define GTK_IS_COLOR_SELECTION_DIALOG_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_COLOR_SELECTION_DIALOG))
#define GTK_IS_CONTAINER_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_CONTAINER))
#define GTK_IS_CURVE_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_CURVE))
#define GTK_IS_DIALOG_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_DIALOG))
#define GTK_IS_DRAWING_AREA_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_DRAWING_AREA))
#define GTK_IS_ENTRY_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_ENTRY))
#define GTK_IS_ENTRY_COMPLETION_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_ENTRY_COMPLETION))
#define GTK_IS_EVENT_BOX_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_EVENT_BOX))
#define GTK_IS_EXPANDER_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_EXPANDER))
#define GTK_IS_FILE_CHOOSER_BUTTON_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_FILE_CHOOSER_BUTTON))
#define GTK_IS_FILE_CHOOSER_DIALOG_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_FILE_CHOOSER_DIALOG))
#define GTK_IS_FILE_CHOOSER_WIDGET_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_FILE_CHOOSER_WIDGET))
#define GTK_IS_FILE_SELECTION_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_FILE_SELECTION))
#define GTK_IS_FIXED_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_FIXED))
#define GTK_IS_FONT_BUTTON_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_FONT_BUTTON))
#define GTK_IS_FONT_SELECTION_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_FONT_SELECTION))
#define GTK_IS_FONT_SELECTION_DIALOG_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_FONT_SELECTION_DIALOG))
#define GTK_IS_FRAME_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_FRAME))
#define GTK_IS_GAMMA_CURVE_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_GAMMA_CURVE))
#define GTK_IS_HANDLE_BOX_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_HANDLE_BOX))
#define GTK_IS_HBOX_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_HBOX))
#define GTK_IS_HBUTTON_BOX_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_HBUTTON_BOX))
#define GTK_IS_HPANED_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_HPANED))
#define GTK_IS_HRULER_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_HRULER))
#define GTK_IS_HSCALE_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_HSCALE))
#define GTK_IS_HSCROLLBAR_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_HSCROLLBAR))
#define GTK_IS_HSEPARATOR_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_HSEPARATOR))
#define GTK_IS_ICON_FACTORY_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_ICON_FACTORY))
#define GTK_IS_ICON_THEME_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_ICON_THEME))
#define GTK_IS_IMAGE_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_IMAGE))
#define GTK_IS_IMAGE_MENU_ITEM_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_IMAGE_MENU_ITEM))
#define GTK_IS_IM_CONTEXT_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_IM_CONTEXT))
#define GTK_IS_IM_CONTEXT_SIMPLE_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_IM_CONTEXT_SIMPLE))
#define GTK_IS_IM_MULTICONTEXT_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_IM_MULTICONTEXT))
#define GTK_IS_INPUT_DIALOG_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_INPUT_DIALOG))
#define GTK_IS_INVISIBLE_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_INVISIBLE))
#define GTK_IS_ITEM_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_ITEM))
#define GTK_IS_LABEL_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_LABEL))
#define GTK_IS_LAYOUT_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_LAYOUT))
#define GTK_IS_LIST_STORE_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_LIST_STORE))
#define GTK_IS_MENU_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_MENU))
#define GTK_IS_MENU_BAR_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_MENU_BAR))
#define GTK_IS_MENU_ITEM_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_MENU_ITEM))
#define GTK_IS_MENU_SHELL_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_MENU_SHELL))
#define GTK_IS_MESSAGE_DIALOG_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_MESSAGE_DIALOG))
#define GTK_IS_MISC_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_MISC))
#define GTK_IS_NOTEBOOK_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_NOTEBOOK))
#define GTK_IS_PANED_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_PANED))
#define GTK_IS_PLUG_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_PLUG))
#define GTK_IS_PROGRESS_BAR_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_PROGRESS_BAR))
#define GTK_IS_RADIO_ACTION_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_RADIO_ACTION))
#define GTK_IS_RADIO_BUTTON_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_RADIO_BUTTON))
#define GTK_IS_RADIO_MENU_ITEM_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_RADIO_MENU_ITEM))
#define GTK_IS_RADIO_TOOL_BUTTON_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_RADIO_TOOL_BUTTON))
#define GTK_IS_RANGE_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_RANGE))
#define GTK_IS_RC_STYLE_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_RC_STYLE))
#define GTK_IS_RULER_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_RULER))
#define GTK_IS_SCALE_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_SCALE))
#define GTK_IS_SCROLLBAR_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_SCROLLBAR))
#define GTK_IS_SCROLLED_WINDOW_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_SCROLLED_WINDOW))
#define GTK_IS_SEPARATOR_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_SEPARATOR))
#define GTK_IS_SEPARATOR_MENU_ITEM_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_SEPARATOR_MENU_ITEM))
#define GTK_IS_SEPARATOR_TOOL_ITEM_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_SEPARATOR_TOOL_ITEM))
#define GTK_IS_SETTINGS_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_SETTINGS))
#define GTK_IS_SIZE_GROUP_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_SIZE_GROUP))
#define GTK_IS_SOCKET_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_SOCKET))
#define GTK_IS_SPIN_BUTTON_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_SPIN_BUTTON))
#define GTK_IS_STATUSBAR_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_STATUSBAR))
#define GTK_IS_STYLE_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_STYLE))
#define GTK_IS_TABLE_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_TABLE))
#define GTK_IS_TEAROFF_MENU_ITEM_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_TEAROFF_MENU_ITEM))
#define GTK_IS_TEXT_BUFFER_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_TEXT_BUFFER))
#define GTK_IS_TEXT_CHILD_ANCHOR_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_TEXT_CHILD_ANCHOR))
#define GTK_IS_TEXT_MARK_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_TEXT_MARK))
#define GTK_IS_TEXT_TAG_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_TEXT_TAG))
#define GTK_IS_TEXT_TAG_TABLE_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_TEXT_TAG_TABLE))
#define GTK_IS_TEXT_VIEW_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_TEXT_VIEW))
#define GTK_IS_TOGGLE_ACTION_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_TOGGLE_ACTION))
#define GTK_IS_TOGGLE_BUTTON_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_TOGGLE_BUTTON))
#define GTK_IS_TOGGLE_TOOL_BUTTON_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_TOGGLE_TOOL_BUTTON))
#define GTK_IS_TOOLBAR_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_TOOLBAR))
#define GTK_IS_TOOLTIPS_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_TOOLTIPS))
#define GTK_IS_TOOL_BUTTON_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_TOOL_BUTTON))
#define GTK_IS_TOOL_ITEM_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_TOOL_ITEM))
#define GTK_IS_TREE_MODEL_SORT_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_TREE_MODEL_SORT))
#define GTK_IS_TREE_SELECTION_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_TREE_SELECTION))
#define GTK_IS_TREE_STORE_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_TREE_STORE))
#define GTK_IS_TREE_VIEW_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_TREE_VIEW))
#define GTK_IS_TREE_VIEW_COLUMN_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_TREE_VIEW_COLUMN))
#define GTK_IS_UI_MANAGER_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_UI_MANAGER))
#define GTK_IS_VBOX_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_VBOX))
#define GTK_IS_VBUTTON_BOX_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_VBUTTON_BOX))
#define GTK_IS_VIEWPORT_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_VIEWPORT))
#define GTK_IS_VPANED_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_VPANED))
#define GTK_IS_VRULER_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_VRULER))
#define GTK_IS_VSCALE_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_VSCALE))
#define GTK_IS_VSCROLLBAR_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_VSCROLLBAR))
#define GTK_IS_VSEPARATOR_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_VSEPARATOR))
#define GTK_IS_WIDGET_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_WIDGET))
#define GTK_IS_WINDOW_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_WINDOW))
#define GTK_IS_WINDOW_GROUP_CLASS(klass)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_WINDOW_GROUP))
#define GTK_IS_ACTION_GROUP_CLASS(vtable)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((vtable), GTK_TYPE_ACTION_GROUP))
#define GTK_IS_CELL_VIEW_CLASS(vtable)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((vtable), GTK_TYPE_CELL_VIEW))
#define GTK_IS_COMBO_BOX_CLASS(vtable)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((vtable), GTK_TYPE_COMBO_BOX))
#define GTK_IS_COMBO_BOX_ENTRY_CLASS(vtable)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((vtable), GTK_TYPE_COMBO_BOX_ENTRY))
#define GTK_IS_EDITABLE_CLASS(vtable)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((vtable), GTK_TYPE_EDITABLE))
#define GTK_IS_TREE_MODEL_FILTER_CLASS(vtable)	 \
	(G_TYPE_CHECK_CLASS_TYPE ((vtable), GTK_TYPE_TREE_MODEL_FILTER))
#define GTK_ACCEL_MAP(accel_map)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((accel_map), GTK_TYPE_ACCEL_MAP, \
	GtkAccelMap))
#define GTK_MENU_TOOL_BUTTON(o)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((o), GTK_TYPE_MENU_TOOL_BUTTON, \
	GtkMenuToolButton))
#define GTK_TOOL_ITEM(o)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((o), GTK_TYPE_TOOL_ITEM, GtkToolItem))
#define GTK_ACCEL_LABEL(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_ACCEL_LABEL, \
	GtkAccelLabel))
#define GTK_ACCESSIBLE(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_ACCESSIBLE, \
	GtkAccessible))
#define GTK_ACTION(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_ACTION, GtkAction))
#define GTK_ACTION_GROUP(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_ACTION_GROUP, \
	GtkActionGroup))
#define GTK_ADJUSTMENT(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_ADJUSTMENT, \
	GtkAdjustment))
#define GTK_ALIGNMENT(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_ALIGNMENT, \
	GtkAlignment))
#define GTK_ARROW(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_ARROW, GtkArrow))
#define GTK_ASPECT_FRAME(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_ASPECT_FRAME, \
	GtkAspectFrame))
#define GTK_BIN(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_BIN, GtkBin))
#define GTK_BOX(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_BOX, GtkBox))
#define GTK_BUTTON(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_BUTTON, GtkButton))
#define GTK_BUTTON_BOX(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_BUTTON_BOX, \
	GtkButtonBox))
#define GTK_CALENDAR(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_CALENDAR, GtkCalendar))
#define GTK_CELL_EDITABLE(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_CELL_EDITABLE, \
	GtkCellEditable))
#define GTK_CELL_LAYOUT(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_CELL_LAYOUT, \
	GtkCellLayout))
#define GTK_CELL_RENDERER(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_CELL_RENDERER, \
	GtkCellRenderer))
#define GTK_CELL_RENDERER_COMBO(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_CELL_RENDERER_COMBO, \
	GtkCellRendererCombo))
#define GTK_CELL_RENDERER_PIXBUF(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_CELL_RENDERER_PIXBUF, \
	GtkCellRendererPixbuf))
#define GTK_CELL_RENDERER_PROGRESS(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_CELL_RENDERER_PROGRESS, \
	GtkCellRendererProgress))
#define GTK_CELL_RENDERER_TEXT(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_CELL_RENDERER_TEXT, \
	GtkCellRendererText))
#define GTK_CELL_RENDERER_TOGGLE(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_CELL_RENDERER_TOGGLE, \
	GtkCellRendererToggle))
#define GTK_CELL_VIEW(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_CELL_VIEW, GtkCellView))
#define GTK_CHECK_BUTTON(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_CHECK_BUTTON, \
	GtkCheckButton))
#define GTK_CHECK_MENU_ITEM(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_CHECK_MENU_ITEM, \
	GtkCheckMenuItem))
#define GTK_CLIPBOARD(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_CLIPBOARD, \
	GtkClipboard))
#define GTK_COLOR_BUTTON(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_COLOR_BUTTON, \
	GtkColorButton))
#define GTK_COLOR_SELECTION(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_COLOR_SELECTION, \
	GtkColorSelection))
#define GTK_COLOR_SELECTION_DIALOG(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_COLOR_SELECTION_DIALOG, \
	GtkColorSelectionDialog))
#define GTK_COMBO_BOX(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_COMBO_BOX, GtkComboBox))
#define GTK_COMBO_BOX_ENTRY(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_COMBO_BOX_ENTRY, \
	GtkComboBoxEntry))
#define GTK_CONTAINER(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_CONTAINER, \
	GtkContainer))
#define GTK_CURVE(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_CURVE, GtkCurve))
#define GTK_DIALOG(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_DIALOG, GtkDialog))
#define GTK_DRAWING_AREA(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_DRAWING_AREA, \
	GtkDrawingArea))
#define GTK_EDITABLE(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_EDITABLE, GtkEditable))
#define GTK_ENTRY(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_ENTRY, GtkEntry))
#define GTK_ENTRY_COMPLETION(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_ENTRY_COMPLETION, \
	GtkEntryCompletion))
#define GTK_EVENT_BOX(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_EVENT_BOX, GtkEventBox))
#define GTK_EXPANDER(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_EXPANDER, GtkExpander))
#define GTK_FILE_CHOOSER(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_FILE_CHOOSER, \
	GtkFileChooser))
#define GTK_FILE_CHOOSER_DIALOG(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_FILE_CHOOSER_DIALOG, \
	GtkFileChooserDialog))
#define GTK_FILE_CHOOSER_WIDGET(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_FILE_CHOOSER_WIDGET, \
	GtkFileChooserWidget))
#define GTK_FILE_FILTER(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_FILE_FILTER, \
	GtkFileFilter))
#define GTK_FILE_SELECTION(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_FILE_SELECTION, \
	GtkFileSelection))
#define GTK_FIXED(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_FIXED, GtkFixed))
#define GTK_FONT_BUTTON(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_FONT_BUTTON, \
	GtkFontButton))
#define GTK_FONT_SELECTION(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_FONT_SELECTION, \
	GtkFontSelection))
#define GTK_FONT_SELECTION_DIALOG(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_FONT_SELECTION_DIALOG, \
	GtkFontSelectionDialog))
#define GTK_FRAME(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_FRAME, GtkFrame))
#define GTK_GAMMA_CURVE(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_GAMMA_CURVE, \
	GtkGammaCurve))
#define GTK_HANDLE_BOX(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_HANDLE_BOX, \
	GtkHandleBox))
#define GTK_HBOX(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_HBOX, GtkHBox))
#define GTK_HBUTTON_BOX(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_HBUTTON_BOX, \
	GtkHButtonBox))
#define GTK_HPANED(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_HPANED, GtkHPaned))
#define GTK_HRULER(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_HRULER, GtkHRuler))
#define GTK_HSCALE(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_HSCALE, GtkHScale))
#define GTK_HSCROLLBAR(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_HSCROLLBAR, \
	GtkHScrollbar))
#define GTK_HSEPARATOR(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_HSEPARATOR, \
	GtkHSeparator))
#define GTK_ICON_THEME(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_ICON_THEME, \
	GtkIconTheme))
#define GTK_IMAGE(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_IMAGE, GtkImage))
#define GTK_IMAGE_MENU_ITEM(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_IMAGE_MENU_ITEM, \
	GtkImageMenuItem))
#define GTK_IM_CONTEXT(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_IM_CONTEXT, \
	GtkIMContext))
#define GTK_IM_CONTEXT_SIMPLE(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_IM_CONTEXT_SIMPLE, \
	GtkIMContextSimple))
#define GTK_IM_MULTICONTEXT(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_IM_MULTICONTEXT, \
	GtkIMMulticontext))
#define GTK_INPUT_DIALOG(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_INPUT_DIALOG, \
	GtkInputDialog))
#define GTK_INVISIBLE(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_INVISIBLE, \
	GtkInvisible))
#define GTK_ITEM(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_ITEM, GtkItem))
#define GTK_LABEL(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_LABEL, GtkLabel))
#define GTK_LAYOUT(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_LAYOUT, GtkLayout))
#define GTK_LIST_STORE(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_LIST_STORE, \
	GtkListStore))
#define GTK_MENU(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_MENU, GtkMenu))
#define GTK_MENU_BAR(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_MENU_BAR, GtkMenuBar))
#define GTK_MENU_ITEM(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_MENU_ITEM, GtkMenuItem))
#define GTK_MENU_SHELL(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_MENU_SHELL, \
	GtkMenuShell))
#define GTK_MESSAGE_DIALOG(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_MESSAGE_DIALOG, \
	GtkMessageDialog))
#define GTK_MISC(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_MISC, GtkMisc))
#define GTK_NOTEBOOK(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_NOTEBOOK, GtkNotebook))
#define GTK_PANED(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_PANED, GtkPaned))
#define GTK_PLUG(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_PLUG, GtkPlug))
#define GTK_PROGRESS_BAR(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_PROGRESS_BAR, \
	GtkProgressBar))
#define GTK_RADIO_ACTION(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_RADIO_ACTION, \
	GtkRadioAction))
#define GTK_RADIO_BUTTON(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_RADIO_BUTTON, \
	GtkRadioButton))
#define GTK_RADIO_MENU_ITEM(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_RADIO_MENU_ITEM, \
	GtkRadioMenuItem))
#define GTK_RADIO_TOOL_BUTTON(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_RADIO_TOOL_BUTTON, \
	GtkRadioToolButton))
#define GTK_RANGE(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_RANGE, GtkRange))
#define GTK_RULER(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_RULER, GtkRuler))
#define GTK_SCALE(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_SCALE, GtkScale))
#define GTK_SCROLLBAR(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_SCROLLBAR, \
	GtkScrollbar))
#define GTK_SCROLLED_WINDOW(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_SCROLLED_WINDOW, \
	GtkScrolledWindow))
#define GTK_SEPARATOR(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_SEPARATOR, \
	GtkSeparator))
#define GTK_SEPARATOR_MENU_ITEM(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_SEPARATOR_MENU_ITEM, \
	GtkSeparatorMenuItem))
#define GTK_SEPARATOR_TOOL_ITEM(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_SEPARATOR_TOOL_ITEM, \
	GtkSeparatorToolItem))
#define GTK_SETTINGS(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_SETTINGS, GtkSettings))
#define GTK_SIZE_GROUP(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_SIZE_GROUP, \
	GtkSizeGroup))
#define GTK_SOCKET(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_SOCKET, GtkSocket))
#define GTK_SPIN_BUTTON(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_SPIN_BUTTON, \
	GtkSpinButton))
#define GTK_STATUSBAR(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_STATUSBAR, \
	GtkStatusbar))
#define GTK_TABLE(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_TABLE, GtkTable))
#define GTK_TEAROFF_MENU_ITEM(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_TEAROFF_MENU_ITEM, \
	GtkTearoffMenuItem))
#define GTK_TEXT_BUFFER(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_TEXT_BUFFER, \
	GtkTextBuffer))
#define GTK_TEXT_TAG(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_TEXT_TAG, GtkTextTag))
#define GTK_TEXT_TAG_TABLE(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_TEXT_TAG_TABLE, \
	GtkTextTagTable))
#define GTK_TEXT_VIEW(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_TEXT_VIEW, GtkTextView))
#define GTK_TOGGLE_ACTION(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_TOGGLE_ACTION, \
	GtkToggleAction))
#define GTK_TOGGLE_BUTTON(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_TOGGLE_BUTTON, \
	GtkToggleButton))
#define GTK_TOGGLE_TOOL_BUTTON(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_TOGGLE_TOOL_BUTTON, \
	GtkToggleToolButton))
#define GTK_TOOLBAR(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_TOOLBAR, GtkToolbar))
#define GTK_TOOLTIPS(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_TOOLTIPS, GtkTooltips))
#define GTK_TOOL_BUTTON(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_TOOL_BUTTON, \
	GtkToolButton))
#define GTK_TREE_DRAG_DEST(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_TREE_DRAG_DEST, \
	GtkTreeDragDest))
#define GTK_TREE_DRAG_SOURCE(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_TREE_DRAG_SOURCE, \
	GtkTreeDragSource))
#define GTK_TREE_MODEL(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_TREE_MODEL, \
	GtkTreeModel))
#define GTK_TREE_MODEL_FILTER(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_TREE_MODEL_FILTER, \
	GtkTreeModelFilter))
#define GTK_TREE_MODEL_SORT(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_TREE_MODEL_SORT, \
	GtkTreeModelSort))
#define GTK_TREE_SELECTION(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_TREE_SELECTION, \
	GtkTreeSelection))
#define GTK_TREE_SORTABLE(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_TREE_SORTABLE, \
	GtkTreeSortable))
#define GTK_TREE_STORE(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_TREE_STORE, \
	GtkTreeStore))
#define GTK_TREE_VIEW(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_TREE_VIEW, GtkTreeView))
#define GTK_TREE_VIEW_COLUMN(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_TREE_VIEW_COLUMN, \
	GtkTreeViewColumn))
#define GTK_UI_MANAGER(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_UI_MANAGER, \
	GtkUIManager))
#define GTK_VBOX(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_VBOX, GtkVBox))
#define GTK_VBUTTON_BOX(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_VBUTTON_BOX, \
	GtkVButtonBox))
#define GTK_VIEWPORT(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_VIEWPORT, GtkViewport))
#define GTK_VPANED(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_VPANED, GtkVPaned))
#define GTK_VRULER(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_VRULER, GtkVRuler))
#define GTK_VSCALE(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_VSCALE, GtkVScale))
#define GTK_VSCROLLBAR(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_VSCROLLBAR, \
	GtkVScrollbar))
#define GTK_VSEPARATOR(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_VSEPARATOR, \
	GtkVSeparator))
#define GTK_WINDOW(obj)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_WINDOW, GtkWindow))
#define GTK_ABOUT_DIALOG(object)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((object), GTK_TYPE_ABOUT_DIALOG, \
	GtkAboutDialog))
#define GTK_ACCEL_GROUP(object)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((object), GTK_TYPE_ACCEL_GROUP, \
	GtkAccelGroup))
#define GTK_FILE_CHOOSER_BUTTON(object)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((object), GTK_TYPE_FILE_CHOOSER_BUTTON, \
	GtkFileChooserButton))
#define GTK_ICON_FACTORY(object)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((object), GTK_TYPE_ICON_FACTORY, \
	GtkIconFactory))
#define GTK_RC_STYLE(object)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((object), GTK_TYPE_RC_STYLE, \
	GtkRcStyle))
#define GTK_STYLE(object)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((object), GTK_TYPE_STYLE, GtkStyle))
#define GTK_TEXT_CHILD_ANCHOR(object)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((object), GTK_TYPE_TEXT_CHILD_ANCHOR, \
	GtkTextChildAnchor))
#define GTK_TEXT_MARK(object)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((object), GTK_TYPE_TEXT_MARK, \
	GtkTextMark))
#define GTK_WINDOW_GROUP(object)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((object), GTK_TYPE_WINDOW_GROUP, \
	GtkWindowGroup))
#define GTK_WIDGET(widget)	 \
	(G_TYPE_CHECK_INSTANCE_CAST ((widget), GTK_TYPE_WIDGET, GtkWidget))
#define GTK_IS_ACCEL_MAP(accel_map)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((accel_map), GTK_TYPE_ACCEL_MAP))
#define GTK_IS_MENU_TOOL_BUTTON(o)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((o), GTK_TYPE_MENU_TOOL_BUTTON))
#define GTK_IS_TOOL_ITEM(o)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((o), GTK_TYPE_TOOL_ITEM))
#define GTK_IS_ACCEL_LABEL(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_ACCEL_LABEL))
#define GTK_IS_ACCESSIBLE(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_ACCESSIBLE))
#define GTK_IS_ACTION(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_ACTION))
#define GTK_IS_ACTION_GROUP(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_ACTION_GROUP))
#define GTK_IS_ADJUSTMENT(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_ADJUSTMENT))
#define GTK_IS_ALIGNMENT(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_ALIGNMENT))
#define GTK_IS_ARROW(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_ARROW))
#define GTK_IS_ASPECT_FRAME(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_ASPECT_FRAME))
#define GTK_IS_BUTTON(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_BUTTON))
#define GTK_IS_BUTTON_BOX(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_BUTTON_BOX))
#define GTK_IS_CALENDAR(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_CALENDAR))
#define GTK_IS_CELL_EDITABLE(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_CELL_EDITABLE))
#define GTK_IS_CELL_LAYOUT(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_CELL_LAYOUT))
#define GTK_IS_CELL_RENDERER(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_CELL_RENDERER))
#define GTK_IS_CELL_RENDERER_COMBO(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_CELL_RENDERER_COMBO))
#define GTK_IS_CELL_RENDERER_PIXBUF(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_CELL_RENDERER_PIXBUF))
#define GTK_IS_CELL_RENDERER_PROGRESS(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_CELL_RENDERER_PROGRESS))
#define GTK_IS_CELL_RENDERER_TEXT(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_CELL_RENDERER_TEXT))
#define GTK_IS_CELL_RENDERER_TOGGLE(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_CELL_RENDERER_TOGGLE))
#define GTK_IS_CELL_VIEW(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_CELL_VIEW))
#define GTK_IS_CHECK_BUTTON(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_CHECK_BUTTON))
#define GTK_IS_CHECK_MENU_ITEM(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_CHECK_MENU_ITEM))
#define GTK_IS_CLIPBOARD(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_CLIPBOARD))
#define GTK_IS_COLOR_BUTTON(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_COLOR_BUTTON))
#define GTK_IS_COLOR_SELECTION(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_COLOR_SELECTION))
#define GTK_IS_COLOR_SELECTION_DIALOG(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_COLOR_SELECTION_DIALOG))
#define GTK_IS_COMBO_BOX(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_COMBO_BOX))
#define GTK_IS_COMBO_BOX_ENTRY(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_COMBO_BOX_ENTRY))
#define GTK_IS_CONTAINER(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_CONTAINER))
#define GTK_IS_CURVE(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_CURVE))
#define GTK_IS_DIALOG(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_DIALOG))
#define GTK_IS_DRAWING_AREA(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_DRAWING_AREA))
#define GTK_IS_EDITABLE(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_EDITABLE))
#define GTK_IS_ENTRY(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_ENTRY))
#define GTK_IS_ENTRY_COMPLETION(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_ENTRY_COMPLETION))
#define GTK_IS_EVENT_BOX(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_EVENT_BOX))
#define GTK_IS_EXPANDER(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_EXPANDER))
#define GTK_IS_FILE_CHOOSER(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_FILE_CHOOSER))
#define GTK_IS_FILE_CHOOSER_DIALOG(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_FILE_CHOOSER_DIALOG))
#define GTK_IS_FILE_CHOOSER_WIDGET(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_FILE_CHOOSER_WIDGET))
#define GTK_IS_FILE_FILTER(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_FILE_FILTER))
#define GTK_IS_FILE_SELECTION(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_FILE_SELECTION))
#define GTK_IS_FIXED(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_FIXED))
#define GTK_IS_FONT_BUTTON(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_FONT_BUTTON))
#define GTK_IS_FONT_SELECTION(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_FONT_SELECTION))
#define GTK_IS_FONT_SELECTION_DIALOG(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_FONT_SELECTION_DIALOG))
#define GTK_IS_FRAME(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_FRAME))
#define GTK_IS_GAMMA_CURVE(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_GAMMA_CURVE))
#define GTK_IS_HANDLE_BOX(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_HANDLE_BOX))
#define GTK_IS_HBOX(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_HBOX))
#define GTK_IS_HBUTTON_BOX(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_HBUTTON_BOX))
#define GTK_IS_HPANED(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_HPANED))
#define GTK_IS_HRULER(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_HRULER))
#define GTK_IS_HSCALE(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_HSCALE))
#define GTK_IS_HSCROLLBAR(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_HSCROLLBAR))
#define GTK_IS_HSEPARATOR(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_HSEPARATOR))
#define GTK_IS_ICON_THEME(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_ICON_THEME))
#define GTK_IS_IMAGE(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_IMAGE))
#define GTK_IS_IMAGE_MENU_ITEM(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_IMAGE_MENU_ITEM))
#define GTK_IS_IM_CONTEXT(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_IM_CONTEXT))
#define GTK_IS_IM_CONTEXT_SIMPLE(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_IM_CONTEXT_SIMPLE))
#define GTK_IS_IM_MULTICONTEXT(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_IM_MULTICONTEXT))
#define GTK_IS_INPUT_DIALOG(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_INPUT_DIALOG))
#define GTK_IS_INVISIBLE(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_INVISIBLE))
#define GTK_IS_ITEM(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_ITEM))
#define GTK_IS_LABEL(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_LABEL))
#define GTK_IS_LAYOUT(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_LAYOUT))
#define GTK_IS_LIST_STORE(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_LIST_STORE))
#define GTK_IS_MENU(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_MENU))
#define GTK_IS_MENU_BAR(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_MENU_BAR))
#define GTK_IS_MENU_ITEM(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_MENU_ITEM))
#define GTK_IS_MENU_SHELL(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_MENU_SHELL))
#define GTK_IS_MESSAGE_DIALOG(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_MESSAGE_DIALOG))
#define GTK_IS_MISC(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_MISC))
#define GTK_IS_NOTEBOOK(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_NOTEBOOK))
#define GTK_IS_PANED(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_PANED))
#define GTK_IS_PLUG(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_PLUG))
#define GTK_IS_PROGRESS_BAR(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_PROGRESS_BAR))
#define GTK_IS_RADIO_ACTION(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_RADIO_ACTION))
#define GTK_IS_RADIO_BUTTON(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_RADIO_BUTTON))
#define GTK_IS_RADIO_MENU_ITEM(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_RADIO_MENU_ITEM))
#define GTK_IS_RADIO_TOOL_BUTTON(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_RADIO_TOOL_BUTTON))
#define GTK_IS_RANGE(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_RANGE))
#define GTK_IS_RULER(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_RULER))
#define GTK_IS_SCALE(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_SCALE))
#define GTK_IS_SCROLLBAR(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_SCROLLBAR))
#define GTK_IS_SCROLLED_WINDOW(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_SCROLLED_WINDOW))
#define GTK_IS_SEPARATOR(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_SEPARATOR))
#define GTK_IS_SEPARATOR_MENU_ITEM(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_SEPARATOR_MENU_ITEM))
#define GTK_IS_SEPARATOR_TOOL_ITEM(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_SEPARATOR_TOOL_ITEM))
#define GTK_IS_SETTINGS(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_SETTINGS))
#define GTK_IS_SIZE_GROUP(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_SIZE_GROUP))
#define GTK_IS_SOCKET(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_SOCKET))
#define GTK_IS_SPIN_BUTTON(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_SPIN_BUTTON))
#define GTK_IS_STATUSBAR(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_STATUSBAR))
#define GTK_IS_TABLE(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_TABLE))
#define GTK_IS_TEAROFF_MENU_ITEM(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_TEAROFF_MENU_ITEM))
#define GTK_IS_TEXT_BUFFER(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_TEXT_BUFFER))
#define GTK_IS_TEXT_TAG(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_TEXT_TAG))
#define GTK_IS_TEXT_TAG_TABLE(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_TEXT_TAG_TABLE))
#define GTK_IS_TEXT_VIEW(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_TEXT_VIEW))
#define GTK_IS_TOGGLE_ACTION(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_TOGGLE_ACTION))
#define GTK_IS_TOGGLE_BUTTON(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_TOGGLE_BUTTON))
#define GTK_IS_TOGGLE_TOOL_BUTTON(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_TOGGLE_TOOL_BUTTON))
#define GTK_IS_TOOLBAR(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_TOOLBAR))
#define GTK_IS_TOOLTIPS(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_TOOLTIPS))
#define GTK_IS_TOOL_BUTTON(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_TOOL_BUTTON))
#define GTK_IS_TREE_DRAG_DEST(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_TREE_DRAG_DEST))
#define GTK_IS_TREE_DRAG_SOURCE(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_TREE_DRAG_SOURCE))
#define GTK_IS_TREE_MODEL(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_TREE_MODEL))
#define GTK_IS_TREE_MODEL_FILTER(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_TREE_MODEL_FILTER))
#define GTK_IS_TREE_MODEL_SORT(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_TREE_MODEL_SORT))
#define GTK_IS_TREE_SELECTION(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_TREE_SELECTION))
#define GTK_IS_TREE_SORTABLE(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_TREE_SORTABLE))
#define GTK_IS_TREE_STORE(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_TREE_STORE))
#define GTK_IS_TREE_VIEW(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_TREE_VIEW))
#define GTK_IS_TREE_VIEW_COLUMN(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_TREE_VIEW_COLUMN))
#define GTK_IS_UI_MANAGER(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_UI_MANAGER))
#define GTK_IS_VBOX(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_VBOX))
#define GTK_IS_VBUTTON_BOX(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_VBUTTON_BOX))
#define GTK_IS_VIEWPORT(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_VIEWPORT))
#define GTK_IS_VPANED(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_VPANED))
#define GTK_IS_VRULER(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_VRULER))
#define GTK_IS_VSCALE(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_VSCALE))
#define GTK_IS_VSCROLLBAR(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_VSCROLLBAR))
#define GTK_IS_VSEPARATOR(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_VSEPARATOR))
#define GTK_IS_WINDOW(obj)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_WINDOW))
#define GTK_IS_ABOUT_DIALOG(object)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((object), GTK_TYPE_ABOUT_DIALOG))
#define GTK_IS_ACCEL_GROUP(object)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((object), GTK_TYPE_ACCEL_GROUP))
#define GTK_IS_FILE_CHOOSER_BUTTON(object)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((object), GTK_TYPE_FILE_CHOOSER_BUTTON))
#define GTK_IS_ICON_FACTORY(object)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((object), GTK_TYPE_ICON_FACTORY))
#define GTK_IS_RC_STYLE(object)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((object), GTK_TYPE_RC_STYLE))
#define GTK_IS_STYLE(object)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((object), GTK_TYPE_STYLE))
#define GTK_IS_TEXT_CHILD_ANCHOR(object)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((object), GTK_TYPE_TEXT_CHILD_ANCHOR))
#define GTK_IS_TEXT_MARK(object)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((object), GTK_TYPE_TEXT_MARK))
#define GTK_IS_WINDOW_GROUP(object)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((object), GTK_TYPE_WINDOW_GROUP))
#define GTK_IS_WIDGET(widget)	 \
	(G_TYPE_CHECK_INSTANCE_TYPE ((widget), GTK_TYPE_WIDGET))
#define GTK_ACTION_GROUP_GET_CLASS(inst)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((inst), GTK_TYPE_ACTION_GROUP, \
	GtkActionGroupClass))
#define GTK_CELL_VIEW_GET_CLASS(inst)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((inst), GTK_TYPE_CELL_VIEW, \
	GtkCellViewClass))
#define GTK_COMBO_BOX_GET_CLASS(inst)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((inst), GTK_TYPE_COMBO_BOX, \
	GtkComboBoxClass))
#define GTK_COMBO_BOX_ENTRY_GET_CLASS(inst)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((inst), GTK_TYPE_COMBO_BOX_ENTRY, \
	GtkComboBoxEntryClass))
#define GTK_MENU_TOOL_BUTTON_GET_CLASS(o)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((o), GTK_TYPE_MENU_TOOL_BUTTON, \
	GtkMenuToolButtonClass))
#define GTK_ABOUT_DIALOG_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GTK_TYPE_ABOUT_DIALOG, \
	GtkAboutDialogClass))
#define GTK_ACCEL_GROUP_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GTK_TYPE_ACCEL_GROUP, \
	GtkAccelGroupClass))
#define GTK_ACCEL_LABEL_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GTK_TYPE_ACCEL_LABEL, \
	GtkAccelLabelClass))
#define GTK_ACCEL_MAP_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GTK_TYPE_ACCEL_MAP, \
	GtkAccelMapClass))
#define GTK_ACCESSIBLE_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GTK_TYPE_ACCESSIBLE, \
	GtkAccessibleClass))
#define GTK_ADJUSTMENT_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GTK_TYPE_ADJUSTMENT, \
	GtkAdjustmentClass))
#define GTK_ALIGNMENT_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GTK_TYPE_ALIGNMENT, \
	GtkAlignmentClass))
#define GTK_ARROW_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GTK_TYPE_ARROW, GtkArrowClass))
#define GTK_ASPECT_FRAME_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GTK_TYPE_ASPECT_FRAME, \
	GtkAspectFrameClass))
#define GTK_BIN_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GTK_TYPE_BIN, GtkBinClass))
#define GTK_BOX_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GTK_TYPE_BOX, GtkBoxClass))
#define GTK_BUTTON_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GTK_TYPE_BUTTON, GtkButtonClass))
#define GTK_BUTTON_BOX_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GTK_TYPE_BUTTON_BOX, \
	GtkButtonBoxClass))
#define GTK_CALENDAR_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GTK_TYPE_CALENDAR, \
	GtkCalendarClass))
#define GTK_CELL_RENDERER_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GTK_TYPE_CELL_RENDERER, \
	GtkCellRendererClass))
#define GTK_CELL_RENDERER_COMBO_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GTK_TYPE_CELL_RENDERER_COMBO, \
	GtkCellRendererTextClass))
#define GTK_CELL_RENDERER_PIXBUF_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GTK_TYPE_CELL_RENDERER_PIXBUF, \
	GtkCellRendererPixbufClass))
#define GTK_CELL_RENDERER_PROGRESS_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GTK_TYPE_CELL_RENDERER_PROGRESS, \
	GtkCellRendererProgressClass))
#define GTK_CELL_RENDERER_TEXT_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GTK_TYPE_CELL_RENDERER_TEXT, \
	GtkCellRendererTextClass))
#define GTK_CELL_RENDERER_TOGGLE_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GTK_TYPE_CELL_RENDERER_TOGGLE, \
	GtkCellRendererToggleClass))
#define GTK_CHECK_BUTTON_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GTK_TYPE_CHECK_BUTTON, \
	GtkCheckButtonClass))
#define GTK_CHECK_MENU_ITEM_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GTK_TYPE_CHECK_MENU_ITEM, \
	GtkCheckMenuItemClass))
#define GTK_COLOR_BUTTON_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GTK_TYPE_COLOR_BUTTON, \
	GtkColorButtonClass))
#define GTK_COLOR_SELECTION_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GTK_TYPE_COLOR_SELECTION, \
	GtkColorSelectionClass))
#define GTK_COLOR_SELECTION_DIALOG_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GTK_TYPE_COLOR_SELECTION_DIALOG, \
	GtkColorSelectionDialogClass))
#define GTK_CONTAINER_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GTK_TYPE_CONTAINER, \
	GtkContainerClass))
#define GTK_CURVE_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GTK_TYPE_CURVE, GtkCurveClass))
#define GTK_DIALOG_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GTK_TYPE_DIALOG, GtkDialogClass))
#define GTK_DRAWING_AREA_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GTK_TYPE_DRAWING_AREA, \
	GtkDrawingAreaClass))
#define GTK_ENTRY_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GTK_TYPE_ENTRY, GtkEntryClass))
#define GTK_ENTRY_COMPLETION_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GTK_TYPE_ENTRY_COMPLETION, \
	GtkEntryCompletionClass))
#define GTK_EVENT_BOX_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GTK_TYPE_EVENT_BOX, \
	GtkEventBoxClass))
#define GTK_EXPANDER_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GTK_TYPE_EXPANDER, \
	GtkExpanderClass))
#define GTK_FILE_CHOOSER_DIALOG_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GTK_TYPE_FILE_CHOOSER_DIALOG, \
	GtkFileChooserDialogClass))
#define GTK_FILE_CHOOSER_WIDGET_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GTK_TYPE_FILE_CHOOSER_WIDGET, \
	GtkFileChooserWidgetClass))
#define GTK_FILE_SELECTION_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GTK_TYPE_FILE_SELECTION, \
	GtkFileSelectionClass))
#define GTK_FIXED_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GTK_TYPE_FIXED, GtkFixedClass))
#define GTK_FONT_BUTTON_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GTK_TYPE_FONT_BUTTON, \
	GtkFontButtonClass))
#define GTK_FONT_SELECTION_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GTK_TYPE_FONT_SELECTION, \
	GtkFontSelectionClass))
#define GTK_FONT_SELECTION_DIALOG_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GTK_TYPE_FONT_SELECTION_DIALOG, \
	GtkFontSelectionDialogClass))
#define GTK_FRAME_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GTK_TYPE_FRAME, GtkFrameClass))
#define GTK_GAMMA_CURVE_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GTK_TYPE_GAMMA_CURVE, \
	GtkGammaCurveClass))
#define GTK_HANDLE_BOX_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GTK_TYPE_HANDLE_BOX, \
	GtkHandleBoxClass))
#define GTK_HBOX_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GTK_TYPE_HBOX, GtkHBoxClass))
#define GTK_HBUTTON_BOX_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GTK_TYPE_HBUTTON_BOX, \
	GtkHButtonBoxClass))
#define GTK_HPANED_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GTK_TYPE_HPANED, GtkHPanedClass))
#define GTK_HRULER_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GTK_TYPE_HRULER, GtkHRulerClass))
#define GTK_HSCALE_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GTK_TYPE_HSCALE, GtkHScaleClass))
#define GTK_HSCROLLBAR_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GTK_TYPE_HSCROLLBAR, \
	GtkHScrollbarClass))
#define GTK_HSEPARATOR_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GTK_TYPE_HSEPARATOR, \
	GtkHSeparatorClass))
#define GTK_ICON_FACTORY_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GTK_TYPE_ICON_FACTORY, \
	GtkIconFactoryClass))
#define GTK_ICON_THEME_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GTK_TYPE_ICON_THEME, \
	GtkIconThemeClass))
#define GTK_IMAGE_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GTK_TYPE_IMAGE, GtkImageClass))
#define GTK_IMAGE_MENU_ITEM_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GTK_TYPE_IMAGE_MENU_ITEM, \
	GtkImageMenuItemClass))
#define GTK_IM_CONTEXT_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GTK_TYPE_IM_CONTEXT, \
	GtkIMContextClass))
#define GTK_IM_CONTEXT_SIMPLE_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GTK_TYPE_IM_CONTEXT_SIMPLE, \
	GtkIMContextSimpleClass))
#define GTK_IM_MULTICONTEXT_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GTK_TYPE_IM_MULTICONTEXT, \
	GtkIMMulticontextClass))
#define GTK_INPUT_DIALOG_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GTK_TYPE_INPUT_DIALOG, \
	GtkInputDialogClass))
#define GTK_INVISIBLE_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GTK_TYPE_INVISIBLE, \
	GtkInvisibleClass))
#define GTK_ITEM_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GTK_TYPE_ITEM, GtkItemClass))
#define GTK_LABEL_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GTK_TYPE_LABEL, GtkLabelClass))
#define GTK_LAYOUT_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GTK_TYPE_LAYOUT, GtkLayoutClass))
#define GTK_LIST_STORE_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GTK_TYPE_LIST_STORE, \
	GtkListStoreClass))
#define GTK_MENU_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GTK_TYPE_MENU, GtkMenuClass))
#define GTK_MENU_BAR_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GTK_TYPE_MENU_BAR, \
	GtkMenuBarClass))
#define GTK_MENU_ITEM_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GTK_TYPE_MENU_ITEM, \
	GtkMenuItemClass))
#define GTK_MENU_SHELL_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GTK_TYPE_MENU_SHELL, \
	GtkMenuShellClass))
#define GTK_MESSAGE_DIALOG_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GTK_TYPE_MESSAGE_DIALOG, \
	GtkMessageDialogClass))
#define GTK_MISC_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GTK_TYPE_MISC, GtkMiscClass))
#define GTK_NOTEBOOK_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GTK_TYPE_NOTEBOOK, \
	GtkNotebookClass))
#define GTK_PANED_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GTK_TYPE_PANED, GtkPanedClass))
#define GTK_PLUG_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GTK_TYPE_PLUG, GtkPlugClass))
#define GTK_PROGRESS_BAR_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GTK_TYPE_PROGRESS_BAR, \
	GtkProgressBarClass))
#define GTK_RADIO_BUTTON_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GTK_TYPE_RADIO_BUTTON, \
	GtkRadioButtonClass))
#define GTK_RADIO_MENU_ITEM_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GTK_TYPE_RADIO_MENU_ITEM, \
	GtkRadioMenuItemClass))
#define GTK_RANGE_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GTK_TYPE_RANGE, GtkRangeClass))
#define GTK_RC_STYLE_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GTK_TYPE_RC_STYLE, \
	GtkRcStyleClass))
#define GTK_RULER_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GTK_TYPE_RULER, GtkRulerClass))
#define GTK_SCALE_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GTK_TYPE_SCALE, GtkScaleClass))
#define GTK_SCROLLBAR_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GTK_TYPE_SCROLLBAR, \
	GtkScrollbarClass))
#define GTK_SCROLLED_WINDOW_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GTK_TYPE_SCROLLED_WINDOW, \
	GtkScrolledWindowClass))
#define GTK_SEPARATOR_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GTK_TYPE_SEPARATOR, \
	GtkSeparatorClass))
#define GTK_SEPARATOR_MENU_ITEM_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GTK_TYPE_SEPARATOR_MENU_ITEM, \
	GtkSeparatorMenuItemClass))
#define GTK_SETTINGS_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GTK_TYPE_SETTINGS, \
	GtkSettingsClass))
#define GTK_SIZE_GROUP_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GTK_TYPE_SIZE_GROUP, \
	GtkSizeGroupClass))
#define GTK_SOCKET_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GTK_TYPE_SOCKET, GtkSocketClass))
#define GTK_SPIN_BUTTON_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GTK_TYPE_SPIN_BUTTON, \
	GtkSpinButtonClass))
#define GTK_STATUSBAR_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GTK_TYPE_STATUSBAR, \
	GtkStatusbarClass))
#define GTK_STYLE_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GTK_TYPE_STYLE, GtkStyleClass))
#define GTK_TABLE_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GTK_TYPE_TABLE, GtkTableClass))
#define GTK_TEAROFF_MENU_ITEM_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GTK_TYPE_TEAROFF_MENU_ITEM, \
	GtkTearoffMenuItemClass))
#define GTK_TEXT_BUFFER_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GTK_TYPE_TEXT_BUFFER, \
	GtkTextBufferClass))
#define GTK_TEXT_CHILD_ANCHOR_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GTK_TYPE_TEXT_CHILD_ANCHOR, \
	GtkTextChildAnchorClass))
#define GTK_TEXT_MARK_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GTK_TYPE_TEXT_MARK, \
	GtkTextMarkClass))
#define GTK_TEXT_TAG_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GTK_TYPE_TEXT_TAG, \
	GtkTextTagClass))
#define GTK_TEXT_TAG_TABLE_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GTK_TYPE_TEXT_TAG_TABLE, \
	GtkTextTagTableClass))
#define GTK_TEXT_VIEW_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GTK_TYPE_TEXT_VIEW, \
	GtkTextViewClass))
#define GTK_TOGGLE_BUTTON_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GTK_TYPE_TOGGLE_BUTTON, \
	GtkToggleButtonClass))
#define GTK_TOOLBAR_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GTK_TYPE_TOOLBAR, \
	GtkToolbarClass))
#define GTK_TOOLTIPS_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GTK_TYPE_TOOLTIPS, \
	GtkTooltipsClass))
#define GTK_TREE_MODEL_FILTER_GET_CLASS(inst)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GTK_TYPE_TREE_MODEL_FILTER, \
	GtkTreeModelFilterClass))
#define GTK_TREE_MODEL_SORT_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GTK_TYPE_TREE_MODEL_SORT, \
	GtkTreeModelSortClass))
#define GTK_TREE_SELECTION_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GTK_TYPE_TREE_SELECTION, \
	GtkTreeSelectionClass))
#define GTK_TREE_STORE_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GTK_TYPE_TREE_STORE, \
	GtkTreeStoreClass))
#define GTK_TREE_VIEW_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GTK_TYPE_TREE_VIEW, \
	GtkTreeViewClass))
#define GTK_TREE_VIEW_COLUMN_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GTK_TYPE_TREE_VIEW_COLUMN, \
	GtkTreeViewColumnClass))
#define GTK_VBOX_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GTK_TYPE_VBOX, GtkVBoxClass))
#define GTK_VBUTTON_BOX_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GTK_TYPE_VBUTTON_BOX, \
	GtkVButtonBoxClass))
#define GTK_VIEWPORT_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GTK_TYPE_VIEWPORT, \
	GtkViewportClass))
#define GTK_VPANED_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GTK_TYPE_VPANED, GtkVPanedClass))
#define GTK_VRULER_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GTK_TYPE_VRULER, GtkVRulerClass))
#define GTK_VSCALE_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GTK_TYPE_VSCALE, GtkVScaleClass))
#define GTK_VSCROLLBAR_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GTK_TYPE_VSCROLLBAR, \
	GtkVScrollbarClass))
#define GTK_VSEPARATOR_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GTK_TYPE_VSEPARATOR, \
	GtkVSeparatorClass))
#define GTK_WIDGET_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GTK_TYPE_WIDGET, GtkWidgetClass))
#define GTK_WINDOW_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GTK_TYPE_WINDOW, GtkWindowClass))
#define GTK_WINDOW_GROUP_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((obj), GTK_TYPE_WINDOW_GROUP, \
	GtkWindowGroupClass))
#define GTK_FILE_CHOOSER_BUTTON_GET_CLASS(object)	 \
	(G_TYPE_INSTANCE_GET_CLASS ((object), GTK_TYPE_FILE_CHOOSER_BUTTON, \
	GtkFileChooserButtonClass))
#define GTK_TOOL_ITEM_GET_CLASS(o)	 \
	(G_TYPE_INSTANCE_GET_CLASS((o), GTK_TYPE_TOOL_ITEM, \
	GtkToolItemClass))
#define GTK_ACTION_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS((obj), GTK_TYPE_ACTION, GtkActionClass))
#define GTK_RADIO_ACTION_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS((obj), GTK_TYPE_RADIO_ACTION, \
	GtkRadioActionClass))
#define GTK_RADIO_TOOL_BUTTON_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS((obj), GTK_TYPE_RADIO_TOOL_BUTTON, \
	GtkRadioToolButtonClass))
#define GTK_SEPARATOR_TOOL_ITEM_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS((obj), GTK_TYPE_SEPARATOR_TOOL_ITEM, \
	GtkSeparatorToolItemClass))
#define GTK_TOGGLE_ACTION_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS((obj), GTK_TYPE_TOGGLE_ACTION, \
	GtkToggleActionClass))
#define GTK_TOGGLE_TOOL_BUTTON_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS((obj), GTK_TYPE_TOGGLE_TOOL_BUTTON, \
	GtkToggleToolButtonClass))
#define GTK_TOOL_BUTTON_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS((obj), GTK_TYPE_TOOL_BUTTON, \
	GtkToolButtonClass))
#define GTK_UI_MANAGER_GET_CLASS(obj)	 \
	(G_TYPE_INSTANCE_GET_CLASS((obj), GTK_TYPE_UI_MANAGER, \
	GtkUIManagerClass))
#define GTK_EDITABLE_GET_CLASS(inst)	 \
	(G_TYPE_INSTANCE_GET_INTERFACE ((inst), GTK_TYPE_EDITABLE, \
	GtkEditableClass))
#define GTK_CELL_EDITABLE_GET_IFACE(obj)	 \
	(G_TYPE_INSTANCE_GET_INTERFACE ((obj), GTK_TYPE_CELL_EDITABLE, \
	GtkCellEditableIface))
#define GTK_CELL_LAYOUT_GET_IFACE(obj)	 \
	(G_TYPE_INSTANCE_GET_INTERFACE ((obj), GTK_TYPE_CELL_LAYOUT, \
	GtkCellLayoutIface))
#define GTK_TREE_DRAG_DEST_GET_IFACE(obj)	 \
	(G_TYPE_INSTANCE_GET_INTERFACE ((obj), GTK_TYPE_TREE_DRAG_DEST, \
	GtkTreeDragDestIface))
#define GTK_TREE_DRAG_SOURCE_GET_IFACE(obj)	 \
	(G_TYPE_INSTANCE_GET_INTERFACE ((obj), GTK_TYPE_TREE_DRAG_SOURCE, \
	GtkTreeDragSourceIface))
#define GTK_TREE_MODEL_GET_IFACE(obj)	 \
	(G_TYPE_INSTANCE_GET_INTERFACE ((obj), GTK_TYPE_TREE_MODEL, \
	GtkTreeModelIface))
#define GTK_TREE_SORTABLE_GET_IFACE(obj)	 \
	(G_TYPE_INSTANCE_GET_INTERFACE ((obj), GTK_TYPE_TREE_SORTABLE, \
	GtkTreeSortableIface))
#define GTK_OBJECT_TYPE_NAME(object)	 \
	(g_type_name (GTK_OBJECT_TYPE (object)))
#define GTK_CONTAINER_WARN_INVALID_CHILD_PROPERTY_ID(object,property_id,pspec)	 \
	G_OBJECT_WARN_INVALID_PSPEC ((object), "child property id", \
	(property_id), (pspec))
#define GTK_OBJECT_UNSET_FLAGS(obj,flag)	 \
	G_STMT_START{ (GTK_OBJECT_FLAGS (obj) &amp;= ~(flag)); }G_STMT_END
#define GTK_OBJECT_SET_FLAGS(obj,flag)	 \
	G_STMT_START{ (GTK_OBJECT_FLAGS (obj) |= (flag)); }G_STMT_END
#define GTK_WIDGET_UNSET_FLAGS(wid,flag)	 \
	G_STMT_START{ (GTK_WIDGET_FLAGS (wid) &amp;= ~(flag)); }G_STMT_END
#define GTK_WIDGET_SET_FLAGS(wid,flag)	 \
	G_STMT_START{ (GTK_WIDGET_FLAGS (wid) |= (flag)); }G_STMT_END
#define GTK_SIGNAL_FUNC(f)	((GtkSignalFunc) (f))
#define GTK_INTERFACE_AGE	(10)
#define GTK_MICRO_VERSION	(11)
#define GTK_MAJOR_VERSION	(2)
#define GTK_BINARY_AGE	(610)
#define GTK_MINOR_VERSION	(8)
#define GTK_TEXT_VIEW_PRIORITY_VALIDATE	(GDK_PRIORITY_REDRAW + 5)
#define GTK_TYPE_ABOUT_DIALOG	(gtk_about_dialog_get_type ())
#define GTK_TYPE_ACCEL_FLAGS	(gtk_accel_flags_get_type())
#define GTK_TYPE_ACCEL_GROUP	(gtk_accel_group_get_type ())
#define GTK_TYPE_ACCEL_LABEL	(gtk_accel_label_get_type ())
#define GTK_TYPE_ACCEL_MAP	(gtk_accel_map_get_type ())
#define GTK_TYPE_ACCESSIBLE	(gtk_accessible_get_type ())
#define GTK_TYPE_ACTION	(gtk_action_get_type ())
#define GTK_TYPE_ACTION_GROUP	(gtk_action_group_get_type ())
#define GTK_TYPE_ADJUSTMENT	(gtk_adjustment_get_type ())
#define GTK_TYPE_ALIGNMENT	(gtk_alignment_get_type ())
#define GTK_TYPE_ANCHOR_TYPE	(gtk_anchor_type_get_type())
#define GTK_TYPE_ARG_FLAGS	(gtk_arg_flags_get_type())
#define GTK_ARG_READWRITE	(GTK_ARG_READABLE | GTK_ARG_WRITABLE)
#define GTK_TYPE_ARROW	(gtk_arrow_get_type ())
#define GTK_TYPE_ARROW_TYPE	(gtk_arrow_type_get_type())
#define GTK_TYPE_ASPECT_FRAME	(gtk_aspect_frame_get_type ())
#define GTK_TYPE_ATTACH_OPTIONS	(gtk_attach_options_get_type())
#define GTK_TYPE_BIN	(gtk_bin_get_type ())
#define GTK_TYPE_BORDER	(gtk_border_get_type ())
#define GTK_TYPE_BOX	(gtk_box_get_type ())
#define GTK_TYPE_BUTTONS_TYPE	(gtk_buttons_type_get_type())
#define GTK_TYPE_BUTTON_BOX	(gtk_button_box_get_type ())
#define GTK_TYPE_BUTTON_BOX_STYLE	(gtk_button_box_style_get_type())
#define GTK_TYPE_BUTTON	(gtk_button_get_type ())
#define GTK_TYPE_CALENDAR	(gtk_calendar_get_type ())
#define GTK_TYPE_CELL_EDITABLE	(gtk_cell_editable_get_type ())
#define GTK_TYPE_CELL_LAYOUT	(gtk_cell_layout_get_type ())
#define GTK_TYPE_CELL_RENDERER_COMBO	(gtk_cell_renderer_combo_get_type ())
#define GTK_TYPE_CELL_RENDERER	(gtk_cell_renderer_get_type ())
#define GTK_TYPE_CELL_RENDERER_MODE	(gtk_cell_renderer_mode_get_type())
#define GTK_TYPE_CELL_RENDERER_STATE	(gtk_cell_renderer_state_get_type())
#define GTK_TYPE_CELL_RENDERER_TEXT	(gtk_cell_renderer_text_get_type ())
#define GTK_TYPE_CELL_VIEW	(gtk_cell_view_get_type ())
#define GTK_TYPE_CHECK_BUTTON	(gtk_check_button_get_type ())
#define GTK_LIST(obj)	(GTK_CHECK_CAST ((obj), GTK_TYPE_LIST, GtkList))
#define GTK_TYPE_CHECK_MENU_ITEM	(gtk_check_menu_item_get_type ())
#define GTK_IS_ICON_VIEW(obj)	(GTK_CHECK_TYPE ((obj), GTK_TYPE_ICON_VIEW))
#define GTK_IS_LIST(obj)	(GTK_CHECK_TYPE ((obj), GTK_TYPE_LIST))
#define GTK_IS_OBJECT(object)	(GTK_CHECK_TYPE ((object), GTK_TYPE_OBJECT))
#define GTK_TYPE_CLIPBOARD	(gtk_clipboard_get_type ())
#define GTK_TYPE_COLOR_BUTTON	(gtk_color_button_get_type ())
#define GTK_TYPE_COLOR_SELECTION	(gtk_color_selection_get_type ())
#define GTK_TYPE_COMBO_BOX_ENTRY	(gtk_combo_box_entry_get_type ())
#define GTK_TYPE_COMBO_BOX	(gtk_combo_box_get_type ())
#define GTK_TYPE_CONTAINER	(gtk_container_get_type ())
#define GTK_TYPE_CORNER_TYPE	(gtk_corner_type_get_type())
#define GTK_TYPE_CURVE	(gtk_curve_get_type ())
#define GTK_TYPE_CURVE_TYPE	(gtk_curve_type_get_type())
#define GTK_TYPE_DEBUG_FLAG	(gtk_debug_flag_get_type())
#define GTK_TYPE_DELETE_TYPE	(gtk_delete_type_get_type())
#define GTK_TYPE_DEST_DEFAULTS	(gtk_dest_defaults_get_type())
#define GTK_TYPE_DIALOG_FLAGS	(gtk_dialog_flags_get_type())
#define GTK_TYPE_DIALOG	(gtk_dialog_get_type ())
#define GTK_TYPE_DIRECTION_TYPE	(gtk_direction_type_get_type())
#define GTK_TYPE_DRAWING_AREA	(gtk_drawing_area_get_type ())
#define GTK_TYPE_EDITABLE	(gtk_editable_get_type ())
#define GTK_TYPE_ENTRY_COMPLETION	(gtk_entry_completion_get_type ())
#define GTK_TYPE_ENTRY	(gtk_entry_get_type ())
#define GTK_TYPE_EVENT_BOX	(gtk_event_box_get_type ())
#define GTK_TYPE_EXPANDER	(gtk_expander_get_type ())
#define GTK_TYPE_EXPANDER_STYLE	(gtk_expander_style_get_type())
#define GTK_TYPE_FILE_CHOOSER_ACTION	(gtk_file_chooser_action_get_type())
#define GTK_TYPE_FILE_CHOOSER_BUTTON	(gtk_file_chooser_button_get_type ())
#define GTK_TYPE_FILE_CHOOSER_DIALOG	(gtk_file_chooser_dialog_get_type ())
#define GTK_TYPE_FILE_CHOOSER_ERROR	(gtk_file_chooser_error_get_type())
#define GTK_FILE_CHOOSER_ERROR	(gtk_file_chooser_error_quark ())
#define GTK_TYPE_FILE_CHOOSER	(gtk_file_chooser_get_type ())
#define GTK_TYPE_FILE_CHOOSER_WIDGET	(gtk_file_chooser_widget_get_type ())
#define GTK_TYPE_FILE_FILTER_FLAGS	(gtk_file_filter_flags_get_type())
#define GTK_TYPE_FILE_FILTER	(gtk_file_filter_get_type ())
#define GTK_TYPE_FILE_SELECTION	(gtk_file_selection_get_type ())
#define GTK_TYPE_FIXED	(gtk_fixed_get_type ())
#define GTK_TYPE_FONT_BUTTON	(gtk_font_button_get_type ())
#define GTK_TYPE_FONT_SELECTION	(gtk_font_selection_get_type ())
#define GTK_TYPE_FRAME	(gtk_frame_get_type ())
#define GTK_TYPE_GAMMA_CURVE	(gtk_gamma_curve_get_type ())
#define GTK_TYPE_HANDLE_BOX	(gtk_handle_box_get_type ())
#define GTK_TYPE_HBOX	(gtk_hbox_get_type ())
#define GTK_TYPE_HBUTTON_BOX	(gtk_hbutton_box_get_type ())
#define GTK_TYPE_HPANED	(gtk_hpaned_get_type ())
#define GTK_TYPE_HRULER	(gtk_hruler_get_type ())
#define GTK_TYPE_HSCALE	(gtk_hscale_get_type ())
#define GTK_TYPE_HSCROLLBAR	(gtk_hscrollbar_get_type ())
#define GTK_TYPE_HSEPARATOR	(gtk_hseparator_get_type ())
#define GTK_TYPE_ICON_FACTORY	(gtk_icon_factory_get_type ())
#define GTK_TYPE_ICON_INFO	(gtk_icon_info_get_type ())
#define GTK_TYPE_ICON_LOOKUP_FLAGS	(gtk_icon_lookup_flags_get_type())
#define GTK_TYPE_ICON_SET	(gtk_icon_set_get_type ())
#define GTK_TYPE_ICON_SIZE	(gtk_icon_size_get_type())
#define GTK_TYPE_ICON_SOURCE	(gtk_icon_source_get_type ())
#define GTK_TYPE_ICON_THEME_ERROR	(gtk_icon_theme_error_get_type())
#define GTK_TYPE_ICON_THEME	(gtk_icon_theme_get_type ())
#define GTK_TYPE_ICON_VIEW	(gtk_icon_view_get_type ())
#define GTK_TYPE_IDENTIFIER	(gtk_identifier_get_type ())
#define GTK_TYPE_IMAGE	(gtk_image_get_type ())
#define GTK_TYPE_IMAGE_MENU_ITEM	(gtk_image_menu_item_get_type ())
#define GTK_TYPE_IMAGE_TYPE	(gtk_image_type_get_type())
#define GTK_TYPE_IM_CONTEXT	(gtk_im_context_get_type ())
#define GTK_TYPE_IM_CONTEXT_SIMPLE	(gtk_im_context_simple_get_type ())
#define GTK_TYPE_IM_MULTICONTEXT	(gtk_im_multicontext_get_type ())
#define GTK_TYPE_IM_PREEDIT_STYLE	(gtk_im_preedit_style_get_type())
#define GTK_TYPE_IM_STATUS_STYLE	(gtk_im_status_style_get_type())
#define GTK_TYPE_INPUT_DIALOG	(gtk_input_dialog_get_type ())
#define GTK_TYPE_INVISIBLE	(gtk_invisible_get_type ())
#define GTK_TYPE_ITEM	(gtk_item_get_type ())
#define GTK_TYPE_JUSTIFICATION	(gtk_justification_get_type())
#define GTK_TYPE_LABEL	(gtk_label_get_type ())
#define GTK_TYPE_LAYOUT	(gtk_layout_get_type ())
#define GTK_TYPE_LIST	(gtk_list_get_type ())
#define GTK_TYPE_LIST_STORE	(gtk_list_store_get_type ())
#define GTK_TYPE_MATCH_TYPE	(gtk_match_type_get_type())
#define GTK_TYPE_MENU_BAR	(gtk_menu_bar_get_type ())
#define GTK_TYPE_MENU_DIRECTION_TYPE	(gtk_menu_direction_type_get_type())
#define GTK_TYPE_MENU	(gtk_menu_get_type ())
#define GTK_TYPE_MENU_ITEM	(gtk_menu_item_get_type ())
#define GTK_TYPE_MENU_SHELL	(gtk_menu_shell_get_type ())
#define GTK_TYPE_MENU_TOOL_BUTTON	(gtk_menu_tool_button_get_type ())
#define GTK_TYPE_MESSAGE_DIALOG	(gtk_message_dialog_get_type ())
#define GTK_TYPE_MESSAGE_TYPE	(gtk_message_type_get_type())
#define GTK_TYPE_METRIC_TYPE	(gtk_metric_type_get_type())
#define GTK_TYPE_MISC	(gtk_misc_get_type ())
#define GTK_TYPE_MOVEMENT_STEP	(gtk_movement_step_get_type())
#define GTK_TYPE_NOTEBOOK	(gtk_notebook_get_type ())
#define GTK_TYPE_NOTEBOOK_TAB	(gtk_notebook_tab_get_type())
#define GTK_OBJECT_FLAGS(obj)	(GTK_OBJECT (obj)->flags)
#define GTK_WIDGET_FLAGS(wid)	(GTK_OBJECT_FLAGS (wid))
#define GTK_TYPE_OBJECT_FLAGS	(gtk_object_flags_get_type())
#define GTK_TYPE_OBJECT	(gtk_object_get_type ())
#define GTK_WIDGET_TYPE(wid)	(GTK_OBJECT_TYPE (wid))
#define GTK_TYPE_ORIENTATION	(gtk_orientation_get_type())
#define GTK_TYPE_PACK_TYPE	(gtk_pack_type_get_type())
#define GTK_TYPE_PANED	(gtk_paned_get_type ())
#define GTK_TYPE_PATH_PRIORITY_TYPE	(gtk_path_priority_type_get_type())
#define GTK_TYPE_PATH_TYPE	(gtk_path_type_get_type())
#define GTK_TYPE_PLUG	(gtk_plug_get_type ())
#define GTK_TYPE_POLICY_TYPE	(gtk_policy_type_get_type())
#define GTK_TYPE_POSITION_TYPE	(gtk_position_type_get_type())
#define GTK_TYPE_PROGRESS_BAR	(gtk_progress_bar_get_type ())
#define GTK_TYPE_PROGRESS_BAR_STYLE	(gtk_progress_bar_style_get_type())
#define GTK_TYPE_RADIO_ACTION	(gtk_radio_action_get_type ())
#define GTK_TYPE_RADIO_BUTTON	(gtk_radio_button_get_type ())
#define GTK_TYPE_RADIO_MENU_ITEM	(gtk_radio_menu_item_get_type ())
#define GTK_TYPE_RADIO_TOOL_BUTTON	(gtk_radio_tool_button_get_type ())
#define GTK_TYPE_RANGE	(gtk_range_get_type ())
#define GTK_TYPE_RC_FLAGS	(gtk_rc_flags_get_type())
#define GTK_TYPE_RC_STYLE	(gtk_rc_style_get_type ())
#define GTK_TYPE_RC_TOKEN_TYPE	(gtk_rc_token_type_get_type())
#define GTK_TYPE_RELIEF_STYLE	(gtk_relief_style_get_type())
#define GTK_TYPE_REQUISITION	(gtk_requisition_get_type ())
#define GTK_TYPE_RESIZE_MODE	(gtk_resize_mode_get_type())
#define GTK_TYPE_RESPONSE_TYPE	(gtk_response_type_get_type())
#define GTK_TYPE_RULER	(gtk_ruler_get_type ())
#define GTK_TYPE_SCALE	(gtk_scale_get_type ())
#define GTK_TYPE_SCROLLBAR	(gtk_scrollbar_get_type ())
#define GTK_TYPE_SCROLLED_WINDOW	(gtk_scrolled_window_get_type ())
#define GTK_TYPE_SCROLL_STEP	(gtk_scroll_step_get_type())
#define GTK_TYPE_SCROLL_TYPE	(gtk_scroll_type_get_type())
#define GTK_TYPE_SELECTION_DATA	(gtk_selection_data_get_type ())
#define GTK_TYPE_SELECTION_MODE	(gtk_selection_mode_get_type())
#define GTK_TYPE_SEPARATOR	(gtk_separator_get_type ())
#define GTK_TYPE_SEPARATOR_MENU_ITEM	(gtk_separator_menu_item_get_type ())
#define GTK_TYPE_SEPARATOR_TOOL_ITEM	(gtk_separator_tool_item_get_type ())
#define GTK_TYPE_SETTINGS	(gtk_settings_get_type ())
#define GTK_TYPE_SHADOW_TYPE	(gtk_shadow_type_get_type())
#define GTK_TYPE_SIDE_TYPE	(gtk_side_type_get_type())
#define GTK_TYPE_SIGNAL_RUN_TYPE	(gtk_signal_run_type_get_type())
#define GTK_TYPE_SIZE_GROUP	(gtk_size_group_get_type ())
#define GTK_TYPE_SIZE_GROUP_MODE	(gtk_size_group_mode_get_type())
#define GTK_TYPE_SOCKET	(gtk_socket_get_type ())
#define GTK_TYPE_SORT_TYPE	(gtk_sort_type_get_type())
#define GTK_TYPE_SPIN_BUTTON	(gtk_spin_button_get_type ())
#define GTK_TYPE_SPIN_TYPE	(gtk_spin_type_get_type())
#define GTK_TYPE_STATE_TYPE	(gtk_state_type_get_type())
#define GTK_TYPE_STATUSBAR	(gtk_statusbar_get_type ())
#define GTK_STYLE_ATTACHED(style)	(GTK_STYLE (style)->attach_count > 0)
#define GTK_TYPE_STYLE	(gtk_style_get_type ())
#define GTK_TYPE_SUBMENU_DIRECTION	(gtk_submenu_direction_get_type())
#define GTK_TYPE_SUBMENU_PLACEMENT	(gtk_submenu_placement_get_type())
#define GTK_TYPE_TABLE	(gtk_table_get_type ())
#define GTK_TYPE_TARGET_FLAGS	(gtk_target_flags_get_type())
#define GTK_TYPE_TEAROFF_MENU_ITEM	(gtk_tearoff_menu_item_get_type ())
#define GTK_TYPE_TEXT_ATTRIBUTES	(gtk_text_attributes_get_type ())
#define GTK_TYPE_TEXT_BUFFER	(gtk_text_buffer_get_type ())
#define GTK_TYPE_TEXT_CHILD_ANCHOR	(gtk_text_child_anchor_get_type ())
#define GTK_TYPE_TEXT_DIRECTION	(gtk_text_direction_get_type())
#define GTK_TYPE_TEXT_ITER	(gtk_text_iter_get_type ())
#define GTK_TYPE_TEXT_MARK	(gtk_text_mark_get_type ())
#define GTK_TYPE_TEXT_SEARCH_FLAGS	(gtk_text_search_flags_get_type())
#define GTK_TYPE_TEXT_TAG	(gtk_text_tag_get_type ())
#define GTK_TYPE_TEXT_TAG_TABLE	(gtk_text_tag_table_get_type ())
#define GTK_TYPE_TEXT_VIEW	(gtk_text_view_get_type ())
#define GTK_TYPE_TEXT_WINDOW_TYPE	(gtk_text_window_type_get_type())
#define GTK_TYPE_TOGGLE_ACTION	(gtk_toggle_action_get_type ())
#define GTK_TYPE_TOGGLE_BUTTON	(gtk_toggle_button_get_type ())
#define GTK_TYPE_TOGGLE_TOOL_BUTTON	(gtk_toggle_tool_button_get_type ())
#define GTK_TYPE_TOOLBAR_CHILD_TYPE	(gtk_toolbar_child_type_get_type())
#define GTK_TYPE_TOOLBAR	(gtk_toolbar_get_type ())
#define GTK_TYPE_TOOLBAR_SPACE_STYLE	(gtk_toolbar_space_style_get_type())
#define GTK_TYPE_TOOLBAR_STYLE	(gtk_toolbar_style_get_type())
#define GTK_TYPE_TOOLTIPS	(gtk_tooltips_get_type ())
#define GTK_TYPE_TOOL_BUTTON	(gtk_tool_button_get_type ())
#define GTK_TYPE_TOOL_ITEM	(gtk_tool_item_get_type ())
#define GTK_TYPE_TREE_DRAG_DEST	(gtk_tree_drag_dest_get_type ())
#define GTK_TYPE_TREE_DRAG_SOURCE	(gtk_tree_drag_source_get_type ())
#define GTK_TYPE_TREE_ITER	(gtk_tree_iter_get_type ())
#define GTK_TYPE_TREE_MODEL_FILTER	(gtk_tree_model_filter_get_type ())
#define GTK_TYPE_TREE_MODEL_FLAGS	(gtk_tree_model_flags_get_type())
#define GTK_TYPE_TREE_MODEL	(gtk_tree_model_get_type ())
#define GTK_TYPE_TREE_MODEL_SORT	(gtk_tree_model_sort_get_type ())
#define GTK_TYPE_TREE_PATH	(gtk_tree_path_get_type ())
#define GTK_TYPE_TREE_ROW_REFERENCE	(gtk_tree_row_reference_get_type ())
#define GTK_TYPE_TREE_SELECTION	(gtk_tree_selection_get_type ())
#define GTK_TYPE_TREE_SORTABLE	(gtk_tree_sortable_get_type ())
#define GTK_TYPE_TREE_STORE	(gtk_tree_store_get_type ())
#define GTK_TYPE_TREE_VIEW_COLUMN	(gtk_tree_view_column_get_type ())
#define GTK_TYPE_TREE_VIEW	(gtk_tree_view_get_type ())
#define GTK_TYPE_TREE_VIEW_MODE	(gtk_tree_view_mode_get_type())
#define GTK_TYPE_UI_MANAGER	(gtk_ui_manager_get_type ())
#define GTK_TYPE_UPDATE_TYPE	(gtk_update_type_get_type())
#define GTK_TYPE_VBOX	(gtk_vbox_get_type ())
#define GTK_TYPE_VBUTTON_BOX	(gtk_vbutton_box_get_type ())
#define GTK_TYPE_VIEWPORT	(gtk_viewport_get_type ())
#define GTK_TYPE_VISIBILITY	(gtk_visibility_get_type())
#define GTK_TYPE_VPANED	(gtk_vpaned_get_type ())
#define GTK_TYPE_VRULER	(gtk_vruler_get_type ())
#define GTK_TYPE_VSCALE	(gtk_vscale_get_type ())
#define GTK_TYPE_VSCROLLBAR	(gtk_vscrollbar_get_type ())
#define GTK_TYPE_VSEPARATOR	(gtk_vseparator_get_type ())
#define GTK_WIDGET_SAVED_STATE(wid)	(GTK_WIDGET (wid)->saved_state)
#define GTK_WIDGET_STATE(wid)	(GTK_WIDGET (wid)->state)
#define GTK_TYPE_WIDGET_FLAGS	(gtk_widget_flags_get_type())
#define GTK_TYPE_WIDGET	(gtk_widget_get_type ())
#define GTK_TYPE_WIDGET_HELP_TYPE	(gtk_widget_help_type_get_type())
#define GTK_TYPE_WINDOW	(gtk_window_get_type ())
#define GTK_TYPE_WINDOW_GROUP	(gtk_window_group_get_type ())
#define GTK_TYPE_WINDOW_POSITION	(gtk_window_position_get_type())
#define GTK_TYPE_WINDOW_TYPE	(gtk_window_type_get_type())
#define GTK_TYPE_WRAP_MODE	(gtk_wrap_mode_get_type())
#define GTK_PRIORITY_RESIZE	(G_PRIORITY_HIGH_IDLE + 10)
#define GTK_IS_BIN(obj)	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_BIN))
#define GTK_IS_BOX(obj)	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_BOX))
#define GTK_OBJECT_TYPE(object)	(G_TYPE_FROM_INSTANCE (object))
#define GTK_BUTTONBOX_DEFAULT	-1
#define GTK_INPUT_ERROR	-1
#define GTK_PATH_PRIO_MASK	0x0f
#define GTK_MAX_COMPOSE_LEN	7
#define GTKMAIN_C_VAR	extern
#define GTKVAR	extern
#define GTK_STOCK_ABOUT	"gtk-about"
#define GTK_STOCK_ADD	"gtk-add"
#define GTK_STOCK_APPLY	"gtk-apply"
#define GTK_STOCK_BOLD	"gtk-bold"
#define GTK_STOCK_CANCEL	"gtk-cancel"
#define GTK_STOCK_CDROM	"gtk-cdrom"
#define GTK_STOCK_CLEAR	"gtk-clear"
#define GTK_STOCK_CLOSE	"gtk-close"
#define GTK_STOCK_COLOR_PICKER	"gtk-color-picker"
#define GTK_STOCK_CONNECT	"gtk-connect"
#define GTK_STOCK_CONVERT	"gtk-convert"
#define GTK_STOCK_COPY	"gtk-copy"
#define GTK_STOCK_CUT	"gtk-cut"
#define GTK_STOCK_DELETE	"gtk-delete"
#define GTK_STOCK_DIALOG_AUTHENTICATION	"gtk-dialog-authentication"
#define GTK_STOCK_DIALOG_ERROR	"gtk-dialog-error"
#define GTK_STOCK_DIALOG_INFO	"gtk-dialog-info"
#define GTK_STOCK_DIALOG_QUESTION	"gtk-dialog-question"
#define GTK_STOCK_DIALOG_WARNING	"gtk-dialog-warning"
#define GTK_STOCK_DIRECTORY	"gtk-directory"
#define GTK_STOCK_DISCONNECT	"gtk-disconnect"
#define GTK_STOCK_DND	"gtk-dnd"
#define GTK_STOCK_DND_MULTIPLE	"gtk-dnd-multiple"
#define GTK_STOCK_EDIT	"gtk-edit"
#define GTK_STOCK_EXECUTE	"gtk-execute"
#define GTK_STOCK_FILE	"gtk-file"
#define GTK_STOCK_FIND	"gtk-find"
#define GTK_STOCK_FIND_AND_REPLACE	"gtk-find-and-replace"
#define GTK_STOCK_FLOPPY	"gtk-floppy"
#define GTK_STOCK_FULLSCREEN	"gtk-fullscreen"
#define GTK_STOCK_GO_BACK	"gtk-go-back"
#define GTK_STOCK_GO_DOWN	"gtk-go-down"
#define GTK_STOCK_GO_FORWARD	"gtk-go-forward"
#define GTK_STOCK_GO_UP	"gtk-go-up"
#define GTK_STOCK_GOTO_BOTTOM	"gtk-goto-bottom"
#define GTK_STOCK_GOTO_FIRST	"gtk-goto-first"
#define GTK_STOCK_GOTO_LAST	"gtk-goto-last"
#define GTK_STOCK_GOTO_TOP	"gtk-goto-top"
#define GTK_STOCK_HARDDISK	"gtk-harddisk"
#define GTK_STOCK_HELP	"gtk-help"
#define GTK_STOCK_HOME	"gtk-home"
#define GTK_STOCK_INDENT	"gtk-indent"
#define GTK_STOCK_INDEX	"gtk-index"
#define GTK_STOCK_INFO	"gtk-info"
#define GTK_STOCK_ITALIC	"gtk-italic"
#define GTK_STOCK_JUMP_TO	"gtk-jump-to"
#define GTK_STOCK_JUSTIFY_CENTER	"gtk-justify-center"
#define GTK_STOCK_JUSTIFY_FILL	"gtk-justify-fill"
#define GTK_STOCK_JUSTIFY_LEFT	"gtk-justify-left"
#define GTK_STOCK_JUSTIFY_RIGHT	"gtk-justify-right"
#define GTK_STOCK_LEAVE_FULLSCREEN	"gtk-leave-fullscreen"
#define GTK_STOCK_MEDIA_FORWARD	"gtk-media-forward"
#define GTK_STOCK_MEDIA_NEXT	"gtk-media-next"
#define GTK_STOCK_MEDIA_PAUSE	"gtk-media-pause"
#define GTK_STOCK_MEDIA_PLAY	"gtk-media-play"
#define GTK_STOCK_MEDIA_PREVIOUS	"gtk-media-previous"
#define GTK_STOCK_MEDIA_RECORD	"gtk-media-record"
#define GTK_STOCK_MEDIA_REWIND	"gtk-media-rewind"
#define GTK_STOCK_MEDIA_STOP	"gtk-media-stop"
#define GTK_STOCK_MISSING_IMAGE	"gtk-missing-image"
#define GTK_STOCK_NETWORK	"gtk-network"
#define GTK_STOCK_NEW	"gtk-new"
#define GTK_STOCK_NO	"gtk-no"
#define GTK_STOCK_OK	"gtk-ok"
#define GTK_STOCK_OPEN	"gtk-open"
#define GTK_STOCK_PASTE	"gtk-paste"
#define GTK_STOCK_PREFERENCES	"gtk-preferences"
#define GTK_STOCK_PRINT	"gtk-print"
#define GTK_STOCK_PRINT_PREVIEW	"gtk-print-preview"
#define GTK_STOCK_PROPERTIES	"gtk-properties"
#define GTK_STOCK_QUIT	"gtk-quit"
#define GTK_STOCK_REDO	"gtk-redo"
#define GTK_STOCK_REFRESH	"gtk-refresh"
#define GTK_STOCK_REMOVE	"gtk-remove"
#define GTK_STOCK_REVERT_TO_SAVED	"gtk-revert-to-saved"
#define GTK_STOCK_SAVE	"gtk-save"
#define GTK_STOCK_SAVE_AS	"gtk-save-as"
#define GTK_STOCK_SELECT_COLOR	"gtk-select-color"
#define GTK_STOCK_SELECT_FONT	"gtk-select-font"
#define GTK_STOCK_SORT_ASCENDING	"gtk-sort-ascending"
#define GTK_STOCK_SORT_DESCENDING	"gtk-sort-descending"
#define GTK_STOCK_SPELL_CHECK	"gtk-spell-check"
#define GTK_STOCK_STOP	"gtk-stop"
#define GTK_STOCK_STRIKETHROUGH	"gtk-strikethrough"
#define GTK_STOCK_UNDELETE	"gtk-undelete"
#define GTK_STOCK_UNDERLINE	"gtk-underline"
#define GTK_STOCK_UNDO	"gtk-undo"
#define GTK_STOCK_UNINDENT	"gtk-unindent"
#define GTK_STOCK_YES	"gtk-yes"
#define GTK_STOCK_ZOOM_100	"gtk-zoom-100"
#define GTK_STOCK_ZOOM_FIT	"gtk-zoom-fit"
#define GTK_STOCK_ZOOM_IN	"gtk-zoom-in"
#define GTK_STOCK_ZOOM_OUT	"gtk-zoom-out"
#define gtk_accel_label_accelerator_width	gtk_accel_label_get_accel_width
#define gtk_binding_entry_add	gtk_binding_entry_clear
#define GTK_ICON_THEME_ERROR	gtk_icon_theme_error_quark ()
#define GTK_CHECK_CLASS_CAST	G_TYPE_CHECK_CLASS_CAST
#define GTK_CHECK_CLASS_TYPE	G_TYPE_CHECK_CLASS_TYPE
#define GTK_CHECK_CAST	G_TYPE_CHECK_INSTANCE_CAST
#define GTK_CHECK_TYPE	G_TYPE_CHECK_INSTANCE_TYPE
#define GTK_CHECK_GET_CLASS	G_TYPE_INSTANCE_GET_CLASS

typedef struct _GtkIconSet GtkIconSet;
typedef struct _GtkObject {
    GObject parent_instance;
    guint32 flags;
} GtkObject;
typedef enum {
    GTK_RC_FG = 1,
    GTK_RC_BG = 2,
    GTK_RC_TEXT = 4,
    GTK_RC_BASE = 8
} GtkRcFlags;
typedef struct _GtkRcStyle {
    GObject parent_instance;
    gchar *name;
    gchar *bg_pixmap_name[5];
    PangoFontDescription *font_desc;
    GtkRcFlags color_flags[5];
    GdkColor fg[5];
    GdkColor bg[5];
    GdkColor text[5];
    GdkColor base[5];
    gint xthickness;
    gint ythickness;
    GArray *rc_properties;
    GSList *rc_style_lists;
    GSList *icon_factories;
    guint engine_specified:1;
} GtkRcStyle;
typedef struct _GtkStyle {
    GObject parent_instance;
    GdkColor fg[5];
    GdkColor bg[5];
    GdkColor light[5];
    GdkColor dark[5];
    GdkColor mid[5];
    GdkColor text[5];
    GdkColor base[5];
    GdkColor text_aa[5];
    GdkColor black;
    GdkColor white;
    PangoFontDescription *font_desc;
    gint xthickness;
    gint ythickness;
    GdkGC *fg_gc[5];
    GdkGC *bg_gc[5];
    GdkGC *light_gc[5];
    GdkGC *dark_gc[5];
    GdkGC *mid_gc[5];
    GdkGC *text_gc[5];
    GdkGC *base_gc[5];
    GdkGC *text_aa_gc[5];
    GdkGC *black_gc;
    GdkGC *white_gc;
    GdkPixmap *bg_pixmap[5];
    gint attach_count;
    gint depth;
    GdkColormap *colormap;
    GdkFont *private_font;
    PangoFontDescription *private_font_desc;
    GtkRcStyle *rc_style;
    GSList *styles;
    GArray *property_cache;
    GSList *icon_factories;
} GtkStyle;
typedef struct _GtkRequisition {
    gint width;
    gint height;
} GtkRequisition;
typedef GdkRectangle GtkAllocation;
typedef struct _GtkWidget {
    GtkObject object;
    guint16 private_flags;
    guint8 state;
    guint8 saved_state;
    gchar *name;
    GtkStyle *style;
    GtkRequisition requisition;
    GtkAllocation allocation;
    GdkWindow *window;
    GtkWidget *parent;
} GtkWidget;
typedef struct _GtkAdjustment {
    GtkObject parent_instance;
    gdouble lower;
    gdouble upper;
    gdouble value;
    gdouble step_increment;
    gdouble page_increment;
    gdouble page_size;
} GtkAdjustment;
typedef struct _GtkProgress {
    GtkWidget widget;
    GtkAdjustment *adjustment;
    GdkPixmap *offscreen_pixmap;
    gchar *format;
    gfloat x_align;
    gfloat y_align;
    guint show_text:1;
    guint activity_mode:1;
    guint use_text_format:1;
} GtkProgress;
typedef enum {
    GTK_PROGRESS_CONTINUOUS = 0,
    GTK_PROGRESS_DISCRETE = 1
} GtkProgressBarStyle;
typedef enum {
    GTK_PROGRESS_LEFT_TO_RIGHT = 0,
    GTK_PROGRESS_RIGHT_TO_LEFT = 1,
    GTK_PROGRESS_BOTTOM_TO_TOP = 2,
    GTK_PROGRESS_TOP_TO_BOTTOM = 3
} GtkProgressBarOrientation;
typedef struct _GtkProgressBar {
    GtkProgress progress;
    GtkProgressBarStyle bar_style;
    GtkProgressBarOrientation orientation;
    guint blocks;
    gint in_block;
    gint activity_pos;
    guint activity_step;
    guint activity_blocks;
    gdouble pulse_fraction;
    guint activity_dir:1;
    guint ellipsize:3;
} GtkProgressBar;
typedef struct _GtkTextTagTable {
    GObject parent_instance;
    GHashTable *hash;
    GSList *anonymous;
    gint anon_count;
    GSList *buffers;
} GtkTextTagTable;
typedef struct _GtkTextBTree GtkTextBTree;
typedef struct _GtkTextLogAttrCache GtkTextLogAttrCache;
typedef struct _GtkTextBuffer {
    GObject parent_instance;
    GtkTextTagTable *tag_table;
    GtkTextBTree *btree;
    GSList *clipboard_contents_buffers;
    GSList *selection_clipboards;
    GtkTextLogAttrCache *log_attr_cache;
    guint user_action_count;
    guint modified:1;
} GtkTextBuffer;
typedef struct _GtkTextIter {
    gpointer dummy1;
    gpointer dummy2;
    gint dummy3;
    gint dummy4;
    gint dummy5;
    gint dummy6;
    gint dummy7;
    gint dummy8;
    gpointer dummy9;
    gpointer dummy10;
    gint dummy11;
    gint dummy12;
    gint dummy13;
    gpointer dummy14;
} GtkTextIter;
typedef GType GtkType;
typedef struct _GtkContainer {
    GtkWidget widget;
    GtkWidget *focus_child;
    guint border_width:16;
    guint need_resize:1;
    guint resize_mode:2;
    guint reallocate_redraws:1;
    guint has_focus_chain:1;
} GtkContainer;
typedef struct _GtkBin {
    GtkContainer container;
    GtkWidget *child;
} GtkBin;
typedef struct _GtkComboBoxPrivate GtkComboBoxPrivate;
typedef struct _GtkComboBox {
    GtkBin parent_instance;
    GtkComboBoxPrivate *priv;
} GtkComboBox;
typedef struct _GtkMisc {
    GtkWidget widget;
    gfloat xalign;
    gfloat yalign;
    guint16 xpad;
    guint16 ypad;
} GtkMisc;
typedef struct _GtkBox {
    GtkContainer container;
    GList *children;
    gint16 spacing;
    guint homogeneous:1;
} GtkBox;
typedef struct _GtkHBox {
    GtkBox box;
} GtkHBox;
typedef struct _GtkStatusbar {
    GtkHBox parent_widget;
    GtkWidget *frame;
    GtkWidget *label;
    GSList *messages;
    GSList *keys;
    guint seq_context_id;
    guint seq_message_id;
    GdkWindow *grip_window;
    guint has_resize_grip:1;
} GtkStatusbar;
typedef struct _GtkTargetList {
    GList *list;
    guint ref_count;
} GtkTargetList;
typedef struct _GtkWindow {
    GtkBin bin;
    gchar *title;
    gchar *wmclass_name;
    gchar *wmclass_class;
    gchar *wm_role;
    GtkWidget *focus_widget;
    GtkWidget *default_widget;
    GtkWindow *transient_parent;
    GtkWindowGeometryInfo *geometry_info;
    GdkWindow *frame;
    GtkWindowGroup *group;
    guint16 configure_request_count;
    guint allow_shrink:1;
    guint allow_grow:1;
    guint configure_notify_received:1;
    guint need_default_position:1;
    guint need_default_size:1;
    guint position:3;
    guint type:4;
    guint has_user_ref_count:1;
    guint has_focus:1;
    guint modal:1;
    guint destroy_with_parent:1;
    guint has_frame:1;
    guint iconify_initially:1;
    guint stick_initially:1;
    guint maximize_initially:1;
    guint decorated:1;
    guint type_hint:3;
    guint gravity:5;
    guint is_active:1;
    guint has_toplevel_focus:1;
    guint frame_left;
    guint frame_top;
    guint frame_right;
    guint frame_bottom;
    guint keys_changed_handler;
    GdkModifierType mnemonic_modifier;
    GdkScreen *screen;
} GtkWindow;
typedef struct _GtkWindowGeometryInfo GtkWindowGeometryInfo;
typedef struct _GtkWindowGroup {
    GObject parent_instance;
    GSList *grabs;
} GtkWindowGroup;
typedef enum {
    GTK_STATE_NORMAL = 0,
    GTK_STATE_ACTIVE = 1,
    GTK_STATE_PRELIGHT = 2,
    GTK_STATE_SELECTED = 3,
    GTK_STATE_INSENSITIVE = 4
} GtkStateType;
typedef struct _GtkTreeRowReference GtkTreeRowReference;
typedef enum {
    GTK_TREE_MODEL_ITERS_PERSIST = 1,
    GTK_TREE_MODEL_LIST_ONLY = 2
} GtkTreeModelFlags;
typedef struct _GtkTreeModel GtkTreeModel;
typedef struct _GtkTargetEntry {
    gchar *target;
    guint flags;
    guint info;
} GtkTargetEntry;
typedef struct _GtkIMContext {
    GObject parent_instance;
} GtkIMContext;
typedef struct _GtkEntry {
    GtkWidget widget;
    gchar *text;
    guint editable:1;
    guint visible:1;
    guint overwrite_mode:1;
    guint in_drag:1;
    guint16 text_length;
    guint16 text_max_length;
    GdkWindow *text_area;
    GtkIMContext *im_context;
    GtkWidget *popup_menu;
    gint current_pos;
    gint selection_bound;
    PangoLayout *cached_layout;
    guint cache_includes_preedit:1;
    guint need_im_reset:1;
    guint has_frame:1;
    guint activates_default:1;
    guint cursor_visible:1;
    guint in_click:1;
    guint is_cell_renderer:1;
    guint editing_canceled:1;
    guint mouse_cursor_obscured:1;
    guint select_words:1;
    guint select_lines:1;
    guint resolved_dir:4;
    guint button;
    guint blink_timeout;
    guint recompute_idle;
    gint scroll_offset;
    gint ascent;
    gint descent;
    guint16 text_size;
    guint16 n_bytes;
    guint16 preedit_length;
    guint16 preedit_cursor;
    gint dnd_position;
    gint drag_start_x;
    gint drag_start_y;
    gunichar invisible_char;
    gint width_chars;
} GtkEntry;
typedef struct _GtkComboBoxEntryPrivate GtkComboBoxEntryPrivate;
typedef struct _GtkComboBoxEntry {
    GtkComboBox parent_instance;
    GtkComboBoxEntryPrivate *priv;
} GtkComboBoxEntry;
typedef struct _GtkLayout {
    GtkContainer container;
    GList *children;
    guint width;
    guint height;
    GtkAdjustment *hadjustment;
    GtkAdjustment *vadjustment;
    GdkWindow *bin_window;
    GdkVisibilityState visibility;
    gint scroll_x;
    gint scroll_y;
    guint freeze_count;
} GtkLayout;
typedef enum {
    GTK_SORT_ASCENDING = 0,
    GTK_SORT_DESCENDING = 1
} GtkSortType;
typedef struct _GtkTreeIter {
    gint stamp;
    gpointer user_data;
    gpointer user_data2;
    gpointer user_data3;
} GtkTreeIter;
typedef gint(*GtkTreeIterCompareFunc) (GtkTreeModel *, GtkTreeIter *,
				       GtkTreeIter *, gpointer);
typedef void (*GtkDestroyNotify) (gpointer);
typedef struct _GtkTreeStore {
    GObject parent;
    gint stamp;
    gpointer root;
    gpointer last;
    gint n_columns;
    gint sort_column_id;
    GList *sort_list;
    GtkSortType order;
    GType *column_headers;
    GtkTreeIterCompareFunc default_sort_func;
    gpointer default_sort_data;
    GtkDestroyNotify default_sort_destroy;
    guint columns_dirty:1;
} GtkTreeStore;
typedef struct _GtkDialog {
    GtkWindow window;
    GtkWidget *vbox;
    GtkWidget *action_area;
    GtkWidget *separator;
} GtkDialog;
typedef struct _GtkAboutDialog {
    GtkDialog parent_instance;
    gpointer private_data;
} GtkAboutDialog;
typedef void (*GtkAboutDialogActivateLinkFunc) (GtkAboutDialog *,
						const gchar *, gpointer);
typedef struct _GtkTreeSortable GtkTreeSortable;
typedef enum {
    GTK_UPDATE_CONTINUOUS = 0,
    GTK_UPDATE_DISCONTINUOUS = 1,
    GTK_UPDATE_DELAYED = 2
} GtkUpdateType;
typedef enum {
    GTK_ORIENTATION_HORIZONTAL = 0,
    GTK_ORIENTATION_VERTICAL = 1
} GtkOrientation;
typedef struct _GtkRangeLayout GtkRangeLayout;
typedef struct _GtkRangeStepTimer GtkRangeStepTimer;
typedef struct _GtkRange {
    GtkWidget widget;
    GtkAdjustment *adjustment;
    GtkUpdateType update_policy;
    guint inverted:1;
    guint flippable:1;
    guint has_stepper_a:1;
    guint has_stepper_b:1;
    guint has_stepper_c:1;
    guint has_stepper_d:1;
    guint need_recalc:1;
    guint slider_size_fixed:1;
    gint min_slider_size;
    GtkOrientation orientation;
    GdkRectangle range_rect;
    gint slider_start;
    gint slider_end;
    gint round_digits;
    guint trough_click_forward:1;
    guint update_pending:1;
    GtkRangeLayout *layout;
    GtkRangeStepTimer *timer;
    gint slide_initial_slider_position;
    gint slide_initial_coordinate;
    guint update_timeout_id;
    GdkWindow *event_window;
} GtkRange;
typedef struct _GtkAccelKey {
    guint accel_key;
    GdkModifierType accel_mods;
    guint accel_flags:16;
} GtkAccelKey;
typedef struct _GtkAccelGroupEntry {
    GtkAccelKey key;
    GClosure *closure;
    GQuark accel_path_quark;
} GtkAccelGroupEntry;
typedef struct _GtkAccelGroup {
    GObject parent;
    guint lock_count;
    GdkModifierType modifier_mask;
    GSList *acceleratables;
    guint n_accels;
    GtkAccelGroupEntry *priv_accels;
} GtkAccelGroup;
typedef struct _GtkSocket {
    GtkContainer container;
    guint16 request_width;
    guint16 request_height;
    guint16 current_width;
    guint16 current_height;
    GdkWindow *plug_window;
    GtkWidget *plug_widget;
    gshort xembed_version;
    guint same_app:1;
    guint focus_in:1;
    guint have_size:1;
    guint need_map:1;
    guint is_mapped:1;
    guint active:1;
    GtkAccelGroup *accel_group;
    GtkWidget *toplevel;
} GtkSocket;
typedef struct _GtkCellEditable GtkCellEditable;
typedef enum {
    GTK_TREE_VIEW_COLUMN_GROW_ONLY = 0,
    GTK_TREE_VIEW_COLUMN_AUTOSIZE = 1,
    GTK_TREE_VIEW_COLUMN_FIXED = 2
} GtkTreeViewColumnSizing;
typedef struct _GtkTreeViewColumn {
    GtkObject parent;
    GtkWidget *tree_view;
    GtkWidget *button;
    GtkWidget *child;
    GtkWidget *arrow;
    GtkWidget *alignment;
    GdkWindow *window;
    GtkCellEditable *editable_widget;
    gfloat xalign;
    guint property_changed_signal;
    gint spacing;
    GtkTreeViewColumnSizing column_type;
    gint requested_width;
    gint button_request;
    gint resized_width;
    gint width;
    gint fixed_width;
    gint min_width;
    gint max_width;
    gint drag_x;
    gint drag_y;
    gchar *title;
    GList *cell_list;
    guint sort_clicked_signal;
    guint sort_column_changed_signal;
    gint sort_column_id;
    GtkSortType sort_order;
    guint visible:1;
    guint resizable:1;
    guint clickable:1;
    guint dirty:1;
    guint show_sort_indicator:1;
    guint maybe_reordered:1;
    guint reorderable:1;
    guint use_resized_width:1;
    guint expand:1;
} GtkTreeViewColumn;
typedef struct _GtkCellRenderer {
    GtkObject parent;
    gfloat xalign;
    gfloat yalign;
    gint width;
    gint height;
    guint16 xpad;
    guint16 ypad;
    guint mode:2;
    guint visible:1;
    guint is_expander:1;
    guint is_expanded:1;
    guint cell_background_set:1;
    guint sensitive:1;
    guint editing:1;
} GtkCellRenderer;
typedef enum {
    GTK_BUTTONBOX_DEFAULT_STYLE = 0,
    GTK_BUTTONBOX_SPREAD = 1,
    GTK_BUTTONBOX_EDGE = 2,
    GTK_BUTTONBOX_START = 3,
    GTK_BUTTONBOX_END = 4
} GtkButtonBoxStyle;
typedef struct _GtkButtonBox {
    GtkBox box;
    gint child_min_width;
    gint child_min_height;
    gint child_ipad_x;
    gint child_ipad_y;
    GtkButtonBoxStyle layout_style;
} GtkButtonBox;
typedef struct _GtkActionPrivate GtkActionPrivate;
typedef struct _GtkAction {
    GObject object;
    GtkActionPrivate *private_data;
} GtkAction;
typedef struct _GtkToggleActionPrivate GtkToggleActionPrivate;
typedef struct _GtkToggleAction {
    GtkAction parent;
    GtkToggleActionPrivate *private_data;
} GtkToggleAction;
typedef struct _GtkTextAppearance {
    GdkColor bg_color;
    GdkColor fg_color;
    GdkBitmap *bg_stipple;
    GdkBitmap *fg_stipple;
    gint rise;
    gpointer padding1;
    guint underline:4;
    guint strikethrough:1;
    guint draw_bg:1;
    guint inside_selection:1;
    guint is_text:1;
    guint pad1:1;
    guint pad2:1;
    guint pad3:1;
    guint pad4:1;
} GtkTextAppearance;
typedef enum {
    GTK_JUSTIFY_LEFT = 0,
    GTK_JUSTIFY_RIGHT = 1,
    GTK_JUSTIFY_CENTER = 2,
    GTK_JUSTIFY_FILL = 3
} GtkJustification;
typedef enum {
    GTK_TEXT_DIR_NONE = 0,
    GTK_TEXT_DIR_LTR = 1,
    GTK_TEXT_DIR_RTL = 2
} GtkTextDirection;
typedef enum {
    GTK_WRAP_NONE = 0,
    GTK_WRAP_CHAR = 1,
    GTK_WRAP_WORD = 2,
    GTK_WRAP_WORD_CHAR = 3
} GtkWrapMode;
typedef struct _GtkTextAttributes {
    guint refcount;
    GtkTextAppearance appearance;
    GtkJustification justification;
    GtkTextDirection direction;
    PangoFontDescription *font;
    gdouble font_scale;
    gint left_margin;
    gint indent;
    gint right_margin;
    gint pixels_above_lines;
    gint pixels_below_lines;
    gint pixels_inside_wrap;
    PangoTabArray *tabs;
    GtkWrapMode wrap_mode;
    PangoLanguage *language;
    gpointer padding1;
    guint invisible:1;
    guint bg_full_height:1;
    guint editable:1;
    guint realized:1;
    guint pad1:1;
    guint pad2:1;
    guint pad3:1;
    guint pad4:1;
} GtkTextAttributes;
typedef struct _GtkTextTag {
    GObject parent_instance;
    GtkTextTagTable *table;
    char *name;
    int priority;
    GtkTextAttributes *values;
    guint bg_color_set:1;
    guint bg_stipple_set:1;
    guint fg_color_set:1;
    guint scale_set:1;
    guint fg_stipple_set:1;
    guint justification_set:1;
    guint left_margin_set:1;
    guint indent_set:1;
    guint rise_set:1;
    guint strikethrough_set:1;
    guint right_margin_set:1;
    guint pixels_above_lines_set:1;
    guint pixels_below_lines_set:1;
    guint pixels_inside_wrap_set:1;
    guint tabs_set:1;
    guint underline_set:1;
    guint wrap_mode_set:1;
    guint bg_full_height_set:1;
    guint invisible_set:1;
    guint editable_set:1;
    guint language_set:1;
    guint pad1:1;
    guint pad2:1;
    guint pad3:1;
} GtkTextTag;
typedef struct _GtkFileFilter GtkFileFilter;
typedef enum {
    GTK_FILE_FILTER_FILENAME = 1,
    GTK_FILE_FILTER_URI = 2,
    GTK_FILE_FILTER_DISPLAY_NAME = 4,
    GTK_FILE_FILTER_MIME_TYPE = 8
} GtkFileFilterFlags;
typedef struct _GtkFileFilterInfo {
    GtkFileFilterFlags contains;
    const gchar *filename;
    const gchar *uri;
    const gchar *display_name;
    const gchar *mime_type;
} GtkFileFilterInfo;
typedef struct _GtkIconSource GtkIconSource;
typedef struct _GtkToolItemPrivate GtkToolItemPrivate;
typedef struct _GtkToolItem {
    GtkBin parent;
    GtkToolItemPrivate *priv;
} GtkToolItem;
typedef struct _GtkToolButtonPrivate GtkToolButtonPrivate;
typedef struct _GtkToolButton {
    GtkToolItem parent;
    GtkToolButtonPrivate *priv;
} GtkToolButton;
typedef struct _GtkIconViewPrivate GtkIconViewPrivate;
typedef struct _GtkIconView {
    GtkContainer parent;
    GtkIconViewPrivate *priv;
} GtkIconView;
typedef struct _GtkLabelSelectionInfo GtkLabelSelectionInfo;
typedef struct _GtkLabel {
    GtkMisc misc;
    gchar *label;
    guint jtype:2;
    guint wrap:1;
    guint use_underline:1;
    guint use_markup:1;
    guint ellipsize:3;
    guint mnemonic_keyval;
    gchar *text;
    PangoAttrList *attrs;
    PangoAttrList *effective_attrs;
    PangoLayout *layout;
    GtkWidget *mnemonic_widget;
    GtkWindow *mnemonic_window;
    GtkLabelSelectionInfo *select_info;
} GtkLabel;
typedef struct _GtkSettingsPropertyValue GtkSettingsPropertyValue;
typedef struct _GtkRcContext GtkRcContext;
typedef struct _GtkSettings {
    GObject parent_instance;
    GData *queued_settings;
    GtkSettingsPropertyValue *property_values;
    GtkRcContext *rc_context;
    GdkScreen *screen;
} GtkSettings;
typedef struct _GtkUIManagerPrivate GtkUIManagerPrivate;
typedef struct _GtkUIManager {
    GObject parent;
    GtkUIManagerPrivate *private_data;
} GtkUIManager;
typedef struct _GtkItem {
    GtkBin bin;
} GtkItem;
typedef struct _GtkMenuItem {
    GtkItem item;
    GtkWidget *submenu;
    GdkWindow *event_window;
    guint16 toggle_size;
    guint16 accelerator_width;
    gchar *accel_path;
    guint show_submenu_indicator:1;
    guint submenu_placement:1;
    guint submenu_direction:1;
    guint right_justify:1;
    guint timer_from_keypress:1;
    guint timer;
} GtkMenuItem;
typedef struct _GtkCheckMenuItem {
    GtkMenuItem menu_item;
    guint active:1;
    guint always_show_toggle:1;
    guint inconsistent:1;
    guint draw_as_radio:1;
} GtkCheckMenuItem;
typedef struct _GtkRadioMenuItem {
    GtkCheckMenuItem check_menu_item;
    GSList *group;
} GtkRadioMenuItem;
typedef struct _GtkCellViewPrivate GtkCellViewPrivate;
typedef struct _GtkCellView {
    GtkWidget parent_instance;
    GtkCellViewPrivate *priv;
} GtkCellView;
typedef struct _GtkSelectionData {
    GdkAtom selection;
    GdkAtom target;
    GdkAtom type;
    gint format;
    guchar *data;
    gint length;
    GdkDisplay *display;
} GtkSelectionData;
typedef struct _GtkFileChooser GtkFileChooser;
typedef struct _GtkDrawingArea {
    GtkWidget widget;
    gpointer draw_data;
} GtkDrawingArea;
typedef enum {
    GTK_CURVE_TYPE_LINEAR = 0,
    GTK_CURVE_TYPE_SPLINE = 1,
    GTK_CURVE_TYPE_FREE = 2
} GtkCurveType;
typedef struct _GtkCurve {
    GtkDrawingArea graph;
    gint cursor_type;
    gfloat min_x;
    gfloat max_x;
    gfloat min_y;
    gfloat max_y;
    GdkPixmap *pixmap;
    GtkCurveType curve_type;
    gint height;
    gint grab_point;
    gint last;
    gint num_points;
    GdkPoint *point;
    gint num_ctlpoints;
    gfloat *ctlpoint;
} GtkCurve;
typedef struct _GtkNotebookPage GtkNotebookPage;
typedef struct _GtkNotebook {
    GtkContainer container;
    GtkNotebookPage *cur_page;
    GList *children;
    GList *first_tab;
    GList *focus_tab;
    GtkWidget *menu;
    GdkWindow *event_window;
    guint32 timer;
    guint16 tab_hborder;
    guint16 tab_vborder;
    guint show_tabs:1;
    guint homogeneous:1;
    guint show_border:1;
    guint tab_pos:2;
    guint scrollable:1;
    guint in_child:3;
    guint click_child:3;
    guint button:2;
    guint need_timer:1;
    guint child_has_focus:1;
    guint have_visible_child:1;
    guint focus_out:1;
    guint has_before_previous:1;
    guint has_before_next:1;
    guint has_after_previous:1;
    guint has_after_next:1;
} GtkNotebook;
typedef struct _GtkIconFactory {
    GObject parent_instance;
    GHashTable *icons;
} GtkIconFactory;
typedef struct _GtkRadioActionPrivate GtkRadioActionPrivate;
typedef struct _GtkRadioAction {
    GtkToggleAction parent;
    GtkRadioActionPrivate *private_data;
} GtkRadioAction;
typedef struct _GtkTextMark {
    GObject parent_instance;
    gpointer segment;
} GtkTextMark;
typedef enum {
    GTK_PACK_START = 0,
    GTK_PACK_END = 1
} GtkPackType;
typedef struct _GtkVBox {
    GtkBox box;
} GtkVBox;
typedef struct _GtkColorSelection {
    GtkVBox parent_instance;
    gpointer private_data;
} GtkColorSelection;
typedef enum {
    GTK_CALENDAR_SHOW_HEADING = 1,
    GTK_CALENDAR_SHOW_DAY_NAMES = 2,
    GTK_CALENDAR_NO_MONTH_CHANGE = 4,
    GTK_CALENDAR_SHOW_WEEK_NUMBERS = 8,
    GTK_CALENDAR_WEEK_START_MONDAY = 16
} GtkCalendarDisplayOptions;
typedef struct _GtkCalendar {
    GtkWidget widget;
    GtkStyle *header_style;
    GtkStyle *label_style;
    gint month;
    gint year;
    gint selected_day;
    gint day_month[6][7];
    gint day[6][7];
    gint num_marked_dates;
    gint marked_date[31];
    GtkCalendarDisplayOptions display_flags;
    GdkColor marked_date_color[31];
    GdkGC *gc;
    GdkGC *xor_gc;
    gint focus_row;
    gint focus_col;
    gint highlight_row;
    gint highlight_col;
    gpointer private_data;
    gchar grow_space[32];
    void (*_gtk_reserved1) (void);
    void (*_gtk_reserved2) (void);
    void (*_gtk_reserved3) (void);
    void (*_gtk_reserved4) (void);
} GtkCalendar;
typedef struct _GtkIconInfo GtkIconInfo;
typedef struct _GtkTreePath GtkTreePath;
typedef struct _GtkTreeDragSource GtkTreeDragSource;
typedef struct _GtkTableRowCol {
    guint16 requisition;
    guint16 allocation;
    guint16 spacing;
    guint need_expand:1;
    guint need_shrink:1;
    guint expand:1;
    guint shrink:1;
    guint empty:1;
} GtkTableRowCol;
typedef struct _GtkTable {
    GtkContainer container;
    GList *children;
    GtkTableRowCol *rows;
    GtkTableRowCol *cols;
    guint16 nrows;
    guint16 ncols;
    guint16 column_spacing;
    guint16 row_spacing;
    guint homogeneous:1;
} GtkTable;
typedef gboolean(*GtkFunction) (gpointer);
typedef void (*GtkSignalFunc) (void);
typedef struct _GtkArg GtkArg;
typedef void (*GtkCallbackMarshal) (GtkObject *, gpointer, guint,
				    GtkArg *);
typedef struct _GtkMenuShell {
    GtkContainer container;
    GList *children;
    GtkWidget *active_menu_item;
    GtkWidget *parent_menu_shell;
    guint button;
    guint32 activate_time;
    guint active:1;
    guint have_grab:1;
    guint have_xgrab:1;
    guint ignore_leave:1;
    guint menu_flag:1;
    guint ignore_enter:1;
} GtkMenuShell;
typedef struct _GtkMenu {
    GtkMenuShell menu_shell;
    GtkWidget *parent_menu_item;
    GtkWidget *old_active_menu_item;
    GtkAccelGroup *accel_group;
    gchar *accel_path;
    GtkMenuPositionFunc position_func;
    gpointer position_func_data;
    guint toggle_size;
    GtkWidget *toplevel;
    GtkWidget *tearoff_window;
    GtkWidget *tearoff_hbox;
    GtkWidget *tearoff_scrollbar;
    GtkAdjustment *tearoff_adjustment;
    GdkWindow *view_window;
    GdkWindow *bin_window;
    gint scroll_offset;
    gint saved_scroll_offset;
    gint scroll_step;
    guint timeout_id;
    GdkRegion *navigation_region;
    guint navigation_timeout;
    guint needs_destruction_ref_count:1;
    guint torn_off:1;
    guint tearoff_active:1;
    guint scroll_fast:1;
    guint upper_arrow_visible:1;
    guint lower_arrow_visible:1;
    guint upper_arrow_prelight:1;
    guint lower_arrow_prelight:1;
} GtkMenu;
typedef void (*GtkMenuPositionFunc) (GtkMenu *, gint *, gint *, gboolean *,
				     gpointer);
typedef struct _GtkButton {
    GtkBin bin;
    GdkWindow *event_window;
    gchar *label_text;
    guint activate_timeout;
    guint constructed:1;
    guint in_button:1;
    guint button_down:1;
    guint relief:2;
    guint use_underline:1;
    guint use_stock:1;
    guint depressed:1;
    guint depress_on_activate:1;
    guint focus_on_click:1;
} GtkButton;
typedef struct _GtkToggleButton {
    GtkButton button;
    guint active:1;
    guint draw_indicator:1;
    guint inconsistent:1;
} GtkToggleButton;
typedef struct _GtkIconThemePrivate GtkIconThemePrivate;
typedef struct _GtkIconTheme {
    GObject parent_instance;
    GtkIconThemePrivate *priv;
} GtkIconTheme;
typedef enum {
    GTK_ARROW_UP = 0,
    GTK_ARROW_DOWN = 1,
    GTK_ARROW_LEFT = 2,
    GTK_ARROW_RIGHT = 3
} GtkArrowType;
typedef enum {
    GTK_SHADOW_NONE = 0,
    GTK_SHADOW_IN = 1,
    GTK_SHADOW_OUT = 2,
    GTK_SHADOW_ETCHED_IN = 3,
    GTK_SHADOW_ETCHED_OUT = 4
} GtkShadowType;
typedef struct _GtkTextWindow GtkTextWindow;
typedef struct _GtkTextPendingScroll GtkTextPendingScroll;
typedef struct _GtkTextView {
    GtkContainer parent_instance;
    struct _GtkTextLayout *layout;
    GtkTextBuffer *buffer;
    guint selection_drag_handler;
    guint scroll_timeout;
    gint pixels_above_lines;
    gint pixels_below_lines;
    gint pixels_inside_wrap;
    GtkWrapMode wrap_mode;
    GtkJustification justify;
    gint left_margin;
    gint right_margin;
    gint indent;
    PangoTabArray *tabs;
    guint editable:1;
    guint overwrite_mode:1;
    guint cursor_visible:1;
    guint need_im_reset:1;
    guint accepts_tab:1;
    guint reserved:1;
    guint onscreen_validated:1;
    guint mouse_cursor_obscured:1;
    GtkTextWindow *text_window;
    GtkTextWindow *left_window;
    GtkTextWindow *right_window;
    GtkTextWindow *top_window;
    GtkTextWindow *bottom_window;
    GtkAdjustment *hadjustment;
    GtkAdjustment *vadjustment;
    gint xoffset;
    gint yoffset;
    gint width;
    gint height;
    gint virtual_cursor_x;
    gint virtual_cursor_y;
    GtkTextMark *first_para_mark;
    gint first_para_pixels;
    GtkTextMark *dnd_mark;
    guint blink_timeout;
    guint first_validate_idle;
    guint incremental_validate_idle;
    GtkIMContext *im_context;
    GtkWidget *popup_menu;
    gint drag_start_x;
    gint drag_start_y;
    GSList *children;
    GtkTextPendingScroll *pending_scroll;
    gint pending_place_cursor_button;
} GtkTextView;
typedef enum {
    GTK_TEXT_WINDOW_PRIVATE = 0,
    GTK_TEXT_WINDOW_WIDGET = 1,
    GTK_TEXT_WINDOW_TEXT = 2,
    GTK_TEXT_WINDOW_LEFT = 3,
    GTK_TEXT_WINDOW_RIGHT = 4,
    GTK_TEXT_WINDOW_TOP = 5,
    GTK_TEXT_WINDOW_BOTTOM = 6
} GtkTextWindowType;
typedef struct _GtkObjectClass {
    GObjectClass parent_class;
    void (*set_arg) (GtkObject *, GtkArg *, guint);
    void (*get_arg) (GtkObject *, GtkArg *, guint);
    void (*destroy) (GtkObject *);
} GtkObjectClass;
typedef enum {
    GTK_DIR_TAB_FORWARD = 0,
    GTK_DIR_TAB_BACKWARD = 1,
    GTK_DIR_UP = 2,
    GTK_DIR_DOWN = 3,
    GTK_DIR_LEFT = 4,
    GTK_DIR_RIGHT = 5
} GtkDirectionType;
typedef enum {
    GTK_WIDGET_HELP_TOOLTIP = 0,
    GTK_WIDGET_HELP_WHATS_THIS = 1
} GtkWidgetHelpType;
typedef struct _GtkWidgetClass {
    GtkObjectClass parent_class;
    guint activate_signal;
    guint set_scroll_adjustments_signal;
    void (*dispatch_child_properties_changed) (GtkWidget *, guint,
					       GParamSpec * *);
    void (*show) (GtkWidget *);
    void (*show_all) (GtkWidget *);
    void (*hide) (GtkWidget *);
    void (*hide_all) (GtkWidget *);
    void (*map) (GtkWidget *);
    void (*unmap) (GtkWidget *);
    void (*realize) (GtkWidget *);
    void (*unrealize) (GtkWidget *);
    void (*size_request) (GtkWidget *, GtkRequisition *);
    void (*size_allocate) (GtkWidget *, GtkAllocation *);
    void (*state_changed) (GtkWidget *, GtkStateType);
    void (*parent_set) (GtkWidget *, GtkWidget *);
    void (*hierarchy_changed) (GtkWidget *, GtkWidget *);
    void (*style_set) (GtkWidget *, GtkStyle *);
    void (*direction_changed) (GtkWidget *, GtkTextDirection);
    void (*grab_notify) (GtkWidget *, gboolean);
    void (*child_notify) (GtkWidget *, GParamSpec *);
     gboolean(*mnemonic_activate) (GtkWidget *, gboolean);
    void (*grab_focus) (GtkWidget *);
     gboolean(*focus) (GtkWidget *, GtkDirectionType);
     gboolean(*event) (GtkWidget *, GdkEvent *);
     gboolean(*button_press_event) (GtkWidget *, GdkEventButton *);
     gboolean(*button_release_event) (GtkWidget *, GdkEventButton *);
     gboolean(*scroll_event) (GtkWidget *, GdkEventScroll *);
     gboolean(*motion_notify_event) (GtkWidget *, GdkEventMotion *);
     gboolean(*delete_event) (GtkWidget *, GdkEventAny *);
     gboolean(*destroy_event) (GtkWidget *, GdkEventAny *);
     gboolean(*expose_event) (GtkWidget *, GdkEventExpose *);
     gboolean(*key_press_event) (GtkWidget *, GdkEventKey *);
     gboolean(*key_release_event) (GtkWidget *, GdkEventKey *);
     gboolean(*enter_notify_event) (GtkWidget *, GdkEventCrossing *);
     gboolean(*leave_notify_event) (GtkWidget *, GdkEventCrossing *);
     gboolean(*configure_event) (GtkWidget *, GdkEventConfigure *);
     gboolean(*focus_in_event) (GtkWidget *, GdkEventFocus *);
     gboolean(*focus_out_event) (GtkWidget *, GdkEventFocus *);
     gboolean(*map_event) (GtkWidget *, GdkEventAny *);
     gboolean(*unmap_event) (GtkWidget *, GdkEventAny *);
     gboolean(*property_notify_event) (GtkWidget *, GdkEventProperty *);
     gboolean(*selection_clear_event) (GtkWidget *, GdkEventSelection *);
     gboolean(*selection_request_event) (GtkWidget *, GdkEventSelection *);
     gboolean(*selection_notify_event) (GtkWidget *, GdkEventSelection *);
     gboolean(*proximity_in_event) (GtkWidget *, GdkEventProximity *);
     gboolean(*proximity_out_event) (GtkWidget *, GdkEventProximity *);
     gboolean(*visibility_notify_event) (GtkWidget *,
					 GdkEventVisibility *);
     gboolean(*client_event) (GtkWidget *, GdkEventClient *);
     gboolean(*no_expose_event) (GtkWidget *, GdkEventAny *);
     gboolean(*window_state_event) (GtkWidget *, GdkEventWindowState *);
    void (*selection_get) (GtkWidget *, GtkSelectionData *, guint, guint);
    void (*selection_received) (GtkWidget *, GtkSelectionData *, guint);
    void (*drag_begin) (GtkWidget *, GdkDragContext *);
    void (*drag_end) (GtkWidget *, GdkDragContext *);
    void (*drag_data_get) (GtkWidget *, GdkDragContext *,
			   GtkSelectionData *, guint, guint);
    void (*drag_data_delete) (GtkWidget *, GdkDragContext *);
    void (*drag_leave) (GtkWidget *, GdkDragContext *, guint);
     gboolean(*drag_motion) (GtkWidget *, GdkDragContext *, gint, gint,
			     guint);
     gboolean(*drag_drop) (GtkWidget *, GdkDragContext *, gint, gint,
			   guint);
    void (*drag_data_received) (GtkWidget *, GdkDragContext *, gint, gint,
				GtkSelectionData *, guint, guint);
     gboolean(*popup_menu) (GtkWidget *);
     gboolean(*show_help) (GtkWidget *, GtkWidgetHelpType);
    AtkObject *(*get_accessible) (GtkWidget *);
    void (*screen_changed) (GtkWidget *, GdkScreen *);
     gboolean(*can_activate_accel) (GtkWidget *, guint);
    void (*_gtk_reserved2) (void);
    void (*_gtk_reserved3) (void);
    void (*_gtk_reserved4) (void);
    void (*_gtk_reserved5) (void);
    void (*_gtk_reserved6) (void);
    void (*_gtk_reserved7) (void);
} GtkWidgetClass;
typedef gboolean(*GtkRcPropertyParser) (const GParamSpec *,
					const GString *, GValue *);
typedef enum {
    GTK_IMAGE_EMPTY = 0,
    GTK_IMAGE_PIXMAP = 1,
    GTK_IMAGE_IMAGE = 2,
    GTK_IMAGE_PIXBUF = 3,
    GTK_IMAGE_STOCK = 4,
    GTK_IMAGE_ICON_SET = 5,
    GTK_IMAGE_ANIMATION = 6,
    GTK_IMAGE_ICON_NAME = 7
} GtkImageType;
typedef struct _GtkImagePixmapData {
    GdkPixmap *pixmap;
} GtkImagePixmapData;
typedef struct _GtkImageImageData {
    GdkImage *image;
} GtkImageImageData;
typedef struct _GtkImagePixbufData {
    GdkPixbuf *pixbuf;
} GtkImagePixbufData;
typedef struct _GtkImageStockData {
    gchar *stock_id;
} GtkImageStockData;
typedef struct _GtkImageIconSetData {
    GtkIconSet *icon_set;
} GtkImageIconSetData;
typedef struct _GtkImageAnimationData {
    GdkPixbufAnimation *anim;
    GdkPixbufAnimationIter *iter;
    guint frame_timeout;
} GtkImageAnimationData;
typedef struct _GtkImageIconNameData {
    gchar *icon_name;
    GdkPixbuf *pixbuf;
    guint theme_change_id;
} GtkImageIconNameData;
typedef enum {
    GTK_ICON_SIZE_INVALID = 0,
    GTK_ICON_SIZE_MENU = 1,
    GTK_ICON_SIZE_SMALL_TOOLBAR = 2,
    GTK_ICON_SIZE_LARGE_TOOLBAR = 3,
    GTK_ICON_SIZE_BUTTON = 4,
    GTK_ICON_SIZE_DND = 5,
    GTK_ICON_SIZE_DIALOG = 6
} GtkIconSize;
typedef struct _GtkImage {
    GtkMisc misc;
    GtkImageType storage_type;
    union {
	GtkImagePixmapData pixmap;
	GtkImageImageData image;
	GtkImagePixbufData pixbuf;
	GtkImageStockData stock;
	GtkImageIconSetData icon_set;
	GtkImageAnimationData anim;
	GtkImageIconNameData name;
    } data;
    GdkBitmap *mask;
    GtkIconSize icon_size;
} GtkImage;
typedef struct _GtkTreeViewPrivate GtkTreeViewPrivate;
typedef struct _GtkTreeView {
    GtkContainer parent;
    GtkTreeViewPrivate *priv;
} GtkTreeView;
typedef enum {
    GTK_UPDATE_ALWAYS = 0,
    GTK_UPDATE_IF_VALID = 1
} GtkSpinButtonUpdatePolicy;
typedef struct _GtkSpinButton {
    GtkEntry entry;
    GtkAdjustment *adjustment;
    GdkWindow *panel;
    guint32 timer;
    gdouble climb_rate;
    gdouble timer_step;
    GtkSpinButtonUpdatePolicy update_policy;
    guint in_child:2;
    guint click_child:2;
    guint button:2;
    guint need_timer:1;
    guint timer_calls:3;
    guint digits:10;
    guint numeric:1;
    guint wrap:1;
    guint snap_to_ticks:1;
} GtkSpinButton;
typedef struct _GtkCellLayout GtkCellLayout;
typedef struct _GtkFileSelection {
    GtkDialog parent_instance;
    GtkWidget *dir_list;
    GtkWidget *file_list;
    GtkWidget *selection_entry;
    GtkWidget *selection_text;
    GtkWidget *main_vbox;
    GtkWidget *ok_button;
    GtkWidget *cancel_button;
    GtkWidget *help_button;
    GtkWidget *history_pulldown;
    GtkWidget *history_menu;
    GList *history_list;
    GtkWidget *fileop_dialog;
    GtkWidget *fileop_entry;
    gchar *fileop_file;
    gpointer cmpl_state;
    GtkWidget *fileop_c_dir;
    GtkWidget *fileop_del_file;
    GtkWidget *fileop_ren_file;
    GtkWidget *button_area;
    GtkWidget *action_area;
    GPtrArray *selected_names;
    gchar *last_selected;
} GtkFileSelection;
typedef struct _GtkTooltips {
    GtkObject parent_instance;
    GtkWidget *tip_window;
    GtkWidget *tip_label;
    GtkTooltipsData *active_tips_data;
    GList *tips_data_list;
    guint delay:30;
    guint enabled:1;
    guint have_grab:1;
    guint use_sticky_delay:1;
    gint timer_tag;
    GTimeVal last_popdown;
} GtkTooltips;
typedef struct _GtkTooltipsData {
    GtkTooltips *tooltips;
    GtkWidget *widget;
    gchar *tip_text;
    gchar *tip_private;
} GtkTooltipsData;
typedef gboolean(*GtkTreeViewRowSeparatorFunc) (GtkTreeModel *,
						GtkTreeIter *, gpointer);
typedef struct _GtkEntryCompletionPrivate GtkEntryCompletionPrivate;
typedef struct _GtkEntryCompletion {
    GObject parent_instance;
    GtkEntryCompletionPrivate *priv;
} GtkEntryCompletion;
typedef struct _GtkClipboard GtkClipboard;
typedef struct _GtkTreeModelFilterPrivate GtkTreeModelFilterPrivate;
typedef struct _GtkTreeModelFilter {
    GObject parent;
    GtkTreeModelFilterPrivate *priv;
} GtkTreeModelFilter;
typedef struct _GtkTreeModelSort {
    GObject parent;
    gpointer root;
    gint stamp;
    guint child_flags;
    GtkTreeModel *child_model;
    gint zero_ref_count;
    GList *sort_list;
    gint sort_column_id;
    GtkSortType order;
    GtkTreeIterCompareFunc default_sort_func;
    gpointer default_sort_data;
    GtkDestroyNotify default_sort_destroy;
    guint changed_id;
    guint inserted_id;
    guint has_child_toggled_id;
    guint deleted_id;
    guint reordered_id;
} GtkTreeModelSort;
typedef void (*GtkTreeCellDataFunc) (GtkTreeViewColumn *,
				     GtkCellRenderer *, GtkTreeModel *,
				     GtkTreeIter *, gpointer);
typedef struct _GtkColorButtonPrivate GtkColorButtonPrivate;
typedef struct _GtkColorButton {
    GtkButton button;
    GtkColorButtonPrivate *priv;
} GtkColorButton;
typedef enum {
    GTK_FILE_CHOOSER_ACTION_OPEN = 0,
    GTK_FILE_CHOOSER_ACTION_SAVE = 1,
    GTK_FILE_CHOOSER_ACTION_SELECT_FOLDER = 2,
    GTK_FILE_CHOOSER_ACTION_CREATE_FOLDER = 3
} GtkFileChooserAction;
typedef void (*GtkCallback) (GtkWidget *, gpointer);
typedef struct _GtkHandleBox {
    GtkBin bin;
    GdkWindow *bin_window;
    GdkWindow *float_window;
    GtkShadowType shadow_type;
    guint handle_position:2;
    guint float_window_mapped:1;
    guint child_detached:1;
    guint in_drag:1;
    guint shrink_on_detach:1;
    int snap_edge:3;
    gint deskoff_x;
    gint deskoff_y;
    GtkAllocation attach_allocation;
    GtkAllocation float_allocation;
} GtkHandleBox;
typedef enum {
    GTK_SELECTION_NONE = 0,
    GTK_SELECTION_SINGLE = 1,
    GTK_SELECTION_BROWSE = 2,
    GTK_SELECTION_MULTIPLE = 3,
    GTK_SELECTION_EXTENDED = 3
} GtkSelectionMode;
typedef struct _GtkActionGroupPrivate GtkActionGroupPrivate;
typedef struct _GtkActionGroup {
    GObject parent;
    GtkActionGroupPrivate *private_data;
} GtkActionGroup;
typedef struct _GtkBindingSet {
    gchar *set_name;
    gint priority;
    GSList *widget_path_pspecs;
    GSList *widget_class_pspecs;
    GSList *class_branch_pspecs;
    GtkBindingEntry *entries;
    GtkBindingEntry *current;
    guint parsed:1;
} GtkBindingSet;
typedef struct _GtkBindingEntry {
    guint keyval;
    GdkModifierType modifiers;
    GtkBindingSet *binding_set;
    guint destroyed:1;
    guint in_emission:1;
    GtkBindingEntry *set_next;
    GtkBindingEntry *hash_next;
    GtkBindingSignal *signals;
} GtkBindingEntry;
typedef struct _GtkBindingSignal {
    GtkBindingSignal *next;
    gchar *signal_name;
    guint n_args;
    GtkBindingArg *args;
} GtkBindingSignal;
typedef struct _GtkBindingArg {
    GType arg_type;
    union {
	glong long_data;
	gdouble double_data;
	gchar *string_data;
    } d;
} GtkBindingArg;
typedef struct _GtkScrolledWindow {
    GtkBin container;
    GtkWidget *hscrollbar;
    GtkWidget *vscrollbar;
    guint hscrollbar_policy:2;
    guint vscrollbar_policy:2;
    guint hscrollbar_visible:1;
    guint vscrollbar_visible:1;
    guint window_placement:2;
    guint focus_out:1;
    guint16 shadow_type;
} GtkScrolledWindow;
typedef enum {
    GTK_CORNER_TOP_LEFT = 0,
    GTK_CORNER_BOTTOM_LEFT = 1,
    GTK_CORNER_TOP_RIGHT = 2,
    GTK_CORNER_BOTTOM_RIGHT = 3
} GtkCornerType;
typedef struct _GtkFrame {
    GtkBin bin;
    GtkWidget *label_widget;
    gint16 shadow_type;
    gfloat label_xalign;
    gfloat label_yalign;
    GtkAllocation child_allocation;
} GtkFrame;
typedef struct _GtkTextChildAnchor {
    GObject parent_instance;
    gpointer segment;
} GtkTextChildAnchor;
typedef struct _GtkSeparatorToolItemPrivate GtkSeparatorToolItemPrivate;
typedef struct _GtkSeparatorToolItem {
    GtkToolItem parent;
    GtkSeparatorToolItemPrivate *priv;
} GtkSeparatorToolItem;
typedef struct _GtkTreeSelection {
    GObject parent;
    GtkTreeView *tree_view;
    GtkSelectionMode type;
    GtkTreeSelectionFunc user_func;
    gpointer user_data;
    GtkDestroyNotify destroy;
} GtkTreeSelection;
typedef gboolean(*GtkTreeSelectionFunc) (GtkTreeSelection *,
					 GtkTreeModel *, GtkTreePath *,
					 gboolean, gpointer);
typedef struct _GtkExpanderPrivate GtkExpanderPrivate;
typedef struct _GtkExpander {
    GtkBin bin;
    GtkExpanderPrivate *priv;
} GtkExpander;
typedef enum {
    GTK_POS_LEFT = 0,
    GTK_POS_RIGHT = 1,
    GTK_POS_TOP = 2,
    GTK_POS_BOTTOM = 3
} GtkPositionType;
typedef enum {
    GTK_UI_MANAGER_AUTO = 0,
    GTK_UI_MANAGER_MENUBAR = 1,
    GTK_UI_MANAGER_MENU = 2,
    GTK_UI_MANAGER_TOOLBAR = 4,
    GTK_UI_MANAGER_PLACEHOLDER = 8,
    GTK_UI_MANAGER_POPUP = 16,
    GTK_UI_MANAGER_MENUITEM = 32,
    GTK_UI_MANAGER_TOOLITEM = 64,
    GTK_UI_MANAGER_SEPARATOR = 128,
    GTK_UI_MANAGER_ACCELERATOR = 256
} GtkUIManagerItemType;
typedef struct _GtkFontSelectionDialog {
    GtkDialog parent_instance;
    GtkWidget *fontsel;
    GtkWidget *main_vbox;
    GtkWidget *action_area;
    GtkWidget *ok_button;
    GtkWidget *apply_button;
    GtkWidget *cancel_button;
    gint dialog_width;
    gboolean auto_resize;
} GtkFontSelectionDialog;
typedef struct _GtkPanedPrivate GtkPanedPrivate;
typedef struct _GtkPaned {
    GtkContainer container;
    GtkWidget *child1;
    GtkWidget *child2;
    GdkWindow *handle;
    GdkGC *xor_gc;
    GdkCursorType cursor_type;
    GdkRectangle handle_pos;
    gint child1_size;
    gint last_allocation;
    gint min_position;
    gint max_position;
    guint position_set:1;
    guint in_drag:1;
    guint child1_shrink:1;
    guint child1_resize:1;
    guint child2_shrink:1;
    guint child2_resize:1;
    guint orientation:1;
    guint in_recursion:1;
    guint handle_prelit:1;
    GtkWidget *last_child1_focus;
    GtkWidget *last_child2_focus;
    GtkPanedPrivate *priv;
    gint drag_pos;
    gint original_position;
} GtkPaned;
typedef struct _GtkViewport {
    GtkBin bin;
    GtkShadowType shadow_type;
    GdkWindow *view_window;
    GdkWindow *bin_window;
    GtkAdjustment *hadjustment;
    GtkAdjustment *vadjustment;
} GtkViewport;
typedef struct _GtkScale {
    GtkRange range;
    gint digits;
    guint draw_value:1;
    guint value_pos:2;
} GtkScale;
typedef struct _GtkListStore {
    GObject parent;
    gint stamp;
    gpointer seq;
    gpointer _gtk_reserved1;
    GList *sort_list;
    gint n_columns;
    gint sort_column_id;
    GtkSortType order;
    GType *column_headers;
    gint length;
    GtkTreeIterCompareFunc default_sort_func;
    gpointer default_sort_data;
    GtkDestroyNotify default_sort_destroy;
    guint columns_dirty:1;
} GtkListStore;
typedef struct _GtkEditable GtkEditable;
typedef void (*GtkClipboardGetFunc) (GtkClipboard *, GtkSelectionData *,
				     guint, gpointer);
typedef void (*GtkClipboardClearFunc) (GtkClipboard *, gpointer);
typedef struct _GtkRadioActionEntry {
    const gchar *name;
    const gchar *stock_id;
    const gchar *label;
    const gchar *accelerator;
    const gchar *tooltip;
    gint value;
} GtkRadioActionEntry;
typedef gboolean(*GtkTreeViewColumnDropFunc) (GtkTreeView *,
					      GtkTreeViewColumn *,
					      GtkTreeViewColumn *,
					      GtkTreeViewColumn *,
					      gpointer);
typedef struct _GtkEventBox {
    GtkBin bin;
} GtkEventBox;
typedef struct _GtkTreeDragDest GtkTreeDragDest;
typedef struct _GtkToggleActionEntry {
    const gchar *name;
    const gchar *stock_id;
    const gchar *label;
    const gchar *accelerator;
    const gchar *tooltip;
    GCallback callback;
    gboolean is_active;
} GtkToggleActionEntry;
typedef struct _GtkAccelLabel {
    GtkLabel label;
    guint gtk_reserved;
    guint accel_padding;
    GtkWidget *accel_widget;
    GClosure *accel_closure;
    GtkAccelGroup *accel_group;
    gchar *accel_string;
    guint16 accel_string_width;
} GtkAccelLabel;
typedef struct _GtkImageMenuItem {
    GtkMenuItem menu_item;
    GtkWidget *image;
} GtkImageMenuItem;
typedef struct _GtkPlug {
    GtkWindow window;
    GdkWindow *socket_window;
    GtkWidget *modality_window;
    GtkWindowGroup *modality_group;
    GHashTable *grabbed_keys;
    guint same_app:1;
} GtkPlug;
typedef struct _GtkFileChooserButtonPrivate GtkFileChooserButtonPrivate;
typedef struct _GtkFileChooserButton {
    GtkHBox parent;
    GtkFileChooserButtonPrivate *priv;
} GtkFileChooserButton;
typedef struct _GtkStockItem {
    gchar *stock_id;
    gchar *label;
    GdkModifierType modifier;
    guint keyval;
    gchar *translation_domain;
} GtkStockItem;
typedef gchar *(*GtkTranslateFunc) (const gchar *, gpointer);
typedef enum {
    GTK_TOOLBAR_ICONS = 0,
    GTK_TOOLBAR_TEXT = 1,
    GTK_TOOLBAR_BOTH = 2,
    GTK_TOOLBAR_BOTH_HORIZ = 3
} GtkToolbarStyle;
typedef struct _GtkToolbar {
    GtkContainer container;
    gint num_children;
    GList *children;
    GtkOrientation orientation;
    GtkToolbarStyle style;
    GtkIconSize icon_size;
    GtkTooltips *tooltips;
    gint button_maxw;
    gint button_maxh;
    guint style_set_connection;
    guint icon_size_connection;
    guint style_set:1;
    guint icon_size_set:1;
} GtkToolbar;
typedef void (*GtkCellLayoutDataFunc) (GtkCellLayout *, GtkCellRenderer *,
				       GtkTreeModel *, GtkTreeIter *,
				       gpointer);
typedef struct _GtkCellRendererToggle {
    GtkCellRenderer parent;
    guint active:1;
    guint activatable:1;
    guint radio:1;
} GtkCellRendererToggle;
typedef enum {
    GTK_RELIEF_NORMAL = 0,
    GTK_RELIEF_HALF = 1,
    GTK_RELIEF_NONE = 2
} GtkReliefStyle;
typedef void (*GtkClipboardImageReceivedFunc) (GtkClipboard *, GdkPixbuf *,
					       gpointer);
typedef enum {
    GTK_CELL_RENDERER_SELECTED = 1,
    GTK_CELL_RENDERER_PRELIT = 2,
    GTK_CELL_RENDERER_INSENSITIVE = 4,
    GTK_CELL_RENDERER_SORTED = 8,
    GTK_CELL_RENDERER_FOCUSED = 16
} GtkCellRendererState;
typedef struct _GtkActionEntry {
    const gchar *name;
    const gchar *stock_id;
    const gchar *label;
    const gchar *accelerator;
    const gchar *tooltip;
    GCallback callback;
} GtkActionEntry;
typedef struct _GtkCheckButton {
    GtkToggleButton toggle_button;
} GtkCheckButton;
typedef struct _GtkRadioButton {
    GtkCheckButton check_button;
    GSList *group;
} GtkRadioButton;
typedef struct _GtkAlignment {
    GtkBin bin;
    gfloat xalign;
    gfloat yalign;
    gfloat xscale;
    gfloat yscale;
} GtkAlignment;
typedef struct _GtkContainerClass {
    GtkWidgetClass parent_class;
    void (*add) (GtkContainer *, GtkWidget *);
    void (*remove) (GtkContainer *, GtkWidget *);
    void (*check_resize) (GtkContainer *);
    void (*forall) (GtkContainer *, gboolean, GtkCallback, gpointer);
    void (*set_focus_child) (GtkContainer *, GtkWidget *);
     GType(*child_type) (GtkContainer *);
    gchar *(*composite_name) (GtkContainer *, GtkWidget *);
    void (*set_child_property) (GtkContainer *, GtkWidget *, guint,
				const GValue *, GParamSpec *);
    void (*get_child_property) (GtkContainer *, GtkWidget *, guint,
				GValue *, GParamSpec *);
    void (*_gtk_reserved1) (void);
    void (*_gtk_reserved2) (void);
    void (*_gtk_reserved3) (void);
    void (*_gtk_reserved4) (void);
} GtkContainerClass;
typedef struct _GtkFontButtonPrivate GtkFontButtonPrivate;
typedef struct _GtkFontButton {
    GtkButton button;
    GtkFontButtonPrivate *priv;
} GtkFontButton;
typedef struct _GtkBorder {
    gint left;
    gint right;
    gint top;
    gint bottom;
} GtkBorder;
typedef struct _GtkMessageDialog {
    GtkDialog parent_instance;
    GtkWidget *image;
    GtkWidget *label;
} GtkMessageDialog;
typedef struct _GtkRulerMetric {
    gchar *metric_name;
    gchar *abbrev;
    gdouble pixels_per_unit;
    gdouble ruler_scale[10];
    gint subdivide[5];
} GtkRulerMetric;
typedef struct _GtkRuler {
    GtkWidget widget;
    GdkPixmap *backing_store;
    GdkGC *non_gr_exp_gc;
    GtkRulerMetric *metric;
    gint xsrc;
    gint ysrc;
    gint slider_size;
    gdouble lower;
    gdouble upper;
    gdouble position;
    gdouble max_size;
} GtkRuler;
typedef enum {
    GTK_ACCEL_VISIBLE = 1,
    GTK_ACCEL_LOCKED = 2,
    GTK_ACCEL_MASK = 7
} GtkAccelFlags;
typedef gboolean(*GtkTextCharPredicate) (gunichar, gpointer);
typedef struct _GtkMenuToolButtonPrivate GtkMenuToolButtonPrivate;
typedef struct _GtkMenuToolButton {
    GtkToolButton parent;
    GtkMenuToolButtonPrivate *priv;
} GtkMenuToolButton;
typedef struct _GtkToggleToolButtonPrivate GtkToggleToolButtonPrivate;
typedef struct _GtkToggleToolButton {
    GtkToolButton parent;
    GtkToggleToolButtonPrivate *priv;
} GtkToggleToolButton;
typedef struct _GtkRadioToolButton {
    GtkToggleToolButton parent;
} GtkRadioToolButton;
typedef struct _GtkSizeGroup {
    GObject parent_instance;
    GSList *widgets;
    guint8 mode;
    guint have_width:1;
    guint have_height:1;
    GtkRequisition requisition;
} GtkSizeGroup;
typedef enum {
    GTK_SIZE_GROUP_NONE = 0,
    GTK_SIZE_GROUP_HORIZONTAL = 1,
    GTK_SIZE_GROUP_VERTICAL = 2,
    GTK_SIZE_GROUP_BOTH = 3
} GtkSizeGroupMode;
typedef enum {
    GTK_DIALOG_MODAL = 1,
    GTK_DIALOG_DESTROY_WITH_PARENT = 2,
    GTK_DIALOG_NO_SEPARATOR = 4
} GtkDialogFlags;
typedef void (*GtkTreeSelectionForeachFunc) (GtkTreeModel *, GtkTreePath *,
					     GtkTreeIter *, gpointer);
typedef enum {
    GTK_ICON_LOOKUP_NO_SVG = 1,
    GTK_ICON_LOOKUP_FORCE_SVG = 2,
    GTK_ICON_LOOKUP_USE_BUILTIN = 4
} GtkIconLookupFlags;
typedef gboolean(*GtkTreeViewSearchEqualFunc) (GtkTreeModel *, gint,
					       const gchar *,
					       GtkTreeIter *, gpointer);
typedef enum {
    GTK_PIXELS = 0,
    GTK_INCHES = 1,
    GTK_CENTIMETERS = 2
} GtkMetricType;
typedef struct _GtkIMContextSimple {
    GtkIMContext object;
    GSList *tables;
    guint compose_buffer[8];
    gunichar tentative_match;
    gint tentative_match_len;
    guint in_hex_sequence:1;
} GtkIMContextSimple;
typedef void (*GtkClipboardTargetsReceivedFunc) (GtkClipboard *, GdkAtom *,
						 gint, gpointer);
typedef enum {
    GTK_EXPAND = 1,
    GTK_SHRINK = 2,
    GTK_FILL = 4
} GtkAttachOptions;
typedef struct _GtkFontSelection {
    GtkVBox parent_instance;
    GtkWidget *font_entry;
    GtkWidget *family_list;
    GtkWidget *font_style_entry;
    GtkWidget *face_list;
    GtkWidget *size_entry;
    GtkWidget *size_list;
    GtkWidget *pixels_button;
    GtkWidget *points_button;
    GtkWidget *filter_button;
    GtkWidget *preview_entry;
    PangoFontFamily *family;
    PangoFontFace *face;
    gint size;
    GdkFont *font;
} GtkFontSelection;
typedef void (*GtkClipboardTextReceivedFunc) (GtkClipboard *,
					      const gchar *, gpointer);
typedef gboolean(*GtkAccelGroupFindFunc) (GtkAccelKey *, GClosure *,
					  gpointer);
typedef void (*GtkTreeDestroyCountFunc) (GtkTreeView *, GtkTreePath *,
					 gint, gpointer);
typedef enum {
    GTK_TREE_VIEW_DROP_BEFORE = 0,
    GTK_TREE_VIEW_DROP_AFTER = 1,
    GTK_TREE_VIEW_DROP_INTO_OR_BEFORE = 2,
    GTK_TREE_VIEW_DROP_INTO_OR_AFTER = 3
} GtkTreeViewDropPosition;
typedef struct _GtkAspectFrame {
    GtkFrame frame;
    gfloat xalign;
    gfloat yalign;
    gfloat ratio;
    gboolean obey_child;
    GtkAllocation center_allocation;
} GtkAspectFrame;
typedef gboolean(*GtkFileFilterFunc) (const GtkFileFilterInfo *, gpointer);
typedef struct _GtkIMMulticontextPrivate GtkIMMulticontextPrivate;
typedef struct _GtkIMMulticontext {
    GtkIMContext object;
    GtkIMContext *slave;
    GtkIMMulticontextPrivate *priv;
    const gchar *context_id;
} GtkIMMulticontext;
typedef enum {
    GTK_MESSAGE_INFO = 0,
    GTK_MESSAGE_WARNING = 1,
    GTK_MESSAGE_QUESTION = 2,
    GTK_MESSAGE_ERROR = 3
} GtkMessageType;
typedef enum {
    GTK_BUTTONS_NONE = 0,
    GTK_BUTTONS_OK = 1,
    GTK_BUTTONS_CLOSE = 2,
    GTK_BUTTONS_CANCEL = 3,
    GTK_BUTTONS_YES_NO = 4,
    GTK_BUTTONS_OK_CANCEL = 5
} GtkButtonsType;
typedef void (*GtkAccelMapForeach) (gpointer, const gchar *, guint,
				    GdkModifierType, gboolean);
typedef enum {
    GTK_POLICY_ALWAYS = 0,
    GTK_POLICY_AUTOMATIC = 1,
    GTK_POLICY_NEVER = 2
} GtkPolicyType;
typedef enum {
    GTK_RESIZE_PARENT = 0,
    GTK_RESIZE_QUEUE = 1,
    GTK_RESIZE_IMMEDIATE = 2
} GtkResizeMode;
typedef void (*GtkColorSelectionChangePaletteWithScreenFunc) (GdkScreen *,
							      const
							      GdkColor *,
							      gint);
typedef void (*GtkClipboardReceivedFunc) (GtkClipboard *,
					  GtkSelectionData *, gpointer);
typedef void (*GtkTreeViewMappingFunc) (GtkTreeView *, GtkTreePath *,
					gpointer);
typedef gboolean(*GtkTreeModelFilterVisibleFunc) (GtkTreeModel *,
						  GtkTreeIter *, gpointer);
typedef enum {
    GTK_TEXT_SEARCH_VISIBLE_ONLY = 1,
    GTK_TEXT_SEARCH_TEXT_ONLY = 2
} GtkTextSearchFlags;
typedef struct _GtkFixed {
    GtkContainer container;
    GList *children;
} GtkFixed;
typedef enum {
    GTK_DEST_DEFAULT_MOTION = 1,
    GTK_DEST_DEFAULT_HIGHLIGHT = 2,
    GTK_DEST_DEFAULT_DROP = 4,
    GTK_DEST_DEFAULT_ALL = 7
} GtkDestDefaults;
typedef gint(*GtkKeySnoopFunc) (GtkWidget *, GdkEventKey *, gpointer);
typedef enum {
    GTK_SPIN_STEP_FORWARD = 0,
    GTK_SPIN_STEP_BACKWARD = 1,
    GTK_SPIN_PAGE_FORWARD = 2,
    GTK_SPIN_PAGE_BACKWARD = 3,
    GTK_SPIN_HOME = 4,
    GTK_SPIN_END = 5,
    GTK_SPIN_USER_DEFINED = 6
} GtkSpinType;
typedef enum {
    GTK_WINDOW_TOPLEVEL = 0,
    GTK_WINDOW_POPUP = 1
} GtkWindowType;
typedef void (*GtkMenuDetachFunc) (GtkWidget *, GtkMenu *);
typedef struct _GtkInvisible {
    GtkWidget widget;
    gboolean has_user_ref_count;
    GdkScreen *screen;
} GtkInvisible;
typedef enum {
    GTK_WIN_POS_NONE = 0,
    GTK_WIN_POS_CENTER = 1,
    GTK_WIN_POS_MOUSE = 2,
    GTK_WIN_POS_CENTER_ALWAYS = 3,
    GTK_WIN_POS_CENTER_ON_PARENT = 4
} GtkWindowPosition;
typedef void (*GtkTextTagTableForeach) (GtkTextTag *, gpointer);
typedef gboolean(*GtkEntryCompletionMatchFunc) (GtkEntryCompletion *,
						const gchar *,
						GtkTreeIter *, gpointer);
typedef struct _GtkAccessible {
    AtkObject parent;
    GtkWidget *widget;
} GtkAccessible;
typedef enum {
    GTK_EXPANDER_COLLAPSED = 0,
    GTK_EXPANDER_SEMI_COLLAPSED = 1,
    GTK_EXPANDER_SEMI_EXPANDED = 2,
    GTK_EXPANDER_EXPANDED = 3
} GtkExpanderStyle;
typedef enum {
    GTK_PATH_PRIO_LOWEST = 0,
    GTK_PATH_PRIO_GTK = 4,
    GTK_PATH_PRIO_APPLICATION = 8,
    GTK_PATH_PRIO_THEME = 10,
    GTK_PATH_PRIO_RC = 12,
    GTK_PATH_PRIO_HIGHEST = 15
} GtkPathPriorityType;
typedef struct _GtkArrow {
    GtkMisc misc;
    gint16 arrow_type;
    gint16 shadow_type;
} GtkArrow;
typedef void (*GtkIconViewForeachFunc) (GtkIconView *, GtkTreePath *,
					gpointer);
typedef void (*GtkTreeModelFilterModifyFunc) (GtkTreeModel *,
					      GtkTreeIter *, GValue *,
					      gint, gpointer);
typedef struct _GtkCellRendererText {
    GtkCellRenderer parent;
    gchar *text;
    PangoFontDescription *font;
    gdouble font_scale;
    PangoColor foreground;
    PangoColor background;
    PangoAttrList *extra_attrs;
    PangoUnderline underline_style;
    gint rise;
    gint fixed_height_rows;
    guint strikethrough:1;
    guint editable:1;
    guint scale_set:1;
    guint foreground_set:1;
    guint background_set:1;
    guint underline_set:1;
    guint rise_set:1;
    guint strikethrough_set:1;
    guint editable_set:1;
    guint calc_fixed_height:1;
} GtkCellRendererText;
typedef gboolean(*GtkTreeModelForeachFunc) (GtkTreeModel *, GtkTreePath *,
					    GtkTreeIter *, gpointer);
typedef struct _GtkSettingsValue {
    gchar *origin;
    GValue value;
} GtkSettingsValue;
typedef enum {
    GTK_PATH_WIDGET = 0,
    GTK_PATH_WIDGET_CLASS = 1,
    GTK_PATH_CLASS = 2
} GtkPathType;
typedef struct _GtkAccelMap GtkAccelMap;
typedef struct _GtkBinClass {
    GtkContainerClass parent_class;
} GtkBinClass;
typedef struct _GtkWindowClass {
    GtkBinClass parent_class;
    void (*set_focus) (GtkWindow *, GtkWidget *);
     gboolean(*frame_event) (GtkWindow *, GdkEvent *);
    void (*activate_focus) (GtkWindow *);
    void (*activate_default) (GtkWindow *);
    void (*move_focus) (GtkWindow *, GtkDirectionType);
    void (*keys_changed) (GtkWindow *);
    void (*_gtk_reserved1) (void);
    void (*_gtk_reserved2) (void);
    void (*_gtk_reserved3) (void);
    void (*_gtk_reserved4) (void);
} GtkWindowClass;
typedef enum {
    GTK_SCROLL_NONE = 0,
    GTK_SCROLL_JUMP = 1,
    GTK_SCROLL_STEP_BACKWARD = 2,
    GTK_SCROLL_STEP_FORWARD = 3,
    GTK_SCROLL_PAGE_BACKWARD = 4,
    GTK_SCROLL_PAGE_FORWARD = 5,
    GTK_SCROLL_STEP_UP = 6,
    GTK_SCROLL_STEP_DOWN = 7,
    GTK_SCROLL_PAGE_UP = 8,
    GTK_SCROLL_PAGE_DOWN = 9,
    GTK_SCROLL_STEP_LEFT = 10,
    GTK_SCROLL_STEP_RIGHT = 11,
    GTK_SCROLL_PAGE_LEFT = 12,
    GTK_SCROLL_PAGE_RIGHT = 13,
    GTK_SCROLL_START = 14,
    GTK_SCROLL_END = 15
} GtkScrollType;
typedef struct _GtkRangeClass {
    GtkWidgetClass parent_class;
    gchar *slider_detail;
    gchar *stepper_detail;
    void (*value_changed) (GtkRange *);
    void (*adjust_bounds) (GtkRange *, gdouble);
    void (*move_slider) (GtkRange *, GtkScrollType);
    void (*get_range_border) (GtkRange *, GtkBorder *);
     gboolean(*change_value) (GtkRange *, GtkScrollType, gdouble);
    void (*_gtk_reserved1) (void);
    void (*_gtk_reserved2) (void);
    void (*_gtk_reserved3) (void);
} GtkRangeClass;
typedef struct _GtkScaleClass {
    GtkRangeClass parent_class;
    gchar *(*format_value) (GtkScale *, gdouble);
    void (*draw_value) (GtkScale *);
    void (*get_layout_offsets) (GtkScale *, gint *, gint *);
    void (*_gtk_reserved2) (void);
    void (*_gtk_reserved3) (void);
    void (*_gtk_reserved4) (void);
} GtkScaleClass;
typedef struct _GtkBoxClass {
    GtkContainerClass parent_class;
} GtkBoxClass;
typedef struct _GtkMiscClass {
    GtkWidgetClass parent_class;
} GtkMiscClass;
typedef struct _GtkHRuler {
    GtkRuler ruler;
} GtkHRuler;
typedef struct _GtkHBoxClass {
    GtkBoxClass parent_class;
} GtkHBoxClass;
typedef struct _GtkPanedClass {
    GtkContainerClass parent_class;
     gboolean(*cycle_child_focus) (GtkPaned *, gboolean);
     gboolean(*toggle_handle_focus) (GtkPaned *);
     gboolean(*move_handle) (GtkPaned *, GtkScrollType);
     gboolean(*cycle_handle_focus) (GtkPaned *, gboolean);
     gboolean(*accept_position) (GtkPaned *);
     gboolean(*cancel_position) (GtkPaned *);
    void (*_gtk_reserved1) (void);
    void (*_gtk_reserved2) (void);
    void (*_gtk_reserved3) (void);
    void (*_gtk_reserved4) (void);
} GtkPanedClass;
typedef struct _GtkHPanedClass {
    GtkPanedClass parent_class;
} GtkHPanedClass;
typedef struct _GtkSizeGroupClass {
    GObjectClass parent_class;
    void (*_gtk_reserved1) (void);
    void (*_gtk_reserved2) (void);
    void (*_gtk_reserved3) (void);
    void (*_gtk_reserved4) (void);
} GtkSizeGroupClass;
typedef struct _GtkViewportClass {
    GtkBinClass parent_class;
    void (*set_scroll_adjustments) (GtkViewport *, GtkAdjustment *,
				    GtkAdjustment *);
} GtkViewportClass;
typedef enum {
    GTK_MOVEMENT_LOGICAL_POSITIONS = 0,
    GTK_MOVEMENT_VISUAL_POSITIONS = 1,
    GTK_MOVEMENT_WORDS = 2,
    GTK_MOVEMENT_DISPLAY_LINES = 3,
    GTK_MOVEMENT_DISPLAY_LINE_ENDS = 4,
    GTK_MOVEMENT_PARAGRAPHS = 5,
    GTK_MOVEMENT_PARAGRAPH_ENDS = 6,
    GTK_MOVEMENT_PAGES = 7,
    GTK_MOVEMENT_BUFFER_ENDS = 8,
    GTK_MOVEMENT_HORIZONTAL_PAGES = 9
} GtkMovementStep;
typedef struct _GtkEditableClass {
    GTypeInterface base_iface;
    void (*insert_text) (GtkEditable *, const gchar *, gint, gint *);
    void (*delete_text) (GtkEditable *, gint, gint);
    void (*changed) (GtkEditable *);
    void (*do_insert_text) (GtkEditable *, const gchar *, gint, gint *);
    void (*do_delete_text) (GtkEditable *, gint, gint);
    gchar *(*get_chars) (GtkEditable *, gint, gint);
    void (*set_selection_bounds) (GtkEditable *, gint, gint);
     gboolean(*get_selection_bounds) (GtkEditable *, gint *, gint *);
    void (*set_position) (GtkEditable *, gint);
     gint(*get_position) (GtkEditable *);
} GtkEditableClass;
typedef enum {
    GTK_NOTEBOOK_TAB_FIRST = 0,
    GTK_NOTEBOOK_TAB_LAST = 1
} GtkNotebookTab;
typedef struct _GtkDialogClass {
    GtkWindowClass parent_class;
    void (*response) (GtkDialog *, gint);
    void (*close) (GtkDialog *);
    void (*_gtk_reserved1) (void);
    void (*_gtk_reserved2) (void);
    void (*_gtk_reserved3) (void);
    void (*_gtk_reserved4) (void);
} GtkDialogClass;
typedef struct _GtkCellRendererPixbuf {
    GtkCellRenderer parent;
    GdkPixbuf *pixbuf;
    GdkPixbuf *pixbuf_expander_open;
    GdkPixbuf *pixbuf_expander_closed;
} GtkCellRendererPixbuf;
typedef struct _GtkTreeViewColumnClass {
    GtkObjectClass parent_class;
    void (*clicked) (GtkTreeViewColumn *);
    void (*_gtk_reserved1) (void);
    void (*_gtk_reserved2) (void);
    void (*_gtk_reserved3) (void);
    void (*_gtk_reserved4) (void);
} GtkTreeViewColumnClass;
typedef struct _GtkRulerClass {
    GtkWidgetClass parent_class;
    void (*draw_ticks) (GtkRuler *);
    void (*draw_pos) (GtkRuler *);
    void (*_gtk_reserved1) (void);
    void (*_gtk_reserved2) (void);
    void (*_gtk_reserved3) (void);
    void (*_gtk_reserved4) (void);
} GtkRulerClass;
typedef struct _GtkHRulerClass {
    GtkRulerClass parent_class;
} GtkHRulerClass;
typedef struct _GtkAccelMapClass GtkAccelMapClass;
typedef struct _GtkInvisibleClass {
    GtkWidgetClass parent_class;
    void (*_gtk_reserved1) (void);
    void (*_gtk_reserved2) (void);
    void (*_gtk_reserved3) (void);
    void (*_gtk_reserved4) (void);
} GtkInvisibleClass;
typedef struct _GtkVRulerClass {
    GtkRulerClass parent_class;
} GtkVRulerClass;
typedef struct _GtkToolItemClass {
    GtkBinClass parent_class;
     gboolean(*create_menu_proxy) (GtkToolItem *);
    void (*toolbar_reconfigured) (GtkToolItem *);
     gboolean(*set_tooltip) (GtkToolItem *, GtkTooltips *, const gchar *,
			     const gchar *);
    void (*_gtk_reserved1) (void);
    void (*_gtk_reserved2) (void);
    void (*_gtk_reserved3) (void);
    void (*_gtk_reserved4) (void);
} GtkToolItemClass;
typedef struct _GtkWindowGroupClass {
    GObjectClass parent_class;
    void (*_gtk_reserved1) (void);
    void (*_gtk_reserved2) (void);
    void (*_gtk_reserved3) (void);
    void (*_gtk_reserved4) (void);
} GtkWindowGroupClass;
typedef struct _GtkWidgetAuxInfo {
    gint x;
    gint y;
    gint width;
    gint height;
    guint x_set:1;
    guint y_set:1;
} GtkWidgetAuxInfo;
typedef struct _GtkItemClass {
    GtkBinClass parent_class;
    void (*select) (GtkItem *);
    void (*deselect) (GtkItem *);
    void (*toggle) (GtkItem *);
    void (*_gtk_reserved1) (void);
    void (*_gtk_reserved2) (void);
    void (*_gtk_reserved3) (void);
    void (*_gtk_reserved4) (void);
} GtkItemClass;
typedef struct _GtkMenuItemClass {
    GtkItemClass parent_class;
    guint hide_on_activate:1;
    void (*activate) (GtkMenuItem *);
    void (*activate_item) (GtkMenuItem *);
    void (*toggle_size_request) (GtkMenuItem *, gint *);
    void (*toggle_size_allocate) (GtkMenuItem *, gint);
    void (*_gtk_reserved1) (void);
    void (*_gtk_reserved2) (void);
    void (*_gtk_reserved3) (void);
    void (*_gtk_reserved4) (void);
} GtkMenuItemClass;
typedef struct _GtkCheckMenuItemClass {
    GtkMenuItemClass parent_class;
    void (*toggled) (GtkCheckMenuItem *);
    void (*draw_indicator) (GtkCheckMenuItem *, GdkRectangle *);
    void (*_gtk_reserved1) (void);
    void (*_gtk_reserved2) (void);
    void (*_gtk_reserved3) (void);
    void (*_gtk_reserved4) (void);
} GtkCheckMenuItemClass;
typedef struct _GtkRcProperty {
    GQuark type_name;
    GQuark property_name;
    gchar *origin;
    GValue value;
} GtkRcProperty;
typedef struct _GtkFontSelectionDialogClass {
    GtkDialogClass parent_class;
    void (*_gtk_reserved1) (void);
    void (*_gtk_reserved2) (void);
    void (*_gtk_reserved3) (void);
    void (*_gtk_reserved4) (void);
} GtkFontSelectionDialogClass;
typedef struct _GtkFileChooserDialogPrivate GtkFileChooserDialogPrivate;
typedef struct _GtkFileChooserDialog {
    GtkDialog parent_instance;
    GtkFileChooserDialogPrivate *priv;
} GtkFileChooserDialog;
typedef struct _GtkActionClass {
    GObjectClass parent_class;
    void (*activate) (GtkAction *);
    GType menu_item_type;
    GType toolbar_item_type;
    GtkWidget *(*create_menu_item) (GtkAction *);
    GtkWidget *(*create_tool_item) (GtkAction *);
    void (*connect_proxy) (GtkAction *, GtkWidget *);
    void (*disconnect_proxy) (GtkAction *, GtkWidget *);
    void (*_gtk_reserved1) (void);
    void (*_gtk_reserved2) (void);
    void (*_gtk_reserved3) (void);
    void (*_gtk_reserved4) (void);
} GtkActionClass;
typedef struct _GtkToggleActionClass {
    GtkActionClass parent_class;
    void (*toggled) (GtkToggleAction *);
    void (*_gtk_reserved1) (void);
    void (*_gtk_reserved2) (void);
    void (*_gtk_reserved3) (void);
    void (*_gtk_reserved4) (void);
} GtkToggleActionClass;
typedef struct _GtkVBoxClass {
    GtkBoxClass parent_class;
} GtkVBoxClass;
typedef struct _GtkButtonBoxClass {
    GtkBoxClass parent_class;
} GtkButtonBoxClass;
typedef struct _GtkHButtonBoxClass {
    GtkButtonBoxClass parent_class;
} GtkHButtonBoxClass;
typedef struct _GtkThemeEngine GtkThemeEngine;
typedef struct _GtkTreeStoreClass {
    GObjectClass parent_class;
    void (*_gtk_reserved1) (void);
    void (*_gtk_reserved2) (void);
    void (*_gtk_reserved3) (void);
    void (*_gtk_reserved4) (void);
} GtkTreeStoreClass;
typedef struct _GtkBoxChild {
    GtkWidget *widget;
    guint16 padding;
    guint expand:1;
    guint fill:1;
    guint pack:1;
    guint is_secondary:1;
} GtkBoxChild;
typedef struct _GtkHButtonBox {
    GtkButtonBox button_box;
} GtkHButtonBox;
typedef struct _GtkAccelGroupClass {
    GObjectClass parent_class;
    void (*accel_changed) (GtkAccelGroup *, guint, GdkModifierType,
			   GClosure *);
    void (*_gtk_reserved1) (void);
    void (*_gtk_reserved2) (void);
    void (*_gtk_reserved3) (void);
    void (*_gtk_reserved4) (void);
} GtkAccelGroupClass;
typedef struct _GtkSeparator {
    GtkWidget widget;
} GtkSeparator;
typedef struct _GtkButtonClass {
    GtkBinClass parent_class;
    void (*pressed) (GtkButton *);
    void (*released) (GtkButton *);
    void (*clicked) (GtkButton *);
    void (*enter) (GtkButton *);
    void (*leave) (GtkButton *);
    void (*activate) (GtkButton *);
    void (*_gtk_reserved1) (void);
    void (*_gtk_reserved2) (void);
    void (*_gtk_reserved3) (void);
    void (*_gtk_reserved4) (void);
} GtkButtonClass;
typedef void (*GtkWindowKeysForeachFunc) (GtkWindow *, guint,
					  GdkModifierType, gboolean,
					  gpointer);
typedef struct _GtkIconFactoryClass {
    GObjectClass parent_class;
    void (*_gtk_reserved1) (void);
    void (*_gtk_reserved2) (void);
    void (*_gtk_reserved3) (void);
    void (*_gtk_reserved4) (void);
} GtkIconFactoryClass;
typedef struct _GtkTreeSelectionClass {
    GObjectClass parent_class;
    void (*changed) (GtkTreeSelection *);
    void (*_gtk_reserved1) (void);
    void (*_gtk_reserved2) (void);
    void (*_gtk_reserved3) (void);
    void (*_gtk_reserved4) (void);
} GtkTreeSelectionClass;
typedef enum {
    GTK_MENU_DIR_PARENT = 0,
    GTK_MENU_DIR_CHILD = 1,
    GTK_MENU_DIR_NEXT = 2,
    GTK_MENU_DIR_PREV = 3
} GtkMenuDirectionType;
typedef struct _GtkMenuShellClass {
    GtkContainerClass parent_class;
    guint submenu_placement:1;
    void (*deactivate) (GtkMenuShell *);
    void (*selection_done) (GtkMenuShell *);
    void (*move_current) (GtkMenuShell *, GtkMenuDirectionType);
    void (*activate_current) (GtkMenuShell *, gboolean);
    void (*cancel) (GtkMenuShell *);
    void (*select_item) (GtkMenuShell *, GtkWidget *);
    void (*insert) (GtkMenuShell *, GtkWidget *, gint);
     gint(*get_popup_delay) (GtkMenuShell *);
    void (*_gtk_reserved1) (void);
    void (*_gtk_reserved2) (void);
    void (*_gtk_reserved3) (void);
} GtkMenuShellClass;
typedef struct _GtkTreeDragSourceIface {
    GTypeInterface g_iface;
     gboolean(*row_draggable) (GtkTreeDragSource *, GtkTreePath *);
     gboolean(*drag_data_get) (GtkTreeDragSource *, GtkTreePath *,
			       GtkSelectionData *);
     gboolean(*drag_data_delete) (GtkTreeDragSource *, GtkTreePath *);
} GtkTreeDragSourceIface;
typedef struct _GtkLabelClass {
    GtkMiscClass parent_class;
    void (*move_cursor) (GtkLabel *, GtkMovementStep, gint, gboolean);
    void (*copy_clipboard) (GtkLabel *);
    void (*populate_popup) (GtkLabel *, GtkMenu *);
    void (*_gtk_reserved1) (void);
    void (*_gtk_reserved2) (void);
    void (*_gtk_reserved3) (void);
    void (*_gtk_reserved4) (void);
} GtkLabelClass;
typedef struct _GtkScrollbar {
    GtkRange range;
} GtkScrollbar;
typedef struct _GtkWidgetShapeInfo {
    gint16 offset_x;
    gint16 offset_y;
    GdkBitmap *shape_mask;
} GtkWidgetShapeInfo;
typedef struct _GtkActionGroupClass {
    GObjectClass parent_class;
    GtkAction *(*get_action) (GtkActionGroup *, const gchar *);
    void (*_gtk_reserved1) (void);
    void (*_gtk_reserved2) (void);
    void (*_gtk_reserved3) (void);
    void (*_gtk_reserved4) (void);
} GtkActionGroupClass;
typedef struct _GtkSettingsClass {
    GObjectClass parent_class;
} GtkSettingsClass;
typedef struct _GtkIMContextClass {
    GtkObjectClass parent_class;
    void (*preedit_start) (GtkIMContext *);
    void (*preedit_end) (GtkIMContext *);
    void (*preedit_changed) (GtkIMContext *);
    void (*commit) (GtkIMContext *, const gchar *);
     gboolean(*retrieve_surrounding) (GtkIMContext *);
     gboolean(*delete_surrounding) (GtkIMContext *, gint, gint);
    void (*set_client_window) (GtkIMContext *, GdkWindow *);
    void (*get_preedit_string) (GtkIMContext *, gchar * *,
				PangoAttrList * *, gint *);
     gboolean(*filter_keypress) (GtkIMContext *, GdkEventKey *);
    void (*focus_in) (GtkIMContext *);
    void (*focus_out) (GtkIMContext *);
    void (*reset) (GtkIMContext *);
    void (*set_cursor_location) (GtkIMContext *, GdkRectangle *);
    void (*set_use_preedit) (GtkIMContext *, gboolean);
    void (*set_surrounding) (GtkIMContext *, const gchar *, gint, gint);
     gboolean(*get_surrounding) (GtkIMContext *, gchar * *, gint *);
    void (*_gtk_reserved1) (void);
    void (*_gtk_reserved2) (void);
    void (*_gtk_reserved3) (void);
    void (*_gtk_reserved4) (void);
    void (*_gtk_reserved5) (void);
    void (*_gtk_reserved6) (void);
} GtkIMContextClass;
typedef struct _GtkCellRendererClass {
    GtkObjectClass parent_class;
    void (*get_size) (GtkCellRenderer *, GtkWidget *, GdkRectangle *,
		      gint *, gint *, gint *, gint *);
    void (*render) (GtkCellRenderer *, GdkDrawable *, GtkWidget *,
		    GdkRectangle *, GdkRectangle *, GdkRectangle *,
		    GtkCellRendererState);
     gboolean(*activate) (GtkCellRenderer *, GdkEvent *, GtkWidget *,
			  const gchar *, GdkRectangle *, GdkRectangle *,
			  GtkCellRendererState);
    GtkCellEditable *(*start_editing) (GtkCellRenderer *, GdkEvent *,
				       GtkWidget *, const gchar *,
				       GdkRectangle *, GdkRectangle *,
				       GtkCellRendererState);
    void (*editing_canceled) (GtkCellRenderer *);
    void (*editing_started) (GtkCellRenderer *, GtkCellEditable *,
			     const gchar *);
    void (*_gtk_reserved1) (void);
    void (*_gtk_reserved2) (void);
} GtkCellRendererClass;
typedef struct _GtkToolButtonClass {
    GtkToolItemClass parent_class;
    GType button_type;
    void (*clicked) (GtkToolButton *);
    void (*_gtk_reserved1) (void);
    void (*_gtk_reserved2) (void);
    void (*_gtk_reserved3) (void);
    void (*_gtk_reserved4) (void);
} GtkToolButtonClass;
typedef struct _GtkMenuToolButtonClass {
    GtkToolButtonClass parent_class;
    void (*show_menu) (GtkMenuToolButton *);
    void (*_gtk_reserved1) (void);
    void (*_gtk_reserved2) (void);
    void (*_gtk_reserved3) (void);
    void (*_gtk_reserved4) (void);
} GtkMenuToolButtonClass;
typedef struct _GtkVSeparator {
    GtkSeparator separator;
} GtkVSeparator;
typedef struct _GtkDrawingAreaClass {
    GtkWidgetClass parent_class;
    void (*_gtk_reserved1) (void);
    void (*_gtk_reserved2) (void);
    void (*_gtk_reserved3) (void);
    void (*_gtk_reserved4) (void);
} GtkDrawingAreaClass;
typedef struct _GtkTargetPair {
    GdkAtom target;
    guint flags;
    guint info;
} GtkTargetPair;
typedef struct _GtkCellViewClass {
    GtkWidgetClass parent_class;
} GtkCellViewClass;
typedef struct _GtkCellLayoutIface {
    GTypeInterface g_iface;
    void (*pack_start) (GtkCellLayout *, GtkCellRenderer *, gboolean);
    void (*pack_end) (GtkCellLayout *, GtkCellRenderer *, gboolean);
    void (*clear) (GtkCellLayout *);
    void (*add_attribute) (GtkCellLayout *, GtkCellRenderer *,
			   const gchar *, gint);
    void (*set_cell_data_func) (GtkCellLayout *, GtkCellRenderer *,
				GtkCellLayoutDataFunc, gpointer,
				GDestroyNotify);
    void (*clear_attributes) (GtkCellLayout *, GtkCellRenderer *);
    void (*reorder) (GtkCellLayout *, GtkCellRenderer *, gint);
} GtkCellLayoutIface;
typedef struct _GtkAlignmentPrivate GtkAlignmentPrivate;
typedef struct _GtkFixedClass {
    GtkContainerClass parent_class;
} GtkFixedClass;
typedef struct _GtkHScaleClass {
    GtkScaleClass parent_class;
} GtkHScaleClass;
typedef struct _GtkScrollbarClass {
    GtkRangeClass parent_class;
    void (*_gtk_reserved1) (void);
    void (*_gtk_reserved2) (void);
    void (*_gtk_reserved3) (void);
    void (*_gtk_reserved4) (void);
} GtkScrollbarClass;
typedef struct _GtkAccelLabelClass {
    GtkLabelClass parent_class;
    gchar *signal_quote1;
    gchar *signal_quote2;
    gchar *mod_name_shift;
    gchar *mod_name_control;
    gchar *mod_name_alt;
    gchar *mod_separator;
    gchar *accel_seperator;
    guint latin1_to_char:1;
    void (*_gtk_reserved1) (void);
    void (*_gtk_reserved2) (void);
    void (*_gtk_reserved3) (void);
    void (*_gtk_reserved4) (void);
} GtkAccelLabelClass;
typedef void (*GtkModuleDisplayInitFunc) (GdkDisplay *);
typedef struct _GtkTextBufferClass {
    GObjectClass parent_class;
    void (*insert_text) (GtkTextBuffer *, GtkTextIter *, const gchar *,
			 gint);
    void (*insert_pixbuf) (GtkTextBuffer *, GtkTextIter *, GdkPixbuf *);
    void (*insert_child_anchor) (GtkTextBuffer *, GtkTextIter *,
				 GtkTextChildAnchor *);
    void (*delete_range) (GtkTextBuffer *, GtkTextIter *, GtkTextIter *);
    void (*changed) (GtkTextBuffer *);
    void (*modified_changed) (GtkTextBuffer *);
    void (*mark_set) (GtkTextBuffer *, const GtkTextIter *, GtkTextMark *);
    void (*mark_deleted) (GtkTextBuffer *, GtkTextMark *);
    void (*apply_tag) (GtkTextBuffer *, GtkTextTag *, const GtkTextIter *,
		       const GtkTextIter *);
    void (*remove_tag) (GtkTextBuffer *, GtkTextTag *, const GtkTextIter *,
			const GtkTextIter *);
    void (*begin_user_action) (GtkTextBuffer *);
    void (*end_user_action) (GtkTextBuffer *);
    void (*_gtk_reserved1) (void);
    void (*_gtk_reserved2) (void);
    void (*_gtk_reserved3) (void);
    void (*_gtk_reserved4) (void);
    void (*_gtk_reserved5) (void);
    void (*_gtk_reserved6) (void);
} GtkTextBufferClass;
typedef struct _GtkVRuler {
    GtkRuler ruler;
} GtkVRuler;
typedef struct _GtkSocketClass {
    GtkContainerClass parent_class;
    void (*plug_added) (GtkSocket *);
     gboolean(*plug_removed) (GtkSocket *);
    void (*_gtk_reserved1) (void);
    void (*_gtk_reserved2) (void);
    void (*_gtk_reserved3) (void);
    void (*_gtk_reserved4) (void);
} GtkSocketClass;
typedef struct _GtkIconThemeClass {
    GObjectClass parent_class;
    void (*changed) (GtkIconTheme *);
} GtkIconThemeClass;
typedef struct _GtkVPaned {
    GtkPaned paned;
} GtkVPaned;
typedef struct _GtkTableChild {
    GtkWidget *widget;
    guint16 left_attach;
    guint16 right_attach;
    guint16 top_attach;
    guint16 bottom_attach;
    guint16 xpadding;
    guint16 ypadding;
    guint xexpand:1;
    guint yexpand:1;
    guint xshrink:1;
    guint yshrink:1;
    guint xfill:1;
    guint yfill:1;
} GtkTableChild;
typedef struct _GtkArrowClass {
    GtkMiscClass parent_class;
} GtkArrowClass;
typedef struct _GtkHScrollbar {
    GtkScrollbar scrollbar;
} GtkHScrollbar;
typedef struct _GtkFileChooserWidgetPrivate GtkFileChooserWidgetPrivate;
typedef struct _GtkFileChooserWidget {
    GtkVBox parent_instance;
    GtkFileChooserWidgetPrivate *priv;
} GtkFileChooserWidget;
typedef struct _GtkPlugClass {
    GtkWindowClass parent_class;
    void (*embedded) (GtkPlug *);
    void (*_gtk_reserved1) (void);
    void (*_gtk_reserved2) (void);
    void (*_gtk_reserved3) (void);
    void (*_gtk_reserved4) (void);
} GtkPlugClass;
typedef struct _GtkCellRendererPixbufClass {
    GtkCellRendererClass parent_class;
    void (*_gtk_reserved1) (void);
    void (*_gtk_reserved2) (void);
    void (*_gtk_reserved3) (void);
    void (*_gtk_reserved4) (void);
} GtkCellRendererPixbufClass;
typedef struct _GtkVButtonBoxClass {
    GtkButtonBoxClass parent_class;
} GtkVButtonBoxClass;
typedef struct _GtkTextChildAnchorClass {
    GObjectClass parent_class;
    void (*_gtk_reserved1) (void);
    void (*_gtk_reserved2) (void);
    void (*_gtk_reserved3) (void);
    void (*_gtk_reserved4) (void);
} GtkTextChildAnchorClass;
typedef struct _GtkCellRendererCombo {
    GtkCellRendererText parent;
    GtkTreeModel *model;
    gint text_column;
    gboolean has_entry;
    guint focus_out_id;
} GtkCellRendererCombo;
typedef struct _GtkTreeModelIface {
    GTypeInterface g_iface;
    void (*row_changed) (GtkTreeModel *, GtkTreePath *, GtkTreeIter *);
    void (*row_inserted) (GtkTreeModel *, GtkTreePath *, GtkTreeIter *);
    void (*row_has_child_toggled) (GtkTreeModel *, GtkTreePath *,
				   GtkTreeIter *);
    void (*row_deleted) (GtkTreeModel *, GtkTreePath *);
    void (*rows_reordered) (GtkTreeModel *, GtkTreePath *, GtkTreeIter *,
			    gint *);
     GtkTreeModelFlags(*get_flags) (GtkTreeModel *);
     gint(*get_n_columns) (GtkTreeModel *);
     GType(*get_column_type) (GtkTreeModel *, gint);
     gboolean(*get_iter) (GtkTreeModel *, GtkTreeIter *, GtkTreePath *);
    GtkTreePath *(*get_path) (GtkTreeModel *, GtkTreeIter *);
    void (*get_value) (GtkTreeModel *, GtkTreeIter *, gint, GValue *);
     gboolean(*iter_next) (GtkTreeModel *, GtkTreeIter *);
     gboolean(*iter_children) (GtkTreeModel *, GtkTreeIter *,
			       GtkTreeIter *);
     gboolean(*iter_has_child) (GtkTreeModel *, GtkTreeIter *);
     gint(*iter_n_children) (GtkTreeModel *, GtkTreeIter *);
     gboolean(*iter_nth_child) (GtkTreeModel *, GtkTreeIter *,
				GtkTreeIter *, gint);
     gboolean(*iter_parent) (GtkTreeModel *, GtkTreeIter *, GtkTreeIter *);
    void (*ref_node) (GtkTreeModel *, GtkTreeIter *);
    void (*unref_node) (GtkTreeModel *, GtkTreeIter *);
} GtkTreeModelIface;
typedef struct _GtkAccessibleClass {
    AtkObjectClass parent_class;
    void (*connect_widget_destroyed) (GtkAccessible *);
    void (*_gtk_reserved1) (void);
    void (*_gtk_reserved2) (void);
    void (*_gtk_reserved3) (void);
    void (*_gtk_reserved4) (void);
} GtkAccessibleClass;
typedef struct _GtkCellRendererTextClass {
    GtkCellRendererClass parent_class;
    void (*edited) (GtkCellRendererText *, const gchar *, const gchar *);
    void (*_gtk_reserved1) (void);
    void (*_gtk_reserved2) (void);
    void (*_gtk_reserved3) (void);
    void (*_gtk_reserved4) (void);
} GtkCellRendererTextClass;
typedef struct _GtkVScaleClass {
    GtkScaleClass parent_class;
} GtkVScaleClass;
typedef struct _GtkCurveClass {
    GtkDrawingAreaClass parent_class;
    void (*curve_type_changed) (GtkCurve *);
    void (*_gtk_reserved1) (void);
    void (*_gtk_reserved2) (void);
    void (*_gtk_reserved3) (void);
    void (*_gtk_reserved4) (void);
} GtkCurveClass;
typedef struct _GtkSeparatorToolItemClass {
    GtkToolItemClass parent_class;
    void (*_gtk_reserved1) (void);
    void (*_gtk_reserved2) (void);
    void (*_gtk_reserved3) (void);
    void (*_gtk_reserved4) (void);
} GtkSeparatorToolItemClass;
typedef struct _GtkStyleClass {
    GObjectClass parent_class;
    void (*realize) (GtkStyle *);
    void (*unrealize) (GtkStyle *);
    void (*copy) (GtkStyle *, GtkStyle *);
    GtkStyle *(*clone) (GtkStyle *);
    void (*init_from_rc) (GtkStyle *, GtkRcStyle *);
    void (*set_background) (GtkStyle *, GdkWindow *, GtkStateType);
    GdkPixbuf *(*render_icon) (GtkStyle *, const GtkIconSource *,
			       GtkTextDirection, GtkStateType, GtkIconSize,
			       GtkWidget *, const gchar *);
    void (*draw_hline) (GtkStyle *, GdkWindow *, GtkStateType,
			GdkRectangle *, GtkWidget *, const gchar *, gint,
			gint, gint);
    void (*draw_vline) (GtkStyle *, GdkWindow *, GtkStateType,
			GdkRectangle *, GtkWidget *, const gchar *, gint,
			gint, gint);
    void (*draw_shadow) (GtkStyle *, GdkWindow *, GtkStateType,
			 GtkShadowType, GdkRectangle *, GtkWidget *,
			 const gchar *, gint, gint, gint, gint);
    void (*draw_polygon) (GtkStyle *, GdkWindow *, GtkStateType,
			  GtkShadowType, GdkRectangle *, GtkWidget *,
			  const gchar *, GdkPoint *, gint, gboolean);
    void (*draw_arrow) (GtkStyle *, GdkWindow *, GtkStateType,
			GtkShadowType, GdkRectangle *, GtkWidget *,
			const gchar *, GtkArrowType, gboolean, gint, gint,
			gint, gint);
    void (*draw_diamond) (GtkStyle *, GdkWindow *, GtkStateType,
			  GtkShadowType, GdkRectangle *, GtkWidget *,
			  const gchar *, gint, gint, gint, gint);
    void (*draw_string) (GtkStyle *, GdkWindow *, GtkStateType,
			 GdkRectangle *, GtkWidget *, const gchar *, gint,
			 gint, const gchar *);
    void (*draw_box) (GtkStyle *, GdkWindow *, GtkStateType, GtkShadowType,
		      GdkRectangle *, GtkWidget *, const gchar *, gint,
		      gint, gint, gint);
    void (*draw_flat_box) (GtkStyle *, GdkWindow *, GtkStateType,
			   GtkShadowType, GdkRectangle *, GtkWidget *,
			   const gchar *, gint, gint, gint, gint);
    void (*draw_check) (GtkStyle *, GdkWindow *, GtkStateType,
			GtkShadowType, GdkRectangle *, GtkWidget *,
			const gchar *, gint, gint, gint, gint);
    void (*draw_option) (GtkStyle *, GdkWindow *, GtkStateType,
			 GtkShadowType, GdkRectangle *, GtkWidget *,
			 const gchar *, gint, gint, gint, gint);
    void (*draw_tab) (GtkStyle *, GdkWindow *, GtkStateType, GtkShadowType,
		      GdkRectangle *, GtkWidget *, const gchar *, gint,
		      gint, gint, gint);
    void (*draw_shadow_gap) (GtkStyle *, GdkWindow *, GtkStateType,
			     GtkShadowType, GdkRectangle *, GtkWidget *,
			     const gchar *, gint, gint, gint, gint,
			     GtkPositionType, gint, gint);
    void (*draw_box_gap) (GtkStyle *, GdkWindow *, GtkStateType,
			  GtkShadowType, GdkRectangle *, GtkWidget *,
			  const gchar *, gint, gint, gint, gint,
			  GtkPositionType, gint, gint);
    void (*draw_extension) (GtkStyle *, GdkWindow *, GtkStateType,
			    GtkShadowType, GdkRectangle *, GtkWidget *,
			    const gchar *, gint, gint, gint, gint,
			    GtkPositionType);
    void (*draw_focus) (GtkStyle *, GdkWindow *, GtkStateType,
			GdkRectangle *, GtkWidget *, const gchar *, gint,
			gint, gint, gint);
    void (*draw_slider) (GtkStyle *, GdkWindow *, GtkStateType,
			 GtkShadowType, GdkRectangle *, GtkWidget *,
			 const gchar *, gint, gint, gint, gint,
			 GtkOrientation);
    void (*draw_handle) (GtkStyle *, GdkWindow *, GtkStateType,
			 GtkShadowType, GdkRectangle *, GtkWidget *,
			 const gchar *, gint, gint, gint, gint,
			 GtkOrientation);
    void (*draw_expander) (GtkStyle *, GdkWindow *, GtkStateType,
			   GdkRectangle *, GtkWidget *, const gchar *,
			   gint, gint, GtkExpanderStyle);
    void (*draw_layout) (GtkStyle *, GdkWindow *, GtkStateType, gboolean,
			 GdkRectangle *, GtkWidget *, const gchar *, gint,
			 gint, PangoLayout *);
    void (*draw_resize_grip) (GtkStyle *, GdkWindow *, GtkStateType,
			      GdkRectangle *, GtkWidget *, const gchar *,
			      GdkWindowEdge, gint, gint, gint, gint);
    void (*_gtk_reserved1) (void);
    void (*_gtk_reserved2) (void);
    void (*_gtk_reserved3) (void);
    void (*_gtk_reserved4) (void);
    void (*_gtk_reserved5) (void);
    void (*_gtk_reserved6) (void);
    void (*_gtk_reserved7) (void);
    void (*_gtk_reserved8) (void);
    void (*_gtk_reserved9) (void);
    void (*_gtk_reserved10) (void);
    void (*_gtk_reserved11) (void);
    void (*_gtk_reserved12) (void);
} GtkStyleClass;
typedef struct _GtkSeparatorMenuItemClass {
    GtkMenuItemClass parent_class;
} GtkSeparatorMenuItemClass;
typedef struct _GtkIMMulticontextClass {
    GtkIMContextClass parent_class;
    void (*_gtk_reserved1) (void);
    void (*_gtk_reserved2) (void);
    void (*_gtk_reserved3) (void);
    void (*_gtk_reserved4) (void);
} GtkIMMulticontextClass;
typedef struct _GtkToggleToolButtonClass {
    GtkToolButtonClass parent_class;
    void (*toggled) (GtkToggleToolButton *);
    void (*_gtk_reserved1) (void);
    void (*_gtk_reserved2) (void);
    void (*_gtk_reserved3) (void);
    void (*_gtk_reserved4) (void);
} GtkToggleToolButtonClass;
typedef struct _GtkRadioToolButtonClass {
    GtkToggleToolButtonClass parent_class;
    void (*_gtk_reserved1) (void);
    void (*_gtk_reserved2) (void);
    void (*_gtk_reserved3) (void);
    void (*_gtk_reserved4) (void);
} GtkRadioToolButtonClass;
typedef struct _GtkCellRendererProgressClass {
    GtkCellRendererClass parent_class;
    void (*_gtk_reserved1) (void);
    void (*_gtk_reserved2) (void);
    void (*_gtk_reserved3) (void);
    void (*_gtk_reserved4) (void);
} GtkCellRendererProgressClass;
typedef struct _GtkVScrollbar {
    GtkScrollbar scrollbar;
} GtkVScrollbar;
typedef struct _GtkVPanedClass {
    GtkPanedClass parent_class;
} GtkVPanedClass;
typedef enum {
    GTK_SCROLL_STEPS = 0,
    GTK_SCROLL_PAGES = 1,
    GTK_SCROLL_ENDS = 2,
    GTK_SCROLL_HORIZONTAL_STEPS = 3,
    GTK_SCROLL_HORIZONTAL_PAGES = 4,
    GTK_SCROLL_HORIZONTAL_ENDS = 5
} GtkScrollStep;
typedef struct _GtkToggleButtonClass {
    GtkButtonClass parent_class;
    void (*toggled) (GtkToggleButton *);
    void (*_gtk_reserved1) (void);
    void (*_gtk_reserved2) (void);
    void (*_gtk_reserved3) (void);
    void (*_gtk_reserved4) (void);
} GtkToggleButtonClass;
typedef struct _GtkCellRendererToggleClass {
    GtkCellRendererClass parent_class;
    void (*toggled) (GtkCellRendererToggle *, const gchar *);
    void (*_gtk_reserved1) (void);
    void (*_gtk_reserved2) (void);
    void (*_gtk_reserved3) (void);
    void (*_gtk_reserved4) (void);
} GtkCellRendererToggleClass;
typedef struct _GtkVButtonBox {
    GtkButtonBox button_box;
} GtkVButtonBox;
typedef struct _GtkTreeDragDestIface {
    GTypeInterface g_iface;
     gboolean(*drag_data_received) (GtkTreeDragDest *, GtkTreePath *,
				    GtkSelectionData *);
     gboolean(*row_drop_possible) (GtkTreeDragDest *, GtkTreePath *,
				   GtkSelectionData *);
} GtkTreeDragDestIface;
typedef struct _GtkColorSelectionClass {
    GtkVBoxClass parent_class;
    void (*color_changed) (GtkColorSelection *);
    void (*_gtk_reserved1) (void);
    void (*_gtk_reserved2) (void);
    void (*_gtk_reserved3) (void);
    void (*_gtk_reserved4) (void);
} GtkColorSelectionClass;
typedef struct _GtkCellRendererProgressPrivate
    GtkCellRendererProgressPrivate;
typedef struct _GtkCellRendererProgress {
    GtkCellRenderer parent_instance;
    GtkCellRendererProgressPrivate *priv;
} GtkCellRendererProgress;
typedef struct _GtkImageClass {
    GtkMiscClass parent_class;
    void (*_gtk_reserved1) (void);
    void (*_gtk_reserved2) (void);
    void (*_gtk_reserved3) (void);
    void (*_gtk_reserved4) (void);
} GtkImageClass;
typedef struct _GtkMessageDialogClass {
    GtkDialogClass parent_class;
    void (*_gtk_reserved1) (void);
    void (*_gtk_reserved2) (void);
    void (*_gtk_reserved3) (void);
    void (*_gtk_reserved4) (void);
} GtkMessageDialogClass;
typedef enum {
    GTK_DELETE_CHARS = 0,
    GTK_DELETE_WORD_ENDS = 1,
    GTK_DELETE_WORDS = 2,
    GTK_DELETE_DISPLAY_LINES = 3,
    GTK_DELETE_DISPLAY_LINE_ENDS = 4,
    GTK_DELETE_PARAGRAPH_ENDS = 5,
    GTK_DELETE_PARAGRAPHS = 6,
    GTK_DELETE_WHITESPACE = 7
} GtkDeleteType;
typedef struct _GtkTreeSortableIface {
    GTypeInterface g_iface;
    void (*sort_column_changed) (GtkTreeSortable *);
     gboolean(*get_sort_column_id) (GtkTreeSortable *, gint *,
				    GtkSortType *);
    void (*set_sort_column_id) (GtkTreeSortable *, gint, GtkSortType);
    void (*set_sort_func) (GtkTreeSortable *, gint, GtkTreeIterCompareFunc,
			   gpointer, GtkDestroyNotify);
    void (*set_default_sort_func) (GtkTreeSortable *,
				   GtkTreeIterCompareFunc, gpointer,
				   GtkDestroyNotify);
     gboolean(*has_default_sort_func) (GtkTreeSortable *);
} GtkTreeSortableIface;
typedef struct _GtkCalendarClass {
    GtkWidgetClass parent_class;
    void (*month_changed) (GtkCalendar *);
    void (*day_selected) (GtkCalendar *);
    void (*day_selected_double_click) (GtkCalendar *);
    void (*prev_month) (GtkCalendar *);
    void (*next_month) (GtkCalendar *);
    void (*prev_year) (GtkCalendar *);
    void (*next_year) (GtkCalendar *);
} GtkCalendarClass;
typedef struct _GtkEntryClass {
    GtkWidgetClass parent_class;
    void (*populate_popup) (GtkEntry *, GtkMenu *);
    void (*activate) (GtkEntry *);
    void (*move_cursor) (GtkEntry *, GtkMovementStep, gint, gboolean);
    void (*insert_at_cursor) (GtkEntry *, const gchar *);
    void (*delete_from_cursor) (GtkEntry *, GtkDeleteType, gint);
    void (*backspace) (GtkEntry *);
    void (*cut_clipboard) (GtkEntry *);
    void (*copy_clipboard) (GtkEntry *);
    void (*paste_clipboard) (GtkEntry *);
    void (*toggle_overwrite) (GtkEntry *);
    void (*_gtk_reserved1) (void);
    void (*_gtk_reserved2) (void);
    void (*_gtk_reserved3) (void);
} GtkEntryClass;
typedef struct _GtkSpinButtonClass {
    GtkEntryClass parent_class;
     gint(*input) (GtkSpinButton *, gdouble *);
     gint(*output) (GtkSpinButton *);
    void (*value_changed) (GtkSpinButton *);
    void (*change_value) (GtkSpinButton *, GtkScrollType);
    void (*_gtk_reserved1) (void);
    void (*_gtk_reserved2) (void);
    void (*_gtk_reserved3) (void);
    void (*_gtk_reserved4) (void);
} GtkSpinButtonClass;
typedef struct _GtkInputDialog {
    GtkDialog dialog;
    GtkWidget *axis_list;
    GtkWidget *axis_listbox;
    GtkWidget *mode_optionmenu;
    GtkWidget *close_button;
    GtkWidget *save_button;
    GtkWidget *axis_items[7];
    GdkDevice *current_device;
    GtkWidget *keys_list;
    GtkWidget *keys_listbox;
} GtkInputDialog;
typedef struct _GtkInputDialogClass {
    GtkDialogClass parent_class;
    void (*enable_device) (GtkInputDialog *, GdkDevice *);
    void (*disable_device) (GtkInputDialog *, GdkDevice *);
    void (*_gtk_reserved1) (void);
    void (*_gtk_reserved2) (void);
    void (*_gtk_reserved3) (void);
    void (*_gtk_reserved4) (void);
} GtkInputDialogClass;
typedef struct _GtkEntryCompletionClass {
    GObjectClass parent_class;
     gboolean(*match_selected) (GtkEntryCompletion *, GtkTreeModel *,
				GtkTreeIter *);
    void (*action_activated) (GtkEntryCompletion *, gint);
     gboolean(*insert_prefix) (GtkEntryCompletion *, const gchar *);
    void (*_gtk_reserved0) (void);
    void (*_gtk_reserved1) (void);
    void (*_gtk_reserved2) (void);
} GtkEntryCompletionClass;
typedef struct _GtkAlignmentClass {
    GtkBinClass parent_class;
} GtkAlignmentClass;
typedef struct _GtkTreeModelFilterClass {
    GObjectClass parent_class;
    void (*_gtk_reserved0) (void);
    void (*_gtk_reserved1) (void);
    void (*_gtk_reserved2) (void);
    void (*_gtk_reserved3) (void);
} GtkTreeModelFilterClass;
typedef struct _GtkRcStyleClass {
    GObjectClass parent_class;
    GtkRcStyle *(*create_rc_style) (GtkRcStyle *);
     guint(*parse) (GtkRcStyle *, GtkSettings *, GScanner *);
    void (*merge) (GtkRcStyle *, GtkRcStyle *);
    GtkStyle *(*create_style) (GtkRcStyle *);
    void (*_gtk_reserved1) (void);
    void (*_gtk_reserved2) (void);
    void (*_gtk_reserved3) (void);
    void (*_gtk_reserved4) (void);
} GtkRcStyleClass;
typedef struct _GtkUIManagerClass {
    GObjectClass parent_class;
    void (*add_widget) (GtkUIManager *, GtkWidget *);
    void (*actions_changed) (GtkUIManager *);
    void (*connect_proxy) (GtkUIManager *, GtkAction *, GtkWidget *);
    void (*disconnect_proxy) (GtkUIManager *, GtkAction *, GtkWidget *);
    void (*pre_activate) (GtkUIManager *, GtkAction *);
    void (*post_activate) (GtkUIManager *, GtkAction *);
    GtkWidget *(*get_widget) (GtkUIManager *, const gchar *);
    GtkAction *(*get_action) (GtkUIManager *, const gchar *);
    void (*_gtk_reserved1) (void);
    void (*_gtk_reserved2) (void);
} GtkUIManagerClass;
typedef struct _GtkSeparatorClass {
    GtkWidgetClass parent_class;
} GtkSeparatorClass;
typedef struct _GtkVSeparatorClass {
    GtkSeparatorClass parent_class;
} GtkVSeparatorClass;
typedef struct _GtkCheckButtonClass {
    GtkToggleButtonClass parent_class;
    void (*draw_indicator) (GtkCheckButton *, GdkRectangle *);
    void (*_gtk_reserved1) (void);
    void (*_gtk_reserved2) (void);
    void (*_gtk_reserved3) (void);
    void (*_gtk_reserved4) (void);
} GtkCheckButtonClass;
typedef enum {
    GTK_VISIBILITY_NONE = 0,
    GTK_VISIBILITY_PARTIAL = 1,
    GTK_VISIBILITY_FULL = 2
} GtkVisibility;
typedef struct _GtkRadioMenuItemClass {
    GtkCheckMenuItemClass parent_class;
    void (*group_changed) (GtkRadioMenuItem *);
    void (*_gtk_reserved2) (void);
    void (*_gtk_reserved3) (void);
    void (*_gtk_reserved4) (void);
} GtkRadioMenuItemClass;
typedef struct _GtkTextViewClass {
    GtkContainerClass parent_class;
    void (*set_scroll_adjustments) (GtkTextView *, GtkAdjustment *,
				    GtkAdjustment *);
    void (*populate_popup) (GtkTextView *, GtkMenu *);
    void (*move_cursor) (GtkTextView *, GtkMovementStep, gint, gboolean);
    void (*page_horizontally) (GtkTextView *, gint, gboolean);
    void (*set_anchor) (GtkTextView *);
    void (*insert_at_cursor) (GtkTextView *, const gchar *);
    void (*delete_from_cursor) (GtkTextView *, GtkDeleteType, gint);
    void (*backspace) (GtkTextView *);
    void (*cut_clipboard) (GtkTextView *);
    void (*copy_clipboard) (GtkTextView *);
    void (*paste_clipboard) (GtkTextView *);
    void (*toggle_overwrite) (GtkTextView *);
    void (*move_focus) (GtkTextView *, GtkDirectionType);
    void (*_gtk_reserved1) (void);
    void (*_gtk_reserved2) (void);
    void (*_gtk_reserved3) (void);
    void (*_gtk_reserved4) (void);
    void (*_gtk_reserved5) (void);
    void (*_gtk_reserved6) (void);
    void (*_gtk_reserved7) (void);
} GtkTextViewClass;
typedef void (*GtkColorSelectionChangePaletteFunc) (const GdkColor *,
						    gint);
typedef struct _GtkTreeModelSortClass {
    GObjectClass parent_class;
    void (*_gtk_reserved1) (void);
    void (*_gtk_reserved2) (void);
    void (*_gtk_reserved3) (void);
    void (*_gtk_reserved4) (void);
} GtkTreeModelSortClass;
typedef struct _GtkCellEditableIface {
    GTypeInterface g_iface;
    void (*editing_done) (GtkCellEditable *);
    void (*remove_widget) (GtkCellEditable *);
    void (*start_editing) (GtkCellEditable *, GdkEvent *);
} GtkCellEditableIface;
typedef struct _GtkToolbarClass {
    GtkContainerClass parent_class;
    void (*orientation_changed) (GtkToolbar *, GtkOrientation);
    void (*style_changed) (GtkToolbar *, GtkToolbarStyle);
     gboolean(*popup_context_menu) (GtkToolbar *, gint, gint, gint);
    void (*_gtk_reserved1) (void);
    void (*_gtk_reserved2) (void);
    void (*_gtk_reserved3) (void);
} GtkToolbarClass;
typedef struct _GtkHandleBoxClass {
    GtkBinClass parent_class;
    void (*child_attached) (GtkHandleBox *, GtkWidget *);
    void (*child_detached) (GtkHandleBox *, GtkWidget *);
    void (*_gtk_reserved1) (void);
    void (*_gtk_reserved2) (void);
    void (*_gtk_reserved3) (void);
    void (*_gtk_reserved4) (void);
} GtkHandleBoxClass;
typedef struct _GtkHSeparator {
    GtkSeparator separator;
} GtkHSeparator;
typedef struct _GtkTextTagTableClass {
    GObjectClass parent_class;
    void (*tag_changed) (GtkTextTagTable *, GtkTextTag *, gboolean);
    void (*tag_added) (GtkTextTagTable *, GtkTextTag *);
    void (*tag_removed) (GtkTextTagTable *, GtkTextTag *);
    void (*_gtk_reserved1) (void);
    void (*_gtk_reserved2) (void);
    void (*_gtk_reserved3) (void);
    void (*_gtk_reserved4) (void);
} GtkTextTagTableClass;
typedef struct _GtkComboBoxClass {
    GtkBinClass parent_class;
    void (*changed) (GtkComboBox *);
    gchar *(*get_active_text) (GtkComboBox *);
    void (*_gtk_reserved0) (void);
    void (*_gtk_reserved1) (void);
    void (*_gtk_reserved2) (void);
} GtkComboBoxClass;
typedef struct _GtkComboBoxEntryClass {
    GtkComboBoxClass parent_class;
    void (*_gtk_reserved0) (void);
    void (*_gtk_reserved1) (void);
    void (*_gtk_reserved2) (void);
    void (*_gtk_reserved3) (void);
} GtkComboBoxEntryClass;
typedef struct _GtkFontSelectionClass {
    GtkVBoxClass parent_class;
    void (*_gtk_reserved1) (void);
    void (*_gtk_reserved2) (void);
    void (*_gtk_reserved3) (void);
    void (*_gtk_reserved4) (void);
} GtkFontSelectionClass;
typedef struct _GtkFrameClass {
    GtkBinClass parent_class;
    void (*compute_child_allocation) (GtkFrame *, GtkAllocation *);
} GtkFrameClass;
typedef struct _GtkHScrollbarClass {
    GtkScrollbarClass parent_class;
} GtkHScrollbarClass;
typedef struct _GtkFileSelectionClass {
    GtkDialogClass parent_class;
    void (*_gtk_reserved1) (void);
    void (*_gtk_reserved2) (void);
    void (*_gtk_reserved3) (void);
    void (*_gtk_reserved4) (void);
} GtkFileSelectionClass;
typedef struct _GtkScrolledWindowClass {
    GtkBinClass parent_class;
    gint scrollbar_spacing;
    void (*scroll_child) (GtkScrolledWindow *, GtkScrollType, gboolean);
    void (*move_focus_out) (GtkScrolledWindow *, GtkDirectionType);
    void (*_gtk_reserved1) (void);
    void (*_gtk_reserved2) (void);
    void (*_gtk_reserved3) (void);
    void (*_gtk_reserved4) (void);
} GtkScrolledWindowClass;
typedef struct _GtkTextMarkClass {
    GObjectClass parent_class;
    void (*_gtk_reserved1) (void);
    void (*_gtk_reserved2) (void);
    void (*_gtk_reserved3) (void);
    void (*_gtk_reserved4) (void);
} GtkTextMarkClass;
typedef struct _GtkToolbarPrivate GtkToolbarPrivate;
typedef struct _GtkVScale {
    GtkScale scale;
} GtkVScale;
typedef struct _GtkFixedChild {
    GtkWidget *widget;
    gint x;
    gint y;
} GtkFixedChild;
typedef struct _GtkLayoutClass {
    GtkContainerClass parent_class;
    void (*set_scroll_adjustments) (GtkLayout *, GtkAdjustment *,
				    GtkAdjustment *);
    void (*_gtk_reserved1) (void);
    void (*_gtk_reserved2) (void);
    void (*_gtk_reserved3) (void);
    void (*_gtk_reserved4) (void);
} GtkLayoutClass;
typedef struct _GtkEventBoxClass {
    GtkBinClass parent_class;
} GtkEventBoxClass;
typedef struct _GtkIMContextSimpleClass {
    GtkIMContextClass parent_class;
} GtkIMContextSimpleClass;
typedef struct _GtkExpanderClass {
    GtkBinClass parent_class;
    void (*activate) (GtkExpander *);
} GtkExpanderClass;
typedef struct _GtkProgressClass {
    GtkWidgetClass parent_class;
    void (*paint) (GtkProgress *);
    void (*update) (GtkProgress *);
    void (*act_mode_enter) (GtkProgress *);
    void (*_gtk_reserved1) (void);
    void (*_gtk_reserved2) (void);
    void (*_gtk_reserved3) (void);
    void (*_gtk_reserved4) (void);
} GtkProgressClass;
typedef void (*GtkModuleInitFunc) (gint *, gchar * **);
typedef struct _GtkFileChooserDialogClass {
    GtkDialogClass parent_class;
} GtkFileChooserDialogClass;
typedef struct _GtkVScrollbarClass {
    GtkScrollbarClass parent_class;
} GtkVScrollbarClass;
typedef struct _GtkTableClass {
    GtkContainerClass parent_class;
} GtkTableClass;
typedef struct _GtkFontButtonClass {
    GtkButtonClass parent_class;
    void (*font_set) (GtkFontButton *);
    void (*_gtk_reserved1) (void);
    void (*_gtk_reserved2) (void);
    void (*_gtk_reserved3) (void);
    void (*_gtk_reserved4) (void);
} GtkFontButtonClass;
typedef struct _GtkHSeparatorClass {
    GtkSeparatorClass parent_class;
} GtkHSeparatorClass;
typedef struct _GtkColorSelectionDialogClass {
    GtkDialogClass parent_class;
    void (*_gtk_reserved1) (void);
    void (*_gtk_reserved2) (void);
    void (*_gtk_reserved3) (void);
    void (*_gtk_reserved4) (void);
} GtkColorSelectionDialogClass;
typedef struct _GtkColorButtonClass {
    GtkButtonClass parent_class;
    void (*color_set) (GtkColorButton *);
    void (*_gtk_reserved1) (void);
    void (*_gtk_reserved2) (void);
    void (*_gtk_reserved3) (void);
    void (*_gtk_reserved4) (void);
} GtkColorButtonClass;
typedef struct _GtkMenuBar {
    GtkMenuShell menu_shell;
} GtkMenuBar;
typedef struct _GtkMenuBarClass {
    GtkMenuShellClass parent_class;
    void (*_gtk_reserved1) (void);
    void (*_gtk_reserved2) (void);
    void (*_gtk_reserved3) (void);
    void (*_gtk_reserved4) (void);
} GtkMenuBarClass;
typedef struct _GtkColorSelectionDialog {
    GtkDialog parent_instance;
    GtkWidget *colorsel;
    GtkWidget *ok_button;
    GtkWidget *cancel_button;
    GtkWidget *help_button;
} GtkColorSelectionDialog;
typedef struct _GtkStatusbarClass {
    GtkHBoxClass parent_class;
    GMemChunk *messages_mem_chunk;
    void (*text_pushed) (GtkStatusbar *, guint, const gchar *);
    void (*text_popped) (GtkStatusbar *, guint, const gchar *);
    void (*_gtk_reserved1) (void);
    void (*_gtk_reserved2) (void);
    void (*_gtk_reserved3) (void);
    void (*_gtk_reserved4) (void);
} GtkStatusbarClass;
typedef struct _GtkSeparatorMenuItem {
    GtkMenuItem menu_item;
} GtkSeparatorMenuItem;
typedef struct _GtkAboutDialogClass {
    GtkDialogClass parent_class;
    void (*_gtk_reserved1) (void);
    void (*_gtk_reserved2) (void);
    void (*_gtk_reserved3) (void);
    void (*_gtk_reserved4) (void);
} GtkAboutDialogClass;
typedef struct _GtkListStoreClass {
    GObjectClass parent_class;
    void (*_gtk_reserved1) (void);
    void (*_gtk_reserved2) (void);
    void (*_gtk_reserved3) (void);
    void (*_gtk_reserved4) (void);
} GtkListStoreClass;
typedef struct _GtkFileChooserButtonClass {
    GtkHBoxClass parent_class;
    void *__gtk_reserved1;
    void *__gtk_reserved2;
    void *__gtk_reserved3;
    void *__gtk_reserved4;
    void *__gtk_reserved5;
    void *__gtk_reserved6;
    void *__gtk_reserved7;
    void *__gtk_reserved8;
} GtkFileChooserButtonClass;
typedef enum {
    GTK_TOOLBAR_SPACE_EMPTY = 0,
    GTK_TOOLBAR_SPACE_LINE = 1
} GtkToolbarSpaceStyle;
typedef struct _GtkMenuClass {
    GtkMenuShellClass parent_class;
    void (*_gtk_reserved1) (void);
    void (*_gtk_reserved2) (void);
    void (*_gtk_reserved3) (void);
    void (*_gtk_reserved4) (void);
} GtkMenuClass;
typedef struct _GtkHScale {
    GtkScale scale;
} GtkHScale;
typedef struct _GtkGammaCurveClass {
    GtkVBoxClass parent_class;
    void (*_gtk_reserved1) (void);
    void (*_gtk_reserved2) (void);
    void (*_gtk_reserved3) (void);
    void (*_gtk_reserved4) (void);
} GtkGammaCurveClass;
typedef struct _GtkCellRendererComboClass {
    GtkCellRendererTextClass parent;
} GtkCellRendererComboClass;
typedef struct _GtkTearoffMenuItem {
    GtkMenuItem menu_item;
    guint torn_off:1;
} GtkTearoffMenuItem;
typedef struct _GtkNotebookClass {
    GtkContainerClass parent_class;
    void (*switch_page) (GtkNotebook *, GtkNotebookPage *, guint);
     gboolean(*select_page) (GtkNotebook *, gboolean);
     gboolean(*focus_tab) (GtkNotebook *, GtkNotebookTab);
    void (*change_current_page) (GtkNotebook *, gint);
    void (*move_focus_out) (GtkNotebook *, GtkDirectionType);
    void (*_gtk_reserved1) (void);
    void (*_gtk_reserved2) (void);
    void (*_gtk_reserved3) (void);
    void (*_gtk_reserved4) (void);
} GtkNotebookClass;
typedef struct _GtkImageMenuItemClass {
    GtkMenuItemClass parent_class;
} GtkImageMenuItemClass;
typedef struct _GtkTooltipsClass {
    GtkObjectClass parent_class;
    void (*_gtk_reserved1) (void);
    void (*_gtk_reserved2) (void);
    void (*_gtk_reserved3) (void);
    void (*_gtk_reserved4) (void);
} GtkTooltipsClass;
typedef struct _GtkTreeViewClass {
    GtkContainerClass parent_class;
    void (*set_scroll_adjustments) (GtkTreeView *, GtkAdjustment *,
				    GtkAdjustment *);
    void (*row_activated) (GtkTreeView *, GtkTreePath *,
			   GtkTreeViewColumn *);
     gboolean(*test_expand_row) (GtkTreeView *, GtkTreeIter *,
				 GtkTreePath *);
     gboolean(*test_collapse_row) (GtkTreeView *, GtkTreeIter *,
				   GtkTreePath *);
    void (*row_expanded) (GtkTreeView *, GtkTreeIter *, GtkTreePath *);
    void (*row_collapsed) (GtkTreeView *, GtkTreeIter *, GtkTreePath *);
    void (*columns_changed) (GtkTreeView *);
    void (*cursor_changed) (GtkTreeView *);
     gboolean(*move_cursor) (GtkTreeView *, GtkMovementStep, gint);
     gboolean(*select_all) (GtkTreeView *);
     gboolean(*unselect_all) (GtkTreeView *);
     gboolean(*select_cursor_row) (GtkTreeView *, gboolean);
     gboolean(*toggle_cursor_row) (GtkTreeView *);
     gboolean(*expand_collapse_cursor_row) (GtkTreeView *, gboolean,
					    gboolean, gboolean);
     gboolean(*select_cursor_parent) (GtkTreeView *);
     gboolean(*start_interactive_search) (GtkTreeView *);
    void (*_gtk_reserved0) (void);
    void (*_gtk_reserved1) (void);
    void (*_gtk_reserved2) (void);
    void (*_gtk_reserved3) (void);
    void (*_gtk_reserved4) (void);
} GtkTreeViewClass;
typedef struct _GtkFileChooserWidgetClass {
    GtkVBoxClass parent_class;
} GtkFileChooserWidgetClass;
typedef struct _GtkTearoffMenuItemClass {
    GtkMenuItemClass parent_class;
    void (*_gtk_reserved1) (void);
    void (*_gtk_reserved2) (void);
    void (*_gtk_reserved3) (void);
    void (*_gtk_reserved4) (void);
} GtkTearoffMenuItemClass;
typedef struct _GtkRadioButtonClass {
    GtkCheckButtonClass parent_class;
    void (*group_changed) (GtkRadioButton *);
    void (*_gtk_reserved2) (void);
    void (*_gtk_reserved3) (void);
    void (*_gtk_reserved4) (void);
} GtkRadioButtonClass;
typedef struct _GtkAdjustmentClass {
    GtkObjectClass parent_class;
    void (*changed) (GtkAdjustment *);
    void (*value_changed) (GtkAdjustment *);
    void (*_gtk_reserved1) (void);
    void (*_gtk_reserved2) (void);
    void (*_gtk_reserved3) (void);
    void (*_gtk_reserved4) (void);
} GtkAdjustmentClass;
typedef struct _GtkHPaned {
    GtkPaned paned;
} GtkHPaned;
typedef struct _GtkRadioActionClass {
    GtkToggleActionClass parent_class;
    void (*changed) (GtkRadioAction *, GtkRadioAction *);
    void (*_gtk_reserved1) (void);
    void (*_gtk_reserved2) (void);
    void (*_gtk_reserved3) (void);
    void (*_gtk_reserved4) (void);
} GtkRadioActionClass;
typedef struct _GtkTextTagClass {
    GObjectClass parent_class;
     gboolean(*event) (GtkTextTag *, GObject *, GdkEvent *,
		       const GtkTextIter *);
    void (*_gtk_reserved1) (void);
    void (*_gtk_reserved2) (void);
    void (*_gtk_reserved3) (void);
    void (*_gtk_reserved4) (void);
} GtkTextTagClass;
typedef struct _GtkIconViewClass {
    GtkContainerClass parent_class;
    void (*set_scroll_adjustments) (GtkIconView *, GtkAdjustment *,
				    GtkAdjustment *);
    void (*item_activated) (GtkIconView *, GtkTreePath *);
    void (*selection_changed) (GtkIconView *);
    void (*select_all) (GtkIconView *);
    void (*unselect_all) (GtkIconView *);
    void (*select_cursor_item) (GtkIconView *);
    void (*toggle_cursor_item) (GtkIconView *);
     gboolean(*move_cursor) (GtkIconView *, GtkMovementStep, gint);
     gboolean(*activate_cursor_item) (GtkIconView *);
} GtkIconViewClass;
typedef struct _GtkProgressBarClass {
    GtkProgressClass parent_class;
    void (*_gtk_reserved1) (void);
    void (*_gtk_reserved2) (void);
    void (*_gtk_reserved3) (void);
    void (*_gtk_reserved4) (void);
} GtkProgressBarClass;
typedef struct _GtkAspectFrameClass {
    GtkFrameClass parent_class;
} GtkAspectFrameClass;
typedef struct _GtkGammaCurve {
    GtkVBox vbox;
    GtkWidget *table;
    GtkWidget *curve;
    GtkWidget *button[5];
    gfloat gamma;
    GtkWidget *gamma_dialog;
    GtkWidget *gamma_text;
} GtkGammaCurve;
typedef gboolean(*GtkAccelGroupActivate) (GtkAccelGroup *, GObject *,
					  guint, GdkModifierType);
enum {
    GTK_TREE_SORTABLE_DEFAULT_SORT_COLUMN_ID = -1,
    GTK_TREE_SORTABLE_UNSORTED_SORT_COLUMN_ID = -2
};
typedef enum {
    GTK_IM_PREEDIT_NOTHING,
    GTK_IM_PREEDIT_CALLBACK,
    GTK_IM_PREEDIT_NONE
} GtkIMPreeditStyle;
typedef enum {
    GTK_DEBUG_MISC = 1 &lt;&lt; 0,
    GTK_DEBUG_PLUGSOCKET = 1 &lt;&lt; 1,
    GTK_DEBUG_TEXT = 1 &lt;&lt; 2,
    GTK_DEBUG_TREE = 1 &lt;&lt; 3,
    GTK_DEBUG_UPDATES = 1 &lt;&lt; 4,
    GTK_DEBUG_KEYBINDINGS = 1 &lt;&lt; 5,
    GTK_DEBUG_MULTIHEAD = 1 &lt;&lt; 6,
    GTK_DEBUG_MODULES = 1 &lt;&lt; 7,
    GTK_DEBUG_GEOMETRY = 1 &lt;&lt; 8,
    GTK_DEBUG_ICONTHEME = 1 &lt;&lt; 9
} GtkDebugFlag;
typedef enum {
    GTK_CELL_RENDERER_MODE_INERT,
    GTK_CELL_RENDERER_MODE_ACTIVATABLE,
    GTK_CELL_RENDERER_MODE_EDITABLE
} GtkCellRendererMode;
typedef enum {
    GTK_ICON_THEME_NOT_FOUND,
    GTK_ICON_THEME_FAILED
} GtkIconThemeError;
typedef enum {
    GTK_RESPONSE_NONE = -1,
    GTK_RESPONSE_REJECT = -2,
    GTK_RESPONSE_ACCEPT = -3,
    GTK_RESPONSE_DELETE_EVENT = -4,
    GTK_RESPONSE_OK = -5,
    GTK_RESPONSE_CANCEL = -6,
    GTK_RESPONSE_CLOSE = -7,
    GTK_RESPONSE_YES = -8,
    GTK_RESPONSE_NO = -9,
    GTK_RESPONSE_APPLY = -10,
    GTK_RESPONSE_HELP = -11
} GtkResponseType;
typedef enum {
    GTK_TARGET_SAME_APP = 1 &lt;&lt; 0,
    GTK_TARGET_SAME_WIDGET = 1 &lt;&lt; 1
} GtkTargetFlags;
typedef enum {
    GTK_ANCHOR_CENTER,
    GTK_ANCHOR_NORTH,
    GTK_ANCHOR_NORTH_WEST,
    GTK_ANCHOR_NORTH_EAST,
    GTK_ANCHOR_SOUTH,
    GTK_ANCHOR_SOUTH_WEST,
    GTK_ANCHOR_SOUTH_EAST,
    GTK_ANCHOR_WEST,
    GTK_ANCHOR_EAST,
    GTK_ANCHOR_N = GTK_ANCHOR_NORTH,
    GTK_ANCHOR_NW = GTK_ANCHOR_NORTH_WEST,
    GTK_ANCHOR_NE = GTK_ANCHOR_NORTH_EAST,
    GTK_ANCHOR_S = GTK_ANCHOR_SOUTH,
    GTK_ANCHOR_SW = GTK_ANCHOR_SOUTH_WEST,
    GTK_ANCHOR_SE = GTK_ANCHOR_SOUTH_EAST,
    GTK_ANCHOR_W = GTK_ANCHOR_WEST,
    GTK_ANCHOR_E = GTK_ANCHOR_EAST
} GtkAnchorType;
typedef enum {
    GTK_IM_STATUS_NOTHING,
    GTK_IM_STATUS_CALLBACK,
    GTK_IM_STATUS_NONE
} GtkIMStatusStyle;
typedef enum {
    GTK_FILE_CHOOSER_ERROR_NONEXISTENT,
    GTK_FILE_CHOOSER_ERROR_BAD_FILENAME
} GtkFileChooserError;
typedef enum {
    GTK_IN_DESTRUCTION = 1 &lt;&lt; 0,
    GTK_FLOATING = 1 &lt;&lt; 1,
    GTK_RESERVED_1 = 1 &lt;&lt; 2,
    GTK_RESERVED_2 = 1 &lt;&lt; 3
} GtkObjectFlags;
typedef enum {
    GTK_RC_TOKEN_INVALID = G_TOKEN_LAST,
    GTK_RC_TOKEN_INCLUDE,
    GTK_RC_TOKEN_NORMAL,
    GTK_RC_TOKEN_ACTIVE,
    GTK_RC_TOKEN_PRELIGHT,
    GTK_RC_TOKEN_SELECTED,
    GTK_RC_TOKEN_INSENSITIVE,
    GTK_RC_TOKEN_FG,
    GTK_RC_TOKEN_BG,
    GTK_RC_TOKEN_TEXT,
    GTK_RC_TOKEN_BASE,
    GTK_RC_TOKEN_XTHICKNESS,
    GTK_RC_TOKEN_YTHICKNESS,
    GTK_RC_TOKEN_FONT,
    GTK_RC_TOKEN_FONTSET,
    GTK_RC_TOKEN_FONT_NAME,
    GTK_RC_TOKEN_BG_PIXMAP,
    GTK_RC_TOKEN_PIXMAP_PATH,
    GTK_RC_TOKEN_STYLE,
    GTK_RC_TOKEN_BINDING,
    GTK_RC_TOKEN_BIND,
    GTK_RC_TOKEN_WIDGET,
    GTK_RC_TOKEN_WIDGET_CLASS,
    GTK_RC_TOKEN_CLASS,
    GTK_RC_TOKEN_LOWEST,
    GTK_RC_TOKEN_GTK,
    GTK_RC_TOKEN_APPLICATION,
    GTK_RC_TOKEN_THEME,
    GTK_RC_TOKEN_RC,
    GTK_RC_TOKEN_HIGHEST,
    GTK_RC_TOKEN_ENGINE,
    GTK_RC_TOKEN_MODULE_PATH,
    GTK_RC_TOKEN_IM_MODULE_PATH,
    GTK_RC_TOKEN_IM_MODULE_FILE,
    GTK_RC_TOKEN_STOCK,
    GTK_RC_TOKEN_LTR,
    GTK_RC_TOKEN_RTL,
    GTK_RC_TOKEN_LAST
} GtkRcTokenType;
typedef enum {
    GTK_TOPLEVEL = 1 &lt;&lt; 4,
    GTK_NO_WINDOW = 1 &lt;&lt; 5,
    GTK_REALIZED = 1 &lt;&lt; 6,
    GTK_MAPPED = 1 &lt;&lt; 7,
    GTK_VISIBLE = 1 &lt;&lt; 8,
    GTK_SENSITIVE = 1 &lt;&lt; 9,
    GTK_PARENT_SENSITIVE = 1 &lt;&lt; 10,
    GTK_CAN_FOCUS = 1 &lt;&lt; 11,
    GTK_HAS_FOCUS = 1 &lt;&lt; 12,
    GTK_CAN_DEFAULT = 1 &lt;&lt; 13,
    GTK_HAS_DEFAULT = 1 &lt;&lt; 14,
    GTK_HAS_GRAB = 1 &lt;&lt; 15,
    GTK_RC_STYLE = 1 &lt;&lt; 16,
    GTK_COMPOSITE_CHILD = 1 &lt;&lt; 17,
    GTK_NO_REPARENT = 1 &lt;&lt; 18,
    GTK_APP_PAINTABLE = 1 &lt;&lt; 19,
    GTK_RECEIVES_DEFAULT = 1 &lt;&lt; 20,
    GTK_DOUBLE_BUFFERED = 1 &lt;&lt; 21,
    GTK_NO_SHOW_ALL = 1 &lt;&lt; 22
} GtkWidgetFlags;
typedef enum {
    GTK_ICON_VIEW_NO_DROP,
    GTK_ICON_VIEW_DROP_INTO,
    GTK_ICON_VIEW_DROP_LEFT,
    GTK_ICON_VIEW_DROP_RIGHT,
    GTK_ICON_VIEW_DROP_ABOVE,
    GTK_ICON_VIEW_DROP_BELOW
} GtkIconViewDropPosition;
typedef enum {
    GTK_PACK_DIRECTION_LTR,
    GTK_PACK_DIRECTION_RTL,
    GTK_PACK_DIRECTION_TTB,
    GTK_PACK_DIRECTION_BTT
} GtkPackDirection;
extern GtkIconSet *gtk_icon_set_new(void);
extern GType gtk_cell_editable_get_type(void);
extern void gtk_widget_get_pointer(GtkWidget *, gint *, gint *);
extern void gtk_progress_bar_set_fraction(GtkProgressBar *, gdouble);
extern GType gtk_file_chooser_action_get_type(void);
extern void gtk_text_buffer_get_start_iter(GtkTextBuffer *, GtkTextIter *);
extern gint gtk_combo_box_get_column_span_column(GtkComboBox *);
extern void gtk_misc_set_padding(GtkMisc *, gint, gint);
extern guint gtk_statusbar_push(GtkStatusbar *, guint, const gchar *);
extern GdkAtom gtk_drag_dest_find_target(GtkWidget *, GdkDragContext *,
					 GtkTargetList *);
extern void gtk_window_get_default_size(GtkWindow *, gint *, gint *);
extern void gtk_widget_modify_base(GtkWidget *, GtkStateType,
				   const GdkColor *);
extern void gtk_tree_row_reference_free(GtkTreeRowReference *);
extern GtkTreeModelFlags gtk_tree_model_get_flags(GtkTreeModel *);
extern void gtk_drag_source_set(GtkWidget *, GdkModifierType,
				const GtkTargetEntry *, gint,
				GdkDragAction);
extern void gtk_entry_get_layout_offsets(GtkEntry *, gint *, gint *);
extern GdkColormap *gtk_widget_get_default_colormap(void);
extern GType gtk_submenu_placement_get_type(void);
extern const guint gtk_binary_age;
extern GtkRequisition *gtk_requisition_copy(const GtkRequisition *);
extern void gtk_combo_box_entry_set_text_column(GtkComboBoxEntry *, gint);
extern GtkAdjustment *gtk_layout_get_vadjustment(GtkLayout *);
extern void gtk_tree_store_append(GtkTreeStore *, GtkTreeIter *,
				  GtkTreeIter *);
extern GtkAboutDialogActivateLinkFunc
gtk_about_dialog_set_email_hook(GtkAboutDialogActivateLinkFunc, gpointer,
				GDestroyNotify);
extern GType gtk_adjustment_get_type(void);
extern gboolean gtk_tree_sortable_get_sort_column_id(GtkTreeSortable *,
						     gint *,
						     GtkSortType *);
extern void gtk_range_set_range(GtkRange *, gdouble, gdouble);
extern gboolean gtk_text_iter_backward_sentence_starts(GtkTextIter *,
						       gint);
extern gboolean gtk_window_propagate_key_event(GtkWindow *, GdkEventKey *);
extern void gtk_dialog_add_action_widget(GtkDialog *, GtkWidget *, gint);
extern GdkNativeWindow gtk_socket_get_id(GtkSocket *);
extern const gchar *gtk_window_get_role(GtkWindow *);
extern void gtk_tree_view_column_clear_attributes(GtkTreeViewColumn *,
						  GtkCellRenderer *);
extern guint gtk_binding_parse_binding(GScanner *);
extern GtkWidget *gtk_input_dialog_new(void);
extern gint gtk_text_buffer_get_char_count(GtkTextBuffer *);
extern GtkButtonBoxStyle gtk_button_box_get_layout(GtkButtonBox *);
extern void gtk_toggle_action_toggled(GtkToggleAction *);
extern gboolean gtk_text_iter_begins_tag(const GtkTextIter *,
					 GtkTextTag *);
extern void gtk_widget_reparent(GtkWidget *, GtkWidget *);
extern gboolean gtk_text_iter_backward_visible_cursor_position(GtkTextIter
							       *);
extern GType gtk_spin_button_get_type(void);
extern void gtk_text_buffer_get_iter_at_line(GtkTextBuffer *,
					     GtkTextIter *, gint);
extern gboolean gtk_file_filter_filter(GtkFileFilter *,
				       const GtkFileFilterInfo *);
extern void gtk_text_iter_set_visible_line_index(GtkTextIter *, gint);
extern GtkTextDirection gtk_icon_source_get_direction(const GtkIconSource
						      *);
extern void gtk_layout_get_size(GtkLayout *, guint *, guint *);
extern void gtk_widget_set_direction(GtkWidget *, GtkTextDirection);
extern gint gtk_text_iter_compare(const GtkTextIter *,
				  const GtkTextIter *);
extern void gtk_drag_source_add_text_targets(GtkWidget *);
extern GType gtk_file_chooser_widget_get_type(void);
extern void gtk_tool_button_set_label_widget(GtkToolButton *, GtkWidget *);
extern gint gtk_icon_view_get_text_column(GtkIconView *);
extern gboolean gtk_label_get_use_markup(GtkLabel *);
extern GtkAdjustment *gtk_container_get_focus_hadjustment(GtkContainer *);
extern void gtk_text_buffer_set_modified(GtkTextBuffer *, gboolean);
extern void gtk_drag_source_unset(GtkWidget *);
extern void gtk_combo_box_set_add_tearoffs(GtkComboBox *, gboolean);
extern GtkWidget *gtk_text_view_new_with_buffer(GtkTextBuffer *);
extern void gtk_settings_set_string_property(GtkSettings *, const gchar *,
					     const gchar *, const gchar *);
extern guint gtk_ui_manager_add_ui_from_file(GtkUIManager *, const gchar *,
					     GError * *);
extern GtkWidget
    *gtk_radio_menu_item_new_with_label_from_widget(GtkRadioMenuItem *,
						    const gchar *);
extern void gtk_widget_push_colormap(GdkColormap *);
extern GtkWidget *gtk_vbox_new(gboolean, gint);
extern void gtk_cell_view_set_background_color(GtkCellView *,
					       const GdkColor *);
extern gboolean gtk_selection_data_targets_include_text(GtkSelectionData
							*);
extern GType gtk_cell_renderer_get_type(void);
extern void gtk_container_check_resize(GtkContainer *);
extern guint gtk_label_get_mnemonic_keyval(GtkLabel *);
extern void gtk_file_chooser_unselect_filename(GtkFileChooser *,
					       const char *);
extern void gtk_curve_reset(GtkCurve *);
extern const gchar *gtk_notebook_get_menu_label_text(GtkNotebook *,
						     GtkWidget *);
extern GtkIconSet *gtk_icon_factory_lookup(GtkIconFactory *,
					   const gchar *);
extern GtkWidget *gtk_accel_label_new(const gchar *);
extern void gtk_widget_size_allocate(GtkWidget *, GtkAllocation *);
extern void gtk_icon_view_unselect_all(GtkIconView *);
extern void gtk_drag_set_icon_default(GdkDragContext *);
extern void gtk_layout_move(GtkLayout *, GtkWidget *, gint, gint);
extern void gtk_drag_set_icon_widget(GdkDragContext *, GtkWidget *, gint,
				     gint);
extern GType gtk_shadow_type_get_type(void);
extern GtkWidget *gtk_tool_item_get_proxy_menu_item(GtkToolItem *,
						    const gchar *);
extern GdkPixbuf *gtk_about_dialog_get_logo(GtkAboutDialog *);
extern void gtk_widget_set_colormap(GtkWidget *, GdkColormap *);
extern GdkExtensionMode gtk_widget_get_extension_events(GtkWidget *);
extern GtkRadioAction *gtk_radio_action_new(const gchar *, const gchar *,
					    const gchar *, const gchar *,
					    gint);
extern GtkTextMark *gtk_text_buffer_get_selection_bound(GtkTextBuffer *);
extern void gtk_box_set_child_packing(GtkBox *, GtkWidget *, gboolean,
				      gboolean, guint, GtkPackType);
extern guint16 gtk_color_selection_get_current_alpha(GtkColorSelection *);
extern void gtk_calendar_get_date(GtkCalendar *, guint *, guint *,
				  guint *);
extern GType gtk_selection_data_get_type(void);
extern GType gtk_submenu_direction_get_type(void);
extern GType gtk_icon_set_get_type(void);
extern GType gtk_cell_renderer_text_get_type(void);
extern void gtk_icon_info_free(GtkIconInfo *);
extern void gtk_window_set_focus_on_map(GtkWindow *, gboolean);
extern void gtk_window_set_transient_for(GtkWindow *, GtkWindow *);
extern void gtk_widget_class_path(GtkWidget *, guint *, gchar * *,
				  gchar * *);
extern void gtk_tree_model_row_changed(GtkTreeModel *, GtkTreePath *,
				       GtkTreeIter *);
extern gboolean gtk_tree_drag_source_drag_data_delete(GtkTreeDragSource *,
						      GtkTreePath *);
extern GType gtk_tree_model_get_column_type(GtkTreeModel *, gint);
extern void gtk_icon_view_set_columns(GtkIconView *, gint);
extern void gtk_container_child_get_valist(GtkContainer *, GtkWidget *,
					   const gchar *, va_list);
extern guchar *gtk_selection_data_get_text(GtkSelectionData *);
extern void gtk_window_resize(GtkWindow *, gint, gint);
extern void gtk_table_set_homogeneous(GtkTable *, gboolean);
extern guint gtk_quit_add_full(guint, GtkFunction, GtkCallbackMarshal,
			       gpointer, GtkDestroyNotify);
extern gboolean gtk_action_is_visible(GtkAction *);
extern GtkTextBuffer *gtk_text_iter_get_buffer(const GtkTextIter *);
extern void gtk_menu_set_screen(GtkMenu *, GdkScreen *);
extern void gtk_color_selection_set_previous_alpha(GtkColorSelection *,
						   guint16);
extern void gtk_toggle_button_set_active(GtkToggleButton *, gboolean);
extern void gtk_target_list_add_text_targets(GtkTargetList *, guint);
extern GdkEvent *gtk_get_current_event(void);
extern GType gtk_update_type_get_type(void);
extern const gchar *gtk_icon_source_get_filename(const GtkIconSource *);
extern GtkIconTheme *gtk_icon_theme_get_for_screen(GdkScreen *);
extern GtkWidget *gtk_arrow_new(GtkArrowType, GtkShadowType);
extern void gtk_text_view_buffer_to_window_coords(GtkTextView *,
						  GtkTextWindowType, gint,
						  gint, gint *, gint *);
extern GType gtk_style_get_type(void);
extern void gtk_widget_class_install_style_property_parser(GtkWidgetClass
							   *, GParamSpec *,
							   GtkRcPropertyParser);
extern GType gtk_toolbar_child_type_get_type(void);
extern GtkToolItem *gtk_toggle_tool_button_new(void);
extern GdkPixbufAnimation *gtk_image_get_animation(GtkImage *);
extern gint gtk_tree_view_column_get_spacing(GtkTreeViewColumn *);
extern GdkPixmap *gtk_tree_view_create_row_drag_icon(GtkTreeView *,
						     GtkTreePath *);
extern void gtk_file_chooser_unselect_all(GtkFileChooser *);
extern gint gtk_icon_view_get_column_spacing(GtkIconView *);
extern GtkTreeViewColumn *gtk_tree_view_get_expander_column(GtkTreeView *);
extern guint gtk_main_level(void);
extern void gtk_icon_set_add_source(GtkIconSet *, const GtkIconSource *);
extern void gtk_window_set_title(GtkWindow *, const gchar *);
extern gchar *gtk_rc_find_module_in_path(const gchar *);
extern gint gtk_text_view_get_pixels_above_lines(GtkTextView *);
extern gboolean gtk_widget_remove_accelerator(GtkWidget *, GtkAccelGroup *,
					      guint, GdkModifierType);
extern PangoLayout *gtk_widget_create_pango_layout(GtkWidget *,
						   const gchar *);
extern GtkIconSet *gtk_style_lookup_icon_set(GtkStyle *, const char *);
extern GType gtk_scrollbar_get_type(void);
extern gint gtk_box_get_spacing(GtkBox *);
extern void gtk_window_get_position(GtkWindow *, gint *, gint *);
extern GdkPixbuf *gtk_style_render_icon(GtkStyle *, const GtkIconSource *,
					GtkTextDirection, GtkStateType,
					GtkIconSize, GtkWidget *,
					const gchar *);
extern void gtk_icon_view_set_row_spacing(GtkIconView *, gint);
extern void gtk_quit_add_destroy(guint, GtkObject *);
extern GType gtk_color_selection_get_type(void);
extern gint gtk_spin_button_get_value_as_int(GtkSpinButton *);
extern gboolean gtk_label_get_single_line_mode(GtkLabel *);
extern void gtk_tool_item_set_homogeneous(GtkToolItem *, gboolean);
extern void gtk_cell_layout_pack_end(GtkCellLayout *, GtkCellRenderer *,
				     gboolean);
extern GtkWidget *gtk_file_chooser_get_preview_widget(GtkFileChooser *);
extern void gtk_window_set_resizable(GtkWindow *, gboolean);
extern void gtk_text_buffer_insert_with_tags(GtkTextBuffer *,
					     GtkTextIter *, const gchar *,
					     gint, GtkTextTag *, ...);
extern void gtk_tree_path_down(GtkTreePath *);
extern void gtk_file_selection_complete(GtkFileSelection *, const gchar *);
extern void gtk_tool_item_set_tooltip(GtkToolItem *, GtkTooltips *,
				      const gchar *, const gchar *);
extern void gtk_text_buffer_insert_range(GtkTextBuffer *, GtkTextIter *,
					 const GtkTextIter *,
					 const GtkTextIter *);
extern GType gtk_menu_get_type(void);
extern GtkTreeViewRowSeparatorFunc
gtk_tree_view_get_row_separator_func(GtkTreeView *);
extern gboolean gtk_text_view_get_overwrite(GtkTextView *);
extern void gtk_icon_theme_set_custom_theme(GtkIconTheme *, const gchar *);
extern GdkGC *gtk_gc_get(gint, GdkColormap *, GdkGCValues *,
			 GdkGCValuesMask);
extern void gtk_cell_editable_editing_done(GtkCellEditable *);
extern void gtk_combo_box_append_text(GtkComboBox *, const gchar *);
extern gboolean gtk_tree_view_get_headers_visible(GtkTreeView *);
extern gboolean gtk_window_set_default_icon_from_file(const gchar *,
						      GError * *);
extern GtkWidget *gtk_widget_ref(GtkWidget *);
extern void gtk_text_buffer_delete(GtkTextBuffer *, GtkTextIter *,
				   GtkTextIter *);
extern void gtk_tree_view_set_rules_hint(GtkTreeView *, gboolean);
extern gint gtk_text_iter_get_bytes_in_line(const GtkTextIter *);
extern void gtk_icon_theme_get_search_path(GtkIconTheme *, gchar * **,
					   gint *);
extern gchar *gtk_file_chooser_get_current_folder_uri(GtkFileChooser *);
extern void gtk_entry_completion_set_text_column(GtkEntryCompletion *,
						 gint);
extern GSList *gtk_action_get_proxies(GtkAction *);
extern GType gtk_tree_view_column_sizing_get_type(void);
extern void gtk_label_get_layout_offsets(GtkLabel *, gint *, gint *);
extern gboolean gtk_box_get_homogeneous(GtkBox *);
extern void gtk_text_view_set_left_margin(GtkTextView *, gint);
extern GType gtk_item_get_type(void);
extern gint gtk_entry_text_index_to_layout_index(GtkEntry *, gint);
extern void gtk_tree_view_get_visible_rect(GtkTreeView *, GdkRectangle *);
extern gboolean gtk_tree_model_iter_next(GtkTreeModel *, GtkTreeIter *);
extern void gtk_tree_store_move_before(GtkTreeStore *, GtkTreeIter *,
				       GtkTreeIter *);
extern void gtk_clipboard_set_text(GtkClipboard *, const gchar *, gint);
extern GList *gtk_window_list_toplevels(void);
extern void gtk_tree_model_filter_clear_cache(GtkTreeModelFilter *);
extern void gtk_notebook_prev_page(GtkNotebook *);
extern GType gtk_widget_get_type(void);
extern GType gtk_vpaned_get_type(void);
extern gint gtk_tree_view_column_get_sort_column_id(GtkTreeViewColumn *);
extern GtkTreePath
    *gtk_tree_model_sort_convert_child_path_to_path(GtkTreeModelSort *,
						    GtkTreePath *);
extern void gtk_tool_item_set_is_important(GtkToolItem *, gboolean);
extern GType gtk_menu_bar_get_type(void);
extern GtkTreeViewColumnSizing
gtk_tree_view_column_get_sizing(GtkTreeViewColumn *);
extern void gtk_text_attributes_copy_values(GtkTextAttributes *,
					    GtkTextAttributes *);
extern GType gtk_calendar_display_options_get_type(void);
extern void gtk_tree_view_column_set_cell_data_func(GtkTreeViewColumn *,
						    GtkCellRenderer *,
						    GtkTreeCellDataFunc,
						    gpointer,
						    GtkDestroyNotify);
extern void gtk_color_button_get_color(GtkColorButton *, GdkColor *);
extern GType gtk_notebook_get_type(void);
extern GtkWidget *gtk_file_chooser_dialog_new_with_backend(const gchar *,
							   GtkWindow *,
							   GtkFileChooserAction,
							   const gchar *,
							   const gchar *,
							   ...);
extern void gtk_container_forall(GtkContainer *, GtkCallback, gpointer);
extern void gtk_text_buffer_add_selection_clipboard(GtkTextBuffer *,
						    GtkClipboard *);
extern GSList *gtk_accel_groups_from_object(GObject *);
extern GtkSortType gtk_tree_view_column_get_sort_order(GtkTreeViewColumn
						       *);
extern gint gtk_notebook_insert_page(GtkNotebook *, GtkWidget *,
				     GtkWidget *, gint);
extern GType gtk_table_get_type(void);
extern GtkWidget *gtk_menu_item_get_submenu(GtkMenuItem *);
extern gboolean gtk_text_view_scroll_to_iter(GtkTextView *, GtkTextIter *,
					     gdouble, gboolean, gdouble,
					     gdouble);
extern void gtk_window_set_icon_list(GtkWindow *, GList *);
extern gboolean gtk_window_get_destroy_with_parent(GtkWindow *);
extern void gtk_container_add(GtkContainer *, GtkWidget *);
extern GtkShadowType gtk_handle_box_get_shadow_type(GtkHandleBox *);
extern GtkWidget *gtk_text_view_new(void);
extern void gtk_window_add_embedded_xid(GtkWindow *, guint);
extern gboolean gtk_label_get_use_underline(GtkLabel *);
extern gboolean gtk_text_view_starts_display_line(GtkTextView *,
						  const GtkTextIter *);
extern gdouble gtk_spin_button_get_value(GtkSpinButton *);
extern void gtk_tree_view_get_background_area(GtkTreeView *, GtkTreePath *,
					      GtkTreeViewColumn *,
					      GdkRectangle *);
extern void gtk_color_selection_get_previous_color(GtkColorSelection *,
						   GdkColor *);
extern void gtk_file_chooser_set_action(GtkFileChooser *,
					GtkFileChooserAction);
extern GtkWidget *gtk_dialog_add_button(GtkDialog *, const gchar *, gint);
extern GType gtk_label_get_type(void);
extern GType gtk_accel_group_get_type(void);
extern GtkSelectionMode gtk_icon_view_get_selection_mode(GtkIconView *);
extern GtkStyle *gtk_style_attach(GtkStyle *, GdkWindow *);
extern void gtk_item_select(GtkItem *);
extern void gtk_combo_box_set_column_span_column(GtkComboBox *, gint);
extern GtkWidget *gtk_file_selection_new(const gchar *);
extern GtkWidget *gtk_plug_new_for_display(GdkDisplay *, GdkNativeWindow);
extern GtkAccelGroup *gtk_accel_group_new(void);
extern void gtk_grab_add(GtkWidget *);
extern const gchar *gtk_about_dialog_get_logo_icon_name(GtkAboutDialog *);
extern GtkWidget *gtk_radio_menu_item_new_with_mnemonic(GSList *,
							const gchar *);
extern gboolean gtk_window_get_focus_on_map(GtkWindow *);
extern GType gtk_radio_menu_item_get_type(void);
extern const gchar *gtk_entry_get_text(GtkEntry *);
extern GtkUIManager *gtk_ui_manager_new(void);
extern gboolean gtk_action_group_get_visible(GtkActionGroup *);
extern gboolean gtk_tree_store_iter_is_valid(GtkTreeStore *,
					     GtkTreeIter *);
extern void gtk_container_child_set(GtkContainer *, GtkWidget *,
				    const gchar *, ...);
extern gboolean gtk_rc_property_parse_border(const GParamSpec *,
					     const GString *, GValue *);
extern void gtk_binding_entry_clear(GtkBindingSet *, guint,
				    GdkModifierType);
extern void gtk_menu_shell_select_first(GtkMenuShell *, gboolean);
extern void gtk_scrolled_window_set_placement(GtkScrolledWindow *,
					      GtkCornerType);
extern void gtk_frame_set_label_align(GtkFrame *, gfloat, gfloat);
extern GtkWidget *gtk_combo_box_new_text(void);
extern void gtk_text_view_add_child_at_anchor(GtkTextView *, GtkWidget *,
					      GtkTextChildAnchor *);
extern GtkWidget *gtk_vscrollbar_new(GtkAdjustment *);
extern void gtk_separator_tool_item_set_draw(GtkSeparatorToolItem *,
					     gboolean);
extern gboolean gtk_toggle_button_get_active(GtkToggleButton *);
extern void gtk_clipboard_store(GtkClipboard *);
extern const gchar *const *gtk_about_dialog_get_authors(GtkAboutDialog *);
extern GType gtk_vbutton_box_get_type(void);
extern void gtk_tree_view_column_cell_set_cell_data(GtkTreeViewColumn *,
						    GtkTreeModel *,
						    GtkTreeIter *,
						    gboolean, gboolean);
extern GType gtk_im_context_get_type(void);
extern gboolean gtk_icon_size_lookup(GtkIconSize, gint *, gint *);
extern GtkTreeView *gtk_tree_selection_get_tree_view(GtkTreeSelection *);
extern void gtk_expander_set_use_underline(GtkExpander *, gboolean);
extern GtkBindingSet *gtk_binding_set_new(const gchar *);
extern gchar *gtk_accelerator_name(guint, GdkModifierType);
extern gboolean gtk_expander_get_use_underline(GtkExpander *);
extern GtkPositionType gtk_handle_box_get_handle_position(GtkHandleBox *);
extern GSList *gtk_ui_manager_get_toplevels(GtkUIManager *,
					    GtkUIManagerItemType);
extern gboolean gtk_im_context_filter_keypress(GtkIMContext *,
					       GdkEventKey *);
extern void gtk_range_set_value(GtkRange *, gdouble);
extern gboolean
gtk_font_selection_dialog_set_font_name(GtkFontSelectionDialog *,
					const gchar *);
extern GtkStateType gtk_icon_source_get_state(const GtkIconSource *);
extern GType gtk_spin_button_update_policy_get_type(void);
extern void gtk_drag_dest_add_image_targets(GtkWidget *);
extern GtkAdjustment *gtk_layout_get_hadjustment(GtkLayout *);
extern gint gtk_notebook_page_num(GtkNotebook *, GtkWidget *);
extern void gtk_window_add_mnemonic(GtkWindow *, guint, GtkWidget *);
extern gboolean gtk_tree_view_column_get_sort_indicator(GtkTreeViewColumn
							*);
extern void gtk_tree_model_filter_set_visible_column(GtkTreeModelFilter *,
						     gint);
extern void gtk_menu_shell_append(GtkMenuShell *, GtkWidget *);
extern GType gtk_image_menu_item_get_type(void);
extern void gtk_text_tag_table_add(GtkTextTagTable *, GtkTextTag *);
extern guint16 gtk_color_button_get_alpha(GtkColorButton *);
extern void gtk_action_set_accel_path(GtkAction *, const gchar *);
extern GtkTextChildAnchor *gtk_text_child_anchor_new(void);
extern void gtk_file_chooser_set_select_multiple(GtkFileChooser *,
						 gboolean);
extern GType gtk_action_group_get_type(void);
extern void gtk_tree_view_column_pack_end(GtkTreeViewColumn *,
					  GtkCellRenderer *, gboolean);
extern const gchar *gtk_menu_get_title(GtkMenu *);
extern GtkWidget *gtk_icon_view_new(void);
extern gboolean gtk_color_selection_is_adjusting(GtkColorSelection *);
extern void gtk_tree_view_set_row_separator_func(GtkTreeView *,
						 GtkTreeViewRowSeparatorFunc,
						 gpointer,
						 GtkDestroyNotify);
extern void gtk_adjustment_set_value(GtkAdjustment *, gdouble);
extern gboolean gtk_file_chooser_get_local_only(GtkFileChooser *);
extern gboolean gtk_tree_view_get_hover_expand(GtkTreeView *);
extern gboolean gtk_combo_box_get_focus_on_click(GtkComboBox *);
extern void gtk_paned_add2(GtkPaned *, GtkWidget *);
extern GdkVisual *gtk_widget_get_visual(GtkWidget *);
extern GType gtk_tree_store_get_type(void);
extern GtkIconInfo *gtk_icon_info_copy(GtkIconInfo *);
extern void gtk_icon_set_get_sizes(GtkIconSet *, GtkIconSize * *, gint *);
extern GtkAdjustment *gtk_viewport_get_hadjustment(GtkViewport *);
extern void gtk_combo_box_insert_text(GtkComboBox *, gint, const gchar *);
extern void gtk_tree_model_sort_convert_iter_to_child_iter(GtkTreeModelSort
							   *,
							   GtkTreeIter *,
							   GtkTreeIter *);
extern gboolean gtk_scale_get_draw_value(GtkScale *);
extern gint gtk_combo_box_entry_get_text_column(GtkComboBoxEntry *);
extern GType gtk_about_dialog_get_type(void);
extern void gtk_im_context_set_use_preedit(GtkIMContext *, gboolean);
extern void gtk_list_store_insert_with_valuesv(GtkListStore *,
					       GtkTreeIter *, gint, gint *,
					       GValue *, gint);
extern void gtk_notebook_set_scrollable(GtkNotebook *, gboolean);
extern void gtk_frame_set_shadow_type(GtkFrame *, GtkShadowType);
extern gchar *gtk_editable_get_chars(GtkEditable *, gint, gint);
extern gboolean gtk_text_view_backward_display_line(GtkTextView *,
						    GtkTextIter *);
extern GType gtk_icon_theme_error_get_type(void);
extern gint gtk_paned_get_position(GtkPaned *);
extern void gtk_widget_set_extension_events(GtkWidget *, GdkExtensionMode);
extern GtkTargetList *gtk_drag_dest_get_target_list(GtkWidget *);
extern void gtk_main(void);
extern gboolean gtk_toggle_button_get_inconsistent(GtkToggleButton *);
extern gboolean gtk_alternative_dialog_button_order(GdkScreen *);
extern void gtk_window_set_mnemonic_modifier(GtkWindow *, GdkModifierType);
extern void gtk_widget_set_default_colormap(GdkColormap *);
extern gboolean gtk_accel_map_lookup_entry(const gchar *, GtkAccelKey *);
extern GtkWidget *gtk_about_dialog_new(void);
extern gboolean gtk_clipboard_set_with_data(GtkClipboard *,
					    const GtkTargetEntry *, guint,
					    GtkClipboardGetFunc,
					    GtkClipboardClearFunc,
					    gpointer);
extern GtkWidget *gtk_button_new(void);
extern GList *gtk_tree_selection_get_selected_rows(GtkTreeSelection *,
						   GtkTreeModel * *);
extern void gtk_tree_selection_select_all(GtkTreeSelection *);
extern GType gtk_menu_direction_type_get_type(void);
extern void gtk_action_set_visible(GtkAction *, gboolean);
extern GtkTooltipsData *gtk_tooltips_data_get(GtkWidget *);
extern void gtk_tree_store_move_after(GtkTreeStore *, GtkTreeIter *,
				      GtkTreeIter *);
extern void gtk_text_buffer_insert_with_tags_by_name(GtkTextBuffer *,
						     GtkTextIter *,
						     const gchar *, gint,
						     const gchar *, ...);
extern gboolean gtk_statusbar_get_has_resize_grip(GtkStatusbar *);
extern GdkGravity gtk_window_get_gravity(GtkWindow *);
extern GtkWidget *gtk_image_menu_item_new(void);
extern void gtk_button_leave(GtkButton *);
extern void gtk_text_buffer_insert_pixbuf(GtkTextBuffer *, GtkTextIter *,
					  GdkPixbuf *);
extern void gtk_action_group_add_radio_actions(GtkActionGroup *,
					       const GtkRadioActionEntry *,
					       guint, gint, GCallback,
					       gpointer);
extern GtkWidget *gtk_vscale_new_with_range(gdouble, gdouble, gdouble);
extern void gtk_text_buffer_delete_mark(GtkTextBuffer *, GtkTextMark *);
extern GType gtk_viewport_get_type(void);
extern void gtk_notebook_set_current_page(GtkNotebook *, gint);
extern void gtk_text_view_get_line_yrange(GtkTextView *,
					  const GtkTextIter *, gint *,
					  gint *);
extern gint gtk_combo_box_get_wrap_width(GtkComboBox *);
extern void gtk_image_get_pixmap(GtkImage *, GdkPixmap * *, GdkBitmap * *);
extern void gtk_show_about_dialog(GtkWindow *, const gchar *, ...);
extern gint gtk_tree_view_column_get_min_width(GtkTreeViewColumn *);
extern GtkWidget *gtk_toggle_button_new(void);
extern void gtk_drag_dest_add_uri_targets(GtkWidget *);
extern void gtk_scrolled_window_set_shadow_type(GtkScrolledWindow *,
						GtkShadowType);
extern GtkTextAttributes *gtk_text_attributes_copy(GtkTextAttributes *);
extern void gtk_combo_box_set_active_iter(GtkComboBox *, GtkTreeIter *);
extern void gtk_table_resize(GtkTable *, guint, guint);
extern GtkWidget *gtk_aspect_frame_new(const gchar *, gfloat, gfloat,
				       gfloat, gboolean);
extern gint gtk_tree_view_insert_column(GtkTreeView *, GtkTreeViewColumn *,
					gint);
extern void gtk_image_get_stock(GtkImage *, gchar * *, GtkIconSize *);
extern void gtk_label_select_region(GtkLabel *, gint, gint);
extern void gtk_tree_selection_unselect_all(GtkTreeSelection *);
extern void gtk_curve_set_gamma(GtkCurve *, gfloat);
extern void gtk_window_unfullscreen(GtkWindow *);
extern GtkWidget *gtk_button_new_with_label(const gchar *);
extern const gchar *gtk_label_get_text(GtkLabel *);
extern GtkWidget *gtk_frame_get_label_widget(GtkFrame *);
extern GtkStyle *gtk_widget_get_style(GtkWidget *);
extern GtkToolItem *gtk_tool_button_new(GtkWidget *, const gchar *);
extern void gtk_menu_item_select(GtkMenuItem *);
extern void gtk_tree_view_set_column_drag_function(GtkTreeView *,
						   GtkTreeViewColumnDropFunc,
						   gpointer,
						   GtkDestroyNotify);
extern void gtk_paint_vline(GtkStyle *, GdkWindow *, GtkStateType,
			    GdkRectangle *, GtkWidget *, const gchar *,
			    gint, gint, gint);
extern gboolean gtk_event_box_get_visible_window(GtkEventBox *);
extern gboolean gtk_tree_drag_dest_row_drop_possible(GtkTreeDragDest *,
						     GtkTreePath *,
						     GtkSelectionData *);
extern gboolean gtk_tool_item_get_is_important(GtkToolItem *);
extern void gtk_key_snooper_remove(guint);
extern void gtk_settings_set_long_property(GtkSettings *, const gchar *,
					   glong, const gchar *);
extern void gtk_action_group_add_toggle_actions(GtkActionGroup *,
						const GtkToggleActionEntry
						*, guint, gpointer);
extern void gtk_frame_set_label(GtkFrame *, const gchar *);
extern guint gtk_accel_label_get_accel_width(GtkAccelLabel *);
extern GtkTreeModel *gtk_tree_model_sort_get_model(GtkTreeModelSort *);
extern void gtk_image_menu_item_set_image(GtkImageMenuItem *, GtkWidget *);
extern GtkWidget *gtk_image_menu_item_new_with_mnemonic(const gchar *);
extern void gtk_label_set_markup_with_mnemonic(GtkLabel *, const gchar *);
extern void gtk_tooltips_disable(GtkTooltips *);
extern GType gtk_cell_renderer_pixbuf_get_type(void);
extern GtkWidget *gtk_widget_get_ancestor(GtkWidget *, GType);
extern gboolean gtk_widget_intersect(GtkWidget *, GdkRectangle *,
				     GdkRectangle *);
extern GtkWidget *gtk_toolbar_new(void);
extern void gtk_text_view_set_pixels_inside_wrap(GtkTextView *, gint);
extern void gtk_container_child_get_property(GtkContainer *, GtkWidget *,
					     const gchar *, GValue *);
extern void gtk_text_view_get_visible_rect(GtkTextView *, GdkRectangle *);
extern void gtk_cell_layout_reorder(GtkCellLayout *, GtkCellRenderer *,
				    gint);
extern GtkWidget *gtk_menu_bar_new(void);
extern GType gtk_separator_tool_item_get_type(void);
extern void gtk_button_pressed(GtkButton *);
extern gint gtk_combo_box_get_row_span_column(GtkComboBox *);
extern gboolean gtk_text_tag_event(GtkTextTag *, GObject *, GdkEvent *,
				   const GtkTextIter *);
extern GtkWidget *gtk_gamma_curve_new(void);
extern gboolean gtk_calendar_select_month(GtkCalendar *, guint, guint);
extern void gtk_window_deiconify(GtkWindow *);
extern void gtk_plug_construct(GtkPlug *, GdkNativeWindow);
extern gboolean gtk_text_iter_backward_word_starts(GtkTextIter *, gint);
extern const gchar *gtk_file_chooser_button_get_title(GtkFileChooserButton
						      *);
extern gchar *gtk_text_iter_get_slice(const GtkTextIter *,
				      const GtkTextIter *);
extern guint gtk_spin_button_get_digits(GtkSpinButton *);
extern void gtk_image_set_from_icon_set(GtkImage *, GtkIconSet *,
					GtkIconSize);
extern gboolean gtk_file_chooser_select_uri(GtkFileChooser *,
					    const char *);
extern void gtk_container_set_focus_chain(GtkContainer *, GList *);
extern void gtk_stock_item_free(GtkStockItem *);
extern void gtk_menu_popup(GtkMenu *, GtkWidget *, GtkWidget *,
			   GtkMenuPositionFunc, gpointer, guint, guint32);
extern GtkProgressBarOrientation
gtk_progress_bar_get_orientation(GtkProgressBar *);
extern void gtk_list_store_set(GtkListStore *, GtkTreeIter *, ...);
extern void gtk_action_group_set_translate_func(GtkActionGroup *,
						GtkTranslateFunc, gpointer,
						GtkDestroyNotify);
extern GtkWidget *gtk_image_new_from_stock(const gchar *, GtkIconSize);
extern void gtk_box_pack_end_defaults(GtkBox *, GtkWidget *);
extern void gtk_toolbar_set_style(GtkToolbar *, GtkToolbarStyle);
extern GtkAccelGroup *gtk_accel_group_from_accel_closure(GClosure *);
extern GType gtk_container_get_type(void);
extern void gtk_about_dialog_set_version(GtkAboutDialog *, const gchar *);
extern gboolean gtk_file_chooser_set_uri(GtkFileChooser *, const char *);
extern void gtk_tree_model_filter_refilter(GtkTreeModelFilter *);
extern void gtk_tooltips_force_window(GtkTooltips *);
extern GtkWidget *gtk_tree_view_new_with_model(GtkTreeModel *);
extern void gtk_tree_model_row_inserted(GtkTreeModel *, GtkTreePath *,
					GtkTreeIter *);
extern GdkModifierType gtk_window_get_mnemonic_modifier(GtkWindow *);
extern void gtk_tooltips_set_tip(GtkTooltips *, GtkWidget *, const gchar *,
				 const gchar *);
extern void gtk_cell_layout_set_cell_data_func(GtkCellLayout *,
					       GtkCellRenderer *,
					       GtkCellLayoutDataFunc,
					       gpointer, GDestroyNotify);
extern gboolean gtk_selection_data_set_text(GtkSelectionData *,
					    const gchar *, gint);
extern GtkTreeRowReference *gtk_tree_row_reference_new(GtkTreeModel *,
						       GtkTreePath *);
extern void gtk_widget_set_double_buffered(GtkWidget *, gboolean);
extern gint gtk_combo_box_get_active(GtkComboBox *);
extern void gtk_tool_button_set_label(GtkToolButton *, const gchar *);
extern gboolean gtk_text_iter_forward_to_line_end(GtkTextIter *);
extern gboolean gtk_clipboard_wait_for_targets(GtkClipboard *, GdkAtom * *,
					       gint *);
extern gboolean gtk_text_buffer_delete_selection(GtkTextBuffer *, gboolean,
						 gboolean);
extern void gtk_spin_button_set_wrap(GtkSpinButton *, gboolean);
extern GType gtk_input_dialog_get_type(void);
extern const gchar *gtk_file_selection_get_filename(GtkFileSelection *);
extern gboolean gtk_tree_set_row_drag_data(GtkSelectionData *,
					   GtkTreeModel *, GtkTreePath *);
extern GtkWidget *gtk_widget_get_toplevel(GtkWidget *);
extern void gtk_menu_set_accel_group(GtkMenu *, GtkAccelGroup *);
extern GType gtk_socket_get_type(void);
extern gboolean gtk_widget_set_scroll_adjustments(GtkWidget *,
						  GtkAdjustment *,
						  GtkAdjustment *);
extern void gtk_selection_data_free(GtkSelectionData *);
extern gboolean gtk_selection_data_set_uris(GtkSelectionData *, gchar * *);
extern GType gtk_text_tag_table_get_type(void);
extern void gtk_entry_completion_insert_prefix(GtkEntryCompletion *);
extern GType gtk_window_group_get_type(void);
extern void gtk_action_set_sensitive(GtkAction *, gboolean);
extern GtkTextBuffer *gtk_text_view_get_buffer(GtkTextView *);
extern gboolean gtk_icon_theme_has_icon(GtkIconTheme *, const char *);
extern void gtk_label_set_selectable(GtkLabel *, gboolean);
extern gboolean gtk_file_chooser_set_current_folder_uri(GtkFileChooser *,
							const gchar *);
extern gdouble gtk_label_get_angle(GtkLabel *);
extern GtkSettings *gtk_widget_get_settings(GtkWidget *);
extern GSList *gtk_text_iter_get_tags(const GtkTextIter *);
extern void gtk_tree_view_column_add_attribute(GtkTreeViewColumn *,
					       GtkCellRenderer *,
					       const gchar *, gint);
extern void gtk_menu_popdown(GtkMenu *);
extern void gtk_tree_model_sort_reset_default_sort_func(GtkTreeModelSort
							*);
extern void gtk_tooltips_enable(GtkTooltips *);
extern void gtk_expander_set_spacing(GtkExpander *, gint);
extern gint gtk_entry_layout_index_to_text_index(GtkEntry *, gint);
extern gdouble gtk_progress_bar_get_pulse_step(GtkProgressBar *);
extern gboolean gtk_text_iter_backward_visible_word_start(GtkTextIter *);
extern void gtk_expander_set_label(GtkExpander *, const gchar *);
extern void gtk_text_buffer_get_iter_at_line_index(GtkTextBuffer *,
						   GtkTextIter *, gint,
						   gint);
extern guint gtk_ui_manager_add_ui_from_string(GtkUIManager *,
					       const gchar *, gssize,
					       GError * *);
extern gboolean gtk_icon_info_get_embedded_rect(GtkIconInfo *,
						GdkRectangle *);
extern void gtk_widget_queue_resize(GtkWidget *);
extern GType gtk_tree_path_get_type(void);
extern void gtk_notebook_set_tab_label_text(GtkNotebook *, GtkWidget *,
					    const gchar *);
extern GtkWidget *gtk_dialog_new(void);
extern GtkIconSize gtk_toolbar_get_icon_size(GtkToolbar *);
extern void gtk_widget_hide(GtkWidget *);
extern GtkIconSet *gtk_icon_factory_lookup_default(const gchar *);
extern GtkWidget *gtk_tree_view_new(void);
extern gboolean gtk_text_iter_forward_visible_cursor_position(GtkTextIter
							      *);
extern void gtk_paint_layout(GtkStyle *, GdkWindow *, GtkStateType,
			     gboolean, GdkRectangle *, GtkWidget *,
			     const gchar *, gint, gint, PangoLayout *);
extern gboolean gtk_button_get_use_stock(GtkButton *);
extern void gtk_list_store_clear(GtkListStore *);
extern void gtk_widget_set_app_paintable(GtkWidget *, gboolean);
extern void gtk_gc_release(GdkGC *);
extern void gtk_text_view_get_iter_at_location(GtkTextView *,
					       GtkTextIter *, gint, gint);
extern gboolean gtk_text_view_backward_display_line_start(GtkTextView *,
							  GtkTextIter *);
extern void gtk_text_mark_set_visible(GtkTextMark *, gboolean);
extern gint gtk_file_chooser_button_get_width_chars(GtkFileChooserButton
						    *);
extern GType gtk_anchor_type_get_type(void);
extern gboolean gtk_tree_view_get_reorderable(GtkTreeView *);
extern GType gtk_hruler_get_type(void);
extern void gtk_icon_source_set_icon_name(GtkIconSource *, const gchar *);
extern gboolean gtk_init_with_args(int *, char ***, char *, GOptionEntry *,
				   char *, GError * *);
extern void gtk_cell_renderer_toggle_set_radio(GtkCellRendererToggle *,
					       gboolean);
extern void gtk_window_set_destroy_with_parent(GtkWindow *, gboolean);
extern gboolean gtk_entry_get_visibility(GtkEntry *);
extern GtkTreePath *gtk_tree_path_new_from_indices(gint, ...);
extern PangoEllipsizeMode gtk_progress_bar_get_ellipsize(GtkProgressBar *);
extern void gtk_list_store_insert_with_values(GtkListStore *,
					      GtkTreeIter *, gint, ...);
extern void gtk_color_button_set_color(GtkColorButton *, const GdkColor *);
extern gboolean gtk_tree_path_is_ancestor(GtkTreePath *, GtkTreePath *);
extern guint gtk_table_get_default_row_spacing(GtkTable *);
extern GtkWidget *gtk_entry_completion_get_entry(GtkEntryCompletion *);
extern GType gtk_progress_bar_get_type(void);
extern gunichar gtk_text_iter_get_char(const GtkTextIter *);
extern const gchar *gtk_color_button_get_title(GtkColorButton *);
extern GtkTargetList *gtk_drag_source_get_target_list(GtkWidget *);
extern gboolean gtk_text_iter_ends_tag(const GtkTextIter *, GtkTextTag *);
extern void gtk_cell_layout_clear(GtkCellLayout *);
extern gboolean gtk_binding_set_activate(GtkBindingSet *, guint,
					 GdkModifierType, GtkObject *);
extern void gtk_toolbar_set_drop_highlight_item(GtkToolbar *,
						GtkToolItem *, gint);
extern void gtk_curve_set_range(GtkCurve *, gfloat, gfloat, gfloat,
				gfloat);
extern void gtk_accel_group_unlock(GtkAccelGroup *);
extern void gtk_combo_box_remove_text(GtkComboBox *, gint);
extern GType gtk_message_dialog_get_type(void);
extern void gtk_button_set_relief(GtkButton *, GtkReliefStyle);
extern void gtk_file_filter_add_pattern(GtkFileFilter *, const gchar *);
extern void gtk_widget_map(GtkWidget *);
extern void gtk_container_child_get(GtkContainer *, GtkWidget *,
				    const gchar *, ...);
extern GType gtk_policy_type_get_type(void);
extern void gtk_ui_manager_ensure_update(GtkUIManager *);
extern gint gtk_notebook_insert_page_menu(GtkNotebook *, GtkWidget *,
					  GtkWidget *, GtkWidget *, gint);
extern gboolean gtk_tree_view_column_cell_get_position(GtkTreeViewColumn *,
						       GtkCellRenderer *,
						       gint *, gint *);
extern gboolean gtk_toolbar_get_show_arrow(GtkToolbar *);
extern gboolean gtk_cell_view_get_size_of_row(GtkCellView *, GtkTreePath *,
					      GtkRequisition *);
extern void gtk_curve_get_vector(GtkCurve *, int, gfloat *);
extern void gtk_drag_source_set_icon_pixbuf(GtkWidget *, GdkPixbuf *);
extern GType gtk_file_filter_get_type(void);
extern void gtk_clipboard_set_can_store(GtkClipboard *,
					const GtkTargetEntry *, gint);
extern void gtk_tree_view_tree_to_widget_coords(GtkTreeView *, gint, gint,
						gint *, gint *);
extern void gtk_tree_view_enable_model_drag_dest(GtkTreeView *,
						 const GtkTargetEntry *,
						 gint, GdkDragAction);
extern void gtk_clipboard_request_image(GtkClipboard *,
					GtkClipboardImageReceivedFunc,
					gpointer);
extern const gchar *gtk_about_dialog_get_version(GtkAboutDialog *);
extern GtkTreeModel *gtk_combo_box_get_model(GtkComboBox *);
extern GtkWidget *gtk_tool_item_retrieve_proxy_menu_item(GtkToolItem *);
extern void gtk_action_activate(GtkAction *);
extern GtkWidget *gtk_vpaned_new(void);
extern GType gtk_curve_get_type(void);
extern const gchar *gtk_label_get_label(GtkLabel *);
extern GType gtk_toggle_button_get_type(void);
extern void gtk_cell_layout_set_attributes(GtkCellLayout *,
					   GtkCellRenderer *, ...);
extern void gtk_tree_view_set_cursor_on_cell(GtkTreeView *, GtkTreePath *,
					     GtkTreeViewColumn *,
					     GtkCellRenderer *, gboolean);
extern GType gtk_file_filter_flags_get_type(void);
extern void gtk_tree_model_ref_node(GtkTreeModel *, GtkTreeIter *);
extern gchar *gtk_tree_path_to_string(GtkTreePath *);
extern gboolean gtk_rc_property_parse_enum(const GParamSpec *,
					   const GString *, GValue *);
extern void gtk_file_chooser_set_use_preview_label(GtkFileChooser *,
						   gboolean);
extern GType gtk_icon_size_get_type(void);
extern void gtk_statusbar_set_has_resize_grip(GtkStatusbar *, gboolean);
extern GtkTreeModel *gtk_entry_completion_get_model(GtkEntryCompletion *);
extern GtkPositionType gtk_notebook_get_tab_pos(GtkNotebook *);
extern GtkTreeViewRowSeparatorFunc
gtk_combo_box_get_row_separator_func(GtkComboBox *);
extern void gtk_accel_map_save(const gchar *);
extern GtkCellRenderer *gtk_cell_renderer_text_new(void);
extern void gtk_menu_set_title(GtkMenu *, const gchar *);
extern GType gtk_tool_item_get_type(void);
extern GdkWindow *gtk_text_view_get_window(GtkTextView *,
					   GtkTextWindowType);
extern void gtk_spin_button_set_update_policy(GtkSpinButton *,
					      GtkSpinButtonUpdatePolicy);
extern guint gtk_rc_parse_color(GScanner *, GdkColor *);
extern void
gtk_font_selection_dialog_set_preview_text(GtkFontSelectionDialog *,
					   const gchar *);
extern GtkAdjustment *gtk_scrolled_window_get_vadjustment(GtkScrolledWindow
							  *);
extern void gtk_menu_shell_deactivate(GtkMenuShell *);
extern char *gtk_icon_theme_get_example_icon_name(GtkIconTheme *);
extern const guint gtk_micro_version;
extern gint gtk_text_view_get_pixels_below_lines(GtkTextView *);
extern GType gtk_path_priority_type_get_type(void);
extern void gtk_window_set_accept_focus(GtkWindow *, gboolean);
extern void gtk_text_buffer_get_iter_at_offset(GtkTextBuffer *,
					       GtkTextIter *, gint);
extern void gtk_statusbar_remove(GtkStatusbar *, guint, guint);
extern gboolean gtk_menu_item_get_right_justified(GtkMenuItem *);
extern gboolean gtk_separator_tool_item_get_draw(GtkSeparatorToolItem *);
extern GtkWidget *gtk_calendar_new(void);
extern void gtk_entry_completion_set_model(GtkEntryCompletion *,
					   GtkTreeModel *);
extern void gtk_text_buffer_place_cursor(GtkTextBuffer *,
					 const GtkTextIter *);
extern void gtk_list_store_insert(GtkListStore *, GtkTreeIter *, gint);
extern gboolean gtk_events_pending(void);
extern GtkCellEditable *gtk_cell_renderer_start_editing(GtkCellRenderer *,
							GdkEvent *,
							GtkWidget *,
							const gchar *,
							GdkRectangle *,
							GdkRectangle *,
							GtkCellRendererState);
extern void gtk_cell_editable_remove_widget(GtkCellEditable *);
extern GList *gtk_widget_list_accel_closures(GtkWidget *);
extern gint *gtk_icon_theme_get_icon_sizes(GtkIconTheme *, const char *);
extern void gtk_action_group_add_actions_full(GtkActionGroup *,
					      const GtkActionEntry *,
					      guint, gpointer,
					      GDestroyNotify);
extern void gtk_spin_button_set_adjustment(GtkSpinButton *,
					   GtkAdjustment *);
extern void gtk_tree_model_sort_convert_child_iter_to_iter(GtkTreeModelSort
							   *,
							   GtkTreeIter *,
							   GtkTreeIter *);
extern GtkWidget *gtk_image_menu_item_get_image(GtkImageMenuItem *);
extern void gtk_main_quit(void);
extern void gtk_widget_size_request(GtkWidget *, GtkRequisition *);
extern void gtk_window_set_default_icon_list(GList *);
extern void gtk_widget_push_composite_child(void);
extern void gtk_paned_add1(GtkPaned *, GtkWidget *);
extern gboolean gtk_selection_data_get_targets(GtkSelectionData *,
					       GdkAtom * *, gint *);
extern GtkTextAttributes *gtk_text_view_get_default_attributes(GtkTextView
							       *);
extern GtkTreeModel *gtk_tree_model_sort_new_with_model(GtkTreeModel *);
extern GSList *gtk_radio_button_get_group(GtkRadioButton *);
extern GType gtk_sort_type_get_type(void);
extern gboolean gtk_tool_item_get_use_drag_window(GtkToolItem *);
extern gint gtk_notebook_prepend_page_menu(GtkNotebook *, GtkWidget *,
					   GtkWidget *, GtkWidget *);
extern GType gtk_tree_model_get_type(void);
extern void gtk_check_menu_item_set_inconsistent(GtkCheckMenuItem *,
						 gboolean);
extern GType gtk_tree_drag_dest_get_type(void);
extern GtkWidget *gtk_hscale_new(GtkAdjustment *);
extern void gtk_tree_view_column_set_min_width(GtkTreeViewColumn *, gint);
extern GtkAdjustment *gtk_scrolled_window_get_hadjustment(GtkScrolledWindow
							  *);
extern gboolean gtk_text_buffer_backspace(GtkTextBuffer *, GtkTextIter *,
					  gboolean, gboolean);
extern void gtk_tool_item_set_expand(GtkToolItem *, gboolean);
extern GType gtk_icon_info_get_type(void);
extern gint gtk_tree_model_iter_n_children(GtkTreeModel *, GtkTreeIter *);
extern GtkReliefStyle gtk_toolbar_get_relief_style(GtkToolbar *);
extern void gtk_button_set_image(GtkButton *, GtkWidget *);
extern void gtk_paint_shadow_gap(GtkStyle *, GdkWindow *, GtkStateType,
				 GtkShadowType, GdkRectangle *,
				 GtkWidget *, gchar *, gint, gint, gint,
				 gint, GtkPositionType, gint, gint);
extern void gtk_window_set_modal(GtkWindow *, gboolean);
extern void gtk_spin_button_get_range(GtkSpinButton *, gdouble *,
				      gdouble *);
extern gint gtk_image_get_pixel_size(GtkImage *);
extern void gtk_text_view_get_iter_location(GtkTextView *,
					    const GtkTextIter *,
					    GdkRectangle *);
extern void gtk_tree_view_row_activated(GtkTreeView *, GtkTreePath *,
					GtkTreeViewColumn *);
extern void gtk_container_set_focus_child(GtkContainer *, GtkWidget *);
extern gboolean gtk_accel_groups_activate(GObject *, guint,
					  GdkModifierType);
extern GtkTextIter *gtk_text_iter_copy(const GtkTextIter *);
extern gboolean gtk_action_is_sensitive(GtkAction *);
extern void gtk_tree_store_set_valist(GtkTreeStore *, GtkTreeIter *,
				      va_list);
extern void gtk_radio_button_set_group(GtkRadioButton *, GSList *);
extern void gtk_alignment_get_padding(GtkAlignment *, guint *, guint *,
				      guint *, guint *);
extern gboolean gtk_text_iter_starts_word(const GtkTextIter *);
extern void gtk_calendar_clear_marks(GtkCalendar *);
extern GType gtk_box_get_type(void);
extern void gtk_widget_path(GtkWidget *, guint *, gchar * *, gchar * *);
extern gboolean gtk_menu_get_tearoff_state(GtkMenu *);
extern void gtk_window_stick(GtkWindow *);
extern gint gtk_widget_get_events(GtkWidget *);
extern GType gtk_cell_renderer_state_get_type(void);
extern void gtk_text_attributes_unref(GtkTextAttributes *);
extern gboolean gtk_tree_view_column_get_resizable(GtkTreeViewColumn *);
extern void gtk_entry_completion_insert_action_markup(GtkEntryCompletion *,
						      gint, const gchar *);
extern GType gtk_ruler_get_type(void);
extern GType gtk_wrap_mode_get_type(void);
extern GType gtk_paned_get_type(void);
extern void gtk_text_view_set_cursor_visible(GtkTextView *, gboolean);
extern gboolean gtk_target_list_find(GtkTargetList *, GdkAtom, guint *);
extern GtkWidget *gtk_cell_view_new_with_text(const gchar *);
extern void gtk_editable_select_region(GtkEditable *, gint, gint);
extern gchar *gtk_clipboard_wait_for_text(GtkClipboard *);
extern gboolean gtk_color_selection_get_has_palette(GtkColorSelection *);
extern GType gtk_text_search_flags_get_type(void);
extern gint gtk_tree_view_insert_column_with_data_func(GtkTreeView *, gint,
						       const gchar *,
						       GtkCellRenderer *,
						       GtkTreeCellDataFunc,
						       gpointer,
						       GDestroyNotify);
extern GtkTextTagTable *gtk_text_tag_table_new(void);
extern gboolean gtk_notebook_get_show_border(GtkNotebook *);
extern void gtk_container_class_install_child_property(GtkContainerClass *,
						       guint,
						       GParamSpec *);
extern void gtk_font_button_set_show_style(GtkFontButton *, gboolean);
extern void gtk_cell_layout_pack_start(GtkCellLayout *, GtkCellRenderer *,
				       gboolean);
extern GtkAction *gtk_action_group_get_action(GtkActionGroup *,
					      const gchar *);
extern GtkWidget *gtk_color_selection_dialog_new(const gchar *);
extern GtkEntryCompletion *gtk_entry_get_completion(GtkEntry *);
extern GtkToggleAction *gtk_toggle_action_new(const gchar *, const gchar *,
					      const gchar *,
					      const gchar *);
extern void gtk_file_chooser_set_filter(GtkFileChooser *, GtkFileFilter *);
extern gint gtk_text_iter_get_line_offset(const GtkTextIter *);
extern void gtk_text_view_set_indent(GtkTextView *, gint);
extern void gtk_widget_set_style(GtkWidget *, GtkStyle *);
extern void gtk_toolbar_unset_style(GtkToolbar *);
extern GType gtk_hbutton_box_get_type(void);
extern GtkWidget *gtk_file_chooser_button_new(const gchar *,
					      GtkFileChooserAction);
extern void gtk_combo_box_popup(GtkComboBox *);
extern void gtk_border_free(GtkBorder *);
extern void gtk_message_dialog_format_secondary_text(GtkMessageDialog *,
						     const gchar *, ...);
extern GtkListStore *gtk_list_store_new(gint, ...);
extern void gtk_rc_style_ref(GtkRcStyle *);
extern guint32 gtk_get_current_event_time(void);
extern void gtk_container_unset_focus_chain(GtkContainer *);
extern void gtk_text_iter_set_offset(GtkTextIter *, gint);
extern void gtk_container_set_border_width(GtkContainer *, guint);
extern void gtk_selection_remove_all(GtkWidget *);
extern GtkReliefStyle gtk_tool_item_get_relief_style(GtkToolItem *);
extern void gtk_toggle_button_toggled(GtkToggleButton *);
extern void gtk_adjustment_value_changed(GtkAdjustment *);
extern gboolean gtk_widget_hide_on_delete(GtkWidget *);
extern GType gtk_container_child_type(GtkContainer *);
extern void gtk_ruler_set_range(GtkRuler *, gdouble, gdouble, gdouble,
				gdouble);
extern PangoLayout *gtk_entry_get_layout(GtkEntry *);
extern void gtk_tree_sortable_sort_column_changed(GtkTreeSortable *);
extern void gtk_menu_shell_cancel(GtkMenuShell *);
extern guint gtk_table_get_col_spacing(GtkTable *, guint);
extern const gchar *gtk_button_get_label(GtkButton *);
extern GList *gtk_ui_manager_get_action_groups(GtkUIManager *);
extern void gtk_action_group_set_sensitive(GtkActionGroup *, gboolean);
extern GtkWidget *gtk_check_button_new_with_mnemonic(const gchar *);
extern void gtk_widget_unparent(GtkWidget *);
extern void gtk_widget_add_accelerator(GtkWidget *, const gchar *,
				       GtkAccelGroup *, guint,
				       GdkModifierType, GtkAccelFlags);
extern guint gtk_ui_manager_new_merge_id(GtkUIManager *);
extern gboolean gtk_text_iter_backward_find_char(GtkTextIter *,
						 GtkTextCharPredicate,
						 gpointer,
						 const GtkTextIter *);
extern gboolean gtk_file_chooser_get_select_multiple(GtkFileChooser *);
extern gboolean gtk_event_box_get_above_child(GtkEventBox *);
extern void gtk_widget_queue_draw(GtkWidget *);
extern gboolean gtk_text_buffer_insert_interactive_at_cursor(GtkTextBuffer
							     *,
							     const gchar *,
							     gint,
							     gboolean);
extern gboolean gtk_selection_data_targets_include_image(GtkSelectionData
							 *, gboolean);
extern GtkWidget *gtk_separator_menu_item_new(void);
extern gboolean gtk_widget_mnemonic_activate(GtkWidget *, gboolean);
extern void gtk_tree_selection_select_range(GtkTreeSelection *,
					    GtkTreePath *, GtkTreePath *);
extern void gtk_file_chooser_unselect_uri(GtkFileChooser *, const char *);
extern void gtk_style_detach(GtkStyle *);
extern gboolean gtk_accel_group_disconnect_key(GtkAccelGroup *, guint,
					       GdkModifierType);
extern gboolean gtk_notebook_get_show_tabs(GtkNotebook *);
extern void gtk_file_chooser_set_preview_widget_active(GtkFileChooser *,
						       gboolean);
extern GList *gtk_window_get_default_icon_list(void);
extern gboolean gtk_text_iter_backward_lines(GtkTextIter *, gint);
extern void gtk_notebook_popup_disable(GtkNotebook *);
extern GtkTreeModel *gtk_tree_model_filter_get_model(GtkTreeModelFilter *);
extern gdouble gtk_adjustment_get_value(GtkAdjustment *);
extern GtkWidget *gtk_curve_new(void);
extern void gtk_widget_get_child_requisition(GtkWidget *,
					     GtkRequisition *);
extern gchar *gtk_rc_get_im_module_path(void);
extern void gtk_window_set_default(GtkWindow *, GtkWidget *);
extern void gtk_entry_set_text(GtkEntry *, const gchar *);
extern gboolean gtk_true(void);
extern void gtk_box_set_homogeneous(GtkBox *, gboolean);
extern void gtk_text_buffer_apply_tag(GtkTextBuffer *, GtkTextTag *,
				      const GtkTextIter *,
				      const GtkTextIter *);
extern void gtk_expander_set_use_markup(GtkExpander *, gboolean);
extern GtkWidget *gtk_tearoff_menu_item_new(void);
extern GtkImageType gtk_image_get_storage_type(GtkImage *);
extern GType gtk_text_window_type_get_type(void);
extern void gtk_text_buffer_remove_selection_clipboard(GtkTextBuffer *,
						       GtkClipboard *);
extern gboolean gtk_ui_manager_get_add_tearoffs(GtkUIManager *);
extern GtkPositionType gtk_handle_box_get_snap_edge(GtkHandleBox *);
extern void gtk_widget_get_size_request(GtkWidget *, gint *, gint *);
extern GType gtk_action_get_type(void);
extern gboolean gtk_window_get_accept_focus(GtkWindow *);
extern void gtk_spin_button_set_digits(GtkSpinButton *, guint);
extern void gtk_window_group_remove_window(GtkWindowGroup *, GtkWindow *);
extern gpointer gtk_type_class(GtkType);
extern void gtk_color_selection_set_current_color(GtkColorSelection *,
						  const GdkColor *);
extern GtkSpinButtonUpdatePolicy
gtk_spin_button_get_update_policy(GtkSpinButton *);
extern void gtk_dialog_set_default_response(GtkDialog *, gint);
extern gboolean gtk_font_button_set_font_name(GtkFontButton *,
					      const gchar *);
extern void gtk_tree_row_reference_inserted(GObject *, GtkTreePath *);
extern const gchar *gtk_tool_button_get_label(GtkToolButton *);
extern GtkWidget *gtk_menu_tool_button_get_menu(GtkMenuToolButton *);
extern void gtk_tree_view_set_headers_visible(GtkTreeView *, gboolean);
extern GList *gtk_text_child_anchor_get_widgets(GtkTextChildAnchor *);
extern gint gtk_toolbar_get_drop_index(GtkToolbar *, gint, gint);
extern void gtk_progress_bar_set_orientation(GtkProgressBar *,
					     GtkProgressBarOrientation);
extern void gtk_window_set_geometry_hints(GtkWindow *, GtkWidget *,
					  GdkGeometry *, GdkWindowHints);
extern GType gtk_progress_bar_orientation_get_type(void);
extern GtkReliefStyle gtk_button_get_relief(GtkButton *);
extern gboolean gtk_bindings_activate(GtkObject *, guint, GdkModifierType);
extern GType gtk_toolbar_style_get_type(void);
extern void gtk_menu_set_accel_path(GtkMenu *, const gchar *);
extern void gtk_alignment_set_padding(GtkAlignment *, guint, guint, guint,
				      guint);
extern GtkTreeRowReference *gtk_tree_row_reference_copy(GtkTreeRowReference
							*);
extern GtkToolItem
    *gtk_radio_tool_button_new_from_widget(GtkRadioToolButton *);
extern GType gtk_tree_model_sort_get_type(void);
extern GdkWindow *gtk_tree_view_get_bin_window(GtkTreeView *);
extern GtkToolbarStyle gtk_toolbar_get_style(GtkToolbar *);
extern void gtk_size_group_set_mode(GtkSizeGroup *, GtkSizeGroupMode);
extern GtkWidget *gtk_dialog_new_with_buttons(const gchar *, GtkWindow *,
					      GtkDialogFlags,
					      const gchar *, ...);
extern void gtk_about_dialog_set_name(GtkAboutDialog *, const gchar *);
extern void gtk_drag_source_add_image_targets(GtkWidget *);
extern void gtk_notebook_set_menu_label(GtkNotebook *, GtkWidget *,
					GtkWidget *);
extern const gchar *gtk_action_group_get_name(GtkActionGroup *);
extern gboolean gtk_text_buffer_insert_interactive(GtkTextBuffer *,
						   GtkTextIter *,
						   const gchar *, gint,
						   gboolean);
extern void gtk_table_attach_defaults(GtkTable *, GtkWidget *, guint,
				      guint, guint, guint);
extern void gtk_notebook_reorder_child(GtkNotebook *, GtkWidget *, gint);
extern void gtk_icon_source_set_state(GtkIconSource *, GtkStateType);
extern GType gtk_tree_model_filter_get_type(void);
extern void gtk_window_add_accel_group(GtkWindow *, GtkAccelGroup *);
extern void gtk_ruler_draw_ticks(GtkRuler *);
extern GtkIconSize gtk_icon_size_from_name(const gchar *);
extern void gtk_combo_box_set_model(GtkComboBox *, GtkTreeModel *);
extern GdkPixbuf *gtk_icon_set_render_icon(GtkIconSet *, GtkStyle *,
					   GtkTextDirection, GtkStateType,
					   GtkIconSize, GtkWidget *,
					   const char *);
extern void gtk_tree_selection_selected_foreach(GtkTreeSelection *,
						GtkTreeSelectionForeachFunc,
						gpointer);
extern GType gtk_cell_layout_get_type(void);
extern void gtk_text_iter_set_visible_line_offset(GtkTextIter *, gint);
extern gboolean gtk_rc_property_parse_requisition(const GParamSpec *,
						  const GString *,
						  GValue *);
extern GType gtk_combo_box_get_type(void);
extern GtkFileFilter *gtk_file_filter_new(void);
extern gdouble gtk_range_get_value(GtkRange *);
extern GtkWidget *gtk_event_box_new(void);
extern gboolean gtk_list_store_iter_is_valid(GtkListStore *,
					     GtkTreeIter *);
extern GtkIconInfo *gtk_icon_theme_lookup_icon(GtkIconTheme *,
					       const gchar *, gint,
					       GtkIconLookupFlags);
extern GType gtk_tree_model_flags_get_type(void);
extern void gtk_draw_insertion_cursor(GtkWidget *, GdkDrawable *,
				      GdkRectangle *, GdkRectangle *,
				      gboolean, GtkTextDirection,
				      gboolean);
extern GtkWindowGroup *gtk_window_group_new(void);
extern GtkFileFilter *gtk_file_chooser_get_filter(GtkFileChooser *);
extern void gtk_label_set_use_underline(GtkLabel *, gboolean);
extern gboolean gtk_tree_view_column_cell_is_visible(GtkTreeViewColumn *);
extern gint gtk_tree_model_get_n_columns(GtkTreeModel *);
extern GtkTreeStore *gtk_tree_store_new(gint, ...);
extern GType gtk_frame_get_type(void);
extern gboolean gtk_file_chooser_remove_shortcut_folder_uri(GtkFileChooser
							    *,
							    const char *,
							    GError * *);
extern gboolean gtk_text_iter_backward_sentence_start(GtkTextIter *);
extern void gtk_text_view_set_wrap_mode(GtkTextView *, GtkWrapMode);
extern gboolean gtk_accelerator_valid(guint, GdkModifierType);
extern void gtk_text_buffer_end_user_action(GtkTextBuffer *);
extern GtkToolItem *gtk_toolbar_get_nth_item(GtkToolbar *, gint);
extern gboolean gtk_file_chooser_select_filename(GtkFileChooser *,
						 const gchar *);
extern void gtk_combo_box_set_row_span_column(GtkComboBox *, gint);
extern GType gtk_relief_style_get_type(void);
extern gboolean gtk_tree_path_is_descendant(GtkTreePath *, GtkTreePath *);
extern void gtk_drag_highlight(GtkWidget *);
extern gboolean gtk_file_selection_get_select_multiple(GtkFileSelection *);
extern gboolean gtk_toggle_action_get_draw_as_radio(GtkToggleAction *);
extern void gtk_icon_view_select_all(GtkIconView *);
extern void gtk_button_get_alignment(GtkButton *, gfloat *, gfloat *);
extern void gtk_spin_button_set_range(GtkSpinButton *, gdouble, gdouble);
extern gint gtk_tree_view_append_column(GtkTreeView *,
					GtkTreeViewColumn *);
extern void gtk_quit_remove_by_data(gpointer);
extern const gchar *gtk_about_dialog_get_website_label(GtkAboutDialog *);
extern void gtk_list_store_insert_before(GtkListStore *, GtkTreeIter *,
					 GtkTreeIter *);
extern const guint gtk_minor_version;
extern void gtk_statusbar_pop(GtkStatusbar *, guint);
extern gboolean gtk_tree_selection_get_selected(GtkTreeSelection *,
						GtkTreeModel * *,
						GtkTreeIter *);
extern void gtk_drag_get_data(GtkWidget *, GdkDragContext *, GdkAtom,
			      guint32);
extern const gchar *gtk_frame_get_label(GtkFrame *);
extern GtkWidget
    *gtk_radio_button_new_with_label_from_widget(GtkRadioButton *,
						 const gchar *);
extern void gtk_text_view_get_iter_at_position(GtkTextView *,
					       GtkTextIter *, gint *, gint,
					       gint);
extern GtkTreeViewSearchEqualFunc
gtk_tree_view_get_search_equal_func(GtkTreeView *);
extern gboolean gtk_selection_data_set_pixbuf(GtkSelectionData *,
					      GdkPixbuf *);
extern GtkMetricType gtk_ruler_get_metric(GtkRuler *);
extern void gtk_window_set_keep_above(GtkWindow *, gboolean);
extern void gtk_im_context_simple_add_table(GtkIMContextSimple *,
					    guint16 *, gint, gint);
extern PangoLayout *gtk_scale_get_layout(GtkScale *);
extern AtkObject *gtk_combo_box_get_popup_accessible(GtkComboBox *);
extern GType gtk_radio_button_get_type(void);
extern gint gtk_notebook_prepend_page(GtkNotebook *, GtkWidget *,
				      GtkWidget *);
extern gint gtk_text_view_get_indent(GtkTextView *);
extern gint gtk_text_view_get_border_window_size(GtkTextView *,
						 GtkTextWindowType);
extern GdkPixbuf *gtk_text_iter_get_pixbuf(const GtkTextIter *);
extern const gchar *gtk_notebook_get_tab_label_text(GtkNotebook *,
						    GtkWidget *);
extern GtkFileChooserAction gtk_file_chooser_get_action(GtkFileChooser *);
extern void gtk_frame_get_label_align(GtkFrame *, gfloat *, gfloat *);
extern GtkIconSet *gtk_icon_set_ref(GtkIconSet *);
extern GType gtk_hpaned_get_type(void);
extern void gtk_about_dialog_set_website_label(GtkAboutDialog *,
					       const gchar *);
extern GtkIconFactory *gtk_icon_factory_new(void);
extern GtkCellRenderer *gtk_cell_renderer_combo_new(void);
extern GtkTreeModel *gtk_tree_model_filter_new(GtkTreeModel *,
					       GtkTreePath *);
extern GtkTargetList *gtk_target_list_new(const GtkTargetEntry *, guint);
extern gboolean gtk_text_view_move_visually(GtkTextView *, GtkTextIter *,
					    gint);
extern GList *gtk_container_get_children(GtkContainer *);
extern GType gtk_tree_iter_get_type(void);
extern GType gtk_toggle_action_get_type(void);
extern void gtk_check_menu_item_set_draw_as_radio(GtkCheckMenuItem *,
						  gboolean);
extern void gtk_clipboard_request_targets(GtkClipboard *,
					  GtkClipboardTargetsReceivedFunc,
					  gpointer);
extern void gtk_icon_view_set_item_width(GtkIconView *, gint);
extern void gtk_tree_view_set_headers_clickable(GtkTreeView *, gboolean);
extern GtkCornerType gtk_scrolled_window_get_placement(GtkScrolledWindow
						       *);
extern void gtk_text_view_set_tabs(GtkTextView *, PangoTabArray *);
extern void gtk_menu_tool_button_set_menu(GtkMenuToolButton *,
					  GtkWidget *);
extern void gtk_window_unmaximize(GtkWindow *);
extern void gtk_widget_modify_font(GtkWidget *, PangoFontDescription *);
extern void gtk_toggle_tool_button_set_active(GtkToggleToolButton *,
					      gboolean);
extern GtkTreePath
    *gtk_tree_model_filter_convert_path_to_child_path(GtkTreeModelFilter *,
						      GtkTreePath *);
extern GObject *gtk_clipboard_get_owner(GtkClipboard *);
extern void gtk_text_view_set_pixels_below_lines(GtkTextView *, gint);
extern void gtk_text_view_set_pixels_above_lines(GtkTextView *, gint);
extern void gtk_font_button_set_show_size(GtkFontButton *, gboolean);
extern void gtk_paint_resize_grip(GtkStyle *, GdkWindow *, GtkStateType,
				  GdkRectangle *, GtkWidget *,
				  const gchar *, GdkWindowEdge, gint, gint,
				  gint, gint);
extern void gtk_widget_show_all(GtkWidget *);
extern void gtk_widget_set_name(GtkWidget *, const gchar *);
extern void gtk_action_disconnect_proxy(GtkAction *, GtkWidget *);
extern void gtk_image_set_pixel_size(GtkImage *, gint);
extern GList *gtk_tree_view_column_get_cell_renderers(GtkTreeViewColumn *);
extern GType gtk_arrow_type_get_type(void);
extern void gtk_accel_group_connect_by_path(GtkAccelGroup *, const gchar *,
					    GClosure *);
extern void gtk_tree_view_scroll_to_point(GtkTreeView *, gint, gint);
extern GtkTreePath *gtk_tree_model_get_path(GtkTreeModel *, GtkTreeIter *);
extern void gtk_menu_shell_prepend(GtkMenuShell *, GtkWidget *);
extern void gtk_image_set_from_image(GtkImage *, GdkImage *, GdkBitmap *);
extern GType gtk_widget_help_type_get_type(void);
extern GType gtk_corner_type_get_type(void);
extern void gtk_tree_row_reference_deleted(GObject *, GtkTreePath *);
extern GtkWidget *gtk_combo_box_new(void);
extern GtkAdjustment *gtk_viewport_get_vadjustment(GtkViewport *);
extern gboolean gtk_text_iter_inside_sentence(const GtkTextIter *);
extern void gtk_action_group_add_action_with_accel(GtkActionGroup *,
						   GtkAction *,
						   const gchar *);
extern GSList *gtk_file_chooser_get_uris(GtkFileChooser *);
extern gboolean gtk_window_is_active(GtkWindow *);
extern void gtk_settings_set_double_property(GtkSettings *, const gchar *,
					     gdouble, const gchar *);
extern GtkTextBuffer *gtk_text_mark_get_buffer(GtkTextMark *);
extern GType gtk_scrolled_window_get_type(void);
extern gboolean gtk_text_iter_equal(const GtkTextIter *,
				    const GtkTextIter *);
extern void gtk_window_group_add_window(GtkWindowGroup *, GtkWindow *);
extern GtkAccelGroup *gtk_menu_get_accel_group(GtkMenu *);
extern gchar *gtk_rc_get_module_dir(void);
extern void gtk_color_button_set_alpha(GtkColorButton *, guint16);
extern void gtk_table_attach(GtkTable *, GtkWidget *, guint, guint, guint,
			     guint, GtkAttachOptions, GtkAttachOptions,
			     guint, guint);
extern void gtk_menu_reorder_child(GtkMenu *, GtkWidget *, gint);
extern gboolean gtk_widget_event(GtkWidget *, GdkEvent *);
extern gchar *gtk_font_selection_get_font_name(GtkFontSelection *);
extern GdkPixbuf *gtk_icon_info_load_icon(GtkIconInfo *, GError * *);
extern gboolean gtk_label_get_selection_bounds(GtkLabel *, gint *, gint *);
extern void gtk_icon_factory_remove_default(GtkIconFactory *);
extern void gtk_tree_store_swap(GtkTreeStore *, GtkTreeIter *,
				GtkTreeIter *);
extern void gtk_color_selection_set_has_palette(GtkColorSelection *,
						gboolean);
extern void gtk_tree_path_next(GtkTreePath *);
extern void gtk_action_unblock_activate_from(GtkAction *, GtkWidget *);
extern void gtk_notebook_set_tab_pos(GtkNotebook *, GtkPositionType);
extern void gtk_icon_source_set_filename(GtkIconSource *, const gchar *);
extern void gtk_progress_bar_set_text(GtkProgressBar *, const gchar *);
extern GtkWidget *gtk_invisible_new_for_screen(GdkScreen *);
extern gboolean gtk_tree_view_get_enable_search(GtkTreeView *);
extern gboolean gtk_tree_store_is_ancestor(GtkTreeStore *, GtkTreeIter *,
					   GtkTreeIter *);
extern GtkWidget *gtk_button_get_image(GtkButton *);
extern void gtk_tool_button_set_stock_id(GtkToolButton *, const gchar *);
extern GtkWidget *gtk_font_selection_dialog_new(const gchar *);
extern void gtk_drag_source_set_icon(GtkWidget *, GdkColormap *,
				     GdkPixmap *, GdkBitmap *);
extern void gtk_file_chooser_set_local_only(GtkFileChooser *, gboolean);
extern void gtk_text_buffer_remove_all_tags(GtkTextBuffer *,
					    const GtkTextIter *,
					    const GtkTextIter *);
extern gfloat gtk_entry_get_alignment(GtkEntry *);
extern GSList *gtk_text_iter_get_toggled_tags(const GtkTextIter *,
					      gboolean);
extern gchar *gtk_text_buffer_get_text(GtkTextBuffer *,
				       const GtkTextIter *,
				       const GtkTextIter *, gboolean);
extern void gtk_progress_bar_set_pulse_step(GtkProgressBar *, gdouble);
extern GtkTreePath *gtk_cell_view_get_displayed_row(GtkCellView *);
extern GtkTreePath *gtk_tree_path_copy(const GtkTreePath *);
extern GQuark gtk_icon_theme_error_quark(void);
extern void gtk_disable_setlocale(void);
extern GSList *gtk_radio_tool_button_get_group(GtkRadioToolButton *);
extern GType gtk_accel_flags_get_type(void);
extern gboolean gtk_window_get_skip_taskbar_hint(GtkWindow *);
extern void gtk_widget_style_get_valist(GtkWidget *, const gchar *,
					va_list);
extern GType gtk_message_type_get_type(void);
extern GType gtk_icon_lookup_flags_get_type(void);
extern gint gtk_text_iter_get_chars_in_line(const GtkTextIter *);
extern void gtk_clipboard_request_text(GtkClipboard *,
				       GtkClipboardTextReceivedFunc,
				       gpointer);
extern GType gtk_tree_selection_get_type(void);
extern void gtk_text_buffer_cut_clipboard(GtkTextBuffer *, GtkClipboard *,
					  gboolean);
extern void gtk_tree_view_widget_to_tree_coords(GtkTreeView *, gint, gint,
						gint *, gint *);
extern gboolean gtk_list_store_remove(GtkListStore *, GtkTreeIter *);
extern void gtk_drag_dest_unset(GtkWidget *);
extern GType gtk_accel_label_get_type(void);
extern gboolean gtk_text_iter_ends_line(const GtkTextIter *);
extern void gtk_spin_button_set_numeric(GtkSpinButton *, gboolean);
extern gboolean gtk_text_iter_backward_chars(GtkTextIter *, gint);
extern void gtk_tree_view_column_cell_get_size(GtkTreeViewColumn *,
					       GdkRectangle *, gint *,
					       gint *, gint *, gint *);
extern GtkTreePath *gtk_tree_path_new_from_string(const gchar *);
extern GScanner *gtk_rc_scanner_new(void);
extern GtkWidget *gtk_combo_box_entry_new(void);
extern GtkWidget
    *gtk_radio_button_new_with_mnemonic_from_widget(GtkRadioButton *,
						    const gchar *);
extern GType gtk_tree_sortable_get_type(void);
extern GtkTextTag *gtk_text_tag_new(const gchar *);
extern GtkWidget *gtk_hbutton_box_new(void);
extern GType gtk_alignment_get_type(void);
extern GtkTreeRowReference *gtk_tree_row_reference_new_proxy(GObject *,
							     GtkTreeModel
							     *,
							     GtkTreePath
							     *);
extern const gchar *gtk_about_dialog_get_license(GtkAboutDialog *);
extern GtkWidget *gtk_check_menu_item_new(void);
extern GType gtk_size_group_mode_get_type(void);
extern gboolean gtk_calendar_unmark_day(GtkCalendar *, guint);
extern GtkWidget *gtk_label_get_mnemonic_widget(GtkLabel *);
extern void gtk_button_set_focus_on_click(GtkButton *, gboolean);
extern void gtk_combo_box_prepend_text(GtkComboBox *, const gchar *);
extern void gtk_tree_store_set(GtkTreeStore *, GtkTreeIter *, ...);
extern GType gtk_im_preedit_style_get_type(void);
extern gboolean gtk_get_current_event_state(GdkModifierType *);
extern GType gtk_handle_box_get_type(void);
extern void gtk_tree_model_sort_clear_cache(GtkTreeModelSort *);
extern void gtk_selection_clear_targets(GtkWidget *, GdkAtom);
extern void gtk_about_dialog_set_comments(GtkAboutDialog *, const gchar *);
extern void gtk_list_store_append(GtkListStore *, GtkTreeIter *);
extern gboolean gtk_tool_item_get_visible_horizontal(GtkToolItem *);
extern void gtk_window_set_default_size(GtkWindow *, gint, gint);
extern void gtk_drag_set_icon_stock(GdkDragContext *, const gchar *, gint,
				    gint);
extern void gtk_paned_set_position(GtkPaned *, gint);
extern void gtk_tree_view_column_set_sort_order(GtkTreeViewColumn *,
						GtkSortType);
extern GtkWidget *gtk_image_new_from_icon_set(GtkIconSet *, GtkIconSize);
extern GType gtk_image_get_type(void);
extern GtkTextDirection gtk_widget_get_default_direction(void);
extern GtkWidget *gtk_color_button_new(void);
extern void gtk_paint_hline(GtkStyle *, GdkWindow *, GtkStateType,
			    GdkRectangle *, GtkWidget *, const gchar *,
			    gint, gint, gint);
extern void gtk_menu_item_toggle_size_request(GtkMenuItem *, gint *);
extern void gtk_size_group_remove_widget(GtkSizeGroup *, GtkWidget *);
extern GtkClipboard *gtk_widget_get_clipboard(GtkWidget *, GdkAtom);
extern void gtk_scale_set_draw_value(GtkScale *, gboolean);
extern void gtk_frame_set_label_widget(GtkFrame *, GtkWidget *);
extern GType gtk_check_button_get_type(void);
extern void gtk_widget_show(GtkWidget *);
extern void gtk_adjustment_changed(GtkAdjustment *);
extern gboolean gtk_text_iter_forward_visible_word_ends(GtkTextIter *,
							gint);
extern void gtk_entry_set_has_frame(GtkEntry *, gboolean);
extern GtkWidget *gtk_hbox_new(gboolean, gint);
extern PangoContext *gtk_widget_get_pango_context(GtkWidget *);
extern GtkAccelKey *gtk_accel_group_find(GtkAccelGroup *,
					 GtkAccelGroupFindFunc, gpointer);
extern const gchar *gtk_font_button_get_font_name(GtkFontButton *);
extern void gtk_entry_completion_set_inline_completion(GtkEntryCompletion
						       *, gboolean);
extern gboolean gtk_toggle_tool_button_get_active(GtkToggleToolButton *);
extern gchar *gtk_widget_get_composite_name(GtkWidget *);
extern GType gtk_ui_manager_item_type_get_type(void);
extern void gtk_tree_sortable_set_sort_column_id(GtkTreeSortable *, gint,
						 GtkSortType);
extern void gtk_tree_path_append_index(GtkTreePath *, gint);
extern GtkToolItem *gtk_radio_tool_button_new_from_stock(GSList *,
							 const gchar *);
extern void gtk_image_get_icon_name(GtkImage *, const gchar * *,
				    GtkIconSize *);
extern GtkIconSource *gtk_icon_source_copy(const GtkIconSource *);
extern void gtk_icon_view_set_text_column(GtkIconView *, gint);
extern void gtk_label_set_justify(GtkLabel *, GtkJustification);
extern void gtk_tree_view_column_set_attributes(GtkTreeViewColumn *,
						GtkCellRenderer *, ...);
extern void gtk_box_pack_start(GtkBox *, GtkWidget *, gboolean, gboolean,
			       guint);
extern const gchar *const *gtk_about_dialog_get_artists(GtkAboutDialog *);
extern void gtk_label_set_markup(GtkLabel *, const gchar *);
extern GdkPixbuf *gtk_icon_info_get_builtin_pixbuf(GtkIconInfo *);
extern gboolean gtk_text_iter_starts_sentence(const GtkTextIter *);
extern void gtk_tree_view_set_destroy_count_func(GtkTreeView *,
						 GtkTreeDestroyCountFunc,
						 gpointer,
						 GtkDestroyNotify);
extern GType gtk_expander_get_type(void);
extern void gtk_list_store_move_before(GtkListStore *, GtkTreeIter *,
				       GtkTreeIter *);
extern gboolean gtk_tree_view_column_get_visible(GtkTreeViewColumn *);
extern GType gtk_text_buffer_get_type(void);
extern void gtk_file_chooser_add_filter(GtkFileChooser *, GtkFileFilter *);
extern gint gtk_text_tag_table_get_size(GtkTextTagTable *);
extern GType gtk_attach_options_get_type(void);
extern gboolean gtk_rc_reparse_all_for_settings(GtkSettings *, gboolean);
extern gunichar gtk_entry_get_invisible_char(GtkEntry *);
extern GType gtk_text_view_get_type(void);
extern gboolean gtk_text_iter_is_end(const GtkTextIter *);
extern GdkPixbuf *gtk_icon_source_get_pixbuf(const GtkIconSource *);
extern gboolean gtk_text_iter_forward_word_end(GtkTextIter *);
extern GType gtk_menu_shell_get_type(void);
extern const gchar *gtk_tool_button_get_stock_id(GtkToolButton *);
extern GtkTextMark *gtk_text_buffer_get_mark(GtkTextBuffer *,
					     const gchar *);
extern gboolean gtk_icon_view_path_is_selected(GtkIconView *,
					       GtkTreePath *);
extern GtkCellRenderer *gtk_cell_renderer_pixbuf_new(void);
extern gchar *gtk_file_chooser_get_current_folder(GtkFileChooser *);
extern gboolean gtk_selection_owner_set(GtkWidget *, GdkAtom, guint32);
extern void gtk_window_get_size(GtkWindow *, gint *, gint *);
extern void gtk_binding_entry_add_signall(GtkBindingSet *, guint,
					  GdkModifierType, const gchar *,
					  GSList *);
extern PangoLanguage *gtk_text_iter_get_language(const GtkTextIter *);
extern void gtk_dialog_add_buttons(GtkDialog *, const gchar *, ...);
extern void gtk_action_disconnect_accelerator(GtkAction *);
extern char *gtk_file_chooser_get_preview_uri(GtkFileChooser *);
extern void gtk_requisition_free(GtkRequisition *);
extern GSList *gtk_text_iter_get_marks(const GtkTextIter *);
extern GType gtk_delete_type_get_type(void);
extern void gtk_box_reorder_child(GtkBox *, GtkWidget *, gint);
extern GtkWidget *gtk_menu_item_new_with_mnemonic(const gchar *);
extern void gtk_item_deselect(GtkItem *);
extern gboolean gtk_file_chooser_get_show_hidden(GtkFileChooser *);
extern GType gtk_hscrollbar_get_type(void);
extern GtkStyle *gtk_widget_get_default_style(void);
extern GtkToolItem
    *gtk_radio_tool_button_new_with_stock_from_widget(GtkRadioToolButton *,
						      const gchar *);
extern void gtk_tree_view_get_drag_dest_row(GtkTreeView *, GtkTreePath * *,
					    GtkTreeViewDropPosition *);
extern GSList *gtk_radio_action_get_group(GtkRadioAction *);
extern void gtk_drag_finish(GdkDragContext *, gboolean, gboolean, guint32);
extern GType gtk_button_box_get_type(void);
extern void gtk_binding_entry_remove(GtkBindingSet *, guint,
				     GdkModifierType);
extern GtkWidget *gtk_accel_label_get_accel_widget(GtkAccelLabel *);
extern gboolean gtk_accel_map_change_entry(const gchar *, guint,
					   GdkModifierType, gboolean);
extern gboolean gtk_cell_renderer_toggle_get_active(GtkCellRendererToggle
						    *);
extern void gtk_cell_renderer_get_size(GtkCellRenderer *, GtkWidget *,
				       GdkRectangle *, gint *, gint *,
				       gint *, gint *);
extern void gtk_layout_put(GtkLayout *, GtkWidget *, gint, gint);
extern void gtk_widget_set_parent(GtkWidget *, GtkWidget *);
extern gboolean gtk_text_iter_forward_lines(GtkTextIter *, gint);
extern gboolean gtk_expander_get_use_markup(GtkExpander *);
extern gboolean gtk_main_iteration(void);
extern void gtk_tree_view_column_set_sort_column_id(GtkTreeViewColumn *,
						    gint);
extern gboolean gtk_text_mark_get_deleted(GtkTextMark *);
extern GtkWidget *gtk_combo_box_new_with_model(GtkTreeModel *);
extern GtkWidget *gtk_icon_view_new_with_model(GtkTreeModel *);
extern GType gtk_side_type_get_type(void);
extern void gtk_settings_install_property(GParamSpec *);
extern void gtk_image_get_image(GtkImage *, GdkImage * *, GdkBitmap * *);
extern GType gtk_entry_get_type(void);
extern GType gtk_file_selection_get_type(void);
extern void gtk_calendar_set_display_options(GtkCalendar *,
					     GtkCalendarDisplayOptions);
extern gboolean
gtk_entry_completion_get_popup_completion(GtkEntryCompletion *);
extern void gtk_widget_pop_composite_child(void);
extern gboolean gtk_text_iter_forward_cursor_position(GtkTextIter *);
extern void gtk_drag_dest_set_target_list(GtkWidget *, GtkTargetList *);
extern GtkTextAttributes *gtk_text_attributes_new(void);
extern void gtk_paned_pack2(GtkPaned *, GtkWidget *, gboolean, gboolean);
extern void gtk_aspect_frame_set(GtkAspectFrame *, gfloat, gfloat, gfloat,
				 gboolean);
extern void gtk_propagate_event(GtkWidget *, GdkEvent *);
extern void gtk_rc_style_unref(GtkRcStyle *);
extern void gtk_tree_path_prepend_index(GtkTreePath *, gint);
extern void gtk_text_buffer_delete_mark_by_name(GtkTextBuffer *,
						const gchar *);
extern GtkToolItem *gtk_separator_tool_item_new(void);
extern void gtk_ruler_draw_pos(GtkRuler *);
extern void gtk_im_context_focus_in(GtkIMContext *);
extern void gtk_widget_shape_combine_mask(GtkWidget *, GdkBitmap *, gint,
					  gint);
extern gint gtk_dialog_run(GtkDialog *);
extern gboolean gtk_cell_renderer_toggle_get_radio(GtkCellRendererToggle
						   *);
extern GType gtk_entry_completion_get_type(void);
extern void gtk_tree_model_get_value(GtkTreeModel *, GtkTreeIter *, gint,
				     GValue *);
extern GType gtk_pack_type_get_type(void);
extern GtkTreePath *gtk_tree_row_reference_get_path(GtkTreeRowReference *);
extern void gtk_file_filter_add_custom(GtkFileFilter *, GtkFileFilterFlags,
				       GtkFileFilterFunc, gpointer,
				       GDestroyNotify);
extern void gtk_window_move(GtkWindow *, gint, gint);
extern void gtk_tree_store_set_column_types(GtkTreeStore *, gint, GType *);
extern gboolean gtk_text_buffer_insert_range_interactive(GtkTextBuffer *,
							 GtkTextIter *,
							 const GtkTextIter
							 *,
							 const GtkTextIter
							 *, gboolean);
extern gboolean gtk_color_selection_palette_from_string(const gchar *,
							GdkColor * *,
							gint *);
extern void gtk_text_buffer_get_iter_at_mark(GtkTextBuffer *,
					     GtkTextIter *, GtkTextMark *);
extern GType gtk_target_flags_get_type(void);
extern void gtk_text_view_move_child(GtkTextView *, GtkWidget *, gint,
				     gint);
extern void gtk_binding_entry_add_signal(GtkBindingSet *, guint,
					 GdkModifierType, const gchar *,
					 guint, ...);
extern void gtk_text_iter_set_line(GtkTextIter *, gint);
extern void gtk_text_buffer_set_text(GtkTextBuffer *, const gchar *, gint);
extern void gtk_window_set_default_icon_name(const gchar *);
extern const char *gtk_expander_get_label(GtkExpander *);
extern gpointer gtk_tree_selection_get_user_data(GtkTreeSelection *);
extern GtkWidget *gtk_button_new_from_stock(const gchar *);
extern void gtk_text_iter_set_line_index(GtkTextIter *, gint);
extern GType gtk_radio_action_get_type(void);
extern GtkAdjustment *gtk_tree_view_get_vadjustment(GtkTreeView *);
extern void gtk_label_set_line_wrap(GtkLabel *, gboolean);
extern gchar *gtk_accelerator_get_label(guint, GdkModifierType);
extern void gtk_socket_add_id(GtkSocket *, GdkNativeWindow);
extern GtkWidget *gtk_font_selection_new(void);
extern void gtk_text_iter_order(GtkTextIter *, GtkTextIter *);
extern GtkWidget *gtk_radio_menu_item_new_from_widget(GtkRadioMenuItem *);
extern gint gtk_text_iter_get_visible_line_index(const GtkTextIter *);
extern gboolean gtk_widget_get_child_visible(GtkWidget *);
extern void gtk_about_dialog_set_documenters(GtkAboutDialog *,
					     const gchar * *);
extern GtkToolItem *gtk_menu_tool_button_new_from_stock(const gchar *);
extern void gtk_accel_map_save_fd(gint);
extern void gtk_tree_sortable_set_default_sort_func(GtkTreeSortable *,
						    GtkTreeIterCompareFunc,
						    gpointer,
						    GtkDestroyNotify);
extern GType gtk_text_tag_get_type(void);
extern gboolean gtk_widget_child_focus(GtkWidget *, GtkDirectionType);
extern void gtk_tree_view_set_drag_dest_row(GtkTreeView *, GtkTreePath *,
					    GtkTreeViewDropPosition);
extern void gtk_layout_set_vadjustment(GtkLayout *, GtkAdjustment *);
extern void gtk_text_view_scroll_to_mark(GtkTextView *, GtkTextMark *,
					 gdouble, gboolean, gdouble,
					 gdouble);
extern const gchar *gtk_about_dialog_get_translator_credits(GtkAboutDialog
							    *);
extern gboolean gtk_notebook_get_scrollable(GtkNotebook *);
extern gboolean gtk_text_iter_forward_word_ends(GtkTextIter *, gint);
extern void gtk_tree_view_column_set_clickable(GtkTreeViewColumn *,
					       gboolean);
extern void gtk_ui_manager_insert_action_group(GtkUIManager *,
					       GtkActionGroup *, gint);
extern void gtk_text_iter_free(GtkTextIter *);
extern GdkPixbuf *gtk_clipboard_wait_for_image(GtkClipboard *);
extern void gtk_im_multicontext_append_menuitems(GtkIMMulticontext *,
						 GtkMenuShell *);
extern gint gtk_tree_view_column_get_max_width(GtkTreeViewColumn *);
extern GdkDisplay *gtk_widget_get_display(GtkWidget *);
extern void gtk_scrolled_window_add_with_viewport(GtkScrolledWindow *,
						  GtkWidget *);
extern GType gtk_justification_get_type(void);
extern void gtk_file_selection_show_fileop_buttons(GtkFileSelection *);
extern void gtk_widget_set_size_request(GtkWidget *, gint, gint);
extern const gchar *gtk_about_dialog_get_copyright(GtkAboutDialog *);
extern void gtk_window_begin_move_drag(GtkWindow *, gint, gint, gint,
				       guint32);
extern void gtk_range_set_adjustment(GtkRange *, GtkAdjustment *);
extern gboolean gtk_text_iter_is_cursor_position(const GtkTextIter *);
extern gboolean gtk_text_iter_ends_sentence(const GtkTextIter *);
extern gboolean gtk_text_view_forward_display_line(GtkTextView *,
						   GtkTextIter *);
extern void gtk_item_toggle(GtkItem *);
extern gint gtk_tree_path_compare(const GtkTreePath *,
				  const GtkTreePath *);
extern GtkWidget *gtk_paned_get_child1(GtkPaned *);
extern GType gtk_rc_style_get_type(void);
extern gint gtk_text_view_get_right_margin(GtkTextView *);
extern void gtk_paint_extension(GtkStyle *, GdkWindow *, GtkStateType,
				GtkShadowType, GdkRectangle *, GtkWidget *,
				gchar *, gint, gint, gint, gint,
				GtkPositionType);
extern void gtk_icon_source_set_state_wildcarded(GtkIconSource *,
						 gboolean);
extern guint16 gtk_color_selection_get_previous_alpha(GtkColorSelection *);
extern gboolean gtk_file_chooser_set_current_folder(GtkFileChooser *,
						    const gchar *);
extern GdkNativeWindow gtk_plug_get_id(GtkPlug *);
extern GtkAdjustment *gtk_range_get_adjustment(GtkRange *);
extern GType gtk_ui_manager_get_type(void);
extern void gtk_color_selection_set_has_opacity_control(GtkColorSelection
							*, gboolean);
extern gboolean gtk_drag_check_threshold(GtkWidget *, gint, gint, gint,
					 gint);
extern GtkWidget *gtk_paned_get_child2(GtkPaned *);
extern void gtk_icon_view_set_orientation(GtkIconView *, GtkOrientation);
extern void gtk_font_button_set_use_size(GtkFontButton *, gboolean);
extern gboolean gtk_file_chooser_add_shortcut_folder(GtkFileChooser *,
						     const char *,
						     GError * *);
extern void gtk_text_buffer_get_iter_at_child_anchor(GtkTextBuffer *,
						     GtkTextIter *,
						     GtkTextChildAnchor *);
extern void gtk_stock_add_static(const GtkStockItem *, guint);
extern GtkStyle *gtk_style_copy(GtkStyle *);
extern GtkWidget *gtk_file_chooser_button_new_with_dialog(GtkWidget *);
extern void gtk_tree_store_reorder(GtkTreeStore *, GtkTreeIter *, gint *);
extern gboolean gtk_window_parse_geometry(GtkWindow *, const gchar *);
extern void gtk_icon_source_set_direction_wildcarded(GtkIconSource *,
						     gboolean);
extern void gtk_im_context_reset(GtkIMContext *);
extern GType gtk_debug_flag_get_type(void);
extern void gtk_tree_path_free(GtkTreePath *);
extern GtkRcStyle *gtk_widget_get_modifier_style(GtkWidget *);
extern void gtk_icon_source_set_direction(GtkIconSource *,
					  GtkTextDirection);
extern GtkTreeViewColumn *gtk_tree_view_get_column(GtkTreeView *, gint);
extern GtkWidget *gtk_notebook_new(void);
extern void gtk_window_unstick(GtkWindow *);
extern GParamSpec *gtk_widget_class_find_style_property(GtkWidgetClass *,
							const gchar *);
extern void gtk_combo_box_set_wrap_width(GtkComboBox *, gint);
extern void gtk_spin_button_set_increments(GtkSpinButton *, gdouble,
					   gdouble);
extern GtkAdjustment *gtk_tree_view_get_hadjustment(GtkTreeView *);
extern void gtk_window_set_icon(GtkWindow *, GdkPixbuf *);
extern gint gtk_text_view_get_pixels_inside_wrap(GtkTextView *);
extern void gtk_icon_factory_add(GtkIconFactory *, const gchar *,
				 GtkIconSet *);
extern void gtk_container_propagate_expose(GtkContainer *, GtkWidget *,
					   GdkEventExpose *);
extern void gtk_list_store_move_after(GtkListStore *, GtkTreeIter *,
				      GtkTreeIter *);
extern GtkWidget *gtk_color_selection_new(void);
extern GtkOrientation gtk_tool_item_get_orientation(GtkToolItem *);
extern GtkTextAttributes *gtk_text_attributes_ref(GtkTextAttributes *);
extern void gtk_label_set_use_markup(GtkLabel *, gboolean);
extern GtkWidget *gtk_message_dialog_new(GtkWindow *, GtkDialogFlags,
					 GtkMessageType, GtkButtonsType,
					 const gchar *, ...);
extern GType gtk_hseparator_get_type(void);
extern void gtk_menu_set_active(GtkMenu *, guint);
extern gboolean gtk_text_buffer_get_modified(GtkTextBuffer *);
extern void gtk_icon_view_select_path(GtkIconView *, GtkTreePath *);
extern gboolean gtk_widget_can_activate_accel(GtkWidget *, guint);
extern void gtk_box_pack_end(GtkBox *, GtkWidget *, gboolean, gboolean,
			     guint);
extern gboolean gtk_dialog_get_has_separator(GtkDialog *);
extern void gtk_tree_store_insert(GtkTreeStore *, GtkTreeIter *,
				  GtkTreeIter *, gint);
extern GType gtk_position_type_get_type(void);
extern gboolean gtk_file_chooser_remove_shortcut_folder(GtkFileChooser *,
							const char *,
							GError * *);
extern gboolean gtk_text_iter_forward_visible_word_end(GtkTextIter *);
extern gboolean gtk_tool_item_get_homogeneous(GtkToolItem *);
extern gboolean gtk_parse_args(int *, char ***);
extern void gtk_window_set_screen(GtkWindow *, GdkScreen *);
extern GtkJustification gtk_text_view_get_justification(GtkTextView *);
extern void gtk_container_remove(GtkContainer *, GtkWidget *);
extern void gtk_range_set_increments(GtkRange *, gdouble, gdouble);
extern void gtk_action_group_add_action(GtkActionGroup *, GtkAction *);
extern void gtk_icon_theme_append_search_path(GtkIconTheme *,
					      const gchar *);
extern void gtk_widget_destroyed(GtkWidget *, GtkWidget * *);
extern void gtk_image_set_from_file(GtkImage *, const gchar *);
extern gint gtk_icon_view_get_pixbuf_column(GtkIconView *);
extern void gtk_size_group_add_widget(GtkSizeGroup *, GtkWidget *);
extern gboolean gtk_tree_view_column_get_expand(GtkTreeViewColumn *);
extern GtkWidget *gtk_menu_new(void);
extern GType gtk_window_get_type(void);
extern GType gtk_range_get_type(void);
extern void gtk_rc_parse_string(const gchar *);
extern GType gtk_progress_bar_style_get_type(void);
extern void gtk_container_set_focus_hadjustment(GtkContainer *,
						GtkAdjustment *);
extern void gtk_accel_map_foreach(gpointer, GtkAccelMapForeach);
extern gchar **gtk_file_selection_get_selections(GtkFileSelection *);
extern gboolean gtk_spin_button_get_wrap(GtkSpinButton *);
extern GType gtk_dialog_get_type(void);
extern GType gtk_misc_get_type(void);
extern void gtk_selection_add_target(GtkWidget *, GdkAtom, GdkAtom, guint);
extern GtkWidget *gtk_file_chooser_dialog_new(const gchar *, GtkWindow *,
					      GtkFileChooserAction,
					      const gchar *, ...);
extern void gtk_quit_remove(guint);
extern GtkSizeGroupMode gtk_size_group_get_mode(GtkSizeGroup *);
extern void gtk_action_group_set_translation_domain(GtkActionGroup *,
						    const gchar *);
extern void gtk_notebook_remove_page(GtkNotebook *, gint);
extern const gchar *gtk_font_button_get_title(GtkFontButton *);
extern void gtk_file_filter_add_pixbuf_formats(GtkFileFilter *);
extern void gtk_editable_cut_clipboard(GtkEditable *);
extern void gtk_tree_view_column_set_expand(GtkTreeViewColumn *, gboolean);
extern void gtk_widget_thaw_child_notify(GtkWidget *);
extern void gtk_label_set_attributes(GtkLabel *, PangoAttrList *);
extern void gtk_ui_manager_remove_ui(GtkUIManager *, guint);
extern gboolean gtk_text_iter_forward_chars(GtkTextIter *, gint);
extern void gtk_entry_set_invisible_char(GtkEntry *, gunichar);
extern void gtk_text_view_set_border_window_size(GtkTextView *,
						 GtkTextWindowType, gint);
extern void gtk_notebook_query_tab_label_packing(GtkNotebook *,
						 GtkWidget *, gboolean *,
						 gboolean *,
						 GtkPackType *);
extern GtkWidget
    *gtk_radio_menu_item_new_with_mnemonic_from_widget(GtkRadioMenuItem *,
						       const gchar *);
extern GtkWidget *gtk_toggle_button_new_with_label(const gchar *);
extern GType gtk_buttons_type_get_type(void);
extern void gtk_text_buffer_apply_tag_by_name(GtkTextBuffer *,
					      const gchar *,
					      const GtkTextIter *,
					      const GtkTextIter *);
extern void gtk_accel_group_connect(GtkAccelGroup *, guint,
				    GdkModifierType, GtkAccelFlags,
				    GClosure *);
extern gchar *gtk_text_iter_get_visible_text(const GtkTextIter *,
					     const GtkTextIter *);
extern gboolean gtk_stock_lookup(const gchar *, GtkStockItem *);
extern void gtk_label_set_mnemonic_widget(GtkLabel *, GtkWidget *);
extern void gtk_tree_view_collapse_all(GtkTreeView *);
extern void gtk_action_set_accel_group(GtkAction *, GtkAccelGroup *);
extern void gtk_ui_manager_add_ui(GtkUIManager *, guint, const gchar *,
				  const gchar *, const gchar *,
				  GtkUIManagerItemType, gboolean);
extern GtkWidget *gtk_check_menu_item_new_with_label(const gchar *);
extern void gtk_window_set_default_icon(GdkPixbuf *);
extern gboolean gtk_tree_selection_iter_is_selected(GtkTreeSelection *,
						    GtkTreeIter *);
extern void gtk_scrolled_window_get_policy(GtkScrolledWindow *,
					   GtkPolicyType *,
					   GtkPolicyType *);
extern void gtk_adjustment_clamp_page(GtkAdjustment *, gdouble, gdouble);
extern void gtk_about_dialog_set_translator_credits(GtkAboutDialog *,
						    const gchar *);
extern void gtk_menu_item_remove_submenu(GtkMenuItem *);
extern GtkResizeMode gtk_container_get_resize_mode(GtkContainer *);
extern GtkWidget *gtk_menu_item_new_with_label(const gchar *);
extern gboolean gtk_tree_sortable_has_default_sort_func(GtkTreeSortable *);
extern void gtk_accel_map_foreach_unfiltered(gpointer, GtkAccelMapForeach);
extern GType gtk_editable_get_type(void);
extern void gtk_widget_show_now(GtkWidget *);
extern GtkColorSelectionChangePaletteWithScreenFunc
gtk_color_selection_set_change_palette_with_screen_hook
(GtkColorSelectionChangePaletteWithScreenFunc);
extern void gtk_entry_completion_complete(GtkEntryCompletion *);
extern gboolean gtk_tree_get_row_drag_data(GtkSelectionData *,
					   GtkTreeModel * *,
					   GtkTreePath * *);
extern gchar *gtk_rc_get_im_module_file(void);
extern void gtk_text_view_get_line_at_y(GtkTextView *, GtkTextIter *, gint,
					gint *);
extern GtkToolbarStyle gtk_tool_item_get_toolbar_style(GtkToolItem *);
extern gint gtk_tree_view_column_get_fixed_width(GtkTreeViewColumn *);
extern const gchar *gtk_icon_source_get_icon_name(const GtkIconSource *);
extern GtkStyle *gtk_rc_get_style_by_paths(GtkSettings *, const char *,
					   const char *, GType);
extern gint gtk_text_view_get_left_margin(GtkTextView *);
extern void gtk_target_list_remove(GtkTargetList *, GdkAtom);
extern void gtk_stock_add(const GtkStockItem *, guint);
extern void gtk_progress_bar_pulse(GtkProgressBar *);
extern void gtk_scale_set_value_pos(GtkScale *, GtkPositionType);
extern void gtk_label_set_max_width_chars(GtkLabel *, gint);
extern gint gtk_label_get_width_chars(GtkLabel *);
extern GtkWidget *gtk_viewport_new(GtkAdjustment *, GtkAdjustment *);
extern void gtk_tree_store_insert_after(GtkTreeStore *, GtkTreeIter *,
					GtkTreeIter *, GtkTreeIter *);
extern GType gtk_font_selection_dialog_get_type(void);
extern void gtk_accel_map_load_fd(gint);
extern void gtk_editable_delete_selection(GtkEditable *);
extern GtkShadowType gtk_viewport_get_shadow_type(GtkViewport *);
extern GType gtk_color_button_get_type(void);
extern void gtk_container_set_reallocate_redraws(GtkContainer *, gboolean);
extern void gtk_menu_shell_select_item(GtkMenuShell *, GtkWidget *);
extern void gtk_toggle_button_set_mode(GtkToggleButton *, gboolean);
extern gint *gtk_tree_path_get_indices(GtkTreePath *);
extern void gtk_target_list_add_image_targets(GtkTargetList *, guint,
					      gboolean);
extern GtkSelectionMode gtk_tree_selection_get_mode(GtkTreeSelection *);
extern GType gtk_arrow_get_type(void);
extern gboolean gtk_clipboard_wait_is_image_available(GtkClipboard *);
extern void gtk_icon_view_set_pixbuf_column(GtkIconView *, gint);
extern gint gtk_notebook_get_n_pages(GtkNotebook *);
extern gboolean gtk_text_iter_forward_find_char(GtkTextIter *,
						GtkTextCharPredicate,
						gpointer,
						const GtkTextIter *);
extern GList *gtk_window_get_icon_list(GtkWindow *);
extern void gtk_entry_set_width_chars(GtkEntry *, gint);
extern GtkTreePath *gtk_tree_path_new_first(void);
extern void gtk_im_context_set_cursor_location(GtkIMContext *,
					       GdkRectangle *);
extern void gtk_text_view_add_child_in_window(GtkTextView *, GtkWidget *,
					      GtkTextWindowType, gint,
					      gint);
extern void gtk_tree_view_scroll_to_cell(GtkTreeView *, GtkTreePath *,
					 GtkTreeViewColumn *, gboolean,
					 gfloat, gfloat);
extern void gtk_editable_set_position(GtkEditable *, gint);
extern gint gtk_expander_get_spacing(GtkExpander *);
extern void gtk_widget_add_events(GtkWidget *, gint);
extern void gtk_tool_item_set_use_drag_window(GtkToolItem *, gboolean);
extern gint gtk_tree_path_get_depth(GtkTreePath *);
extern void gtk_spin_button_update(GtkSpinButton *);
extern gboolean gtk_accel_group_disconnect(GtkAccelGroup *, GClosure *);
extern void gtk_clipboard_request_contents(GtkClipboard *, GdkAtom,
					   GtkClipboardReceivedFunc,
					   gpointer);
extern void gtk_tree_view_get_cell_area(GtkTreeView *, GtkTreePath *,
					GtkTreeViewColumn *,
					GdkRectangle *);
extern GType gtk_combo_box_entry_get_type(void);
extern GtkTextTagTable *gtk_text_buffer_get_tag_table(GtkTextBuffer *);
extern gboolean gtk_tree_model_get_iter(GtkTreeModel *, GtkTreeIter *,
					GtkTreePath *);
extern void gtk_window_remove_accel_group(GtkWindow *, GtkAccelGroup *);
extern gint gtk_notebook_append_page(GtkNotebook *, GtkWidget *,
				     GtkWidget *);
extern void gtk_container_set_focus_vadjustment(GtkContainer *,
						GtkAdjustment *);
extern void gtk_window_reshow_with_initial_size(GtkWindow *);
extern void gtk_viewport_set_hadjustment(GtkViewport *, GtkAdjustment *);
extern gboolean gtk_text_iter_backward_to_tag_toggle(GtkTextIter *,
						     GtkTextTag *);
extern void gtk_entry_completion_insert_action_text(GtkEntryCompletion *,
						    gint, const gchar *);
extern void gtk_editable_copy_clipboard(GtkEditable *);
extern GtkTextMark *gtk_text_buffer_create_mark(GtkTextBuffer *,
						const gchar *,
						const GtkTextIter *,
						gboolean);
extern GType gtk_scroll_type_get_type(void);
extern void gtk_ui_manager_set_add_tearoffs(GtkUIManager *, gboolean);
extern void gtk_paint_flat_box(GtkStyle *, GdkWindow *, GtkStateType,
			       GtkShadowType, GdkRectangle *, GtkWidget *,
			       const gchar *, gint, gint, gint, gint);
extern void gtk_tree_view_get_cursor(GtkTreeView *, GtkTreePath * *,
				     GtkTreeViewColumn * *);
extern GtkWidget *gtk_label_new(const gchar *);
extern void gtk_widget_remove_mnemonic_label(GtkWidget *, GtkWidget *);
extern GType gtk_size_group_get_type(void);
extern void gtk_text_buffer_insert_child_anchor(GtkTextBuffer *,
						GtkTextIter *,
						GtkTextChildAnchor *);
extern void gtk_text_iter_forward_to_end(GtkTextIter *);
extern void gtk_tree_view_column_set_sort_indicator(GtkTreeViewColumn *,
						    gboolean);
extern void gtk_widget_destroy(GtkWidget *);
extern void gtk_widget_class_install_style_property(GtkWidgetClass *,
						    GParamSpec *);
extern GType gtk_icon_factory_get_type(void);
extern gboolean gtk_text_buffer_get_selection_bounds(GtkTextBuffer *,
						     GtkTextIter *,
						     GtkTextIter *);
extern void gtk_widget_set_composite_name(GtkWidget *, const gchar *);
extern GtkWidget *gtk_vseparator_new(void);
extern GtkFileFilterFlags gtk_file_filter_get_needed(GtkFileFilter *);
extern gint gtk_entry_get_width_chars(GtkEntry *);
extern GtkWidget *gtk_get_event_widget(GdkEvent *);
extern void gtk_tree_view_column_set_title(GtkTreeViewColumn *,
					   const gchar *);
extern gboolean gtk_text_iter_toggles_tag(const GtkTextIter *,
					  GtkTextTag *);
extern void gtk_icon_factory_add_default(GtkIconFactory *);
extern void gtk_about_dialog_set_authors(GtkAboutDialog *,
					 const gchar * *);
extern void gtk_expander_set_expanded(GtkExpander *, gboolean);
extern void gtk_container_foreach(GtkContainer *, GtkCallback, gpointer);
extern void gtk_notebook_popup_enable(GtkNotebook *);
extern void gtk_widget_set_child_visible(GtkWidget *, gboolean);
extern GtkPositionType gtk_scale_get_value_pos(GtkScale *);
extern void gtk_target_list_unref(GtkTargetList *);
extern GType gtk_rc_flags_get_type(void);
extern void gtk_dialog_set_response_sensitive(GtkDialog *, gint, gboolean);
extern void gtk_paint_slider(GtkStyle *, GdkWindow *, GtkStateType,
			     GtkShadowType, GdkRectangle *, GtkWidget *,
			     const gchar *, gint, gint, gint, gint,
			     GtkOrientation);
extern void gtk_notebook_set_tab_label(GtkNotebook *, GtkWidget *,
				       GtkWidget *);
extern void gtk_list_store_set_valist(GtkListStore *, GtkTreeIter *,
				      va_list);
extern void gtk_widget_grab_default(GtkWidget *);
extern gboolean gtk_table_get_homogeneous(GtkTable *);
extern GtkWidget *gtk_layout_new(GtkAdjustment *, GtkAdjustment *);
extern void gtk_accel_label_set_accel_closure(GtkAccelLabel *, GClosure *);
extern void gtk_tree_view_map_expanded_rows(GtkTreeView *,
					    GtkTreeViewMappingFunc,
					    gpointer);
extern void gtk_tree_model_filter_set_visible_func(GtkTreeModelFilter *,
						   GtkTreeModelFilterVisibleFunc,
						   gpointer,
						   GtkDestroyNotify);
extern void gtk_tree_view_set_model(GtkTreeView *, GtkTreeModel *);
extern gboolean gtk_icon_source_get_state_wildcarded(const GtkIconSource
						     *);
extern void gtk_icon_theme_add_builtin_icon(const gchar *, gint,
					    GdkPixbuf *);
extern GtkWidget *gtk_socket_new(void);
extern GtkWidget *gtk_drawing_area_new(void);
extern void gtk_selection_data_set(GtkSelectionData *, GdkAtom, gint,
				   const guchar *, gint);
extern gboolean gtk_text_iter_backward_cursor_position(GtkTextIter *);
extern PangoContext *gtk_widget_create_pango_context(GtkWidget *);
extern void gtk_cell_view_set_model(GtkCellView *, GtkTreeModel *);
extern gboolean gtk_clipboard_wait_is_target_available(GtkClipboard *,
						       GdkAtom);
extern gboolean gtk_window_get_modal(GtkWindow *);
extern void gtk_tree_view_column_clicked(GtkTreeViewColumn *);
extern void gtk_menu_set_monitor(GtkMenu *, gint);
extern gboolean gtk_text_iter_forward_sentence_end(GtkTextIter *);
extern gboolean gtk_button_box_get_child_secondary(GtkButtonBox *,
						   GtkWidget *);
extern GtkObject *gtk_adjustment_new(gdouble, gdouble, gdouble, gdouble,
				     gdouble, gdouble);
extern GtkWidget *gtk_cell_view_new(void);
extern gboolean gtk_combo_box_get_add_tearoffs(GtkComboBox *);
extern gboolean gtk_text_iter_forward_cursor_positions(GtkTextIter *,
						       gint);
extern void gtk_window_set_type_hint(GtkWindow *, GdkWindowTypeHint);
extern void gtk_dialog_set_has_separator(GtkDialog *, gboolean);
extern GtkWidget *gtk_fixed_new(void);
extern void gtk_tree_view_enable_model_drag_source(GtkTreeView *,
						   GdkModifierType,
						   const GtkTargetEntry *,
						   gint, GdkDragAction);
extern void gtk_button_set_label(GtkButton *, const gchar *);
extern void gtk_text_view_scroll_mark_onscreen(GtkTextView *,
					       GtkTextMark *);
extern gchar *gtk_tree_model_get_string_from_iter(GtkTreeModel *,
						  GtkTreeIter *);
extern void gtk_viewport_set_vadjustment(GtkViewport *, GtkAdjustment *);
extern GtkIconSize gtk_icon_source_get_size(const GtkIconSource *);
extern void gtk_init_add(GtkFunction, gpointer);
extern GtkOrientation gtk_icon_view_get_orientation(GtkIconView *);
extern gint gtk_icon_view_get_markup_column(GtkIconView *);
extern void gtk_scrolled_window_set_vadjustment(GtkScrolledWindow *,
						GtkAdjustment *);
extern void gtk_icon_view_set_model(GtkIconView *, GtkTreeModel *);
extern void gtk_widget_set_state(GtkWidget *, GtkStateType);
extern void gtk_event_box_set_above_child(GtkEventBox *, gboolean);
extern gboolean gtk_tree_path_prev(GtkTreePath *);
extern GType gtk_tree_view_get_type(void);
extern void gtk_action_connect_proxy(GtkAction *, GtkWidget *);
extern gboolean gtk_tree_view_get_dest_row_at_pos(GtkTreeView *, gint,
						  gint, GtkTreePath * *,
						  GtkTreeViewDropPosition
						  *);
extern void gtk_tree_view_column_set_max_width(GtkTreeViewColumn *, gint);
extern GtkTreeViewColumn *gtk_tree_view_column_new(void);
extern void gtk_tree_view_column_clear(GtkTreeViewColumn *);
extern void gtk_menu_tool_button_set_arrow_tooltip(GtkMenuToolButton *,
						   GtkTooltips *,
						   const gchar *,
						   const gchar *);
extern GtkSettings *gtk_settings_get_default(void);
extern gboolean gtk_text_iter_backward_search(const GtkTextIter *,
					      const gchar *,
					      GtkTextSearchFlags,
					      GtkTextIter *, GtkTextIter *,
					      const GtkTextIter *);
extern void gtk_object_destroy(GtkObject *);
extern gchar *gtk_text_buffer_get_slice(GtkTextBuffer *,
					const GtkTextIter *,
					const GtkTextIter *, gboolean);
extern gboolean gtk_text_iter_backward_char(GtkTextIter *);
extern void gtk_tree_view_column_set_spacing(GtkTreeViewColumn *, gint);
extern gboolean gtk_action_get_sensitive(GtkAction *);
extern gboolean gtk_tree_view_collapse_row(GtkTreeView *, GtkTreePath *);
extern void gtk_color_selection_set_previous_color(GtkColorSelection *,
						   const GdkColor *);
extern gboolean gtk_label_get_selectable(GtkLabel *);
extern const gchar *gtk_file_filter_get_name(GtkFileFilter *);
extern gboolean gtk_font_button_get_show_size(GtkFontButton *);
extern void gtk_radio_action_set_group(GtkRadioAction *, GSList *);
extern GtkWidget *gtk_hscale_new_with_range(gdouble, gdouble, gdouble);
extern GtkWidget *gtk_check_menu_item_new_with_mnemonic(const gchar *);
extern GType gtk_path_type_get_type(void);
extern gboolean gtk_accel_label_refetch(GtkAccelLabel *);
extern gboolean gtk_im_context_get_surrounding(GtkIMContext *, gchar * *,
					       gint *);
extern void gtk_text_buffer_insert(GtkTextBuffer *, GtkTextIter *,
				   const gchar *, gint);
extern GtkWidget *gtk_toggle_button_new_with_mnemonic(const gchar *);
extern void gtk_tree_selection_select_path(GtkTreeSelection *,
					   GtkTreePath *);
extern guint gtk_accelerator_get_default_mod_mask(void);
extern GtkWidget *gtk_notebook_get_tab_label(GtkNotebook *, GtkWidget *);
extern gboolean gtk_text_iter_inside_word(const GtkTextIter *);
extern void gtk_box_query_child_packing(GtkBox *, GtkWidget *, gboolean *,
					gboolean *, guint *,
					GtkPackType *);
extern void gtk_rc_add_default_file(const gchar *);
extern void gtk_spin_button_set_value(GtkSpinButton *, gdouble);
extern gboolean gtk_window_get_has_frame(GtkWindow *);
extern void gtk_color_button_set_title(GtkColorButton *, const gchar *);
extern void gtk_text_buffer_copy_clipboard(GtkTextBuffer *,
					   GtkClipboard *);
extern void gtk_widget_realize(GtkWidget *);
extern GType gtk_im_status_style_get_type(void);
extern void gtk_icon_view_item_activated(GtkIconView *, GtkTreePath *);
extern gint gtk_scale_get_digits(GtkScale *);
extern GtkTreeModel *gtk_tree_view_get_model(GtkTreeView *);
extern guint gtk_quit_add(guint, GtkFunction, gpointer);
extern void gtk_tool_button_set_use_underline(GtkToolButton *, gboolean);
extern gboolean gtk_window_activate_key(GtkWindow *, GdkEventKey *);
extern GtkWidget *gtk_drag_get_source_widget(GdkDragContext *);
extern guint gtk_statusbar_get_context_id(GtkStatusbar *, const gchar *);
extern gboolean gtk_file_chooser_get_use_preview_label(GtkFileChooser *);
extern void gtk_icon_set_unref(GtkIconSet *);
extern void gtk_tree_store_insert_before(GtkTreeStore *, GtkTreeIter *,
					 GtkTreeIter *, GtkTreeIter *);
extern void gtk_button_box_set_layout(GtkButtonBox *, GtkButtonBoxStyle);
extern void gtk_label_set_pattern(GtkLabel *, const gchar *);
extern GType gtk_toggle_tool_button_get_type(void);
extern GtkWidget *gtk_tree_view_column_get_widget(GtkTreeViewColumn *);
extern GtkWidget *gtk_radio_button_new_with_mnemonic(GSList *,
						     const gchar *);
extern void gtk_clipboard_clear(GtkClipboard *);
extern void gtk_misc_get_alignment(GtkMisc *, gfloat *, gfloat *);
extern void gtk_tree_store_set_value(GtkTreeStore *, GtkTreeIter *, gint,
				     GValue *);
extern GType gtk_font_selection_get_type(void);
extern GParamSpec **gtk_container_class_list_child_properties(GObjectClass
							      *, guint *);
extern void gtk_tree_model_row_has_child_toggled(GtkTreeModel *,
						 GtkTreePath *,
						 GtkTreeIter *);
extern GType gtk_vbox_get_type(void);
extern void gtk_drag_set_icon_pixbuf(GdkDragContext *, GdkPixbuf *, gint,
				     gint);
extern void gtk_text_view_set_overwrite(GtkTextView *, gboolean);
extern void gtk_combo_box_set_row_separator_func(GtkComboBox *,
						 GtkTreeViewRowSeparatorFunc,
						 gpointer,
						 GtkDestroyNotify);
extern GType gtk_cell_renderer_progress_get_type(void);
extern gboolean gtk_fixed_get_has_window(GtkFixed *);
extern gboolean gtk_editable_get_selection_bounds(GtkEditable *, gint *,
						  gint *);
extern gboolean gtk_icon_theme_rescan_if_needed(GtkIconTheme *);
extern void gtk_accel_map_add_entry(const gchar *, guint, GdkModifierType);
extern void gtk_text_iter_set_line_offset(GtkTextIter *, gint);
extern void gtk_icon_source_set_size(GtkIconSource *, GtkIconSize);
extern gboolean gtk_window_has_toplevel_focus(GtkWindow *);
extern void gtk_menu_item_deselect(GtkMenuItem *);
extern void gtk_accel_label_set_accel_widget(GtkAccelLabel *, GtkWidget *);
extern gboolean gtk_main_iteration_do(gboolean);
extern GtkIconTheme *gtk_icon_theme_get_default(void);
extern void gtk_drag_dest_set(GtkWidget *, GtkDestDefaults,
			      const GtkTargetEntry *, gint, GdkDragAction);
extern gchar *gtk_rc_find_pixmap_in_path(GtkSettings *, GScanner *,
					 const gchar *);
extern void gtk_style_apply_default_background(GtkStyle *, GdkWindow *,
					       gboolean, GtkStateType,
					       GdkRectangle *, gint, gint,
					       gint, gint);
extern GType gtk_file_chooser_dialog_get_type(void);
extern gboolean gtk_tree_model_iter_parent(GtkTreeModel *, GtkTreeIter *,
					   GtkTreeIter *);
extern GtkWidget *gtk_vscale_new(GtkAdjustment *);
extern GtkWidget *gtk_spin_button_new_with_range(gdouble, gdouble,
						 gdouble);
extern GtkWidget *gtk_image_new(void);
extern GtkIMContext *gtk_im_multicontext_new(void);
extern void gtk_tree_view_column_set_sizing(GtkTreeViewColumn *,
					    GtkTreeViewColumnSizing);
extern GtkWidget *gtk_radio_button_new_with_label(GSList *, const gchar *);
extern GtkTreePath *gtk_icon_view_get_path_at_pos(GtkIconView *, gint,
						  gint);
extern gboolean gtk_tree_view_column_get_clickable(GtkTreeViewColumn *);
extern void gtk_editable_insert_text(GtkEditable *, const gchar *, gint,
				     gint *);
extern guint gtk_key_snooper_install(GtkKeySnoopFunc, gpointer);
extern void gtk_object_sink(GtkObject *);
extern void gtk_widget_style_get(GtkWidget *, const gchar *, ...);
extern GList *gtk_icon_theme_list_icons(GtkIconTheme *, const char *);
extern void gtk_cell_renderer_get_fixed_size(GtkCellRenderer *, gint *,
					     gint *);
extern void gtk_button_released(GtkButton *);
extern void gtk_icon_source_set_size_wildcarded(GtkIconSource *, gboolean);
extern void gtk_window_begin_resize_drag(GtkWindow *, GdkWindowEdge, gint,
					 gint, gint, guint32);
extern gboolean gtk_text_iter_forward_to_tag_toggle(GtkTextIter *,
						    GtkTextTag *);
extern gboolean gtk_tree_selection_path_is_selected(GtkTreeSelection *,
						    GtkTreePath *);
extern void gtk_window_set_wmclass(GtkWindow *, const gchar *,
				   const gchar *);
extern GtkWidget *gtk_action_create_icon(GtkAction *, GtkIconSize);
extern gboolean gtk_text_iter_backward_line(GtkTextIter *);
extern gchar
    *gtk_font_selection_dialog_get_font_name(GtkFontSelectionDialog *);
extern GType gtk_cell_renderer_toggle_get_type(void);
extern void gtk_tree_model_rows_reordered(GtkTreeModel *, GtkTreePath *,
					  GtkTreeIter *, gint *);
extern PangoLayout *gtk_label_get_layout(GtkLabel *);
extern gboolean gtk_tree_view_get_path_at_pos(GtkTreeView *, gint, gint,
					      GtkTreePath * *,
					      GtkTreeViewColumn * *,
					      gint *, gint *);
extern gboolean gtk_combo_box_get_active_iter(GtkComboBox *,
					      GtkTreeIter *);
extern gboolean gtk_label_get_line_wrap(GtkLabel *);
extern gboolean gtk_window_activate_focus(GtkWindow *);
extern void gtk_table_set_row_spacing(GtkTable *, guint, guint);
extern void gtk_widget_ensure_style(GtkWidget *);
extern GType gtk_selection_mode_get_type(void);
extern gboolean gtk_window_activate_default(GtkWindow *);
extern GtkAboutDialogActivateLinkFunc
gtk_about_dialog_set_url_hook(GtkAboutDialogActivateLinkFunc, gpointer,
			      GDestroyNotify);
extern gboolean gtk_check_menu_item_get_inconsistent(GtkCheckMenuItem *);
extern gchar *gtk_set_locale(void);
extern void gtk_icon_theme_set_screen(GtkIconTheme *, GdkScreen *);
extern gint gtk_editable_get_position(GtkEditable *);
extern void gtk_icon_theme_set_search_path(GtkIconTheme *, const gchar * *,
					   gint);
extern void gtk_text_view_set_justification(GtkTextView *,
					    GtkJustification);
extern GdkPixbuf *gtk_selection_data_get_pixbuf(GtkSelectionData *);
extern void gtk_spin_button_spin(GtkSpinButton *, GtkSpinType, gdouble);
extern gint gtk_notebook_append_page_menu(GtkNotebook *, GtkWidget *,
					  GtkWidget *, GtkWidget *);
extern gboolean gtk_text_view_move_mark_onscreen(GtkTextView *,
						 GtkTextMark *);
extern void gtk_widget_set_sensitive(GtkWidget *, gboolean);
extern GtkTreePath
    *gtk_tree_model_sort_convert_path_to_child_path(GtkTreeModelSort *,
						    GtkTreePath *);
extern void gtk_drag_set_icon_pixmap(GdkDragContext *, GdkColormap *,
				     GdkPixmap *, GdkBitmap *, gint, gint);
extern gboolean gtk_text_child_anchor_get_deleted(GtkTextChildAnchor *);
extern gboolean gtk_tree_view_expand_row(GtkTreeView *, GtkTreePath *,
					 gboolean);
extern GtkWidget *gtk_expander_get_label_widget(GtkExpander *);
extern void gtk_range_set_update_policy(GtkRange *, GtkUpdateType);
extern void gtk_curve_set_curve_type(GtkCurve *, GtkCurveType);
extern void gtk_handle_box_set_shadow_type(GtkHandleBox *, GtkShadowType);
extern gboolean gtk_tool_item_get_expand(GtkToolItem *);
extern GtkWidget *gtk_window_new(GtkWindowType);
extern GType gtk_list_store_get_type(void);
extern GtkWidget *gtk_cell_view_new_with_markup(const gchar *);
extern void gtk_fixed_set_has_window(GtkFixed *, gboolean);
extern void gtk_cell_view_set_displayed_row(GtkCellView *, GtkTreePath *);
extern void gtk_button_set_use_underline(GtkButton *, gboolean);
extern GtkWindow *gtk_window_get_transient_for(GtkWindow *);
extern GtkTreeIter *gtk_tree_iter_copy(GtkTreeIter *);
extern void gtk_file_chooser_set_current_name(GtkFileChooser *,
					      const gchar *);
extern void gtk_window_set_decorated(GtkWindow *, gboolean);
extern const guint gtk_interface_age;
extern void gtk_menu_shell_deselect(GtkMenuShell *);
extern gboolean gtk_text_iter_backward_cursor_positions(GtkTextIter *,
							gint);
extern gboolean gtk_text_iter_can_insert(const GtkTextIter *, gboolean);
extern gboolean gtk_widget_is_ancestor(GtkWidget *, GtkWidget *);
extern GType gtk_check_menu_item_get_type(void);
extern gboolean gtk_tree_path_up(GtkTreePath *);
extern void gtk_dialog_response(GtkDialog *, gint);
extern GdkWindowTypeHint gtk_window_get_type_hint(GtkWindow *);
extern void gtk_widget_queue_resize_no_redraw(GtkWidget *);
extern GtkWidget *gtk_frame_new(const gchar *);
extern void gtk_tree_view_column_set_reorderable(GtkTreeViewColumn *,
						 gboolean);
extern GtkCellRenderer *gtk_cell_renderer_progress_new(void);
extern void gtk_widget_grab_focus(GtkWidget *);
extern void gtk_target_list_ref(GtkTargetList *);
extern PangoTabArray *gtk_text_view_get_tabs(GtkTextView *);
extern void gtk_icon_info_set_raw_coordinates(GtkIconInfo *, gboolean);
extern void gtk_window_present(GtkWindow *);
extern GType gtk_button_box_style_get_type(void);
extern void gtk_image_get_icon_set(GtkImage *, GtkIconSet * *,
				   GtkIconSize *);
extern PangoLanguage *gtk_get_default_language(void);
extern gchar **gtk_selection_data_get_uris(GtkSelectionData *);
extern gdouble gtk_progress_bar_get_fraction(GtkProgressBar *);
extern GType gtk_radio_tool_button_get_type(void);
extern gboolean gtk_toggle_action_get_active(GtkToggleAction *);
extern const guint gtk_major_version;
extern GType gtk_signal_run_type_get_type(void);
extern void gtk_rc_reset_styles(GtkSettings *);
extern void gtk_tree_view_set_search_column(GtkTreeView *, gint);
extern void gtk_widget_modify_fg(GtkWidget *, GtkStateType,
				 const GdkColor *);
extern void gtk_icon_size_register_alias(const gchar *, GtkIconSize);
extern void gtk_text_view_window_to_buffer_coords(GtkTextView *,
						  GtkTextWindowType, gint,
						  gint, gint *, gint *);
extern void gtk_cell_renderer_render(GtkCellRenderer *, GdkWindow *,
				     GtkWidget *, GdkRectangle *,
				     GdkRectangle *, GdkRectangle *,
				     GtkCellRendererState);
extern gboolean gtk_calendar_mark_day(GtkCalendar *, guint);
extern const gchar *gtk_window_get_icon_name(GtkWindow *);
extern void gtk_menu_attach(GtkMenu *, GtkWidget *, guint, guint, guint,
			    guint);
extern const gchar *gtk_about_dialog_get_name(GtkAboutDialog *);
extern gint gtk_tree_selection_count_selected_rows(GtkTreeSelection *);
extern GtkAccelGroup *gtk_ui_manager_get_accel_group(GtkUIManager *);
extern void gtk_tree_view_column_focus_cell(GtkTreeViewColumn *,
					    GtkCellRenderer *);
extern gboolean gtk_window_get_resizable(GtkWindow *);
extern void gtk_label_set_angle(GtkLabel *, gdouble);
extern void gtk_tree_view_column_set_alignment(GtkTreeViewColumn *,
					       gfloat);
extern void gtk_drag_unhighlight(GtkWidget *);
extern guint gtk_debug_flags;
extern GType gtk_tree_view_mode_get_type(void);
extern void gtk_notebook_set_tab_label_packing(GtkNotebook *, GtkWidget *,
					       gboolean, gboolean,
					       GtkPackType);
extern GType gtk_tree_drag_source_get_type(void);
extern gchar *gtk_check_version(guint, guint, guint);
extern gboolean gtk_text_iter_backward_word_start(GtkTextIter *);
extern void gtk_toggle_action_set_draw_as_radio(GtkToggleAction *,
						gboolean);
extern GtkRcStyle *gtk_rc_style_new(void);
extern gint gtk_toolbar_get_item_index(GtkToolbar *, GtkToolItem *);
extern GtkWidget *gtk_file_chooser_get_extra_widget(GtkFileChooser *);
extern gboolean gtk_font_button_get_use_size(GtkFontButton *);
extern gboolean gtk_false(void);
extern void gtk_accel_map_unlock_path(const gchar *);
extern GtkShadowType gtk_scrolled_window_get_shadow_type(GtkScrolledWindow
							 *);
extern void gtk_tree_view_column_set_visible(GtkTreeViewColumn *,
					     gboolean);
extern GtkAction *gtk_ui_manager_get_action(GtkUIManager *, const gchar *);
extern gboolean gtk_rc_property_parse_flags(const GParamSpec *,
					    const GString *, GValue *);
extern void gtk_icon_theme_prepend_search_path(GtkIconTheme *,
					       const gchar *);
extern gint gtk_radio_action_get_current_value(GtkRadioAction *);
extern void gtk_file_selection_set_filename(GtkFileSelection *,
					    const gchar *);
extern void gtk_im_context_set_surrounding(GtkIMContext *, const gchar *,
					   gint, gint);
extern void gtk_drag_dest_add_text_targets(GtkWidget *);
extern void gtk_image_set_from_pixmap(GtkImage *, GdkPixmap *,
				      GdkBitmap *);
extern void gtk_icon_view_unselect_path(GtkIconView *, GtkTreePath *);
extern GSList *gtk_stock_list_ids(void);
extern void gtk_file_chooser_remove_filter(GtkFileChooser *,
					   GtkFileFilter *);
extern GtkListStore *gtk_list_store_newv(gint, GType *);
extern GtkTextTag *gtk_text_tag_table_lookup(GtkTextTagTable *,
					     const gchar *);
extern void gtk_window_set_skip_pager_hint(GtkWindow *, gboolean);
extern gboolean gtk_button_get_focus_on_click(GtkButton *);
extern void gtk_file_selection_hide_fileop_buttons(GtkFileSelection *);
extern void gtk_radio_menu_item_set_group(GtkRadioMenuItem *, GSList *);
extern void gtk_color_button_set_use_alpha(GtkColorButton *, gboolean);
extern void gtk_widget_pop_colormap(void);
extern void gtk_widget_set_no_show_all(GtkWidget *, gboolean);
extern GtkSettings *gtk_settings_get_for_screen(GdkScreen *);
extern void gtk_font_selection_set_preview_text(GtkFontSelection *,
						const gchar *);
extern GtkSelectionData *gtk_clipboard_wait_for_contents(GtkClipboard *,
							 GdkAtom);
extern GType gtk_spin_type_get_type(void);
extern GType gtk_movement_step_get_type(void);
extern GType gtk_icon_source_get_type(void);
extern void gtk_window_set_skip_taskbar_hint(GtkWindow *, gboolean);
extern gint gtk_tree_view_column_get_width(GtkTreeViewColumn *);
extern GType gtk_invisible_get_type(void);
extern void gtk_cell_renderer_toggle_set_active(GtkCellRendererToggle *,
						gboolean);
extern void gtk_menu_item_set_right_justified(GtkMenuItem *, gboolean);
extern GType gtk_widget_flags_get_type(void);
extern void gtk_action_connect_accelerator(GtkAction *);
extern GtkWidget *gtk_image_new_from_pixbuf(GdkPixbuf *);
extern gint gtk_icon_view_get_columns(GtkIconView *);
extern void gtk_menu_set_tearoff_state(GtkMenu *, gboolean);
extern void gtk_progress_bar_set_ellipsize(GtkProgressBar *,
					   PangoEllipsizeMode);
extern void gtk_image_set_from_pixbuf(GtkImage *, GdkPixbuf *);
extern gboolean gtk_text_view_get_cursor_visible(GtkTextView *);
extern void gtk_image_set_from_stock(GtkImage *, const gchar *,
				     GtkIconSize);
extern GType gtk_event_box_get_type(void);
extern void gtk_icon_source_free(GtkIconSource *);
extern void gtk_menu_attach_to_widget(GtkMenu *, GtkWidget *,
				      GtkMenuDetachFunc);
extern void gtk_menu_reposition(GtkMenu *);
extern GtkTreeSelection *gtk_tree_view_get_selection(GtkTreeView *);
extern void gtk_button_clicked(GtkButton *);
extern GType gtk_file_chooser_error_get_type(void);
extern void gtk_list_store_swap(GtkListStore *, GtkTreeIter *,
				GtkTreeIter *);
extern void gtk_tree_model_get(GtkTreeModel *, GtkTreeIter *, ...);
extern GtkWidget *gtk_ui_manager_get_widget(GtkUIManager *, const gchar *);
extern GtkIconSize gtk_icon_size_register(const gchar *, gint, gint);
extern gboolean gtk_text_view_get_accepts_tab(GtkTextView *);
extern GtkWidget *gtk_radio_button_new_from_widget(GtkRadioButton *);
extern char *gtk_file_chooser_get_preview_filename(GtkFileChooser *);
extern void gtk_invisible_set_screen(GtkInvisible *, GdkScreen *);
extern GdkDisplay *gtk_clipboard_get_display(GtkClipboard *);
extern GType gtk_statusbar_get_type(void);
extern GtkWidget *gtk_font_button_new(void);
extern GType gtk_tearoff_menu_item_get_type(void);
extern const gchar *gtk_icon_size_get_name(GtkIconSize);
extern GSList *gtk_file_chooser_list_shortcut_folder_uris(GtkFileChooser
							  *);
extern GType gtk_tree_row_reference_get_type(void);
extern gfloat gtk_tree_view_column_get_alignment(GtkTreeViewColumn *);
extern gboolean gtk_file_chooser_add_shortcut_folder_uri(GtkFileChooser *,
							 const char *,
							 GError * *);
extern GtkWidget *gtk_window_get_focus(GtkWindow *);
extern GtkWidget *gtk_label_new_with_mnemonic(const gchar *);
extern gboolean gtk_entry_get_activates_default(GtkEntry *);
extern void gtk_layout_set_hadjustment(GtkLayout *, GtkAdjustment *);
extern gint gtk_text_buffer_get_line_count(GtkTextBuffer *);
extern GType gtk_button_get_type(void);
extern void gtk_table_set_row_spacings(GtkTable *, guint);
extern GtkWidget *gtk_statusbar_new(void);
extern GtkCellRenderer *gtk_cell_renderer_toggle_new(void);
extern void gtk_widget_modify_style(GtkWidget *, GtkRcStyle *);
extern GdkPixbuf *gtk_widget_render_icon(GtkWidget *, const gchar *,
					 GtkIconSize, const gchar *);
extern void gtk_accel_map_add_filter(const gchar *);
extern void gtk_window_set_position(GtkWindow *, GtkWindowPosition);
extern void gtk_text_tag_table_foreach(GtkTextTagTable *,
				       GtkTextTagTableForeach, gpointer);
extern GtkIconSet *gtk_icon_set_new_from_pixbuf(GdkPixbuf *);
extern GtkWidget *gtk_hruler_new(void);
extern gboolean gtk_expander_get_expanded(GtkExpander *);
extern void gtk_editable_delete_text(GtkEditable *, gint, gint);
extern void gtk_paint_shadow(GtkStyle *, GdkWindow *, GtkStateType,
			     GtkShadowType, GdkRectangle *, GtkWidget *,
			     const gchar *, gint, gint, gint, gint);
extern GdkPixbuf *gtk_icon_theme_load_icon(GtkIconTheme *, const gchar *,
					   gint, GtkIconLookupFlags,
					   GError * *);
extern void gtk_window_maximize(GtkWindow *);
extern GtkWidget *gtk_bin_get_child(GtkBin *);
extern void gtk_notebook_set_menu_label_text(GtkNotebook *, GtkWidget *,
					     const gchar *);
extern GtkStockItem *gtk_stock_item_copy(const GtkStockItem *);
extern void gtk_tool_item_rebuild_menu(GtkToolItem *);
extern void gtk_style_set_background(GtkStyle *, GdkWindow *,
				     GtkStateType);
extern gboolean gtk_text_iter_starts_line(const GtkTextIter *);
extern gboolean gtk_tree_model_sort_iter_is_valid(GtkTreeModelSort *,
						  GtkTreeIter *);
extern void gtk_clipboard_set_image(GtkClipboard *, GdkPixbuf *);
extern gboolean gtk_selection_owner_set_for_display(GdkDisplay *,
						    GtkWidget *, GdkAtom,
						    guint32);
extern void gtk_tree_view_column_pack_start(GtkTreeViewColumn *,
					    GtkCellRenderer *, gboolean);
extern gboolean gtk_text_iter_in_range(const GtkTextIter *,
				       const GtkTextIter *,
				       const GtkTextIter *);
extern const gchar *gtk_about_dialog_get_comments(GtkAboutDialog *);
extern GtkWidget *gtk_file_chooser_button_new_with_backend(const gchar *,
							   GtkFileChooserAction,
							   const gchar *);
extern GtkWidget *gtk_widget_new(GType, const gchar *, ...);
extern GtkWidget *gtk_combo_box_entry_new_text(void);
extern GType gtk_resize_mode_get_type(void);
extern void gtk_entry_completion_set_match_func(GtkEntryCompletion *,
						GtkEntryCompletionMatchFunc,
						gpointer, GDestroyNotify);
extern void gtk_spin_button_get_increments(GtkSpinButton *, gdouble *,
					   gdouble *);
extern void gtk_font_button_set_use_font(GtkFontButton *, gboolean);
extern GdkColormap *gtk_widget_get_colormap(GtkWidget *);
extern GtkToolItem *gtk_radio_tool_button_new(GSList *);
extern void gtk_color_selection_set_current_alpha(GtkColorSelection *,
						  guint16);
extern gchar **gtk_rc_get_default_files(void);
extern void gtk_editable_paste_clipboard(GtkEditable *);
extern void gtk_accel_map_load(const gchar *);
extern GtkTooltips *gtk_tooltips_new(void);
extern GtkWidget *gtk_image_new_from_file(const gchar *);
extern gint gtk_icon_view_get_spacing(GtkIconView *);
extern GtkWidget *gtk_vbutton_box_new(void);
extern void gtk_widget_freeze_child_notify(GtkWidget *);
extern GtkStyle *gtk_style_new(void);
extern void gtk_editable_set_editable(GtkEditable *, gboolean);
extern GtkWidget *gtk_button_new_with_mnemonic(const gchar *);
extern GType gtk_separator_menu_item_get_type(void);
extern void gtk_window_set_frame_dimensions(GtkWindow *, gint, gint, gint,
					    gint);
extern void gtk_text_buffer_select_range(GtkTextBuffer *,
					 const GtkTextIter *,
					 const GtkTextIter *);
extern gboolean gtk_tree_view_row_expanded(GtkTreeView *, GtkTreePath *);
extern void gtk_window_set_role(GtkWindow *, const gchar *);
extern void gtk_plug_construct_for_display(GtkPlug *, GdkDisplay *,
					   GdkNativeWindow);
extern void gtk_action_group_set_visible(GtkActionGroup *, gboolean);
extern void gtk_misc_get_padding(GtkMisc *, gint *, gint *);
extern GType gtk_file_chooser_get_type(void);
extern void gtk_tree_view_column_set_resizable(GtkTreeViewColumn *,
					       gboolean);
extern void gtk_tree_view_columns_autosize(GtkTreeView *);
extern void gtk_layout_set_size(GtkLayout *, guint, guint);
extern gboolean gtk_toggle_button_get_mode(GtkToggleButton *);
extern GType gtk_expander_style_get_type(void);
extern void gtk_accessible_connect_widget_destroyed(GtkAccessible *);
extern void gtk_tree_view_set_cursor(GtkTreeView *, GtkTreePath *,
				     GtkTreeViewColumn *, gboolean);
extern void gtk_button_box_set_child_secondary(GtkButtonBox *, GtkWidget *,
					       gboolean);
extern void gtk_tree_model_row_deleted(GtkTreeModel *, GtkTreePath *);
extern void gtk_tree_selection_set_select_function(GtkTreeSelection *,
						   GtkTreeSelectionFunc,
						   gpointer,
						   GtkDestroyNotify);
extern gboolean gtk_tree_drag_source_row_draggable(GtkTreeDragSource *,
						   GtkTreePath *);
extern GtkAccelGroupEntry *gtk_accel_group_query(GtkAccelGroup *, guint,
						 GdkModifierType, guint *);
extern void gtk_expander_set_label_widget(GtkExpander *, GtkWidget *);
extern void gtk_target_list_add_table(GtkTargetList *,
				      const GtkTargetEntry *, guint);
extern gint gtk_icon_view_get_row_spacing(GtkIconView *);
extern gboolean gtk_text_view_forward_display_line_end(GtkTextView *,
						       GtkTextIter *);
extern GtkIconSize gtk_tool_item_get_icon_size(GtkToolItem *);
extern void gtk_widget_set_default_direction(GtkTextDirection);
extern void gtk_tree_view_move_column_after(GtkTreeView *,
					    GtkTreeViewColumn *,
					    GtkTreeViewColumn *);
extern GType gtk_notebook_tab_get_type(void);
extern GtkActionGroup *gtk_action_group_new(const gchar *);
extern void gtk_widget_add_mnemonic_label(GtkWidget *, GtkWidget *);
extern GType gtk_text_child_anchor_get_type(void);
extern const gchar *gtk_icon_info_get_filename(GtkIconInfo *);
extern void gtk_menu_item_set_submenu(GtkMenuItem *, GtkWidget *);
extern void gtk_menu_detach(GtkMenu *);
extern void gtk_container_resize_children(GtkContainer *);
extern GType gtk_text_mark_get_type(void);
extern gint gtk_entry_get_max_length(GtkEntry *);
extern GSList *gtk_radio_menu_item_get_group(GtkRadioMenuItem *);
extern GType gtk_text_attributes_get_type(void);
extern gboolean gtk_text_mark_get_left_gravity(GtkTextMark *);
extern GdkRegion *gtk_widget_region_intersect(GtkWidget *, GdkRegion *);
extern GtkWidget *gtk_handle_box_new(void);
extern GList *gtk_menu_get_for_attach_widget(GtkWidget *);
extern void gtk_list_store_set_column_types(GtkListStore *, gint, GType *);
extern void gtk_paint_option(GtkStyle *, GdkWindow *, GtkStateType,
			     GtkShadowType, GdkRectangle *, GtkWidget *,
			     const gchar *, gint, gint, gint, gint);
extern void gtk_tree_selection_select_iter(GtkTreeSelection *,
					   GtkTreeIter *);
extern void gtk_tree_view_column_set_fixed_width(GtkTreeViewColumn *,
						 gint);
extern GtkTextBuffer *gtk_text_buffer_new(GtkTextTagTable *);
extern void gtk_menu_shell_activate_item(GtkMenuShell *, GtkWidget *,
					 gboolean);
extern void gtk_tree_view_column_set_widget(GtkTreeViewColumn *,
					    GtkWidget *);
extern gint gtk_notebook_get_current_page(GtkNotebook *);
extern GtkWidget *gtk_message_dialog_new_with_markup(GtkWindow *,
						     GtkDialogFlags,
						     GtkMessageType,
						     GtkButtonsType,
						     const gchar *, ...);
extern const gchar *gtk_widget_get_name(GtkWidget *);
extern gint gtk_entry_completion_get_text_column(GtkEntryCompletion *);
extern GType gtk_calendar_get_type(void);
extern void gtk_tree_view_unset_rows_drag_source(GtkTreeView *);
extern void gtk_tool_button_set_icon_widget(GtkToolButton *, GtkWidget *);
extern GType gtk_cell_renderer_mode_get_type(void);
extern GtkWidget *gtk_check_button_new_with_label(const gchar *);
extern void gtk_cell_editable_start_editing(GtkCellEditable *, GdkEvent *);
extern gboolean gtk_widget_has_screen(GtkWidget *);
extern void gtk_dialog_set_alternative_button_order(GtkDialog *, gint,
						    ...);
extern void gtk_radio_tool_button_set_group(GtkRadioToolButton *,
					    GSList *);
extern void gtk_menu_item_activate(GtkMenuItem *);
extern const gchar *gtk_window_get_title(GtkWindow *);
extern void gtk_window_set_gravity(GtkWindow *, GdkGravity);
extern GtkCalendarDisplayOptions
gtk_calendar_get_display_options(GtkCalendar *);
extern void gtk_text_tag_table_remove(GtkTextTagTable *, GtkTextTag *);
extern void gtk_font_button_set_title(GtkFontButton *, const gchar *);
extern void gtk_tree_row_reference_reordered(GObject *, GtkTreePath *,
					     GtkTreeIter *, gint *);
extern void gtk_file_filter_add_mime_type(GtkFileFilter *, const gchar *);
extern GOptionGroup *gtk_get_option_group(gboolean);
extern gchar *gtk_ui_manager_get_ui(GtkUIManager *);
extern void gtk_ruler_set_metric(GtkRuler *, GtkMetricType);
extern GtkToolItem *gtk_tool_item_new(void);
extern void gtk_about_dialog_set_license(GtkAboutDialog *, const gchar *);
extern void gtk_paint_box_gap(GtkStyle *, GdkWindow *, GtkStateType,
			      GtkShadowType, GdkRectangle *, GtkWidget *,
			      gchar *, gint, gint, gint, gint,
			      GtkPositionType, gint, gint);
extern GtkWidget *gtk_plug_new(GdkNativeWindow);
extern GType gtk_im_multicontext_get_type(void);
extern void gtk_toggle_action_set_active(GtkToggleAction *, gboolean);
extern void gtk_label_set_text_with_mnemonic(GtkLabel *, const gchar *);
extern GtkWidget *gtk_table_new(guint, guint, gboolean);
extern GtkWidget *gtk_alignment_new(gfloat, gfloat, gfloat, gfloat);
extern gint gtk_icon_view_get_margin(GtkIconView *);
extern void gtk_notebook_set_show_border(GtkNotebook *, gboolean);
extern void gtk_text_buffer_paste_clipboard(GtkTextBuffer *,
					    GtkClipboard *, GtkTextIter *,
					    gboolean);
extern GtkWidget *gtk_hscrollbar_new(GtkAdjustment *);
extern gboolean gtk_tree_view_get_fixed_height_mode(GtkTreeView *);
extern gboolean gtk_tree_store_remove(GtkTreeStore *, GtkTreeIter *);
extern GList *gtk_widget_list_mnemonic_labels(GtkWidget *);
extern void gtk_cell_layout_add_attribute(GtkCellLayout *,
					  GtkCellRenderer *, const gchar *,
					  gint);
extern GParamSpec **gtk_widget_class_list_style_properties(GtkWidgetClass
							   *, guint *);
extern gint gtk_entry_completion_get_minimum_key_length(GtkEntryCompletion
							*);
extern void gtk_text_buffer_move_mark(GtkTextBuffer *, GtkTextMark *,
				      const GtkTextIter *);
extern gboolean gtk_text_mark_get_visible(GtkTextMark *);
extern void gtk_list_store_set_value(GtkListStore *, GtkTreeIter *, gint,
				     GValue *);
extern void gtk_widget_style_get_property(GtkWidget *, const gchar *,
					  GValue *);
extern void gtk_widget_modify_bg(GtkWidget *, GtkStateType,
				 const GdkColor *);
extern GtkWidget *gtk_image_menu_item_new_with_label(const gchar *);
extern gboolean gtk_font_button_get_use_font(GtkFontButton *);
extern gboolean gtk_im_context_delete_surrounding(GtkIMContext *, gint,
						  gint);
extern void gtk_misc_set_alignment(GtkMisc *, gfloat, gfloat);
extern GtkWidget *gtk_tool_button_get_label_widget(GtkToolButton *);
extern gint gtk_toolbar_get_n_items(GtkToolbar *);
extern GtkWidget *gtk_tool_button_get_icon_widget(GtkToolButton *);
extern gboolean gtk_tree_row_reference_valid(GtkTreeRowReference *);
extern gboolean gtk_tree_model_iter_nth_child(GtkTreeModel *,
					      GtkTreeIter *, GtkTreeIter *,
					      gint);
extern void gtk_tree_view_set_search_equal_func(GtkTreeView *,
						GtkTreeViewSearchEqualFunc,
						gpointer,
						GtkDestroyNotify);
extern GtkWidget *gtk_image_new_from_animation(GdkPixbufAnimation *);
extern gint gtk_tree_view_remove_column(GtkTreeView *,
					GtkTreeViewColumn *);
extern void gtk_window_remove_mnemonic(GtkWindow *, guint, GtkWidget *);
extern GType gtk_text_iter_get_type(void);
extern gboolean gtk_action_get_visible(GtkAction *);
extern GtkWidget *gtk_radio_button_new(GSList *);
extern gboolean gtk_text_iter_ends_word(const GtkTextIter *);
extern GType gtk_visibility_get_type(void);
extern GType gtk_im_context_simple_get_type(void);
extern GdkWindow *gtk_widget_get_root_window(GtkWidget *);
extern GType gtk_vruler_get_type(void);
extern void gtk_image_set_from_animation(GtkImage *, GdkPixbufAnimation *);
extern void gtk_tree_view_set_enable_search(GtkTreeView *, gboolean);
extern void gtk_combo_box_popdown(GtkComboBox *);
extern void gtk_tree_view_expand_all(GtkTreeView *);
extern void gtk_drag_source_set_icon_stock(GtkWidget *, const gchar *);
extern const gchar *gtk_icon_info_get_display_name(GtkIconInfo *);
extern void gtk_window_iconify(GtkWindow *);
extern GType gtk_color_selection_dialog_get_type(void);
extern GtkIconTheme *gtk_icon_theme_new(void);
extern gint gtk_icon_info_get_base_size(GtkIconInfo *);
extern void gtk_action_block_activate_from(GtkAction *, GtkWidget *);
extern void gtk_action_group_add_actions(GtkActionGroup *,
					 const GtkActionEntry *, guint,
					 gpointer);
extern GType gtk_separator_get_type(void);
extern void gtk_table_set_col_spacing(GtkTable *, guint, guint);
extern gboolean gtk_text_view_get_editable(GtkTextView *);
extern GdkWindow *gtk_widget_get_parent_window(GtkWidget *);
extern void gtk_color_selection_get_current_color(GtkColorSelection *,
						  GdkColor *);
extern void gtk_about_dialog_set_website(GtkAboutDialog *, const gchar *);
extern GType gtk_requisition_get_type(void);
extern void gtk_accelerator_parse(const gchar *, guint *,
				  GdkModifierType *);
extern GtkShadowType gtk_frame_get_shadow_type(GtkFrame *);
extern gboolean gtk_tree_view_get_rules_hint(GtkTreeView *);
extern void gtk_accelerator_set_default_mod_mask(GdkModifierType);
extern void gtk_window_set_keep_below(GtkWindow *, gboolean);
extern gchar *gtk_text_iter_get_visible_slice(const GtkTextIter *,
					      const GtkTextIter *);
extern void gtk_drag_source_add_uri_targets(GtkWidget *);
extern gboolean gtk_font_selection_set_font_name(GtkFontSelection *,
						 const gchar *);
extern void gtk_entry_set_completion(GtkEntry *, GtkEntryCompletion *);
extern gboolean gtk_action_group_get_sensitive(GtkActionGroup *);
extern void gtk_label_set_ellipsize(GtkLabel *, PangoEllipsizeMode);
extern GType gtk_arg_flags_get_type(void);
extern void gtk_rc_parse(const gchar *);
extern gboolean gtk_text_iter_has_tag(const GtkTextIter *, GtkTextTag *);
extern void gtk_file_selection_set_select_multiple(GtkFileSelection *,
						   gboolean);
extern GtkTreePath
    *gtk_tree_model_filter_convert_child_path_to_path(GtkTreeModelFilter *,
						      GtkTreePath *);
extern void gtk_fixed_put(GtkFixed *, GtkWidget *, gint, gint);
extern GtkSizeGroup *gtk_size_group_new(GtkSizeGroupMode);
extern void gtk_entry_completion_delete_action(GtkEntryCompletion *, gint);
extern void gtk_paint_expander(GtkStyle *, GdkWindow *, GtkStateType,
			       GdkRectangle *, GtkWidget *, const gchar *,
			       gint, gint, GtkExpanderStyle);
extern GtkTreePath *gtk_tree_path_new(void);
extern GType gtk_rc_token_type_get_type(void);
extern void gtk_accel_group_lock(GtkAccelGroup *);
extern gboolean gtk_tree_model_iter_has_child(GtkTreeModel *,
					      GtkTreeIter *);
extern gboolean gtk_widget_activate(GtkWidget *);
extern void gtk_text_buffer_begin_user_action(GtkTextBuffer *);
extern void gtk_check_menu_item_toggled(GtkCheckMenuItem *);
extern gboolean gtk_rc_property_parse_color(const GParamSpec *,
					    const GString *, GValue *);
extern void gtk_menu_item_toggle_size_allocate(GtkMenuItem *, gint);
extern void gtk_file_chooser_button_set_title(GtkFileChooserButton *,
					      const gchar *);
extern void gtk_cell_renderer_stop_editing(GtkCellRenderer *, gboolean);
extern void gtk_widget_unrealize(GtkWidget *);
extern GType gtk_icon_theme_get_type(void);
extern GSList *gtk_file_chooser_get_filenames(GtkFileChooser *);
extern void gtk_box_pack_start_defaults(GtkBox *, GtkWidget *);
extern GParamSpec *gtk_container_class_find_child_property(GObjectClass *,
							   const gchar *);
extern guint gtk_table_get_default_col_spacing(GtkTable *);
extern void gtk_menu_shell_insert(GtkMenuShell *, GtkWidget *, gint);
extern GtkWidget *gtk_notebook_get_nth_page(GtkNotebook *, gint);
extern void gtk_text_buffer_get_iter_at_line_offset(GtkTextBuffer *,
						    GtkTextIter *, gint,
						    gint);
extern GtkWidget *gtk_combo_box_entry_new_with_model(GtkTreeModel *, gint);
extern void gtk_handle_box_set_snap_edge(GtkHandleBox *, GtkPositionType);
extern void gtk_combo_box_set_active(GtkComboBox *, gint);
extern void gtk_message_dialog_format_secondary_markup(GtkMessageDialog *,
						       const gchar *, ...);
extern GType gtk_toolbar_get_type(void);
extern GType gtk_border_get_type(void);
extern gboolean gtk_bindings_activate_event(GtkObject *, GdkEventKey *);
extern const gchar *gtk_font_selection_get_preview_text(GtkFontSelection
							*);
extern GtkWidget *gtk_progress_bar_new(void);
extern const gchar
    *gtk_font_selection_dialog_get_preview_text(GtkFontSelectionDialog *);
extern void gtk_curve_set_vector(GtkCurve *, int, gfloat *);
extern void gtk_tree_view_set_hadjustment(GtkTreeView *, GtkAdjustment *);
extern gboolean gtk_toolbar_get_tooltips(GtkToolbar *);
extern GtkWidget *gtk_image_new_from_pixmap(GdkPixmap *, GdkBitmap *);
extern void gtk_file_chooser_select_all(GtkFileChooser *);
extern void gtk_tree_selection_unselect_iter(GtkTreeSelection *,
					     GtkTreeIter *);
extern GType gtk_scroll_step_get_type(void);
extern GType gtk_identifier_get_type(void);
extern GtkWidget *gtk_font_button_new_with_font(const gchar *);
extern void gtk_combo_box_set_focus_on_click(GtkComboBox *, gboolean);
extern void gtk_icon_view_set_selection_mode(GtkIconView *,
					     GtkSelectionMode);
extern void gtk_message_dialog_set_markup(GtkMessageDialog *,
					  const gchar *);
extern gchar *gtk_file_chooser_get_uri(GtkFileChooser *);
extern GtkWidget *gtk_action_create_tool_item(GtkAction *);
extern void gtk_widget_unref(GtkWidget *);
extern gint gtk_widget_send_expose(GtkWidget *, GdkEvent *);
extern gchar *gtk_text_iter_get_text(const GtkTextIter *,
				     const GtkTextIter *);
extern GType gtk_image_type_get_type(void);
extern GtkWidget *gtk_file_chooser_widget_new(GtkFileChooserAction);
extern gboolean
gtk_entry_completion_get_inline_completion(GtkEntryCompletion *);
extern GType gtk_response_type_get_type(void);
extern void gtk_widget_modify_text(GtkWidget *, GtkStateType,
				   const GdkColor *);
extern guint gtk_rc_parse_priority(GScanner *, GtkPathPriorityType *);
extern GtkWidget *gtk_invisible_new(void);
extern void gtk_paint_handle(GtkStyle *, GdkWindow *, GtkStateType,
			     GtkShadowType, GdkRectangle *, GtkWidget *,
			     const gchar *, gint, gint, gint, gint,
			     GtkOrientation);
extern gboolean gtk_text_iter_backward_visible_cursor_positions(GtkTextIter
								*, gint);
extern gboolean gtk_font_button_get_show_style(GtkFontButton *);
extern guint gtk_container_get_border_width(GtkContainer *);
extern GtkWidget *gtk_widget_get_parent(GtkWidget *);
extern void gtk_button_enter(GtkButton *);
extern void gtk_text_view_set_accepts_tab(GtkTextView *, gboolean);
extern void gtk_widget_set_redraw_on_allocate(GtkWidget *, gboolean);
extern GtkWidget *gtk_radio_menu_item_new_with_label(GSList *,
						     const gchar *);
extern gboolean gtk_tree_view_column_get_reorderable(GtkTreeViewColumn *);
extern GType gtk_icon_view_get_type(void);
extern void gtk_entry_set_visibility(GtkEntry *, gboolean);
extern const gchar *const *gtk_about_dialog_get_documenters(GtkAboutDialog
							    *);
extern GtkWidget *gtk_vruler_new(void);
extern void gtk_widget_set_parent_window(GtkWidget *, GdkWindow *);
extern GdkScreen *gtk_window_get_screen(GtkWindow *);
extern GType gtk_clipboard_get_type(void);
extern GType gtk_layout_get_type(void);
extern void gtk_tree_selection_unselect_path(GtkTreeSelection *,
					     GtkTreePath *);
extern GdkScreen *gtk_invisible_get_screen(GtkInvisible *);
extern void gtk_paint_tab(GtkStyle *, GdkWindow *, GtkStateType,
			  GtkShadowType, GdkRectangle *, GtkWidget *,
			  const gchar *, gint, gint, gint, gint);
extern void gtk_button_set_alignment(GtkButton *, gfloat, gfloat);
extern void gtk_file_chooser_button_set_width_chars(GtkFileChooserButton *,
						    gint);
extern void gtk_action_group_add_radio_actions_full(GtkActionGroup *,
						    const
						    GtkRadioActionEntry *,
						    guint, gint, GCallback,
						    gpointer,
						    GDestroyNotify);
extern void gtk_alignment_set(GtkAlignment *, gfloat, gfloat, gfloat,
			      gfloat);
extern void gtk_container_set_resize_mode(GtkContainer *, GtkResizeMode);
extern void gtk_notebook_set_show_tabs(GtkNotebook *, gboolean);
extern GtkWidget *gtk_grab_get_current(void);
extern GType gtk_tooltips_get_type(void);
extern GtkToolItem *gtk_tool_button_new_from_stock(const gchar *);
extern GtkWidget *gtk_color_button_new_with_color(const GdkColor *);
extern void gtk_arrow_set(GtkArrow *, GtkArrowType, GtkShadowType);
extern GtkTextTag *gtk_text_buffer_create_tag(GtkTextBuffer *,
					      const gchar *, const gchar *,
					      ...);
extern void gtk_icon_view_selected_foreach(GtkIconView *,
					   GtkIconViewForeachFunc,
					   gpointer);
extern gboolean gtk_icon_source_get_size_wildcarded(const GtkIconSource *);
extern GQuark gtk_file_chooser_error_quark(void);
extern gboolean gtk_tooltips_get_info_from_tip_window(GtkWindow *,
						      GtkTooltips * *,
						      GtkWidget * *);
extern gboolean gtk_window_mnemonic_activate(GtkWindow *, guint,
					     GdkModifierType);
extern GtkWidget *gtk_hseparator_new(void);
extern const gchar *gtk_progress_bar_get_text(GtkProgressBar *);
extern void gtk_window_remove_embedded_xid(GtkWindow *, guint);
extern GtkWidget *gtk_menu_item_new(void);
extern void gtk_window_set_has_frame(GtkWindow *, gboolean);
extern void gtk_tree_model_filter_set_modify_func(GtkTreeModelFilter *,
						  gint, GType *,
						  GtkTreeModelFilterModifyFunc,
						  gpointer,
						  GtkDestroyNotify);
extern gboolean gtk_selection_convert(GtkWidget *, GdkAtom, GdkAtom,
				      guint32);
extern void gtk_text_buffer_get_end_iter(GtkTextBuffer *, GtkTextIter *);
extern GType gtk_hbox_get_type(void);
extern void gtk_widget_set_accel_path(GtkWidget *, const gchar *,
				      GtkAccelGroup *);
extern void gtk_text_tag_set_priority(GtkTextTag *, gint);
extern void gtk_text_buffer_move_mark_by_name(GtkTextBuffer *,
					      const gchar *,
					      const GtkTextIter *);
extern void gtk_handle_box_set_handle_position(GtkHandleBox *,
					       GtkPositionType);
extern GtkWidget *gtk_cell_view_new_with_pixbuf(GdkPixbuf *);
extern void gtk_grab_remove(GtkWidget *);
extern void gtk_window_set_auto_startup_notification(gboolean);
extern GType gtk_orientation_get_type(void);
extern gint gtk_text_iter_get_line_index(const GtkTextIter *);
extern void gtk_text_buffer_get_bounds(GtkTextBuffer *, GtkTextIter *,
				       GtkTextIter *);
extern gboolean gtk_widget_is_focus(GtkWidget *);
extern gboolean gtk_check_menu_item_get_active(GtkCheckMenuItem *);
extern gint gtk_icon_view_get_item_width(GtkIconView *);
extern gboolean gtk_check_menu_item_get_draw_as_radio(GtkCheckMenuItem *);
extern GtkClipboard *gtk_clipboard_get_for_display(GdkDisplay *, GdkAtom);
extern void gtk_tree_iter_free(GtkTreeIter *);
extern void gtk_widget_unmap(GtkWidget *);
extern gboolean gtk_cell_renderer_activate(GtkCellRenderer *, GdkEvent *,
					   GtkWidget *, const gchar *,
					   GdkRectangle *, GdkRectangle *,
					   GtkCellRendererState);
extern GType gtk_settings_get_type(void);
extern GType gtk_aspect_frame_get_type(void);
extern GtkBindingSet *gtk_binding_set_by_class(gpointer);
extern void gtk_icon_source_set_pixbuf(GtkIconSource *, GdkPixbuf *);
extern void gtk_main_do_event(GdkEvent *);
extern GtkWidget *gtk_check_button_new(void);
extern gboolean gtk_rc_reparse_all(void);
extern GtkTreeStore *gtk_tree_store_newv(gint, GType *);
extern gboolean gtk_text_view_place_cursor_onscreen(GtkTextView *);
extern void gtk_box_set_spacing(GtkBox *, gint);
extern GType gtk_accel_map_get_type(void);
extern gboolean gtk_color_button_get_use_alpha(GtkColorButton *);
extern gboolean gtk_text_iter_forward_visible_cursor_positions(GtkTextIter
							       *, gint);
extern void gtk_menu_item_set_accel_path(GtkMenuItem *, const gchar *);
extern gchar *gtk_combo_box_get_active_text(GtkComboBox *);
extern gboolean gtk_icon_info_get_attach_points(GtkIconInfo *,
						GdkPoint * *, gint *);
extern void gtk_entry_completion_set_minimum_key_length(GtkEntryCompletion
							*, gint);
extern void gtk_text_view_set_buffer(GtkTextView *, GtkTextBuffer *);
extern void gtk_cell_layout_clear_attributes(GtkCellLayout *,
					     GtkCellRenderer *);
extern void gtk_toolbar_set_show_arrow(GtkToolbar *, gboolean);
extern GtkWidget
    *gtk_file_chooser_widget_new_with_backend(GtkFileChooserAction,
					      const gchar *);
extern void gtk_text_buffer_insert_at_cursor(GtkTextBuffer *,
					     const gchar *, gint);
extern void gtk_tool_item_set_visible_vertical(GtkToolItem *, gboolean);
extern void
gtk_cell_renderer_text_set_fixed_height_from_font(GtkCellRendererText *,
						  gint);
extern gboolean gtk_window_get_skip_pager_hint(GtkWindow *);
extern GType gtk_gamma_curve_get_type(void);
extern void
gtk_tree_model_filter_convert_child_iter_to_iter(GtkTreeModelFilter *,
						 GtkTreeIter *,
						 GtkTreeIter *);
extern void gtk_text_buffer_remove_tag_by_name(GtkTextBuffer *,
					       const gchar *,
					       const GtkTextIter *,
					       const GtkTextIter *);
extern gboolean gtk_file_chooser_set_filename(GtkFileChooser *,
					      const gchar *);
extern void gtk_about_dialog_set_logo_icon_name(GtkAboutDialog *,
						const gchar *);
extern GdkPixbuf *gtk_image_get_pixbuf(GtkImage *);
extern GtkWidget *gtk_action_create_menu_item(GtkAction *);
extern GtkJustification gtk_label_get_justify(GtkLabel *);
extern void gtk_file_filter_set_name(GtkFileFilter *, const gchar *);
extern gboolean gtk_text_iter_forward_char(GtkTextIter *);
extern GtkWidget *gtk_radio_menu_item_new(GSList *);
extern void gtk_action_group_add_toggle_actions_full(GtkActionGroup *,
						     const
						     GtkToggleActionEntry
						     *, guint, gpointer,
						     GDestroyNotify);
extern gboolean gtk_text_iter_is_start(const GtkTextIter *);
extern void gtk_cell_renderer_set_fixed_size(GtkCellRenderer *, gint,
					     gint);
extern void gtk_rc_set_default_files(gchar * *);
extern void gtk_tool_item_set_proxy_menu_item(GtkToolItem *, const gchar *,
					      GtkWidget *);
extern void gtk_paint_check(GtkStyle *, GdkWindow *, GtkStateType,
			    GtkShadowType, GdkRectangle *, GtkWidget *,
			    const gchar *, gint, gint, gint, gint);
extern void gtk_scrolled_window_set_policy(GtkScrolledWindow *,
					   GtkPolicyType, GtkPolicyType);
extern GtkEntryCompletion *gtk_entry_completion_new(void);
extern guint gtk_rc_parse_state(GScanner *, GtkStateType *);
extern gint gtk_tree_view_get_search_column(GtkTreeView *);
extern void gtk_ui_manager_remove_action_group(GtkUIManager *,
					       GtkActionGroup *);
extern PangoEllipsizeMode gtk_label_get_ellipsize(GtkLabel *);
extern gboolean gtk_file_chooser_get_preview_widget_active(GtkFileChooser
							   *);
extern gboolean gtk_button_get_use_underline(GtkButton *);
extern void gtk_entry_set_activates_default(GtkEntry *, gboolean);
extern GtkStyle *gtk_rc_get_style(GtkWidget *);
extern GtkTreeViewColumn *gtk_tree_view_column_new_with_attributes(const
								   gchar *,
								   GtkCellRenderer
								   *, ...);
extern gchar *gtk_file_chooser_get_filename(GtkFileChooser *);
extern GType gtk_font_button_get_type(void);
extern GtkAdjustment *gtk_spin_button_get_adjustment(GtkSpinButton *);
extern void gtk_dialog_set_alternative_button_order_from_array(GtkDialog *,
							       gint,
							       gint *);
extern void gtk_window_set_icon_name(GtkWindow *, const gchar *);
extern void gtk_ruler_get_range(GtkRuler *, gdouble *, gdouble *,
				gdouble *, gdouble *);
extern void gtk_action_group_remove_action(GtkActionGroup *, GtkAction *);
extern const char *gtk_text_mark_get_name(GtkTextMark *);
extern gboolean gtk_tool_button_get_use_underline(GtkToolButton *);
extern gboolean gtk_clipboard_wait_is_text_available(GtkClipboard *);
extern void gtk_label_set_single_line_mode(GtkLabel *, gboolean);
extern void gtk_label_set_width_chars(GtkLabel *, gint);
extern GType gtk_file_chooser_button_get_type(void);
extern void gtk_scrolled_window_set_hadjustment(GtkScrolledWindow *,
						GtkAdjustment *);
extern void gtk_accel_map_lock_path(const gchar *);
extern void gtk_tree_sortable_set_sort_func(GtkTreeSortable *, gint,
					    GtkTreeIterCompareFunc,
					    gpointer, GtkDestroyNotify);
extern gboolean gtk_icon_size_lookup_for_settings(GtkSettings *,
						  GtkIconSize, gint *,
						  gint *);
extern void gtk_tree_model_unref_node(GtkTreeModel *, GtkTreeIter *);
extern GtkWidget *gtk_menu_get_active(GtkMenu *);
extern GtkTextChildAnchor
    *gtk_text_buffer_create_child_anchor(GtkTextBuffer *, GtkTextIter *);
extern void gtk_file_chooser_set_extra_widget(GtkFileChooser *,
					      GtkWidget *);
extern GtkWidget *gtk_image_new_from_image(GdkImage *, GdkBitmap *);
extern GType gtk_fixed_get_type(void);
extern GtkWidget *gtk_scrolled_window_new(GtkAdjustment *,
					  GtkAdjustment *);
extern void gtk_about_dialog_set_copyright(GtkAboutDialog *,
					   const gchar *);
extern void gtk_target_list_add(GtkTargetList *, GdkAtom, guint, guint);
extern GList *gtk_tree_view_get_columns(GtkTreeView *);
extern GtkIconSource *gtk_icon_source_new(void);
extern void gtk_check_menu_item_set_active(GtkCheckMenuItem *, gboolean);
extern gboolean gtk_text_iter_forward_sentence_ends(GtkTextIter *, gint);
extern GdkScreen *gtk_widget_get_screen(GtkWidget *);
extern GtkWidget *gtk_expander_new(const gchar *);
extern GtkWidget *gtk_spin_button_new(GtkAdjustment *, gdouble, guint);
extern void gtk_window_fullscreen(GtkWindow *);
extern void gtk_toolbar_set_tooltips(GtkToolbar *, gboolean);
extern void gtk_file_chooser_set_preview_widget(GtkFileChooser *,
						GtkWidget *);
extern gboolean gtk_accel_group_activate(GtkAccelGroup *, GQuark,
					 GObject *, guint,
					 GdkModifierType);
extern gboolean gtk_tree_drag_source_drag_data_get(GtkTreeDragSource *,
						   GtkTreePath *,
						   GtkSelectionData *);
extern GtkTextDirection gtk_widget_get_direction(GtkWidget *);
extern gboolean gtk_text_iter_get_attributes(const GtkTextIter *,
					     GtkTextAttributes *);
extern gboolean gtk_editable_get_editable(GtkEditable *);
extern void gtk_widget_set_events(GtkWidget *, gint);
extern void gtk_paned_pack1(GtkPaned *, GtkWidget *, gboolean, gboolean);
extern GType gtk_state_type_get_type(void);
extern gboolean gtk_text_iter_editable(const GtkTextIter *, gboolean);
extern gboolean gtk_tree_model_get_iter_from_string(GtkTreeModel *,
						    GtkTreeIter *,
						    const gchar *);
extern gboolean gtk_container_get_focus_chain(GtkContainer *, GList * *);
extern void gtk_icon_view_set_margin(GtkIconView *, gint);
extern void gtk_tree_selection_unselect_range(GtkTreeSelection *,
					      GtkTreePath *,
					      GtkTreePath *);
extern gboolean gtk_widget_get_no_show_all(GtkWidget *);
extern GList *gtk_cell_view_get_cell_renderers(GtkCellView *);
extern gboolean gtk_clipboard_set_with_owner(GtkClipboard *,
					     const GtkTargetEntry *, guint,
					     GtkClipboardGetFunc,
					     GtkClipboardClearFunc,
					     GObject *);
extern void gtk_tree_store_clear(GtkTreeStore *);
extern GType gtk_vscrollbar_get_type(void);
extern GType gtk_curve_type_get_type(void);
extern gboolean gtk_entry_get_has_frame(GtkEntry *);
extern GType gtk_dest_defaults_get_type(void);
extern GType gtk_window_position_get_type(void);
extern void gtk_tree_model_get_valist(GtkTreeModel *, GtkTreeIter *,
				      va_list);
extern GtkWidget *gtk_expander_new_with_mnemonic(const gchar *);
extern void gtk_viewport_set_shadow_type(GtkViewport *, GtkShadowType);
extern gint gtk_tree_view_insert_column_with_attributes(GtkTreeView *,
							gint,
							const gchar *,
							GtkCellRenderer *,
							...);
extern GSList *gtk_file_chooser_list_shortcut_folders(GtkFileChooser *);
extern GType gtk_drawing_area_get_type(void);
extern GtkOrientation gtk_toolbar_get_orientation(GtkToolbar *);
extern void gtk_tree_model_foreach(GtkTreeModel *, GtkTreeModelForeachFunc,
				   gpointer);
extern gboolean
gtk_color_selection_get_has_opacity_control(GtkColorSelection *);
extern gboolean gtk_tree_drag_dest_drag_data_received(GtkTreeDragDest *,
						      GtkTreePath *,
						      GtkSelectionData *);
extern gboolean gtk_window_set_icon_from_file(GtkWindow *, const gchar *,
					      GError * *);
extern void gtk_window_set_focus(GtkWindow *, GtkWidget *);
extern void gtk_button_set_use_stock(GtkButton *, gboolean);
extern void gtk_paint_arrow(GtkStyle *, GdkWindow *, GtkStateType,
			    GtkShadowType, GdkRectangle *, GtkWidget *,
			    const gchar *, GtkArrowType, gboolean, gint,
			    gint, gint, gint);
extern GtkWidget *gtk_hpaned_new(void);
extern void gtk_calendar_select_day(GtkCalendar *, guint);
extern void gtk_settings_set_property_value(GtkSettings *, const gchar *,
					    const GtkSettingsValue *);
extern void gtk_toolbar_insert(GtkToolbar *, GtkToolItem *, gint);
extern void gtk_im_context_get_preedit_string(GtkIMContext *, gchar * *,
					      PangoAttrList * *, gint *);
extern void gtk_event_box_set_visible_window(GtkEventBox *, gboolean);
extern GType gtk_menu_item_get_type(void);
extern gboolean gtk_text_buffer_delete_interactive(GtkTextBuffer *,
						   GtkTextIter *,
						   GtkTextIter *,
						   gboolean);
extern void gtk_range_set_inverted(GtkRange *, gboolean);
extern void gtk_selection_add_targets(GtkWidget *, GdkAtom,
				      const GtkTargetEntry *, guint);
extern gchar *gtk_rc_get_theme_dir(void);
extern const gchar *gtk_action_get_name(GtkAction *);
extern gint gtk_tree_store_iter_depth(GtkTreeStore *, GtkTreeIter *);
extern void gtk_icon_view_set_markup_column(GtkIconView *, gint);
extern void gtk_scale_get_layout_offsets(GtkScale *, gint *, gint *);
extern GType gtk_bin_get_type(void);
extern long unsigned int gtk_object_get_type(void);
extern void gtk_tree_store_prepend(GtkTreeStore *, GtkTreeIter *,
				   GtkTreeIter *);
extern void gtk_list_store_insert_after(GtkListStore *, GtkTreeIter *,
					GtkTreeIter *);
extern void gtk_im_context_focus_out(GtkIMContext *);
extern GtkBindingSet *gtk_binding_set_find(const gchar *);
extern const gchar *gtk_action_group_translate_string(GtkActionGroup *,
						      const gchar *);
extern gboolean gtk_window_get_decorated(GtkWindow *);
extern gboolean gtk_range_get_inverted(GtkRange *);
extern void gtk_widget_child_notify(GtkWidget *, const gchar *);
extern void gtk_text_view_set_right_margin(GtkTextView *, gint);
extern guint gtk_table_get_row_spacing(GtkTable *, guint);
extern GtkAction *gtk_action_new(const gchar *, const gchar *,
				 const gchar *, const gchar *);
extern void gtk_container_child_set_property(GtkContainer *, GtkWidget *,
					     const gchar *,
					     const GValue *);
extern void
gtk_tree_model_filter_convert_iter_to_child_iter(GtkTreeModelFilter *,
						 GtkTreeIter *,
						 GtkTreeIter *);
extern void gtk_widget_reset_shapes(GtkWidget *);
extern GtkTextWindowType gtk_text_view_get_window_type(GtkTextView *,
						       GdkWindow *);
extern void gtk_text_view_set_editable(GtkTextView *, gboolean);
extern gint gtk_text_iter_get_offset(const GtkTextIter *);
extern GType gtk_plug_get_type(void);
extern void gtk_im_context_set_client_window(GtkIMContext *, GdkWindow *);
extern void gtk_image_set_from_icon_name(GtkImage *, const gchar *,
					 GtkIconSize);
extern gboolean gtk_text_iter_forward_search(const GtkTextIter *,
					     const gchar *,
					     GtkTextSearchFlags,
					     GtkTextIter *, GtkTextIter *,
					     const GtkTextIter *);
extern void gtk_tree_view_set_fixed_height_mode(GtkTreeView *, gboolean);
extern GList *gtk_icon_view_get_selected_items(GtkIconView *);
extern void gtk_widget_hide_all(GtkWidget *);
extern void gtk_about_dialog_set_artists(GtkAboutDialog *,
					 const gchar * *);
extern void gtk_target_list_add_uri_targets(GtkTargetList *, guint);
extern GType gtk_scale_get_type(void);
extern gint gtk_text_tag_get_priority(GtkTextTag *);
extern void gtk_tree_selection_set_mode(GtkTreeSelection *,
					GtkSelectionMode);
extern GType gtk_text_direction_get_type(void);
extern GType gtk_accessible_get_type(void);
extern void gtk_window_get_frame_dimensions(GtkWindow *, gint *, gint *,
					    gint *, gint *);
extern GType gtk_tool_button_get_type(void);
extern gboolean gtk_text_iter_backward_visible_word_starts(GtkTextIter *,
							   gint);
extern void gtk_container_add_with_properties(GtkContainer *, GtkWidget *,
					      const gchar *, ...);
extern void gtk_spin_button_set_snap_to_ticks(GtkSpinButton *, gboolean);
extern GtkClipboard *gtk_clipboard_get(GdkAtom);
extern GtkWrapMode gtk_text_view_get_wrap_mode(GtkTextView *);
extern GType gtk_menu_tool_button_get_type(void);
extern const gchar *gtk_tree_view_column_get_title(GtkTreeViewColumn *);
extern GType gtk_window_type_get_type(void);
extern void gtk_widget_reset_rc_styles(GtkWidget *);
extern GList *gtk_action_group_list_actions(GtkActionGroup *);
extern void gtk_list_store_prepend(GtkListStore *, GtkTreeIter *);
extern GType gtk_hscale_get_type(void);
extern void gtk_binding_set_add_path(GtkBindingSet *, GtkPathType,
				     const gchar *, GtkPathPriorityType);
extern void gtk_paint_diamond(GtkStyle *, GdkWindow *, GtkStateType,
			      GtkShadowType, GdkRectangle *, GtkWidget *,
			      const gchar *, gint, gint, gint, gint);
extern void gtk_tool_item_set_visible_horizontal(GtkToolItem *, gboolean);
extern GType gtk_object_flags_get_type(void);
extern const gchar *gtk_about_dialog_get_website(GtkAboutDialog *);
extern GtkBorder *gtk_border_copy(const GtkBorder *);
extern gboolean gtk_spin_button_get_numeric(GtkSpinButton *);
extern gint gtk_label_get_max_width_chars(GtkLabel *);
extern gboolean gtk_tree_view_get_hover_selection(GtkTreeView *);
extern GType gtk_dialog_flags_get_type(void);
extern GType gtk_cell_view_get_type(void);
extern GtkWidget *gtk_image_menu_item_new_from_stock(const gchar *,
						     GtkAccelGroup *);
extern void gtk_icon_view_set_spacing(GtkIconView *, gint);
extern void gtk_paint_box(GtkStyle *, GdkWindow *, GtkStateType,
			  GtkShadowType, GdkRectangle *, GtkWidget *,
			  const gchar *, gint, gint, gint, gint);
extern void gtk_entry_completion_set_popup_completion(GtkEntryCompletion *,
						      gboolean);
extern void gtk_toolbar_set_orientation(GtkToolbar *, GtkOrientation);
extern void gtk_drag_source_set_target_list(GtkWidget *, GtkTargetList *);
extern void gtk_settings_install_property_parser(GParamSpec *,
						 GtkRcPropertyParser);
extern void gtk_file_chooser_set_show_hidden(GtkFileChooser *, gboolean);
extern gboolean gtk_icon_source_get_direction_wildcarded(const
							 GtkIconSource *);
extern void gtk_spin_button_configure(GtkSpinButton *, GtkAdjustment *,
				      gdouble, guint);
extern void gtk_notebook_next_page(GtkNotebook *);
extern void gtk_icon_view_set_column_spacing(GtkIconView *, gint);
extern GSList *gtk_file_chooser_list_filters(GtkFileChooser *);
extern void gtk_fixed_move(GtkFixed *, GtkWidget *, gint, gint);
extern GtkAccelMap *gtk_accel_map_get(void);
extern GType gtk_vscale_get_type(void);
extern void gtk_about_dialog_set_logo(GtkAboutDialog *, GdkPixbuf *);
extern gint gtk_text_iter_get_line(const GtkTextIter *);
extern GtkToolItem *gtk_toggle_tool_button_new_from_stock(const gchar *);
extern gboolean gtk_tree_model_get_iter_first(GtkTreeModel *,
					      GtkTreeIter *);
extern PangoAttrList *gtk_label_get_attributes(GtkLabel *);
extern GtkWidget *gtk_image_new_from_icon_name(const gchar *, GtkIconSize);
extern AtkObject *gtk_widget_get_accessible(GtkWidget *);
extern GType gtk_metric_type_get_type(void);
extern GtkToolItem *gtk_menu_tool_button_new(GtkWidget *, const gchar *);
extern void gtk_scale_set_digits(GtkScale *, gint);
extern void gtk_label_set_text(GtkLabel *, const gchar *);
extern GtkWidget *gtk_notebook_get_menu_label(GtkNotebook *, GtkWidget *);
extern GtkIMContext *gtk_im_context_simple_new(void);
extern GtkIconSet *gtk_icon_set_copy(GtkIconSet *);
extern GtkRcStyle *gtk_rc_style_copy(GtkRcStyle *);
extern void gtk_text_buffer_remove_tag(GtkTextBuffer *, GtkTextTag *,
				       const GtkTextIter *,
				       const GtkTextIter *);
extern GType gtk_tree_view_drop_position_get_type(void);
extern GType gtk_match_type_get_type(void);
extern GType gtk_toolbar_space_style_get_type(void);
extern GtkAdjustment *gtk_container_get_focus_vadjustment(GtkContainer *);
extern gboolean gtk_widget_translate_coordinates(GtkWidget *, GtkWidget *,
						 gint, gint, gint *,
						 gint *);
extern void gtk_label_set_label(GtkLabel *, const gchar *);
extern void gtk_entry_set_alignment(GtkEntry *, gfloat);
extern GtkTextChildAnchor *gtk_text_iter_get_child_anchor(const GtkTextIter
							  *);
extern void gtk_tree_view_unset_rows_drag_dest(GtkTreeView *);
extern GdkVisual *gtk_widget_get_default_visual(void);
extern void gtk_drag_dest_set_proxy(GtkWidget *, GdkWindow *,
				    GdkDragProtocol, gboolean);
extern void gtk_entry_set_max_length(GtkEntry *, gint);
extern GType gtk_vseparator_get_type(void);
extern void gtk_tree_view_set_vadjustment(GtkTreeView *, GtkAdjustment *);
extern GtkSelectionData *gtk_selection_data_copy(GtkSelectionData *);
extern void gtk_list_store_reorder(GtkListStore *, gint *);
extern void gtk_accel_map_load_scanner(GScanner *);
extern void gtk_tree_view_set_hover_expand(GtkTreeView *, gboolean);
extern void gtk_table_set_col_spacings(GtkTable *, guint);
extern void gtk_widget_queue_draw_area(GtkWidget *, gint, gint, gint,
				       gint);
extern GtkTreeModel *gtk_icon_view_get_model(GtkIconView *);
extern void gtk_tree_view_set_reorderable(GtkTreeView *, gboolean);
extern GtkTextMark *gtk_text_buffer_get_insert(GtkTextBuffer *);
extern const gchar *gtk_action_get_accel_path(GtkAction *);
extern GtkWidget *gtk_entry_new(void);
extern void gtk_tree_view_expand_to_path(GtkTreeView *, GtkTreePath *);
extern void gtk_paint_polygon(GtkStyle *, GdkWindow *, GtkStateType,
			      GtkShadowType, GdkRectangle *, GtkWidget *,
			      const gchar *, GdkPoint *, gint, gboolean);
extern gboolean gtk_init_check(int *, char ***);
extern gboolean gtk_tool_item_get_visible_vertical(GtkToolItem *);
extern gint gtk_text_iter_get_visible_line_offset(const GtkTextIter *);
extern gboolean gtk_spin_button_get_snap_to_ticks(GtkSpinButton *);
extern gboolean gtk_text_iter_forward_line(GtkTextIter *);
extern GType gtk_tree_view_column_get_type(void);
extern GType gtk_direction_type_get_type(void);
extern void gtk_tree_view_set_hover_selection(GtkTreeView *, gboolean);
extern void gtk_tree_view_set_expander_column(GtkTreeView *,
					      GtkTreeViewColumn *);
extern GType gtk_cell_renderer_combo_get_type(void);
extern void gtk_toggle_button_set_inconsistent(GtkToggleButton *,
					       gboolean);
extern GtkWidget *gtk_menu_get_attach_widget(GtkMenu *);
extern gboolean gtk_tree_model_iter_children(GtkTreeModel *, GtkTreeIter *,
					     GtkTreeIter *);
extern GdkPixbuf *gtk_window_get_icon(GtkWindow *);
extern GdkDragContext *gtk_drag_begin(GtkWidget *, GtkTargetList *,
				      GdkDragAction, gint, GdkEvent *);
extern void gtk_init(int *, char ***);
extern gchar *gtk_color_selection_palette_to_string(const GdkColor *,
						    gint);
extern void gtk_container_child_set_valist(GtkContainer *, GtkWidget *,
					   const gchar *, va_list);
extern void gtk_paint_focus(GtkStyle *, GdkWindow *, GtkStateType,
			    GdkRectangle *, GtkWidget *, const gchar *,
			    gint, gint, gint, gint);
extern GtkUpdateType gtk_range_get_update_policy(GtkRange *);
extern void gtk_toolbar_set_icon_size(GtkToolbar *, GtkIconSize);
extern GType gtk_combo_get_type(void);
extern GType gtk_pack_direction_get_type(void);
extern GdkPixmap *gtk_icon_view_create_drag_icon(GtkIconView *,
						 GtkTreePath *);
extern gboolean gtk_icon_view_get_cursor(GtkIconView *, GtkTreePath * *,
					 GtkCellRenderer * *);
extern void gtk_icon_view_scroll_to_path(GtkIconView *, GtkTreePath *,
					 gboolean, gfloat, gfloat);
extern void gtk_icon_view_set_cursor(GtkIconView *, GtkTreePath *,
				     GtkCellRenderer *, gboolean);
extern void gtk_icon_view_set_reorderable(GtkIconView *, gboolean);
extern gboolean gtk_icon_view_get_reorderable(GtkIconView *);
extern gboolean gtk_icon_view_get_item_at_pos(GtkIconView *, gint, gint,
					      GtkTreePath * *,
					      GtkCellRenderer * *);
extern gboolean gtk_icon_view_get_visible_range(GtkIconView *,
						GtkTreePath * *,
						GtkTreePath * *);
extern void gtk_icon_view_enable_model_drag_dest(GtkIconView *,
						 const GtkTargetEntry *,
						 gint, GdkDragAction);
extern void gtk_icon_view_enable_model_drag_source(GtkIconView *,
						   GdkModifierType,
						   const GtkTargetEntry *,
						   gint, GdkDragAction);
extern gboolean gtk_icon_view_get_dest_item_at_pos(GtkIconView *, gint,
						   gint, GtkTreePath * *,
						   GtkIconViewDropPosition
						   *);
extern void gtk_icon_view_get_drag_dest_item(GtkIconView *,
					     GtkTreePath * *,
					     GtkIconViewDropPosition *);
extern void gtk_icon_view_set_drag_dest_item(GtkIconView *, GtkTreePath *,
					     GtkIconViewDropPosition);
extern void gtk_icon_view_unset_model_drag_source(GtkIconView *);
extern void gtk_icon_view_unset_model_drag_dest(GtkIconView *);
extern void gtk_drag_set_icon_name(GdkDragContext *, const gchar *, gint,
				   gint);
extern void gtk_drag_source_set_icon_name(GtkWidget *, const gchar *);
extern void gtk_image_clear(GtkImage *);
extern gint gtk_dialog_get_response_for_widget(GtkDialog *, GtkWidget *);
extern void gtk_tool_button_set_icon_name(GtkToolButton *, const gchar *);
extern const gchar *gtk_tool_button_get_icon_name(GtkToolButton *);
extern GtkTreeModel *gtk_tree_row_reference_get_model(GtkTreeRowReference
						      *);
extern void gtk_tree_view_column_queue_resize(GtkTreeViewColumn *);
extern gboolean gtk_tree_view_get_visible_range(GtkTreeView *,
						GtkTreePath * *,
						GtkTreePath * *);
extern gboolean gtk_size_group_get_ignore_hidden(GtkSizeGroup *);
extern void gtk_size_group_set_ignore_hidden(GtkSizeGroup *, gboolean);
extern void gtk_file_chooser_set_do_overwrite_confirmation(GtkFileChooser
							   *, gboolean);
extern gboolean
gtk_file_chooser_get_do_overwrite_confirmation(GtkFileChooser *);
extern gboolean
gtk_entry_completion_get_popup_single_match(GtkEntryCompletion *);
extern void gtk_entry_completion_set_popup_single_match(GtkEntryCompletion
							*, gboolean);
extern gboolean gtk_entry_completion_get_popup_set_width(GtkEntryCompletion
							 *);
extern void gtk_entry_completion_set_popup_set_width(GtkEntryCompletion *,
						     gboolean);
extern void gtk_window_set_urgency_hint(GtkWindow *, gboolean);
extern void gtk_window_present_with_time(GtkWindow *, guint32);
extern gboolean gtk_window_get_urgency_hint(GtkWindow *);
extern void gtk_about_dialog_set_wrap_license(GtkAboutDialog *, gboolean);
extern gboolean gtk_about_dialog_get_wrap_license(GtkAboutDialog *);
extern GtkPackDirection gtk_menu_bar_get_child_pack_direction(GtkMenuBar
							      *);
extern GtkPackDirection gtk_menu_bar_get_pack_direction(GtkMenuBar *);
extern void gtk_menu_bar_set_child_pack_direction(GtkMenuBar *,
						  GtkPackDirection);
extern void gtk_menu_bar_set_pack_direction(GtkMenuBar *,
					    GtkPackDirection);
extern void gtk_stock_set_translate_func(const gchar *, GtkTranslateFunc,
					 gpointer, GtkDestroyNotify);
extern GClosure *gtk_action_get_accel_closure(GtkAction *);
extern GtkWidget *gtk_scrolled_window_get_hscrollbar(GtkScrolledWindow *);
extern GtkWidget *gtk_scrolled_window_get_vscrollbar(GtkScrolledWindow *);
extern gboolean gtk_menu_shell_get_take_focus(GtkMenuShell *);
extern void gtk_menu_shell_set_take_focus(GtkMenuShell *, gboolean);
extern gboolean gtk_text_iter_backward_visible_line(GtkTextIter *);
extern gboolean gtk_text_iter_backward_visible_lines(GtkTextIter *, gint);
extern gboolean gtk_text_iter_forward_visible_line(GtkTextIter *);
extern gboolean gtk_text_iter_forward_visible_lines(GtkTextIter *, gint);
</SCREEN>
</SECT2>
</SECT1>
<SECT1 ID=libgtk-x11-2.0man>
<TITLE>Interface Definitions for libgtk-x11-2.0</TITLE>
<PARA>
The interfaces defined on the following pages are included in libgtk-x11-2.0 and are defined
by this specification.
Unless otherwise noted, these interfaces shall be included
in the source standard.
</PARA>
<PARA>
Other interfaces listed in <XREF LINKEND=libgtk-x11-2.0> shall behave as described
in the referenced base document.
</PARA>
<refentry id="gtk-x11-gtk.button.get.image"> <refmeta>
<refentrytitle>gtk_button_get_image</refentrytitle>
<refmiscinfo></refmiscinfo>
</refmeta>
<refnamediv>
<refname>gtk_button_get_image</refname>
<refpurpose>
get button image widget
</refpurpose>
</refnamediv>
<refsynopsisdiv>
<funcsynopsis>
<funcsynopsisinfo>
#include &lt;gtk/gtk.h&gt;
</funcsynopsisinfo>
<funcprototype>
<funcdef>GtkWidget *<function>gtk_button_get_image</function></funcdef>
<paramdef>GtkButton *<parameter>button</parameter></paramdef>
</funcprototype>
</funcsynopsis>
</refsynopsisdiv>
<refsect1>
<title>Description</title>
<para>
The <function>gtk_button_get_image</function>
gets the widget that is currenty set as the image of 
<parameter>button</parameter>. This may have been 
explicitly set by <function>gtk_button_set_image</function>
or constructed by <function>gtk_button_new_from_stock</function>.
</para>
</refsect1>

<refsect1>
<title>Return Value</title>
<para>
The <function>gtk_button_get_image</function> function returns 
a <type>GtkWidget</type> pointer referring to the image.
If there is no associated image, <constant>NULL</constant>
is returned.
</para>
</refsect1>

<refsect1>
<title>Errors</title>
<para>
No errors are defined.
</para>
</refsect1>

</refentry>

<refentry id="gtk-x11-gtk.button.set.image"> <refmeta>
<refentrytitle>gtk_button_set_image</refentrytitle>
<refmiscinfo></refmiscinfo>
</refmeta>
<refnamediv>
<refname>gtk_button_set_image</refname>
<refpurpose>
set button image widget
</refpurpose>
</refnamediv>
<refsynopsisdiv>
<funcsynopsis>
<funcsynopsisinfo>
#include &lt;gtk/gtk.h&gt;
</funcsynopsisinfo>
<funcprototype>
<funcdef>void <function>gtk_button_set_image</function></funcdef>
<paramdef>GtkButton *<parameter>button</parameter></paramdef>
<paramdef>GtkWidget *<parameter>widget</parameter></paramdef>
</funcprototype>
</funcsynopsis>
</refsynopsisdiv>
<refsect1>
<title>Description</title>
<para>
The <function>gtk_button_set_image</function> function
sets the image of <parameter>button</parameter>to the
widget given by <parameter>widget</parameter>.
Whether the image is displayed or not depends on the
setting of the <property>gtk-button-images</property> property.
It is not necessary to call <function>gtk_widget_show</function>
on the image.
</para>
</refsect1>

<refsect1>
<title>Errors</title>
<para>
No errors are defined.
</para>
</refsect1>

</refentry>

<REFENTRY ID="gtk-x11-gtk.toolbar.get.tooltips"> <REFMETA>
<REFENTRYTITLE>gtk_toolbar_get_tooltips</REFENTRYTITLE>
<REFMISCINFO>Base Libraries</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>gtk_toolbar_get_tooltips
</REFNAME>
<REFPURPOSE>
retrieve whether tooltips are enabled
</REFPURPOSE>
</REFNAMEDIV>

<REFSYNOPSISDIV>
<REFSYNOPSISDIVINFO>
<DATE>24 September 2008</DATE>
</REFSYNOPSISDIVINFO>
<FUNCSYNOPSIS>
<FUNCSYNOPSISINFO>
#include &lt;gtk/gtk.h&gt;
</FUNCSYNOPSISINFO>
<FUNCPROTOTYPE>
 <FUNCDEF>gboolean <FUNCTION>gtk_toolbar_get_tooltips</FUNCTION></FUNCDEF>
 <PARAMDEF>GtkToolbar *
  <PARAMETER>toolbar</PARAMETER></PARAMDEF>
</FUNCPROTOTYPE>
</FUNCSYNOPSIS>
</REFSYNOPSISDIV>

<REFSECT1>
<REFSECT1INFO>
<DATE>24 September 2008</DATE>
</REFSECT1INFO>
<TITLE>Description
</TITLE>
<PARA>
<FUNCTION>gtk_toolbar_get_tooltips</FUNCTION> shall
retrieve whether the tooltips of <PARAMETER>toolbar</PARAMETER>
are enabled.
</PARA>

<para>
This interface has been deprecated since version 2.14
of the GTK+ specification.
</para>

</REFSECT1>

<REFSECT1>
<TITLE>Return Value
</TITLE>
<PARA>
<FUNCTION>gtk_toolbar_get_tooltips</FUNCTION> shall return
<constant>TRUE</constant> if the tooltips 
of <PARAMETER>toolbar</PARAMETER> are enabled, and
<constant>FALSE</constant> if they are not.
</PARA>
</REFSECT1>

<REFSECT1>
<TITLE>See Also
</TITLE>
<PARA>
<FUNCTION>gtk_toolbar_set_tooltips</FUNCTION>
</PARA>
</REFSECT1>

</REFENTRY>

<REFENTRY ID="gtk-x11-gtk.toolbar.set.tooltips"> <REFMETA>
<REFENTRYTITLE>gtk_toolbar_set_tooltips</REFENTRYTITLE>
<REFMISCINFO>Base Libraries</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>gtk_toolbar_set_tooltips
</REFNAME>
<REFPURPOSE>
set whether a toolbar's tooltips are active
</REFPURPOSE>
</REFNAMEDIV>

<REFSYNOPSISDIV>
<REFSYNOPSISDIVINFO>
<DATE>24 September 2008</DATE>
</REFSYNOPSISDIVINFO>
<FUNCSYNOPSIS>
<FUNCSYNOPSISINFO>
#include &lt;gtk/gtk.h&gt;
</FUNCSYNOPSISINFO>
<FUNCPROTOTYPE>
 <FUNCDEF>void <FUNCTION>gtk_toolbar_set_tooltips</FUNCTION></FUNCDEF>
 <PARAMDEF>GtkToolbar *
  <PARAMETER>toolbar</PARAMETER></PARAMDEF>
 <PARAMDEF>gboolean
  <PARAMETER>enable</PARAMETER></PARAMDEF>
</FUNCPROTOTYPE>
</FUNCSYNOPSIS>
</REFSYNOPSISDIV>

<REFSECT1>
<REFSECT1INFO>
<DATE>24 September 2008</DATE>
</REFSECT1INFO>
<TITLE>Description
</TITLE>
<PARA>
<FUNCTION>gtk_toolbar_set_tooltips</FUNCTION> shall set whether the tooltips of
<PARAMETER>toolbar</PARAMETER> are active. If the value of the parameter
<PARAMETER>enable</PARAMETER> is <constant>TRUE</constant>, then the tooltips shall
be made active; otherwise, they shall be made inactive.
</PARA>

<para>
This call may have no effect.
The interface has been deprecated since version 2.14
of the GTK+ specification.
</para>
</REFSECT1>

<REFSECT1>
<TITLE>See Also
</TITLE>
<PARA>
<FUNCTION>gtk_toolbar_get_tooltips</FUNCTION>
</PARA>
</REFSECT1>

</REFENTRY>

</SECT1>
<!-- End of text generated from database -->


</CHAPTER>

</PART>
