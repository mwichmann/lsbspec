#!/usr/bin/perl

use Getopt::Long;
use DBI;

use Env qw(LSBUSER LSBDBPASSWD LSBDB LSBDBHOST);

sub usage()
{
print STDERR "mkcmdlist -v <lsbversion> [-m <moduleid> ]\n Default moduleid is 1 (i.e LSB Core)\n";
die;
}

# Uncomment to trace SQL statments
#$trace=1;

#
# 1) process the arguments
#
# We can get module id from Module Table. Commands list will be generated as per modules.
GetOptions("m=i" => \$moduleid,
			"v=s" => \$lsbversion);
if( !$moduleid ) { $moduleid=1; }
if( !$lsbversion ) { usage(); }

#
# 2) Establish connection to the database
#
my $dbh = DBI->connect('DBI:mysql:database='.$LSBDB.';host='.$LSBDBHOST, $LSBUSER, $LSBDBPASSWD)
    or die "Couldn't connect to database: ".DBI->errstr;

printf("<!-- Start of text generated from database -->\n");
printf("<!-- generated from the LSB specification database -->\n");
printf("<!--    by \$Header: mkcmdlist,v 1.5 2007/10/26 16:56:05 ches Exp $- -->\n");
my $now_string = localtime;
printf("<!--    at %s -->\n", $now_string );

print "<SECT1 ID=cmdbehav>\n";
print "<TITLE>Command Behavior</TITLE>\n";
print "<PARA>\n";
print "This section contains descriptions for commands and utilities whose\n";
print "specified behavior in the LSB contradicts or extends the standards\n";
print "referenced. It also contains commands and utilities only required by\n";
print "the LSB and not specified by other standards.\n";
print "</PARA>\n";
#
# 3) get & print the library info
#
$select = "SELECT * FROM Command ";
$select.= "Left JOIN ModCmd ON MCcid=Cid ";
$select.= "LEFT JOIN Standard ON Sid=Cstandard ";
$select.= "WHERE MCmid=$moduleid AND MCappearedin <= '$lsbversion' AND MCappearedin <>'' ";
$select.= "AND (MCwithdrawnin IS NULL OR MCwithdrawnin > '$lsbversion') ";
$select.= "AND Cbuiltin != 'Yes' ";
$select.= "AND Sname='LSB' " ;
$select.= "ORDER BY Cname";
print STDERR $select,"\n" if $trace;

$cth = $dbh->prepare($select) or die "Couldn't prepare $select query: ".DBI->errstr;
$cth->execute or die "Couldn't execute $select query: ".DBI->errstr;

for(1..$cth->rows) {
        $entry = $cth->fetchrow_hashref() or die "Fetchrow failed on $select query: ".DBI->errstr;
        print "m4_include(".$entry->{'Cname'}.".sgml)\n";
}

$cth->finish;
$dbh->disconnect;

print "</SECT1>\n";
printf("<!-- End of text generated from database -->\n");
printf("<!--    by \$Header: mkcmdlist,v 1.5 2007/10/26 16:56:05 ches Exp $- -->\n");