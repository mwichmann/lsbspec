<PART>
<TITLE>Object Format</TITLE>

<CHAPTER id=objfmt>
<TITLE>Object Files</TITLE>
<PARA>
Executable files shall use the ELF  as defined by Toolkit Interface
Standard (TIS) Executable and Linking Format (ELF) and as supplimented by
this document.
</PARA>
</CHAPTER>

<CHAPTER id=Sections>
<TITLE>Sections</TITLE>
<PARA>
</PARA>
<SECT1>
<TITLE>ELF Section Types</TITLE>
<PARA>
The following sections types are defined in the ELF reference Specification.
<TABLE>
<TITLE>ELF Section Types</TITLE>
<TGROUP COLS=4>
<TBODY>
<ROW><ENTRY>SHT_DYNAMIC</ENTRY><ENTRY>SHT_DYNSYM</ENTRY><ENTRY>SHT_HASH</ENTRY><ENTRY>SHT_HIPROC</ENTRY></ROW>
<ROW><ENTRY>SHT_HIUSER</ENTRY><ENTRY>SHT_LOPROC</ENTRY><ENTRY>SHT_LOUSER</ENTRY><ENTRY>SHT_NOBITS</ENTRY></ROW>
<ROW><ENTRY>SHT_NOTE</ENTRY><ENTRY>SHT_NULL</ENTRY><ENTRY>SHT_PROGBITS</ENTRY><ENTRY>SHT_REL</ENTRY></ROW>
<ROW><ENTRY>SHT_RELA</ENTRY><ENTRY>SHT_SHLIB</ENTRY><ENTRY>SHT_STRTAB</ENTRY><ENTRY>SHT_SYMTAB</ENTRY></ROW>
</TBODY>

</TGROUP>
</TABLE>
</PARA>
</SECT1>
<SECT1>
<TITLE>Linux Section Types</TITLE>
<PARA>
The following Linux section types are defined here.
<TABLE>
<TITLE>Linux Section Types</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW><ENTRY>SHT_GNU_verdef</ENTRY><ENTRY>Description needed here</ENTRY></ROW>
<ROW><ENTRY>SHT_GNU_verneed</ENTRY><ENTRY>description needed here</ENTRY></ROW>
<ROW><ENTRY>SHT_GNU_versym</ENTRY><ENTRY>description needed here</ENTRY></ROW>
</TBODY>

</TGROUP>
</TABLE>
</PARA>
</SECT1>
</CHAPTER>

<CHAPTER id=SpecialSections>
<TITLE>Special Sections</TITLE>
<PARA>
</PARA>
<SECT1>
<TITLE>ELF Special Sections</TITLE>
<PARA>
The following sections are defined in the ELF reference Specification.
<TABLE>
<TITLE>ELF Special Sections</TITLE>
<TGROUP COLS=4>
<TBODY>
<ROW><ENTRY>.bss</ENTRY><ENTRY>.comment</ENTRY><ENTRY>.data</ENTRY><ENTRY>.data1</ENTRY></ROW>
<ROW><ENTRY>.debug</ENTRY><ENTRY>.dynamic</ENTRY><ENTRY>.dynstr</ENTRY><ENTRY>.dynsym</ENTRY></ROW>
<ROW><ENTRY>.fini</ENTRY><ENTRY>.got</ENTRY><ENTRY>.hash</ENTRY><ENTRY>.init</ENTRY></ROW>
<ROW><ENTRY>.interp</ENTRY><ENTRY>.line</ENTRY><ENTRY>.note</ENTRY><ENTRY>.plt</ENTRY></ROW>
<ROW><ENTRY>.rel.bss</ENTRY><ENTRY>.rel.data</ENTRY><ENTRY>.rel.got</ENTRY><ENTRY>.rel.plt</ENTRY></ROW>
<ROW><ENTRY>.rel.text</ENTRY><ENTRY>.rodata</ENTRY><ENTRY>.rodata1</ENTRY><ENTRY>.shstrtab</ENTRY></ROW>
<ROW><ENTRY>.strtab</ENTRY><ENTRY>.symtab</ENTRY><ENTRY>.text</ENTRY></ROW>
</TBODY>

</TGROUP>
</TABLE>
</PARA>
</SECT1>
<SECT1>
<TITLE>Linux Special Sections</TITLE>
<PARA>
The following Linux specific sections are defined here.
<TABLE>
<TITLE>Linux Special Sections</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW><ENTRY>.ctors</ENTRY><ENTRY></ENTRY></ROW>
<ROW><ENTRY>.dtors</ENTRY><ENTRY></ENTRY></ROW>
<ROW><ENTRY>.eh_frame</ENTRY><ENTRY>Need a description</ENTRY></ROW>
<ROW><ENTRY>.gnu.version</ENTRY><ENTRY>We need a description here</ENTRY></ROW>
<ROW><ENTRY>.gnu.version_r</ENTRY><ENTRY>Need a description of this section</ENTRY></ROW>
<ROW><ENTRY>.note.ABI-tag</ENTRY><ENTRY></ENTRY></ROW>
<ROW><ENTRY>.stab</ENTRY><ENTRY>Need a description</ENTRY></ROW>
<ROW><ENTRY>.stabstr</ENTRY><ENTRY>Need a description</ENTRY></ROW>
</TBODY>

</TGROUP>
</TABLE>
</PARA>
</SECT1>
</CHAPTER>

<CHAPTER id=Symmap>
<TITLE>Symbol Mapping</TITLE>
<PARA>
This chapter defines how names are mapped from the source symbol to
the object symbol.
</PARA>
<SECT1>
<TITLE>C Language</TITLE>
<PARA>
Unless otherwise specificed as a Mangle, external C symbols have the same
names in C and object files' symbol tables.
</PARA>
</SECT1>
<SECT1>
<TITLE>C++ Language</TITLE>
<PARA>
Because of the immaturity of C++ ABI's (for name mangling, exception
handling, and other such issues), we do not standardize any C++
libraries.  It seems to be possible, using existing Linux development
tools, to write an application in C++ which complies with this rule by
linking statically (or shipping a .so with the application) libstdc++
and libgcc.
<NOTE>
<PARA>
We do need to specify some mechanisms, such as global constructors and
destructors (.ctor and .dtor I think).  But that is much easier than a
full C++ ABI.
</PARA>
</NOTE>
</PARA>
</SECT1>
</CHAPTER>
</PART>
