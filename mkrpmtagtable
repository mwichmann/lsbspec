#!/usr/bin/perl

use Getopt::Long;
use DBI;

use Env qw(LSBUSER LSBDBPASSWD LSBDB LSBDBHOST);

sub usage()
{
print STDERR "mkrpmtagtable -g <groupname> -t <tabletitle> -v <lsbversion>\n";
die;
}

# Uncomment to trace SQL statments
#$trace=1;

#
# 1) process the arguments
#
GetOptions("g=s" => \$groupname,
			"v=s" => \$lsbversion,
			"t=s" => \$title);

if( !$groupname ) { usage(); }
if( !$title ) { usage(); }
if( !$lsbversion ) { usage(); }

#
# 2) Establish connection to the database
#
$dbh = DBI->connect('DBI:mysql:database='.$LSBDB.';host='.$LSBDBHOST, $LSBUSER, $LSBDBPASSWD)
    or die "Couldn't connect to database: ".DBI->errstr;

#
# 3) get the data
#
$select = "SELECT * FROM RpmTag ";
$select.= "WHERE Rgroup=".$dbh->quote($groupname);
$select.= " AND (Rappearedin IS NOT NULL and Rappearedin <= '$lsbversion' and Rappearedin<>'') ";
$select.= " AND (Rwithdrawnin IS NULL OR Rwithdrawnin > '$lsbversion') ";
$select.= " ORDER BY Rtag ";
print STDERR $select,"\n" if $trace;
$sth = $dbh->prepare($select) or die "Couldn't prepare $select query: ".DBI->errstr;
$sth->execute or die "Couldn't execute $select query: ".DBI->errstr;

printf("<!-- Start of text generated from database -->\n");
printf("<!-- generated from the LSB specification database -->\n");
printf("<!--    by \$Header: mkrpmtagtable 1.2 2005-05-11 21:46:31 nick Exp $- -->\n");
my $now_string = localtime;
printf("<!--    at %s -->\n", $now_string );

if($sth->rows) {
	print "<TABLE>\n";
	print "<TITLE>$title</TITLE>\n";
	print "<TGROUP COLS=5>\n";
	print "<THEAD>\n";
	print "<ROW>\n";
	print "<ENTRY ALIGN=center>Name</ENTRY>";
	print "<ENTRY ALIGN=center>Tag Value</ENTRY>";
	print "<ENTRY ALIGN=center>Type</ENTRY>";
	print "<ENTRY ALIGN=center>Count</ENTRY>";
	print "<ENTRY ALIGN=center>Status</ENTRY>";
	print "</ROW>\n";
	print "</THEAD>\n";
	print "<TBODY>\n";
	for(1..$sth->rows) {
		print "<ROW>";
		$entry=$sth->fetchrow_hashref;
		printf "<ENTRY><CONSTANT>%s</CONSTANT></ENTRY>",$entry->{'Rname'};
		printf "<ENTRY>%s</ENTRY>",$entry->{'Rtag'};
		printf "<ENTRY>%s</ENTRY>",$entry->{'Rtype'};
		if( $entry->{'Rcount'} ) {
			printf "<ENTRY>%s</ENTRY>",$entry->{'Rcount'};
		} else {
			printf "<ENTRY></ENTRY>";
		}
		printf "<ENTRY>%s</ENTRY>",$entry->{'Rstatus'};
		print "</ROW>\n";
	}
	print "</TBODY>\n";
	print "</TGROUP>\n";
	print "</TABLE>\n";
}
$sth->finish;

$select = "SELECT * FROM RpmTag ";
$select.= "WHERE Rgroup=".$dbh->quote($groupname);
$select.= " AND (Rappearedin IS NOT NULL and Rappearedin <= '$lsbversion' and Rappearedin<>'') ";
$select.= " AND (Rwithdrawnin IS NULL OR Rwithdrawnin > '$lsbversion') ";
$select.= " ORDER BY Rtag ";
#print $select,"\n";
$sth = $dbh->prepare($select) or die "Couldn't prepare $select query: ".DBI->errstr;
$sth->execute or die "Couldn't execute $select query: ".DBI->errstr;

if($sth->rows) {
	print "<VARIABLELIST>\n";
	for(1..$sth->rows) {
		print "<VARLISTENTRY>";
		$entry=$sth->fetchrow_hashref;
		printf "<TERM><CONSTANT>%s</CONSTANT></TERM>",$entry->{'Rname'};
		printf "<LISTITEM><PARA>%s</PARA></LISTITEM>",$entry->{'Rdescription'};
		print "</VARLISTENTRY>\n";
	}
print "</VARIABLELIST>\n";
}
$sth->finish;
$dbh->disconnect;

printf("<!-- End of text generated from database -->\n");
printf("<!--    by \$Header: mkrpmtagtable 1.2 2005-05-11 21:46:31 nick Exp $- -->\n");

