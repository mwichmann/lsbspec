<!-- Start of text generated from database -->
<!-- generated from the LSB specification database -->
<!--    by $Header: /cvsroot/lsb/spec/mklibspec,v 1.49 2002/09/30 19:50:36 anderson Exp 0 -->
<!--    at Fri Nov 22 10:37:26 2002 -->
<SECT1 ID=libpthread>
<TITLE>Interfaces for libpthread</TITLE>
<PARA>
</PARA>
<TABLE>
<TITLE>libpthread Definition</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Library:</ENTRY>
<ENTRY>libpthread</ENTRY>
</ROW>
<ROW>
<ENTRY>SONAME:</ENTRY>
<ENTRY>libpthread.so.0</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The behavior of the interfaces in this library is specified by the following standards.<SIMPLELIST COLUMNS=1>
<MEMBER>
Linux Standard Base<FOOTNOTE ID="std-132-10">
<PARA>
Linux Standard Base</PARA>
</FOOTNOTE>
</MEMBER>
<MEMBER>
CAE Specification, January 1997, System Interfaces and Headers (XSH),Issue 5 (ISBN: 1-85912-181-0, C606)<FOOTNOTE ID="std-132-5">
<PARA>
CAE Specification, January 1997, System Interfaces and Headers (XSH),Issue 5 (ISBN: 1-85912-181-0, C606)</PARA>
</FOOTNOTE>
</MEMBER>
</SIMPLELIST>
</PARA>
<SECT2>
<!--libgroup-->
<TITLE>Posix Threads</TITLE>
<PARA>
</PARA>
<TABLE>
<TITLE>libpthread - Posix Threads Function Interfaces</TITLE>
<TGROUP COLS=5>
<TBODY>
<ROW>
<ENTRY>pthread_attr_destroy(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-132-5"></ENTRY>
<ENTRY>pthread_attr_setstackaddr(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-132-5"></ENTRY>
<ENTRY>pthread_getspecific(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-132-5"></ENTRY>
<ENTRY>pthread_once(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-132-5"></ENTRY>
<ENTRY>pthread_setcanceltype(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-132-5"></ENTRY>
</ROW>
<ROW>
<ENTRY>pthread_attr_getdetachstate(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-132-5"></ENTRY>
<ENTRY>pthread_attr_setstacksize(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-132-5"></ENTRY>
<ENTRY>pthread_join(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-132-5"></ENTRY>
<ENTRY>pthread_rwlock_destroy(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-132-5"></ENTRY>
<ENTRY>pthread_setconcurrency(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-132-5"></ENTRY>
</ROW>
<ROW>
<ENTRY>pthread_attr_getguardsize(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-132-5"></ENTRY>
<ENTRY>pthread_cancel(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-132-5"></ENTRY>
<ENTRY>pthread_key_create(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-132-5"></ENTRY>
<ENTRY>pthread_rwlock_init(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-132-5"></ENTRY>
<ENTRY>pthread_setschedparam(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-132-5"></ENTRY>
</ROW>
<ROW>
<ENTRY>pthread_attr_getinheritsched(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-132-5"></ENTRY>
<ENTRY>pthread_cond_broadcast(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-132-5"></ENTRY>
<ENTRY>pthread_key_delete(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-132-5"></ENTRY>
<ENTRY>pthread_rwlock_rdlock(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-132-5"></ENTRY>
<ENTRY>pthread_setspecific(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-132-5"></ENTRY>
</ROW>
<ROW>
<ENTRY>pthread_attr_getschedparam(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-132-5"></ENTRY>
<ENTRY>pthread_cond_destroy(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-132-5"></ENTRY>
<ENTRY>pthread_kill(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-132-5"></ENTRY>
<ENTRY>pthread_rwlock_timedrdlock(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-132-5"></ENTRY>
<ENTRY>pthread_sigmask(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-132-5"></ENTRY>
</ROW>
<ROW>
<ENTRY>pthread_attr_getschedpolicy(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-132-5"></ENTRY>
<ENTRY>pthread_cond_init(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-132-5"></ENTRY>
<ENTRY>pthread_mutex_destroy(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-132-5"></ENTRY>
<ENTRY>pthread_rwlock_timedwrlock(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-132-5"></ENTRY>
<ENTRY>pthread_testcancel(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-132-5"></ENTRY>
</ROW>
<ROW>
<ENTRY>pthread_attr_getscope(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-132-5"></ENTRY>
<ENTRY>pthread_cond_signal(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-132-5"></ENTRY>
<ENTRY>pthread_mutex_init(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-132-5"></ENTRY>
<ENTRY>pthread_rwlock_tryrdlock(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-132-5"></ENTRY>
<ENTRY>sem_close(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-132-5"></ENTRY>
</ROW>
<ROW>
<ENTRY>pthread_attr_getstackaddr(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-132-5"></ENTRY>
<ENTRY>pthread_cond_timedwait(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-132-5"></ENTRY>
<ENTRY>pthread_mutex_lock(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-132-5"></ENTRY>
<ENTRY>pthread_rwlock_trywrlock(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-132-5"></ENTRY>
<ENTRY>sem_destroy(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-132-5"></ENTRY>
</ROW>
<ROW>
<ENTRY>pthread_attr_getstacksize(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-132-5"></ENTRY>
<ENTRY>pthread_cond_wait(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-132-5"></ENTRY>
<ENTRY>pthread_mutex_trylock(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-132-5"></ENTRY>
<ENTRY>pthread_rwlock_unlock(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-132-5"></ENTRY>
<ENTRY>sem_getvalue(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-132-5"></ENTRY>
</ROW>
<ROW>
<ENTRY>pthread_attr_init(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-132-5"></ENTRY>
<ENTRY>pthread_condattr_destroy(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-132-5"></ENTRY>
<ENTRY>pthread_mutex_unlock(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-132-5"></ENTRY>
<ENTRY>pthread_rwlock_wrlock(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-132-5"></ENTRY>
<ENTRY>sem_init(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-132-5"></ENTRY>
</ROW>
<ROW>
<ENTRY>pthread_attr_setdetachstate(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-132-5"></ENTRY>
<ENTRY>pthread_condattr_init(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-132-5"></ENTRY>
<ENTRY>pthread_mutexattr_destroy(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-132-5"></ENTRY>
<ENTRY>pthread_rwlockattr_destroy(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-132-5"></ENTRY>
<ENTRY>sem_open(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-132-5"></ENTRY>
</ROW>
<ROW>
<ENTRY>pthread_attr_setguardsize(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-132-5"></ENTRY>
<ENTRY>pthread_create(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-132-5"></ENTRY>
<ENTRY>pthread_mutexattr_getpshared(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-132-5"></ENTRY>
<ENTRY>pthread_rwlockattr_getpshared(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-132-5"></ENTRY>
<ENTRY>sem_post(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-132-5"></ENTRY>
</ROW>
<ROW>
<ENTRY>pthread_attr_setinheritsched(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-132-5"></ENTRY>
<ENTRY>pthread_detach(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-132-5"></ENTRY>
<ENTRY>pthread_mutexattr_gettype(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-132-5"></ENTRY>
<ENTRY>pthread_rwlockattr_init(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-132-5"></ENTRY>
<ENTRY>sem_timedwait(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-132-10"></ENTRY>
</ROW>
<ROW>
<ENTRY>pthread_attr_setschedparam(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-132-5"></ENTRY>
<ENTRY>pthread_equal(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-132-5"></ENTRY>
<ENTRY>pthread_mutexattr_init(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-132-5"></ENTRY>
<ENTRY>pthread_rwlockattr_setpshared(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-132-5"></ENTRY>
<ENTRY>sem_trywait(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-132-5"></ENTRY>
</ROW>
<ROW>
<ENTRY>pthread_attr_setschedpolicy(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-132-5"></ENTRY>
<ENTRY>pthread_exit(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-132-5"></ENTRY>
<ENTRY>pthread_mutexattr_setpshared(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-132-5"></ENTRY>
<ENTRY>pthread_self(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-132-5"></ENTRY>
<ENTRY>sem_unlink(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-132-5"></ENTRY>
</ROW>
<ROW>
<ENTRY>pthread_attr_setscope(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-132-5"></ENTRY>
<ENTRY>pthread_getschedparam(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-132-5"></ENTRY>
<ENTRY>pthread_mutexattr_settype(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-132-5"></ENTRY>
<ENTRY>pthread_setcancelstate(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-132-5"></ENTRY>
<ENTRY>sem_wait(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-132-5"></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT2>
</SECT1>
<SECT1 ID=libpthread-ddefs>
<TITLE>Data Definitions for libpthread</TITLE>
<PARA>
This section contains standard data definitions that describe system data. These definitions are organized into groups that correspond to system headers. This convention is used as a convenience for the reader, and does not imply the existence of these headers, or their content.</PARA>
<PARA>
ISO C serves as the LSB reference programming language, and data definitions are specified in ISO C format. The C language is used here as a convenient notation. Using a C language description of these data objects does not preclude their use by other programming languages.</PARA>
</SECT1>
<!-- End of text generated from database -->
<!--    by $Header: /cvsroot/lsb/spec/mklibspec,v 1.49 2002/09/30 19:50:36 anderson Exp 0 -->
