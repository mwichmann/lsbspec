
SUBDIRS=intro lowlevel objfmt baselib dynlnk appendix

# These commands are those found on sourceforge.net. Please create your own
# wrapper script if needed instead of changing this

DB2HTML=sgmltools -b html
#DB2HTML=docbook2html -d ../../docbook-utils.dsl\#html -o spec -p '/usr/bin/jade -V %use-id-as-filename%'

DB2RTF=sgmltools -b rtf
#DB2RTF=docbook2rtf -d ../../docbook-utils.dsl\#print

DB2PS=sgmltools -b ps
#DB2PS=docbook2ps -d ../../docbook-utils.dsl\#print

DB2PDF=sgmltools -b pdf
#DB2PDF=docbook2pdf -d ../../docbook-utils.dsl\#print

DB2ONEHTML=sgmltools -b onehtml
#DB2ONEHTML=docbook2html -d ../../docbook-utils.dsl\#html -u -p '/usr/bin/jade -V %use-id-as-filename%'

DB2TXT=sgmltools -b txt
#DB2TXT=docbook2txt -d ../../docbook-utils.dsl\#print

all:: htmlspec rtfspec onehtmlspec txtspec

onehtmlspec: source
	$(DB2ONEHTML) spec.sgml

txtspec: source
	$(DB2TXT) spec.sgml
	nl -ba spec.txt > spec_lines.txt

rtfspec: source
	$(DB2RTF) spec.sgml

pdfspec: source
	$(DB2PDF) spec.sgml

psspec: source
	$(DB2PS) spec.sgml

source:
	(pwd=`pwd`;\
	echo "pwd=$$pwd";\
	arch=`basename $$pwd`;\
	echo "arch=$$arch";\
	sed -e "s#LSBVERSION#`cat ../../lsbversion.$$arch`#" <spec.sgml.sed >spec.sgml)
	for dir in $(SUBDIRS);do (cd $$dir && make all);done

gensrc:
	for dir in $(SUBDIRS);do (cd $$dir && make gensrc);done

clean::
	for dir in $(SUBDIRS);do (cd $$dir && make clean);done
	rm -f spec.html spec.rtf spec.sgml spec.txt spec_lines.txt spec.pdf

spotless::
	for dir in $(SUBDIRS);do (cd $$dir && make spotless);done

