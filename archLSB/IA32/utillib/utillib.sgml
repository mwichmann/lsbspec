<PART ID="tocutillib">
<TITLE>Utility Libraries</TITLE>

<CHAPTER id=utillib>
<TITLE>Libraries</TITLE>

<PARA>
The Utility libraries are those that are commonly used, but not part of
the Single Unix Specification.
</PARA>

<SECT1 ID=libz>
<TITLE>libz</TITLE>
<PARA>
</PARA>
<TABLE>
<TITLE></TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Library:</ENTRY>
<ENTRY>libz</ENTRY>
</ROW>
<ROW>
<ENTRY>Runtime Path:</ENTRY>
<ENTRY>libz.so.1</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The behaviour of the interfaces in this library is specified by the following Standards.<SIMPLELIST COLUMNS=1>
<MEMBER>
zlib 1.1.3 Manual<FOOTNOTE ID="std-127-24">
<PARA>
zlib 1.1.3 Manual</PARA>
</FOOTNOTE>
</MEMBER>
</SIMPLELIST>
</PARA>
<SECT2>
<TITLE>Compression Library</TITLE>
<PARA>
</PARA>
</SECT2>
</SECT1>


<SECT1 ID=libcurses>
<TITLE>libcurses</TITLE>
<PARA>
</PARA>
<TABLE>
<TITLE></TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Library:</ENTRY>
<ENTRY>libcurses</ENTRY>
</ROW>
<ROW>
<ENTRY>Runtime Path:</ENTRY>
<ENTRY>libncurses.so.5</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The behaviour of the interfaces in this library is specified by the following Standards.<SIMPLELIST COLUMNS=1>
<MEMBER>
 CAE Specification, May 1996, X/Open Curses, Issue 4, Version 2 (ISBN:
1-85912-171-3, C610), plus Corrigendum U018<FOOTNOTE ID="std-128-28">
<PARA>
 CAE Specification, May 1996, X/Open Curses, Issue 4, Version 2 (ISBN:
1-85912-171-3, C610), plus Corrigendum U018</PARA>
</FOOTNOTE>
</MEMBER>
</SIMPLELIST>
</PARA>
<SECT2>
<TITLE>Curses</TITLE>
<PARA>
</PARA>
</SECT2>
</SECT1>
<SECT1 ID=libcurses-ddefs>
<TITLE> Data Definitions for libcurses</TITLE>
<PARA>
</PARA>
<SECT2>
<TITLE>curses.h</TITLE>
<PARA>
</PARA>
<SCREEN>
typedef unsigned long chtype;

typedef char bool;

typedef Unknown Type:"" unknown SCREEN;

typedef struct _win_st
{

  short _cury;
  short _curx;
  short _maxy;
  short _maxx;
  short _begy;
  short _begx;
  short _flags;
  attr_t _attrs;
  chtype _bkgd;
  bool _notimeout;
  bool _clear;
  bool _leaveok;
  bool _scroll;
  bool _idlok;
  bool _idcok;
  bool _immed;
  bool _sync;
  bool _use_keypad;
  int _delay;
  struct ldat _line;
  short _regtop;
  short _regbottom;
  int _parx;
  int _pary;
  WINDOW _parent;
}
WINDOW;

typedef typedef unsigned long chtype;
attr_t;

typedef unsigned long mmask_t;

typedef struct
{

  short id;
  int x;
  int y;
  int z;
  mmask_t bstate;
}
MEVENT;


char keybound (int, int);
char curses_version (void);
int assume_default_colors (int, int);
int define_key (char, int);
int keyok (int, bool);
int resizeterm (int, int);
int use_default_colors (void);
int use_extended_names (bool);
int wresize (WINDOW, int, int);
int addch (chtype);
int addchnstr (chtype, int);
int addchstr (chtype);
int addnstr (char, int);
int addstr (char);
int attroff (int);
int attron (int);
int attrset (int);
int attr_get (attr_t, short, void);
int attr_off (attr_t, void);
int attr_on (attr_t, void);
int attr_set (attr_t, short, void);
int baudrate (void);
int beep (void);
int bkgd (chtype);
void bkgdset (chtype);
int border (chtype, chtype, chtype, chtype, chtype, chtype, chtype, chtype);
int box (WINDOW, chtype, chtype);
bool can_change_color (void);
int cbreak (void);
int chgat (int, attr_t, short, void);
int clear (void);
int clearok (WINDOW, bool);
int clrtobot (void);
int clrtoeol (void);
int color_content (short, short, short, short);
int color_set (short, void);
int copywin (WINDOW, WINDOW, int, int, int, int, int, int, int);
int curs_set (int);
int def_prog_mode (void);
int def_shell_mode (void);
int delay_output (int);
int delch (void);
void delscreen (SCREEN);
int delwin (WINDOW);
int deleteln (void);
WINDOW derwin (WINDOW, int, int, int, int);
int doupdate (void);
WINDOW dupwin (WINDOW);
int echo (void);
int echochar (chtype);
int erase (void);
int endwin (void);
char erasechar (void);
void filter (void);
int flash (void);
int flushinp (void);
chtype getbkgd (WINDOW);
int getch (void);
int getnstr (char, int);
int getstr (char);
WINDOW getwin (FILE);
int halfdelay (int);
bool has_colors (void);
bool has_ic (void);
bool has_il (void);
int hline (chtype, int);
void idcok (WINDOW, bool);
int idlok (WINDOW, bool);
void immedok (WINDOW, bool);
chtype inch (void);
int inchnstr (chtype, int);
int inchstr (chtype);
WINDOW initscr (void);
int init_color (short, short, short, short);
int init_pair (short, short, short);
int innstr (char, int);
int insch (chtype);
int insdelln (int);
int insertln (void);
int insnstr (char, int);
int insstr (char);
int instr (char);
int intrflush (WINDOW, bool);
bool isendwin (void);
bool is_linetouched (WINDOW, int);
bool is_wintouched (WINDOW);
char keyname (int);
int keypad (WINDOW, bool);
char killchar (void);
int leaveok (WINDOW, bool);
char longname (void);
int meta (WINDOW, bool);
int move (int, int);
int mvaddch (int, int, chtype);
int mvaddchnstr (int, int, chtype, int);
int mvaddchstr (int, int, chtype);
int mvaddnstr (int, int, char, int);
int mvaddstr (int, int, char);
int mvchgat (int, int, int, attr_t, short, void);
int mvcur (int, int, int, int);
int mvdelch (int, int);
int mvderwin (WINDOW, int, int);
int mvgetch (int, int);
int mvgetnstr (int, int, char, int);
int mvgetstr (int, int, char);
int mvhline (int, int, chtype, int);
chtype mvinch (int, int);
int mvinchnstr (int, int, chtype, int);
int mvinchstr (int, int, chtype);
int mvinnstr (int, int, char, int);
int mvinsch (int, int, chtype);
int mvinsnstr (int, int, char, int);
int mvinsstr (int, int, char);
int mvinstr (int, int, char);
int mvprintw (int, int, char, ...);
int mvscanw (int, int, char, ...);
int mvvline (int, int, chtype, int);
int mvwaddch (WINDOW, int, int, chtype);
int mvwaddchnstr (WINDOW, int, int, chtype, int);
int mvwaddchstr (WINDOW, int, int, chtype);
int mvwaddnstr (WINDOW, int, int, char, int);
int mvwaddstr (WINDOW, int, int, char);
int mvwchgat (WINDOW, int, int, int, attr_t, short, void);
int mvwdelch (WINDOW, int, int);
int mvwgetch (WINDOW, int, int);
int mvwgetnstr (WINDOW, int, int, char, int);
int mvwgetstr (WINDOW, int, int, char);
int mvwhline (WINDOW, int, int, chtype, int);
int mvwin (WINDOW, int, int);
chtype mvwinch (WINDOW, int, int);
int mvwinchnstr (WINDOW, int, int, chtype, int);
int mvwinchstr (WINDOW, int, int, chtype);
int mvwinnstr (WINDOW, int, int, char, int);
int mvwinsch (WINDOW, int, int, chtype);
int mvwinsnstr (WINDOW, int, int, char, int);
int mvwinsstr (WINDOW, int, int, char);
int mvwinstr (WINDOW, int, int, char);
int mvwprintw (WINDOW, int, int, char, ...);
int mvwscanw (WINDOW, int, int, char, ...);
int mvwvline (WINDOW, int, int, chtype, int);
int napms (int);
WINDOW newpad (int, int);
SCREEN newterm (char, FILE, FILE);
WINDOW newwin (int, int, int, int);
int nl (void);
int nocbreak (void);
int nodelay (WINDOW, bool);
int noecho (void);
int nonl (void);
void noqiflush (void);
int noraw (void);
int notimeout (WINDOW, bool);
int overlay (WINDOW, WINDOW);
int overwrite (WINDOW, WINDOW);
int pair_content (short, short, short);
int pechochar (WINDOW, chtype);
int pnoutrefresh (WINDOW, int, int, int, int, int, int);
int prefresh (WINDOW, int, int, int, int, int, int);
int printw (char, ...);
int putp (char);
int putwin (WINDOW, FILE);
void qiflush (void);
int raw (void);
int redrawwin (WINDOW);
int refresh (void);
int resetty (void);
int reset_prog_mode (void);
int reset_shell_mode (void);
int ripoffline (int, int ();
		int savetty (void);
		int scanw (char, ...);
		int scr_dump (char);
		int scr_init (char);
		int scrl (int);
		int scroll (WINDOW);
		int scrollok (WINDOW, bool);
		int scr_restore (char);
		int scr_set (char);
		int setscrreg (int, int);
		SCREEN set_term (SCREEN);
		int slk_attroff (chtype);
		int slk_attr_off (attr_t, void);
		int slk_attron (chtype);
		int slk_attr_on (attr_t, void);
		int slk_attrset (chtype);
		attr_t slk_attr (void);
		int slk_attr_set (attr_t, short, void);
		int slk_clear (void);
		int slk_color (short);
		int slk_init (int);
		char slk_label (int);
		int slk_noutrefresh (void);
		int slk_refresh (void);
		int slk_restore (void);
		int slk_set (int, char, int);
		int slk_touch (void);
		int standout (void);
		int standend (void);
		int start_color (void);
		WINDOW subpad (WINDOW, int, int, int, int);
		WINDOW subwin (WINDOW, int, int, int, int);
		int syncok (WINDOW, bool);
		chtype termattrs (void);
		attr_t term_attrs (void);
		char termname (void);
		int tigetflag (char);
		int tigetnum (char);
		char tigetstr (char);
		void timeout (int);
		char tparm (char, ...);
		int typeahead (int);
		int ungetch (int);
		int untouchwin (WINDOW);
		void use_env (bool);
		int vidattr (chtype);
		int vid_attr (attr_t, short, void);
		int vidputs (chtype, int ();
			     int vline (chtype, int);
			     int vwprintw (WINDOW, char, va_list);
			     int vw_printw (WINDOW, char, va_list);
			     int vwscanw (WINDOW, char, va_list);
			     int vw_scanw (WINDOW, char, va_list);
			     int waddch (WINDOW, chtype);
			     int waddchnstr (WINDOW, chtype, int);
			     int waddchstr (WINDOW, chtype);
			     int waddnstr (WINDOW, char, int);
			     int waddstr (WINDOW, char);
			     int wattron (WINDOW, int);
			     int wattroff (WINDOW, int);
			     int wattrset (WINDOW, int);
			     int wattr_get (WINDOW, attr_t, short, void);
			     int wattr_on (WINDOW, attr_t, void);
			     int wattr_off (WINDOW, attr_t, void);
			     int wattr_set (WINDOW, attr_t, short, void);
			     int wbkgd (WINDOW, chtype);
			     void wbkgdset (WINDOW, chtype);
			     int wborder (WINDOW, chtype, chtype, chtype,
					  chtype, chtype, chtype, chtype,
					  chtype);
			     int wchgat (WINDOW, int, attr_t, short, void);
			     int wclear (WINDOW); int wclrtobot (WINDOW);
			     int wclrtoeol (WINDOW);
			     int wcolor_set (WINDOW, short, void);
			     void wcursyncup (WINDOW); int wdelch (WINDOW);
			     int wdeleteln (WINDOW);
			     int wechochar (WINDOW, chtype);
			     int werase (WINDOW); int wgetch (WINDOW);
			     int wgetnstr (WINDOW, char, int);
			     int wgetstr (WINDOW, char);
			     int whline (WINDOW, chtype, int);
			     chtype winch (WINDOW);
			     int winchnstr (WINDOW, chtype, int);
			     int winchstr (WINDOW, chtype);
			     int winnstr (WINDOW, char, int);
			     int winsch (WINDOW, chtype);
			     int winsdelln (WINDOW, int);
			     int winsertln (WINDOW);
			     int winsnstr (WINDOW, char, int);
			     int winsstr (WINDOW, char);
			     int winstr (WINDOW, char);
			     int wmove (WINDOW, int, int);
			     int wnoutrefresh (WINDOW);
			     int wprintw (WINDOW, char, ...);
			     int wredrawln (WINDOW, int, int);
			     int wrefresh (WINDOW);
			     int wscanw (WINDOW, char, ...);
			     int wscrl (WINDOW, int);
			     int wsetscrreg (WINDOW, int, int);
			     int wstandout (WINDOW); int wstandend (WINDOW);
			     void wsyncdown (WINDOW); void wsyncup (WINDOW);
			     void wtimeout (WINDOW, int);
			     int wtouchln (WINDOW, int, int, int);
			     int wvline (WINDOW, chtype, int);
			     bool mouse_trafo (int, int, bool);
			     int getmouse (MEVENT); int ungetmouse (MEVENT);
			     mmask_t mousemask (mmask_t, mmask_t);
			     bool wenclose (WINDOW, int, int);
			     int mouseinterval (int);
			     bool wmouse_trafo (WINDOW, int, int, bool);
			     int mcprint (char, int); int has_key (int);
			     void trace (unsigned int); WINDOW curscr;
			     WINDOW newscr; WINDOW stdscr; char ttytype;
</SCREEN>
</SECT2>
</SECT1>


<SECT1 ID=libutil>
<TITLE>libutil</TITLE>
<PARA>
</PARA>
<TABLE>
<TITLE></TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Library:</ENTRY>
<ENTRY>libutil</ENTRY>
</ROW>
<ROW>
<ENTRY>Runtime Path:</ENTRY>
<ENTRY>libutil.so.1</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
</PARA>
</SECT1>


<SECT1 ID=libutilman>
<TITLE>Interface Definitions for libutil</TITLE>
<PARA>
</PARA>
</SECT1>


</CHAPTER>

</PART>
