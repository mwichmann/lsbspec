<!-- Start of text generated from database -->
<!-- generated from the LSB specification database -->
<!--    by $Header: //cvsroot/lsb/lsbspec/mklibspec,v 1.75 2005/10/12 22:24:36 nick Exp 0 -->
<!--    at Mon Nov 14 15:58:09 2005 -->
<SECT1 ID=libatk-1.0>
<TITLE>Interfaces for libatk-1.0</TITLE>
<PARA>
<XREF LINKEND="lib-libatk-1.0-def"> defines the library name and shared object name
for the libatk-1.0 library
</PARA>
<TABLE id="lib-libatk-1.0-def">
<TITLE>libatk-1.0 Definition</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Library:</ENTRY>
<ENTRY>libatk-1.0</ENTRY>
</ROW>
<ROW>
<ENTRY>SONAME:</ENTRY>
<ENTRY>libatk-1.0.so.0</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The behavior of the interfaces in this library is specified by the following specifications:<SIMPLELIST COLUMNS=1>
<MEMBER ID='REFSTD.libatk.1.0.1'>
[ATK] <XREF LINKEND="std.ATK">
</MEMBER>
</SIMPLELIST>
</PARA>
<!-- debug: database interface name Default LibGroup for libatk-1.0 -->
<SECT2>
<!--libgroup-->
<TITLE>Default LibGroup for libatk-1.0</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Interfaces for Default LibGroup for libatk-1.0</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic functions
for Default LibGroup for libatk-1.0 specified in <XREF linkend="tbl-libatk-1.0-def-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<TABLE id="tbl-libatk-1.0-def-ints">
<TITLE>libatk-1.0 - Default LibGroup for libatk-1.0 Function Interfaces</TITLE>
<TGROUP COLS=4>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>atk_action_do_action</primary></indexterm>atk_action_do_action <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_action_get_description</primary></indexterm>atk_action_get_description <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_action_get_keybinding</primary></indexterm>atk_action_get_keybinding <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_action_get_localized_name</primary></indexterm>atk_action_get_localized_name <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>atk_action_get_n_actions</primary></indexterm>atk_action_get_n_actions <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_action_get_name</primary></indexterm>atk_action_get_name <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_action_get_type</primary></indexterm>atk_action_get_type <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_action_set_description</primary></indexterm>atk_action_set_description <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>atk_add_focus_tracker</primary></indexterm>atk_add_focus_tracker <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_add_global_event_listener</primary></indexterm>atk_add_global_event_listener <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_add_key_event_listener</primary></indexterm>atk_add_key_event_listener <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_attribute_set_free</primary></indexterm>atk_attribute_set_free <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>atk_component_add_focus_handler</primary></indexterm>atk_component_add_focus_handler <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_component_contains</primary></indexterm>atk_component_contains <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_component_get_extents</primary></indexterm>atk_component_get_extents <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_component_get_layer</primary></indexterm>atk_component_get_layer <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>atk_component_get_mdi_zorder</primary></indexterm>atk_component_get_mdi_zorder <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_component_get_position</primary></indexterm>atk_component_get_position <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_component_get_size</primary></indexterm>atk_component_get_size <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_component_get_type</primary></indexterm>atk_component_get_type <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>atk_component_grab_focus</primary></indexterm>atk_component_grab_focus <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_component_ref_accessible_at_point</primary></indexterm>atk_component_ref_accessible_at_point <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_component_remove_focus_handler</primary></indexterm>atk_component_remove_focus_handler <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_component_set_extents</primary></indexterm>atk_component_set_extents <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>atk_component_set_position</primary></indexterm>atk_component_set_position <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_component_set_size</primary></indexterm>atk_component_set_size <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_coord_type_get_type</primary></indexterm>atk_coord_type_get_type <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_document_get_document</primary></indexterm>atk_document_get_document <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>atk_document_get_document_type</primary></indexterm>atk_document_get_document_type <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_document_get_type</primary></indexterm>atk_document_get_type <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_editable_text_copy_text</primary></indexterm>atk_editable_text_copy_text <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_editable_text_cut_text</primary></indexterm>atk_editable_text_cut_text <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>atk_editable_text_delete_text</primary></indexterm>atk_editable_text_delete_text <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_editable_text_get_type</primary></indexterm>atk_editable_text_get_type <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_editable_text_insert_text</primary></indexterm>atk_editable_text_insert_text <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_editable_text_paste_text</primary></indexterm>atk_editable_text_paste_text <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>atk_editable_text_set_run_attributes</primary></indexterm>atk_editable_text_set_run_attributes <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_editable_text_set_text_contents</primary></indexterm>atk_editable_text_set_text_contents <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_focus_tracker_init</primary></indexterm>atk_focus_tracker_init <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_focus_tracker_notify</primary></indexterm>atk_focus_tracker_notify <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>atk_get_default_registry</primary></indexterm>atk_get_default_registry <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_get_focus_object</primary></indexterm>atk_get_focus_object <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_get_root</primary></indexterm>atk_get_root <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_get_toolkit_name</primary></indexterm>atk_get_toolkit_name <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>atk_get_toolkit_version</primary></indexterm>atk_get_toolkit_version <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_gobject_accessible_for_object</primary></indexterm>atk_gobject_accessible_for_object <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_gobject_accessible_get_object</primary></indexterm>atk_gobject_accessible_get_object <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_gobject_accessible_get_type</primary></indexterm>atk_gobject_accessible_get_type <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>atk_hyperlink_get_end_index</primary></indexterm>atk_hyperlink_get_end_index <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_hyperlink_get_n_anchors</primary></indexterm>atk_hyperlink_get_n_anchors <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_hyperlink_get_object</primary></indexterm>atk_hyperlink_get_object <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_hyperlink_get_start_index</primary></indexterm>atk_hyperlink_get_start_index <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>atk_hyperlink_get_type</primary></indexterm>atk_hyperlink_get_type <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_hyperlink_get_uri</primary></indexterm>atk_hyperlink_get_uri <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_hyperlink_is_inline</primary></indexterm>atk_hyperlink_is_inline <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_hyperlink_is_selected_link</primary></indexterm>atk_hyperlink_is_selected_link <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>atk_hyperlink_is_valid</primary></indexterm>atk_hyperlink_is_valid <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_hyperlink_state_flags_get_type</primary></indexterm>atk_hyperlink_state_flags_get_type <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_hypertext_get_link</primary></indexterm>atk_hypertext_get_link <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_hypertext_get_link_index</primary></indexterm>atk_hypertext_get_link_index <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>atk_hypertext_get_n_links</primary></indexterm>atk_hypertext_get_n_links <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_hypertext_get_type</primary></indexterm>atk_hypertext_get_type <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_image_get_image_description</primary></indexterm>atk_image_get_image_description <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_image_get_image_position</primary></indexterm>atk_image_get_image_position <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>atk_image_get_image_size</primary></indexterm>atk_image_get_image_size <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_image_get_type</primary></indexterm>atk_image_get_type <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_image_set_image_description</primary></indexterm>atk_image_set_image_description <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_implementor_get_type</primary></indexterm>atk_implementor_get_type <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>atk_implementor_ref_accessible</primary></indexterm>atk_implementor_ref_accessible <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_key_event_type_get_type</primary></indexterm>atk_key_event_type_get_type <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_layer_get_type</primary></indexterm>atk_layer_get_type <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_marshal_VOID__INT_INT</primary></indexterm>atk_marshal_VOID__INT_INT <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>atk_marshal_VOID__STRING_BOOLEAN</primary></indexterm>atk_marshal_VOID__STRING_BOOLEAN <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_no_op_object_factory_get_type</primary></indexterm>atk_no_op_object_factory_get_type <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_no_op_object_factory_new</primary></indexterm>atk_no_op_object_factory_new <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_no_op_object_get_type</primary></indexterm>atk_no_op_object_get_type <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>atk_no_op_object_new</primary></indexterm>atk_no_op_object_new <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_object_add_relationship</primary></indexterm>atk_object_add_relationship <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_object_connect_property_change_handler</primary></indexterm>atk_object_connect_property_change_handler <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_object_factory_create_accessible</primary></indexterm>atk_object_factory_create_accessible <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>atk_object_factory_get_accessible_type</primary></indexterm>atk_object_factory_get_accessible_type <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_object_factory_get_type</primary></indexterm>atk_object_factory_get_type <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_object_factory_invalidate</primary></indexterm>atk_object_factory_invalidate <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_object_get_description</primary></indexterm>atk_object_get_description <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>atk_object_get_index_in_parent</primary></indexterm>atk_object_get_index_in_parent <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_object_get_n_accessible_children</primary></indexterm>atk_object_get_n_accessible_children <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_object_get_name</primary></indexterm>atk_object_get_name <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_object_get_parent</primary></indexterm>atk_object_get_parent <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>atk_object_get_role</primary></indexterm>atk_object_get_role <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_object_get_type</primary></indexterm>atk_object_get_type <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_object_initialize</primary></indexterm>atk_object_initialize <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_object_notify_state_change</primary></indexterm>atk_object_notify_state_change <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>atk_object_ref_accessible_child</primary></indexterm>atk_object_ref_accessible_child <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_object_ref_relation_set</primary></indexterm>atk_object_ref_relation_set <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_object_ref_state_set</primary></indexterm>atk_object_ref_state_set <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_object_remove_property_change_handler</primary></indexterm>atk_object_remove_property_change_handler <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>atk_object_remove_relationship</primary></indexterm>atk_object_remove_relationship <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_object_set_description</primary></indexterm>atk_object_set_description <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_object_set_name</primary></indexterm>atk_object_set_name <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_object_set_parent</primary></indexterm>atk_object_set_parent <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>atk_object_set_role</primary></indexterm>atk_object_set_role <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_rectangle_get_type</primary></indexterm>atk_rectangle_get_type <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_registry_get_factory</primary></indexterm>atk_registry_get_factory <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_registry_get_factory_type</primary></indexterm>atk_registry_get_factory_type <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>atk_registry_get_type</primary></indexterm>atk_registry_get_type <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_registry_set_factory_type</primary></indexterm>atk_registry_set_factory_type <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_relation_add_target</primary></indexterm>atk_relation_add_target <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_relation_get_relation_type</primary></indexterm>atk_relation_get_relation_type <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>atk_relation_get_target</primary></indexterm>atk_relation_get_target <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_relation_get_type</primary></indexterm>atk_relation_get_type <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_relation_new</primary></indexterm>atk_relation_new <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_relation_set_add</primary></indexterm>atk_relation_set_add <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>atk_relation_set_add_relation_by_type</primary></indexterm>atk_relation_set_add_relation_by_type <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_relation_set_contains</primary></indexterm>atk_relation_set_contains <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_relation_set_get_n_relations</primary></indexterm>atk_relation_set_get_n_relations <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_relation_set_get_relation</primary></indexterm>atk_relation_set_get_relation <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>atk_relation_set_get_relation_by_type</primary></indexterm>atk_relation_set_get_relation_by_type <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_relation_set_get_type</primary></indexterm>atk_relation_set_get_type <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_relation_set_new</primary></indexterm>atk_relation_set_new <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_relation_set_remove</primary></indexterm>atk_relation_set_remove <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>atk_relation_type_for_name</primary></indexterm>atk_relation_type_for_name <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_relation_type_get_name</primary></indexterm>atk_relation_type_get_name <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_relation_type_get_type</primary></indexterm>atk_relation_type_get_type <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_relation_type_register</primary></indexterm>atk_relation_type_register <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>atk_remove_focus_tracker</primary></indexterm>atk_remove_focus_tracker <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_remove_global_event_listener</primary></indexterm>atk_remove_global_event_listener <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_remove_key_event_listener</primary></indexterm>atk_remove_key_event_listener <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_role_for_name</primary></indexterm>atk_role_for_name <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>atk_role_get_localized_name</primary></indexterm>atk_role_get_localized_name <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_role_get_name</primary></indexterm>atk_role_get_name <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_role_get_type</primary></indexterm>atk_role_get_type <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_role_register</primary></indexterm>atk_role_register <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>atk_selection_add_selection</primary></indexterm>atk_selection_add_selection <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_selection_clear_selection</primary></indexterm>atk_selection_clear_selection <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_selection_get_selection_count</primary></indexterm>atk_selection_get_selection_count <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_selection_get_type</primary></indexterm>atk_selection_get_type <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>atk_selection_is_child_selected</primary></indexterm>atk_selection_is_child_selected <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_selection_ref_selection</primary></indexterm>atk_selection_ref_selection <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_selection_remove_selection</primary></indexterm>atk_selection_remove_selection <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_selection_select_all_selection</primary></indexterm>atk_selection_select_all_selection <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>atk_state_set_add_state</primary></indexterm>atk_state_set_add_state <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_state_set_add_states</primary></indexterm>atk_state_set_add_states <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_state_set_and_sets</primary></indexterm>atk_state_set_and_sets <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_state_set_clear_states</primary></indexterm>atk_state_set_clear_states <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>atk_state_set_contains_state</primary></indexterm>atk_state_set_contains_state <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_state_set_contains_states</primary></indexterm>atk_state_set_contains_states <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_state_set_get_type</primary></indexterm>atk_state_set_get_type <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_state_set_is_empty</primary></indexterm>atk_state_set_is_empty <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>atk_state_set_new</primary></indexterm>atk_state_set_new <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_state_set_or_sets</primary></indexterm>atk_state_set_or_sets <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_state_set_remove_state</primary></indexterm>atk_state_set_remove_state <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_state_set_xor_sets</primary></indexterm>atk_state_set_xor_sets <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>atk_state_type_for_name</primary></indexterm>atk_state_type_for_name <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_state_type_get_name</primary></indexterm>atk_state_type_get_name <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_state_type_get_type</primary></indexterm>atk_state_type_get_type <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_state_type_register</primary></indexterm>atk_state_type_register <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>atk_streamable_content_get_mime_type</primary></indexterm>atk_streamable_content_get_mime_type <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_streamable_content_get_n_mime_types</primary></indexterm>atk_streamable_content_get_n_mime_types <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_streamable_content_get_stream</primary></indexterm>atk_streamable_content_get_stream <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_streamable_content_get_type</primary></indexterm>atk_streamable_content_get_type <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>atk_table_add_column_selection</primary></indexterm>atk_table_add_column_selection <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_table_add_row_selection</primary></indexterm>atk_table_add_row_selection <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_table_get_caption</primary></indexterm>atk_table_get_caption <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_table_get_column_at_index</primary></indexterm>atk_table_get_column_at_index <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>atk_table_get_column_description</primary></indexterm>atk_table_get_column_description <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_table_get_column_extent_at</primary></indexterm>atk_table_get_column_extent_at <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_table_get_column_header</primary></indexterm>atk_table_get_column_header <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_table_get_index_at</primary></indexterm>atk_table_get_index_at <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>atk_table_get_n_columns</primary></indexterm>atk_table_get_n_columns <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_table_get_n_rows</primary></indexterm>atk_table_get_n_rows <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_table_get_row_at_index</primary></indexterm>atk_table_get_row_at_index <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_table_get_row_description</primary></indexterm>atk_table_get_row_description <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>atk_table_get_row_extent_at</primary></indexterm>atk_table_get_row_extent_at <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_table_get_row_header</primary></indexterm>atk_table_get_row_header <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_table_get_selected_columns</primary></indexterm>atk_table_get_selected_columns <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_table_get_selected_rows</primary></indexterm>atk_table_get_selected_rows <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>atk_table_get_summary</primary></indexterm>atk_table_get_summary <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_table_get_type</primary></indexterm>atk_table_get_type <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_table_is_column_selected</primary></indexterm>atk_table_is_column_selected <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_table_is_row_selected</primary></indexterm>atk_table_is_row_selected <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>atk_table_is_selected</primary></indexterm>atk_table_is_selected <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_table_ref_at</primary></indexterm>atk_table_ref_at <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_table_remove_column_selection</primary></indexterm>atk_table_remove_column_selection <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_table_remove_row_selection</primary></indexterm>atk_table_remove_row_selection <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>atk_table_set_caption</primary></indexterm>atk_table_set_caption <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_table_set_column_description</primary></indexterm>atk_table_set_column_description <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_table_set_column_header</primary></indexterm>atk_table_set_column_header <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_table_set_row_description</primary></indexterm>atk_table_set_row_description <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>atk_table_set_row_header</primary></indexterm>atk_table_set_row_header <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_table_set_summary</primary></indexterm>atk_table_set_summary <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_text_add_selection</primary></indexterm>atk_text_add_selection <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_text_attribute_for_name</primary></indexterm>atk_text_attribute_for_name <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>atk_text_attribute_get_name</primary></indexterm>atk_text_attribute_get_name <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_text_attribute_get_type</primary></indexterm>atk_text_attribute_get_type <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_text_attribute_get_value</primary></indexterm>atk_text_attribute_get_value <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_text_attribute_register</primary></indexterm>atk_text_attribute_register <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>atk_text_boundary_get_type</primary></indexterm>atk_text_boundary_get_type <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_text_clip_type_get_type</primary></indexterm>atk_text_clip_type_get_type <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_text_free_ranges</primary></indexterm>atk_text_free_ranges <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_text_get_bounded_ranges</primary></indexterm>atk_text_get_bounded_ranges <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>atk_text_get_caret_offset</primary></indexterm>atk_text_get_caret_offset <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_text_get_character_at_offset</primary></indexterm>atk_text_get_character_at_offset <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_text_get_character_count</primary></indexterm>atk_text_get_character_count <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_text_get_character_extents</primary></indexterm>atk_text_get_character_extents <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>atk_text_get_default_attributes</primary></indexterm>atk_text_get_default_attributes <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_text_get_n_selections</primary></indexterm>atk_text_get_n_selections <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_text_get_offset_at_point</primary></indexterm>atk_text_get_offset_at_point <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_text_get_range_extents</primary></indexterm>atk_text_get_range_extents <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>atk_text_get_run_attributes</primary></indexterm>atk_text_get_run_attributes <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_text_get_selection</primary></indexterm>atk_text_get_selection <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_text_get_text</primary></indexterm>atk_text_get_text <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_text_get_text_after_offset</primary></indexterm>atk_text_get_text_after_offset <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>atk_text_get_text_at_offset</primary></indexterm>atk_text_get_text_at_offset <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_text_get_text_before_offset</primary></indexterm>atk_text_get_text_before_offset <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_text_get_type</primary></indexterm>atk_text_get_type <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_text_remove_selection</primary></indexterm>atk_text_remove_selection <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>atk_text_set_caret_offset</primary></indexterm>atk_text_set_caret_offset <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_text_set_selection</primary></indexterm>atk_text_set_selection <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_util_get_type</primary></indexterm>atk_util_get_type <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_value_get_current_value</primary></indexterm>atk_value_get_current_value <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>atk_value_get_maximum_value</primary></indexterm>atk_value_get_maximum_value <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_value_get_minimum_value</primary></indexterm>atk_value_get_minimum_value <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_value_get_type</primary></indexterm>atk_value_get_type <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK]</LINK></ENTRY>
<ENTRY><indexterm><primary>atk_value_set_current_value</primary></indexterm>atk_value_set_current_value <LINK LINKEND="REFSTD.libatk.1.0.1">[ATK]</LINK></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>
</SECT2>
</SECT1>
<SECT1 ID=libatk-1.0-ddefs>
<TITLE>Data Definitions for libatk-1.0</TITLE>
<PARA>
This section defines global identifiers and their values that are associated
with interfaces contained in libatk-1.0.
These definitions are organized into groups that
correspond to system headers. This convention is used as a
convenience for the reader, and does not imply the existence
of these headers, or their content.
Where an interface is defined as requiring a particular system header file
all of the data definitions for that system header file presented here shall be in effect.
</PARA>
<PARA>
This section gives data definitions to promote binary application
portability, not to repeat source interface definitions available
elsewhere. System providers and application developers should use this ABI
to supplement - not to replace - source interface definition specifications.
</PARA>
<PARA>
This specification uses the <XREF LINKEND='std.ISOC99'> C Language as the reference programming language, and data definitions are specified in ISO C format. The C language is used here as a convenient notation. Using a C language description of these data objects does not preclude their use by other programming languages.</PARA>
<SECT2>
<TITLE>atk-1.0/atk/atk-enum-types.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define ATK_TYPE_COORD_TYPE	(atk_coord_type_get_type())
#define ATK_TYPE_HYPERLINK_STATE_FLAGS	(atk_hyperlink_state_flags_get_type())
#define ATK_TYPE_KEY_EVENT_TYPE	(atk_key_event_type_get_type())
#define ATK_TYPE_LAYER	(atk_layer_get_type())
#define ATK_TYPE_RELATION_TYPE	(atk_relation_type_get_type())
#define ATK_TYPE_ROLE	(atk_role_get_type())
#define ATK_TYPE_STATE_TYPE	(atk_state_type_get_type())
#define ATK_TYPE_TEXT_ATTRIBUTE	(atk_text_attribute_get_type())
#define ATK_TYPE_TEXT_BOUNDARY	(atk_text_boundary_get_type())
#define ATK_TYPE_TEXT_CLIP_TYPE	(atk_text_clip_type_get_type())

extern GType atk_state_type_get_type(void);
extern GType atk_role_get_type(void);
extern GType atk_text_boundary_get_type(void);
extern GType atk_relation_type_get_type(void);
extern GType atk_layer_get_type(void);
extern GType atk_hyperlink_state_flags_get_type(void);
extern GType atk_text_clip_type_get_type(void);
extern GType atk_key_event_type_get_type(void);
extern GType atk_coord_type_get_type(void);
extern GType atk_text_attribute_get_type(void);
</SCREEN>
</SECT2>
<SECT2>
<TITLE>atk-1.0/atk/atk.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define ATK_TYPE_ACTION	(atk_action_get_type ())
#define ATK_TYPE_COMPONENT	(atk_component_get_type ())
#define ATK_TYPE_DOCUMENT	(atk_document_get_type ())
#define ATK_TYPE_EDITABLE_TEXT	(atk_editable_text_get_type ())
#define ATK_TYPE_GOBJECT_ACCESSIBLE	(atk_gobject_accessible_get_type ())
#define ATK_TYPE_HYPERLINK	(atk_hyperlink_get_type ())
#define ATK_TYPE_HYPERTEXT	(atk_hypertext_get_type ())
#define ATK_TYPE_IMAGE	(atk_image_get_type ())
#define ATK_TYPE_IMPLEMENTOR	(atk_implementor_get_type ())
#define ATK_TYPE_NO_OP_OBJECT_FACTORY	(atk_no_op_object_factory_get_type ())
#define ATK_TYPE_NO_OP_OBJECT	(atk_no_op_object_get_type ())
#define ATK_TYPE_OBJECT_FACTORY	(atk_object_factory_get_type ())
#define ATK_TYPE_OBJECT	(atk_object_get_type ())
#define ATK_TYPE_RECTANGLE	(atk_rectangle_get_type ())
#define ATK_TYPE_REGISTRY	(atk_registry_get_type ())
#define ATK_TYPE_RELATION	(atk_relation_get_type ())
#define ATK_TYPE_RELATION_SET	(atk_relation_set_get_type ())
#define ATK_TYPE_SELECTION	(atk_selection_get_type ())
#define ATK_TYPE_STATE_SET	(atk_state_set_get_type ())
#define ATK_TYPE_STREAMABLE_CONTENT	(atk_streamable_content_get_type ())
#define ATK_TYPE_TABLE	(atk_table_get_type ())
#define ATK_TYPE_TEXT	(atk_text_get_type ())
#define ATK_TYPE_UTIL	(atk_util_get_type ())
#define ATK_TYPE_VALUE	(atk_value_get_type ())
#define ATK_GOBJECT_ACCESSIBLE_CLASS(klass)	(G_TYPE_CHECK_CLASS_CAST ((klass), ATK_TYPE_GOBJECT_ACCESSIBLE, AtkGObjectAccessibleClass))
#define ATK_HYPERLINK_CLASS(klass)	(G_TYPE_CHECK_CLASS_CAST ((klass), ATK_TYPE_HYPERLINK, AtkHyperlinkClass))
#define ATK_NO_OP_OBJECT_CLASS(klass)	(G_TYPE_CHECK_CLASS_CAST ((klass), ATK_TYPE_NO_OP_OBJECT, AtkNoOpObjectClass))
#define ATK_NO_OP_OBJECT_FACTORY_CLASS(klass)	(G_TYPE_CHECK_CLASS_CAST ((klass), ATK_TYPE_NO_OP_OBJECT_FACTORY, AtkNoOpObjectFactoryClass))
#define ATK_OBJECT_CLASS(klass)	(G_TYPE_CHECK_CLASS_CAST ((klass), ATK_TYPE_OBJECT, AtkObjectClass))
#define ATK_OBJECT_FACTORY_CLASS(klass)	(G_TYPE_CHECK_CLASS_CAST ((klass), ATK_TYPE_OBJECT_FACTORY, AtkObjectFactoryClass))
#define ATK_REGISTRY_CLASS(klass)	(G_TYPE_CHECK_CLASS_CAST ((klass), ATK_TYPE_REGISTRY, AtkRegistryClass))
#define ATK_RELATION_CLASS(klass)	(G_TYPE_CHECK_CLASS_CAST ((klass), ATK_TYPE_RELATION, AtkRelationClass))
#define ATK_RELATION_SET_CLASS(klass)	(G_TYPE_CHECK_CLASS_CAST ((klass), ATK_TYPE_RELATION_SET, AtkRelationSetClass))
#define ATK_STATE_SET_CLASS(klass)	(G_TYPE_CHECK_CLASS_CAST ((klass), ATK_TYPE_STATE_SET, AtkStateSetClass))
#define ATK_UTIL_CLASS(klass)	(G_TYPE_CHECK_CLASS_CAST ((klass), ATK_TYPE_UTIL, AtkUtilClass))
#define ATK_IS_GOBJECT_ACCESSIBLE_CLASS(klass)	(G_TYPE_CHECK_CLASS_TYPE ((klass), ATK_TYPE_GOBJECT_ACCESSIBLE))
#define ATK_IS_HYPERLINK_CLASS(klass)	(G_TYPE_CHECK_CLASS_TYPE ((klass), ATK_TYPE_HYPERLINK))
#define ATK_IS_NO_OP_OBJECT_CLASS(klass)	(G_TYPE_CHECK_CLASS_TYPE ((klass), ATK_TYPE_NO_OP_OBJECT))
#define ATK_IS_NO_OP_OBJECT_FACTORY_CLASS(klass)	(G_TYPE_CHECK_CLASS_TYPE ((klass), ATK_TYPE_NO_OP_OBJECT_FACTORY))
#define ATK_IS_OBJECT_CLASS(klass)	(G_TYPE_CHECK_CLASS_TYPE ((klass), ATK_TYPE_OBJECT))
#define ATK_IS_OBJECT_FACTORY_CLASS(klass)	(G_TYPE_CHECK_CLASS_TYPE ((klass), ATK_TYPE_OBJECT_FACTORY))
#define ATK_IS_REGISTRY_CLASS(klass)	(G_TYPE_CHECK_CLASS_TYPE ((klass), ATK_TYPE_REGISTRY))
#define ATK_IS_RELATION_CLASS(klass)	(G_TYPE_CHECK_CLASS_TYPE ((klass), ATK_TYPE_RELATION))
#define ATK_IS_RELATION_SET_CLASS(klass)	(G_TYPE_CHECK_CLASS_TYPE ((klass), ATK_TYPE_RELATION_SET))
#define ATK_IS_STATE_SET_CLASS(klass)	(G_TYPE_CHECK_CLASS_TYPE ((klass), ATK_TYPE_STATE_SET))
#define ATK_IS_UTIL_CLASS(klass)	(G_TYPE_CHECK_CLASS_TYPE ((klass), ATK_TYPE_UTIL))
#define ATK_GOBJECT_ACCESSIBLE(obj)	(G_TYPE_CHECK_INSTANCE_CAST ((obj), ATK_TYPE_GOBJECT_ACCESSIBLE, AtkGObjectAccessible))
#define ATK_HYPERLINK(obj)	(G_TYPE_CHECK_INSTANCE_CAST ((obj), ATK_TYPE_HYPERLINK, AtkHyperlink))
#define ATK_NO_OP_OBJECT(obj)	(G_TYPE_CHECK_INSTANCE_CAST ((obj), ATK_TYPE_NO_OP_OBJECT, AtkNoOpObject))
#define ATK_NO_OP_OBJECT_FACTORY(obj)	(G_TYPE_CHECK_INSTANCE_CAST ((obj), ATK_TYPE_NO_OP_OBJECT_FACTORY, AtkNoOpObjectFactory))
#define ATK_OBJECT(obj)	(G_TYPE_CHECK_INSTANCE_CAST ((obj), ATK_TYPE_OBJECT, AtkObject))
#define ATK_OBJECT_FACTORY(obj)	(G_TYPE_CHECK_INSTANCE_CAST ((obj), ATK_TYPE_OBJECT_FACTORY, AtkObjectFactory))
#define ATK_REGISTRY(obj)	(G_TYPE_CHECK_INSTANCE_CAST ((obj), ATK_TYPE_REGISTRY, AtkRegistry))
#define ATK_RELATION(obj)	(G_TYPE_CHECK_INSTANCE_CAST ((obj), ATK_TYPE_RELATION, AtkRelation))
#define ATK_RELATION_SET(obj)	(G_TYPE_CHECK_INSTANCE_CAST ((obj), ATK_TYPE_RELATION_SET, AtkRelationSet))
#define ATK_STATE_SET(obj)	(G_TYPE_CHECK_INSTANCE_CAST ((obj), ATK_TYPE_STATE_SET, AtkStateSet))
#define ATK_IS_GOBJECT_ACCESSIBLE(obj)	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), ATK_TYPE_GOBJECT_ACCESSIBLE))
#define ATK_IS_HYPERLINK(obj)	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), ATK_TYPE_HYPERLINK))
#define ATK_IS_NO_OP_OBJECT(obj)	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), ATK_TYPE_NO_OP_OBJECT))
#define ATK_IS_NO_OP_OBJECT_FACTORY(obj)	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), ATK_TYPE_NO_OP_OBJECT_FACTORY))
#define ATK_IS_OBJECT(obj)	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), ATK_TYPE_OBJECT))
#define ATK_IS_OBJECT_FACTORY(obj)	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), ATK_TYPE_OBJECT_FACTORY))
#define ATK_IS_REGISTRY(obj)	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), ATK_TYPE_REGISTRY))
#define ATK_IS_RELATION(obj)	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), ATK_TYPE_RELATION))
#define ATK_IS_RELATION_SET(obj)	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), ATK_TYPE_RELATION_SET))
#define ATK_IS_STATE_SET(obj)	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), ATK_TYPE_STATE_SET))
#define ATK_NO_OP_OBJECT_FACTORY_GET_CLASS(obj)	(G_TYPE_INSTANCE_GET_CLASS ( (obj), ATK_TYPE_NO_OP_OBJECT_FACTORY, AtkNoOpObjectFactoryClass))
#define ATK_GOBJECT_ACCESSIBLE_GET_CLASS(obj)	(G_TYPE_INSTANCE_GET_CLASS ((obj), ATK_TYPE_GOBJECT_ACCESSIBLE, AtkGObjectAccessibleClass))
#define ATK_HYPERLINK_GET_CLASS(obj)	(G_TYPE_INSTANCE_GET_CLASS ((obj), ATK_TYPE_HYPERLINK, AtkHyperlinkClass))
#define ATK_NO_OP_OBJECT_GET_CLASS(obj)	(G_TYPE_INSTANCE_GET_CLASS ((obj), ATK_TYPE_NO_OP_OBJECT, AtkNoOpObjectClass))
#define ATK_OBJECT_GET_CLASS(obj)	(G_TYPE_INSTANCE_GET_CLASS ((obj), ATK_TYPE_OBJECT, AtkObjectClass))
#define ATK_OBJECT_FACTORY_GET_CLASS(obj)	(G_TYPE_INSTANCE_GET_CLASS ((obj), ATK_TYPE_OBJECT_FACTORY, AtkObjectFactoryClass))
#define ATK_REGISTRY_GET_CLASS(obj)	(G_TYPE_INSTANCE_GET_CLASS ((obj), ATK_TYPE_REGISTRY, AtkRegistryClass))
#define ATK_RELATION_GET_CLASS(obj)	(G_TYPE_INSTANCE_GET_CLASS ((obj), ATK_TYPE_RELATION, AtkRelationClass))
#define ATK_RELATION_SET_GET_CLASS(obj)	(G_TYPE_INSTANCE_GET_CLASS ((obj), ATK_TYPE_RELATION_SET, AtkRelationSetClass))
#define ATK_STATE_SET_GET_CLASS(obj)	(G_TYPE_INSTANCE_GET_CLASS ((obj), ATK_TYPE_STATE_SET, AtkStateSetClass))
#define ATK_UTIL_GET_CLASS(obj)	(G_TYPE_INSTANCE_GET_CLASS ((obj), ATK_TYPE_UTIL, AtkUtilClass))
#define ATK_ACTION_GET_IFACE(obj)	(G_TYPE_INSTANCE_GET_INTERFACE ((obj), ATK_TYPE_ACTION, AtkActionIface))
#define ATK_COMPONENT_GET_IFACE(obj)	(G_TYPE_INSTANCE_GET_INTERFACE ((obj), ATK_TYPE_COMPONENT, AtkComponentIface))
#define ATK_DOCUMENT_GET_IFACE(obj)	(G_TYPE_INSTANCE_GET_INTERFACE ((obj), ATK_TYPE_DOCUMENT, AtkDocumentIface))
#define ATK_EDITABLE_TEXT_GET_IFACE(obj)	(G_TYPE_INSTANCE_GET_INTERFACE ((obj), ATK_TYPE_EDITABLE_TEXT, AtkEditableTextIface))
#define ATK_HYPERTEXT_GET_IFACE(obj)	(G_TYPE_INSTANCE_GET_INTERFACE ((obj), ATK_TYPE_HYPERTEXT, AtkHypertextIface))
#define ATK_IMAGE_GET_IFACE(obj)	(G_TYPE_INSTANCE_GET_INTERFACE ((obj), ATK_TYPE_IMAGE, AtkImageIface))
#define ATK_IMPLEMENTOR_GET_IFACE(obj)	(G_TYPE_INSTANCE_GET_INTERFACE ((obj), ATK_TYPE_IMPLEMENTOR, AtkImplementorIface))
#define ATK_SELECTION_GET_IFACE(obj)	(G_TYPE_INSTANCE_GET_INTERFACE ((obj), ATK_TYPE_SELECTION, AtkSelectionIface))
#define ATK_STREAMABLE_CONTENT_GET_IFACE(obj)	(G_TYPE_INSTANCE_GET_INTERFACE ((obj), ATK_TYPE_STREAMABLE_CONTENT, AtkStreamableContentIface))
#define ATK_TABLE_GET_IFACE(obj)	(G_TYPE_INSTANCE_GET_INTERFACE ((obj), ATK_TYPE_TABLE, AtkTableIface))
#define ATK_TEXT_GET_IFACE(obj)	(G_TYPE_INSTANCE_GET_INTERFACE ((obj), ATK_TYPE_TEXT, AtkTextIface))
#define ATK_VALUE_GET_IFACE(obj)	(G_TYPE_INSTANCE_GET_INTERFACE ((obj), ATK_TYPE_VALUE, AtkValueIface))
#define _TYPEDEF_ATK_ACTION_	1
#define _TYPEDEF_ATK_COMPONENT_	1
#define _TYPEDEF_ATK_DOCUMENT_	1
#define _TYPEDEF_ATK_EDITABLE_TEXT_	1
#define _TYPEDEF_ATK_HYPERTEXT_	1
#define _TYPEDEF_ATK_IMAGE_	1
#define _TYPEDEF_ATK_SELECTION_	1
#define _TYPEDEF_ATK_STREAMABLE_CONTENT	1
#define _TYPEDEF_ATK_TABLE_	1
#define _TYPEDEF_ATK_TEXT_	1
#define _TYPEDEF_ATK_UTIL_	1
#define _TYPEDEF_ATK_VALUE__	1
#define ATK_ACTION(obj)	G_TYPE_CHECK_INSTANCE_CAST ((obj), ATK_TYPE_ACTION, AtkAction)
#define ATK_COMPONENT(obj)	G_TYPE_CHECK_INSTANCE_CAST ((obj), ATK_TYPE_COMPONENT, AtkComponent)
#define ATK_DOCUMENT(obj)	G_TYPE_CHECK_INSTANCE_CAST ((obj), ATK_TYPE_DOCUMENT, AtkDocument)
#define ATK_EDITABLE_TEXT(obj)	G_TYPE_CHECK_INSTANCE_CAST ((obj), ATK_TYPE_EDITABLE_TEXT, AtkEditableText)
#define ATK_HYPERTEXT(obj)	G_TYPE_CHECK_INSTANCE_CAST ((obj), ATK_TYPE_HYPERTEXT, AtkHypertext)
#define ATK_IMAGE(obj)	G_TYPE_CHECK_INSTANCE_CAST ((obj), ATK_TYPE_IMAGE, AtkImage)
#define ATK_IMPLEMENTOR(obj)	G_TYPE_CHECK_INSTANCE_CAST ((obj), ATK_TYPE_IMPLEMENTOR, AtkImplementor)
#define ATK_SELECTION(obj)	G_TYPE_CHECK_INSTANCE_CAST ((obj), ATK_TYPE_SELECTION, AtkSelection)
#define ATK_STREAMABLE_CONTENT(obj)	G_TYPE_CHECK_INSTANCE_CAST ((obj), ATK_TYPE_STREAMABLE_CONTENT, AtkStreamableContent)
#define ATK_TABLE(obj)	G_TYPE_CHECK_INSTANCE_CAST ((obj), ATK_TYPE_TABLE, AtkTable)
#define ATK_TEXT(obj)	G_TYPE_CHECK_INSTANCE_CAST ((obj), ATK_TYPE_TEXT, AtkText)
#define ATK_UTIL(obj)	G_TYPE_CHECK_INSTANCE_CAST ((obj), ATK_TYPE_UTIL, AtkUtil)
#define ATK_VALUE(obj)	G_TYPE_CHECK_INSTANCE_CAST ((obj), ATK_TYPE_VALUE, AtkValue)
#define ATK_IS_ACTION(obj)	G_TYPE_CHECK_INSTANCE_TYPE ((obj), ATK_TYPE_ACTION)
#define ATK_IS_COMPONENT(obj)	G_TYPE_CHECK_INSTANCE_TYPE ((obj), ATK_TYPE_COMPONENT)
#define ATK_IS_DOCUMENT(obj)	G_TYPE_CHECK_INSTANCE_TYPE ((obj), ATK_TYPE_DOCUMENT)
#define ATK_IS_EDITABLE_TEXT(obj)	G_TYPE_CHECK_INSTANCE_TYPE ((obj), ATK_TYPE_EDITABLE_TEXT)
#define ATK_IS_HYPERTEXT(obj)	G_TYPE_CHECK_INSTANCE_TYPE ((obj), ATK_TYPE_HYPERTEXT)
#define ATK_IS_IMAGE(obj)	G_TYPE_CHECK_INSTANCE_TYPE ((obj), ATK_TYPE_IMAGE)
#define ATK_IS_IMPLEMENTOR(obj)	G_TYPE_CHECK_INSTANCE_TYPE ((obj), ATK_TYPE_IMPLEMENTOR)
#define ATK_IS_SELECTION(obj)	G_TYPE_CHECK_INSTANCE_TYPE ((obj), ATK_TYPE_SELECTION)
#define ATK_IS_STREAMABLE_CONTENT(obj)	G_TYPE_CHECK_INSTANCE_TYPE ((obj), ATK_TYPE_STREAMABLE_CONTENT)
#define ATK_IS_TABLE(obj)	G_TYPE_CHECK_INSTANCE_TYPE ((obj), ATK_TYPE_TABLE)
#define ATK_IS_TEXT(obj)	G_TYPE_CHECK_INSTANCE_TYPE ((obj), ATK_TYPE_TEXT)
#define ATK_IS_UTIL(obj)	G_TYPE_CHECK_INSTANCE_TYPE ((obj), ATK_TYPE_UTIL)
#define ATK_IS_VALUE(obj)	G_TYPE_CHECK_INSTANCE_TYPE ((obj), ATK_TYPE_VALUE)

typedef struct _AtkText
 AtkText;
typedef struct _AtkObject {
    GObject parent;
    gchar *description;
    gchar *name;
    AtkObject *accessible_parent;
    AtkRole role;
    AtkRelationSet *relation_set;
    AtkLayer layer;
} AtkObject;
typedef enum {
    ATK_ROLE_INVALID, ATK_ROLE_ACCEL_LABEL, ATK_ROLE_ALERT,
	ATK_ROLE_ANIMATION, ATK_ROLE_ARROW, ATK_ROLE_CALENDAR,
	ATK_ROLE_CANVAS, ATK_ROLE_CHECK_BOX, ATK_ROLE_CHECK_MENU_ITEM,
	ATK_ROLE_COLOR_CHOOSER, ATK_ROLE_COLUMN_HEADER, ATK_ROLE_COMBO_BOX,
	ATK_ROLE_DATE_EDITOR, ATK_ROLE_DESKTOP_ICON,
	ATK_ROLE_DESKTOP_FRAME, ATK_ROLE_DIAL, ATK_ROLE_DIALOG,
	ATK_ROLE_DIRECTORY_PANE, ATK_ROLE_DRAWING_AREA,
	ATK_ROLE_FILE_CHOOSER, ATK_ROLE_FILLER, ATK_ROLE_FONT_CHOOSER,
	ATK_ROLE_FRAME, ATK_ROLE_GLASS_PANE, ATK_ROLE_HTML_CONTAINER,
	ATK_ROLE_ICON, ATK_ROLE_IMAGE, ATK_ROLE_INTERNAL_FRAME,
	ATK_ROLE_LABEL, ATK_ROLE_LAYERED_PANE, ATK_ROLE_LIST,
	ATK_ROLE_LIST_ITEM, ATK_ROLE_MENU, ATK_ROLE_MENU_BAR,
	ATK_ROLE_MENU_ITEM, ATK_ROLE_OPTION_PANE, ATK_ROLE_PAGE_TAB,
	ATK_ROLE_PAGE_TAB_LIST, ATK_ROLE_PANEL, ATK_ROLE_PASSWORD_TEXT,
	ATK_ROLE_POPUP_MENU, ATK_ROLE_PROGRESS_BAR, ATK_ROLE_PUSH_BUTTON,
	ATK_ROLE_RADIO_BUTTON, ATK_ROLE_RADIO_MENU_ITEM,
	ATK_ROLE_ROOT_PANE, ATK_ROLE_ROW_HEADER, ATK_ROLE_SCROLL_BAR,
	ATK_ROLE_SCROLL_PANE, ATK_ROLE_SEPARATOR, ATK_ROLE_SLIDER,
	ATK_ROLE_SPLIT_PANE, ATK_ROLE_SPIN_BUTTON, ATK_ROLE_STATUSBAR,
	ATK_ROLE_TABLE, ATK_ROLE_TABLE_CELL, ATK_ROLE_TABLE_COLUMN_HEADER,
	ATK_ROLE_TABLE_ROW_HEADER, ATK_ROLE_TEAR_OFF_MENU_ITEM,
	ATK_ROLE_TERMINAL, ATK_ROLE_TEXT, ATK_ROLE_TOGGLE_BUTTON,
	ATK_ROLE_TOOL_BAR, ATK_ROLE_TOOL_TIP, ATK_ROLE_TREE,
	ATK_ROLE_TREE_TABLE, ATK_ROLE_UNKNOWN, ATK_ROLE_VIEWPORT,
	ATK_ROLE_WINDOW, ATK_ROLE_HEADER, ATK_ROLE_FOOTER,
	ATK_ROLE_PARAGRAPH, ATK_ROLE_RULER, ATK_ROLE_APPLICATION,
	ATK_ROLE_AUTOCOMPLETE, ATK_ROLE_EDITBAR, ATK_ROLE_EMBEDDED,
	ATK_ROLE_LAST_DEFINED
} AtkRole;
typedef struct _AtkRelationSet {
    GObject parent;
    GPtrArray *relations;
} AtkRelationSet;
typedef enum {
    ATK_LAYER_INVALID, ATK_LAYER_BACKGROUND, ATK_LAYER_CANVAS,
	ATK_LAYER_WIDGET, ATK_LAYER_MDI, ATK_LAYER_POPUP,
	ATK_LAYER_OVERLAY, ATK_LAYER_WINDOW
} AtkLayer;
typedef struct _AtkPropertyValues {
    const gchar *property_name;
    GValue old_value;
    GValue new_value;
} AtkPropertyValues;
typedef void (*fptr_atk_277) (AtkObject *, AtkPropertyValues *);
typedef struct _AtkImage
 AtkImage;
typedef enum {
    ATK_XY_SCREEN, ATK_XY_WINDOW
} AtkCoordType;
typedef enum {
    ATK_RELATION_NULL, ATK_RELATION_CONTROLLED_BY,
	ATK_RELATION_CONTROLLER_FOR, ATK_RELATION_LABEL_FOR,
	ATK_RELATION_LABELLED_BY, ATK_RELATION_MEMBER_OF,
	ATK_RELATION_NODE_CHILD_OF, ATK_RELATION_FLOWS_TO,
	ATK_RELATION_FLOWS_FROM, ATK_RELATION_SUBWINDOW_OF,
	ATK_RELATION_EMBEDS, ATK_RELATION_EMBEDDED_BY,
	ATK_RELATION_POPUP_FOR, ATK_RELATION_PARENT_WINDOW_OF,
	ATK_RELATION_LAST_DEFINED
} AtkRelationType;
typedef struct _AtkRelation {
    GObject parent;
    GPtrArray *target;
    AtkRelationType relationship;
} AtkRelation;
typedef struct _AtkDocument
 AtkDocument;
typedef struct _AtkTable
 AtkTable;
typedef struct _AtkHyperlink {
    GObject parent;
} AtkHyperlink;
typedef struct _AtkStateSet {
    GObject parent;
} AtkStateSet;
typedef struct _AtkObjectFactory {
    GObject parent;
} AtkObjectFactory;
typedef struct _AtkRegistry {
    GObject parent;
    GHashTable *factory_type_registry;
    GHashTable *factory_singleton_cache;
} AtkRegistry;
typedef struct _AtkEditableText
 AtkEditableText;
typedef GSList AtkAttributeSet;
typedef struct _AtkHypertext
 AtkHypertext;
typedef struct _AtkSelection
 AtkSelection;
typedef struct _AtkAction
 AtkAction;
typedef struct _AtkComponent
 AtkComponent;
typedef struct _AtkValue
 AtkValue;
typedef struct _AtkStreamableContent
 AtkStreamableContent;
typedef void (*func) (void);
typedef enum {
    ATK_TEXT_ATTR_INVALID, ATK_TEXT_ATTR_LEFT_MARGIN,
	ATK_TEXT_ATTR_RIGHT_MARGIN, ATK_TEXT_ATTR_INDENT,
	ATK_TEXT_ATTR_INVISIBLE, ATK_TEXT_ATTR_EDITABLE,
	ATK_TEXT_ATTR_PIXELS_ABOVE_LINES, ATK_TEXT_ATTR_PIXELS_BELOW_LINES,
	ATK_TEXT_ATTR_PIXELS_INSIDE_WRAP, ATK_TEXT_ATTR_BG_FULL_HEIGHT,
	ATK_TEXT_ATTR_RISE, ATK_TEXT_ATTR_UNDERLINE,
	ATK_TEXT_ATTR_STRIKETHROUGH, ATK_TEXT_ATTR_SIZE,
	ATK_TEXT_ATTR_SCALE, ATK_TEXT_ATTR_WEIGHT, ATK_TEXT_ATTR_LANGUAGE,
	ATK_TEXT_ATTR_FAMILY_NAME, ATK_TEXT_ATTR_BG_COLOR,
	ATK_TEXT_ATTR_FG_COLOR, ATK_TEXT_ATTR_BG_STIPPLE,
	ATK_TEXT_ATTR_FG_STIPPLE, ATK_TEXT_ATTR_WRAP_MODE,
	ATK_TEXT_ATTR_DIRECTION, ATK_TEXT_ATTR_JUSTIFICATION,
	ATK_TEXT_ATTR_STRETCH, ATK_TEXT_ATTR_VARIANT, ATK_TEXT_ATTR_STYLE,
	ATK_TEXT_ATTR_LAST_DEFINED
} AtkTextAttribute;
typedef enum {
    ATK_TEXT_BOUNDARY_CHAR, ATK_TEXT_BOUNDARY_WORD_START,
	ATK_TEXT_BOUNDARY_WORD_END, ATK_TEXT_BOUNDARY_SENTENCE_START,
	ATK_TEXT_BOUNDARY_SENTENCE_END, ATK_TEXT_BOUNDARY_LINE_START,
	ATK_TEXT_BOUNDARY_LINE_END
} AtkTextBoundary;
typedef enum {
    ATK_STATE_INVALID, ATK_STATE_ACTIVE, ATK_STATE_ARMED, ATK_STATE_BUSY,
	ATK_STATE_CHECKED, ATK_STATE_DEFUNCT, ATK_STATE_EDITABLE,
	ATK_STATE_ENABLED, ATK_STATE_EXPANDABLE, ATK_STATE_EXPANDED,
	ATK_STATE_FOCUSABLE, ATK_STATE_FOCUSED, ATK_STATE_HORIZONTAL,
	ATK_STATE_ICONIFIED, ATK_STATE_MODAL, ATK_STATE_MULTI_LINE,
	ATK_STATE_MULTISELECTABLE, ATK_STATE_OPAQUE, ATK_STATE_PRESSED,
	ATK_STATE_RESIZABLE, ATK_STATE_SELECTABLE, ATK_STATE_SELECTED,
	ATK_STATE_SENSITIVE, ATK_STATE_SHOWING, ATK_STATE_SINGLE_LINE,
	ATK_STATE_STALE, ATK_STATE_TRANSIENT, ATK_STATE_VERTICAL,
	ATK_STATE_VISIBLE, ATK_STATE_MANAGES_DESCENDANTS,
	ATK_STATE_INDETERMINATE, ATK_STATE_TRUNCATED,
	ATK_STATE_LAST_DEFINED
} AtkStateType;
typedef struct _AtkGObjectAccessible {
    AtkObject parent;
} AtkGObjectAccessible;
typedef guint64 AtkState;
typedef void (*fptr_atk_73) (AtkObject *, gboolean);
typedef struct _AtkKeyEventStruct {
    gint type;
    guint state;
    guint keyval;
    gint length;
    gchar *string;
    guint16 keycode;
    guint32 timestamp;
} AtkKeyEventStruct;
typedef gint(*fptr_atk_391) (AtkKeyEventStruct *, gpointer);
typedef struct _AtkTextRectangle {
    gint x;
    gint y;
    gint width;
    gint height;
} AtkTextRectangle;
typedef struct _AtkTextRange {
    AtkTextRectangle bounds;
    gint start_offset;
    gint end_offset;
    gchar *content;
} AtkTextRange;
typedef enum {
    ATK_TEXT_CLIP_NONE, ATK_TEXT_CLIP_MIN, ATK_TEXT_CLIP_MAX,
	ATK_TEXT_CLIP_BOTH
} AtkTextClipType;
typedef struct _AtkImplementor AtkImplementor;
typedef void (*fptr_atk_222) (AtkObject *);
typedef gboolean(*fptr_glib_260) (gpointer);
typedef struct _AtkObjectClass {
    GObjectClass parent;
    const gchar *(*fptr_atk_34) (AtkObject *);
    const gchar *(*fptr_atk_34) (AtkObject *);
    AtkObject *(*fptr_atk_238) (AtkObject *);
     gint(*fptr_atk_288) (AtkObject *);
    AtkObject *(*fptr_atk_12) (AtkObject *, gint);
     gint(*fptr_atk_288) (AtkObject *);
    AtkRelationSet *(*fptr_atk_55) (AtkObject *);
     AtkRole(*fptr_atk_209) (AtkObject *);
     AtkLayer(*fptr_atk_124) (AtkObject *);
     gint(*fptr_atk_288) (AtkObject *);
    AtkStateSet *(*fptr_atk_410) (AtkObject *);
    void (*fptr_atk_252) (AtkObject *, const gchar *);
    void (*fptr_atk_252) (AtkObject *, const gchar *);
    void (*fptr_atk_253) (AtkObject *, AtkObject *);
    void (*fptr_atk_395) (AtkObject *, AtkRole);
     guint(*fptr_atk_150) (AtkObject *, AtkPropertyChangeHandler *);
    void (*fptr_atk_373) (AtkObject *, guint);
    void (*fptr_atk_371) (AtkObject *, gpointer);
    void (*fptr_atk_327) (AtkObject *, guint, gpointer);
    void (*fptr_atk_73) (AtkObject *, gboolean);
    void (*fptr_atk_277) (AtkObject *, AtkPropertyValues *);
    void (*fptr_atk_38) (AtkObject *, const gchar *, gboolean);
    void (*fptr_atk_222) (AtkObject *);
    void (*fptr_atk_396) (AtkObject *, gpointer *);
    AtkFunction pad1;
    AtkFunction pad2;
    AtkFunction pad3;
} AtkObjectClass;
typedef struct _AtkImplementorIface {
    GTypeInterface parent;
    AtkObject *(*fptr_atk_20) (AtkImplementor *);
} AtkImplementorIface;
typedef struct _AtkRegistryClass {
    GObjectClass parent_class;
} AtkRegistryClass;
typedef struct _AtkHypertextIface {
    GTypeInterface parent;
    AtkHyperlink *(*fptr_atk_345) (AtkHypertext *, gint);
     gint(*fptr_atk_392) (AtkHypertext *);
     gint(*fptr_atk_402) (AtkHypertext *, gint);
    void (*fptr_atk_343) (AtkHypertext *, gint);
    AtkFunction pad1;
    AtkFunction pad2;
    AtkFunction pad3;
} AtkHypertextIface;
typedef struct _AtkStreamableContentIface {
    GTypeInterface parent;
     gint(*fptr_atk_358) (AtkStreamableContent *);
    const gchar *(*fptr_atk_141) (AtkStreamableContent *, gint);
    GIOChannel *(*fptr_atk_197) (AtkStreamableContent *, const gchar *);
    AtkFunction pad1;
    AtkFunction pad2;
    AtkFunction pad3;
    AtkFunction pad4;
} AtkStreamableContentIface;
typedef struct _AtkRectangle {
    gint x;
    gint y;
    gint width;
    gint height;
} AtkRectangle;
typedef struct _AtkStateSetClass {
    GObjectClass parent;
} AtkStateSetClass;
typedef struct _AtkAttribute {
    gchar *name;
    gchar *value;
} AtkAttribute;
typedef struct _AtkGObjectAccessibleClass {
    AtkObjectClass parent_class;
    AtkFunction pad1;
    AtkFunction pad2;
} AtkGObjectAccessibleClass;
typedef struct _AtkObjectFactoryClass {
    GObjectClass parent_class;
    AtkObject *(*fptr_atk_349) (GObject *);
    void (*fptr_atk_127) (AtkObjectFactory *);
     GType(*fptr_atk_286) (void);
    AtkFunction pad1;
    AtkFunction pad2;
} AtkObjectFactoryClass;
typedef struct _AtkNoOpObjectFactoryClass {
    AtkObjectFactoryClass parent_class;
} AtkNoOpObjectFactoryClass;
typedef struct _AtkActionIface {
    GTypeInterface parent;
     gboolean(*fptr_atk_231) (AtkAction *, gint);
     gint(*fptr_atk_381) (AtkAction *);
    const gchar *(*fptr_atk_273) (AtkAction *, gint);
    const gchar *(*fptr_atk_273) (AtkAction *, gint);
    const gchar *(*fptr_atk_273) (AtkAction *, gint);
     gboolean(*fptr_atk_331) (AtkAction *, gint, const gchar *);
    const gchar *(*fptr_atk_273) (AtkAction *, gint);
    AtkFunction pad2;
} AtkActionIface;
typedef struct _AtkTableIface {
    GTypeInterface parent;
    AtkObject *(*fptr_atk_90) (AtkTable *, gint, gint);
     gint(*fptr_atk_7) (AtkTable *, gint, gint);
     gint(*fptr_atk_316) (AtkTable *, gint);
     gint(*fptr_atk_316) (AtkTable *, gint);
     gint(*fptr_atk_415) (AtkTable *);
     gint(*fptr_atk_415) (AtkTable *);
     gint(*fptr_atk_7) (AtkTable *, gint, gint);
     gint(*fptr_atk_7) (AtkTable *, gint, gint);
    AtkObject *(*fptr_atk_170) (AtkTable *);
    const gchar *(*fptr_atk_315) (AtkTable *, gint);
    AtkObject *(*fptr_atk_142) (AtkTable *, gint);
    const gchar *(*fptr_atk_315) (AtkTable *, gint);
    AtkObject *(*fptr_atk_142) (AtkTable *, gint);
    AtkObject *(*fptr_atk_170) (AtkTable *);
    void (*fptr_atk_144) (AtkTable *, AtkObject *);
    void (*fptr_atk_33) (AtkTable *, gint, const gchar *);
    void (*fptr_atk_51) (AtkTable *, gint, AtkObject *);
    void (*fptr_atk_33) (AtkTable *, gint, const gchar *);
    void (*fptr_atk_51) (AtkTable *, gint, AtkObject *);
    void (*fptr_atk_144) (AtkTable *, AtkObject *);
     gint(*fptr_atk_25) (AtkTable *, gint * *);
     gint(*fptr_atk_25) (AtkTable *, gint * *);
     gboolean(*fptr_atk_149) (AtkTable *, gint);
     gboolean(*fptr_atk_149) (AtkTable *, gint);
     gboolean(*fptr_atk_180) (AtkTable *, gint, gint);
     gboolean(*fptr_atk_149) (AtkTable *, gint);
     gboolean(*fptr_atk_149) (AtkTable *, gint);
     gboolean(*fptr_atk_149) (AtkTable *, gint);
     gboolean(*fptr_atk_149) (AtkTable *, gint);
    void (*fptr_atk_255) (AtkTable *, gint, gint);
    void (*fptr_atk_255) (AtkTable *, gint, gint);
    void (*fptr_atk_255) (AtkTable *, gint, gint);
    void (*fptr_atk_255) (AtkTable *, gint, gint);
    void (*fptr_atk_187) (AtkTable *);
    void (*fptr_atk_187) (AtkTable *);
    void (*fptr_atk_187) (AtkTable *);
    AtkFunction pad1;
    AtkFunction pad2;
    AtkFunction pad3;
    AtkFunction pad4;
} AtkTableIface;
typedef struct _AtkValueIface {
    GTypeInterface parent;
    void (*fptr_atk_309) (AtkValue *, GValue *);
    void (*fptr_atk_309) (AtkValue *, GValue *);
    void (*fptr_atk_309) (AtkValue *, GValue *);
     gboolean(*fptr_atk_326) (AtkValue *, const GValue *);
    AtkFunction pad1;
    AtkFunction pad2;
} AtkValueIface;
typedef struct _AtkRelationClass {
    GObjectClass parent;
} AtkRelationClass;
typedef struct _AtkTextIface {
    GTypeInterface parent;
    gchar *(*fptr_atk_323) (AtkText *, gint, gint);
    gchar *(*fptr_atk_16) (AtkText *, gint, AtkTextBoundary, gint *,
			   gint *);
    gchar *(*fptr_atk_16) (AtkText *, gint, AtkTextBoundary, gint *,
			   gint *);
     gunichar(*fptr_atk_302) (AtkText *, gint);
    gchar *(*fptr_atk_16) (AtkText *, gint, AtkTextBoundary, gint *,
			   gint *);
     gint(*fptr_atk_307) (AtkText *);
    AtkAttributeSet *(*fptr_atk_298) (AtkText *, gint, gint *, gint *);
    AtkAttributeSet *(*fptr_atk_189) (AtkText *);
    void (*fptr_atk_234) (AtkText *, gint, gint *, gint *, gint *, gint *,
			  AtkCoordType);
     gint(*fptr_atk_307) (AtkText *);
     gint(*fptr_atk_14) (AtkText *, gint, gint, AtkCoordType);
     gint(*fptr_atk_307) (AtkText *);
    gchar *(*fptr_atk_135) (AtkText *, gint, gint *, gint *);
     gboolean(*fptr_atk_223) (AtkText *, gint, gint);
     gboolean(*fptr_atk_181) (AtkText *, gint);
     gboolean(*fptr_atk_26) (AtkText *, gint, gint, gint);
     gboolean(*fptr_atk_181) (AtkText *, gint);
    void (*fptr_atk_438) (AtkText *, gint, gint);
    void (*fptr_atk_242) (AtkText *, gint);
    void (*fptr_atk_94) (AtkText *);
    void (*fptr_atk_94) (AtkText *);
    void (*fptr_atk_212) (AtkText *, gint, gint, AtkCoordType,
			  AtkTextRectangle *);
    AtkTextRange **(*fptr_atk_195) (AtkText *, AtkTextRectangle *,
				    AtkCoordType, AtkTextClipType,
				    AtkTextClipType);
    AtkFunction pad4;
} AtkTextIface;
typedef struct _AtkRelationSetClass {
    GObjectClass parent;
    AtkFunction pad1;
    AtkFunction pad2;
} AtkRelationSetClass;
typedef struct _AtkSelectionIface {
    GTypeInterface parent;
     gboolean(*fptr_atk_353) (AtkSelection *, gint);
     gboolean(*fptr_atk_18) (AtkSelection *);
    AtkObject *(*fptr_atk_200) (AtkSelection *, gint);
     gint(*fptr_atk_399) (AtkSelection *);
     gboolean(*fptr_atk_353) (AtkSelection *, gint);
     gboolean(*fptr_atk_353) (AtkSelection *, gint);
     gboolean(*fptr_atk_18) (AtkSelection *);
    void (*fptr_atk_15) (AtkSelection *);
    AtkFunction pad1;
    AtkFunction pad2;
} AtkSelectionIface;
typedef struct _AtkUtilClass {
    GObjectClass parent;
     guint(*fptr_atk_99) (GSignalEmissionHook, const gchar *);
    void (*fptr_atk_188) (guint);
     guint(*fptr_atk_201) (AtkKeySnoopFunc, gpointer);
    void (*fptr_atk_188) (guint);
    AtkObject *(*fptr_atk_256) (void);
    const gchar *(*fptr_atk_224) (void);
    const gchar *(*fptr_atk_224) (void);
} AtkUtilClass;
typedef struct _AtkNoOpObjectClass {
    AtkObjectClass parent_class;
} AtkNoOpObjectClass;
typedef struct _AtkImageIface {
    GTypeInterface parent;
    void (*fptr_atk_370) (AtkImage *, gint *, gint *, AtkCoordType);
    const gchar *(*fptr_atk_205) (AtkImage *);
    void (*fptr_atk_344) (AtkImage *, gint *, gint *);
     gboolean(*fptr_atk_383) (AtkImage *, const gchar *);
    AtkFunction pad1;
    AtkFunction pad2;
} AtkImageIface;
typedef struct _AtkComponentIface {
    GTypeInterface parent;
     guint(*fptr_atk_183) (AtkComponent *, AtkFocusHandler);
     gboolean(*fptr_atk_377) (AtkComponent *, gint, gint, AtkCoordType);
    AtkObject *(*fptr_atk_115) (AtkComponent *, gint, gint, AtkCoordType);
    void (*fptr_atk_281) (AtkComponent *, gint *, gint *, gint *, gint *,
			  AtkCoordType);
    void (*fptr_atk_186) (AtkComponent *, gint *, gint *, AtkCoordType);
    void (*fptr_atk_139) (AtkComponent *, gint *, gint *);
     gboolean(*fptr_atk_136) (AtkComponent *);
    void (*fptr_atk_69) (AtkComponent *, guint);
     gboolean(*fptr_atk_49) (AtkComponent *, gint, gint, gint, gint,
			     AtkCoordType);
     gboolean(*fptr_atk_377) (AtkComponent *, gint, gint, AtkCoordType);
     gboolean(*fptr_atk_214) (AtkComponent *, gint, gint);
     AtkLayer(*fptr_atk_84) (AtkComponent *);
     gint(*fptr_atk_162) (AtkComponent *);
    void (*fptr_atk_192) (AtkComponent *, AtkRectangle *);
    AtkFunction pad2;
} AtkComponentIface;
typedef struct _AtkEditableTextIface {
    GTypeInterface parent_interface;
     gboolean(*fptr_atk_244) (AtkEditableText *, AtkAttributeSet *, gint,
			      gint);
    void (*fptr_atk_117) (AtkEditableText *, const gchar *);
    void (*fptr_atk_283) (AtkEditableText *, const gchar *, gint, gint *);
    void (*fptr_atk_308) (AtkEditableText *, gint, gint);
    void (*fptr_atk_308) (AtkEditableText *, gint, gint);
    void (*fptr_atk_308) (AtkEditableText *, gint, gint);
    void (*fptr_atk_228) (AtkEditableText *, gint);
    AtkFunction pad1;
    AtkFunction pad2;
} AtkEditableTextIface;
typedef struct _AtkDocumentIface {
    GTypeInterface parent;
    const gchar *(*fptr_atk_354) (AtkDocument *);
     gpointer(*fptr_atk_193) (AtkDocument *);
    AtkFunction pad1;
    AtkFunction pad2;
    AtkFunction pad3;
    AtkFunction pad4;
    AtkFunction pad5;
    AtkFunction pad6;
    AtkFunction pad7;
    AtkFunction pad8;
} AtkDocumentIface;
typedef struct _AtkHyperlinkClass {
    GObjectClass parent;
    gchar *(*fptr_atk_241) (AtkHyperlink *, gint);
    AtkObject *(*fptr_atk_368) (AtkHyperlink *, gint);
     gint(*fptr_atk_29) (AtkHyperlink *);
     gint(*fptr_atk_29) (AtkHyperlink *);
     gboolean(*fptr_atk_215) (AtkHyperlink *);
     gint(*fptr_atk_29) (AtkHyperlink *);
     guint(*fptr_atk_175) (AtkHyperlink *);
     gboolean(*fptr_atk_215) (AtkHyperlink *);
    void (*fptr_atk_221) (AtkHyperlink *);
    AtkFunction pad1;
} AtkHyperlinkClass;
extern gchar *atk_text_get_selection(AtkText *, gint, gint *, gint *);
extern guint atk_object_connect_property_change_handler(AtkObject *,
							AtkPropertyChangeHandler
							*);
extern void atk_image_get_image_position(AtkImage *, gint *, gint *,
					 AtkCoordType);
extern AtkRelationType atk_relation_get_relation_type(AtkRelation *);
extern const gchar *atk_role_get_localized_name(AtkRole);
extern GType atk_hyperlink_get_type(void);
extern GType atk_text_clip_type_get_type(void);
extern const gchar *atk_document_get_document_type(AtkDocument *);
extern AtkObject *atk_table_get_caption(AtkTable *);
extern gint atk_hyperlink_get_start_index(AtkHyperlink *);
extern gpointer atk_document_get_document(AtkDocument *);
extern AtkStateSet *atk_state_set_or_sets(AtkStateSet *, AtkStateSet *);
extern AtkObjectFactory *atk_no_op_object_factory_new(void);
extern AtkObject *atk_table_get_column_header(AtkTable *, gint);
extern const gchar *atk_object_get_name(AtkObject *);
extern void atk_registry_set_factory_type(AtkRegistry *, GType, GType);
extern gboolean atk_editable_text_set_run_attributes(AtkEditableText *,
						     AtkAttributeSet *,
						     gint, gint);
extern GType atk_object_factory_get_type(void);
extern void atk_object_remove_property_change_handler(AtkObject *, guint);
extern gboolean atk_image_set_image_description(AtkImage *, const gchar *);
extern GType atk_gobject_accessible_get_type(void);
extern AtkHyperlink *atk_hypertext_get_link(AtkHypertext *, gint);
extern void atk_attribute_set_free(AtkAttributeSet *);
extern void atk_focus_tracker_notify(AtkObject *);
extern void atk_relation_set_remove(AtkRelationSet *, AtkRelation *);
extern void atk_editable_text_cut_text(AtkEditableText *, gint, gint);
extern void atk_remove_key_event_listener(guint);
extern gboolean atk_selection_add_selection(AtkSelection *, gint);
extern gint atk_action_get_n_actions(AtkAction *);
extern GType atk_coord_type_get_type(void);
extern gboolean atk_component_set_extents(AtkComponent *, gint, gint, gint,
					  gint, AtkCoordType);
extern void atk_editable_text_set_text_contents(AtkEditableText *,
						const gchar *);
extern AtkObject *atk_table_get_summary(AtkTable *);
extern AtkRole atk_role_register(const gchar *);
extern GType atk_layer_get_type(void);
extern void atk_component_remove_focus_handler(AtkComponent *, guint);
extern void atk_marshal_VOID__STRING_BOOLEAN(GClosure *, GValue *, guint,
					     const GValue *, gpointer,
					     gpointer);
extern gint atk_hyperlink_get_n_anchors(AtkHyperlink *);
extern gboolean atk_value_set_current_value(AtkValue *, const GValue *);
extern gint atk_streamable_content_get_n_mime_types(AtkStreamableContent
						    *);
extern void atk_table_set_caption(AtkTable *, AtkObject *);
extern void atk_focus_tracker_init(AtkEventListenerInit);
extern void atk_relation_set_add(AtkRelationSet *, AtkRelation *);
extern GType atk_text_get_type(void);
extern void atk_object_initialize(AtkObject *, gpointer);
extern void atk_object_set_role(AtkObject *, AtkRole);
extern void atk_table_set_row_header(AtkTable *, gint, AtkObject *);
extern const gchar
    *atk_streamable_content_get_mime_type(AtkStreamableContent *, gint);
extern const gchar *atk_text_attribute_get_value(AtkTextAttribute, gint);
extern gboolean atk_table_add_column_selection(AtkTable *, gint);
extern AtkLayer atk_component_get_layer(AtkComponent *);
extern AtkObject *atk_selection_ref_selection(AtkSelection *, gint);
extern gboolean atk_hyperlink_is_selected_link(AtkHyperlink *);
extern gboolean atk_relation_set_contains(AtkRelationSet *,
					  AtkRelationType);
extern void atk_image_get_image_size(AtkImage *, int *, int *);
extern gchar *atk_text_get_text_before_offset(AtkText *, gint,
					      AtkTextBoundary, gint *,
					      gint *);
extern GType atk_action_get_type(void);
extern void atk_text_get_character_extents(AtkText *, gint, gint *, gint *,
					   gint *, gint *, AtkCoordType);
extern const gchar *atk_action_get_localized_name(AtkAction *, gint);
extern void atk_state_set_clear_states(AtkStateSet *);
extern GType atk_relation_set_get_type(void);
extern gboolean atk_state_set_contains_state(AtkStateSet *, AtkStateType);
extern GIOChannel *atk_streamable_content_get_stream(AtkStreamableContent
						     *, const gchar *);
extern AtkStateSet *atk_state_set_and_sets(AtkStateSet *, AtkStateSet *);
extern GType atk_text_attribute_get_type(void);
extern gboolean atk_table_remove_column_selection(AtkTable *, gint);
extern GType atk_streamable_content_get_type(void);
extern void atk_object_set_name(AtkObject *, const gchar *);
extern void atk_relation_set_add_relation_by_type(AtkRelationSet *,
						  AtkRelationType,
						  AtkObject *);
extern void atk_remove_global_event_listener(guint);
extern gchar *atk_text_get_text(AtkText *, gint, gint);
extern void atk_editable_text_copy_text(AtkEditableText *, gint, gint);
extern GType atk_hyperlink_state_flags_get_type(void);
extern GObject *atk_gobject_accessible_get_object(AtkGObjectAccessible *);
extern AtkRole atk_role_for_name(const gchar *);
extern const gchar *atk_table_get_column_description(AtkTable *, gint);
extern const gchar *atk_role_get_name(AtkRole);
extern gint atk_table_get_n_rows(AtkTable *);
extern void atk_object_factory_invalidate(AtkObjectFactory *);
extern void atk_object_notify_state_change(AtkObject *, AtkState,
					   gboolean);
extern AtkRelation *atk_relation_set_get_relation_by_type(AtkRelationSet *,
							  AtkRelationType);
extern gint atk_relation_set_get_n_relations(AtkRelationSet *);
extern gint atk_object_get_n_accessible_children(AtkObject *);
extern void atk_table_set_row_description(AtkTable *, gint, const gchar *);
extern GType atk_state_set_get_type(void);
extern AtkRelation *atk_relation_set_get_relation(AtkRelationSet *, gint);
extern AtkObject *atk_get_focus_object(void);
extern gunichar atk_text_get_character_at_offset(AtkText *, gint);
extern AtkRelation *atk_relation_new(AtkObject * *, gint, AtkRelationType);
extern void atk_object_set_parent(AtkObject *, AtkObject *);
extern AtkAttributeSet *atk_text_get_run_attributes(AtkText *, gint,
						    gint *, gint *);
extern gboolean atk_object_remove_relationship(AtkObject *,
					       AtkRelationType,
					       AtkObject *);
extern gboolean atk_selection_remove_selection(AtkSelection *, gint);
extern guint atk_component_add_focus_handler(AtkComponent *,
					     AtkFocusHandler);
extern gint atk_table_get_index_at(AtkTable *, gint, gint);
extern void atk_marshal_VOID__INT_INT(GClosure *, GValue *, guint,
				      const GValue *, gpointer, gpointer);
extern AtkRelationSet *atk_relation_set_new(void);
extern AtkObjectFactory *atk_registry_get_factory(AtkRegistry *, GType);
extern const gchar *atk_get_toolkit_version(void);
extern const gchar *atk_text_attribute_get_name(AtkTextAttribute);
extern GType atk_image_get_type(void);
extern AtkRelationSet *atk_object_ref_relation_set(AtkObject *);
extern AtkStateSet *atk_state_set_new(void);
extern AtkStateSet *atk_state_set_xor_sets(AtkStateSet *, AtkStateSet *);
extern AtkObject *atk_hyperlink_get_object(AtkHyperlink *, gint);
extern gint atk_object_get_index_in_parent(AtkObject *);
extern gboolean atk_text_set_caret_offset(AtkText *, gint);
extern GType atk_registry_get_type(void);
extern AtkRelationType atk_relation_type_for_name(const gchar *);
extern const gchar *atk_get_toolkit_name(void);
extern gboolean atk_state_set_add_state(AtkStateSet *, AtkStateType);
extern AtkStateSet *atk_object_ref_state_set(AtkObject *);
extern const gchar *atk_image_get_image_description(AtkImage *);
extern gboolean atk_text_add_selection(AtkText *, gint, gint);
extern GType atk_registry_get_factory_type(AtkRegistry *, GType);
extern GType atk_relation_type_get_type(void);
extern gboolean atk_selection_clear_selection(AtkSelection *);
extern const gchar *atk_action_get_name(AtkAction *, gint);
extern void atk_relation_add_target(AtkRelation *, AtkObject *);
extern AtkTextAttribute atk_text_attribute_register(const gchar *);
extern gboolean atk_hyperlink_is_valid(AtkHyperlink *);
extern GType atk_implementor_get_type(void);
extern gboolean atk_object_add_relationship(AtkObject *, AtkRelationType,
					    AtkObject *);
extern GType atk_role_get_type(void);
extern GType atk_hypertext_get_type(void);
extern void atk_table_set_column_header(AtkTable *, gint, AtkObject *);
extern gboolean atk_table_add_row_selection(AtkTable *, gint);
extern gint atk_selection_get_selection_count(AtkSelection *);
extern guint atk_add_key_event_listener(AtkKeySnoopFunc, gpointer);
extern gboolean atk_table_is_row_selected(AtkTable *, gint);
extern GPtrArray *atk_relation_get_target(AtkRelation *);
extern AtkAttributeSet *atk_text_get_default_attributes(AtkText *);
extern void atk_editable_text_insert_text(AtkEditableText *, const gchar *,
					  gint, gint *);
extern gint atk_hypertext_get_link_index(AtkHypertext *, gint);
extern const gchar *atk_table_get_row_description(AtkTable *, gint);
extern GType atk_table_get_type(void);
extern const gchar *atk_state_type_get_name(AtkStateType);
extern AtkObject *atk_no_op_object_new(GObject *);
extern gint atk_table_get_column_extent_at(AtkTable *, gint, gint);
extern gint atk_hyperlink_get_end_index(AtkHyperlink *);
extern void atk_editable_text_delete_text(AtkEditableText *, gint, gint);
extern void atk_editable_text_paste_text(AtkEditableText *, gint);
extern AtkTextRange **atk_text_get_bounded_ranges(AtkText *,
						  AtkTextRectangle *,
						  AtkCoordType,
						  AtkTextClipType,
						  AtkTextClipType);
extern void atk_component_get_position(AtkComponent *, gint *, gint *,
				       AtkCoordType);
extern GType atk_value_get_type(void);
extern const gchar *atk_object_get_description(AtkObject *);
extern GType atk_state_type_get_type(void);
extern gint atk_table_get_selected_columns(AtkTable *, gint * *);
extern gint atk_table_get_column_at_index(AtkTable *, gint);
extern GType atk_key_event_type_get_type(void);
extern void atk_value_get_maximum_value(AtkValue *, GValue *);
extern GType atk_selection_get_type(void);
extern GType atk_rectangle_get_type(void);
extern GType atk_object_factory_get_accessible_type(AtkObjectFactory *);
extern GType atk_relation_get_type(void);
extern gboolean atk_action_do_action(AtkAction *, gint);
extern void atk_state_set_add_states(AtkStateSet *, AtkStateType *, gint);
extern GType atk_util_get_type(void);
extern AtkObject *atk_component_ref_accessible_at_point(AtkComponent *,
							gint, gint,
							AtkCoordType);
extern gchar *atk_text_get_text_after_offset(AtkText *, gint,
					     AtkTextBoundary, gint *,
					     gint *);
extern gint atk_table_get_row_extent_at(AtkTable *, gint, gint);
extern guint atk_add_global_event_listener(GSignalEmissionHook,
					   const gchar *);
extern gboolean atk_state_set_remove_state(AtkStateSet *, AtkStateType);
extern gboolean atk_table_remove_row_selection(AtkTable *, gint);
extern AtkObject *atk_table_ref_at(AtkTable *, gint, gint);
extern void atk_object_set_description(AtkObject *, const gchar *);
extern GType atk_no_op_object_factory_get_type(void);
extern AtkRole atk_object_get_role(AtkObject *);
extern void atk_table_set_column_description(AtkTable *, gint,
					     const gchar *);
extern gchar *atk_text_get_text_at_offset(AtkText *, gint, AtkTextBoundary,
					  gint *, gint *);
extern AtkRelationType atk_relation_type_register(const gchar *);
extern void atk_component_get_extents(AtkComponent *, gint *, gint *,
				      gint *, gint *, AtkCoordType);
extern void atk_text_get_range_extents(AtkText *, gint, gint, AtkCoordType,
				       AtkTextRectangle *);
extern const gchar *atk_relation_type_get_name(AtkRelationType);
extern void atk_component_get_size(AtkComponent *, gint *, gint *);
extern AtkObject *atk_object_factory_create_accessible(AtkObjectFactory *,
						       GObject *);
extern void atk_value_get_minimum_value(AtkValue *, GValue *);
extern GType atk_document_get_type(void);
extern AtkStateType atk_state_type_for_name(const gchar *);
extern gboolean atk_state_set_contains_states(AtkStateSet *,
					      AtkStateType *, gint);
extern gint atk_text_get_caret_offset(AtkText *);
extern const gchar *atk_action_get_description(AtkAction *, gint);
extern gint atk_text_get_offset_at_point(AtkText *, gint, gint,
					 AtkCoordType);
extern AtkObject *atk_gobject_accessible_for_object(GObject *);
extern gboolean atk_action_set_description(AtkAction *, gint,
					   const gchar *);
extern gboolean atk_text_set_selection(AtkText *, gint, gint, gint);
extern gint atk_table_get_selected_rows(AtkTable *, gint * *);
extern AtkObject *atk_implementor_ref_accessible(AtkImplementor *);
extern gint atk_text_get_n_selections(AtkText *);
extern gint atk_component_get_mdi_zorder(AtkComponent *);
extern gchar *atk_hyperlink_get_uri(AtkHyperlink *, gint);
extern void atk_value_get_current_value(AtkValue *, GValue *);
extern AtkRegistry *atk_get_default_registry(void);
extern gboolean atk_component_set_position(AtkComponent *, gint, gint,
					   AtkCoordType);
extern void atk_remove_focus_tracker(guint);
extern GType atk_no_op_object_get_type(void);
extern gboolean atk_component_grab_focus(AtkComponent *);
extern gint atk_table_get_n_columns(AtkTable *);
extern gboolean atk_hyperlink_is_inline(AtkHyperlink *);
extern gboolean atk_table_is_column_selected(AtkTable *, gint);
extern AtkObject *atk_table_get_row_header(AtkTable *, gint);
extern GType atk_text_boundary_get_type(void);
extern gboolean atk_text_remove_selection(AtkText *, gint);
extern AtkTextAttribute atk_text_attribute_for_name(const gchar *);
extern void atk_table_set_summary(AtkTable *, AtkObject *);
extern gboolean atk_selection_is_child_selected(AtkSelection *, gint);
extern gboolean atk_table_is_selected(AtkTable *, gint, gint);
extern guint atk_add_focus_tracker(AtkEventListener);
extern GType atk_component_get_type(void);
extern gboolean atk_component_contains(AtkComponent *, gint, gint,
				       AtkCoordType);
extern gint atk_text_get_character_count(AtkText *);
extern gint atk_table_get_row_at_index(AtkTable *, gint);
extern gboolean atk_selection_select_all_selection(AtkSelection *);
extern gint atk_hypertext_get_n_links(AtkHypertext *);
extern const gchar *atk_action_get_keybinding(AtkAction *, gint);
extern void atk_text_free_ranges(AtkTextRange * *);
extern gboolean atk_component_set_size(AtkComponent *, gint, gint);
extern AtkStateType atk_state_type_register(const gchar *);
extern AtkObject *atk_get_root(void);
extern AtkObject *atk_object_get_parent(AtkObject *);
extern GType atk_editable_text_get_type(void);
extern gboolean atk_state_set_is_empty(AtkStateSet *);
extern GType atk_object_get_type(void);
extern AtkObject *atk_object_ref_accessible_child(AtkObject *, gint);
</SCREEN>
</SECT2>
</SECT1>
<!-- End of text generated from database -->
<!--    by $Header: //cvsroot/lsb/lsbspec/mklibspec,v 1.75 2005/10/12 22:24:36 nick Exp 0 -->
