<!-- Start of text generated from database -->
<!-- generated from the LSB specification database -->
<!--    by $Header: //cvsroot/lsb/lsbspec/mklibspec,v 1.75 2005/10/12 22:24:36 nick Exp 0 -->
<!--    at Mon Nov 14 15:58:11 2005 -->
<SECT1 ID=libgdk-x11-2.0>
<TITLE>Interfaces for libgdk-x11-2.0</TITLE>
<PARA>
<XREF LINKEND="lib-libgdk-x11-2.0-def"> defines the library name and shared object name
for the libgdk-x11-2.0 library
</PARA>
<TABLE id="lib-libgdk-x11-2.0-def">
<TITLE>libgdk-x11-2.0 Definition</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Library:</ENTRY>
<ENTRY>libgdk-x11-2.0</ENTRY>
</ROW>
<ROW>
<ENTRY>SONAME:</ENTRY>
<ENTRY>libgdk-x11-2.0.so.0</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The behavior of the interfaces in this library is specified by the following specifications:<SIMPLELIST COLUMNS=1>
<MEMBER ID='REFSTD.libgdk.x11.2.0.1'>
[Gdk] <XREF LINKEND="std.Gdk">
</MEMBER>
</SIMPLELIST>
</PARA>
<!-- debug: database interface name Default LibGroup for libgdk-x11-2.0 -->
<SECT2>
<!--libgroup-->
<TITLE>Default LibGroup for libgdk-x11-2.0</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Interfaces for Default LibGroup for libgdk-x11-2.0</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic functions
for Default LibGroup for libgdk-x11-2.0 specified in <XREF linkend="tbl-libgdk-x11-2.0-def-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<TABLE id="tbl-libgdk-x11-2.0-def-ints">
<TITLE>libgdk-x11-2.0 - Default LibGroup for libgdk-x11-2.0 Function Interfaces</TITLE>
<TGROUP COLS=4>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>gdk_add_client_message_filter</primary></indexterm>gdk_add_client_message_filter <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_add_option_entries_libgtk_only</primary></indexterm>gdk_add_option_entries_libgtk_only <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_atom_intern</primary></indexterm>gdk_atom_intern <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_atom_name</primary></indexterm>gdk_atom_name <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_axis_use_get_type</primary></indexterm>gdk_axis_use_get_type <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_beep</primary></indexterm>gdk_beep <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_bitmap_create_from_data</primary></indexterm>gdk_bitmap_create_from_data <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_byte_order_get_type</primary></indexterm>gdk_byte_order_get_type <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_cap_style_get_type</primary></indexterm>gdk_cap_style_get_type <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_color_copy</primary></indexterm>gdk_color_copy <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_color_equal</primary></indexterm>gdk_color_equal <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_color_free</primary></indexterm>gdk_color_free <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_color_get_type</primary></indexterm>gdk_color_get_type <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_color_hash</primary></indexterm>gdk_color_hash <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_color_parse</primary></indexterm>gdk_color_parse <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_colormap_alloc_color</primary></indexterm>gdk_colormap_alloc_color <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_colormap_alloc_colors</primary></indexterm>gdk_colormap_alloc_colors <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_colormap_free_colors</primary></indexterm>gdk_colormap_free_colors <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_colormap_get_screen</primary></indexterm>gdk_colormap_get_screen <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_colormap_get_system</primary></indexterm>gdk_colormap_get_system <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_colormap_get_type</primary></indexterm>gdk_colormap_get_type <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_colormap_get_visual</primary></indexterm>gdk_colormap_get_visual <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_colormap_new</primary></indexterm>gdk_colormap_new <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_colormap_query_color</primary></indexterm>gdk_colormap_query_color <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_crossing_mode_get_type</primary></indexterm>gdk_crossing_mode_get_type <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_cursor_get_display</primary></indexterm>gdk_cursor_get_display <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_cursor_get_type</primary></indexterm>gdk_cursor_get_type <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_cursor_new</primary></indexterm>gdk_cursor_new <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_cursor_new_for_display</primary></indexterm>gdk_cursor_new_for_display <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_cursor_new_from_pixbuf</primary></indexterm>gdk_cursor_new_from_pixbuf <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_cursor_new_from_pixmap</primary></indexterm>gdk_cursor_new_from_pixmap <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_cursor_ref</primary></indexterm>gdk_cursor_ref <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_cursor_type_get_type</primary></indexterm>gdk_cursor_type_get_type <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_cursor_unref</primary></indexterm>gdk_cursor_unref <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_device_free_history</primary></indexterm>gdk_device_free_history <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_device_get_axis</primary></indexterm>gdk_device_get_axis <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_device_get_core_pointer</primary></indexterm>gdk_device_get_core_pointer <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_device_get_history</primary></indexterm>gdk_device_get_history <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_device_get_state</primary></indexterm>gdk_device_get_state <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_device_get_type</primary></indexterm>gdk_device_get_type <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_device_set_axis_use</primary></indexterm>gdk_device_set_axis_use <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_device_set_key</primary></indexterm>gdk_device_set_key <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_device_set_mode</primary></indexterm>gdk_device_set_mode <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_device_set_source</primary></indexterm>gdk_device_set_source <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_devices_list</primary></indexterm>gdk_devices_list <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_display_add_client_message_filter</primary></indexterm>gdk_display_add_client_message_filter <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_display_beep</primary></indexterm>gdk_display_beep <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_display_close</primary></indexterm>gdk_display_close <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_display_flush</primary></indexterm>gdk_display_flush <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_display_get_core_pointer</primary></indexterm>gdk_display_get_core_pointer <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_display_get_default</primary></indexterm>gdk_display_get_default <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_display_get_default_cursor_size</primary></indexterm>gdk_display_get_default_cursor_size <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_display_get_default_group</primary></indexterm>gdk_display_get_default_group <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_display_get_default_screen</primary></indexterm>gdk_display_get_default_screen <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_display_get_event</primary></indexterm>gdk_display_get_event <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_display_get_maximal_cursor_size</primary></indexterm>gdk_display_get_maximal_cursor_size <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_display_get_n_screens</primary></indexterm>gdk_display_get_n_screens <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_display_get_name</primary></indexterm>gdk_display_get_name <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_display_get_pointer</primary></indexterm>gdk_display_get_pointer <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_display_get_screen</primary></indexterm>gdk_display_get_screen <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_display_get_type</primary></indexterm>gdk_display_get_type <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_display_get_window_at_pointer</primary></indexterm>gdk_display_get_window_at_pointer <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_display_keyboard_ungrab</primary></indexterm>gdk_display_keyboard_ungrab <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_display_list_devices</primary></indexterm>gdk_display_list_devices <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_display_manager_get</primary></indexterm>gdk_display_manager_get <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_display_manager_get_default_display</primary></indexterm>gdk_display_manager_get_default_display <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_display_manager_get_type</primary></indexterm>gdk_display_manager_get_type <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_display_manager_list_displays</primary></indexterm>gdk_display_manager_list_displays <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_display_manager_set_default_display</primary></indexterm>gdk_display_manager_set_default_display <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_display_open</primary></indexterm>gdk_display_open <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_display_open_default_libgtk_only</primary></indexterm>gdk_display_open_default_libgtk_only <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_display_peek_event</primary></indexterm>gdk_display_peek_event <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_display_pointer_is_grabbed</primary></indexterm>gdk_display_pointer_is_grabbed <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_display_pointer_ungrab</primary></indexterm>gdk_display_pointer_ungrab <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_display_put_event</primary></indexterm>gdk_display_put_event <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_display_request_selection_notification</primary></indexterm>gdk_display_request_selection_notification <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_display_set_double_click_distance</primary></indexterm>gdk_display_set_double_click_distance <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_display_set_double_click_time</primary></indexterm>gdk_display_set_double_click_time <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_display_set_pointer_hooks</primary></indexterm>gdk_display_set_pointer_hooks <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_display_store_clipboard</primary></indexterm>gdk_display_store_clipboard <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_display_supports_clipboard_persistence</primary></indexterm>gdk_display_supports_clipboard_persistence <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_display_supports_cursor_alpha</primary></indexterm>gdk_display_supports_cursor_alpha <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_display_supports_cursor_color</primary></indexterm>gdk_display_supports_cursor_color <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_display_supports_selection_notification</primary></indexterm>gdk_display_supports_selection_notification <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_display_sync</primary></indexterm>gdk_display_sync <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_drag_abort</primary></indexterm>gdk_drag_abort <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_drag_action_get_type</primary></indexterm>gdk_drag_action_get_type <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_drag_begin</primary></indexterm>gdk_drag_begin <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_drag_context_get_type</primary></indexterm>gdk_drag_context_get_type <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_drag_context_new</primary></indexterm>gdk_drag_context_new <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_drag_drop</primary></indexterm>gdk_drag_drop <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_drag_drop_succeeded</primary></indexterm>gdk_drag_drop_succeeded <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_drag_find_window</primary></indexterm>gdk_drag_find_window <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_drag_find_window_for_screen</primary></indexterm>gdk_drag_find_window_for_screen <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_drag_get_protocol</primary></indexterm>gdk_drag_get_protocol <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_drag_get_protocol_for_display</primary></indexterm>gdk_drag_get_protocol_for_display <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_drag_get_selection</primary></indexterm>gdk_drag_get_selection <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_drag_motion</primary></indexterm>gdk_drag_motion <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_drag_protocol_get_type</primary></indexterm>gdk_drag_protocol_get_type <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_drag_status</primary></indexterm>gdk_drag_status <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_draw_arc</primary></indexterm>gdk_draw_arc <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_draw_drawable</primary></indexterm>gdk_draw_drawable <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_draw_glyphs</primary></indexterm>gdk_draw_glyphs <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_draw_glyphs_transformed</primary></indexterm>gdk_draw_glyphs_transformed <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_draw_gray_image</primary></indexterm>gdk_draw_gray_image <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_draw_image</primary></indexterm>gdk_draw_image <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_draw_indexed_image</primary></indexterm>gdk_draw_indexed_image <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_draw_layout</primary></indexterm>gdk_draw_layout <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_draw_layout_line</primary></indexterm>gdk_draw_layout_line <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_draw_layout_line_with_colors</primary></indexterm>gdk_draw_layout_line_with_colors <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_draw_layout_with_colors</primary></indexterm>gdk_draw_layout_with_colors <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_draw_line</primary></indexterm>gdk_draw_line <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_draw_lines</primary></indexterm>gdk_draw_lines <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_draw_pixbuf</primary></indexterm>gdk_draw_pixbuf <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_draw_point</primary></indexterm>gdk_draw_point <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_draw_points</primary></indexterm>gdk_draw_points <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_draw_polygon</primary></indexterm>gdk_draw_polygon <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_draw_rectangle</primary></indexterm>gdk_draw_rectangle <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_draw_rectangle_alpha_libgtk_only</primary></indexterm>gdk_draw_rectangle_alpha_libgtk_only <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_draw_rgb_32_image</primary></indexterm>gdk_draw_rgb_32_image <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_draw_rgb_32_image_dithalign</primary></indexterm>gdk_draw_rgb_32_image_dithalign <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_draw_rgb_image</primary></indexterm>gdk_draw_rgb_image <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_draw_rgb_image_dithalign</primary></indexterm>gdk_draw_rgb_image_dithalign <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_draw_segments</primary></indexterm>gdk_draw_segments <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_draw_trapezoids</primary></indexterm>gdk_draw_trapezoids <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_drawable_copy_to_image</primary></indexterm>gdk_drawable_copy_to_image <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_drawable_get_clip_region</primary></indexterm>gdk_drawable_get_clip_region <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_drawable_get_colormap</primary></indexterm>gdk_drawable_get_colormap <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_drawable_get_depth</primary></indexterm>gdk_drawable_get_depth <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_drawable_get_display</primary></indexterm>gdk_drawable_get_display <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_drawable_get_image</primary></indexterm>gdk_drawable_get_image <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_drawable_get_screen</primary></indexterm>gdk_drawable_get_screen <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_drawable_get_size</primary></indexterm>gdk_drawable_get_size <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_drawable_get_type</primary></indexterm>gdk_drawable_get_type <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_drawable_get_visible_region</primary></indexterm>gdk_drawable_get_visible_region <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_drawable_get_visual</primary></indexterm>gdk_drawable_get_visual <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_drawable_set_colormap</primary></indexterm>gdk_drawable_set_colormap <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_drop_finish</primary></indexterm>gdk_drop_finish <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_drop_reply</primary></indexterm>gdk_drop_reply <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_error_trap_pop</primary></indexterm>gdk_error_trap_pop <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_error_trap_push</primary></indexterm>gdk_error_trap_push <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_event_copy</primary></indexterm>gdk_event_copy <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_event_free</primary></indexterm>gdk_event_free <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_event_get</primary></indexterm>gdk_event_get <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_event_get_axis</primary></indexterm>gdk_event_get_axis <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_event_get_coords</primary></indexterm>gdk_event_get_coords <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_event_get_graphics_expose</primary></indexterm>gdk_event_get_graphics_expose <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_event_get_root_coords</primary></indexterm>gdk_event_get_root_coords <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_event_get_screen</primary></indexterm>gdk_event_get_screen <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_event_get_state</primary></indexterm>gdk_event_get_state <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_event_get_time</primary></indexterm>gdk_event_get_time <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_event_get_type</primary></indexterm>gdk_event_get_type <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_event_handler_set</primary></indexterm>gdk_event_handler_set <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_event_mask_get_type</primary></indexterm>gdk_event_mask_get_type <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_event_new</primary></indexterm>gdk_event_new <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_event_peek</primary></indexterm>gdk_event_peek <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_event_put</primary></indexterm>gdk_event_put <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_event_send_client_message</primary></indexterm>gdk_event_send_client_message <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_event_send_client_message_for_display</primary></indexterm>gdk_event_send_client_message_for_display <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_event_send_clientmessage_toall</primary></indexterm>gdk_event_send_clientmessage_toall <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_event_set_screen</primary></indexterm>gdk_event_set_screen <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_event_type_get_type</primary></indexterm>gdk_event_type_get_type <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_events_pending</primary></indexterm>gdk_events_pending <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_extension_mode_get_type</primary></indexterm>gdk_extension_mode_get_type <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_fill_get_type</primary></indexterm>gdk_fill_get_type <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_fill_rule_get_type</primary></indexterm>gdk_fill_rule_get_type <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_filter_return_get_type</primary></indexterm>gdk_filter_return_get_type <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_flush</primary></indexterm>gdk_flush <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_font_from_description_for_display</primary></indexterm>gdk_font_from_description_for_display <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_font_get_display</primary></indexterm>gdk_font_get_display <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_font_get_type</primary></indexterm>gdk_font_get_type <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_font_load_for_display</primary></indexterm>gdk_font_load_for_display <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_font_type_get_type</primary></indexterm>gdk_font_type_get_type <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_fontset_load_for_display</primary></indexterm>gdk_fontset_load_for_display <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_free_compound_text</primary></indexterm>gdk_free_compound_text <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_free_text_list</primary></indexterm>gdk_free_text_list <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_function_get_type</primary></indexterm>gdk_function_get_type <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_gc_copy</primary></indexterm>gdk_gc_copy <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_gc_get_colormap</primary></indexterm>gdk_gc_get_colormap <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_gc_get_screen</primary></indexterm>gdk_gc_get_screen <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_gc_get_type</primary></indexterm>gdk_gc_get_type <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_gc_get_values</primary></indexterm>gdk_gc_get_values <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_gc_new</primary></indexterm>gdk_gc_new <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_gc_new_with_values</primary></indexterm>gdk_gc_new_with_values <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_gc_offset</primary></indexterm>gdk_gc_offset <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_gc_set_background</primary></indexterm>gdk_gc_set_background <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_gc_set_clip_mask</primary></indexterm>gdk_gc_set_clip_mask <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_gc_set_clip_origin</primary></indexterm>gdk_gc_set_clip_origin <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_gc_set_clip_rectangle</primary></indexterm>gdk_gc_set_clip_rectangle <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_gc_set_clip_region</primary></indexterm>gdk_gc_set_clip_region <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_gc_set_colormap</primary></indexterm>gdk_gc_set_colormap <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_gc_set_dashes</primary></indexterm>gdk_gc_set_dashes <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_gc_set_exposures</primary></indexterm>gdk_gc_set_exposures <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_gc_set_fill</primary></indexterm>gdk_gc_set_fill <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_gc_set_foreground</primary></indexterm>gdk_gc_set_foreground <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_gc_set_function</primary></indexterm>gdk_gc_set_function <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_gc_set_line_attributes</primary></indexterm>gdk_gc_set_line_attributes <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_gc_set_rgb_bg_color</primary></indexterm>gdk_gc_set_rgb_bg_color <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_gc_set_rgb_fg_color</primary></indexterm>gdk_gc_set_rgb_fg_color <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_gc_set_stipple</primary></indexterm>gdk_gc_set_stipple <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_gc_set_subwindow</primary></indexterm>gdk_gc_set_subwindow <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_gc_set_tile</primary></indexterm>gdk_gc_set_tile <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_gc_set_ts_origin</primary></indexterm>gdk_gc_set_ts_origin <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_gc_set_values</primary></indexterm>gdk_gc_set_values <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_gc_values_mask_get_type</primary></indexterm>gdk_gc_values_mask_get_type <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_get_default_root_window</primary></indexterm>gdk_get_default_root_window <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_get_display</primary></indexterm>gdk_get_display <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_get_display_arg_name</primary></indexterm>gdk_get_display_arg_name <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_get_program_class</primary></indexterm>gdk_get_program_class <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_get_show_events</primary></indexterm>gdk_get_show_events <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_grab_status_get_type</primary></indexterm>gdk_grab_status_get_type <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_gravity_get_type</primary></indexterm>gdk_gravity_get_type <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_image_get_colormap</primary></indexterm>gdk_image_get_colormap <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_image_get_pixel</primary></indexterm>gdk_image_get_pixel <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_image_get_type</primary></indexterm>gdk_image_get_type <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_image_new</primary></indexterm>gdk_image_new <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_image_put_pixel</primary></indexterm>gdk_image_put_pixel <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_image_set_colormap</primary></indexterm>gdk_image_set_colormap <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_image_type_get_type</primary></indexterm>gdk_image_type_get_type <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_init</primary></indexterm>gdk_init <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_init_check</primary></indexterm>gdk_init_check <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_input_condition_get_type</primary></indexterm>gdk_input_condition_get_type <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_input_mode_get_type</primary></indexterm>gdk_input_mode_get_type <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_input_set_extension_events</primary></indexterm>gdk_input_set_extension_events <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_input_source_get_type</primary></indexterm>gdk_input_source_get_type <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_join_style_get_type</primary></indexterm>gdk_join_style_get_type <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_keyboard_grab</primary></indexterm>gdk_keyboard_grab <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_keyboard_grab_info_libgtk_only</primary></indexterm>gdk_keyboard_grab_info_libgtk_only <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_keyboard_ungrab</primary></indexterm>gdk_keyboard_ungrab <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_keymap_get_default</primary></indexterm>gdk_keymap_get_default <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_keymap_get_direction</primary></indexterm>gdk_keymap_get_direction <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_keymap_get_entries_for_keycode</primary></indexterm>gdk_keymap_get_entries_for_keycode <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_keymap_get_entries_for_keyval</primary></indexterm>gdk_keymap_get_entries_for_keyval <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_keymap_get_for_display</primary></indexterm>gdk_keymap_get_for_display <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_keymap_get_type</primary></indexterm>gdk_keymap_get_type <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_keymap_lookup_key</primary></indexterm>gdk_keymap_lookup_key <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_keymap_translate_keyboard_state</primary></indexterm>gdk_keymap_translate_keyboard_state <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_keyval_convert_case</primary></indexterm>gdk_keyval_convert_case <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_keyval_from_name</primary></indexterm>gdk_keyval_from_name <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_keyval_is_lower</primary></indexterm>gdk_keyval_is_lower <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_keyval_is_upper</primary></indexterm>gdk_keyval_is_upper <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_keyval_name</primary></indexterm>gdk_keyval_name <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_keyval_to_lower</primary></indexterm>gdk_keyval_to_lower <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_keyval_to_unicode</primary></indexterm>gdk_keyval_to_unicode <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_keyval_to_upper</primary></indexterm>gdk_keyval_to_upper <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_line_style_get_type</primary></indexterm>gdk_line_style_get_type <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_list_visuals</primary></indexterm>gdk_list_visuals <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_modifier_type_get_type</primary></indexterm>gdk_modifier_type_get_type <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_net_wm_supports</primary></indexterm>gdk_net_wm_supports <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_notify_startup_complete</primary></indexterm>gdk_notify_startup_complete <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_notify_type_get_type</primary></indexterm>gdk_notify_type_get_type <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_overlap_type_get_type</primary></indexterm>gdk_overlap_type_get_type <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_owner_change_get_type</primary></indexterm>gdk_owner_change_get_type <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_pango_attr_embossed_new</primary></indexterm>gdk_pango_attr_embossed_new <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_pango_attr_stipple_new</primary></indexterm>gdk_pango_attr_stipple_new <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_pango_context_get</primary></indexterm>gdk_pango_context_get <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_pango_context_get_for_screen</primary></indexterm>gdk_pango_context_get_for_screen <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_pango_layout_get_clip_region</primary></indexterm>gdk_pango_layout_get_clip_region <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_pango_layout_line_get_clip_region</primary></indexterm>gdk_pango_layout_line_get_clip_region <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_pango_renderer_get_default</primary></indexterm>gdk_pango_renderer_get_default <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_pango_renderer_get_type</primary></indexterm>gdk_pango_renderer_get_type <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_pango_renderer_new</primary></indexterm>gdk_pango_renderer_new <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_pango_renderer_set_drawable</primary></indexterm>gdk_pango_renderer_set_drawable <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_pango_renderer_set_gc</primary></indexterm>gdk_pango_renderer_set_gc <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_pango_renderer_set_override_color</primary></indexterm>gdk_pango_renderer_set_override_color <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_pango_renderer_set_stipple</primary></indexterm>gdk_pango_renderer_set_stipple <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_parse_args</primary></indexterm>gdk_parse_args <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_pixbuf_get_from_drawable</primary></indexterm>gdk_pixbuf_get_from_drawable <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_pixbuf_get_from_image</primary></indexterm>gdk_pixbuf_get_from_image <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_pixbuf_render_pixmap_and_mask</primary></indexterm>gdk_pixbuf_render_pixmap_and_mask <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_pixbuf_render_pixmap_and_mask_for_colormap</primary></indexterm>gdk_pixbuf_render_pixmap_and_mask_for_colormap <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_pixbuf_render_threshold_alpha</primary></indexterm>gdk_pixbuf_render_threshold_alpha <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_pixmap_colormap_create_from_xpm</primary></indexterm>gdk_pixmap_colormap_create_from_xpm <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_pixmap_colormap_create_from_xpm_d</primary></indexterm>gdk_pixmap_colormap_create_from_xpm_d <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_pixmap_create_from_data</primary></indexterm>gdk_pixmap_create_from_data <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_pixmap_create_from_xpm</primary></indexterm>gdk_pixmap_create_from_xpm <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_pixmap_create_from_xpm_d</primary></indexterm>gdk_pixmap_create_from_xpm_d <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_pixmap_foreign_new</primary></indexterm>gdk_pixmap_foreign_new <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_pixmap_foreign_new_for_display</primary></indexterm>gdk_pixmap_foreign_new_for_display <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_pixmap_get_type</primary></indexterm>gdk_pixmap_get_type <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_pixmap_lookup</primary></indexterm>gdk_pixmap_lookup <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_pixmap_lookup_for_display</primary></indexterm>gdk_pixmap_lookup_for_display <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_pixmap_new</primary></indexterm>gdk_pixmap_new <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_pointer_grab</primary></indexterm>gdk_pointer_grab <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_pointer_grab_info_libgtk_only</primary></indexterm>gdk_pointer_grab_info_libgtk_only <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_pointer_is_grabbed</primary></indexterm>gdk_pointer_is_grabbed <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_pointer_ungrab</primary></indexterm>gdk_pointer_ungrab <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_pre_parse_libgtk_only</primary></indexterm>gdk_pre_parse_libgtk_only <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_prop_mode_get_type</primary></indexterm>gdk_prop_mode_get_type <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_property_change</primary></indexterm>gdk_property_change <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_property_delete</primary></indexterm>gdk_property_delete <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_property_get</primary></indexterm>gdk_property_get <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_property_state_get_type</primary></indexterm>gdk_property_state_get_type <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_query_depths</primary></indexterm>gdk_query_depths <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_query_visual_types</primary></indexterm>gdk_query_visual_types <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_rectangle_get_type</primary></indexterm>gdk_rectangle_get_type <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_rectangle_intersect</primary></indexterm>gdk_rectangle_intersect <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_rectangle_union</primary></indexterm>gdk_rectangle_union <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_region_copy</primary></indexterm>gdk_region_copy <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_region_destroy</primary></indexterm>gdk_region_destroy <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_region_empty</primary></indexterm>gdk_region_empty <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_region_equal</primary></indexterm>gdk_region_equal <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_region_get_clipbox</primary></indexterm>gdk_region_get_clipbox <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_region_get_rectangles</primary></indexterm>gdk_region_get_rectangles <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_region_intersect</primary></indexterm>gdk_region_intersect <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_region_new</primary></indexterm>gdk_region_new <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_region_offset</primary></indexterm>gdk_region_offset <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_region_point_in</primary></indexterm>gdk_region_point_in <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_region_polygon</primary></indexterm>gdk_region_polygon <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_region_rect_in</primary></indexterm>gdk_region_rect_in <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_region_rectangle</primary></indexterm>gdk_region_rectangle <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_region_shrink</primary></indexterm>gdk_region_shrink <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_region_spans_intersect_foreach</primary></indexterm>gdk_region_spans_intersect_foreach <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_region_subtract</primary></indexterm>gdk_region_subtract <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_region_union</primary></indexterm>gdk_region_union <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_region_union_with_rect</primary></indexterm>gdk_region_union_with_rect <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_region_xor</primary></indexterm>gdk_region_xor <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_rgb_cmap_free</primary></indexterm>gdk_rgb_cmap_free <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_rgb_cmap_new</primary></indexterm>gdk_rgb_cmap_new <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_rgb_colormap_ditherable</primary></indexterm>gdk_rgb_colormap_ditherable <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_rgb_dither_get_type</primary></indexterm>gdk_rgb_dither_get_type <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_rgb_ditherable</primary></indexterm>gdk_rgb_ditherable <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_rgb_find_color</primary></indexterm>gdk_rgb_find_color <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_rgb_get_colormap</primary></indexterm>gdk_rgb_get_colormap <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_rgb_get_visual</primary></indexterm>gdk_rgb_get_visual <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_rgb_set_install</primary></indexterm>gdk_rgb_set_install <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_rgb_set_min_colors</primary></indexterm>gdk_rgb_set_min_colors <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_rgb_set_verbose</primary></indexterm>gdk_rgb_set_verbose <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_screen_broadcast_client_message</primary></indexterm>gdk_screen_broadcast_client_message <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_screen_get_default</primary></indexterm>gdk_screen_get_default <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_screen_get_default_colormap</primary></indexterm>gdk_screen_get_default_colormap <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_screen_get_display</primary></indexterm>gdk_screen_get_display <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_screen_get_height</primary></indexterm>gdk_screen_get_height <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_screen_get_height_mm</primary></indexterm>gdk_screen_get_height_mm <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_screen_get_monitor_at_point</primary></indexterm>gdk_screen_get_monitor_at_point <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_screen_get_monitor_at_window</primary></indexterm>gdk_screen_get_monitor_at_window <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_screen_get_monitor_geometry</primary></indexterm>gdk_screen_get_monitor_geometry <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_screen_get_n_monitors</primary></indexterm>gdk_screen_get_n_monitors <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_screen_get_number</primary></indexterm>gdk_screen_get_number <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_screen_get_rgb_colormap</primary></indexterm>gdk_screen_get_rgb_colormap <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_screen_get_rgb_visual</primary></indexterm>gdk_screen_get_rgb_visual <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_screen_get_root_window</primary></indexterm>gdk_screen_get_root_window <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_screen_get_setting</primary></indexterm>gdk_screen_get_setting <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_screen_get_system_colormap</primary></indexterm>gdk_screen_get_system_colormap <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_screen_get_system_visual</primary></indexterm>gdk_screen_get_system_visual <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_screen_get_toplevel_windows</primary></indexterm>gdk_screen_get_toplevel_windows <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_screen_get_type</primary></indexterm>gdk_screen_get_type <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_screen_get_width</primary></indexterm>gdk_screen_get_width <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_screen_get_width_mm</primary></indexterm>gdk_screen_get_width_mm <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_screen_height</primary></indexterm>gdk_screen_height <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_screen_height_mm</primary></indexterm>gdk_screen_height_mm <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_screen_list_visuals</primary></indexterm>gdk_screen_list_visuals <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_screen_make_display_name</primary></indexterm>gdk_screen_make_display_name <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_screen_set_default_colormap</primary></indexterm>gdk_screen_set_default_colormap <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_screen_width</primary></indexterm>gdk_screen_width <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_screen_width_mm</primary></indexterm>gdk_screen_width_mm <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_scroll_direction_get_type</primary></indexterm>gdk_scroll_direction_get_type <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_selection_convert</primary></indexterm>gdk_selection_convert <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_selection_owner_get</primary></indexterm>gdk_selection_owner_get <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_selection_owner_get_for_display</primary></indexterm>gdk_selection_owner_get_for_display <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_selection_owner_set</primary></indexterm>gdk_selection_owner_set <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_selection_owner_set_for_display</primary></indexterm>gdk_selection_owner_set_for_display <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_selection_property_get</primary></indexterm>gdk_selection_property_get <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_selection_send_notify</primary></indexterm>gdk_selection_send_notify <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_selection_send_notify_for_display</primary></indexterm>gdk_selection_send_notify_for_display <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_set_double_click_time</primary></indexterm>gdk_set_double_click_time <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_set_locale</primary></indexterm>gdk_set_locale <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_set_pointer_hooks</primary></indexterm>gdk_set_pointer_hooks <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_set_program_class</primary></indexterm>gdk_set_program_class <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_set_show_events</primary></indexterm>gdk_set_show_events <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_set_sm_client_id</primary></indexterm>gdk_set_sm_client_id <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_setting_action_get_type</primary></indexterm>gdk_setting_action_get_type <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_setting_get</primary></indexterm>gdk_setting_get <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_spawn_command_line_on_screen</primary></indexterm>gdk_spawn_command_line_on_screen <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_spawn_on_screen</primary></indexterm>gdk_spawn_on_screen <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_spawn_on_screen_with_pipes</primary></indexterm>gdk_spawn_on_screen_with_pipes <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_status_get_type</primary></indexterm>gdk_status_get_type <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_string_to_compound_text</primary></indexterm>gdk_string_to_compound_text <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_string_to_compound_text_for_display</primary></indexterm>gdk_string_to_compound_text_for_display <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_subwindow_mode_get_type</primary></indexterm>gdk_subwindow_mode_get_type <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_text_property_to_text_list</primary></indexterm>gdk_text_property_to_text_list <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_text_property_to_text_list_for_display</primary></indexterm>gdk_text_property_to_text_list_for_display <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_text_property_to_utf8_list</primary></indexterm>gdk_text_property_to_utf8_list <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_text_property_to_utf8_list_for_display</primary></indexterm>gdk_text_property_to_utf8_list_for_display <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_threads_enter</primary></indexterm>gdk_threads_enter <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_threads_init</primary></indexterm>gdk_threads_init <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_threads_leave</primary></indexterm>gdk_threads_leave <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_threads_set_lock_functions</primary></indexterm>gdk_threads_set_lock_functions <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_unicode_to_keyval</primary></indexterm>gdk_unicode_to_keyval <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_utf8_to_compound_text</primary></indexterm>gdk_utf8_to_compound_text <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_utf8_to_compound_text_for_display</primary></indexterm>gdk_utf8_to_compound_text_for_display <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_utf8_to_string_target</primary></indexterm>gdk_utf8_to_string_target <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_visibility_state_get_type</primary></indexterm>gdk_visibility_state_get_type <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_visual_get_best</primary></indexterm>gdk_visual_get_best <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_visual_get_best_depth</primary></indexterm>gdk_visual_get_best_depth <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_visual_get_best_type</primary></indexterm>gdk_visual_get_best_type <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_visual_get_best_with_both</primary></indexterm>gdk_visual_get_best_with_both <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_visual_get_best_with_depth</primary></indexterm>gdk_visual_get_best_with_depth <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_visual_get_best_with_type</primary></indexterm>gdk_visual_get_best_with_type <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_visual_get_screen</primary></indexterm>gdk_visual_get_screen <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_visual_get_system</primary></indexterm>gdk_visual_get_system <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_visual_get_type</primary></indexterm>gdk_visual_get_type <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_visual_type_get_type</primary></indexterm>gdk_visual_type_get_type <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_window_add_filter</primary></indexterm>gdk_window_add_filter <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_window_at_pointer</primary></indexterm>gdk_window_at_pointer <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_window_attributes_type_get_type</primary></indexterm>gdk_window_attributes_type_get_type <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_window_begin_move_drag</primary></indexterm>gdk_window_begin_move_drag <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_window_begin_paint_rect</primary></indexterm>gdk_window_begin_paint_rect <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_window_begin_paint_region</primary></indexterm>gdk_window_begin_paint_region <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_window_begin_resize_drag</primary></indexterm>gdk_window_begin_resize_drag <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_window_class_get_type</primary></indexterm>gdk_window_class_get_type <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_window_clear</primary></indexterm>gdk_window_clear <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_window_clear_area</primary></indexterm>gdk_window_clear_area <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_window_clear_area_e</primary></indexterm>gdk_window_clear_area_e <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_window_configure_finished</primary></indexterm>gdk_window_configure_finished <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_window_constrain_size</primary></indexterm>gdk_window_constrain_size <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_window_deiconify</primary></indexterm>gdk_window_deiconify <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_window_destroy</primary></indexterm>gdk_window_destroy <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_window_edge_get_type</primary></indexterm>gdk_window_edge_get_type <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_window_enable_synchronized_configure</primary></indexterm>gdk_window_enable_synchronized_configure <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_window_end_paint</primary></indexterm>gdk_window_end_paint <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_window_focus</primary></indexterm>gdk_window_focus <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_window_foreign_new</primary></indexterm>gdk_window_foreign_new <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_window_foreign_new_for_display</primary></indexterm>gdk_window_foreign_new_for_display <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_window_freeze_updates</primary></indexterm>gdk_window_freeze_updates <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_window_fullscreen</primary></indexterm>gdk_window_fullscreen <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_window_get_children</primary></indexterm>gdk_window_get_children <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_window_get_decorations</primary></indexterm>gdk_window_get_decorations <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_window_get_events</primary></indexterm>gdk_window_get_events <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_window_get_frame_extents</primary></indexterm>gdk_window_get_frame_extents <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_window_get_geometry</primary></indexterm>gdk_window_get_geometry <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_window_get_group</primary></indexterm>gdk_window_get_group <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_window_get_internal_paint_info</primary></indexterm>gdk_window_get_internal_paint_info <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_window_get_origin</primary></indexterm>gdk_window_get_origin <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_window_get_parent</primary></indexterm>gdk_window_get_parent <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_window_get_pointer</primary></indexterm>gdk_window_get_pointer <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_window_get_position</primary></indexterm>gdk_window_get_position <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_window_get_root_origin</primary></indexterm>gdk_window_get_root_origin <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_window_get_state</primary></indexterm>gdk_window_get_state <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_window_get_toplevel</primary></indexterm>gdk_window_get_toplevel <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_window_get_toplevels</primary></indexterm>gdk_window_get_toplevels <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_window_get_update_area</primary></indexterm>gdk_window_get_update_area <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_window_get_user_data</primary></indexterm>gdk_window_get_user_data <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_window_get_window_type</primary></indexterm>gdk_window_get_window_type <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_window_hide</primary></indexterm>gdk_window_hide <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_window_hints_get_type</primary></indexterm>gdk_window_hints_get_type <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_window_iconify</primary></indexterm>gdk_window_iconify <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_window_impl_x11_get_type</primary></indexterm>gdk_window_impl_x11_get_type <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_window_invalidate_maybe_recurse</primary></indexterm>gdk_window_invalidate_maybe_recurse <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_window_invalidate_rect</primary></indexterm>gdk_window_invalidate_rect <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_window_invalidate_region</primary></indexterm>gdk_window_invalidate_region <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_window_is_viewable</primary></indexterm>gdk_window_is_viewable <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_window_is_visible</primary></indexterm>gdk_window_is_visible <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_window_lookup</primary></indexterm>gdk_window_lookup <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_window_lookup_for_display</primary></indexterm>gdk_window_lookup_for_display <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_window_lower</primary></indexterm>gdk_window_lower <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_window_maximize</primary></indexterm>gdk_window_maximize <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_window_merge_child_shapes</primary></indexterm>gdk_window_merge_child_shapes <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_window_move</primary></indexterm>gdk_window_move <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_window_move_resize</primary></indexterm>gdk_window_move_resize <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_window_new</primary></indexterm>gdk_window_new <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_window_object_get_type</primary></indexterm>gdk_window_object_get_type <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_window_peek_children</primary></indexterm>gdk_window_peek_children <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_window_process_all_updates</primary></indexterm>gdk_window_process_all_updates <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_window_process_updates</primary></indexterm>gdk_window_process_updates <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_window_raise</primary></indexterm>gdk_window_raise <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_window_register_dnd</primary></indexterm>gdk_window_register_dnd <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_window_remove_filter</primary></indexterm>gdk_window_remove_filter <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_window_reparent</primary></indexterm>gdk_window_reparent <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_window_resize</primary></indexterm>gdk_window_resize <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_window_scroll</primary></indexterm>gdk_window_scroll <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_window_set_accept_focus</primary></indexterm>gdk_window_set_accept_focus <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_window_set_back_pixmap</primary></indexterm>gdk_window_set_back_pixmap <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_window_set_background</primary></indexterm>gdk_window_set_background <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_window_set_child_shapes</primary></indexterm>gdk_window_set_child_shapes <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_window_set_cursor</primary></indexterm>gdk_window_set_cursor <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_window_set_debug_updates</primary></indexterm>gdk_window_set_debug_updates <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_window_set_decorations</primary></indexterm>gdk_window_set_decorations <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_window_set_events</primary></indexterm>gdk_window_set_events <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_window_set_focus_on_map</primary></indexterm>gdk_window_set_focus_on_map <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_window_set_functions</primary></indexterm>gdk_window_set_functions <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_window_set_geometry_hints</primary></indexterm>gdk_window_set_geometry_hints <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_window_set_group</primary></indexterm>gdk_window_set_group <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_window_set_icon</primary></indexterm>gdk_window_set_icon <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_window_set_icon_list</primary></indexterm>gdk_window_set_icon_list <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_window_set_icon_name</primary></indexterm>gdk_window_set_icon_name <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_window_set_keep_above</primary></indexterm>gdk_window_set_keep_above <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_window_set_keep_below</primary></indexterm>gdk_window_set_keep_below <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_window_set_modal_hint</primary></indexterm>gdk_window_set_modal_hint <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_window_set_override_redirect</primary></indexterm>gdk_window_set_override_redirect <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_window_set_role</primary></indexterm>gdk_window_set_role <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_window_set_skip_pager_hint</primary></indexterm>gdk_window_set_skip_pager_hint <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_window_set_skip_taskbar_hint</primary></indexterm>gdk_window_set_skip_taskbar_hint <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_window_set_static_gravities</primary></indexterm>gdk_window_set_static_gravities <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_window_set_title</primary></indexterm>gdk_window_set_title <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_window_set_transient_for</primary></indexterm>gdk_window_set_transient_for <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_window_set_type_hint</primary></indexterm>gdk_window_set_type_hint <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_window_set_user_data</primary></indexterm>gdk_window_set_user_data <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_window_shape_combine_mask</primary></indexterm>gdk_window_shape_combine_mask <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_window_shape_combine_region</primary></indexterm>gdk_window_shape_combine_region <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_window_show</primary></indexterm>gdk_window_show <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_window_show_unraised</primary></indexterm>gdk_window_show_unraised <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_window_state_get_type</primary></indexterm>gdk_window_state_get_type <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_window_stick</primary></indexterm>gdk_window_stick <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_window_thaw_updates</primary></indexterm>gdk_window_thaw_updates <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_window_type_get_type</primary></indexterm>gdk_window_type_get_type <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_window_type_hint_get_type</primary></indexterm>gdk_window_type_hint_get_type <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_window_unfullscreen</primary></indexterm>gdk_window_unfullscreen <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_window_unmaximize</primary></indexterm>gdk_window_unmaximize <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_window_unstick</primary></indexterm>gdk_window_unstick <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_window_withdraw</primary></indexterm>gdk_window_withdraw <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_wm_decoration_get_type</primary></indexterm>gdk_wm_decoration_get_type <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_wm_function_get_type</primary></indexterm>gdk_wm_function_get_type <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_x11_atom_to_xatom</primary></indexterm>gdk_x11_atom_to_xatom <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_x11_atom_to_xatom_for_display</primary></indexterm>gdk_x11_atom_to_xatom_for_display <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_x11_colormap_foreign_new</primary></indexterm>gdk_x11_colormap_foreign_new <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_x11_colormap_get_xcolormap</primary></indexterm>gdk_x11_colormap_get_xcolormap <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_x11_colormap_get_xdisplay</primary></indexterm>gdk_x11_colormap_get_xdisplay <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_x11_cursor_get_xcursor</primary></indexterm>gdk_x11_cursor_get_xcursor <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_x11_cursor_get_xdisplay</primary></indexterm>gdk_x11_cursor_get_xdisplay <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_x11_display_get_user_time_libgtk_only</primary></indexterm>gdk_x11_display_get_user_time_libgtk_only <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_x11_display_get_xdisplay</primary></indexterm>gdk_x11_display_get_xdisplay <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_x11_display_grab</primary></indexterm>gdk_x11_display_grab <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_x11_display_ungrab</primary></indexterm>gdk_x11_display_ungrab <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_x11_drawable_get_xdisplay</primary></indexterm>gdk_x11_drawable_get_xdisplay <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_x11_drawable_get_xid</primary></indexterm>gdk_x11_drawable_get_xid <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_x11_gc_get_xdisplay</primary></indexterm>gdk_x11_gc_get_xdisplay <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_x11_gc_get_xgc</primary></indexterm>gdk_x11_gc_get_xgc <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_x11_get_default_root_xwindow</primary></indexterm>gdk_x11_get_default_root_xwindow <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_x11_get_default_screen</primary></indexterm>gdk_x11_get_default_screen <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_x11_get_default_xdisplay</primary></indexterm>gdk_x11_get_default_xdisplay <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_x11_get_server_time</primary></indexterm>gdk_x11_get_server_time <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_x11_get_xatom_by_name</primary></indexterm>gdk_x11_get_xatom_by_name <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_x11_get_xatom_by_name_for_display</primary></indexterm>gdk_x11_get_xatom_by_name_for_display <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_x11_get_xatom_name</primary></indexterm>gdk_x11_get_xatom_name <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_x11_get_xatom_name_for_display</primary></indexterm>gdk_x11_get_xatom_name_for_display <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_x11_grab_server</primary></indexterm>gdk_x11_grab_server <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_x11_image_get_xdisplay</primary></indexterm>gdk_x11_image_get_xdisplay <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_x11_image_get_ximage</primary></indexterm>gdk_x11_image_get_ximage <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_x11_lookup_xdisplay</primary></indexterm>gdk_x11_lookup_xdisplay <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_x11_register_standard_event_type</primary></indexterm>gdk_x11_register_standard_event_type <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_x11_screen_get_screen_number</primary></indexterm>gdk_x11_screen_get_screen_number <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_x11_screen_get_window_manager_name</primary></indexterm>gdk_x11_screen_get_window_manager_name <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_x11_screen_get_xscreen</primary></indexterm>gdk_x11_screen_get_xscreen <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_x11_screen_lookup_visual</primary></indexterm>gdk_x11_screen_lookup_visual <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_x11_screen_supports_net_wm_hint</primary></indexterm>gdk_x11_screen_supports_net_wm_hint <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_x11_ungrab_server</primary></indexterm>gdk_x11_ungrab_server <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_x11_visual_get_xvisual</primary></indexterm>gdk_x11_visual_get_xvisual <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_x11_window_set_user_time</primary></indexterm>gdk_x11_window_set_user_time <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_x11_xatom_to_atom</primary></indexterm>gdk_x11_xatom_to_atom <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_x11_xatom_to_atom_for_display</primary></indexterm>gdk_x11_xatom_to_atom_for_display <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_xid_table_lookup</primary></indexterm>gdk_xid_table_lookup <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gdk_xid_table_lookup_for_display</primary></indexterm>gdk_xid_table_lookup_for_display <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdkx_visual_get</primary></indexterm>gdkx_visual_get <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY></ENTRY>
<ENTRY></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for Default LibGroup for libgdk-x11-2.0 specified in <XREF linkend="tbl-libgdk-x11-2.0-def-data">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<TABLE id="tbl-libgdk-x11-2.0-def-data">
<TITLE>libgdk-x11-2.0 - Default LibGroup for libgdk-x11-2.0 Data Interfaces</TITLE>
<TGROUP COLS=4>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>gdk_threads_lock</primary></indexterm>gdk_threads_lock <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY><indexterm><primary>gdk_threads_unlock</primary></indexterm>gdk_threads_unlock <LINK LINKEND="REFSTD.libgdk.x11.2.0.1">[Gdk]</LINK></ENTRY>
<ENTRY></ENTRY>
<ENTRY></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>
</SECT2>
</SECT1>
<SECT1 ID=libgdk-x11-2.0-ddefs>
<TITLE>Data Definitions for libgdk-x11-2.0</TITLE>
<PARA>
This section defines global identifiers and their values that are associated
with interfaces contained in libgdk-x11-2.0.
These definitions are organized into groups that
correspond to system headers. This convention is used as a
convenience for the reader, and does not imply the existence
of these headers, or their content.
Where an interface is defined as requiring a particular system header file
all of the data definitions for that system header file presented here shall be in effect.
</PARA>
<PARA>
This section gives data definitions to promote binary application
portability, not to repeat source interface definitions available
elsewhere. System providers and application developers should use this ABI
to supplement - not to replace - source interface definition specifications.
</PARA>
<PARA>
This specification uses the <XREF LINKEND='std.ISOC99'> C Language as the reference programming language, and data definitions are specified in ISO C format. The C language is used here as a convenient notation. Using a C language description of these data objects does not preclude their use by other programming languages.</PARA>
<SECT2>
<TITLE>gtk-2.0/gdk/gdk.h</TITLE>
<PARA>
</PARA>
<SCREEN>

typedef enum {
    GDK_CURSOR_IS_PIXMAP, GDK_X_CURSOR, GDK_ARROW, GDK_BASED_ARROW_DOWN,
	GDK_BASED_ARROW_UP, GDK_BOAT, GDK_BOGOSITY, GDK_BOTTOM_LEFT_CORNER,
	GDK_BOTTOM_RIGHT_CORNER, GDK_BOTTOM_SIDE, GDK_BOTTOM_TEE,
	GDK_BOX_SPIRAL, GDK_CENTER_PTR, GDK_CIRCLE, GDK_CLOCK,
	GDK_COFFEE_MUG, GDK_CROSS, GDK_CROSS_REVERSE, GDK_CROSSHAIR,
	GDK_DIAMOND_CROSS, GDK_DOT, GDK_DOTBOX, GDK_DOUBLE_ARROW,
	GDK_DRAFT_LARGE, GDK_DRAFT_SMALL, GDK_DRAPED_BOX, GDK_EXCHANGE,
	GDK_FLEUR, GDK_GOBBLER, GDK_GUMBY, GDK_HAND1, GDK_HAND2, GDK_HEART,
	GDK_ICON, GDK_IRON_CROSS, GDK_LEFT_PTR, GDK_LEFT_SIDE,
	GDK_LEFT_TEE, GDK_LEFTBUTTON, GDK_LL_ANGLE, GDK_LR_ANGLE, GDK_MAN,
	GDK_MIDDLEBUTTON, GDK_MOUSE, GDK_PENCIL, GDK_PIRATE, GDK_PLUS,
	GDK_QUESTION_ARROW, GDK_RIGHT_PTR, GDK_RIGHT_SIDE, GDK_RIGHT_TEE,
	GDK_RIGHTBUTTON, GDK_RTL_LOGO, GDK_SAILBOAT, GDK_SB_DOWN_ARROW,
	GDK_SB_H_DOUBLE_ARROW, GDK_SB_LEFT_ARROW, GDK_SB_RIGHT_ARROW,
	GDK_SB_UP_ARROW, GDK_SB_V_DOUBLE_ARROW, GDK_SHUTTLE, GDK_SIZING,
	GDK_SPIDER, GDK_SPRAYCAN, GDK_STAR, GDK_TARGET, GDK_TCROSS,
	GDK_TOP_LEFT_ARROW, GDK_TOP_LEFT_CORNER, GDK_TOP_RIGHT_CORNER,
	GDK_TOP_SIDE, GDK_TOP_TEE, GDK_TREK, GDK_UL_ANGLE, GDK_UMBRELLA,
	GDK_UR_ANGLE, GDK_WATCH, GDK_XTERM, GDK_LAST_CURSOR
} GdkCursorType;
typedef struct _GdkCursor {
    GdkCursorType type;
    guint ref_count;
} GdkCursor;
typedef struct _GdkDrawable {
    GObject parent_instance;
} GdkWindow;
typedef enum {
    GDK_SOURCE_MOUSE, GDK_SOURCE_PEN, GDK_SOURCE_ERASER, GDK_SOURCE_CURSOR
} GdkInputSource;
typedef enum {
    GDK_MODE_DISABLED, GDK_MODE_SCREEN, GDK_MODE_WINDOW
} GdkInputMode;
typedef enum {
    GDK_AXIS_IGNORE, GDK_AXIS_X, GDK_AXIS_Y, GDK_AXIS_PRESSURE,
	GDK_AXIS_XTILT, GDK_AXIS_YTILT, GDK_AXIS_WHEEL, GDK_AXIS_LAST
} GdkAxisUse;
typedef struct _GdkDeviceAxis {
    GdkAxisUse use;
    gdouble min;
    gdouble max;
} GdkDeviceAxis;
typedef enum {
    GDK_SHIFT_MASK, GDK_LOCK_MASK, GDK_CONTROL_MASK, GDK_MOD1_MASK,
	GDK_MOD2_MASK, GDK_MOD3_MASK, GDK_MOD4_MASK, GDK_MOD5_MASK,
	GDK_BUTTON1_MASK, GDK_BUTTON2_MASK, GDK_BUTTON3_MASK,
	GDK_BUTTON4_MASK, GDK_BUTTON5_MASK, GDK_RELEASE_MASK,
	GDK_MODIFIER_MASK
} GdkModifierType;
typedef struct _GdkDeviceKey {
    guint keyval;
    GdkModifierType modifiers;
} GdkDeviceKey;
typedef struct _GdkDevice {
    GObject parent_instance;
    gchar *name;
    GdkInputSource source;
    GdkInputMode mode;
    gboolean has_cursor;
    gint num_axes;
    GdkDeviceAxis *axes;
    gint num_keys;
    GdkDeviceKey *keys;
} GdkDevice;
typedef struct _GdkDisplay {
    GObject parent_instance;
    GList *queued_events;
    GList *queued_tail;
    guint32 button_click_time[];
    GdkWindow *button_window[];
    gint button_number[];
    guint double_click_time;
    GdkDevice *core_pointer;
    const GdkDisplayPointerHooks *pointer_hooks;
    guint closed:1;
    guint double_click_distance;
    gint button_x[];
    gint button_y[];
} GdkDisplay;
typedef struct _GdkColor {
    guint32 pixel;
    guint16 red;
    guint16 green;
    guint16 blue;
} GdkColor;
typedef enum {
    GDK_VISUAL_STATIC_GRAY, GDK_VISUAL_GRAYSCALE, GDK_VISUAL_STATIC_COLOR,
	GDK_VISUAL_PSEUDO_COLOR, GDK_VISUAL_TRUE_COLOR,
	GDK_VISUAL_DIRECT_COLOR
} GdkVisualType;
typedef enum {
    GDK_LSB_FIRST, GDK_MSB_FIRST
} GdkByteOrder;
typedef struct _GdkVisual {
    GObject parent_instance;
    GdkVisualType type;
    gint depth;
    GdkByteOrder byte_order;
    gint colormap_size;
    gint bits_per_rgb;
    guint32 red_mask;
    gint red_shift;
    gint red_prec;
    guint32 green_mask;
    gint green_shift;
    gint green_prec;
    guint32 blue_mask;
    gint blue_shift;
    gint blue_prec;
} GdkVisual;
typedef struct _GdkColormap {
    GObject parent_instance;
    gint size;
    GdkColor *colors;
    GdkVisual *visual;
    gpointer windowing_data;
} GdkColormap;
typedef struct _GdkGC {
    GObject parent_instance;
    gint clip_x_origin;
    gint clip_y_origin;
    gint ts_x_origin;
    gint ts_y_origin;
    GdkColormap *colormap;
} GdkGC;
typedef struct _GdkScreen {
    GObject parent_instance;
    guint closed:1;
    GdkGC *normal_gcs[];
    GdkGC *exposure_gcs[];
} GdkScreen;
typedef struct _GdkDisplayPointerHooks {
    void (*fptr_gdk_125) (GdkDisplay *, GdkScreen * *, gint *, gint *,
			  GdkModifierType *);
    GdkWindow *(*fptr_gdk_661) (GdkDisplay *, GdkWindow *, gint *, gint *,
				GdkModifierType *);
    GdkWindow *(*fptr_gdk_94) (GdkDisplay *, gint *, gint *);
} GdkDisplayPointerHooks;
typedef struct _GdkAtom
*GdkAtom;
typedef enum {
    GDK_FILTER_CONTINUE, GDK_FILTER_TRANSLATE, GDK_FILTER_REMOVE
} GdkFilterReturn;
typedef void GdkXEvent;
typedef enum {
    GDK_NOTHING, GDK_DELETE, GDK_DESTROY, GDK_EXPOSE, GDK_MOTION_NOTIFY,
	GDK_BUTTON_PRESS, GDK_2BUTTON_PRESS, GDK_3BUTTON_PRESS,
	GDK_BUTTON_RELEASE, GDK_KEY_PRESS, GDK_KEY_RELEASE,
	GDK_ENTER_NOTIFY, GDK_LEAVE_NOTIFY, GDK_FOCUS_CHANGE,
	GDK_CONFIGURE, GDK_MAP, GDK_UNMAP, GDK_PROPERTY_NOTIFY,
	GDK_SELECTION_CLEAR, GDK_SELECTION_REQUEST, GDK_SELECTION_NOTIFY,
	GDK_PROXIMITY_IN, GDK_PROXIMITY_OUT, GDK_DRAG_ENTER,
	GDK_DRAG_LEAVE, GDK_DRAG_MOTION, GDK_DRAG_STATUS, GDK_DROP_START,
	GDK_DROP_FINISHED, GDK_CLIENT_EVENT, GDK_VISIBILITY_NOTIFY,
	GDK_NO_EXPOSE, GDK_SCROLL, GDK_WINDOW_STATE, GDK_SETTING,
	GDK_OWNER_CHANGE
} GdkEventType;
typedef struct _GdkEventAny {
    GdkEventType type;
    GdkWindow *window;
    gint8 send_event;
} GdkEventAny;
typedef struct _GdkRectangle {
    gint x;
    gint y;
    gint width;
    gint height;
} GdkRectangle;
typedef struct _GdkRegion
 GdkRegion;
typedef struct _GdkEventExpose {
    GdkEventType type;
    GdkWindow *window;
    gint8 send_event;
    GdkRectangle area;
    GdkRegion *region;
    gint count;
} GdkEventExpose;
typedef struct _GdkEventNoExpose {
    GdkEventType type;
    GdkWindow *window;
    gint8 send_event;
} GdkEventNoExpose;
typedef enum {
    GDK_VISIBILITY_UNOBSCURED, GDK_VISIBILITY_PARTIAL,
	GDK_VISIBILITY_FULLY_OBSCURED
} GdkVisibilityState;
typedef struct _GdkEventVisibility {
    GdkEventType type;
    GdkWindow *window;
    gint8 send_event;
    GdkVisibilityState state;
} GdkEventVisibility;
typedef struct _GdkEventMotion {
    GdkEventType type;
    GdkWindow *window;
    gint8 send_event;
    guint32 time;
    gdouble x;
    gdouble y;
    gdouble *axes;
    guint state;
    gint16 is_hint;
    GdkDevice *device;
    gdouble x_root;
    gdouble y_root;
} GdkEventMotion;
typedef struct _GdkEventButton {
    GdkEventType type;
    GdkWindow *window;
    gint8 send_event;
    guint32 time;
    gdouble x;
    gdouble y;
    gdouble *axes;
    guint state;
    guint button;
    GdkDevice *device;
    gdouble x_root;
    gdouble y_root;
} GdkEventButton;
typedef enum {
    GDK_SCROLL_UP, GDK_SCROLL_DOWN, GDK_SCROLL_LEFT, GDK_SCROLL_RIGHT
} GdkScrollDirection;
typedef struct _GdkEventScroll {
    GdkEventType type;
    GdkWindow *window;
    gint8 send_event;
    guint32 time;
    gdouble x;
    gdouble y;
    guint state;
    GdkScrollDirection direction;
    GdkDevice *device;
    gdouble x_root;
    gdouble y_root;
} GdkEventScroll;
typedef struct _GdkEventKey {
    GdkEventType type;
    GdkWindow *window;
    gint8 send_event;
    guint32 time;
    guint state;
    guint keyval;
    gint length;
    gchar *string;
    guint16 hardware_keycode;
    guint8 group;
} GdkEventKey;
typedef enum {
    GDK_CROSSING_NORMAL, GDK_CROSSING_GRAB, GDK_CROSSING_UNGRAB
} GdkCrossingMode;
typedef enum {
    GDK_NOTIFY_ANCESTOR, GDK_NOTIFY_VIRTUAL, GDK_NOTIFY_INFERIOR,
	GDK_NOTIFY_NONLINEAR, GDK_NOTIFY_NONLINEAR_VIRTUAL,
	GDK_NOTIFY_UNKNOWN
} GdkNotifyType;
typedef struct _GdkEventCrossing {
    GdkEventType type;
    GdkWindow *window;
    gint8 send_event;
    GdkWindow *subwindow;
    guint32 time;
    gdouble x;
    gdouble y;
    gdouble x_root;
    gdouble y_root;
    GdkCrossingMode mode;
    GdkNotifyType detail;
    gboolean focus;
    guint state;
} GdkEventCrossing;
typedef struct _GdkEventFocus {
    GdkEventType type;
    GdkWindow *window;
    gint8 send_event;
    gint16 in;
} GdkEventFocus;
typedef struct _GdkEventConfigure {
    GdkEventType type;
    GdkWindow *window;
    gint8 send_event;
    gint x;
    gint y;
    gint width;
    gint height;
} GdkEventConfigure;
typedef struct _GdkEventProperty {
    GdkEventType type;
    GdkWindow *window;
    gint8 send_event;
    GdkAtom atom;
    guint32 time;
    guint state;
} GdkEventProperty;
typedef guint32 GdkNativeWindow;
typedef struct _GdkEventSelection {
    GdkEventType type;
    GdkWindow *window;
    gint8 send_event;
    GdkAtom selection;
    GdkAtom target;
    GdkAtom property;
    guint32 time;
    GdkNativeWindow requestor;
} GdkEventSelection;
typedef enum {
    GDK_OWNER_CHANGE_NEW_OWNER, GDK_OWNER_CHANGE_DESTROY,
	GDK_OWNER_CHANGE_CLOSE
} GdkOwnerChange;
typedef struct _GdkEventOwnerChange {
    GdkEventType type;
    GdkWindow *window;
    gint8 send_event;
    GdkNativeWindow owner;
    GdkOwnerChange reason;
    GdkAtom selection;
    guint32 time;
    guint32 selection_time;
} GdkEventOwnerChange;
typedef struct _GdkEventProximity {
    GdkEventType type;
    GdkWindow *window;
    gint8 send_event;
    guint32 time;
    GdkDevice *device;
} GdkEventProximity;
typedef struct _GdkEventClient {
    GdkEventType type;
    GdkWindow *window;
    gint8 send_event;
    GdkAtom message_type;
    gushort data_format;
    union {
	char b[];
	short int s[];
	long int l[];
    } data;
} GdkEventClient;
typedef enum {
    GDK_DRAG_PROTO_MOTIF, GDK_DRAG_PROTO_XDND, GDK_DRAG_PROTO_ROOTWIN,
	GDK_DRAG_PROTO_NONE, GDK_DRAG_PROTO_WIN32_DROPFILES,
	GDK_DRAG_PROTO_OLE2, GDK_DRAG_PROTO_LOCAL
} GdkDragProtocol;
typedef enum {
    GDK_ACTION_DEFAULT, GDK_ACTION_COPY, GDK_ACTION_MOVE, GDK_ACTION_LINK,
	GDK_ACTION_PRIVATE, GDK_ACTION_ASK
} GdkDragAction;
typedef struct _GdkDragContext {
    GObject parent_instance;
    GdkDragProtocol protocol;
    gboolean is_source;
    GdkWindow *source_window;
    GdkWindow *dest_window;
    GList *targets;
    GdkDragAction actions;
    GdkDragAction suggested_action;
    GdkDragAction action;
    guint32 start_time;
    gpointer windowing_data;
} GdkDragContext;
typedef short int gshort;
typedef struct _GdkEventDND {
    GdkEventType type;
    GdkWindow *window;
    gint8 send_event;
    GdkDragContext *context;
    guint32 time;
    gshort x_root;
    gshort y_root;
} GdkEventDND;
typedef enum {
    GDK_WINDOW_STATE_WITHDRAWN, GDK_WINDOW_STATE_ICONIFIED,
	GDK_WINDOW_STATE_MAXIMIZED, GDK_WINDOW_STATE_STICKY,
	GDK_WINDOW_STATE_FULLSCREEN, GDK_WINDOW_STATE_ABOVE,
	GDK_WINDOW_STATE_BELOW
} GdkWindowState;
typedef struct _GdkEventWindowState {
    GdkEventType type;
    GdkWindow *window;
    gint8 send_event;
    GdkWindowState changed_mask;
    GdkWindowState new_window_state;
} GdkEventWindowState;
typedef enum {
    GDK_SETTING_ACTION_NEW, GDK_SETTING_ACTION_CHANGED,
	GDK_SETTING_ACTION_DELETED
} GdkSettingAction;
typedef struct _GdkEventSetting {
    GdkEventType type;
    GdkWindow *window;
    gint8 send_event;
    GdkSettingAction action;
    char *name;
} GdkEventSetting;
typedef union _GdkEvent {
    GdkEventType type;
    GdkEventAny any;
    GdkEventExpose expose;
    GdkEventNoExpose no_expose;
    GdkEventVisibility visibility;
    GdkEventMotion motion;
    GdkEventButton button;
    GdkEventScroll scroll;
    GdkEventKey key;
    GdkEventCrossing crossing;
    GdkEventFocus focus_change;
    GdkEventConfigure configure;
    GdkEventProperty property;
    GdkEventSelection selection;
    GdkEventOwnerChange owner_change;
    GdkEventProximity proximity;
    GdkEventClient client;
    GdkEventDND dnd;
    GdkEventWindowState window_state;
    GdkEventSetting setting;
} GdkEvent;
typedef GdkFilterReturn(*fptr_gdk_29) (GdkXEvent *, GdkEvent *, gpointer);
typedef struct _GdkDrawable {
    GObject parent_instance;
} GdkPixmap;
typedef struct _GdkDrawable {
    GObject parent_instance;
} GdkDrawable;
typedef struct _GdkDrawable {
    GObject parent_instance;
} GdkBitmap;
typedef struct _GdkDisplayManager GdkDisplayManager;
typedef enum {
    GDK_CLIP_BY_CHILDREN, GDK_INCLUDE_INFERIORS
} GdkSubwindowMode;
typedef struct _GdkPangoRendererPrivate GdkPangoRendererPrivate;
typedef struct _GdkPangoRenderer {
    PangoRenderer parent_instance;
    GdkPangoRendererPrivate *priv;
} GdkPangoRenderer;
typedef enum {
    GDK_IMAGE_NORMAL, GDK_IMAGE_SHARED, GDK_IMAGE_FASTEST
} GdkImageType;
typedef struct _GdkImage {
    GObject parent_instance;
    GdkImageType type;
    GdkVisual *visual;
    GdkByteOrder byte_order;
    gint width;
    gint height;
    guint16 depth;
    guint16 bpp;
    guint16 bpl;
    guint16 bits_per_pixel;
    gpointer mem;
    GdkColormap *colormap;
    gpointer windowing_data;
} GdkImage;
typedef struct _GdkPoint {
    gint x;
    gint y;
} GdkPoint;
typedef struct _GdkKeymap {
    GObject parent_instance;
    GdkDisplay *display;
} GdkKeymap;
typedef enum {
    GDK_DECOR_ALL, GDK_DECOR_BORDER, GDK_DECOR_RESIZEH, GDK_DECOR_TITLE,
	GDK_DECOR_MENU, GDK_DECOR_MINIMIZE, GDK_DECOR_MAXIMIZE
} GdkWMDecoration;
typedef struct _GdkRgbCmap {
    guint32 colors[];
    gint n_colors;
    GSList *info_list;
} GdkRgbCmap;
typedef enum {
    GDK_FONT_FONT, GDK_FONT_FONTSET
} GdkFontType;
typedef struct _GdkFont {
    GdkFontType type;
    gint ascent;
    gint descent;
} GdkFont;
typedef enum {
    GDK_COPY, GDK_INVERT, GDK_XOR, GDK_CLEAR, GDK_AND, GDK_AND_REVERSE,
	GDK_AND_INVERT, GDK_NOOP, GDK_OR, GDK_EQUIV, GDK_OR_REVERSE,
	GDK_COPY_INVERT, GDK_OR_INVERT, GDK_NAND, GDK_NOR, GDK_SET
} GdkFunction;
typedef enum {
    GDK_SOLID, GDK_TILED, GDK_STIPPLED, GDK_OPAQUE_STIPPLED
} GdkFill;
typedef enum {
    GDK_LINE_SOLID, GDK_LINE_ON_OFF_DASH, GDK_LINE_DOUBLE_DASH
} GdkLineStyle;
typedef enum {
    GDK_CAP_NOT_LAST, GDK_CAP_BUTT, GDK_CAP_ROUND, GDK_CAP_PROJECTING
} GdkCapStyle;
typedef enum {
    GDK_JOIN_MITER, GDK_JOIN_ROUND, GDK_JOIN_BEVEL
} GdkJoinStyle;
typedef struct _GdkGCValues {
    GdkColor foreground;
    GdkColor background;
    GdkFont *font;
    GdkFunction function;
    GdkFill fill;
    GdkPixmap *tile;
    GdkPixmap *stipple;
    GdkPixmap *clip_mask;
    GdkSubwindowMode subwindow_mode;
    gint ts_x_origin;
    gint ts_y_origin;
    gint clip_x_origin;
    gint clip_y_origin;
    gint graphics_exposures;
    gint line_width;
    GdkLineStyle line_style;
    GdkCapStyle cap_style;
    GdkJoinStyle join_style;
} GdkGCValues;
typedef enum {
    GDK_GC_FOREGROUND, GDK_GC_BACKGROUND, GDK_GC_FONT, GDK_GC_FUNCTION,
	GDK_GC_FILL, GDK_GC_TILE, GDK_GC_STIPPLE, GDK_GC_CLIP_MASK,
	GDK_GC_SUBWINDOW, GDK_GC_TS_X_ORIGIN, GDK_GC_TS_Y_ORIGIN,
	GDK_GC_CLIP_X_ORIGIN, GDK_GC_CLIP_Y_ORIGIN, GDK_GC_EXPOSURES,
	GDK_GC_LINE_WIDTH, GDK_GC_LINE_STYLE, GDK_GC_CAP_STYLE,
	GDK_GC_JOIN_STYLE
} GdkGCValuesMask;
typedef enum {
    GDK_WINDOW_ROOT, GDK_WINDOW_TOPLEVEL, GDK_WINDOW_CHILD,
	GDK_WINDOW_DIALOG, GDK_WINDOW_TEMP, GDK_WINDOW_FOREIGN
} GdkWindowType;
typedef struct _GdkKeymapKey {
    guint keycode;
    gint group;
    gint level;
} GdkKeymapKey;
typedef enum {
    GDK_GRAVITY_NORTH_WEST, GDK_GRAVITY_NORTH, GDK_GRAVITY_NORTH_EAST,
	GDK_GRAVITY_WEST, GDK_GRAVITY_CENTER, GDK_GRAVITY_EAST,
	GDK_GRAVITY_SOUTH_WEST, GDK_GRAVITY_SOUTH, GDK_GRAVITY_SOUTH_EAST,
	GDK_GRAVITY_STATIC
} GdkGravity;
typedef struct _GdkGeometry {
    gint min_width;
    gint min_height;
    gint max_width;
    gint max_height;
    gint base_width;
    gint base_height;
    gint width_inc;
    gint height_inc;
    gdouble min_aspect;
    gdouble max_aspect;
    GdkGravity win_gravity;
} GdkGeometry;
typedef enum {
    GDK_HINT_POS, GDK_HINT_MIN_SIZE, GDK_HINT_MAX_SIZE, GDK_HINT_BASE_SIZE,
	GDK_HINT_ASPECT, GDK_HINT_RESIZE_INC, GDK_HINT_WIN_GRAVITY,
	GDK_HINT_USER_POS, GDK_HINT_USER_SIZE
} GdkWindowHints;
typedef enum {
    GDK_GRAB_SUCCESS, GDK_GRAB_ALREADY_GRABBED, GDK_GRAB_INVALID_TIME,
	GDK_GRAB_NOT_VIEWABLE, GDK_GRAB_FROZEN
} GdkGrabStatus;
typedef enum {
    GDK_RGB_DITHER_NONE, GDK_RGB_DITHER_NORMAL, GDK_RGB_DITHER_MAX
} GdkRgbDither;
typedef enum {
    GDK_OVERLAP_RECTANGLE_IN, GDK_OVERLAP_RECTANGLE_OUT,
	GDK_OVERLAP_RECTANGLE_PART
} GdkOverlapType;
typedef struct _GdkSegment {
    gint x1;
    gint y1;
    gint x2;
    gint y2;
} GdkSegment;
typedef enum {
    GDK_PROP_MODE_REPLACE, GDK_PROP_MODE_PREPEND, GDK_PROP_MODE_APPEND
} GdkPropMode;
typedef struct _GdkTimeCoord {
    guint32 time;
    gdouble axes[];
} GdkTimeCoord;
typedef struct _GdkPointerHooks {
    GdkWindow *(*fptr_gdk_253) (GdkWindow *, gint *, gint *,
				GdkModifierType *);
    GdkWindow *(*fptr_gdk_70) (GdkScreen *, gint *, gint *);
} GdkPointerHooks;
typedef enum {
    GDK_EXTENSION_EVENTS_NONE, GDK_EXTENSION_EVENTS_ALL,
	GDK_EXTENSION_EVENTS_CURSOR
} GdkExtensionMode;
typedef enum {
    GDK_EXPOSURE_MASK, GDK_POINTER_MOTION_MASK,
	GDK_POINTER_MOTION_HINT_MASK, GDK_BUTTON_MOTION_MASK,
	GDK_BUTTON1_MOTION_MASK, GDK_BUTTON2_MOTION_MASK,
	GDK_BUTTON3_MOTION_MASK, GDK_BUTTON_PRESS_MASK,
	GDK_BUTTON_RELEASE_MASK, GDK_KEY_PRESS_MASK, GDK_KEY_RELEASE_MASK,
	GDK_ENTER_NOTIFY_MASK, GDK_LEAVE_NOTIFY_MASK,
	GDK_FOCUS_CHANGE_MASK, GDK_STRUCTURE_MASK,
	GDK_PROPERTY_CHANGE_MASK, GDK_VISIBILITY_NOTIFY_MASK,
	GDK_PROXIMITY_IN_MASK, GDK_PROXIMITY_OUT_MASK,
	GDK_SUBSTRUCTURE_MASK, GDK_SCROLL_MASK, GDK_ALL_EVENTS_MASK
} GdkEventMask;
typedef enum {
    GDK_WINDOW_EDGE_NORTH_WEST, GDK_WINDOW_EDGE_NORTH,
	GDK_WINDOW_EDGE_NORTH_EAST, GDK_WINDOW_EDGE_WEST,
	GDK_WINDOW_EDGE_EAST, GDK_WINDOW_EDGE_SOUTH_WEST,
	GDK_WINDOW_EDGE_SOUTH, GDK_WINDOW_EDGE_SOUTH_EAST
} GdkWindowEdge;
typedef enum {
    GDK_WINDOW_TYPE_HINT_NORMAL, GDK_WINDOW_TYPE_HINT_DIALOG,
	GDK_WINDOW_TYPE_HINT_MENU, GDK_WINDOW_TYPE_HINT_TOOLBAR,
	GDK_WINDOW_TYPE_HINT_SPLASHSCREEN, GDK_WINDOW_TYPE_HINT_UTILITY,
	GDK_WINDOW_TYPE_HINT_DOCK, GDK_WINDOW_TYPE_HINT_DESKTOP
} GdkWindowTypeHint;
typedef enum {
    GDK_FUNC_ALL, GDK_FUNC_RESIZE, GDK_FUNC_MOVE, GDK_FUNC_MINIMIZE,
	GDK_FUNC_MAXIMIZE, GDK_FUNC_CLOSE
} GdkWMFunction;
typedef struct _GdkSpan {
    gint x;
    gint y;
    gint width;
} GdkSpan;
typedef void (*fptr_gdk_27) (GdkSpan *, gpointer);
typedef void (*fptr_gdk_331) (GdkEvent *, gpointer);
typedef enum {
    GDK_INPUT_OUTPUT, GDK_INPUT_ONLY
} GdkWindowClass;
typedef struct _GdkWindowAttr {
    gchar *title;
    gint event_mask;
    gint x;
    gint y;
    gint width;
    gint height;
    GdkWindowClass wclass;
    GdkVisual *visual;
    GdkColormap *colormap;
    GdkWindowType window_type;
    GdkCursor *cursor;
    gchar *wmclass_name;
    gchar *wmclass_class;
    gboolean override_redirect;
} GdkWindowAttr;
typedef struct _GdkTrapezoid {
    double y1;
    double x11;
    double x21;
    double y2;
    double x12;
    double x22;
} GdkTrapezoid;
typedef enum {
    GDK_EVEN_ODD_RULE, GDK_WINDING_RULE
} GdkFillRule;
typedef struct {
    int minor_axis;
    int d;
    int m;
    int m1;
    int incr1;
    int incr2;
} BRESINFO;
typedef struct _EdgeTableEntry {
    int ymax;
    BRESINFO bres;
    struct _EdgeTableEntry *next;
    struct _EdgeTableEntry *back;
    struct _EdgeTableEntry *nextWETE;
    int ClockWise;
} EdgeTableEntry;
typedef struct _ScanLineList {
    int scanline;
    EdgeTableEntry *edgelist;
    struct _ScanLineList *next;
} ScanLineList;
typedef struct {
    int ymax;
    int ymin;
    ScanLineList scanlines;
} EdgeTable;
typedef struct _GdkVisualPrivate GdkVisualPrivate;
typedef struct {
    short int red;
    short int redMask;
    short int green;
    short int greenMask;
    short int blue;
    short int blueMask;
    short int alpha;
    short int alphaMask;
} XRenderDirectFormat;
typedef struct _OwnerInfo {
    GdkAtom selection;
    GdkWindow *owner;
    gulong serial;
} OwnerInfo;
typedef struct _GdkWindowObject {
    GdkDrawable parent_instance;
    GdkDrawable *impl;
    GdkWindowObject *parent;
    gpointer user_data;
    gint x;
    gint y;
    gint extension_events;
    GList *filters;
    GList *children;
    GdkColor bg_color;
    GdkPixmap *bg_pixmap;
    GSList *paint_stack;
    GdkRegion *update_area;
    guint update_freeze_count;
    guint8 window_type;
    guint8 depth;
    guint8 resize_count;
    GdkWindowState state;
    guint guffaw_gravity:1;
    guint input_only:1;
    guint modal_hint:1;
    guint destroyed:2;
    guint accept_focus:1;
    guint focus_on_map:1;
    GdkEventMask event_mask;
} GdkWindowObject;
typedef long unsigned int PictFormat;
typedef enum {
    GDK_UNKNOWN, GDK_NO, GDK_YES
} GdkTristate;
typedef int XFixed;
typedef struct _XPointFixed {
    XFixed x;
    XFixed y;
} XPointFixed;
typedef struct _GdkDrawableImplX11 {
    GdkDrawable parent_instance;
    GdkDrawable *wrapper;
    GdkColormap *colormap;
    Window xid;
    GdkScreen *screen;
    XftDraw *xft_draw;
} GdkDrawableImplX11;
typedef struct _GdkScreenClass {
    GObjectClass parent_class;
    void (*fptr_gdk_515) (GdkScreen *);
} GdkScreenClass;
typedef struct _XkbKeyAliasRec {
    char real[];
    char alias[];
} *XkbKeyAliasPtr;
typedef struct _GdkRgbInfo {
    GdkVisual *visual;
    GdkColormap *cmap;
    guint nred_shades;
    guint ngreen_shades;
    guint nblue_shades;
    guint ngray_shades;
    guint nreserved;
    guint bpp;
    gint cmap_alloced;
    gdouble gamma;
    guchar *stage_buf;
    GdkRgbCmap *gray_cmap;
    gboolean dith_default;
    gboolean bitmap;
    GdkGC *own_gc;
    GdkRgbConvFunc conv;
    GdkRgbConvFunc conv_d;
    GdkRgbConvFunc conv_32;
    GdkRgbConvFunc conv_32_d;
    GdkRgbConvFunc conv_gray;
    GdkRgbConvFunc conv_gray_d;
    GdkRgbConvFunc conv_indexed;
    GdkRgbConvFunc conv_indexed_d;
    guchar *colorcube;
    guchar *colorcube_d;
    GSList *cmap_info_list;
} GdkRgbInfo;
typedef void (*fptr_gdk_540) (GdkRgbInfo *, GdkImage *, gint, gint, gint,
			      gint, guchar *, int, gint, gint,
			      GdkRgbCmap *);
typedef struct _GdkRgbCmapInfo {
    GdkRgbInfo *image_info;
    GdkRgbCmap *cmap;
    guchar lut[];
} GdkRgbCmapInfo;
typedef struct {
    int screen_number;
    short int x_org;
    short int y_org;
    short int width;
    short int height;
} XineramaScreenInfo;
typedef struct _GdkGCClass {
    GObjectClass parent_class;
    void (*fptr_gdk_691) (GdkGC *, GdkGCValues *);
    void (*fptr_gdk_343) (GdkGC *, GdkGCValues *, GdkGCValuesMask);
    void (*fptr_gdk_403) (GdkGC *, gint, gint8 *, gint);
    void (*func) (void);
    void (*func) (void);
    void (*func) (void);
    void (*func) (void);
} GdkGCClass;
typedef struct _GdkGCX11Class {
    GdkGCClass parent_class;
} GdkGCX11Class;
typedef guint32 GdkWChar;
typedef unsigned char CARD8;
typedef CARD8 BYTE;
typedef short unsigned int CARD16;
typedef long unsigned int CARD32;
typedef struct {
    BYTE type;
    BYTE pad1;
    CARD16 sequenceNumber;
    CARD32 length;
    CARD16 nProperties;
    CARD16 pad2;
    CARD32 pad3;
    CARD32 pad4;
    CARD32 pad5;
    CARD32 pad6;
    CARD32 pad7;
} xListPropertiesReply;
typedef enum {
    XSETTINGS_TYPE_INT, XSETTINGS_TYPE_STRING, XSETTINGS_TYPE_COLOR
} XSettingsType;
typedef struct _GdkXPositionInfo {
    gint x;
    gint y;
    gint width;
    gint height;
    gint x_offset;
    gint y_offset;
    guint big:1;
    guint mapped:1;
    guint no_bg:1;
    GdkRectangle clip_rect;
} GdkXPositionInfo;
typedef struct _GdkToplevelX11 {
    guint has_focus_window:1;
    guint has_focus:1;
    guint has_pointer:1;
    guint has_pointer_focus:1;
    guint skip_taskbar_hint:1;
    guint skip_pager_hint:1;
    guint on_all_desktops:1;
    guint have_sticky:1;
    guint have_maxvert:1;
    guint have_maxhorz:1;
    guint have_fullscreen:1;
    guint is_leader:1;
    gulong map_serial;
    GdkPixmap *icon_pixmap;
    GdkPixmap *icon_mask;
    GdkPixmap *icon_window;
    GdkWindow *group_leader;
    gulong user_time;
    Window focus_window;
    XID update_counter;
    XSyncValue pending_counter_value;
    XSyncValue current_counter_value;
} GdkToplevelX11;
typedef struct _GdkWindowImplX11 {
    GdkDrawableImplX11 parent_instance;
    gint width;
    gint height;
    GdkXPositionInfo position_info;
    GdkToplevelX11 *toplevel;
    gint8 toplevel_window_type;
    guint override_redirect:1;
    guint use_synchronized_configure:1;
} GdkWindowImplX11;
typedef struct _GdkDisplayClass {
    GObjectClass parent_class;
    const gchar *(*fptr_gdk_708) (GdkDisplay *);
     gint(*fptr_gdk_382) (GdkDisplay *);
    GdkScreen *(*fptr_gdk_672) (GdkDisplay *, gint);
    GdkScreen *(*fptr_gdk_498) (GdkDisplay *);
    void (*fptr_gdk_509) (GdkDisplay *, gboolean);
} GdkDisplayClass;
typedef struct _GdkDisplayX11Class {
    GdkDisplayClass parent_class;
} GdkDisplayX11Class;
typedef struct {
    BYTE type;
    BYTE pad1;
    CARD16 sequenceNumber;
    CARD32 length;
    CARD32 pixel;
    CARD16 exactRed;
    CARD16 exactGreen;
    CARD16 exactBlue;
    CARD16 screenRed;
    CARD16 screenGreen;
    CARD16 screenBlue;
    CARD32 pad2;
    CARD32 pad3;
} xAllocNamedColorReply;
typedef struct _XkbMods {
    unsigned char mask;
    unsigned char real_mods;
    short unsigned int vmods;
} *XkbModsPtr;
typedef struct _GdkFontPrivate {
    GdkFont font;
    guint ref_count;
} GdkFontPrivate;
typedef GdkSegment GdkRegionBox;
typedef void (*fptr_gdk_623) (GdkRegion *, GdkRegionBox *, GdkRegionBox *,
			      gint, gint);
typedef struct _XkbMods {
    unsigned char mask;
    unsigned char real_mods;
    short unsigned int vmods;
} XkbModsRec;
typedef struct _XkbIndicatorMapRec {
    unsigned char flags;
    unsigned char which_groups;
    unsigned char groups;
    unsigned char which_mods;
    XkbModsRec mods;
    unsigned int ctrls;
} XkbIndicatorMapRec;
typedef struct _XkbIndicatorRec {
    long unsigned int phys_indicators;
    XkbIndicatorMapRec maps[];
} *XkbIndicatorPtr;
typedef struct _XkbKeyNameRec {
    char name[];
} *XkbKeyNamePtr;
typedef struct _XSettingsColor {
    short unsigned int red;
    short unsigned int green;
    short unsigned int blue;
    short unsigned int alpha;
} XSettingsColor;
typedef struct _XSettingsSetting {
    char *name;
    XSettingsType type;
    union {
	int v_int;
	char *v_string;
	XSettingsColor v_color;
    } data;
    long unsigned int last_change_serial;
} XSettingsSetting;
typedef struct _XRenderPictureAttributes {
    int repeat;
    Picture alpha_map;
    int alpha_x_origin;
    int alpha_y_origin;
    int clip_x_origin;
    int clip_y_origin;
    Pixmap clip_mask;
    int graphics_exposures;
    int subwindow_mode;
    int poly_edge;
    int poly_mode;
    Atom dither;
    int component_alpha;
} XRenderPictureAttributes;
typedef unsigned int XcursorUInt;
typedef XcursorUInt XcursorPixel;
typedef struct _GdkX11RendererClass {
    PangoXftRendererClass parent_class;
} GdkX11RendererClass;
typedef struct {
    PictFormat id;
    int type;
    int depth;
    XRenderDirectFormat direct;
    Colormap colormap;
} XRenderPictFormat;
typedef struct {
    short unsigned int red;
    short unsigned int green;
    short unsigned int blue;
    short unsigned int alpha;
} XRenderColor;
typedef enum {
    GDK_COLOR_WRITEABLE
} GdkColorInfoFlags;
typedef struct _GdkColorInfo {
    GdkColorInfoFlags flags;
    guint ref_count;
} GdkColorInfo;
typedef struct _GdkClientFilter {
    GdkAtom type;
    GdkFilterFunc function;
    gpointer data;
} GdkClientFilter;
typedef struct {
    BYTE type;
    BYTE pad1;
    CARD16 sequenceNumber;
    CARD32 length;
    CARD16 nPixels;
    CARD16 nMasks;
    CARD32 pad3;
    CARD32 pad4;
    CARD32 pad5;
    CARD32 pad6;
    CARD32 pad7;
} xAllocColorCellsReply;
typedef struct _XkbGroupAction {
    unsigned char type;
    unsigned char flags;
    char group_XXX;
} XkbGroupAction;
typedef struct {
    BYTE type;
    BYTE pad1;
    CARD16 sequenceNumber;
    CARD32 length;
    CARD16 nPaths;
    CARD16 pad2;
    CARD32 pad3;
    CARD32 pad4;
    CARD32 pad5;
    CARD32 pad6;
    CARD32 pad7;
} xGetFontPathReply;
typedef struct _GdkFontPrivateX {
    GdkFontPrivate base;
    gpointer xfont;
    GdkDisplay *display;
    GSList *names;
} GdkFontPrivateX;
typedef struct _XSettingsClient XSettingsClient;
typedef struct _GdkPixmapObject {
    GdkDrawable parent_instance;
    GdkDrawable *impl;
    gint depth;
} GdkPixmapObject;
typedef int (*fptr_gdk_660) (XModifierKeymap *);
typedef struct {
    CARD8 reqType;
    CARD8 revertTo;
    CARD16 length;
    CARD32 focus;
    CARD32 time;
} xSetInputFocusReq;
typedef struct _XkbAnyAction {
    unsigned char type;
    unsigned char data[];
} XkbAnyAction;
typedef struct _XkbSymInterpretRec {
    KeySym sym;
    unsigned char flags;
    unsigned char match;
    unsigned char mods;
    unsigned char virtual_mod;
    XkbAnyAction act;
} *XkbSymInterpretPtr;
typedef struct _XkbMessageAction {
    unsigned char type;
    unsigned char flags;
    unsigned char message[];
} XkbMessageAction;
typedef struct _XkbBehavior {
    unsigned char type;
    unsigned char data;
} XkbBehavior;
typedef enum {
    GDK_INPUT_READ, GDK_INPUT_WRITE, GDK_INPUT_EXCEPTION
} GdkInputCondition;
typedef void (*fptr_gdk_604) (gpointer, gint, GdkInputCondition);
typedef struct _GdkDisplayX11 {
    GdkDisplay parent_instance;
    Display *xdisplay;
    GdkScreen *default_screen;
    GdkScreen **screens;
    GSource *event_source;
    gint grab_count;
    gint xkb_event_type;
    gboolean use_xkb;
    gboolean have_xkb_autorepeat;
    GdkKeymap *keymap;
    guint keymap_serial;
    gboolean use_xshm;
    gboolean have_shm_pixmaps;
    GdkTristate have_render;
    GdkTristate have_render_with_trapezoids;
    gboolean have_xfixes;
    gint xfixes_event_base;
    GdkWindowObject *pointer_xgrab_window;
    gulong pointer_xgrab_serial;
    gboolean pointer_xgrab_owner_events;
    GdkWindowObject *keyboard_xgrab_window;
    gulong keyboard_xgrab_serial;
    gboolean keyboard_xgrab_owner_events;
    GdkDragContext *current_dest_drag;
    Window motif_drag_window;
    GdkWindow *motif_drag_gdk_window;
    GList **motif_target_lists;
    gint motif_n_target_lists;
    GHashTable *atom_from_virtual;
    GHashTable *atom_to_virtual;
    Window leader_window;
    GdkWindow *leader_gdk_window;
    gboolean leader_window_title_set;
    GList *client_filters;
    GSList *event_types;
    GHashTable *xid_ht;
    GQueue *translate_queue;
    GList *input_devices;
    GList *input_windows;
    gint input_ignore_core;
    gchar *input_gxid_host;
    gint input_gxid_port;
    gchar *startup_notification_id;
    gulong user_time;
    guint base_dnd_atoms_precached:1;
    guint xdnd_atoms_precached:1;
    guint motif_atoms_precached:1;
    guint use_sync:1;
    XRenderPictFormat *mask_format;
} GdkDisplayX11;
typedef struct _XkbPtrAction {
    unsigned char type;
    unsigned char flags;
    unsigned char high_XXX;
    unsigned char low_XXX;
    unsigned char high_YYY;
    unsigned char low_YYY;
} XkbPtrAction;
typedef struct _XLineFixed {
    XPointFixed p1;
    XPointFixed p2;
} XLineFixed;
typedef struct _MotifDragReceiverInfo {
    guint8 byte_order;
    guint8 protocol_version;
    guint8 protocol_style;
    guint8 pad;
    guint32 proxy_window;
    guint16 num_drop_sites;
    guint16 padding;
    guint32 total_size;
} MotifDragReceiverInfo;
typedef struct _GdkChildInfoX11 {
    Window window;
    gint x;
    gint y;
    gint width;
    gint height;
    guint is_mapped:1;
    guint has_wm_state:1;
    guint window_class:2;
} GdkChildInfoX11;
typedef struct _GdkDrawableClass {
    GObjectClass parent_class;
    GdkGC *(*fptr_gdk_576) (GdkDrawable *, GdkGCValues *, GdkGCValuesMask);
    void (*fptr_gdk_326) (GdkDrawable *, GdkGC *, gboolean, gint, gint,
			  gint, gint);
    void (*fptr_gdk_437) (GdkDrawable *, GdkGC *, gboolean, gint, gint,
			  gint, gint, gint, gint);
    void (*fptr_gdk_33) (GdkDrawable *, GdkGC *, gboolean, GdkPoint *,
			 gint);
    void (*fptr_gdk_23) (GdkDrawable *, GdkFont *, GdkGC *, gint, gint,
			 const gchar *, gint);
    void (*fptr_gdk_14) (GdkDrawable *, GdkFont *, GdkGC *, gint, gint,
			 const GdkWChar *, gint);
    void (*fptr_gdk_763) (GdkDrawable *, GdkGC *, GdkDrawable *, gint,
			  gint, gint, gint, gint, gint);
    void (*fptr_gdk_260) (GdkDrawable *, GdkGC *, GdkPoint *, gint);
    void (*fptr_gdk_336) (GdkDrawable *, GdkGC *, GdkSegment *, gint);
    void (*fptr_gdk_260) (GdkDrawable *, GdkGC *, GdkPoint *, gint);
    void (*fptr_gdk_554) (GdkDrawable *, GdkGC *, PangoFont *, gint, gint,
			  PangoGlyphString *);
    void (*fptr_gdk_338) (GdkDrawable *, GdkGC *, GdkImage *, gint, gint,
			  gint, gint, gint, gint);
     gint(*fptr_gdk_646) (GdkDrawable *);
    void (*fptr_gdk_746) (GdkDrawable *, gint *, gint *);
    void (*fptr_gdk_67) (GdkDrawable *, GdkColormap *);
    GdkColormap *(*fptr_gdk_186) (GdkDrawable *);
    GdkVisual *(*fptr_gdk_378) (GdkDrawable *);
    GdkScreen *(*fptr_gdk_127) (GdkDrawable *);
    GdkImage *(*fptr_gdk_396) (GdkDrawable *, gint, gint, gint, gint);
    GdkRegion *(*fptr_gdk_335) (GdkDrawable *);
    GdkRegion *(*fptr_gdk_335) (GdkDrawable *);
    GdkDrawable *(*fptr_gdk_695) (GdkDrawable *, gint, gint, gint, gint,
				  gint *, gint *);
    void (*fptr_gdk_318) (GdkDrawable *, GdkGC *, GdkPixbuf *, gint, gint,
			  gint, gint, gint, gint, GdkRgbDither, gint,
			  gint);
    GdkImage *(*fptr_gdk_700) (GdkDrawable *, GdkImage *, gint, gint, gint,
			       gint, gint, gint);
    void (*fptr_gdk_766) (GdkDrawable *, GdkGC *, PangoMatrix *,
			  PangoFont *, gint, gint, PangoGlyphString *);
    void (*fptr_gdk_261) (GdkDrawable *, GdkGC *, GdkTrapezoid *, gint);
    void (*func) (void);
    void (*func) (void);
    void (*func) (void);
    void (*func) (void);
    void (*func) (void);
    void (*func) (void);
    void (*func) (void);
    void (*func) (void);
    void (*func) (void);
    void (*func) (void);
    void (*func) (void);
    void (*func) (void);
    void (*func) (void);
} GdkDrawableClass;
typedef struct _XkbModAction {
    unsigned char type;
    unsigned char flags;
    unsigned char mask;
    unsigned char real_mods;
    unsigned char vmods1;
    unsigned char vmods2;
} XkbModAction;
typedef struct _XkbISOAction {
    unsigned char type;
    unsigned char flags;
    unsigned char mask;
    unsigned char real_mods;
    char group_XXX;
    unsigned char affect;
    unsigned char vmods1;
    unsigned char vmods2;
} XkbISOAction;
typedef struct _XkbPtrBtnAction {
    unsigned char type;
    unsigned char flags;
    unsigned char count;
    unsigned char button;
} XkbPtrBtnAction;
typedef struct _XkbPtrDfltAction {
    unsigned char type;
    unsigned char flags;
    unsigned char affect;
    char valueXXX;
} XkbPtrDfltAction;
typedef struct _XkbSwitchScreenAction {
    unsigned char type;
    unsigned char flags;
    char screenXXX;
} XkbSwitchScreenAction;
typedef struct _XkbCtrlsAction {
    unsigned char type;
    unsigned char flags;
    unsigned char ctrls3;
    unsigned char ctrls2;
    unsigned char ctrls1;
    unsigned char ctrls0;
} XkbCtrlsAction;
typedef struct _XkbRedirectKeyAction {
    unsigned char type;
    unsigned char new_key;
    unsigned char mods_mask;
    unsigned char mods;
    unsigned char vmods_mask0;
    unsigned char vmods_mask1;
    unsigned char vmods0;
    unsigned char vmods1;
} XkbRedirectKeyAction;
typedef struct _XkbDeviceBtnAction {
    unsigned char type;
    unsigned char flags;
    unsigned char count;
    unsigned char button;
    unsigned char device;
} XkbDeviceBtnAction;
typedef struct _XkbDeviceValuatorAction {
    unsigned char type;
    unsigned char device;
    unsigned char v1_what;
    unsigned char v1_ndx;
    unsigned char v1_value;
    unsigned char v2_what;
    unsigned char v2_ndx;
    unsigned char v2_value;
} XkbDeviceValuatorAction;
typedef union _XkbAction {
    XkbAnyAction any;
    XkbModAction mods;
    XkbGroupAction group;
    XkbISOAction iso;
    XkbPtrAction ptr;
    XkbPtrBtnAction btn;
    XkbPtrDfltAction dflt;
    XkbSwitchScreenAction screen;
    XkbCtrlsAction ctrls;
    XkbMessageAction msg;
    XkbRedirectKeyAction redirect;
    XkbDeviceBtnAction devbtn;
    XkbDeviceValuatorAction devval;
    unsigned char type;
} XkbAction;
typedef struct _XkbControls {
    unsigned char mk_dflt_btn;
    unsigned char num_groups;
    unsigned char groups_wrap;
    XkbModsRec internal;
    XkbModsRec ignore_lock;
    unsigned int enabled_ctrls;
    short unsigned int repeat_delay;
    short unsigned int repeat_interval;
    short unsigned int slow_keys_delay;
    short unsigned int debounce_delay;
    short unsigned int mk_delay;
    short unsigned int mk_interval;
    short unsigned int mk_time_to_max;
    short unsigned int mk_max_speed;
    short int mk_curve;
    short unsigned int ax_options;
    short unsigned int ax_timeout;
    short unsigned int axt_opts_mask;
    short unsigned int axt_opts_values;
    unsigned int axt_ctrls_mask;
    unsigned int axt_ctrls_values;
    unsigned char per_key_repeat[];
} *XkbControlsPtr;
extern GType gdk_device_get_type(void);
extern gint gdk_screen_height_mm(void);
extern GdkCursor *gdk_cursor_new_from_pixbuf(GdkDisplay *, GdkPixbuf *,
					     gint, gint);
extern GType gdk_fill_get_type(void);
extern void gdk_window_resize(GdkWindow *, gint, gint);
extern void gdk_display_add_client_message_filter(GdkDisplay *, GdkAtom,
						  GdkFilterFunc, gpointer);
extern gpointer gdk_xid_table_lookup_for_display(GdkDisplay *, XID);
extern GdkPixmap *gdk_pixmap_create_from_xpm_d(GdkDrawable *,
					       GdkBitmap * *,
					       const GdkColor *,
					       gchar * *);
extern gboolean gdk_display_supports_selection_notification(GdkDisplay *);
extern GSList *gdk_display_manager_list_displays(GdkDisplayManager *);
extern void gdk_gc_set_subwindow(GdkGC *, GdkSubwindowMode);
extern GdkVisual *gdk_rgb_get_visual(void);
extern void gdk_display_set_double_click_time(GdkDisplay *, guint);
extern void gdk_draw_layout_line(GdkDrawable *, GdkGC *, gint, gint,
				 PangoLayoutLine *);
extern gboolean gdk_init_check(int *, char ***);
extern guint gdk_keyval_from_name(const gchar *);
extern gboolean gdk_display_request_selection_notification(GdkDisplay *,
							   GdkAtom);
extern GdkAtom gdk_atom_intern(const gchar *, gboolean);
extern Display *gdk_x11_gc_get_xdisplay(GdkGC *);
extern void gdk_window_get_frame_extents(GdkWindow *, GdkRectangle *);
extern gboolean gdk_rectangle_intersect(GdkRectangle *, GdkRectangle *,
					GdkRectangle *);
extern GdkWindow *gdk_selection_owner_get_for_display(GdkDisplay *,
						      GdkAtom);
extern PangoRenderer *gdk_pango_renderer_get_default(GdkScreen *);
extern Screen *gdk_x11_screen_get_xscreen(GdkScreen *);
extern gchar *gdk_get_display(void);
extern void gdk_gc_set_dashes(GdkGC *, gint, gint8 *, gint);
extern void gdk_x11_window_set_user_time(GdkWindow *, guint32);
extern void gdk_pango_renderer_set_override_color(GdkPangoRenderer *,
						  PangoRenderPart,
						  const GdkColor *);
extern void gdk_window_iconify(GdkWindow *);
extern void gdk_display_set_double_click_distance(GdkDisplay *, guint);
extern GdkWindow *gdk_window_get_group(GdkWindow *);
extern GdkDevice *gdk_device_get_core_pointer(void);
extern void gdk_screen_get_monitor_geometry(GdkScreen *, gint,
					    GdkRectangle *);
extern void gdk_device_set_source(GdkDevice *, GdkInputSource);
extern GType gdk_input_mode_get_type(void);
extern gchar *gdk_screen_make_display_name(GdkScreen *);
extern void gdk_window_set_title(GdkWindow *, const gchar *);
extern void gdk_property_delete(GdkWindow *, GdkAtom);
extern gint gdk_colormap_alloc_colors(GdkColormap *, GdkColor *, gint,
				      gboolean, gboolean, gboolean *);
extern GdkAtom gdk_drag_get_selection(GdkDragContext *);
extern GdkScreen *gdk_screen_get_default(void);
extern void gdk_window_set_skip_pager_hint(GdkWindow *, gboolean);
extern GdkPixmap *gdk_pixmap_foreign_new(GdkNativeWindow);
extern GType gdk_window_hints_get_type(void);
extern void gdk_drag_drop(GdkDragContext *, guint32);
extern gboolean gdk_property_get(GdkWindow *, GdkAtom, GdkAtom, gulong,
				 gulong, gint, GdkAtom *, gint *, gint *,
				 guchar * *);
extern void gdk_window_set_transient_for(GdkWindow *, GdkWindow *);
extern GdkRegion *gdk_pango_layout_line_get_clip_region(PangoLayoutLine *,
							gint, gint, gint *,
							gint);
extern GdkVisual *gdk_screen_get_system_visual(GdkScreen *);
extern GdkDisplay
    *gdk_display_manager_get_default_display(GdkDisplayManager *);
extern GdkPixmap *gdk_pixmap_create_from_xpm(GdkDrawable *, GdkBitmap * *,
					     const GdkColor *,
					     const gchar *);
extern void gdk_event_set_screen(GdkEvent *, GdkScreen *);
extern GType gdk_owner_change_get_type(void);
extern void gdk_window_unstick(GdkWindow *);
extern GdkDisplayPointerHooks *gdk_display_set_pointer_hooks(GdkDisplay *,
							     const
							     GdkDisplayPointerHooks
							     *);
extern gboolean gdk_spawn_command_line_on_screen(GdkScreen *,
						 const gchar *,
						 GError * *);
extern GdkEvent *gdk_display_peek_event(GdkDisplay *);
extern GdkColormap *gdk_gc_get_colormap(GdkGC *);
extern void gdk_selection_send_notify(guint32, GdkAtom, GdkAtom, GdkAtom,
				      guint32);
extern GType gdk_filter_return_get_type(void);
extern void gdk_drop_reply(GdkDragContext *, gboolean, guint32);
extern void gdk_threads_enter(void);
extern GdkImage *gdk_drawable_get_image(GdkDrawable *, gint, gint, gint,
					gint);
extern void gdk_draw_polygon(GdkDrawable *, GdkGC *, gboolean, GdkPoint *,
			     gint);
extern GdkDisplay *gdk_display_open_default_libgtk_only(void);
extern GType gdk_function_get_type(void);
extern void gdk_display_close(GdkDisplay *);
extern gboolean gdk_keymap_translate_keyboard_state(GdkKeymap *, guint,
						    GdkModifierType, gint,
						    guint *, gint *,
						    gint *,
						    GdkModifierType *);
extern GdkVisual *gdk_visual_get_best_with_depth(gint);
extern guint32 gdk_x11_display_get_user_time_libgtk_only(GdkDisplay *);
extern gboolean gdk_display_supports_cursor_alpha(GdkDisplay *);
extern void gdk_window_set_decorations(GdkWindow *, GdkWMDecoration);
extern PangoContext *gdk_pango_context_get_for_screen(GdkScreen *);
extern void gdk_error_trap_push(void);
extern gboolean gdk_spawn_on_screen(GdkScreen *, const gchar *, gchar * *,
				    gchar * *, GSpawnFlags,
				    GSpawnChildSetupFunc, gpointer, gint *,
				    GError * *);
extern PangoAttribute *gdk_pango_attr_stipple_new(GdkBitmap *);
extern void gdk_window_lower(GdkWindow *);
extern GType gdk_event_type_get_type(void);
extern GType gdk_input_condition_get_type(void);
extern GdkWindow *gdk_window_get_toplevel(GdkWindow *);
extern void gdk_window_invalidate_maybe_recurse(GdkWindow *, GdkRegion *,
						gboolean(*fptr_gdk_65)
						(GdkWindow *, gpointer)
						, typedef void *gpointer);
extern typedef int gint gdk_screen_get_height(GdkScreen *);
extern void gdk_region_intersect(GdkRegion *, GdkRegion *);
extern void gdk_rgb_cmap_free(GdkRgbCmap *);
extern GdkDisplay *gdk_display_open(const typedef char gchar *);
extern typedef void (*func) (void) gdk_threads_unlock(void);
extern typedef gulong GType gdk_modifier_type_get_type(void);
extern GList *gdk_screen_get_toplevel_windows(GdkScreen *);
extern GdkGC *gdk_gc_new_with_values(GdkDrawable *, GdkGCValues *, typedef enum {
				     GDK_GC_FOREGROUND, GDK_GC_BACKGROUND,
				     GDK_GC_FONT, GDK_GC_FUNCTION,
				     GDK_GC_FILL, GDK_GC_TILE,
				     GDK_GC_STIPPLE, GDK_GC_CLIP_MASK,
				     GDK_GC_SUBWINDOW, GDK_GC_TS_X_ORIGIN,
				     GDK_GC_TS_Y_ORIGIN,
				     GDK_GC_CLIP_X_ORIGIN,
				     GDK_GC_CLIP_Y_ORIGIN,
				     GDK_GC_EXPOSURES, GDK_GC_LINE_WIDTH,
				     GDK_GC_LINE_STYLE, GDK_GC_CAP_STYLE,
				     GDK_GC_JOIN_STYLE
				     }

				     GdkGCValuesMask);
extern GdkScreen *gdk_display_get_default_screen(GdkDisplay *);
extern typedef gint gboolean gdk_drag_motion(GdkDragContext *, GdkWindow *, typedef enum {
					     GDK_DRAG_PROTO_MOTIF,
					     GDK_DRAG_PROTO_XDND,
					     GDK_DRAG_PROTO_ROOTWIN,
					     GDK_DRAG_PROTO_NONE,
					     GDK_DRAG_PROTO_WIN32_DROPFILES,
					     GDK_DRAG_PROTO_OLE2,
					     GDK_DRAG_PROTO_LOCAL
					     }
					     GdkDragProtocol,
					     typedef int gint,
					     typedef int gint,
					     typedef enum {
					     GDK_ACTION_DEFAULT,
					     GDK_ACTION_COPY,
					     GDK_ACTION_MOVE,
					     GDK_ACTION_LINK,
					     GDK_ACTION_PRIVATE,
					     GDK_ACTION_ASK
					     }
					     GdkDragAction, typedef enum {
					     GDK_ACTION_DEFAULT,
					     GDK_ACTION_COPY,
					     GDK_ACTION_MOVE,
					     GDK_ACTION_LINK,
					     GDK_ACTION_PRIVATE,
					     GDK_ACTION_ASK
					     }
					     GdkDragAction,
					     typedef unsigned int guint32);
extern GdkRegion *gdk_drawable_get_visible_region(GdkDrawable *);
extern typedef XID Colormap gdk_x11_colormap_get_xcolormap(GdkColormap *);
extern void gdk_display_get_maximal_cursor_size(GdkDisplay *, guint *,
						guint *);
extern void gdk_drag_status(GdkDragContext *, typedef enum {
			    GDK_ACTION_DEFAULT, GDK_ACTION_COPY,
			    GDK_ACTION_MOVE, GDK_ACTION_LINK,
			    GDK_ACTION_PRIVATE, GDK_ACTION_ASK
			    }
			    GdkDragAction, typedef unsigned int guint32);
extern typedef struct _GdkAtom
*GdkAtom gdk_x11_xatom_to_atom(typedef unsigned long int Atom);
extern typedef gint gboolean gdk_keyval_is_upper(typedef unsigned int
						 guint);
extern void gdk_pango_renderer_set_drawable(GdkPangoRenderer *,
					    GdkDrawable *);
extern typedef int gint gdk_window_get_origin(GdkWindow *, gint *, gint *);
extern typedef gint gboolean gdk_keyboard_grab_info_libgtk_only(GdkDisplay
								*,
								GdkWindow *
								*,
								gboolean
								*);
extern void gdk_gc_set_tile(GdkGC *, GdkPixmap *);
extern void gdk_gc_set_ts_origin(GdkGC *, typedef int gint,
				 typedef int gint);
extern typedef enum {
    GDK_WINDOW_ROOT, GDK_WINDOW_TOPLEVEL, GDK_WINDOW_CHILD,
	GDK_WINDOW_DIALOG, GDK_WINDOW_TEMP, GDK_WINDOW_FOREIGN
} GdkWindowType gdk_window_get_window_type(GdkWindow *);
extern void gdk_region_union_with_rect(GdkRegion *, GdkRectangle *);
extern Display *gdk_x11_get_default_xdisplay(void);
extern typedef gint gboolean gdk_keymap_get_entries_for_keycode(GdkKeymap
								*,
								typedef
								unsigned
								int guint,
								GdkKeymapKey
								* *,
								guint * *,
								gint *);
extern typedef gint gboolean gdk_selection_property_get(GdkWindow *,
							guchar * *,
							GdkAtom *, gint *);
extern typedef gint gboolean gdk_x11_screen_supports_net_wm_hint(GdkScreen
								 *,
								 typedef
								 struct
								 _GdkAtom
								 *GdkAtom);
extern void gdk_display_keyboard_ungrab(GdkDisplay *,
					typedef unsigned int guint32);
extern void gdk_window_set_keep_below(GdkWindow *, typedef gint gboolean);
extern typedef gulong GType gdk_font_type_get_type(void);
extern void gdk_pixbuf_render_pixmap_and_mask(GdkPixbuf *, GdkPixmap * *,
					      GdkBitmap * *, int);
extern typedef unsigned int guint gdk_keyval_to_upper(typedef unsigned int
						      guint);
extern void gdk_set_show_events(typedef gint gboolean);
extern GdkPixmap *gdk_pixmap_new(GdkDrawable *, typedef int gint,
				 typedef int gint, typedef int gint);
extern void gdk_rgb_find_color(GdkColormap *, GdkColor *);
extern void gdk_x11_display_ungrab(GdkDisplay *);
extern void gdk_window_show(GdkWindow *);
extern typedef gulong GType gdk_overlap_type_get_type(void);
extern void gdk_window_show_unraised(GdkWindow *);
extern void gdk_screen_broadcast_client_message(GdkScreen *, GdkEvent *);
extern typedef gulong GType gdk_join_style_get_type(void);
extern const typedef char gchar
    *gdk_x11_get_xatom_name_for_display(GdkDisplay *,
					typedef unsigned long int Atom);
extern void gdk_window_set_role(GdkWindow *, const typedef char gchar *);
extern void gdk_window_remove_filter(GdkWindow *,
				     typedef
				     GdkFilterReturn(*fptr_gdk_29)
				     (GdkXEvent *, GdkEvent *, gpointer)
				     , typedef void *gpointer);
extern void gdk_gc_set_function(GdkGC *, typedef enum {
				GDK_COPY, GDK_INVERT, GDK_XOR, GDK_CLEAR,
				GDK_AND, GDK_AND_REVERSE, GDK_AND_INVERT,
				GDK_NOOP, GDK_OR, GDK_EQUIV,
				GDK_OR_REVERSE, GDK_COPY_INVERT,
				GDK_OR_INVERT, GDK_NAND, GDK_NOR, GDK_SET
				}

				GdkFunction);
extern GList *gdk_list_visuals(void);
extern void gdk_pixbuf_render_threshold_alpha(GdkPixbuf *, GdkBitmap *,
					      int, int, int, int, int, int,
					      int);
extern typedef unsigned long int XID gdk_x11_drawable_get_xid(GdkDrawable
							      *);
extern void gdk_x11_grab_server(void);
extern typedef gint gboolean gdk_rgb_colormap_ditherable(GdkColormap *);
extern typedef unsigned long int Atom gdk_x11_atom_to_xatom(typedef struct _GdkAtom
							    *GdkAtom);
extern GdkVisual *gdk_screen_get_rgb_visual(GdkScreen *);
extern void gdk_set_sm_client_id(const typedef char gchar *);
extern void gdk_region_destroy(GdkRegion *);
extern void gdk_display_manager_set_default_display(GdkDisplayManager *,
						    GdkDisplay *);
extern PangoAttribute *gdk_pango_attr_embossed_new(typedef gint gboolean);
extern void gdk_drawable_set_colormap(GdkDrawable *, GdkColormap *);
extern void gdk_window_add_filter(GdkWindow *,
				  typedef
				  GdkFilterReturn(*fptr_gdk_29) (GdkXEvent
								 *,
								 GdkEvent
								 *,
								 gpointer)
				  , typedef void *gpointer);
extern void gdk_draw_line(GdkDrawable *, GdkGC *, typedef int gint,
			  typedef int gint, typedef int gint,
			  typedef int gint);
extern typedef gint gboolean gdk_event_send_client_message(GdkEvent *,
							   typedef guint32
							   GdkNativeWindow);
extern void gdk_window_set_geometry_hints(GdkWindow *, GdkGeometry *, typedef enum {
					  GDK_HINT_POS, GDK_HINT_MIN_SIZE,
					  GDK_HINT_MAX_SIZE,
					  GDK_HINT_BASE_SIZE,
					  GDK_HINT_ASPECT,
					  GDK_HINT_RESIZE_INC,
					  GDK_HINT_WIN_GRAVITY,
					  GDK_HINT_USER_POS,
					  GDK_HINT_USER_SIZE
					  }

					  GdkWindowHints);
extern typedef unsigned long int Atom
gdk_x11_atom_to_xatom_for_display(GdkDisplay *, typedef struct _GdkAtom
				  *GdkAtom);
extern typedef gulong GType gdk_window_class_get_type(void);
extern typedef unsigned int guint gdk_unicode_to_keyval(typedef unsigned
							int guint32);
extern void gdk_region_get_clipbox(GdkRegion *, GdkRectangle *);
extern typedef gulong GType gdk_gc_get_type(void);
extern void gdk_window_fullscreen(GdkWindow *);
extern gchar *gdk_keyval_name(typedef unsigned int guint);
extern PangoContext *gdk_pango_context_get(void);
extern typedef gulong GType gdk_rgb_dither_get_type(void);
extern void gdk_window_hide(GdkWindow *);
extern void gdk_window_register_dnd(GdkWindow *);
extern typedef gulong GType gdk_notify_type_get_type(void);
extern void gdk_window_invalidate_rect(GdkWindow *, GdkRectangle *,
				       typedef gint gboolean);
extern void gdk_gc_copy(GdkGC *, GdkGC *);
extern typedef unsigned int guint
gdk_display_get_default_cursor_size(GdkDisplay *);
extern void gdk_gc_set_exposures(GdkGC *, typedef gint gboolean);
extern GdkDisplayManager *gdk_display_manager_get(void);
extern void gdk_gc_set_background(GdkGC *, const typedef struct _GdkColor {
				  guint32 pixel;
				  guint16 red;
				  guint16 green; guint16 blue;}
				  GdkColor *);
extern void gdk_draw_point(GdkDrawable *, GdkGC *, typedef int gint,
			   typedef int gint);
extern GList *gdk_window_get_children(GdkWindow *);
extern typedef int gint gdk_screen_height(void);
extern void gdk_window_end_paint(GdkWindow *);
extern typedef gulong GType gdk_pixmap_get_type(void);
extern Display *gdk_x11_drawable_get_xdisplay(GdkDrawable *);
extern void gdk_window_maximize(GdkWindow *);
extern typedef enum {
    GDK_GRAB_SUCCESS, GDK_GRAB_ALREADY_GRABBED, GDK_GRAB_INVALID_TIME,
	GDK_GRAB_NOT_VIEWABLE, GDK_GRAB_FROZEN
} GdkGrabStatus gdk_keyboard_grab(GdkWindow *, typedef gint gboolean,
				  typedef unsigned int guint32);
extern typedef gulong GType gdk_visibility_state_get_type(void);
extern void gdk_draw_indexed_image(GdkDrawable *, GdkGC *,
				   typedef int gint, typedef int gint,
				   typedef int gint, typedef int gint,
				   typedef enum {
				   GDK_RGB_DITHER_NONE,
				   GDK_RGB_DITHER_NORMAL,
				   GDK_RGB_DITHER_MAX
				   }
				   GdkRgbDither, guchar *,
				   typedef int gint, GdkRgbCmap *);
extern typedef gint gboolean gdk_color_equal(const typedef struct _GdkColor {
					     guint32 pixel;
					     guint16 red;
					     guint16 green; guint16 blue;}
					     GdkColor *, const typedef struct _GdkColor {
					     guint32 pixel;
					     guint16 red;
					     guint16 green; guint16 blue;}
					     GdkColor *);
extern void gdk_region_offset(GdkRegion *, typedef int gint,
			      typedef int gint);
extern typedef int gint gdk_string_to_compound_text(const typedef char
						    gchar *, GdkAtom *,
						    gint *, guchar * *,
						    gint *);
extern GdkScreen *gdk_gc_get_screen(GdkGC *);
extern typedef enum {
    GDK_OVERLAP_RECTANGLE_IN, GDK_OVERLAP_RECTANGLE_OUT,
	GDK_OVERLAP_RECTANGLE_PART
} GdkOverlapType gdk_region_rect_in(GdkRegion *, GdkRectangle *);
extern typedef gulong GType gdk_cursor_type_get_type(void);
extern void gdk_draw_segments(GdkDrawable *, GdkGC *, GdkSegment *,
			      typedef int gint);
extern void gdk_draw_layout_line_with_colors(GdkDrawable *, GdkGC *,
					     typedef int gint,
					     typedef int gint,
					     PangoLayoutLine *,
					     const typedef struct _GdkColor
					     {
					     guint32 pixel; guint16 red;
					     guint16 green; guint16 blue;}
					     GdkColor *, const typedef struct _GdkColor {
					     guint32 pixel;
					     guint16 red;
					     guint16 green; guint16 blue;}
					     GdkColor *);
extern void gdk_property_change(GdkWindow *, typedef struct _GdkAtom
				*GdkAtom, typedef struct _GdkAtom
				*GdkAtom, typedef int gint, typedef enum {
				GDK_PROP_MODE_REPLACE,
				GDK_PROP_MODE_PREPEND, GDK_PROP_MODE_APPEND
				}
				GdkPropMode,
				const typedef unsigned char guchar *,
				typedef int gint);
extern typedef gint gboolean gdk_screen_get_setting(GdkScreen *,
						    const typedef char
						    gchar *, GValue *);
extern GList *gdk_screen_list_visuals(GdkScreen *);
extern typedef gulong GType gdk_window_attributes_type_get_type(void);
extern void gdk_synthesize_window_state(GdkWindow *, typedef enum {
					GDK_WINDOW_STATE_WITHDRAWN,
					GDK_WINDOW_STATE_ICONIFIED,
					GDK_WINDOW_STATE_MAXIMIZED,
					GDK_WINDOW_STATE_STICKY,
					GDK_WINDOW_STATE_FULLSCREEN,
					GDK_WINDOW_STATE_ABOVE,
					GDK_WINDOW_STATE_BELOW
					}
					GdkWindowState, typedef enum {
					GDK_WINDOW_STATE_WITHDRAWN,
					GDK_WINDOW_STATE_ICONIFIED,
					GDK_WINDOW_STATE_MAXIMIZED,
					GDK_WINDOW_STATE_STICKY,
					GDK_WINDOW_STATE_FULLSCREEN,
					GDK_WINDOW_STATE_ABOVE,
					GDK_WINDOW_STATE_BELOW
					}

					GdkWindowState);
extern void gdk_window_set_modal_hint(GdkWindow *, typedef gint gboolean);
extern GdkEvent *gdk_event_new(typedef enum {
			       GDK_NOTHING, GDK_DELETE, GDK_DESTROY,
			       GDK_EXPOSE, GDK_MOTION_NOTIFY,
			       GDK_BUTTON_PRESS, GDK_2BUTTON_PRESS,
			       GDK_3BUTTON_PRESS, GDK_BUTTON_RELEASE,
			       GDK_KEY_PRESS, GDK_KEY_RELEASE,
			       GDK_ENTER_NOTIFY, GDK_LEAVE_NOTIFY,
			       GDK_FOCUS_CHANGE, GDK_CONFIGURE, GDK_MAP,
			       GDK_UNMAP, GDK_PROPERTY_NOTIFY,
			       GDK_SELECTION_CLEAR, GDK_SELECTION_REQUEST,
			       GDK_SELECTION_NOTIFY, GDK_PROXIMITY_IN,
			       GDK_PROXIMITY_OUT, GDK_DRAG_ENTER,
			       GDK_DRAG_LEAVE, GDK_DRAG_MOTION,
			       GDK_DRAG_STATUS, GDK_DROP_START,
			       GDK_DROP_FINISHED, GDK_CLIENT_EVENT,
			       GDK_VISIBILITY_NOTIFY, GDK_NO_EXPOSE,
			       GDK_SCROLL, GDK_WINDOW_STATE, GDK_SETTING,
			       GDK_OWNER_CHANGE
			       }

			       GdkEventType);
extern void gdk_window_stick(GdkWindow *);
extern typedef gulong GType gdk_pango_renderer_get_type(void);
extern void gdk_window_set_back_pixmap(GdkWindow *, GdkPixmap *,
				       typedef gint gboolean);
extern typedef gint gboolean gdk_display_supports_cursor_color(GdkDisplay
							       *);
extern void gdk_notify_startup_complete(void);
extern void gdk_gc_set_values(GdkGC *, GdkGCValues *, typedef enum {
			      GDK_GC_FOREGROUND, GDK_GC_BACKGROUND,
			      GDK_GC_FONT, GDK_GC_FUNCTION, GDK_GC_FILL,
			      GDK_GC_TILE, GDK_GC_STIPPLE,
			      GDK_GC_CLIP_MASK, GDK_GC_SUBWINDOW,
			      GDK_GC_TS_X_ORIGIN, GDK_GC_TS_Y_ORIGIN,
			      GDK_GC_CLIP_X_ORIGIN, GDK_GC_CLIP_Y_ORIGIN,
			      GDK_GC_EXPOSURES, GDK_GC_LINE_WIDTH,
			      GDK_GC_LINE_STYLE, GDK_GC_CAP_STYLE,
			      GDK_GC_JOIN_STYLE
			      }

			      GdkGCValuesMask);
extern GdkEvent *gdk_event_get_graphics_expose(GdkWindow *);
extern void gdk_color_free(GdkColor *);
extern void gdk_rectangle_union(GdkRectangle *, GdkRectangle *,
				GdkRectangle *);
extern typedef gint gboolean gdk_drag_drop_succeeded(GdkDragContext *);
extern void gdk_draw_layout_with_colors(GdkDrawable *, GdkGC *, int, int,
					PangoLayout *,
					const typedef struct _GdkColor {
					guint32 pixel; guint16 red;
					guint16 green; guint16 blue;}
					GdkColor *, const typedef struct _GdkColor {
					guint32 pixel;
					guint16 red;
					guint16 green; guint16 blue;}
					GdkColor *);
extern GdkPixbuf *gdk_pixbuf_get_from_drawable(GdkPixbuf *, GdkDrawable *,
					       GdkColormap *, int, int,
					       int, int, int, int);
extern void gdk_draw_gray_image(GdkDrawable *, GdkGC *, typedef int gint,
				typedef int gint, typedef int gint,
				typedef int gint, typedef enum {
				GDK_RGB_DITHER_NONE, GDK_RGB_DITHER_NORMAL,
				GDK_RGB_DITHER_MAX
				}
				GdkRgbDither, guchar *, typedef int gint);
extern GdkEvent *gdk_event_get(void);
extern GdkScreen *gdk_visual_get_screen(GdkVisual *);
extern typedef gint gboolean gdk_device_get_history(GdkDevice *,
						    GdkWindow *,
						    typedef unsigned int
						    guint32,
						    typedef unsigned int
						    guint32,
						    GdkTimeCoord * **,
						    gint *);
extern void gdk_screen_set_default_colormap(GdkScreen *, GdkColormap *);
extern typedef gulong GType gdk_wm_decoration_get_type(void);
extern void gdk_draw_image(GdkDrawable *, GdkGC *, GdkImage *,
			   typedef int gint, typedef int gint,
			   typedef int gint, typedef int gint,
			   typedef int gint, typedef int gint);
extern void gdk_window_shape_combine_region(GdkWindow *, GdkRegion *,
					    typedef int gint,
					    typedef int gint);
extern int gdk_x11_screen_get_screen_number(GdkScreen *);
extern GdkGC *gdk_gc_new(GdkDrawable *);
extern void gdk_window_set_keep_above(GdkWindow *, typedef gint gboolean);
extern typedef gint gboolean gdk_selection_owner_set_for_display(GdkDisplay
								 *,
								 GdkWindow
								 *,
								 typedef
								 struct
								 _GdkAtom
								 *GdkAtom,
								 typedef
								 unsigned
								 int
								 guint32,
								 typedef
								 gint
								 gboolean);
extern GdkDevice *gdk_display_get_core_pointer(GdkDisplay *);
extern void gdk_cursor_unref(GdkCursor *);
extern typedef gulong GType gdk_display_manager_get_type(void);
extern const typedef char gchar *gdk_get_display_arg_name(void);
extern void gdk_draw_lines(GdkDrawable *, GdkGC *, GdkPoint *,
			   typedef int gint);
extern typedef gulong GType gdk_colormap_get_type(void);
extern typedef unsigned int guint32 gdk_drag_get_protocol(typedef unsigned
							  int guint32,
							  GdkDragProtocol
							  *);
extern typedef int gint gdk_screen_get_width(GdkScreen *);
extern typedef gulong GType gdk_window_impl_x11_get_type(void);
extern void gdk_selection_send_notify_for_display(GdkDisplay *,
						  typedef unsigned int
						  guint32,
						  typedef struct _GdkAtom
						  *GdkAtom, typedef struct _GdkAtom
						  *GdkAtom, typedef struct _GdkAtom
						  *GdkAtom,
						  typedef unsigned int
						  guint32);
extern GdkKeymap *gdk_keymap_get_default(void);
extern GdkScreen *gdk_colormap_get_screen(GdkColormap *);
extern typedef gulong GType gdk_byte_order_get_type(void);
extern void gdk_window_constrain_size(GdkGeometry *,
				      typedef unsigned int guint,
				      typedef int gint, typedef int gint,
				      gint *, gint *);
extern GdkWindow *gdk_screen_get_root_window(GdkScreen *);
extern void gdk_window_get_internal_paint_info(GdkWindow *,
					       GdkDrawable * *, gint *,
					       gint *);
extern typedef gint gboolean gdk_window_is_viewable(GdkWindow *);
extern void gdk_window_unfullscreen(GdkWindow *);
extern typedef gulong GType gdk_keymap_get_type(void);
extern void gdk_gc_set_clip_mask(GdkGC *, GdkBitmap *);
extern void gdk_draw_rgb_image(GdkDrawable *, GdkGC *, typedef int gint,
			       typedef int gint, typedef int gint,
			       typedef int gint, typedef enum {
			       GDK_RGB_DITHER_NONE, GDK_RGB_DITHER_NORMAL,
			       GDK_RGB_DITHER_MAX
			       }
			       GdkRgbDither, guchar *, typedef int gint);
extern void gdk_query_visual_types(GdkVisualType * *, gint *);
extern typedef gulong GType gdk_crossing_mode_get_type(void);
extern typedef XID Window gdk_x11_get_default_root_xwindow(void);
extern typedef gulong GType gdk_line_style_get_type(void);
extern typedef gulong GType gdk_window_state_get_type(void);
extern void gdk_event_free(GdkEvent *);
extern void gdk_gc_set_clip_region(GdkGC *, GdkRegion *);
extern typedef gint gboolean gdk_device_set_mode(GdkDevice *, typedef enum {
						 GDK_MODE_DISABLED,
						 GDK_MODE_SCREEN,
						 GDK_MODE_WINDOW
						 }

						 GdkInputMode);
extern void gdk_query_depths(gint * *, gint *);
extern void gdk_rgb_set_install(typedef gint gboolean);
extern typedef gulong GType gdk_window_edge_get_type(void);
extern void gdk_drawable_get_size(GdkDrawable *, gint *, gint *);
extern typedef unsigned int guint gdk_keymap_lookup_key(GdkKeymap *, const typedef struct _GdkKeymapKey {
							guint keycode;
							gint group;
							gint level;}
							GdkKeymapKey *);
extern void gdk_window_clear(GdkWindow *);
extern typedef struct _GdkAtom
*GdkAtom gdk_x11_xatom_to_atom_for_display(GdkDisplay *,
					   typedef unsigned long int Atom);
extern void gdk_event_put(GdkEvent *);
extern typedef gulong GType gdk_window_type_get_type(void);
extern GdkScreen *gdk_event_get_screen(GdkEvent *);
extern GdkPointerHooks *gdk_set_pointer_hooks(const typedef struct _GdkPointerHooks {
					      GdkWindow *
					      (*fptr_gdk_253) (GdkWindow *,
							       gint *,
							       gint *,
							       GdkModifierType
							       *);
					      GdkWindow *
					      (*fptr_gdk_70) (GdkScreen *,
							      gint *,
							      gint *);}
					      GdkPointerHooks *);
extern void gdk_x11_ungrab_server(void);
extern void gdk_draw_glyphs_transformed(GdkDrawable *, GdkGC *,
					PangoMatrix *, PangoFont *,
					typedef int gint, typedef int gint,
					PangoGlyphString *);
extern typedef gulong GType gdk_extension_mode_get_type(void);
extern void gdk_region_xor(GdkRegion *, GdkRegion *);
extern XImage *gdk_x11_image_get_ximage(GdkImage *);
extern GdkCursor *gdk_cursor_ref(GdkCursor *);
extern GdkVisual *gdk_visual_get_best_with_both(typedef int gint, typedef enum {
						GDK_VISUAL_STATIC_GRAY,
						GDK_VISUAL_GRAYSCALE,
						GDK_VISUAL_STATIC_COLOR,
						GDK_VISUAL_PSEUDO_COLOR,
						GDK_VISUAL_TRUE_COLOR,
						GDK_VISUAL_DIRECT_COLOR
						}

						GdkVisualType);
extern typedef gulong GType gdk_scroll_direction_get_type(void);
extern GdkRgbCmap *gdk_rgb_cmap_new(guint32 *, typedef int gint);
extern void gdk_draw_drawable(GdkDrawable *, GdkGC *, GdkDrawable *,
			      typedef int gint, typedef int gint,
			      typedef int gint, typedef int gint,
			      typedef int gint, typedef int gint);
extern void gdk_threads_set_lock_functions(typedef void (*func) (void)
					   , typedef void (*func) (void)
    );
extern typedef int gint gdk_screen_get_height_mm(GdkScreen *);
extern typedef gint gboolean gdk_get_show_events(void);
extern void gdk_pointer_ungrab(typedef unsigned int guint32);
extern void gdk_threads_leave(void);
extern typedef gint gboolean gdk_pointer_is_grabbed(void);
extern typedef enum {
    GDK_WINDOW_STATE_WITHDRAWN, GDK_WINDOW_STATE_ICONIFIED,
	GDK_WINDOW_STATE_MAXIMIZED, GDK_WINDOW_STATE_STICKY,
	GDK_WINDOW_STATE_FULLSCREEN, GDK_WINDOW_STATE_ABOVE,
	GDK_WINDOW_STATE_BELOW
} GdkWindowState gdk_window_get_state(GdkWindow *);
extern void gdk_region_get_rectangles(GdkRegion *, GdkRectangle * *,
				      gint *);
extern void gdk_gc_set_line_attributes(GdkGC *, typedef int gint, typedef enum {
				       GDK_LINE_SOLID,
				       GDK_LINE_ON_OFF_DASH,
				       GDK_LINE_DOUBLE_DASH
				       }
				       GdkLineStyle, typedef enum {
				       GDK_CAP_NOT_LAST, GDK_CAP_BUTT,
				       GDK_CAP_ROUND, GDK_CAP_PROJECTING
				       }
				       GdkCapStyle, typedef enum {
				       GDK_JOIN_MITER, GDK_JOIN_ROUND,
				       GDK_JOIN_BEVEL
				       }

				       GdkJoinStyle);
extern void gdk_window_get_geometry(GdkWindow *, gint *, gint *, gint *,
				    gint *, gint *);
extern void gdk_rgb_set_min_colors(typedef int gint);
extern typedef int gint gdk_screen_get_monitor_at_window(GdkScreen *,
							 GdkWindow *);
extern void gdk_window_set_icon_list(GdkWindow *, GList *);
extern void gdk_device_set_axis_use(GdkDevice *,
				    typedef unsigned int guint,
				    typedef enum {
				    GDK_AXIS_IGNORE, GDK_AXIS_X,
				    GDK_AXIS_Y, GDK_AXIS_PRESSURE,
				    GDK_AXIS_XTILT, GDK_AXIS_YTILT,
				    GDK_AXIS_WHEEL, GDK_AXIS_LAST
				    }

				    GdkAxisUse);
extern void gdk_keyboard_ungrab(typedef unsigned int guint32);
extern GdkWindow *gdk_window_at_pointer(gint *, gint *);
extern const typedef char gchar *gdk_x11_get_xatom_name(typedef unsigned
							long int Atom);
extern typedef gulong GType gdk_image_type_get_type(void);
extern typedef int gint gdk_screen_width(void);
extern typedef void *gpointer gdk_xid_table_lookup(typedef unsigned long
						   int XID);
extern void gdk_input_set_extension_events(GdkWindow *, typedef int gint, typedef enum {
					   GDK_EXTENSION_EVENTS_NONE,
					   GDK_EXTENSION_EVENTS_ALL,
					   GDK_EXTENSION_EVENTS_CURSOR
					   }

					   GdkExtensionMode);
extern GdkDisplay *gdk_x11_lookup_xdisplay(Display *);
extern const char *gdk_x11_screen_get_window_manager_name(GdkScreen *);
extern GdkRegion *gdk_drawable_get_clip_region(GdkDrawable *);
extern GdkScreen *gdk_display_get_screen(GdkDisplay *, typedef int gint);
extern GdkColormap *gdk_screen_get_system_colormap(GdkScreen *);
extern typedef enum {
    GDK_VISUAL_STATIC_GRAY, GDK_VISUAL_GRAYSCALE, GDK_VISUAL_STATIC_COLOR,
	GDK_VISUAL_PSEUDO_COLOR, GDK_VISUAL_TRUE_COLOR,
	GDK_VISUAL_DIRECT_COLOR
} GdkVisualType gdk_visual_get_best_type(void);
extern GdkCursor *gdk_cursor_new_from_pixmap(GdkPixmap *, GdkPixmap *, const typedef struct _GdkColor {
					     guint32 pixel;
					     guint16 red;
					     guint16 green; guint16 blue;}
					     GdkColor *, const typedef struct _GdkColor {
					     guint32 pixel;
					     guint16 red;
					     guint16 green; guint16 blue;}
					     GdkColor *, typedef int gint,
					     typedef int gint);
extern typedef gulong GType gdk_fill_rule_get_type(void);
extern typedef int gint gdk_screen_width_mm(void);
extern void gdk_window_set_icon_name(GdkWindow *,
				     const typedef char gchar *);
extern typedef gulong GType gdk_drag_context_get_type(void);
extern GdkPixmap *gdk_pixmap_colormap_create_from_xpm(GdkDrawable *,
						      GdkColormap *,
						      GdkBitmap * *,
						      const typedef struct
						      _GdkColor {
						      guint32 pixel;
						      guint16 red;
						      guint16 green;
						      guint16 blue;}
						      GdkColor *,
						      const typedef char
						      gchar *);
extern GdkEvent *gdk_event_copy(GdkEvent *);
extern void gdk_window_get_position(GdkWindow *, gint *, gint *);
extern Display *gdk_x11_display_get_xdisplay(GdkDisplay *);
extern void gdk_region_shrink(GdkRegion *, int, int);
extern void gdk_window_deiconify(GdkWindow *);
extern GdkColormap *gdk_drawable_get_colormap(GdkDrawable *);
extern void gdk_gc_set_clip_origin(GdkGC *, typedef int gint,
				   typedef int gint);
extern void gdk_display_get_pointer(GdkDisplay *, GdkScreen * *, gint *,
				    gint *, GdkModifierType *);
extern void gdk_flush(void);
extern typedef enum {
    GDK_EXPOSURE_MASK, GDK_POINTER_MOTION_MASK,
	GDK_POINTER_MOTION_HINT_MASK, GDK_BUTTON_MOTION_MASK,
	GDK_BUTTON1_MOTION_MASK, GDK_BUTTON2_MOTION_MASK,
	GDK_BUTTON3_MOTION_MASK, GDK_BUTTON_PRESS_MASK,
	GDK_BUTTON_RELEASE_MASK, GDK_KEY_PRESS_MASK, GDK_KEY_RELEASE_MASK,
	GDK_ENTER_NOTIFY_MASK, GDK_LEAVE_NOTIFY_MASK,
	GDK_FOCUS_CHANGE_MASK, GDK_STRUCTURE_MASK,
	GDK_PROPERTY_CHANGE_MASK, GDK_VISIBILITY_NOTIFY_MASK,
	GDK_PROXIMITY_IN_MASK, GDK_PROXIMITY_OUT_MASK,
	GDK_SUBSTRUCTURE_MASK, GDK_SCROLL_MASK, GDK_ALL_EVENTS_MASK
} GdkEventMask gdk_window_get_events(GdkWindow *);
extern typedef gulong GType gdk_window_object_get_type(void);
extern void gdk_window_scroll(GdkWindow *, typedef int gint,
			      typedef int gint);
extern typedef gulong GType gdk_axis_use_get_type(void);
extern GdkKeymap *gdk_keymap_get_for_display(GdkDisplay *);
extern void gdk_pre_parse_libgtk_only(void);
extern void gdk_gc_set_colormap(GdkGC *, GdkColormap *);
extern typedef gulong GType gdk_grab_status_get_type(void);
extern typedef gulong GType gdk_visual_get_type(void);
extern typedef gulong GType gdk_event_get_type(void);
extern GList *gdk_devices_list(void);
extern typedef gint gboolean gdk_event_get_root_coords(GdkEvent *,
						       gdouble *,
						       gdouble *);
extern void gdk_window_begin_resize_drag(GdkWindow *, typedef enum {
					 GDK_WINDOW_EDGE_NORTH_WEST,
					 GDK_WINDOW_EDGE_NORTH,
					 GDK_WINDOW_EDGE_NORTH_EAST,
					 GDK_WINDOW_EDGE_WEST,
					 GDK_WINDOW_EDGE_EAST,
					 GDK_WINDOW_EDGE_SOUTH_WEST,
					 GDK_WINDOW_EDGE_SOUTH,
					 GDK_WINDOW_EDGE_SOUTH_EAST
					 }
					 GdkWindowEdge, typedef int gint,
					 typedef int gint,
					 typedef int gint,
					 typedef unsigned int guint32);
extern GdkImage *gdk_image_new(typedef enum {
			       GDK_IMAGE_NORMAL, GDK_IMAGE_SHARED,
			       GDK_IMAGE_FASTEST
			       }
			       GdkImageType, GdkVisual *, typedef int gint,
			       typedef int gint);
extern void gdk_window_raise(GdkWindow *);
extern void gdk_device_set_key(GdkDevice *, typedef unsigned int guint,
			       typedef unsigned int guint, typedef enum {
			       GDK_SHIFT_MASK, GDK_LOCK_MASK,
			       GDK_CONTROL_MASK, GDK_MOD1_MASK,
			       GDK_MOD2_MASK, GDK_MOD3_MASK, GDK_MOD4_MASK,
			       GDK_MOD5_MASK, GDK_BUTTON1_MASK,
			       GDK_BUTTON2_MASK, GDK_BUTTON3_MASK,
			       GDK_BUTTON4_MASK, GDK_BUTTON5_MASK,
			       GDK_RELEASE_MASK, GDK_MODIFIER_MASK
			       }

			       GdkModifierType);
extern typedef unsigned int guint gdk_color_hash(const typedef struct _GdkColor {
						 guint32 pixel;
						 guint16 red;
						 guint16 green;
						 guint16 blue;}
						 GdkColor *);
extern Display *gdk_x11_image_get_xdisplay(GdkImage *);
extern GdkWindow *gdk_get_default_root_window(void);
extern typedef enum {
    GDK_GRAB_SUCCESS, GDK_GRAB_ALREADY_GRABBED, GDK_GRAB_INVALID_TIME,
	GDK_GRAB_NOT_VIEWABLE, GDK_GRAB_FROZEN
} GdkGrabStatus gdk_pointer_grab(GdkWindow *, typedef gint gboolean, typedef enum {
				 GDK_EXPOSURE_MASK,
				 GDK_POINTER_MOTION_MASK,
				 GDK_POINTER_MOTION_HINT_MASK,
				 GDK_BUTTON_MOTION_MASK,
				 GDK_BUTTON1_MOTION_MASK,
				 GDK_BUTTON2_MOTION_MASK,
				 GDK_BUTTON3_MOTION_MASK,
				 GDK_BUTTON_PRESS_MASK,
				 GDK_BUTTON_RELEASE_MASK,
				 GDK_KEY_PRESS_MASK, GDK_KEY_RELEASE_MASK,
				 GDK_ENTER_NOTIFY_MASK,
				 GDK_LEAVE_NOTIFY_MASK,
				 GDK_FOCUS_CHANGE_MASK, GDK_STRUCTURE_MASK,
				 GDK_PROPERTY_CHANGE_MASK,
				 GDK_VISIBILITY_NOTIFY_MASK,
				 GDK_PROXIMITY_IN_MASK,
				 GDK_PROXIMITY_OUT_MASK,
				 GDK_SUBSTRUCTURE_MASK, GDK_SCROLL_MASK,
				 GDK_ALL_EVENTS_MASK
				 }
				 GdkEventMask, GdkWindow *, GdkCursor *,
				 typedef unsigned int guint32);
extern GdkColormap *gdk_rgb_get_colormap(void);
extern typedef unsigned int guint32 gdk_event_get_time(GdkEvent *);
extern void gdk_window_process_all_updates(void);
extern void gdk_free_text_list(gchar * *);
extern typedef int gint
gdk_text_property_to_text_list_for_display(GdkDisplay *,
					   typedef struct _GdkAtom
					   *GdkAtom, typedef int gint,
					   const typedef unsigned char
					   guchar *, typedef int gint,
					   gchar * **);
extern void gdk_gc_set_fill(GdkGC *, typedef enum {
			    GDK_SOLID, GDK_TILED, GDK_STIPPLED,
			    GDK_OPAQUE_STIPPLED
			    }

			    GdkFill);
extern void gdk_init(int *, char ***);
extern void gdk_gc_set_rgb_fg_color(GdkGC *, const typedef struct _GdkColor {
				    guint32 pixel;
				    guint16 red;
				    guint16 green; guint16 blue;}
				    GdkColor *);
extern typedef int gint gdk_text_property_to_utf8_list(typedef struct _GdkAtom
						       *GdkAtom,
						       typedef int gint,
						       const typedef
						       unsigned char guchar
						       *, typedef int gint,
						       gchar * **);
extern void gdk_window_set_type_hint(GdkWindow *, typedef enum {
				     GDK_WINDOW_TYPE_HINT_NORMAL,
				     GDK_WINDOW_TYPE_HINT_DIALOG,
				     GDK_WINDOW_TYPE_HINT_MENU,
				     GDK_WINDOW_TYPE_HINT_TOOLBAR,
				     GDK_WINDOW_TYPE_HINT_SPLASHSCREEN,
				     GDK_WINDOW_TYPE_HINT_UTILITY,
				     GDK_WINDOW_TYPE_HINT_DOCK,
				     GDK_WINDOW_TYPE_HINT_DESKTOP
				     }

				     GdkWindowTypeHint);
extern void gdk_parse_args(int *, char ***);
extern void gdk_window_set_group(GdkWindow *, GdkWindow *);
extern void gdk_window_focus(GdkWindow *, typedef unsigned int guint32);
extern void gdk_display_flush(GdkDisplay *);
extern void gdk_region_subtract(GdkRegion *, GdkRegion *);
extern void gdk_window_destroy_notify(GdkWindow *);
extern typedef gulong GType gdk_cap_style_get_type(void);
extern void gdk_draw_glyphs(GdkDrawable *, GdkGC *, PangoFont *,
			    typedef int gint, typedef int gint,
			    PangoGlyphString *);
extern GdkWindow *gdk_display_get_window_at_pointer(GdkDisplay *, gint *,
						    gint *);
extern void gdk_drag_abort(GdkDragContext *, typedef unsigned int guint32);
extern typedef int gint
gdk_text_property_to_utf8_list_for_display(GdkDisplay *,
					   typedef struct _GdkAtom
					   *GdkAtom, typedef int gint,
					   const typedef unsigned char
					   guchar *, typedef int gint,
					   gchar * **);
extern void gdk_window_set_debug_updates(typedef gint gboolean);
extern GdkRegion *gdk_region_copy(GdkRegion *);
extern const char *gdk_get_program_class(void);
extern Display *gdk_x11_colormap_get_xdisplay(GdkColormap *);
extern void gdk_device_free_history(GdkTimeCoord * *, typedef int gint);
extern void gdk_set_program_class(const char *);
extern typedef gulong GType gdk_event_mask_get_type(void);
extern typedef gulong GType gdk_rectangle_get_type(void);
extern typedef int gint gdk_screen_get_n_monitors(GdkScreen *);
extern GList *gdk_window_get_toplevels(void);
extern GdkDisplay *gdk_screen_get_display(GdkScreen *);
extern GdkVisual *gdk_colormap_get_visual(GdkColormap *);
extern void gdk_display_beep(GdkDisplay *);
extern void gdk_add_client_message_filter(typedef struct _GdkAtom
					  *GdkAtom,
					  typedef
					  GdkFilterReturn(*fptr_gdk_29)
					  (GdkXEvent *, GdkEvent *,
					   gpointer)
					  , typedef void *gpointer);
extern typedef enum PangoDirection gdk_keymap_get_direction(GdkKeymap *);
extern typedef gint gboolean gdk_colormap_alloc_color(GdkColormap *,
						      GdkColor *,
						      typedef gint
						      gboolean,
						      typedef gint
						      gboolean);
extern typedef gint gboolean gdk_rgb_ditherable(void);
extern typedef gulong GType gdk_color_get_type(void);
extern GdkWindow *gdk_display_get_default_group(GdkDisplay *);
extern typedef gulong GType gdk_drag_protocol_get_type(void);
extern typedef gulong GType gdk_gravity_get_type(void);
extern typedef gulong GType gdk_input_source_get_type(void);
extern typedef gint gboolean gdk_events_pending(void);
extern void gdk_gc_set_foreground(GdkGC *, const typedef struct _GdkColor {
				  guint32 pixel;
				  guint16 red;
				  guint16 green; guint16 blue;}
				  GdkColor *);
extern void gdk_threads_init(void);
extern gchar *gdk_utf8_to_string_target(const typedef char gchar *);
extern typedef int gint gdk_string_to_compound_text_for_display(GdkDisplay
								*,
								const
								typedef
								char gchar
								*,
								GdkAtom *,
								gint *,
								guchar * *,
								gint *);
extern void gdk_drop_finish(GdkDragContext *, typedef gint gboolean,
			    typedef unsigned int guint32);
extern void gdk_window_set_functions(GdkWindow *, typedef enum {
				     GDK_FUNC_ALL, GDK_FUNC_RESIZE,
				     GDK_FUNC_MOVE, GDK_FUNC_MINIMIZE,
				     GDK_FUNC_MAXIMIZE, GDK_FUNC_CLOSE
				     }

				     GdkWMFunction);
extern GdkDragContext *gdk_drag_context_new(void);
extern typedef gint gboolean gdk_keymap_get_entries_for_keyval(GdkKeymap *,
							       typedef
							       unsigned int
							       guint,
							       GdkKeymapKey
							       * *,
							       gint *);
extern GdkVisual *gdk_x11_screen_lookup_visual(GdkScreen *,
					       typedef unsigned long int
					       VisualID);
extern void gdk_colormap_query_color(GdkColormap *,
				     typedef long unsigned int gulong,
				     GdkColor *);
extern void gdk_pixbuf_render_pixmap_and_mask_for_colormap(GdkPixbuf *,
							   GdkColormap *,
							   GdkPixmap * *,
							   GdkBitmap * *,
							   int);
extern Visual *gdk_x11_visual_get_xvisual(GdkVisual *);
extern void gdk_draw_pixbuf(GdkDrawable *, GdkGC *, GdkPixbuf *,
			    typedef int gint, typedef int gint,
			    typedef int gint, typedef int gint,
			    typedef int gint, typedef int gint,
			    typedef enum {
			    GDK_RGB_DITHER_NONE, GDK_RGB_DITHER_NORMAL,
			    GDK_RGB_DITHER_MAX
			    }
			    GdkRgbDither, typedef int gint,
			    typedef int gint);
extern GdkWindow *gdk_selection_owner_get(typedef struct _GdkAtom
					  *GdkAtom);
extern typedef gint gboolean gdk_keyval_is_lower(typedef unsigned int
						 guint);
extern GdkPixmap *gdk_pixmap_colormap_create_from_xpm_d(GdkDrawable *,
							GdkColormap *,
							GdkBitmap * *,
							const typedef
							struct _GdkColor {
							guint32 pixel;
							guint16 red;
							guint16 green;
							guint16 blue;}
							GdkColor *,
							gchar * *);
extern typedef gint gboolean gdk_net_wm_supports(typedef struct _GdkAtom
						 *GdkAtom);
extern typedef int gint gdk_visual_get_best_depth(void);
extern typedef gint gboolean gdk_setting_get(const typedef char gchar *,
					     GValue *);
extern typedef gulong GType gdk_screen_get_type(void);
extern typedef unsigned int guint32
gdk_drag_get_protocol_for_display(GdkDisplay *,
				  typedef unsigned int guint32,
				  GdkDragProtocol *);
extern void gdk_pango_renderer_set_stipple(GdkPangoRenderer *,
					   typedef enum PangoRenderPart,
					   GdkBitmap *);
extern GdkRegion *gdk_window_get_update_area(GdkWindow *);
extern void gdk_window_begin_paint_region(GdkWindow *, GdkRegion *);
extern typedef int gint gdk_screen_get_monitor_at_point(GdkScreen *,
							typedef int gint,
							typedef int gint);
extern GdkColormap *gdk_image_get_colormap(GdkImage *);
extern typedef gint gboolean
gdk_utf8_to_compound_text_for_display(GdkDisplay *,
				      const typedef char gchar *,
				      GdkAtom *, gint *, guchar * *,
				      gint *);
extern void gdk_set_double_click_time(typedef unsigned int guint);
extern Display *gdk_x11_cursor_get_xdisplay(GdkCursor *);
extern void gdk_gc_get_values(GdkGC *, GdkGCValues *);
extern GdkColor *gdk_color_copy(const typedef struct _GdkColor {
				guint32 pixel;
				guint16 red; guint16 green; guint16 blue;}
				GdkColor *);
extern typedef gint gboolean gdk_event_get_coords(GdkEvent *, gdouble *,
						  gdouble *);
extern void gdk_window_set_focus_on_map(GdkWindow *,
					typedef gint gboolean);
extern void gdk_gc_set_stipple(GdkGC *, GdkPixmap *);
extern GdkDisplay *gdk_drawable_get_display(GdkDrawable *);
extern void gdk_window_clear_area_e(GdkWindow *, typedef int gint,
				    typedef int gint, typedef int gint,
				    typedef int gint);
extern GdkEvent *gdk_display_get_event(GdkDisplay *);
extern typedef gulong GType gdk_visual_type_get_type(void);
extern GdkVisual *gdk_drawable_get_visual(GdkDrawable *);
extern typedef unsigned int guint32 gdk_x11_get_server_time(GdkWindow *);
extern void gdk_image_set_colormap(GdkImage *, GdkColormap *);
extern GdkWindow *gdk_window_lookup_for_display(GdkDisplay *,
						typedef guint32
						GdkNativeWindow);
extern GdkColormap *gdk_screen_get_rgb_colormap(GdkScreen *);
extern void gdk_window_set_override_redirect(GdkWindow *,
					     typedef gint gboolean);
extern void gdk_window_set_accept_focus(GdkWindow *,
					typedef gint gboolean);
extern GdkEvent *gdk_event_peek(void);
extern typedef gulong GType gdk_gc_values_mask_get_type(void);
extern void gdk_window_set_events(GdkWindow *, typedef enum {
				  GDK_EXPOSURE_MASK,
				  GDK_POINTER_MOTION_MASK,
				  GDK_POINTER_MOTION_HINT_MASK,
				  GDK_BUTTON_MOTION_MASK,
				  GDK_BUTTON1_MOTION_MASK,
				  GDK_BUTTON2_MOTION_MASK,
				  GDK_BUTTON3_MOTION_MASK,
				  GDK_BUTTON_PRESS_MASK,
				  GDK_BUTTON_RELEASE_MASK,
				  GDK_KEY_PRESS_MASK, GDK_KEY_RELEASE_MASK,
				  GDK_ENTER_NOTIFY_MASK,
				  GDK_LEAVE_NOTIFY_MASK,
				  GDK_FOCUS_CHANGE_MASK,
				  GDK_STRUCTURE_MASK,
				  GDK_PROPERTY_CHANGE_MASK,
				  GDK_VISIBILITY_NOTIFY_MASK,
				  GDK_PROXIMITY_IN_MASK,
				  GDK_PROXIMITY_OUT_MASK,
				  GDK_SUBSTRUCTURE_MASK, GDK_SCROLL_MASK,
				  GDK_ALL_EVENTS_MASK
				  }

				  GdkEventMask);
extern void gdk_window_set_icon(GdkWindow *, GdkWindow *, GdkPixmap *,
				GdkBitmap *);
extern typedef unsigned long int Atom
gdk_x11_get_xatom_by_name_for_display(GdkDisplay *,
				      const typedef char gchar *);
extern void gdk_display_put_event(GdkDisplay *, GdkEvent *);
extern typedef gint gboolean gdk_utf8_to_compound_text(const typedef char
						       gchar *, GdkAtom *,
						       gint *, guchar * *,
						       gint *);
extern GList *gdk_window_peek_children(GdkWindow *);
extern GdkVisual *gdkx_visual_get(typedef unsigned long int VisualID);
extern void gdk_window_enable_synchronized_configure(GdkWindow *);
extern GdkDisplay *gdk_display_get_default(void);
extern void gdk_region_spans_intersect_foreach(GdkRegion *, GdkSpan *, int,
					       typedef gint gboolean,
					       typedef
					       void (*fptr_gdk_27) (GdkSpan
								    *,
								    gpointer)
					       , typedef void *gpointer);
extern void gdk_display_pointer_ungrab(GdkDisplay *,
				       typedef unsigned int guint32);
extern GdkColormap *gdk_screen_get_default_colormap(GdkScreen *);
extern void gdk_window_move(GdkWindow *, typedef int gint,
			    typedef int gint);
extern GdkImage *gdk_drawable_copy_to_image(GdkDrawable *, GdkImage *,
					    typedef int gint,
					    typedef int gint,
					    typedef int gint,
					    typedef int gint,
					    typedef int gint,
					    typedef int gint);
extern void gdk_window_reparent(GdkWindow *, GdkWindow *, typedef int gint,
				typedef int gint);
extern GList *gdk_display_list_devices(GdkDisplay *);
extern typedef gint gboolean gdk_pointer_grab_info_libgtk_only(GdkDisplay
							       *,
							       GdkWindow *
							       *,
							       gboolean *);
extern void gdk_x11_display_grab(GdkDisplay *);
extern void gdk_beep(void);
extern GdkFont *gdk_font_load_for_display(GdkDisplay *,
					  const typedef char gchar *);
extern GdkColormap *gdk_colormap_get_system(void);
extern void gdk_display_store_clipboard(GdkDisplay *, GdkWindow *,
					typedef unsigned int guint32,
					GdkAtom *, typedef int gint);
extern typedef int gint gdk_error_trap_pop(void);
extern GdkDisplay *gdk_cursor_get_display(GdkCursor *);
extern typedef gint gboolean
gdk_draw_rectangle_alpha_libgtk_only(GdkDrawable *, typedef int gint,
				     typedef int gint, typedef int gint,
				     typedef int gint, GdkColor *,
				     typedef short unsigned int guint16);
extern typedef XID Cursor gdk_x11_cursor_get_xcursor(GdkCursor *);
extern void gdk_event_handler_set(typedef
				  void (*fptr_gdk_331) (GdkEvent *,
							gpointer)
				  , typedef void *gpointer,
				  typedef void (*fptr_glib_390) (gpointer)
    );
extern void gdk_draw_arc(GdkDrawable *, GdkGC *, typedef gint gboolean,
			 typedef int gint, typedef int gint,
			 typedef int gint, typedef int gint,
			 typedef int gint, typedef int gint);
extern void gdk_window_clear_area(GdkWindow *, typedef int gint,
				  typedef int gint, typedef int gint,
				  typedef int gint);
extern typedef gulong GType gdk_drawable_get_type(void);
extern void gdk_draw_layout(GdkDrawable *, GdkGC *, int, int,
			    PangoLayout *);
extern void gdk_window_get_root_origin(GdkWindow *, gint *, gint *);
extern typedef int gint gdk_color_parse(const typedef char gchar *,
					GdkColor *);
extern void gdk_window_set_skip_taskbar_hint(GdkWindow *,
					     typedef gint gboolean);
extern GdkRegion *gdk_pango_layout_get_clip_region(PangoLayout *,
						   typedef int gint,
						   typedef int gint,
						   gint *,
						   typedef int gint);
extern GdkCursor *gdk_cursor_new(typedef enum {
				 GDK_CURSOR_IS_PIXMAP, GDK_X_CURSOR,
				 GDK_ARROW, GDK_BASED_ARROW_DOWN,
				 GDK_BASED_ARROW_UP, GDK_BOAT,
				 GDK_BOGOSITY, GDK_BOTTOM_LEFT_CORNER,
				 GDK_BOTTOM_RIGHT_CORNER, GDK_BOTTOM_SIDE,
				 GDK_BOTTOM_TEE, GDK_BOX_SPIRAL,
				 GDK_CENTER_PTR, GDK_CIRCLE, GDK_CLOCK,
				 GDK_COFFEE_MUG, GDK_CROSS,
				 GDK_CROSS_REVERSE, GDK_CROSSHAIR,
				 GDK_DIAMOND_CROSS, GDK_DOT, GDK_DOTBOX,
				 GDK_DOUBLE_ARROW, GDK_DRAFT_LARGE,
				 GDK_DRAFT_SMALL, GDK_DRAPED_BOX,
				 GDK_EXCHANGE, GDK_FLEUR, GDK_GOBBLER,
				 GDK_GUMBY, GDK_HAND1, GDK_HAND2,
				 GDK_HEART, GDK_ICON, GDK_IRON_CROSS,
				 GDK_LEFT_PTR, GDK_LEFT_SIDE, GDK_LEFT_TEE,
				 GDK_LEFTBUTTON, GDK_LL_ANGLE,
				 GDK_LR_ANGLE, GDK_MAN, GDK_MIDDLEBUTTON,
				 GDK_MOUSE, GDK_PENCIL, GDK_PIRATE,
				 GDK_PLUS, GDK_QUESTION_ARROW,
				 GDK_RIGHT_PTR, GDK_RIGHT_SIDE,
				 GDK_RIGHT_TEE, GDK_RIGHTBUTTON,
				 GDK_RTL_LOGO, GDK_SAILBOAT,
				 GDK_SB_DOWN_ARROW, GDK_SB_H_DOUBLE_ARROW,
				 GDK_SB_LEFT_ARROW, GDK_SB_RIGHT_ARROW,
				 GDK_SB_UP_ARROW, GDK_SB_V_DOUBLE_ARROW,
				 GDK_SHUTTLE, GDK_SIZING, GDK_SPIDER,
				 GDK_SPRAYCAN, GDK_STAR, GDK_TARGET,
				 GDK_TCROSS, GDK_TOP_LEFT_ARROW,
				 GDK_TOP_LEFT_CORNER, GDK_TOP_RIGHT_CORNER,
				 GDK_TOP_SIDE, GDK_TOP_TEE, GDK_TREK,
				 GDK_UL_ANGLE, GDK_UMBRELLA, GDK_UR_ANGLE,
				 GDK_WATCH, GDK_XTERM, GDK_LAST_CURSOR
				 }

				 GdkCursorType);
extern void gdk_add_option_entries_libgtk_only(GOptionGroup *);
extern void gdk_window_unmaximize(GdkWindow *);
extern void gdk_window_set_cursor(GdkWindow *, GdkCursor *);
extern void gdk_keyval_convert_case(typedef unsigned int guint, guint *,
				    guint *);
extern GdkVisual *gdk_visual_get_best_with_type(typedef enum {
						GDK_VISUAL_STATIC_GRAY,
						GDK_VISUAL_GRAYSCALE,
						GDK_VISUAL_STATIC_COLOR,
						GDK_VISUAL_PSEUDO_COLOR,
						GDK_VISUAL_TRUE_COLOR,
						GDK_VISUAL_DIRECT_COLOR
						}

						GdkVisualType);
extern typedef unsigned long int Atom gdk_x11_get_xatom_by_name(const
								typedef
								char gchar
								*);
extern GdkVisual *gdk_visual_get_best(void);
extern GdkWindow *gdk_window_get_pointer(GdkWindow *, gint *, gint *,
					 GdkModifierType *);
extern void gdk_selection_convert(GdkWindow *, typedef struct _GdkAtom
				  *GdkAtom, typedef struct _GdkAtom
				  *GdkAtom, typedef unsigned int guint32);
extern typedef gulong GType gdk_property_state_get_type(void);
extern void gdk_window_get_user_data(GdkWindow *, gpointer *);
extern typedef gint gboolean gdk_region_empty(GdkRegion *);
extern typedef gint gboolean gdk_window_set_static_gravities(GdkWindow *,
							     typedef gint
							     gboolean);
extern GdkDisplay *gdk_font_get_display(GdkFont *);
extern typedef int gint gdk_screen_get_number(GdkScreen *);
extern typedef unsigned int guint32 gdk_keyval_to_unicode(typedef unsigned
							  int guint);
extern typedef gint gboolean
gdk_event_send_client_message_for_display(GdkDisplay *, GdkEvent *,
					  typedef guint32 GdkNativeWindow);
extern GdkWindow *gdk_window_new(GdkWindow *, GdkWindowAttr *,
				 typedef int gint);
extern void gdk_window_begin_move_drag(GdkWindow *, typedef int gint,
				       typedef int gint, typedef int gint,
				       typedef unsigned int guint32);
extern GdkFont *gdk_fontset_load_for_display(GdkDisplay *,
					     const typedef char gchar *);
extern void gdk_device_get_state(GdkDevice *, GdkWindow *, gdouble *,
				 GdkModifierType *);
extern void gdk_window_destroy(GdkWindow *);
extern typedef gulong GType gdk_wm_function_get_type(void);
extern void gdk_draw_rgb_32_image(GdkDrawable *, GdkGC *, typedef int gint,
				  typedef int gint, typedef int gint,
				  typedef int gint, typedef enum {
				  GDK_RGB_DITHER_NONE,
				  GDK_RGB_DITHER_NORMAL, GDK_RGB_DITHER_MAX
				  }
				  GdkRgbDither, guchar *,
				  typedef int gint);
extern GdkColormap *gdk_colormap_new(GdkVisual *, typedef gint gboolean);
extern void gdk_window_set_background(GdkWindow *, const typedef struct _GdkColor {
				      guint32 pixel;
				      guint16 red;
				      guint16 green; guint16 blue;}
				      GdkColor *);
extern void gdk_display_sync(GdkDisplay *);
extern GdkDragContext *gdk_drag_begin(GdkWindow *, GList *);
extern typedef gint gboolean gdk_event_get_state(GdkEvent *,
						 GdkModifierType *);
extern void gdk_window_configure_finished(GdkWindow *);
extern typedef int gint gdk_display_get_n_screens(GdkDisplay *);
extern typedef int gint gdk_drawable_get_depth(GdkDrawable *);
extern typedef int gint gdk_text_property_to_text_list(typedef struct _GdkAtom
						       *GdkAtom,
						       typedef int gint,
						       const typedef
						       unsigned char guchar
						       *, typedef int gint,
						       gchar * **);
extern void gdk_event_send_clientmessage_toall(GdkEvent *);
extern GdkPixmap *gdk_pixmap_foreign_new_for_display(GdkDisplay *,
						     typedef guint32
						     GdkNativeWindow);
extern typedef gint gboolean gdk_region_equal(GdkRegion *, GdkRegion *);
extern typedef void (*func) (void) gdk_threads_lock(void);
extern void gdk_window_freeze_updates(GdkWindow *);
extern void gdk_image_put_pixel(GdkImage *, typedef int gint,
				typedef int gint,
				typedef unsigned int guint32);
extern typedef gulong GType gdk_status_get_type(void);
extern typedef gint gboolean gdk_window_is_visible(GdkWindow *);
extern GdkFont *gdk_font_from_description_for_display(GdkDisplay *,
						      PangoFontDescription
						      *);
extern void gdk_region_union(GdkRegion *, GdkRegion *);
extern typedef int gint gdk_screen_get_width_mm(GdkScreen *);
extern gchar *gdk_set_locale(void);
extern void gdk_window_set_user_data(GdkWindow *, typedef void *gpointer);
extern void gdk_colormap_free_colors(GdkColormap *, GdkColor *,
				     typedef int gint);
extern struct _GdkDrawable {
    GObject parent_instance;
} *gdk_bitmap_create_from_data(GdkDrawable *, const typedef char gchar *,
			       typedef int gint, typedef int gint);
extern void gdk_drag_find_window(GdkDragContext *, GdkWindow *,
				 typedef int gint, typedef int gint,
				 GdkWindow * *, GdkDragProtocol *);
extern typedef gulong GType gdk_window_type_hint_get_type(void);
extern gchar *gdk_atom_name(typedef struct _GdkAtom
			    *GdkAtom);
extern void gdk_rgb_set_verbose(typedef gint gboolean);
extern void gdk_draw_trapezoids(GdkDrawable *, GdkGC *, GdkTrapezoid *,
				typedef int gint);
extern GdkPixmap *gdk_pixmap_create_from_data(GdkDrawable *,
					      const typedef char gchar *,
					      typedef int gint,
					      typedef int gint,
					      typedef int gint,
					      const typedef struct
					      _GdkColor {
					      guint32 pixel; guint16 red;
					      guint16 green; guint16 blue;}
					      GdkColor *, const typedef struct _GdkColor {
					      guint32 pixel;
					      guint16 red;
					      guint16 green; guint16 blue;}
					      GdkColor *);
extern typedef gint gboolean gdk_window_get_decorations(GdkWindow *,
							GdkWMDecoration *);
extern void gdk_gc_offset(GdkGC *, typedef int gint, typedef int gint);
extern void gdk_draw_rgb_32_image_dithalign(GdkDrawable *, GdkGC *,
					    typedef int gint,
					    typedef int gint,
					    typedef int gint,
					    typedef int gint,
					    typedef enum {
					    GDK_RGB_DITHER_NONE,
					    GDK_RGB_DITHER_NORMAL,
					    GDK_RGB_DITHER_MAX
					    }
					    GdkRgbDither, guchar *,
					    typedef int gint,
					    typedef int gint,
					    typedef int gint);
extern void gdk_x11_register_standard_event_type(GdkDisplay *,
						 typedef int gint,
						 typedef int gint);
extern typedef gulong GType gdk_subwindow_mode_get_type(void);
extern typedef unsigned int guint gdk_keyval_to_lower(typedef unsigned int
						      guint);
extern typedef gint gboolean gdk_display_pointer_is_grabbed(GdkDisplay *);
extern GdkPixmap *gdk_pixmap_lookup_for_display(GdkDisplay *,
						typedef guint32
						GdkNativeWindow);
extern typedef gulong GType gdk_prop_mode_get_type(void);
extern GdkColormap *gdk_x11_colormap_foreign_new(GdkVisual *,
						 typedef XID Colormap);
extern void gdk_window_withdraw(GdkWindow *);
extern void gdk_window_merge_child_shapes(GdkWindow *);
extern typedef gulong GType gdk_font_get_type(void);
extern GdkRegion *gdk_region_polygon(GdkPoint *, typedef int gint, typedef enum {
				     GDK_EVEN_ODD_RULE, GDK_WINDING_RULE
				     }

				     GdkFillRule);
extern void gdk_pango_renderer_set_gc(GdkPangoRenderer *, GdkGC *);
extern const typedef char gchar *gdk_display_get_name(GdkDisplay *);
extern typedef gint gboolean gdk_spawn_on_screen_with_pipes(GdkScreen *,
							    const typedef
							    char gchar *,
							    gchar * *,
							    gchar * *,
							    typedef enum
							    GSpawnFlags,
							    typedef
							    void
							    (*fptr_glib_390)
							    (gpointer)
							    ,
							    typedef void
							    *gpointer,
							    gint *, gint *,
							    gint *, gint *,
							    GError * *);
extern void gdk_window_process_updates(GdkWindow *, typedef gint gboolean);
extern void gdk_draw_rgb_image_dithalign(GdkDrawable *, GdkGC *,
					 typedef int gint,
					 typedef int gint,
					 typedef int gint,
					 typedef int gint, typedef enum {
					 GDK_RGB_DITHER_NONE,
					 GDK_RGB_DITHER_NORMAL,
					 GDK_RGB_DITHER_MAX
					 }
					 GdkRgbDither, guchar *,
					 typedef int gint,
					 typedef int gint,
					 typedef int gint);
extern typedef gint gboolean gdk_event_get_axis(GdkEvent *, typedef enum {
						GDK_AXIS_IGNORE,
						GDK_AXIS_X, GDK_AXIS_Y,
						GDK_AXIS_PRESSURE,
						GDK_AXIS_XTILT,
						GDK_AXIS_YTILT,
						GDK_AXIS_WHEEL,
						GDK_AXIS_LAST
						}

						GdkAxisUse, gdouble *);
extern void gdk_gc_set_rgb_bg_color(GdkGC *, const typedef struct _GdkColor {
				    guint32 pixel;
				    guint16 red;
				    guint16 green; guint16 blue;}
				    GdkColor *);
extern void gdk_gc_set_clip_rectangle(GdkGC *, GdkRectangle *);
extern void gdk_draw_points(GdkDrawable *, GdkGC *, GdkPoint *,
			    typedef int gint);
extern GdkWindow *gdk_window_foreign_new(typedef guint32 GdkNativeWindow);
extern GdkWindow *gdk_window_get_parent(GdkWindow *);
extern typedef gint gboolean gdk_device_get_axis(GdkDevice *, gdouble *, typedef enum {
						 GDK_AXIS_IGNORE,
						 GDK_AXIS_X, GDK_AXIS_Y,
						 GDK_AXIS_PRESSURE,
						 GDK_AXIS_XTILT,
						 GDK_AXIS_YTILT,
						 GDK_AXIS_WHEEL,
						 GDK_AXIS_LAST
						 }

						 GdkAxisUse, gdouble *);
extern void gdk_window_begin_paint_rect(GdkWindow *, GdkRectangle *);
extern GdkPixmap *gdk_pixmap_lookup(typedef guint32 GdkNativeWindow);
extern typedef gint gboolean gdk_region_point_in(GdkRegion *, int, int);
extern void gdk_draw_rectangle(GdkDrawable *, GdkGC *,
			       typedef gint gboolean, typedef int gint,
			       typedef int gint, typedef int gint,
			       typedef int gint);
extern GdkWindow *gdk_window_foreign_new_for_display(GdkDisplay *,
						     typedef guint32
						     GdkNativeWindow);
extern GdkRegion *gdk_region_rectangle(GdkRectangle *);
extern GdkPixbuf *gdk_pixbuf_get_from_image(GdkPixbuf *, GdkImage *,
					    GdkColormap *, int, int, int,
					    int, int, int);
extern GdkVisual *gdk_visual_get_system(void);
extern GdkRegion *gdk_region_new(void);
extern void gdk_drag_find_window_for_screen(GdkDragContext *, GdkWindow *,
					    GdkScreen *, typedef int gint,
					    typedef int gint,
					    GdkWindow * *,
					    GdkDragProtocol *);
extern typedef gulong GType gdk_image_get_type(void);
extern typedef gint gboolean
gdk_display_supports_clipboard_persistence(GdkDisplay *);
extern typedef gulong GType gdk_display_get_type(void);
extern GdkCursor *gdk_cursor_new_for_display(GdkDisplay *, typedef enum {
					     GDK_CURSOR_IS_PIXMAP,
					     GDK_X_CURSOR, GDK_ARROW,
					     GDK_BASED_ARROW_DOWN,
					     GDK_BASED_ARROW_UP, GDK_BOAT,
					     GDK_BOGOSITY,
					     GDK_BOTTOM_LEFT_CORNER,
					     GDK_BOTTOM_RIGHT_CORNER,
					     GDK_BOTTOM_SIDE,
					     GDK_BOTTOM_TEE,
					     GDK_BOX_SPIRAL,
					     GDK_CENTER_PTR, GDK_CIRCLE,
					     GDK_CLOCK, GDK_COFFEE_MUG,
					     GDK_CROSS, GDK_CROSS_REVERSE,
					     GDK_CROSSHAIR,
					     GDK_DIAMOND_CROSS, GDK_DOT,
					     GDK_DOTBOX, GDK_DOUBLE_ARROW,
					     GDK_DRAFT_LARGE,
					     GDK_DRAFT_SMALL,
					     GDK_DRAPED_BOX, GDK_EXCHANGE,
					     GDK_FLEUR, GDK_GOBBLER,
					     GDK_GUMBY, GDK_HAND1,
					     GDK_HAND2, GDK_HEART,
					     GDK_ICON, GDK_IRON_CROSS,
					     GDK_LEFT_PTR, GDK_LEFT_SIDE,
					     GDK_LEFT_TEE, GDK_LEFTBUTTON,
					     GDK_LL_ANGLE, GDK_LR_ANGLE,
					     GDK_MAN, GDK_MIDDLEBUTTON,
					     GDK_MOUSE, GDK_PENCIL,
					     GDK_PIRATE, GDK_PLUS,
					     GDK_QUESTION_ARROW,
					     GDK_RIGHT_PTR, GDK_RIGHT_SIDE,
					     GDK_RIGHT_TEE,
					     GDK_RIGHTBUTTON, GDK_RTL_LOGO,
					     GDK_SAILBOAT,
					     GDK_SB_DOWN_ARROW,
					     GDK_SB_H_DOUBLE_ARROW,
					     GDK_SB_LEFT_ARROW,
					     GDK_SB_RIGHT_ARROW,
					     GDK_SB_UP_ARROW,
					     GDK_SB_V_DOUBLE_ARROW,
					     GDK_SHUTTLE, GDK_SIZING,
					     GDK_SPIDER, GDK_SPRAYCAN,
					     GDK_STAR, GDK_TARGET,
					     GDK_TCROSS,
					     GDK_TOP_LEFT_ARROW,
					     GDK_TOP_LEFT_CORNER,
					     GDK_TOP_RIGHT_CORNER,
					     GDK_TOP_SIDE, GDK_TOP_TEE,
					     GDK_TREK, GDK_UL_ANGLE,
					     GDK_UMBRELLA, GDK_UR_ANGLE,
					     GDK_WATCH, GDK_XTERM,
					     GDK_LAST_CURSOR
					     }

					     GdkCursorType);
extern typedef struct _XGC *GC gdk_x11_gc_get_xgc(GdkGC *);
extern typedef gulong GType gdk_setting_action_get_type(void);
extern typedef int gint gdk_x11_get_default_screen(void);
extern void gdk_window_invalidate_region(GdkWindow *, GdkRegion *,
					 typedef gint gboolean);
extern void gdk_window_set_child_shapes(GdkWindow *);
extern typedef gulong GType gdk_cursor_get_type(void);
extern void gdk_window_move_resize(GdkWindow *, typedef int gint,
				   typedef int gint, typedef int gint,
				   typedef int gint);
extern PangoRenderer *gdk_pango_renderer_new(GdkScreen *);
extern void gdk_free_compound_text(guchar *);
extern GdkScreen *gdk_drawable_get_screen(GdkDrawable *);
extern GdkWindow *gdk_window_lookup(typedef guint32 GdkNativeWindow);
extern void gdk_window_thaw_updates(GdkWindow *);
extern typedef gint gboolean gdk_selection_owner_set(GdkWindow *, typedef struct _GdkAtom
						     *GdkAtom,
						     typedef unsigned int
						     guint32,
						     typedef gint
						     gboolean);
extern typedef gulong GType gdk_drag_action_get_type(void);
extern typedef unsigned int guint32 gdk_image_get_pixel(GdkImage *,
							typedef int gint,
							typedef int gint);
extern void gdk_window_shape_combine_mask(GdkWindow *, GdkBitmap *,
					  typedef int gint,
					  typedef int gint);
</SCREEN>
</SECT2>
<SECT2>
<TITLE>gtk-2.0/gdk/gdkkeysyms.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define GDK_space	0x020
#define GDK_exclam	0x021
#define GDK_quotedbl	0x022
#define GDK_numbersign	0x023
#define GDK_dollar	0x024
#define GDK_percent	0x025
#define GDK_ampersand	0x026
#define GDK_apostrophe	0x027
#define GDK_quoteright	0x027
#define GDK_parenleft	0x028
#define GDK_parenright	0x029
#define GDK_asterisk	0x02a
#define GDK_plus	0x02b
#define GDK_comma	0x02c
#define GDK_minus	0x02d
#define GDK_period	0x02e
#define GDK_slash	0x02f
#define GDK_0	0x030
#define GDK_1	0x031
#define GDK_2	0x032
#define GDK_3	0x033
#define GDK_4	0x034
#define GDK_5	0x035
#define GDK_6	0x036
#define GDK_7	0x037
#define GDK_8	0x038
#define GDK_9	0x039
#define GDK_colon	0x03a
#define GDK_semicolon	0x03b
#define GDK_less	0x03c
#define GDK_equal	0x03d
#define GDK_greater	0x03e
#define GDK_question	0x03f
#define GDK_at	0x040
#define GDK_A	0x041
#define GDK_B	0x042
#define GDK_C	0x043
#define GDK_D	0x044
#define GDK_E	0x045
#define GDK_F	0x046
#define GDK_G	0x047
#define GDK_H	0x048
#define GDK_I	0x049
#define GDK_J	0x04a
#define GDK_K	0x04b
#define GDK_L	0x04c
#define GDK_M	0x04d
#define GDK_N	0x04e
#define GDK_O	0x04f
#define GDK_P	0x050
#define GDK_Q	0x051
#define GDK_R	0x052
#define GDK_S	0x053
#define GDK_T	0x054
#define GDK_U	0x055
#define GDK_V	0x056
#define GDK_W	0x057
#define GDK_X	0x058
#define GDK_Y	0x059
#define GDK_Z	0x05a
#define GDK_bracketleft	0x05b
#define GDK_backslash	0x05c
#define GDK_bracketright	0x05d
#define GDK_asciicircum	0x05e
#define GDK_underscore	0x05f
#define GDK_grave	0x060
#define GDK_quoteleft	0x060
#define GDK_a	0x061
#define GDK_b	0x062
#define GDK_c	0x063
#define GDK_d	0x064
#define GDK_e	0x065
#define GDK_f	0x066
#define GDK_g	0x067
#define GDK_h	0x068
#define GDK_i	0x069
#define GDK_j	0x06a
#define GDK_k	0x06b
#define GDK_l	0x06c
#define GDK_m	0x06d
#define GDK_n	0x06e
#define GDK_o	0x06f
#define GDK_p	0x070
#define GDK_q	0x071
#define GDK_r	0x072
#define GDK_s	0x073
#define GDK_t	0x074
#define GDK_u	0x075
#define GDK_v	0x076
#define GDK_w	0x077
#define GDK_x	0x078
#define GDK_y	0x079
#define GDK_z	0x07a
#define GDK_braceleft	0x07b
#define GDK_bar	0x07c
#define GDK_braceright	0x07d
#define GDK_asciitilde	0x07e
#define GDK_nobreakspace	0x0a0
#define GDK_exclamdown	0x0a1
#define GDK_cent	0x0a2
#define GDK_sterling	0x0a3
#define GDK_currency	0x0a4
#define GDK_yen	0x0a5
#define GDK_brokenbar	0x0a6
#define GDK_section	0x0a7
#define GDK_diaeresis	0x0a8
#define GDK_copyright	0x0a9
#define GDK_ordfeminine	0x0aa
#define GDK_guillemotleft	0x0ab
#define GDK_notsign	0x0ac
#define GDK_hyphen	0x0ad
#define GDK_registered	0x0ae
#define GDK_macron	0x0af
#define GDK_degree	0x0b0
#define GDK_plusminus	0x0b1
#define GDK_twosuperior	0x0b2
#define GDK_threesuperior	0x0b3
#define GDK_acute	0x0b4
#define GDK_mu	0x0b5
#define GDK_paragraph	0x0b6
#define GDK_periodcentered	0x0b7
#define GDK_cedilla	0x0b8
#define GDK_onesuperior	0x0b9
#define GDK_masculine	0x0ba
#define GDK_guillemotright	0x0bb
#define GDK_onequarter	0x0bc
#define GDK_onehalf	0x0bd
#define GDK_threequarters	0x0be
#define GDK_questiondown	0x0bf
#define GDK_Agrave	0x0c0
#define GDK_Aacute	0x0c1
#define GDK_Acircumflex	0x0c2
#define GDK_Atilde	0x0c3
#define GDK_Adiaeresis	0x0c4
#define GDK_Aring	0x0c5
#define GDK_AE	0x0c6
#define GDK_Ccedilla	0x0c7
#define GDK_Egrave	0x0c8
#define GDK_Eacute	0x0c9
#define GDK_Ecircumflex	0x0ca
#define GDK_Ediaeresis	0x0cb
#define GDK_Igrave	0x0cc
#define GDK_Iacute	0x0cd
#define GDK_Icircumflex	0x0ce
#define GDK_Idiaeresis	0x0cf
#define GDK_ETH	0x0d0
#define GDK_Eth	0x0d0
#define GDK_Ntilde	0x0d1
#define GDK_Ograve	0x0d2
#define GDK_Oacute	0x0d3
#define GDK_Ocircumflex	0x0d4
#define GDK_Otilde	0x0d5
#define GDK_Odiaeresis	0x0d6
#define GDK_multiply	0x0d7
#define GDK_Ooblique	0x0d8
#define GDK_Ugrave	0x0d9
#define GDK_Uacute	0x0da
#define GDK_Ucircumflex	0x0db
#define GDK_Udiaeresis	0x0dc
#define GDK_Yacute	0x0dd
#define GDK_THORN	0x0de
#define GDK_Thorn	0x0de
#define GDK_ssharp	0x0df
#define GDK_agrave	0x0e0
#define GDK_aacute	0x0e1
#define GDK_acircumflex	0x0e2
#define GDK_atilde	0x0e3
#define GDK_adiaeresis	0x0e4
#define GDK_aring	0x0e5
#define GDK_ae	0x0e6
#define GDK_ccedilla	0x0e7
#define GDK_egrave	0x0e8
#define GDK_eacute	0x0e9
#define GDK_ecircumflex	0x0ea
#define GDK_ediaeresis	0x0eb
#define GDK_igrave	0x0ec
#define GDK_iacute	0x0ed
#define GDK_icircumflex	0x0ee
#define GDK_idiaeresis	0x0ef
#define GDK_eth	0x0f0
#define GDK_ntilde	0x0f1
#define GDK_ograve	0x0f2
#define GDK_oacute	0x0f3
#define GDK_ocircumflex	0x0f4
#define GDK_otilde	0x0f5
#define GDK_odiaeresis	0x0f6
#define GDK_division	0x0f7
#define GDK_oslash	0x0f8
#define GDK_ugrave	0x0f9
#define GDK_uacute	0x0fa
#define GDK_ucircumflex	0x0fb
#define GDK_udiaeresis	0x0fc
#define GDK_yacute	0x0fd
#define GDK_thorn	0x0fe
#define GDK_ydiaeresis	0x0ff
#define GDK_OE	0x13bc
#define GDK_oe	0x13bd
#define GDK_Ydiaeresis	0x13be
#define GDK_Aogonek	0x1a1
#define GDK_breve	0x1a2
#define GDK_Lstroke	0x1a3
#define GDK_Lcaron	0x1a5
#define GDK_Sacute	0x1a6
#define GDK_Scaron	0x1a9
#define GDK_Scedilla	0x1aa
#define GDK_Tcaron	0x1ab
#define GDK_Zacute	0x1ac
#define GDK_Zcaron	0x1ae
#define GDK_Zabovedot	0x1af
#define GDK_aogonek	0x1b1
#define GDK_ogonek	0x1b2
#define GDK_lstroke	0x1b3
#define GDK_lcaron	0x1b5
#define GDK_sacute	0x1b6
#define GDK_caron	0x1b7
#define GDK_scaron	0x1b9
#define GDK_scedilla	0x1ba
#define GDK_tcaron	0x1bb
#define GDK_zacute	0x1bc
#define GDK_doubleacute	0x1bd
#define GDK_zcaron	0x1be
#define GDK_zabovedot	0x1bf
#define GDK_Racute	0x1c0
#define GDK_Abreve	0x1c3
#define GDK_Lacute	0x1c5
#define GDK_Cacute	0x1c6
#define GDK_Ccaron	0x1c8
#define GDK_Eogonek	0x1ca
#define GDK_Ecaron	0x1cc
#define GDK_Dcaron	0x1cf
#define GDK_Dstroke	0x1d0
#define GDK_Nacute	0x1d1
#define GDK_Ncaron	0x1d2
#define GDK_Odoubleacute	0x1d5
#define GDK_Rcaron	0x1d8
#define GDK_Uring	0x1d9
#define GDK_Udoubleacute	0x1db
#define GDK_Tcedilla	0x1de
#define GDK_racute	0x1e0
#define GDK_abreve	0x1e3
#define GDK_lacute	0x1e5
#define GDK_cacute	0x1e6
#define GDK_ccaron	0x1e8
#define GDK_eogonek	0x1ea
#define GDK_ecaron	0x1ec
#define GDK_dcaron	0x1ef
#define GDK_dstroke	0x1f0
#define GDK_nacute	0x1f1
#define GDK_ncaron	0x1f2
#define GDK_odoubleacute	0x1f5
#define GDK_rcaron	0x1f8
#define GDK_uring	0x1f9
#define GDK_udoubleacute	0x1fb
#define GDK_tcedilla	0x1fe
#define GDK_abovedot	0x1ff
#define GDK_EcuSign	0x20a0
#define GDK_ColonSign	0x20a1
#define GDK_CruzeiroSign	0x20a2
#define GDK_FFrancSign	0x20a3
#define GDK_LiraSign	0x20a4
#define GDK_MillSign	0x20a5
#define GDK_NairaSign	0x20a6
#define GDK_PesetaSign	0x20a7
#define GDK_RupeeSign	0x20a8
#define GDK_WonSign	0x20a9
#define GDK_NewSheqelSign	0x20aa
#define GDK_DongSign	0x20ab
#define GDK_EuroSign	0x20ac
#define GDK_Hstroke	0x2a1
#define GDK_Hcircumflex	0x2a6
#define GDK_Iabovedot	0x2a9
#define GDK_Gbreve	0x2ab
#define GDK_Jcircumflex	0x2ac
#define GDK_hstroke	0x2b1
#define GDK_hcircumflex	0x2b6
#define GDK_idotless	0x2b9
#define GDK_gbreve	0x2bb
#define GDK_jcircumflex	0x2bc
#define GDK_Cabovedot	0x2c5
#define GDK_Ccircumflex	0x2c6
#define GDK_Gabovedot	0x2d5
#define GDK_Gcircumflex	0x2d8
#define GDK_Ubreve	0x2dd
#define GDK_Scircumflex	0x2de
#define GDK_cabovedot	0x2e5
#define GDK_ccircumflex	0x2e6
#define GDK_gabovedot	0x2f5
#define GDK_gcircumflex	0x2f8
#define GDK_ubreve	0x2fd
#define GDK_scircumflex	0x2fe
#define GDK_kappa	0x3a2
#define GDK_kra	0x3a2
#define GDK_Rcedilla	0x3a3
#define GDK_Itilde	0x3a5
#define GDK_Lcedilla	0x3a6
#define GDK_Emacron	0x3aa
#define GDK_Gcedilla	0x3ab
#define GDK_Tslash	0x3ac
#define GDK_rcedilla	0x3b3
#define GDK_itilde	0x3b5
#define GDK_lcedilla	0x3b6
#define GDK_emacron	0x3ba
#define GDK_gcedilla	0x3bb
#define GDK_tslash	0x3bc
#define GDK_ENG	0x3bd
#define GDK_eng	0x3bf
#define GDK_Amacron	0x3c0
#define GDK_Iogonek	0x3c7
#define GDK_Eabovedot	0x3cc
#define GDK_Imacron	0x3cf
#define GDK_Ncedilla	0x3d1
#define GDK_Omacron	0x3d2
#define GDK_Kcedilla	0x3d3
#define GDK_Uogonek	0x3d9
#define GDK_Utilde	0x3dd
#define GDK_Umacron	0x3de
#define GDK_amacron	0x3e0
#define GDK_iogonek	0x3e7
#define GDK_eabovedot	0x3ec
#define GDK_imacron	0x3ef
#define GDK_ncedilla	0x3f1
#define GDK_omacron	0x3f2
#define GDK_kcedilla	0x3f3
#define GDK_uogonek	0x3f9
#define GDK_utilde	0x3fd
#define GDK_umacron	0x3fe
#define GDK_overline	0x47e
#define GDK_kana_fullstop	0x4a1
#define GDK_kana_openingbracket	0x4a2
#define GDK_kana_closingbracket	0x4a3
#define GDK_kana_comma	0x4a4
#define GDK_kana_conjunctive	0x4a5
#define GDK_kana_middledot	0x4a5
#define GDK_kana_WO	0x4a6
#define GDK_kana_a	0x4a7
#define GDK_kana_i	0x4a8
#define GDK_kana_u	0x4a9
#define GDK_kana_e	0x4aa
#define GDK_kana_o	0x4ab
#define GDK_kana_ya	0x4ac
#define GDK_kana_yu	0x4ad
#define GDK_kana_yo	0x4ae
#define GDK_kana_tsu	0x4af
#define GDK_kana_tu	0x4af
#define GDK_prolongedsound	0x4b0
#define GDK_kana_A	0x4b1
#define GDK_kana_I	0x4b2
#define GDK_kana_U	0x4b3
#define GDK_kana_E	0x4b4
#define GDK_kana_O	0x4b5
#define GDK_kana_KA	0x4b6
#define GDK_kana_KI	0x4b7
#define GDK_kana_KU	0x4b8
#define GDK_kana_KE	0x4b9
#define GDK_kana_KO	0x4ba
#define GDK_kana_SA	0x4bb
#define GDK_kana_SHI	0x4bc
#define GDK_kana_SU	0x4bd
#define GDK_kana_SE	0x4be
#define GDK_kana_SO	0x4bf
#define GDK_kana_TA	0x4c0
#define GDK_kana_CHI	0x4c1
#define GDK_kana_TI	0x4c1
#define GDK_kana_TSU	0x4c2
#define GDK_kana_TU	0x4c2
#define GDK_kana_TE	0x4c3
#define GDK_kana_TO	0x4c4
#define GDK_kana_NA	0x4c5
#define GDK_kana_NI	0x4c6
#define GDK_kana_NU	0x4c7
#define GDK_kana_NE	0x4c8
#define GDK_kana_NO	0x4c9
#define GDK_kana_HA	0x4ca
#define GDK_kana_HI	0x4cb
#define GDK_kana_FU	0x4cc
#define GDK_kana_HU	0x4cc
#define GDK_kana_HE	0x4cd
#define GDK_kana_HO	0x4ce
#define GDK_kana_MA	0x4cf
#define GDK_kana_MI	0x4d0
#define GDK_kana_MU	0x4d1
#define GDK_kana_ME	0x4d2
#define GDK_kana_MO	0x4d3
#define GDK_kana_YA	0x4d4
#define GDK_kana_YU	0x4d5
#define GDK_kana_YO	0x4d6
#define GDK_kana_RA	0x4d7
#define GDK_kana_RI	0x4d8
#define GDK_kana_RU	0x4d9
#define GDK_kana_RE	0x4da
#define GDK_kana_RO	0x4db
#define GDK_kana_WA	0x4dc
#define GDK_kana_N	0x4dd
#define GDK_voicedsound	0x4de
#define GDK_semivoicedsound	0x4df
#define GDK_Arabic_comma	0x5ac
#define GDK_Arabic_semicolon	0x5bb
#define GDK_Arabic_question_mark	0x5bf
#define GDK_Arabic_hamza	0x5c1
#define GDK_Arabic_maddaonalef	0x5c2
#define GDK_Arabic_hamzaonalef	0x5c3
#define GDK_Arabic_hamzaonwaw	0x5c4
#define GDK_Arabic_hamzaunderalef	0x5c5
#define GDK_Arabic_hamzaonyeh	0x5c6
#define GDK_Arabic_alef	0x5c7
#define GDK_Arabic_beh	0x5c8
#define GDK_Arabic_tehmarbuta	0x5c9
#define GDK_Arabic_teh	0x5ca
#define GDK_Arabic_theh	0x5cb
#define GDK_Arabic_jeem	0x5cc
#define GDK_Arabic_hah	0x5cd
#define GDK_Arabic_khah	0x5ce
#define GDK_Arabic_dal	0x5cf
#define GDK_Arabic_thal	0x5d0
#define GDK_Arabic_ra	0x5d1
#define GDK_Arabic_zain	0x5d2
#define GDK_Arabic_seen	0x5d3
#define GDK_Arabic_sheen	0x5d4
#define GDK_Arabic_sad	0x5d5
#define GDK_Arabic_dad	0x5d6
#define GDK_Arabic_tah	0x5d7
#define GDK_Arabic_zah	0x5d8
#define GDK_Arabic_ain	0x5d9
#define GDK_Arabic_ghain	0x5da
#define GDK_Arabic_tatweel	0x5e0
#define GDK_Arabic_feh	0x5e1
#define GDK_Arabic_qaf	0x5e2
#define GDK_Arabic_kaf	0x5e3
#define GDK_Arabic_lam	0x5e4
#define GDK_Arabic_meem	0x5e5
#define GDK_Arabic_noon	0x5e6
#define GDK_Arabic_ha	0x5e7
#define GDK_Arabic_heh	0x5e7
#define GDK_Arabic_waw	0x5e8
#define GDK_Arabic_alefmaksura	0x5e9
#define GDK_Arabic_yeh	0x5ea
#define GDK_Arabic_fathatan	0x5eb
#define GDK_Arabic_dammatan	0x5ec
#define GDK_Arabic_kasratan	0x5ed
#define GDK_Arabic_fatha	0x5ee
#define GDK_Arabic_damma	0x5ef
#define GDK_Arabic_kasra	0x5f0
#define GDK_Arabic_shadda	0x5f1
#define GDK_Arabic_sukun	0x5f2
#define GDK_Serbian_dje	0x6a1
#define GDK_Macedonia_gje	0x6a2
#define GDK_Cyrillic_io	0x6a3
#define GDK_Ukrainian_ie	0x6a4
#define GDK_Ukranian_je	0x6a4
#define GDK_Macedonia_dse	0x6a5
#define GDK_Ukrainian_i	0x6a6
#define GDK_Ukranian_i	0x6a6
#define GDK_Ukrainian_yi	0x6a7
#define GDK_Ukranian_yi	0x6a7
#define GDK_Cyrillic_je	0x6a8
#define GDK_Serbian_je	0x6a8
#define GDK_Cyrillic_lje	0x6a9
#define GDK_Serbian_lje	0x6a9
#define GDK_Cyrillic_nje	0x6aa
#define GDK_Serbian_nje	0x6aa
#define GDK_Serbian_tshe	0x6ab
#define GDK_Macedonia_kje	0x6ac
#define GDK_Ukrainian_ghe_with_upturn	0x6ad
#define GDK_Byelorussian_shortu	0x6ae
#define GDK_Cyrillic_dzhe	0x6af
#define GDK_Serbian_dze	0x6af
#define GDK_numerosign	0x6b0
#define GDK_Serbian_DJE	0x6b1
#define GDK_Macedonia_GJE	0x6b2
#define GDK_Cyrillic_IO	0x6b3
#define GDK_Ukrainian_IE	0x6b4
#define GDK_Ukranian_JE	0x6b4
#define GDK_Macedonia_DSE	0x6b5
#define GDK_Ukrainian_I	0x6b6
#define GDK_Ukranian_I	0x6b6
#define GDK_Ukrainian_YI	0x6b7
#define GDK_Ukranian_YI	0x6b7
#define GDK_Cyrillic_JE	0x6b8
#define GDK_Serbian_JE	0x6b8
#define GDK_Cyrillic_LJE	0x6b9
#define GDK_Serbian_LJE	0x6b9
#define GDK_Cyrillic_NJE	0x6ba
#define GDK_Serbian_NJE	0x6ba
#define GDK_Serbian_TSHE	0x6bb
#define GDK_Macedonia_KJE	0x6bc
#define GDK_Ukrainian_GHE_WITH_UPTURN	0x6bd
#define GDK_Byelorussian_SHORTU	0x6be
#define GDK_Cyrillic_DZHE	0x6bf
#define GDK_Serbian_DZE	0x6bf
#define GDK_Cyrillic_yu	0x6c0
#define GDK_Cyrillic_a	0x6c1
#define GDK_Cyrillic_be	0x6c2
#define GDK_Cyrillic_tse	0x6c3
#define GDK_Cyrillic_de	0x6c4
#define GDK_Cyrillic_ie	0x6c5
#define GDK_Cyrillic_ef	0x6c6
#define GDK_Cyrillic_ghe	0x6c7
#define GDK_Cyrillic_ha	0x6c8
#define GDK_Cyrillic_i	0x6c9
#define GDK_Cyrillic_shorti	0x6ca
#define GDK_Cyrillic_ka	0x6cb
#define GDK_Cyrillic_el	0x6cc
#define GDK_Cyrillic_em	0x6cd
#define GDK_Cyrillic_en	0x6ce
#define GDK_Cyrillic_o	0x6cf
#define GDK_Cyrillic_pe	0x6d0
#define GDK_Cyrillic_ya	0x6d1
#define GDK_Cyrillic_er	0x6d2
#define GDK_Cyrillic_es	0x6d3
#define GDK_Cyrillic_te	0x6d4
#define GDK_Cyrillic_u	0x6d5
#define GDK_Cyrillic_zhe	0x6d6
#define GDK_Cyrillic_ve	0x6d7
#define GDK_Cyrillic_softsign	0x6d8
#define GDK_Cyrillic_yeru	0x6d9
#define GDK_Cyrillic_ze	0x6da
#define GDK_Cyrillic_sha	0x6db
#define GDK_Cyrillic_e	0x6dc
#define GDK_Cyrillic_shcha	0x6dd
#define GDK_Cyrillic_che	0x6de
#define GDK_Cyrillic_hardsign	0x6df
#define GDK_Cyrillic_YU	0x6e0
#define GDK_Cyrillic_A	0x6e1
#define GDK_Cyrillic_BE	0x6e2
#define GDK_Cyrillic_TSE	0x6e3
#define GDK_Cyrillic_DE	0x6e4
#define GDK_Cyrillic_IE	0x6e5
#define GDK_Cyrillic_EF	0x6e6
#define GDK_Cyrillic_GHE	0x6e7
#define GDK_Cyrillic_HA	0x6e8
#define GDK_Cyrillic_I	0x6e9
#define GDK_Cyrillic_SHORTI	0x6ea
#define GDK_Cyrillic_KA	0x6eb
#define GDK_Cyrillic_EL	0x6ec
#define GDK_Cyrillic_EM	0x6ed
#define GDK_Cyrillic_EN	0x6ee
#define GDK_Cyrillic_O	0x6ef
#define GDK_Cyrillic_PE	0x6f0
#define GDK_Cyrillic_YA	0x6f1
#define GDK_Cyrillic_ER	0x6f2
#define GDK_Cyrillic_ES	0x6f3
#define GDK_Cyrillic_TE	0x6f4
#define GDK_Cyrillic_U	0x6f5
#define GDK_Cyrillic_ZHE	0x6f6
#define GDK_Cyrillic_VE	0x6f7
#define GDK_Cyrillic_SOFTSIGN	0x6f8
#define GDK_Cyrillic_YERU	0x6f9
#define GDK_Cyrillic_ZE	0x6fa
#define GDK_Cyrillic_SHA	0x6fb
#define GDK_Cyrillic_E	0x6fc
#define GDK_Cyrillic_SHCHA	0x6fd
#define GDK_Cyrillic_CHE	0x6fe
#define GDK_Cyrillic_HARDSIGN	0x6ff
#define GDK_Greek_ALPHAaccent	0x7a1
#define GDK_Greek_EPSILONaccent	0x7a2
#define GDK_Greek_ETAaccent	0x7a3
#define GDK_Greek_IOTAaccent	0x7a4
#define GDK_Greek_IOTAdieresis	0x7a5
#define GDK_Greek_OMICRONaccent	0x7a7
#define GDK_Greek_UPSILONaccent	0x7a8
#define GDK_Greek_UPSILONdieresis	0x7a9
#define GDK_Greek_OMEGAaccent	0x7ab
#define GDK_Greek_accentdieresis	0x7ae
#define GDK_Greek_horizbar	0x7af
#define GDK_Greek_alphaaccent	0x7b1
#define GDK_Greek_epsilonaccent	0x7b2
#define GDK_Greek_etaaccent	0x7b3
#define GDK_Greek_iotaaccent	0x7b4
#define GDK_Greek_iotadieresis	0x7b5
#define GDK_Greek_iotaaccentdieresis	0x7b6
#define GDK_Greek_omicronaccent	0x7b7
#define GDK_Greek_upsilonaccent	0x7b8
#define GDK_Greek_upsilondieresis	0x7b9
#define GDK_Greek_upsilonaccentdieresis	0x7ba
#define GDK_Greek_omegaaccent	0x7bb
#define GDK_Greek_ALPHA	0x7c1
#define GDK_Greek_BETA	0x7c2
#define GDK_Greek_GAMMA	0x7c3
#define GDK_Greek_DELTA	0x7c4
#define GDK_Greek_EPSILON	0x7c5
#define GDK_Greek_ZETA	0x7c6
#define GDK_Greek_ETA	0x7c7
#define GDK_Greek_THETA	0x7c8
#define GDK_Greek_IOTA	0x7c9
#define GDK_Greek_KAPPA	0x7ca
#define GDK_Greek_LAMBDA	0x7cb
#define GDK_Greek_LAMDA	0x7cb
#define GDK_Greek_MU	0x7cc
#define GDK_Greek_NU	0x7cd
#define GDK_Greek_XI	0x7ce
#define GDK_Greek_OMICRON	0x7cf
#define GDK_Greek_PI	0x7d0
#define GDK_Greek_RHO	0x7d1
#define GDK_Greek_SIGMA	0x7d2
#define GDK_Greek_TAU	0x7d4
#define GDK_Greek_UPSILON	0x7d5
#define GDK_Greek_PHI	0x7d6
#define GDK_Greek_CHI	0x7d7
#define GDK_Greek_PSI	0x7d8
#define GDK_Greek_OMEGA	0x7d9
#define GDK_Greek_alpha	0x7e1
#define GDK_Greek_beta	0x7e2
#define GDK_Greek_gamma	0x7e3
#define GDK_Greek_delta	0x7e4
#define GDK_Greek_epsilon	0x7e5
#define GDK_Greek_zeta	0x7e6
#define GDK_Greek_eta	0x7e7
#define GDK_Greek_theta	0x7e8
#define GDK_Greek_iota	0x7e9
#define GDK_Greek_kappa	0x7ea
#define GDK_Greek_lambda	0x7eb
#define GDK_Greek_lamda	0x7eb
#define GDK_Greek_mu	0x7ec
#define GDK_Greek_nu	0x7ed
#define GDK_Greek_xi	0x7ee
#define GDK_Greek_omicron	0x7ef
#define GDK_Greek_pi	0x7f0
#define GDK_Greek_rho	0x7f1
#define GDK_Greek_sigma	0x7f2
#define GDK_Greek_finalsmallsigma	0x7f3
#define GDK_Greek_tau	0x7f4
#define GDK_Greek_upsilon	0x7f5
#define GDK_Greek_phi	0x7f6
#define GDK_Greek_chi	0x7f7
#define GDK_Greek_psi	0x7f8
#define GDK_Greek_omega	0x7f9
#define GDK_leftradical	0x8a1
#define GDK_topleftradical	0x8a2
#define GDK_horizconnector	0x8a3
#define GDK_topintegral	0x8a4
#define GDK_botintegral	0x8a5
#define GDK_vertconnector	0x8a6
#define GDK_topleftsqbracket	0x8a7
#define GDK_botleftsqbracket	0x8a8
#define GDK_toprightsqbracket	0x8a9
#define GDK_botrightsqbracket	0x8aa
#define GDK_topleftparens	0x8ab
#define GDK_botleftparens	0x8ac
#define GDK_toprightparens	0x8ad
#define GDK_botrightparens	0x8ae
#define GDK_leftmiddlecurlybrace	0x8af
#define GDK_rightmiddlecurlybrace	0x8b0
#define GDK_topleftsummation	0x8b1
#define GDK_botleftsummation	0x8b2
#define GDK_topvertsummationconnector	0x8b3
#define GDK_botvertsummationconnector	0x8b4
#define GDK_toprightsummation	0x8b5
#define GDK_botrightsummation	0x8b6
#define GDK_rightmiddlesummation	0x8b7
#define GDK_lessthanequal	0x8bc
#define GDK_notequal	0x8bd
#define GDK_greaterthanequal	0x8be
#define GDK_integral	0x8bf
#define GDK_therefore	0x8c0
#define GDK_variation	0x8c1
#define GDK_infinity	0x8c2
#define GDK_nabla	0x8c5
#define GDK_approximate	0x8c8
#define GDK_similarequal	0x8c9
#define GDK_ifonlyif	0x8cd
#define GDK_implies	0x8ce
#define GDK_identical	0x8cf
#define GDK_radical	0x8d6
#define GDK_includedin	0x8da
#define GDK_includes	0x8db
#define GDK_intersection	0x8dc
#define GDK_union	0x8dd
#define GDK_logicaland	0x8de
#define GDK_logicalor	0x8df
#define GDK_partialderivative	0x8ef
#define GDK_function	0x8f6
#define GDK_leftarrow	0x8fb
#define GDK_uparrow	0x8fc
#define GDK_rightarrow	0x8fd
#define GDK_downarrow	0x8fe
#define GDK_blank	0x9df
#define GDK_soliddiamond	0x9e0
#define GDK_checkerboard	0x9e1
#define GDK_ht	0x9e2
#define GDK_ff	0x9e3
#define GDK_cr	0x9e4
#define GDK_lf	0x9e5
#define GDK_nl	0x9e8
#define GDK_vt	0x9e9
#define GDK_lowrightcorner	0x9ea
#define GDK_uprightcorner	0x9eb
#define GDK_upleftcorner	0x9ec
#define GDK_lowleftcorner	0x9ed
#define GDK_crossinglines	0x9ee
#define GDK_horizlinescan1	0x9ef
#define GDK_horizlinescan3	0x9f0
#define GDK_horizlinescan5	0x9f1
#define GDK_horizlinescan7	0x9f2
#define GDK_horizlinescan9	0x9f3
#define GDK_leftt	0x9f4
#define GDK_rightt	0x9f5
#define GDK_bott	0x9f6
#define GDK_topt	0x9f7
#define GDK_vertbar	0x9f8
#define GDK_emspace	0xaa1
#define GDK_enspace	0xaa2
#define GDK_em3space	0xaa3
#define GDK_em4space	0xaa4
#define GDK_digitspace	0xaa5
#define GDK_punctspace	0xaa6
#define GDK_thinspace	0xaa7
#define GDK_hairspace	0xaa8
#define GDK_emdash	0xaa9
#define GDK_endash	0xaaa
#define GDK_signifblank	0xaac
#define GDK_ellipsis	0xaae
#define GDK_doubbaselinedot	0xaaf
#define GDK_onethird	0xab0
#define GDK_twothirds	0xab1
#define GDK_onefifth	0xab2
#define GDK_twofifths	0xab3
#define GDK_threefifths	0xab4
#define GDK_fourfifths	0xab5
#define GDK_onesixth	0xab6
#define GDK_fivesixths	0xab7
#define GDK_careof	0xab8
#define GDK_figdash	0xabb
#define GDK_leftanglebracket	0xabc
#define GDK_decimalpoint	0xabd
#define GDK_rightanglebracket	0xabe
#define GDK_marker	0xabf
#define GDK_oneeighth	0xac3
#define GDK_threeeighths	0xac4
#define GDK_fiveeighths	0xac5
#define GDK_seveneighths	0xac6
#define GDK_trademark	0xac9
#define GDK_signaturemark	0xaca
#define GDK_trademarkincircle	0xacb
#define GDK_leftopentriangle	0xacc
#define GDK_rightopentriangle	0xacd
#define GDK_emopencircle	0xace
#define GDK_emopenrectangle	0xacf
#define GDK_leftsinglequotemark	0xad0
#define GDK_rightsinglequotemark	0xad1
#define GDK_leftdoublequotemark	0xad2
#define GDK_rightdoublequotemark	0xad3
#define GDK_prescription	0xad4
#define GDK_minutes	0xad6
#define GDK_seconds	0xad7
#define GDK_latincross	0xad9
#define GDK_hexagram	0xada
#define GDK_filledrectbullet	0xadb
#define GDK_filledlefttribullet	0xadc
#define GDK_filledrighttribullet	0xadd
#define GDK_emfilledcircle	0xade
#define GDK_emfilledrect	0xadf
#define GDK_enopencircbullet	0xae0
#define GDK_enopensquarebullet	0xae1
#define GDK_openrectbullet	0xae2
#define GDK_opentribulletup	0xae3
#define GDK_opentribulletdown	0xae4
#define GDK_openstar	0xae5
#define GDK_enfilledcircbullet	0xae6
#define GDK_enfilledsqbullet	0xae7
#define GDK_filledtribulletup	0xae8
#define GDK_filledtribulletdown	0xae9
#define GDK_leftpointer	0xaea
#define GDK_rightpointer	0xaeb
#define GDK_club	0xaec
#define GDK_diamond	0xaed
#define GDK_heart	0xaee
#define GDK_maltesecross	0xaf0
#define GDK_dagger	0xaf1
#define GDK_doubledagger	0xaf2
#define GDK_checkmark	0xaf3
#define GDK_ballotcross	0xaf4
#define GDK_musicalsharp	0xaf5
#define GDK_musicalflat	0xaf6
#define GDK_malesymbol	0xaf7
#define GDK_femalesymbol	0xaf8
#define GDK_telephone	0xaf9
#define GDK_telephonerecorder	0xafa
#define GDK_phonographcopyright	0xafb
#define GDK_caret	0xafc
#define GDK_singlelowquotemark	0xafd
#define GDK_doublelowquotemark	0xafe
#define GDK_cursor	0xaff
#define GDK_leftcaret	0xba3
#define GDK_rightcaret	0xba6
#define GDK_downcaret	0xba8
#define GDK_upcaret	0xba9
#define GDK_overbar	0xbc0
#define GDK_downtack	0xbc2
#define GDK_upshoe	0xbc3
#define GDK_downstile	0xbc4
#define GDK_underbar	0xbc6
#define GDK_jot	0xbca
#define GDK_quad	0xbcc
#define GDK_uptack	0xbce
#define GDK_circle	0xbcf
#define GDK_upstile	0xbd3
#define GDK_downshoe	0xbd6
#define GDK_rightshoe	0xbd8
#define GDK_leftshoe	0xbda
#define GDK_lefttack	0xbdc
#define GDK_righttack	0xbfc
#define GDK_hebrew_doublelowline	0xcdf
#define GDK_hebrew_aleph	0xce0
#define GDK_hebrew_bet	0xce1
#define GDK_hebrew_beth	0xce1
#define GDK_hebrew_gimel	0xce2
#define GDK_hebrew_gimmel	0xce2
#define GDK_hebrew_dalet	0xce3
#define GDK_hebrew_daleth	0xce3
#define GDK_hebrew_he	0xce4
#define GDK_hebrew_waw	0xce5
#define GDK_hebrew_zain	0xce6
#define GDK_hebrew_zayin	0xce6
#define GDK_hebrew_chet	0xce7
#define GDK_hebrew_het	0xce7
#define GDK_hebrew_tet	0xce8
#define GDK_hebrew_teth	0xce8
#define GDK_hebrew_yod	0xce9
#define GDK_hebrew_finalkaph	0xcea
#define GDK_hebrew_kaph	0xceb
#define GDK_hebrew_lamed	0xcec
#define GDK_hebrew_finalmem	0xced
#define GDK_hebrew_mem	0xcee
#define GDK_hebrew_finalnun	0xcef
#define GDK_hebrew_nun	0xcf0
#define GDK_hebrew_samech	0xcf1
#define GDK_hebrew_samekh	0xcf1
#define GDK_hebrew_ayin	0xcf2
#define GDK_hebrew_finalpe	0xcf3
#define GDK_hebrew_pe	0xcf4
#define GDK_hebrew_finalzade	0xcf5
#define GDK_hebrew_finalzadi	0xcf5
#define GDK_hebrew_zade	0xcf6
#define GDK_hebrew_zadi	0xcf6
#define GDK_hebrew_kuf	0xcf7
#define GDK_hebrew_qoph	0xcf7
#define GDK_hebrew_resh	0xcf8
#define GDK_hebrew_shin	0xcf9
#define GDK_hebrew_taf	0xcfa
#define GDK_hebrew_taw	0xcfa
#define GDK_Thai_kokai	0xda1
#define GDK_Thai_khokhai	0xda2
#define GDK_Thai_khokhuat	0xda3
#define GDK_Thai_khokhwai	0xda4
#define GDK_Thai_khokhon	0xda5
#define GDK_Thai_khorakhang	0xda6
#define GDK_Thai_ngongu	0xda7
#define GDK_Thai_chochan	0xda8
#define GDK_Thai_choching	0xda9
#define GDK_Thai_chochang	0xdaa
#define GDK_Thai_soso	0xdab
#define GDK_Thai_chochoe	0xdac
#define GDK_Thai_yoying	0xdad
#define GDK_Thai_dochada	0xdae
#define GDK_Thai_topatak	0xdaf
#define GDK_Thai_thothan	0xdb0
#define GDK_Thai_thonangmontho	0xdb1
#define GDK_Thai_thophuthao	0xdb2
#define GDK_Thai_nonen	0xdb3
#define GDK_Thai_dodek	0xdb4
#define GDK_Thai_totao	0xdb5
#define GDK_Thai_thothung	0xdb6
#define GDK_Thai_thothahan	0xdb7
#define GDK_Thai_thothong	0xdb8
#define GDK_Thai_nonu	0xdb9
#define GDK_Thai_bobaimai	0xdba
#define GDK_Thai_popla	0xdbb
#define GDK_Thai_phophung	0xdbc
#define GDK_Thai_fofa	0xdbd
#define GDK_Thai_phophan	0xdbe
#define GDK_Thai_fofan	0xdbf
#define GDK_Thai_phosamphao	0xdc0
#define GDK_Thai_moma	0xdc1
#define GDK_Thai_yoyak	0xdc2
#define GDK_Thai_rorua	0xdc3
#define GDK_Thai_ru	0xdc4
#define GDK_Thai_loling	0xdc5
#define GDK_Thai_lu	0xdc6
#define GDK_Thai_wowaen	0xdc7
#define GDK_Thai_sosala	0xdc8
#define GDK_Thai_sorusi	0xdc9
#define GDK_Thai_sosua	0xdca
#define GDK_Thai_hohip	0xdcb
#define GDK_Thai_lochula	0xdcc
#define GDK_Thai_oang	0xdcd
#define GDK_Thai_honokhuk	0xdce
#define GDK_Thai_paiyannoi	0xdcf
#define GDK_Thai_saraa	0xdd0
#define GDK_Thai_maihanakat	0xdd1
#define GDK_Thai_saraaa	0xdd2
#define GDK_Thai_saraam	0xdd3
#define GDK_Thai_sarai	0xdd4
#define GDK_Thai_saraii	0xdd5
#define GDK_Thai_saraue	0xdd6
#define GDK_Thai_sarauee	0xdd7
#define GDK_Thai_sarau	0xdd8
#define GDK_Thai_sarauu	0xdd9
#define GDK_Thai_phinthu	0xdda
#define GDK_Thai_maihanakat_maitho	0xdde
#define GDK_Thai_baht	0xddf
#define GDK_Thai_sarae	0xde0
#define GDK_Thai_saraae	0xde1
#define GDK_Thai_sarao	0xde2
#define GDK_Thai_saraaimaimuan	0xde3
#define GDK_Thai_saraaimaimalai	0xde4
#define GDK_Thai_lakkhangyao	0xde5
#define GDK_Thai_maiyamok	0xde6
#define GDK_Thai_maitaikhu	0xde7
#define GDK_Thai_maiek	0xde8
#define GDK_Thai_maitho	0xde9
#define GDK_Thai_maitri	0xdea
#define GDK_Thai_maichattawa	0xdeb
#define GDK_Thai_thanthakhat	0xdec
#define GDK_Thai_nikhahit	0xded
#define GDK_Thai_leksun	0xdf0
#define GDK_Thai_leknung	0xdf1
#define GDK_Thai_leksong	0xdf2
#define GDK_Thai_leksam	0xdf3
#define GDK_Thai_leksi	0xdf4
#define GDK_Thai_lekha	0xdf5
#define GDK_Thai_lekhok	0xdf6
#define GDK_Thai_lekchet	0xdf7
#define GDK_Thai_lekpaet	0xdf8
#define GDK_Thai_lekkao	0xdf9
#define GDK_Hangul_Kiyeog	0xea1
#define GDK_Hangul_SsangKiyeog	0xea2
#define GDK_Hangul_KiyeogSios	0xea3
#define GDK_Hangul_Nieun	0xea4
#define GDK_Hangul_NieunJieuj	0xea5
#define GDK_Hangul_NieunHieuh	0xea6
#define GDK_Hangul_Dikeud	0xea7
#define GDK_Hangul_SsangDikeud	0xea8
#define GDK_Hangul_Rieul	0xea9
#define GDK_Hangul_RieulKiyeog	0xeaa
#define GDK_Hangul_RieulMieum	0xeab
#define GDK_Hangul_RieulPieub	0xeac
#define GDK_Hangul_RieulSios	0xead
#define GDK_Hangul_RieulTieut	0xeae
#define GDK_Hangul_RieulPhieuf	0xeaf
#define GDK_Hangul_RieulHieuh	0xeb0
#define GDK_Hangul_Mieum	0xeb1
#define GDK_Hangul_Pieub	0xeb2
#define GDK_Hangul_SsangPieub	0xeb3
#define GDK_Hangul_PieubSios	0xeb4
#define GDK_Hangul_Sios	0xeb5
#define GDK_Hangul_SsangSios	0xeb6
#define GDK_Hangul_Ieung	0xeb7
#define GDK_Hangul_Jieuj	0xeb8
#define GDK_Hangul_SsangJieuj	0xeb9
#define GDK_Hangul_Cieuc	0xeba
#define GDK_Hangul_Khieuq	0xebb
#define GDK_Hangul_Tieut	0xebc
#define GDK_Hangul_Phieuf	0xebd
#define GDK_Hangul_Hieuh	0xebe
#define GDK_Hangul_A	0xebf
#define GDK_Hangul_AE	0xec0
#define GDK_Hangul_YA	0xec1
#define GDK_Hangul_YAE	0xec2
#define GDK_Hangul_EO	0xec3
#define GDK_Hangul_E	0xec4
#define GDK_Hangul_YEO	0xec5
#define GDK_Hangul_YE	0xec6
#define GDK_Hangul_O	0xec7
#define GDK_Hangul_WA	0xec8
#define GDK_Hangul_WAE	0xec9
#define GDK_Hangul_OE	0xeca
#define GDK_Hangul_YO	0xecb
#define GDK_Hangul_U	0xecc
#define GDK_Hangul_WEO	0xecd
#define GDK_Hangul_WE	0xece
#define GDK_Hangul_WI	0xecf
#define GDK_Hangul_YU	0xed0
#define GDK_Hangul_EU	0xed1
#define GDK_Hangul_YI	0xed2
#define GDK_Hangul_I	0xed3
#define GDK_Hangul_J_Kiyeog	0xed4
#define GDK_Hangul_J_SsangKiyeog	0xed5
#define GDK_Hangul_J_KiyeogSios	0xed6
#define GDK_Hangul_J_Nieun	0xed7
#define GDK_Hangul_J_NieunJieuj	0xed8
#define GDK_Hangul_J_NieunHieuh	0xed9
#define GDK_Hangul_J_Dikeud	0xeda
#define GDK_Hangul_J_Rieul	0xedb
#define GDK_Hangul_J_RieulKiyeog	0xedc
#define GDK_Hangul_J_RieulMieum	0xedd
#define GDK_Hangul_J_RieulPieub	0xede
#define GDK_Hangul_J_RieulSios	0xedf
#define GDK_Hangul_J_RieulTieut	0xee0
#define GDK_Hangul_J_RieulPhieuf	0xee1
#define GDK_Hangul_J_RieulHieuh	0xee2
#define GDK_Hangul_J_Mieum	0xee3
#define GDK_Hangul_J_Pieub	0xee4
#define GDK_Hangul_J_PieubSios	0xee5
#define GDK_Hangul_J_Sios	0xee6
#define GDK_Hangul_J_SsangSios	0xee7
#define GDK_Hangul_J_Ieung	0xee8
#define GDK_Hangul_J_Jieuj	0xee9
#define GDK_Hangul_J_Cieuc	0xeea
#define GDK_Hangul_J_Khieuq	0xeeb
#define GDK_Hangul_J_Tieut	0xeec
#define GDK_Hangul_J_Phieuf	0xeed
#define GDK_Hangul_J_Hieuh	0xeee
#define GDK_Hangul_RieulYeorinHieuh	0xeef
#define GDK_Hangul_SunkyeongeumMieum	0xef0
#define GDK_Hangul_SunkyeongeumPieub	0xef1
#define GDK_Hangul_PanSios	0xef2
#define GDK_Hangul_KkogjiDalrinIeung	0xef3
#define GDK_Hangul_SunkyeongeumPhieuf	0xef4
#define GDK_Hangul_YeorinHieuh	0xef5
#define GDK_Hangul_AraeA	0xef6
#define GDK_Hangul_AraeAE	0xef7
#define GDK_Hangul_J_PanSios	0xef8
#define GDK_Hangul_J_KkogjiDalrinIeung	0xef9
#define GDK_Hangul_J_YeorinHieuh	0xefa
#define GDK_Korean_Won	0xeff
#define GDK_3270_Duplicate	0xFD01
#define GDK_3270_FieldMark	0xFD02
#define GDK_3270_Right2	0xFD03
#define GDK_3270_Left2	0xFD04
#define GDK_3270_BackTab	0xFD05
#define GDK_3270_EraseEOF	0xFD06
#define GDK_3270_EraseInput	0xFD07
#define GDK_3270_Reset	0xFD08
#define GDK_3270_Quit	0xFD09
#define GDK_3270_PA1	0xFD0A
#define GDK_3270_PA2	0xFD0B
#define GDK_3270_PA3	0xFD0C
#define GDK_3270_Test	0xFD0D
#define GDK_3270_Attn	0xFD0E
#define GDK_3270_CursorBlink	0xFD0F
#define GDK_3270_AltCursor	0xFD10
#define GDK_3270_KeyClick	0xFD11
#define GDK_3270_Jump	0xFD12
#define GDK_3270_Ident	0xFD13
#define GDK_3270_Rule	0xFD14
#define GDK_3270_Copy	0xFD15
#define GDK_3270_Play	0xFD16
#define GDK_3270_Setup	0xFD17
#define GDK_3270_Record	0xFD18
#define GDK_3270_ChangeScreen	0xFD19
#define GDK_3270_DeleteWord	0xFD1A
#define GDK_3270_ExSelect	0xFD1B
#define GDK_3270_CursorSelect	0xFD1C
#define GDK_3270_PrintScreen	0xFD1D
#define GDK_3270_Enter	0xFD1E
#define GDK_ISO_Lock	0xFE01
#define GDK_ISO_Level2_Latch	0xFE02
#define GDK_ISO_Level3_Shift	0xFE03
#define GDK_ISO_Level3_Latch	0xFE04
#define GDK_ISO_Level3_Lock	0xFE05
#define GDK_ISO_Group_Latch	0xFE06
#define GDK_ISO_Group_Lock	0xFE07
#define GDK_ISO_Next_Group	0xFE08
#define GDK_ISO_Next_Group_Lock	0xFE09
#define GDK_ISO_Prev_Group	0xFE0A
#define GDK_ISO_Prev_Group_Lock	0xFE0B
#define GDK_ISO_First_Group	0xFE0C
#define GDK_ISO_First_Group_Lock	0xFE0D
#define GDK_ISO_Last_Group	0xFE0E
#define GDK_ISO_Last_Group_Lock	0xFE0F
#define GDK_ISO_Left_Tab	0xFE20
#define GDK_ISO_Move_Line_Up	0xFE21
#define GDK_ISO_Move_Line_Down	0xFE22
#define GDK_ISO_Partial_Line_Up	0xFE23
#define GDK_ISO_Partial_Line_Down	0xFE24
#define GDK_ISO_Partial_Space_Left	0xFE25
#define GDK_ISO_Partial_Space_Right	0xFE26
#define GDK_ISO_Set_Margin_Left	0xFE27
#define GDK_ISO_Set_Margin_Right	0xFE28
#define GDK_ISO_Release_Margin_Left	0xFE29
#define GDK_ISO_Release_Margin_Right	0xFE2A
#define GDK_ISO_Release_Both_Margins	0xFE2B
#define GDK_ISO_Fast_Cursor_Left	0xFE2C
#define GDK_ISO_Fast_Cursor_Right	0xFE2D
#define GDK_ISO_Fast_Cursor_Up	0xFE2E
#define GDK_ISO_Fast_Cursor_Down	0xFE2F
#define GDK_ISO_Continuous_Underline	0xFE30
#define GDK_ISO_Discontinuous_Underline	0xFE31
#define GDK_ISO_Emphasize	0xFE32
#define GDK_ISO_Center_Object	0xFE33
#define GDK_ISO_Enter	0xFE34
#define GDK_dead_grave	0xFE50
#define GDK_dead_acute	0xFE51
#define GDK_dead_circumflex	0xFE52
#define GDK_dead_tilde	0xFE53
#define GDK_dead_macron	0xFE54
#define GDK_dead_breve	0xFE55
#define GDK_dead_abovedot	0xFE56
#define GDK_dead_diaeresis	0xFE57
#define GDK_dead_abovering	0xFE58
#define GDK_dead_doubleacute	0xFE59
#define GDK_dead_caron	0xFE5A
#define GDK_dead_cedilla	0xFE5B
#define GDK_dead_ogonek	0xFE5C
#define GDK_dead_iota	0xFE5D
#define GDK_dead_voiced_sound	0xFE5E
#define GDK_dead_semivoiced_sound	0xFE5F
#define GDK_dead_belowdot	0xFE60
#define GDK_dead_hook	0xFE61
#define GDK_dead_horn	0xFE62
#define GDK_AccessX_Enable	0xFE70
#define GDK_AccessX_Feedback_Enable	0xFE71
#define GDK_RepeatKeys_Enable	0xFE72
#define GDK_SlowKeys_Enable	0xFE73
#define GDK_BounceKeys_Enable	0xFE74
#define GDK_StickyKeys_Enable	0xFE75
#define GDK_MouseKeys_Enable	0xFE76
#define GDK_MouseKeys_Accel_Enable	0xFE77
#define GDK_Overlay1_Enable	0xFE78
#define GDK_Overlay2_Enable	0xFE79
#define GDK_AudibleBell_Enable	0xFE7A
#define GDK_First_Virtual_Screen	0xFED0
#define GDK_Prev_Virtual_Screen	0xFED1
#define GDK_Next_Virtual_Screen	0xFED2
#define GDK_Last_Virtual_Screen	0xFED4
#define GDK_Terminate_Server	0xFED5
#define GDK_Pointer_Left	0xFEE0
#define GDK_Pointer_Right	0xFEE1
#define GDK_Pointer_Up	0xFEE2
#define GDK_Pointer_Down	0xFEE3
#define GDK_Pointer_UpLeft	0xFEE4
#define GDK_Pointer_UpRight	0xFEE5
#define GDK_Pointer_DownLeft	0xFEE6
#define GDK_Pointer_DownRight	0xFEE7
#define GDK_Pointer_Button_Dflt	0xFEE8
#define GDK_Pointer_Button1	0xFEE9
#define GDK_Pointer_Button2	0xFEEA
#define GDK_Pointer_Button3	0xFEEB
#define GDK_Pointer_Button4	0xFEEC
#define GDK_Pointer_Button5	0xFEED
#define GDK_Pointer_DblClick_Dflt	0xFEEE
#define GDK_Pointer_DblClick1	0xFEEF
#define GDK_Pointer_DblClick2	0xFEF0
#define GDK_Pointer_DblClick3	0xFEF1
#define GDK_Pointer_DblClick4	0xFEF2
#define GDK_Pointer_DblClick5	0xFEF3
#define GDK_Pointer_Drag_Dflt	0xFEF4
#define GDK_Pointer_Drag1	0xFEF5
#define GDK_Pointer_Drag2	0xFEF6
#define GDK_Pointer_Drag3	0xFEF7
#define GDK_Pointer_Drag4	0xFEF8
#define GDK_Pointer_EnableKeys	0xFEF9
#define GDK_Pointer_Accelerate	0xFEFA
#define GDK_Pointer_DfltBtnNext	0xFEFB
#define GDK_Pointer_DfltBtnPrev	0xFEFC
#define GDK_Pointer_Drag5	0xFEFD
#define GDK_BackSpace	0xFF08
#define GDK_Tab	0xFF09
#define GDK_Linefeed	0xFF0A
#define GDK_Clear	0xFF0B
#define GDK_Return	0xFF0D
#define GDK_Pause	0xFF13
#define GDK_Scroll_Lock	0xFF14
#define GDK_Sys_Req	0xFF15
#define GDK_Escape	0xFF1B
#define GDK_Multi_key	0xFF20
#define GDK_Kanji	0xFF21
#define GDK_Muhenkan	0xFF22
#define GDK_Henkan	0xFF23
#define GDK_Henkan_Mode	0xFF23
#define GDK_Romaji	0xFF24
#define GDK_Hiragana	0xFF25
#define GDK_Katakana	0xFF26
#define GDK_Hiragana_Katakana	0xFF27
#define GDK_Zenkaku	0xFF28
#define GDK_Hankaku	0xFF29
#define GDK_Zenkaku_Hankaku	0xFF2A
#define GDK_Touroku	0xFF2B
#define GDK_Massyo	0xFF2C
#define GDK_Kana_Lock	0xFF2D
#define GDK_Kana_Shift	0xFF2E
#define GDK_Eisu_Shift	0xFF2F
#define GDK_Eisu_toggle	0xFF30
#define GDK_Hangul	0xff31
#define GDK_Hangul_Start	0xff32
#define GDK_Hangul_End	0xff33
#define GDK_Hangul_Hanja	0xff34
#define GDK_Hangul_Jamo	0xff35
#define GDK_Hangul_Romaja	0xff36
#define GDK_Codeinput	0xFF37
#define GDK_Hangul_Codeinput	0xff37
#define GDK_Kanji_Bangou	0xFF37
#define GDK_Hangul_Jeonja	0xff38
#define GDK_Hangul_Banja	0xff39
#define GDK_Hangul_PreHanja	0xff3a
#define GDK_Hangul_PostHanja	0xff3b
#define GDK_Hangul_SingleCandidate	0xff3c
#define GDK_SingleCandidate	0xFF3C
#define GDK_Hangul_MultipleCandidate	0xff3d
#define GDK_MultipleCandidate	0xFF3D
#define GDK_Zen_Koho	0xFF3D
#define GDK_Hangul_PreviousCandidate	0xff3e
#define GDK_Mae_Koho	0xFF3E
#define GDK_PreviousCandidate	0xFF3E
#define GDK_Hangul_Special	0xff3f
#define GDK_Home	0xFF50
#define GDK_Left	0xFF51
#define GDK_Up	0xFF52
#define GDK_Right	0xFF53
#define GDK_Down	0xFF54
#define GDK_Page_Up	0xFF55
#define GDK_Prior	0xFF55
#define GDK_Next	0xFF56
#define GDK_Page_Down	0xFF56
#define GDK_End	0xFF57
#define GDK_Begin	0xFF58
#define GDK_Select	0xFF60
#define GDK_Print	0xFF61
#define GDK_Execute	0xFF62
#define GDK_Insert	0xFF63
#define GDK_Undo	0xFF65
#define GDK_Redo	0xFF66
#define GDK_Menu	0xFF67
#define GDK_Find	0xFF68
#define GDK_Cancel	0xFF69
#define GDK_Help	0xFF6A
#define GDK_Break	0xFF6B
#define GDK_Arabic_switch	0xFF7E
#define GDK_Greek_switch	0xFF7E
#define GDK_Hangul_switch	0xFF7E
#define GDK_Hebrew_switch	0xFF7E
#define GDK_ISO_Group_Shift	0xFF7E
#define GDK_Mode_switch	0xFF7E
#define GDK_kana_switch	0xFF7E
#define GDK_script_switch	0xFF7E
#define GDK_Num_Lock	0xFF7F
#define GDK_KP_Space	0xFF80
#define GDK_KP_Tab	0xFF89
#define GDK_KP_Enter	0xFF8D
#define GDK_KP_F1	0xFF91
#define GDK_KP_F2	0xFF92
#define GDK_KP_F3	0xFF93
#define GDK_KP_F4	0xFF94
#define GDK_KP_Home	0xFF95
#define GDK_KP_Left	0xFF96
#define GDK_KP_Up	0xFF97
#define GDK_KP_Right	0xFF98
#define GDK_KP_Down	0xFF99
#define GDK_KP_Page_Up	0xFF9A
#define GDK_KP_Prior	0xFF9A
#define GDK_KP_Next	0xFF9B
#define GDK_KP_Page_Down	0xFF9B
#define GDK_KP_End	0xFF9C
#define GDK_KP_Begin	0xFF9D
#define GDK_KP_Insert	0xFF9E
#define GDK_KP_Delete	0xFF9F
#define GDK_KP_Multiply	0xFFAA
#define GDK_KP_Add	0xFFAB
#define GDK_KP_Separator	0xFFAC
#define GDK_KP_Subtract	0xFFAD
#define GDK_KP_Decimal	0xFFAE
#define GDK_KP_Divide	0xFFAF
#define GDK_KP_0	0xFFB0
#define GDK_KP_1	0xFFB1
#define GDK_KP_2	0xFFB2
#define GDK_KP_3	0xFFB3
#define GDK_KP_4	0xFFB4
#define GDK_KP_5	0xFFB5
#define GDK_KP_6	0xFFB6
#define GDK_KP_7	0xFFB7
#define GDK_KP_8	0xFFB8
#define GDK_KP_9	0xFFB9
#define GDK_KP_Equal	0xFFBD
#define GDK_F1	0xFFBE
#define GDK_F2	0xFFBF
#define GDK_F3	0xFFC0
#define GDK_F4	0xFFC1
#define GDK_F5	0xFFC2
#define GDK_F6	0xFFC3
#define GDK_F7	0xFFC4
#define GDK_F8	0xFFC5
#define GDK_F9	0xFFC6
#define GDK_F10	0xFFC7
#define GDK_F11	0xFFC8
#define GDK_L1	0xFFC8
#define GDK_F12	0xFFC9
#define GDK_L2	0xFFC9
#define GDK_F13	0xFFCA
#define GDK_L3	0xFFCA
#define GDK_F14	0xFFCB
#define GDK_L4	0xFFCB
#define GDK_F15	0xFFCC
#define GDK_L5	0xFFCC
#define GDK_F16	0xFFCD
#define GDK_L6	0xFFCD
#define GDK_F17	0xFFCE
#define GDK_L7	0xFFCE
#define GDK_F18	0xFFCF
#define GDK_L8	0xFFCF
#define GDK_F19	0xFFD0
#define GDK_L9	0xFFD0
#define GDK_F20	0xFFD1
#define GDK_L10	0xFFD1
#define GDK_F21	0xFFD2
#define GDK_R1	0xFFD2
#define GDK_F22	0xFFD3
#define GDK_R2	0xFFD3
#define GDK_F23	0xFFD4
#define GDK_R3	0xFFD4
#define GDK_F24	0xFFD5
#define GDK_R4	0xFFD5
#define GDK_F25	0xFFD6
#define GDK_R5	0xFFD6
#define GDK_F26	0xFFD7
#define GDK_R6	0xFFD7
#define GDK_F27	0xFFD8
#define GDK_R7	0xFFD8
#define GDK_F28	0xFFD9
#define GDK_R8	0xFFD9
#define GDK_F29	0xFFDA
#define GDK_R9	0xFFDA
#define GDK_F30	0xFFDB
#define GDK_R10	0xFFDB
#define GDK_F31	0xFFDC
#define GDK_R11	0xFFDC
#define GDK_F32	0xFFDD
#define GDK_R12	0xFFDD
#define GDK_F33	0xFFDE
#define GDK_R13	0xFFDE
#define GDK_F34	0xFFDF
#define GDK_R14	0xFFDF
#define GDK_F35	0xFFE0
#define GDK_R15	0xFFE0
#define GDK_Shift_L	0xFFE1
#define GDK_Shift_R	0xFFE2
#define GDK_Control_L	0xFFE3
#define GDK_Control_R	0xFFE4
#define GDK_Caps_Lock	0xFFE5
#define GDK_Shift_Lock	0xFFE6
#define GDK_Meta_L	0xFFE7
#define GDK_Meta_R	0xFFE8
#define GDK_Alt_L	0xFFE9
#define GDK_Alt_R	0xFFEA
#define GDK_Super_L	0xFFEB
#define GDK_Super_R	0xFFEC
#define GDK_Hyper_L	0xFFED
#define GDK_Hyper_R	0xFFEE
#define GDK_Delete	0xFFFF
#define GDK_VoidSymbol	0xFFFFFF
#define GDK_Greek_IOTAdiaeresis	GDK_Greek_IOTAdieresis
</SCREEN>
</SECT2>
</SECT1>
<!-- End of text generated from database -->
<!--    by $Header: //cvsroot/lsb/lsbspec/mklibspec,v 1.75 2005/10/12 22:24:36 nick Exp 0 -->
