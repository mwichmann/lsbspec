<!-- Start of text generated from database -->
<!-- generated from the LSB specification database -->
<!--    by $Header: /cvsroot/lsb/spec/mklibspec,v 1.21 2001/04/25 23:58:49 anderson Exp 0 -->
<!--    at Thu May  3 22:46:11 2001 -->
<SECT1 ID=libICE>
<TITLE>libICE</TITLE>
<PARA>
</PARA>
<TABLE>
<TITLE></TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Library:</ENTRY>
<ENTRY>libICE</ENTRY>
</ROW>
<ROW>
<ENTRY>Runtime Path:</ENTRY>
<ENTRY>libICE.so.6</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The behaviour of the interfaces in this library is specified by the following Standards.<SIMPLELIST COLUMNS=1>
<MEMBER>
X11R6.4 X Inter-Client Exchange (ICE) Protocol<FOOTNOTE ID="std-19-19">
<PARA>
X11R6.4 X Inter-Client Exchange (ICE) Protocol</PARA>
</FOOTNOTE>
</MEMBER>
</SIMPLELIST>
</PARA>
<SECT2>
<TITLE>ICE Functions</TITLE>
<PARA>
</PARA>
<TABLE>
<TITLE></TITLE>
<TGROUP COLS=5>
<TBODY>
<ROW><ENTRY>IceAcceptConnection<FOOTNOTEREF LINKEND="std-19-19"></ENTRY><ENTRY>IceConnectionStatus<FOOTNOTEREF LINKEND="std-19-19"></ENTRY><ENTRY>IceGetListenConnectionString<FOOTNOTEREF LINKEND="std-19-19"></ENTRY><ENTRY>IceProcessMessages<FOOTNOTEREF LINKEND="std-19-19"></ENTRY><ENTRY>IceSetErrorHandler<FOOTNOTEREF LINKEND="std-19-19"></ENTRY></ROW>
<ROW><ENTRY>IceAddConnectionWatch<FOOTNOTEREF LINKEND="std-19-19"></ENTRY><ENTRY>IceConnectionString<FOOTNOTEREF LINKEND="std-19-19"></ENTRY><ENTRY>IceGetOutBufSize<FOOTNOTEREF LINKEND="std-19-19"></ENTRY><ENTRY>IceProtocolRevision<FOOTNOTEREF LINKEND="std-19-19"></ENTRY><ENTRY>IceSetHostBasedAuthProc<FOOTNOTEREF LINKEND="std-19-19"></ENTRY></ROW>
<ROW><ENTRY>IceAllocScratch<FOOTNOTEREF LINKEND="std-19-19"></ENTRY><ENTRY>IceFlush<FOOTNOTEREF LINKEND="std-19-19"></ENTRY><ENTRY>IceInitThreads<FOOTNOTEREF LINKEND="std-19-19"></ENTRY><ENTRY>IceProtocolSetup<FOOTNOTEREF LINKEND="std-19-19"></ENTRY><ENTRY>IceSetIOErrorHandler<FOOTNOTEREF LINKEND="std-19-19"></ENTRY></ROW>
<ROW><ENTRY>IceAppLockConn<FOOTNOTEREF LINKEND="std-19-19"></ENTRY><ENTRY>IceFreeAuthFileEntry<FOOTNOTEREF LINKEND="std-19-19"></ENTRY><ENTRY>IceLastReceivedSequenceNumber<FOOTNOTEREF LINKEND="std-19-19"></ENTRY><ENTRY>IceProtocolShutdown<FOOTNOTEREF LINKEND="std-19-19"></ENTRY><ENTRY>IceSetPaAuthData<FOOTNOTEREF LINKEND="std-19-19"></ENTRY></ROW>
<ROW><ENTRY>IceAppUnlockConn<FOOTNOTEREF LINKEND="std-19-19"></ENTRY><ENTRY>IceFreeListenObjs<FOOTNOTEREF LINKEND="std-19-19"></ENTRY><ENTRY>IceLastSentSequenceNumber<FOOTNOTEREF LINKEND="std-19-19"></ENTRY><ENTRY>IceProtocolVersion<FOOTNOTEREF LINKEND="std-19-19"></ENTRY><ENTRY>IceSetShutdownNegotiation<FOOTNOTEREF LINKEND="std-19-19"></ENTRY></ROW>
<ROW><ENTRY>IceAuthFileName<FOOTNOTEREF LINKEND="std-19-19"></ENTRY><ENTRY>IceGenerateMagicCookie<FOOTNOTEREF LINKEND="std-19-19"></ENTRY><ENTRY>IceListenForConnections<FOOTNOTEREF LINKEND="std-19-19"></ENTRY><ENTRY>IceReadAuthFileEntry<FOOTNOTEREF LINKEND="std-19-19"></ENTRY><ENTRY>IceSwapping<FOOTNOTEREF LINKEND="std-19-19"></ENTRY></ROW>
<ROW><ENTRY>IceCheckShutdownNegotiation<FOOTNOTEREF LINKEND="std-19-19"></ENTRY><ENTRY>IceGetAuthFileEntry<FOOTNOTEREF LINKEND="std-19-19"></ENTRY><ENTRY>IceListenForWellKnownConnections<FOOTNOTEREF LINKEND="std-19-19"></ENTRY><ENTRY>IceRegisterForProtocolReply<FOOTNOTEREF LINKEND="std-19-19"></ENTRY><ENTRY>IceUnlockAuthFile<FOOTNOTEREF LINKEND="std-19-19"></ENTRY></ROW>
<ROW><ENTRY>IceCloseConnection<FOOTNOTEREF LINKEND="std-19-19"></ENTRY><ENTRY>IceGetConnectionContext<FOOTNOTEREF LINKEND="std-19-19"></ENTRY><ENTRY>IceLockAuthFile<FOOTNOTEREF LINKEND="std-19-19"></ENTRY><ENTRY>IceRegisterForProtocolSetup<FOOTNOTEREF LINKEND="std-19-19"></ENTRY><ENTRY>IceVendor<FOOTNOTEREF LINKEND="std-19-19"></ENTRY></ROW>
<ROW><ENTRY>IceComposeNetworkIdList<FOOTNOTEREF LINKEND="std-19-19"></ENTRY><ENTRY>IceGetInBufSize<FOOTNOTEREF LINKEND="std-19-19"></ENTRY><ENTRY>IceOpenConnection<FOOTNOTEREF LINKEND="std-19-19"></ENTRY><ENTRY>IceRelease<FOOTNOTEREF LINKEND="std-19-19"></ENTRY><ENTRY>IceWriteAuthFileEntry<FOOTNOTEREF LINKEND="std-19-19"></ENTRY></ROW>
<ROW><ENTRY>IceConnectionNumber<FOOTNOTEREF LINKEND="std-19-19"></ENTRY><ENTRY>IceGetListenConnectionNumber<FOOTNOTEREF LINKEND="std-19-19"></ENTRY><ENTRY>IcePing<FOOTNOTEREF LINKEND="std-19-19"></ENTRY><ENTRY>IceRemoveConnectionWatch<FOOTNOTEREF LINKEND="std-19-19"></ENTRY><ENTRY></ENTRY></ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT2>
</SECT1>
<SECT1 ID=libICE-ddefs>
<TITLE> Data Definitions for libICE</TITLE>
<PARA>
</PARA>
<SECT2>
<TITLE>X11/ICE/ICElib.h</TITLE>
<PARA>
</PARA>
<SCREEN>
typedef void *IcePointer;

typedef enum {
    IcePoAuthHaveReply,
    IcePoAuthRejected,
    IcePoAuthFailed,
    IcePoAuthDoneCleanup
} IcePoAuthStatus;

typedef enum {
    IcePaAuthContinue,
    IcePaAuthAccepted,
    IcePaAuthRejected,
    IcePaAuthFailed
} IcePaAuthStatus;

typedef enum {
    IceConnectPending,
    IceConnectAccepted,
    IceConnectRejected,
    IceConnectIOError
} IceConnectStatus;

typedef enum {
    IceProtocolSetupSuccess,
    IceProtocolSetupFailure,
    IceProtocolSetupIOError,
    IceProtocolAlreadyActive
} IceProtocolSetupStatus;

typedef enum {
    IceAcceptSuccess,
    IceAcceptFailure,
    IceAcceptBadMalloc
} IceAcceptStatus;

typedef enum {
    IceClosedNow,
    IceClosedASAP,
    IceConnectionInUse,
    IceStartedShutdownNegotiation
} IceCloseStatus;

typedef enum {
    IceProcessMessagesSuccess,
    IceProcessMessagesIOError,
    IceProcessMessagesConnectionClosed
} IceProcessMessagesStatus;

typedef struct {
    unsigned long sequence_of_request;
    int major_opcode_of_request;
    int minor_opcode_of_request;
    IcePointer reply;
} IceReplyWaitInfo;

typedef struct _IceConn *IceConn;

typedef struct _IceListenObj *IceListenObj;

typedef void (*IceWatchProc) ()
;

typedef void (*IcePoProcessMsgProc) ()
;

typedef void (*IcePaProcessMsgProc) ()
;

typedef IcePoAuthStatus(*IcePoAuthProc) ()
;

typedef IcePaAuthStatus(*IcePaAuthProc) ()
;

typedef int (*IceHostBasedAuthProc) ()
;

typedef int (*IceProtocolSetupProc) ()
;

typedef void (*IceProtocolActivateProc) ()
;

typedef void (*IceIOErrorProc) ()
;

typedef void (*IcePingReplyProc) ()
;

typedef void (*IceErrorHandler) ()
;

typedef void (*IceIOErrorHandler) ()
;

/*
 * 7 Default HeaderGroup for X11/ICE/ICElib.h
 */
typedef struct {
    int major_version;
    int minor_version;
    IcePoProcessMsgProc process_msg_proc;
} IcePoVersionRec;

typedef struct {
    int major_version;
    int minor_version;
    IcePaProcessMsgProc process_msg_proc;
} IcePaVersionRec;


IceConn IceAcceptConnection(IceListenObj, IceAcceptStatus *);
int IceAddConnectionWatch(IceWatchProc, IcePointer);
char *IceAllocScratch(IceConn, unsigned long);
void IceAppLockConn(IceConn);
void IceAppUnlockConn(IceConn);
int IceCheckShutdownNegotiation(IceConn);
IceCloseStatus IceCloseConnection(IceConn);
char *IceComposeNetworkIdList(int, IceListenObj *);
int IceConnectionNumber(IceConn);
IceConnectStatus IceConnectionStatus(IceConn);
char *IceConnectionString(IceConn);
int IceFlush(IceConn);
void IceFreeListenObjs(int, IceListenObj *);
IcePointer IceGetConnectionContext(IceConn);
int IceGetInBufSize(IceConn);
int IceGetListenConnectionNumber(IceListenObj);
char *IceGetListenConnectionString(IceListenObj);
int IceGetOutBufSize(IceConn);
int IceInitThreads(void);
unsigned long IceLastReceivedSequenceNumber(IceConn);
unsigned long IceLastSentSequenceNumber(IceConn);
int IceListenForConnections(int *, IceListenObj * *, int, char *);
int IceListenForWellKnownConnections(char *, int *, IceListenObj * *, int,

				     char *);
IceConn IceOpenConnection(char *, IcePointer, int, int, int, char *);
int IcePing(IceConn, IcePingReplyProc, IcePointer);
IceProcessMessagesStatus IceProcessMessages(IceConn, IceReplyWaitInfo *,

					    int *);
int IceProtocolRevision(IceConn);
IceProtocolSetupStatus IceProtocolSetup(IceConn, int, IcePointer, int,
					int *, int *, char **, char **,
					int, char *);
int IceProtocolShutdown(IceConn, int);
int IceProtocolVersion(IceConn);
int IceRegisterForProtocolReply(char *, char *, char *, int,
				IcePaVersionRec *, int, char **,
				IcePaAuthProc *, IceHostBasedAuthProc,
				IceProtocolSetupProc,
				IceProtocolActivateProc, IceIOErrorProc);
int IceRegisterForProtocolSetup(char *, char *, char *, int,
				IcePoVersionRec *, int, char **,
				IcePoAuthProc *, IceIOErrorProc);
char *IceRelease(IceConn);
void IceRemoveConnectionWatch(IceWatchProc, IcePointer);
IceErrorHandler IceSetErrorHandler(IceErrorHandler);
void IceSetHostBasedAuthProc(IceListenObj, IceHostBasedAuthProc);
IceIOErrorHandler IceSetIOErrorHandler(IceIOErrorHandler);
void IceSetShutdownNegotiation(IceConn, int);
int IceSwapping(IceConn);
char *IceVendor(IceConn);
</SCREEN>
</SECT2>
<SECT2>
<TITLE>X11/ICE/ICEutil.h</TITLE>
<PARA>
</PARA>
<SCREEN>
/*
 * 8 Default HeaderGroup for X11/ICE/ICEutil.h
 */
typedef struct {
    char *protocol_name;
    unsigned short protocol_data_length;
    char *protocol_data;
    char *network_id;
    char *auth_name;
    unsigned short auth_data_length;
    char *auth_data;
} IceAuthFileEntry;

typedef struct {
    char *protocol_name;
    char *network_id;
    char *auth_name;
    unsigned short auth_data_length;
    char *auth_data;
} IceAuthDataEntry;


char *IceAuthFileName(void);
void IceFreeAuthFileEntry(IceAuthFileEntry *);
char *IceGenerateMagicCookie(int);
IceAuthFileEntry *IceGetAuthFileEntry(char *, char *, char *);
int IceLockAuthFile(char *, int, int, long);
IceAuthFileEntry *IceReadAuthFileEntry(FILE *);
void IceSetPaAuthData(int, IceAuthDataEntry *);
void IceUnlockAuthFile(char *);
int IceWriteAuthFileEntry(FILE *, IceAuthFileEntry *);
</SCREEN>
</SECT2>
</SECT1>
<!-- End of text generated from database -->
<!--    by $Header: /cvsroot/lsb/spec/mklibspec,v 1.21 2001/04/25 23:58:49 anderson Exp 0 -->
