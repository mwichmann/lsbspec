<PART ID="tocgraphlib">
<TITLE>Graphic Libraries</TITLE>

<CHAPTER id=graphlib>
<TITLE>Libraries</TITLE>

<PARA>
The X Libraries should be built thread-safe.
</PARA>

<!-- Start of text generated from database -->
<!-- generated from the LSB specification database -->
<!--    by $Header: /cvsroot/lsb/lsbspec/mklibspec,v 1.75 2005/10/12 22:24:36 nick Exp 0 -->
<!--    at Wed Oct 12 18:26:26 2005 -->
<SECT1 ID=libX11>
<TITLE>Interfaces for libX11</TITLE>
<PARA>
<XREF LINKEND="lib-libX11-def"> defines the library name and shared object name
for the libX11 library
</PARA>
<TABLE id="lib-libX11-def">
<TITLE>libX11 Definition</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Library:</ENTRY>
<ENTRY>libX11</ENTRY>
</ROW>
<ROW>
<ENTRY>SONAME:</ENTRY>
<ENTRY>libX11.so.6</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The behavior of the interfaces in this library is specified by the following specifications:<SIMPLELIST COLUMNS=1>
<MEMBER ID='REFSTD.libX11.1'>
[LSB] <XREF LINKEND="std.LSB">
</MEMBER>
<MEMBER ID='REFSTD.libX11.2'>
[Xlib] <XREF LINKEND="std.Xlib">
</MEMBER>
</SIMPLELIST>
</PARA>
<!-- debug: database interface name X Windows System Interface -->
<SECT2>
<!--libgroup-->
<TITLE>X Windows System Interface</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Interfaces for X Windows System Interface</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic functions
for X Windows System Interface specified in <XREF linkend="tbl-libX11-x-w-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<TABLE id="tbl-libX11-x-w-ints">
<TITLE>libX11 - X Windows System Interface Function Interfaces</TITLE>
<TGROUP COLS=4>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>XActivateScreenSaver</primary></indexterm>XActivateScreenSaver <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XAddConnectionWatch</primary></indexterm>XAddConnectionWatch <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XAddExtension</primary></indexterm>XAddExtension <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XAddHost</primary></indexterm>XAddHost <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XAddHosts</primary></indexterm>XAddHosts <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XAddPixel</primary></indexterm>XAddPixel <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XAddToExtensionList</primary></indexterm>XAddToExtensionList <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XAddToSaveSet</primary></indexterm>XAddToSaveSet <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XAllPlanes</primary></indexterm>XAllPlanes <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XAllocClassHint</primary></indexterm>XAllocClassHint <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XAllocColor</primary></indexterm>XAllocColor <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XAllocColorCells</primary></indexterm>XAllocColorCells <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XAllocColorPlanes</primary></indexterm>XAllocColorPlanes <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XAllocIconSize</primary></indexterm>XAllocIconSize <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XAllocNamedColor</primary></indexterm>XAllocNamedColor <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XAllocSizeHints</primary></indexterm>XAllocSizeHints <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XAllocStandardColormap</primary></indexterm>XAllocStandardColormap <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XAllocWMHints</primary></indexterm>XAllocWMHints <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XAllowEvents</primary></indexterm>XAllowEvents <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XAutoRepeatOff</primary></indexterm>XAutoRepeatOff <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XAutoRepeatOn</primary></indexterm>XAutoRepeatOn <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XBaseFontNameListOfFontSet</primary></indexterm>XBaseFontNameListOfFontSet <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XBell</primary></indexterm>XBell <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XBitmapBitOrder</primary></indexterm>XBitmapBitOrder <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XBitmapPad</primary></indexterm>XBitmapPad <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XBitmapUnit</primary></indexterm>XBitmapUnit <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XBlackPixel</primary></indexterm>XBlackPixel <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XBlackPixelOfScreen</primary></indexterm>XBlackPixelOfScreen <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XCellsOfScreen</primary></indexterm>XCellsOfScreen <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XChangeActivePointerGrab</primary></indexterm>XChangeActivePointerGrab <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XChangeGC</primary></indexterm>XChangeGC <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XChangeKeyboardControl</primary></indexterm>XChangeKeyboardControl <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XChangeKeyboardMapping</primary></indexterm>XChangeKeyboardMapping <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XChangePointerControl</primary></indexterm>XChangePointerControl <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XChangeProperty</primary></indexterm>XChangeProperty <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XChangeSaveSet</primary></indexterm>XChangeSaveSet <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XChangeWindowAttributes</primary></indexterm>XChangeWindowAttributes <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XCheckIfEvent</primary></indexterm>XCheckIfEvent <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XCheckMaskEvent</primary></indexterm>XCheckMaskEvent <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XCheckTypedEvent</primary></indexterm>XCheckTypedEvent <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XCheckTypedWindowEvent</primary></indexterm>XCheckTypedWindowEvent <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XCheckWindowEvent</primary></indexterm>XCheckWindowEvent <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XCirculateSubwindows</primary></indexterm>XCirculateSubwindows <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XCirculateSubwindowsDown</primary></indexterm>XCirculateSubwindowsDown <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XCirculateSubwindowsUp</primary></indexterm>XCirculateSubwindowsUp <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XClearArea</primary></indexterm>XClearArea <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XClearWindow</primary></indexterm>XClearWindow <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XClipBox</primary></indexterm>XClipBox <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XCloseDisplay</primary></indexterm>XCloseDisplay <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XCloseIM</primary></indexterm>XCloseIM <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XCloseOM</primary></indexterm>XCloseOM <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XConfigureWindow</primary></indexterm>XConfigureWindow <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XConnectionNumber</primary></indexterm>XConnectionNumber <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XContextDependentDrawing</primary></indexterm>XContextDependentDrawing <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XContextualDrawing</primary></indexterm>XContextualDrawing <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XConvertCase</primary></indexterm>XConvertCase <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XConvertSelection</primary></indexterm>XConvertSelection <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XCopyArea</primary></indexterm>XCopyArea <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XCopyColormapAndFree</primary></indexterm>XCopyColormapAndFree <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XCopyGC</primary></indexterm>XCopyGC <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XCopyPlane</primary></indexterm>XCopyPlane <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XCreateBitmapFromData</primary></indexterm>XCreateBitmapFromData <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XCreateColormap</primary></indexterm>XCreateColormap <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XCreateFontCursor</primary></indexterm>XCreateFontCursor <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XCreateFontSet</primary></indexterm>XCreateFontSet <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XCreateGC</primary></indexterm>XCreateGC <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XCreateGlyphCursor</primary></indexterm>XCreateGlyphCursor <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XCreateIC</primary></indexterm>XCreateIC <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XCreateImage</primary></indexterm>XCreateImage <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XCreateOC</primary></indexterm>XCreateOC <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XCreatePixmap</primary></indexterm>XCreatePixmap <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XCreatePixmapCursor</primary></indexterm>XCreatePixmapCursor <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XCreatePixmapFromBitmapData</primary></indexterm>XCreatePixmapFromBitmapData <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XCreateRegion</primary></indexterm>XCreateRegion <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XCreateSimpleWindow</primary></indexterm>XCreateSimpleWindow <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XCreateWindow</primary></indexterm>XCreateWindow <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XDefaultColormap</primary></indexterm>XDefaultColormap <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XDefaultColormapOfScreen</primary></indexterm>XDefaultColormapOfScreen <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XDefaultDepth</primary></indexterm>XDefaultDepth <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XDefaultDepthOfScreen</primary></indexterm>XDefaultDepthOfScreen <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XDefaultGC</primary></indexterm>XDefaultGC <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XDefaultGCOfScreen</primary></indexterm>XDefaultGCOfScreen <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XDefaultRootWindow</primary></indexterm>XDefaultRootWindow <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XDefaultScreen</primary></indexterm>XDefaultScreen <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XDefaultScreenOfDisplay</primary></indexterm>XDefaultScreenOfDisplay <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XDefaultString</primary></indexterm>XDefaultString <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XDefaultVisual</primary></indexterm>XDefaultVisual <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XDefaultVisualOfScreen</primary></indexterm>XDefaultVisualOfScreen <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XDefineCursor</primary></indexterm>XDefineCursor <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XDeleteContext</primary></indexterm>XDeleteContext <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XDeleteModifiermapEntry</primary></indexterm>XDeleteModifiermapEntry <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XDeleteProperty</primary></indexterm>XDeleteProperty <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XDestroyIC</primary></indexterm>XDestroyIC <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XDestroyImage</primary></indexterm>XDestroyImage <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XDestroyOC</primary></indexterm>XDestroyOC <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XDestroyRegion</primary></indexterm>XDestroyRegion <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XDestroySubwindows</primary></indexterm>XDestroySubwindows <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XDestroyWindow</primary></indexterm>XDestroyWindow <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XDirectionalDependentDrawing</primary></indexterm>XDirectionalDependentDrawing <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XDisableAccessControl</primary></indexterm>XDisableAccessControl <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XDisplayCells</primary></indexterm>XDisplayCells <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XDisplayHeight</primary></indexterm>XDisplayHeight <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XDisplayHeightMM</primary></indexterm>XDisplayHeightMM <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XDisplayKeycodes</primary></indexterm>XDisplayKeycodes <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XDisplayMotionBufferSize</primary></indexterm>XDisplayMotionBufferSize <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XDisplayName</primary></indexterm>XDisplayName <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XDisplayOfIM</primary></indexterm>XDisplayOfIM <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XDisplayOfOM</primary></indexterm>XDisplayOfOM <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XDisplayOfScreen</primary></indexterm>XDisplayOfScreen <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XDisplayPlanes</primary></indexterm>XDisplayPlanes <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XDisplayString</primary></indexterm>XDisplayString <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XDisplayWidth</primary></indexterm>XDisplayWidth <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XDisplayWidthMM</primary></indexterm>XDisplayWidthMM <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XDoesBackingStore</primary></indexterm>XDoesBackingStore <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XDoesSaveUnders</primary></indexterm>XDoesSaveUnders <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XDrawArc</primary></indexterm>XDrawArc <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XDrawArcs</primary></indexterm>XDrawArcs <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XDrawImageString</primary></indexterm>XDrawImageString <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XDrawImageString16</primary></indexterm>XDrawImageString16 <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XDrawLine</primary></indexterm>XDrawLine <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XDrawLines</primary></indexterm>XDrawLines <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XDrawPoint</primary></indexterm>XDrawPoint <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XDrawPoints</primary></indexterm>XDrawPoints <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XDrawRectangle</primary></indexterm>XDrawRectangle <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XDrawRectangles</primary></indexterm>XDrawRectangles <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XDrawSegments</primary></indexterm>XDrawSegments <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XDrawString</primary></indexterm>XDrawString <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XDrawString16</primary></indexterm>XDrawString16 <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XDrawText</primary></indexterm>XDrawText <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XDrawText16</primary></indexterm>XDrawText16 <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XEHeadOfExtensionList</primary></indexterm>XEHeadOfExtensionList <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XESetBeforeFlush</primary></indexterm>XESetBeforeFlush <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XESetCloseDisplay</primary></indexterm>XESetCloseDisplay <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XESetCopyGC</primary></indexterm>XESetCopyGC <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XESetCreateFont</primary></indexterm>XESetCreateFont <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XESetCreateGC</primary></indexterm>XESetCreateGC <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XESetError</primary></indexterm>XESetError <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XESetErrorString</primary></indexterm>XESetErrorString <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XESetEventToWire</primary></indexterm>XESetEventToWire <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XESetFlushGC</primary></indexterm>XESetFlushGC <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XESetFreeFont</primary></indexterm>XESetFreeFont <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XESetFreeGC</primary></indexterm>XESetFreeGC <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XESetPrintErrorValues</primary></indexterm>XESetPrintErrorValues <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XESetWireToError</primary></indexterm>XESetWireToError <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XESetWireToEvent</primary></indexterm>XESetWireToEvent <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XEmptyRegion</primary></indexterm>XEmptyRegion <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XEnableAccessControl</primary></indexterm>XEnableAccessControl <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XEqualRegion</primary></indexterm>XEqualRegion <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XEventMaskOfScreen</primary></indexterm>XEventMaskOfScreen <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XEventsQueued</primary></indexterm>XEventsQueued <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XExtendedMaxRequestSize</primary></indexterm>XExtendedMaxRequestSize <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XExtentsOfFontSet</primary></indexterm>XExtentsOfFontSet <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XFetchBuffer</primary></indexterm>XFetchBuffer <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XFetchBytes</primary></indexterm>XFetchBytes <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XFetchName</primary></indexterm>XFetchName <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XFillArc</primary></indexterm>XFillArc <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XFillArcs</primary></indexterm>XFillArcs <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XFillPolygon</primary></indexterm>XFillPolygon <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XFillRectangle</primary></indexterm>XFillRectangle <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XFillRectangles</primary></indexterm>XFillRectangles <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XFilterEvent</primary></indexterm>XFilterEvent <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XFindContext</primary></indexterm>XFindContext <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XFindOnExtensionList</primary></indexterm>XFindOnExtensionList <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XFlush</primary></indexterm>XFlush <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XFlushGC</primary></indexterm>XFlushGC <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XFontsOfFontSet</primary></indexterm>XFontsOfFontSet <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XForceScreenSaver</primary></indexterm>XForceScreenSaver <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XFree</primary></indexterm>XFree <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XFreeColormap</primary></indexterm>XFreeColormap <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XFreeColors</primary></indexterm>XFreeColors <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XFreeCursor</primary></indexterm>XFreeCursor <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XFreeExtensionList</primary></indexterm>XFreeExtensionList <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XFreeFont</primary></indexterm>XFreeFont <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XFreeFontInfo</primary></indexterm>XFreeFontInfo <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XFreeFontNames</primary></indexterm>XFreeFontNames <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XFreeFontPath</primary></indexterm>XFreeFontPath <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XFreeFontSet</primary></indexterm>XFreeFontSet <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XFreeGC</primary></indexterm>XFreeGC <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XFreeModifiermap</primary></indexterm>XFreeModifiermap <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XFreePixmap</primary></indexterm>XFreePixmap <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XFreeStringList</primary></indexterm>XFreeStringList <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XGContextFromGC</primary></indexterm>XGContextFromGC <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XGeometry</primary></indexterm>XGeometry <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XGetAtomName</primary></indexterm>XGetAtomName <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XGetAtomNames</primary></indexterm>XGetAtomNames <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XGetClassHint</primary></indexterm>XGetClassHint <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XGetCommand</primary></indexterm>XGetCommand <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XGetDefault</primary></indexterm>XGetDefault <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XGetErrorDatabaseText</primary></indexterm>XGetErrorDatabaseText <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XGetErrorText</primary></indexterm>XGetErrorText <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XGetFontPath</primary></indexterm>XGetFontPath <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XGetFontProperty</primary></indexterm>XGetFontProperty <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XGetGCValues</primary></indexterm>XGetGCValues <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XGetGeometry</primary></indexterm>XGetGeometry <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XGetICValues</primary></indexterm>XGetICValues <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XGetIMValues</primary></indexterm>XGetIMValues <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XGetIconName</primary></indexterm>XGetIconName <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XGetIconSizes</primary></indexterm>XGetIconSizes <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XGetImage</primary></indexterm>XGetImage <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XGetInputFocus</primary></indexterm>XGetInputFocus <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XGetKeyboardControl</primary></indexterm>XGetKeyboardControl <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XGetKeyboardMapping</primary></indexterm>XGetKeyboardMapping <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XGetModifierMapping</primary></indexterm>XGetModifierMapping <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XGetMotionEvents</primary></indexterm>XGetMotionEvents <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XGetNormalHints</primary></indexterm>XGetNormalHints <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XGetOCValues</primary></indexterm>XGetOCValues <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XGetOMValues</primary></indexterm>XGetOMValues <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XGetPixel</primary></indexterm>XGetPixel <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XGetPointerControl</primary></indexterm>XGetPointerControl <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XGetPointerMapping</primary></indexterm>XGetPointerMapping <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XGetRGBColormaps</primary></indexterm>XGetRGBColormaps <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XGetScreenSaver</primary></indexterm>XGetScreenSaver <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XGetSelectionOwner</primary></indexterm>XGetSelectionOwner <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XGetSizeHints</primary></indexterm>XGetSizeHints <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XGetStandardColormap</primary></indexterm>XGetStandardColormap <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XGetSubImage</primary></indexterm>XGetSubImage <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XGetTextProperty</primary></indexterm>XGetTextProperty <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XGetTransientForHint</primary></indexterm>XGetTransientForHint <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XGetVisualInfo</primary></indexterm>XGetVisualInfo <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XGetWMClientMachine</primary></indexterm>XGetWMClientMachine <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XGetWMColormapWindows</primary></indexterm>XGetWMColormapWindows <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XGetWMHints</primary></indexterm>XGetWMHints <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XGetWMIconName</primary></indexterm>XGetWMIconName <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XGetWMName</primary></indexterm>XGetWMName <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XGetWMNormalHints</primary></indexterm>XGetWMNormalHints <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XGetWMProtocols</primary></indexterm>XGetWMProtocols <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XGetWMSizeHints</primary></indexterm>XGetWMSizeHints <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XGetWindowAttributes</primary></indexterm>XGetWindowAttributes <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XGetWindowProperty</primary></indexterm>XGetWindowProperty <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XGetZoomHints</primary></indexterm>XGetZoomHints <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XGrabButton</primary></indexterm>XGrabButton <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XGrabKey</primary></indexterm>XGrabKey <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XGrabKeyboard</primary></indexterm>XGrabKeyboard <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XGrabPointer</primary></indexterm>XGrabPointer <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XGrabServer</primary></indexterm>XGrabServer <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XHeightMMOfScreen</primary></indexterm>XHeightMMOfScreen <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XHeightOfScreen</primary></indexterm>XHeightOfScreen <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XIMOfIC</primary></indexterm>XIMOfIC <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XIconifyWindow</primary></indexterm>XIconifyWindow <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XIfEvent</primary></indexterm>XIfEvent <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XImageByteOrder</primary></indexterm>XImageByteOrder <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XInitExtension</primary></indexterm>XInitExtension <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XInitImage</primary></indexterm>XInitImage <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XInitThreads</primary></indexterm>XInitThreads <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XInsertModifiermapEntry</primary></indexterm>XInsertModifiermapEntry <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XInstallColormap</primary></indexterm>XInstallColormap <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XInternAtom</primary></indexterm>XInternAtom <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XInternAtoms</primary></indexterm>XInternAtoms <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XInternalConnectionNumbers</primary></indexterm>XInternalConnectionNumbers <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XIntersectRegion</primary></indexterm>XIntersectRegion <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XKeycodeToKeysym</primary></indexterm>XKeycodeToKeysym <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XKeysymToKeycode</primary></indexterm>XKeysymToKeycode <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XKeysymToString</primary></indexterm>XKeysymToString <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XKillClient</primary></indexterm>XKillClient <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XLastKnownRequestProcessed</primary></indexterm>XLastKnownRequestProcessed <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XListDepths</primary></indexterm>XListDepths <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XListExtensions</primary></indexterm>XListExtensions <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XListFonts</primary></indexterm>XListFonts <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XListFontsWithInfo</primary></indexterm>XListFontsWithInfo <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XListHosts</primary></indexterm>XListHosts <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XListInstalledColormaps</primary></indexterm>XListInstalledColormaps <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XListPixmapFormats</primary></indexterm>XListPixmapFormats <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XListProperties</primary></indexterm>XListProperties <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XLoadFont</primary></indexterm>XLoadFont <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XLoadQueryFont</primary></indexterm>XLoadQueryFont <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XLocaleOfFontSet</primary></indexterm>XLocaleOfFontSet <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XLocaleOfIM</primary></indexterm>XLocaleOfIM <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XLocaleOfOM</primary></indexterm>XLocaleOfOM <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XLockDisplay</primary></indexterm>XLockDisplay <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XLookupColor</primary></indexterm>XLookupColor <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XLookupKeysym</primary></indexterm>XLookupKeysym <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XLookupString</primary></indexterm>XLookupString <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XLowerWindow</primary></indexterm>XLowerWindow <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XMapRaised</primary></indexterm>XMapRaised <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XMapSubwindows</primary></indexterm>XMapSubwindows <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XMapWindow</primary></indexterm>XMapWindow <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XMaskEvent</primary></indexterm>XMaskEvent <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XMatchVisualInfo</primary></indexterm>XMatchVisualInfo <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XMaxCmapsOfScreen</primary></indexterm>XMaxCmapsOfScreen <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XMaxRequestSize</primary></indexterm>XMaxRequestSize <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XMinCmapsOfScreen</primary></indexterm>XMinCmapsOfScreen <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XMoveResizeWindow</primary></indexterm>XMoveResizeWindow <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XMoveWindow</primary></indexterm>XMoveWindow <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XNewModifiermap</primary></indexterm>XNewModifiermap <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XNextEvent</primary></indexterm>XNextEvent <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XNextRequest</primary></indexterm>XNextRequest <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XNoOp</primary></indexterm>XNoOp <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XOMOfOC</primary></indexterm>XOMOfOC <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XOffsetRegion</primary></indexterm>XOffsetRegion <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XOpenDisplay</primary></indexterm>XOpenDisplay <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XOpenIM</primary></indexterm>XOpenIM <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XOpenOM</primary></indexterm>XOpenOM <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XParseColor</primary></indexterm>XParseColor <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XParseGeometry</primary></indexterm>XParseGeometry <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XPeekEvent</primary></indexterm>XPeekEvent <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XPeekIfEvent</primary></indexterm>XPeekIfEvent <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XPending</primary></indexterm>XPending <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XPlanesOfScreen</primary></indexterm>XPlanesOfScreen <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XPointInRegion</primary></indexterm>XPointInRegion <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XPolygonRegion</primary></indexterm>XPolygonRegion <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XProcessInternalConnection</primary></indexterm>XProcessInternalConnection <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XProtocolRevision</primary></indexterm>XProtocolRevision <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XProtocolVersion</primary></indexterm>XProtocolVersion <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XPutBackEvent</primary></indexterm>XPutBackEvent <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XPutImage</primary></indexterm>XPutImage <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XPutPixel</primary></indexterm>XPutPixel <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XQLength</primary></indexterm>XQLength <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XQueryBestCursor</primary></indexterm>XQueryBestCursor <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XQueryBestSize</primary></indexterm>XQueryBestSize <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XQueryBestStipple</primary></indexterm>XQueryBestStipple <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XQueryBestTile</primary></indexterm>XQueryBestTile <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XQueryColor</primary></indexterm>XQueryColor <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XQueryColors</primary></indexterm>XQueryColors <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XQueryExtension</primary></indexterm>XQueryExtension <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XQueryFont</primary></indexterm>XQueryFont <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XQueryKeymap</primary></indexterm>XQueryKeymap <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XQueryPointer</primary></indexterm>XQueryPointer <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XQueryTextExtents</primary></indexterm>XQueryTextExtents <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XQueryTextExtents16</primary></indexterm>XQueryTextExtents16 <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XQueryTree</primary></indexterm>XQueryTree <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XRaiseWindow</primary></indexterm>XRaiseWindow <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XReadBitmapFile</primary></indexterm>XReadBitmapFile <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XReadBitmapFileData</primary></indexterm>XReadBitmapFileData <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XRebindKeysym</primary></indexterm>XRebindKeysym <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XRecolorCursor</primary></indexterm>XRecolorCursor <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XReconfigureWMWindow</primary></indexterm>XReconfigureWMWindow <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XRectInRegion</primary></indexterm>XRectInRegion <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XRefreshKeyboardMapping</primary></indexterm>XRefreshKeyboardMapping <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XRegisterIMInstantiateCallback</primary></indexterm>XRegisterIMInstantiateCallback <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XRemoveConnectionWatch</primary></indexterm>XRemoveConnectionWatch <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XRemoveFromSaveSet</primary></indexterm>XRemoveFromSaveSet <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XRemoveHost</primary></indexterm>XRemoveHost <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XRemoveHosts</primary></indexterm>XRemoveHosts <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XReparentWindow</primary></indexterm>XReparentWindow <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XResetScreenSaver</primary></indexterm>XResetScreenSaver <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XResizeWindow</primary></indexterm>XResizeWindow <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XResourceManagerString</primary></indexterm>XResourceManagerString <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XRestackWindows</primary></indexterm>XRestackWindows <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XRootWindow</primary></indexterm>XRootWindow <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XRootWindowOfScreen</primary></indexterm>XRootWindowOfScreen <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XRotateBuffers</primary></indexterm>XRotateBuffers <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XRotateWindowProperties</primary></indexterm>XRotateWindowProperties <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XSaveContext</primary></indexterm>XSaveContext <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XScreenCount</primary></indexterm>XScreenCount <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XScreenNumberOfScreen</primary></indexterm>XScreenNumberOfScreen <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XScreenOfDisplay</primary></indexterm>XScreenOfDisplay <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XScreenResourceString</primary></indexterm>XScreenResourceString <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XSelectInput</primary></indexterm>XSelectInput <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XSendEvent</primary></indexterm>XSendEvent <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XServerVendor</primary></indexterm>XServerVendor <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XSetAccessControl</primary></indexterm>XSetAccessControl <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XSetArcMode</primary></indexterm>XSetArcMode <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XSetAuthorization</primary></indexterm>XSetAuthorization <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XSetBackground</primary></indexterm>XSetBackground <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XSetClassHint</primary></indexterm>XSetClassHint <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XSetClipMask</primary></indexterm>XSetClipMask <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XSetClipOrigin</primary></indexterm>XSetClipOrigin <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XSetClipRectangles</primary></indexterm>XSetClipRectangles <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XSetCloseDownMode</primary></indexterm>XSetCloseDownMode <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XSetCommand</primary></indexterm>XSetCommand <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XSetDashes</primary></indexterm>XSetDashes <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XSetErrorHandler</primary></indexterm>XSetErrorHandler <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XSetFillRule</primary></indexterm>XSetFillRule <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XSetFillStyle</primary></indexterm>XSetFillStyle <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XSetFont</primary></indexterm>XSetFont <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XSetFontPath</primary></indexterm>XSetFontPath <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XSetForeground</primary></indexterm>XSetForeground <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XSetFunction</primary></indexterm>XSetFunction <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XSetGraphicsExposures</primary></indexterm>XSetGraphicsExposures <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XSetICFocus</primary></indexterm>XSetICFocus <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XSetICValues</primary></indexterm>XSetICValues <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XSetIMValues</primary></indexterm>XSetIMValues <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XSetIOErrorHandler</primary></indexterm>XSetIOErrorHandler <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XSetIconName</primary></indexterm>XSetIconName <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XSetIconSizes</primary></indexterm>XSetIconSizes <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XSetInputFocus</primary></indexterm>XSetInputFocus <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XSetLineAttributes</primary></indexterm>XSetLineAttributes <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XSetLocaleModifiers</primary></indexterm>XSetLocaleModifiers <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XSetModifierMapping</primary></indexterm>XSetModifierMapping <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XSetNormalHints</primary></indexterm>XSetNormalHints <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XSetOCValues</primary></indexterm>XSetOCValues <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XSetOMValues</primary></indexterm>XSetOMValues <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XSetPlaneMask</primary></indexterm>XSetPlaneMask <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XSetPointerMapping</primary></indexterm>XSetPointerMapping <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XSetRGBColormaps</primary></indexterm>XSetRGBColormaps <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XSetRegion</primary></indexterm>XSetRegion <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XSetScreenSaver</primary></indexterm>XSetScreenSaver <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XSetSelectionOwner</primary></indexterm>XSetSelectionOwner <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XSetSizeHints</primary></indexterm>XSetSizeHints <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XSetStandardColormap</primary></indexterm>XSetStandardColormap <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XSetStandardProperties</primary></indexterm>XSetStandardProperties <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XSetState</primary></indexterm>XSetState <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XSetStipple</primary></indexterm>XSetStipple <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XSetSubwindowMode</primary></indexterm>XSetSubwindowMode <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XSetTSOrigin</primary></indexterm>XSetTSOrigin <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XSetTextProperty</primary></indexterm>XSetTextProperty <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XSetTile</primary></indexterm>XSetTile <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XSetTransientForHint</primary></indexterm>XSetTransientForHint <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XSetWMClientMachine</primary></indexterm>XSetWMClientMachine <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XSetWMColormapWindows</primary></indexterm>XSetWMColormapWindows <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XSetWMHints</primary></indexterm>XSetWMHints <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XSetWMIconName</primary></indexterm>XSetWMIconName <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XSetWMName</primary></indexterm>XSetWMName <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XSetWMNormalHints</primary></indexterm>XSetWMNormalHints <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XSetWMProperties</primary></indexterm>XSetWMProperties <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XSetWMProtocols</primary></indexterm>XSetWMProtocols <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XSetWMSizeHints</primary></indexterm>XSetWMSizeHints <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XSetWindowBackground</primary></indexterm>XSetWindowBackground <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XSetWindowBackgroundPixmap</primary></indexterm>XSetWindowBackgroundPixmap <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XSetWindowBorder</primary></indexterm>XSetWindowBorder <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XSetWindowBorderPixmap</primary></indexterm>XSetWindowBorderPixmap <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XSetWindowBorderWidth</primary></indexterm>XSetWindowBorderWidth <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XSetWindowColormap</primary></indexterm>XSetWindowColormap <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XSetZoomHints</primary></indexterm>XSetZoomHints <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XShrinkRegion</primary></indexterm>XShrinkRegion <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XStoreBuffer</primary></indexterm>XStoreBuffer <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XStoreBytes</primary></indexterm>XStoreBytes <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XStoreColor</primary></indexterm>XStoreColor <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XStoreColors</primary></indexterm>XStoreColors <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XStoreName</primary></indexterm>XStoreName <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XStoreNamedColor</primary></indexterm>XStoreNamedColor <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XStringListToTextProperty</primary></indexterm>XStringListToTextProperty <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XStringToKeysym</primary></indexterm>XStringToKeysym <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XSubImage</primary></indexterm>XSubImage <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XSubtractRegion</primary></indexterm>XSubtractRegion <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XSupportsLocale</primary></indexterm>XSupportsLocale <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XSync</primary></indexterm>XSync <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XTextExtents</primary></indexterm>XTextExtents <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XTextExtents16</primary></indexterm>XTextExtents16 <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XTextPropertyToStringList</primary></indexterm>XTextPropertyToStringList <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XTextWidth</primary></indexterm>XTextWidth <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XTextWidth16</primary></indexterm>XTextWidth16 <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XTranslateCoordinates</primary></indexterm>XTranslateCoordinates <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XUndefineCursor</primary></indexterm>XUndefineCursor <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XUngrabButton</primary></indexterm>XUngrabButton <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XUngrabKey</primary></indexterm>XUngrabKey <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XUngrabKeyboard</primary></indexterm>XUngrabKeyboard <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XUngrabPointer</primary></indexterm>XUngrabPointer <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XUngrabServer</primary></indexterm>XUngrabServer <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XUninstallColormap</primary></indexterm>XUninstallColormap <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XUnionRectWithRegion</primary></indexterm>XUnionRectWithRegion <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XUnionRegion</primary></indexterm>XUnionRegion <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XUnloadFont</primary></indexterm>XUnloadFont <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XUnlockDisplay</primary></indexterm>XUnlockDisplay <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XUnmapSubwindows</primary></indexterm>XUnmapSubwindows <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XUnmapWindow</primary></indexterm>XUnmapWindow <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XUnregisterIMInstantiateCallback</primary></indexterm>XUnregisterIMInstantiateCallback <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XUnsetICFocus</primary></indexterm>XUnsetICFocus <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XVaCreateNestedList</primary></indexterm>XVaCreateNestedList <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XVendorRelease</primary></indexterm>XVendorRelease <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XVisualIDFromVisual</primary></indexterm>XVisualIDFromVisual <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XWMGeometry</primary></indexterm>XWMGeometry <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XWarpPointer</primary></indexterm>XWarpPointer <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XWhitePixel</primary></indexterm>XWhitePixel <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XWhitePixelOfScreen</primary></indexterm>XWhitePixelOfScreen <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XWidthMMOfScreen</primary></indexterm>XWidthMMOfScreen <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XWidthOfScreen</primary></indexterm>XWidthOfScreen <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XWindowEvent</primary></indexterm>XWindowEvent <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XWithdrawWindow</primary></indexterm>XWithdrawWindow <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XWriteBitmapFile</primary></indexterm>XWriteBitmapFile <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XXorRegion</primary></indexterm>XXorRegion <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XauDisposeAuth</primary></indexterm>XauDisposeAuth <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XauFileName</primary></indexterm>XauFileName <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XauGetBestAuthByAddr</primary></indexterm>XauGetBestAuthByAddr <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XauReadAuth</primary></indexterm>XauReadAuth <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XcmsAddColorSpace</primary></indexterm>XcmsAddColorSpace <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XcmsAddFunctionSet</primary></indexterm>XcmsAddFunctionSet <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XcmsAllocColor</primary></indexterm>XcmsAllocColor <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XcmsAllocNamedColor</primary></indexterm>XcmsAllocNamedColor <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XcmsCCCOfColormap</primary></indexterm>XcmsCCCOfColormap <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XcmsCIELabClipL</primary></indexterm>XcmsCIELabClipL <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XcmsCIELabClipLab</primary></indexterm>XcmsCIELabClipLab <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XcmsCIELabClipab</primary></indexterm>XcmsCIELabClipab <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XcmsCIELabQueryMaxC</primary></indexterm>XcmsCIELabQueryMaxC <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XcmsCIELabQueryMaxL</primary></indexterm>XcmsCIELabQueryMaxL <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XcmsCIELabQueryMaxLC</primary></indexterm>XcmsCIELabQueryMaxLC <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XcmsCIELabQueryMinL</primary></indexterm>XcmsCIELabQueryMinL <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XcmsCIELabToCIEXYZ</primary></indexterm>XcmsCIELabToCIEXYZ <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XcmsCIELabWhiteShiftColors</primary></indexterm>XcmsCIELabWhiteShiftColors <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XcmsCIELuvClipL</primary></indexterm>XcmsCIELuvClipL <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XcmsCIELuvClipLuv</primary></indexterm>XcmsCIELuvClipLuv <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XcmsCIELuvClipuv</primary></indexterm>XcmsCIELuvClipuv <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XcmsCIELuvQueryMaxC</primary></indexterm>XcmsCIELuvQueryMaxC <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XcmsCIELuvQueryMaxL</primary></indexterm>XcmsCIELuvQueryMaxL <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XcmsCIELuvQueryMaxLC</primary></indexterm>XcmsCIELuvQueryMaxLC <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XcmsCIELuvQueryMinL</primary></indexterm>XcmsCIELuvQueryMinL <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XcmsCIELuvToCIEuvY</primary></indexterm>XcmsCIELuvToCIEuvY <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XcmsCIELuvWhiteShiftColors</primary></indexterm>XcmsCIELuvWhiteShiftColors <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XcmsCIEXYZToCIELab</primary></indexterm>XcmsCIEXYZToCIELab <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XcmsCIEXYZToCIEuvY</primary></indexterm>XcmsCIEXYZToCIEuvY <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XcmsCIEXYZToCIExyY</primary></indexterm>XcmsCIEXYZToCIExyY <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XcmsCIEXYZToRGBi</primary></indexterm>XcmsCIEXYZToRGBi <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XcmsCIEuvYToCIELuv</primary></indexterm>XcmsCIEuvYToCIELuv <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XcmsCIEuvYToCIEXYZ</primary></indexterm>XcmsCIEuvYToCIEXYZ <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XcmsCIEuvYToTekHVC</primary></indexterm>XcmsCIEuvYToTekHVC <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XcmsCIExyYToCIEXYZ</primary></indexterm>XcmsCIExyYToCIEXYZ <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XcmsClientWhitePointOfCCC</primary></indexterm>XcmsClientWhitePointOfCCC <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XcmsConvertColors</primary></indexterm>XcmsConvertColors <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XcmsCreateCCC</primary></indexterm>XcmsCreateCCC <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XcmsDefaultCCC</primary></indexterm>XcmsDefaultCCC <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XcmsDisplayOfCCC</primary></indexterm>XcmsDisplayOfCCC <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XcmsFormatOfPrefix</primary></indexterm>XcmsFormatOfPrefix <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XcmsFreeCCC</primary></indexterm>XcmsFreeCCC <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XcmsLookupColor</primary></indexterm>XcmsLookupColor <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XcmsPrefixOfFormat</primary></indexterm>XcmsPrefixOfFormat <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XcmsQueryBlack</primary></indexterm>XcmsQueryBlack <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XcmsQueryBlue</primary></indexterm>XcmsQueryBlue <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XcmsQueryColor</primary></indexterm>XcmsQueryColor <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XcmsQueryColors</primary></indexterm>XcmsQueryColors <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XcmsQueryGreen</primary></indexterm>XcmsQueryGreen <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XcmsQueryRed</primary></indexterm>XcmsQueryRed <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XcmsQueryWhite</primary></indexterm>XcmsQueryWhite <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XcmsRGBToRGBi</primary></indexterm>XcmsRGBToRGBi <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XcmsRGBiToCIEXYZ</primary></indexterm>XcmsRGBiToCIEXYZ <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XcmsRGBiToRGB</primary></indexterm>XcmsRGBiToRGB <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XcmsScreenNumberOfCCC</primary></indexterm>XcmsScreenNumberOfCCC <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XcmsScreenWhitePointOfCCC</primary></indexterm>XcmsScreenWhitePointOfCCC <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XcmsSetCCCOfColormap</primary></indexterm>XcmsSetCCCOfColormap <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XcmsSetCompressionProc</primary></indexterm>XcmsSetCompressionProc <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XcmsSetWhiteAdjustProc</primary></indexterm>XcmsSetWhiteAdjustProc <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XcmsSetWhitePoint</primary></indexterm>XcmsSetWhitePoint <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XcmsStoreColor</primary></indexterm>XcmsStoreColor <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XcmsStoreColors</primary></indexterm>XcmsStoreColors <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XcmsTekHVCClipC</primary></indexterm>XcmsTekHVCClipC <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XcmsTekHVCClipV</primary></indexterm>XcmsTekHVCClipV <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XcmsTekHVCClipVC</primary></indexterm>XcmsTekHVCClipVC <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XcmsTekHVCQueryMaxC</primary></indexterm>XcmsTekHVCQueryMaxC <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XcmsTekHVCQueryMaxV</primary></indexterm>XcmsTekHVCQueryMaxV <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XcmsTekHVCQueryMaxVC</primary></indexterm>XcmsTekHVCQueryMaxVC <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XcmsTekHVCQueryMaxVSamples</primary></indexterm>XcmsTekHVCQueryMaxVSamples <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XcmsTekHVCQueryMinV</primary></indexterm>XcmsTekHVCQueryMinV <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XcmsTekHVCToCIEuvY</primary></indexterm>XcmsTekHVCToCIEuvY <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XcmsTekHVCWhiteShiftColors</primary></indexterm>XcmsTekHVCWhiteShiftColors <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XcmsVisualOfCCC</primary></indexterm>XcmsVisualOfCCC <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XkbAllocClientMap</primary></indexterm>XkbAllocClientMap <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XkbAllocCompatMap</primary></indexterm>XkbAllocCompatMap <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XkbAllocControls</primary></indexterm>XkbAllocControls <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XkbAllocGeomColors</primary></indexterm>XkbAllocGeomColors <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XkbAllocGeomDoodads</primary></indexterm>XkbAllocGeomDoodads <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XkbAllocGeomKeyAliases</primary></indexterm>XkbAllocGeomKeyAliases <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XkbAllocGeomKeys</primary></indexterm>XkbAllocGeomKeys <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XkbAllocGeomOutlines</primary></indexterm>XkbAllocGeomOutlines <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XkbAllocGeomOverlayKeys</primary></indexterm>XkbAllocGeomOverlayKeys <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XkbAllocGeomOverlayRows</primary></indexterm>XkbAllocGeomOverlayRows <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XkbAllocGeomOverlays</primary></indexterm>XkbAllocGeomOverlays <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XkbAllocGeomPoints</primary></indexterm>XkbAllocGeomPoints <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XkbAllocGeomProps</primary></indexterm>XkbAllocGeomProps <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XkbAllocGeomRows</primary></indexterm>XkbAllocGeomRows <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XkbAllocGeomSectionDoodads</primary></indexterm>XkbAllocGeomSectionDoodads <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XkbAllocGeomSections</primary></indexterm>XkbAllocGeomSections <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XkbAllocGeomShapes</primary></indexterm>XkbAllocGeomShapes <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XkbAllocGeometry</primary></indexterm>XkbAllocGeometry <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XkbAllocIndicatorMaps</primary></indexterm>XkbAllocIndicatorMaps <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XkbAllocKeyboard</primary></indexterm>XkbAllocKeyboard <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XkbAllocNames</primary></indexterm>XkbAllocNames <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XkbAllocServerMap</primary></indexterm>XkbAllocServerMap <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XkbApplyCompatMapToKey</primary></indexterm>XkbApplyCompatMapToKey <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XkbBell</primary></indexterm>XkbBell <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XkbBellEvent</primary></indexterm>XkbBellEvent <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XkbChangeEnabledControls</primary></indexterm>XkbChangeEnabledControls <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XkbChangeMap</primary></indexterm>XkbChangeMap <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XkbChangeNames</primary></indexterm>XkbChangeNames <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XkbChangeTypesOfKey</primary></indexterm>XkbChangeTypesOfKey <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XkbComputeEffectiveMap</primary></indexterm>XkbComputeEffectiveMap <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XkbComputeRowBounds</primary></indexterm>XkbComputeRowBounds <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XkbComputeSectionBounds</primary></indexterm>XkbComputeSectionBounds <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XkbComputeShapeBounds</primary></indexterm>XkbComputeShapeBounds <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XkbComputeShapeTop</primary></indexterm>XkbComputeShapeTop <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XkbCopyKeyType</primary></indexterm>XkbCopyKeyType <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XkbCopyKeyTypes</primary></indexterm>XkbCopyKeyTypes <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XkbFindOverlayForKey</primary></indexterm>XkbFindOverlayForKey <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XkbForceBell</primary></indexterm>XkbForceBell <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XkbFreeClientMap</primary></indexterm>XkbFreeClientMap <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XkbFreeCompatMap</primary></indexterm>XkbFreeCompatMap <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XkbFreeComponentList</primary></indexterm>XkbFreeComponentList <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XkbFreeControls</primary></indexterm>XkbFreeControls <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XkbFreeGeomColors</primary></indexterm>XkbFreeGeomColors <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XkbFreeGeomDoodads</primary></indexterm>XkbFreeGeomDoodads <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XkbFreeGeomKeyAliases</primary></indexterm>XkbFreeGeomKeyAliases <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XkbFreeGeomKeys</primary></indexterm>XkbFreeGeomKeys <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XkbFreeGeomOutlines</primary></indexterm>XkbFreeGeomOutlines <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XkbFreeGeomOverlayKeys</primary></indexterm>XkbFreeGeomOverlayKeys <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XkbFreeGeomOverlayRows</primary></indexterm>XkbFreeGeomOverlayRows <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XkbFreeGeomOverlays</primary></indexterm>XkbFreeGeomOverlays <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XkbFreeGeomPoints</primary></indexterm>XkbFreeGeomPoints <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XkbFreeGeomProperties</primary></indexterm>XkbFreeGeomProperties <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XkbFreeGeomRows</primary></indexterm>XkbFreeGeomRows <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XkbFreeGeomSections</primary></indexterm>XkbFreeGeomSections <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XkbFreeGeomShapes</primary></indexterm>XkbFreeGeomShapes <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XkbFreeGeometry</primary></indexterm>XkbFreeGeometry <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XkbFreeIndicatorMaps</primary></indexterm>XkbFreeIndicatorMaps <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XkbFreeKeyboard</primary></indexterm>XkbFreeKeyboard <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XkbFreeNames</primary></indexterm>XkbFreeNames <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XkbFreeServerMap</primary></indexterm>XkbFreeServerMap <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XkbGetAutoRepeatRate</primary></indexterm>XkbGetAutoRepeatRate <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XkbGetCompatMap</primary></indexterm>XkbGetCompatMap <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XkbGetControls</primary></indexterm>XkbGetControls <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XkbGetGeometry</primary></indexterm>XkbGetGeometry <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XkbGetIndicatorMap</primary></indexterm>XkbGetIndicatorMap <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XkbGetIndicatorState</primary></indexterm>XkbGetIndicatorState <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XkbGetKeyActions</primary></indexterm>XkbGetKeyActions <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XkbGetKeyBehaviors</primary></indexterm>XkbGetKeyBehaviors <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XkbGetKeyExplicitComponents</primary></indexterm>XkbGetKeyExplicitComponents <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XkbGetKeyModifierMap</primary></indexterm>XkbGetKeyModifierMap <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XkbGetKeySyms</primary></indexterm>XkbGetKeySyms <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XkbGetKeyTypes</primary></indexterm>XkbGetKeyTypes <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XkbGetKeyboard</primary></indexterm>XkbGetKeyboard <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XkbGetKeyboardByName</primary></indexterm>XkbGetKeyboardByName <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XkbGetMap</primary></indexterm>XkbGetMap <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XkbGetMapChanges</primary></indexterm>XkbGetMapChanges <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XkbGetNamedGeometry</primary></indexterm>XkbGetNamedGeometry <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XkbGetNamedIndicator</primary></indexterm>XkbGetNamedIndicator <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XkbGetNames</primary></indexterm>XkbGetNames <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XkbGetState</primary></indexterm>XkbGetState <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XkbGetUpdatedMap</primary></indexterm>XkbGetUpdatedMap <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XkbGetVirtualMods</primary></indexterm>XkbGetVirtualMods <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XkbGetXlibControls</primary></indexterm>XkbGetXlibControls <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XkbIgnoreExtension</primary></indexterm>XkbIgnoreExtension <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XkbInitCanonicalKeyTypes</primary></indexterm>XkbInitCanonicalKeyTypes <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XkbKeyTypesForCoreSymbols</primary></indexterm>XkbKeyTypesForCoreSymbols <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XkbKeycodeToKeysym</primary></indexterm>XkbKeycodeToKeysym <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XkbKeysymToModifiers</primary></indexterm>XkbKeysymToModifiers <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XkbLatchGroup</primary></indexterm>XkbLatchGroup <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XkbLatchModifiers</primary></indexterm>XkbLatchModifiers <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XkbLibraryVersion</primary></indexterm>XkbLibraryVersion <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XkbListComponents</primary></indexterm>XkbListComponents <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XkbLockGroup</primary></indexterm>XkbLockGroup <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XkbLockModifiers</primary></indexterm>XkbLockModifiers <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XkbLookupKeyBinding</primary></indexterm>XkbLookupKeyBinding <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XkbLookupKeySym</primary></indexterm>XkbLookupKeySym <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XkbNoteControlsChanges</primary></indexterm>XkbNoteControlsChanges <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XkbNoteMapChanges</primary></indexterm>XkbNoteMapChanges <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XkbNoteNameChanges</primary></indexterm>XkbNoteNameChanges <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XkbOpenDisplay</primary></indexterm>XkbOpenDisplay <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XkbQueryExtension</primary></indexterm>XkbQueryExtension <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XkbRefreshKeyboardMapping</primary></indexterm>XkbRefreshKeyboardMapping <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XkbResizeKeyActions</primary></indexterm>XkbResizeKeyActions <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XkbResizeKeySyms</primary></indexterm>XkbResizeKeySyms <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XkbResizeKeyType</primary></indexterm>XkbResizeKeyType <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XkbSelectEventDetails</primary></indexterm>XkbSelectEventDetails <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XkbSelectEvents</primary></indexterm>XkbSelectEvents <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XkbSetAtomFuncs</primary></indexterm>XkbSetAtomFuncs <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XkbSetAutoRepeatRate</primary></indexterm>XkbSetAutoRepeatRate <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XkbSetAutoResetControls</primary></indexterm>XkbSetAutoResetControls <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XkbSetCompatMap</primary></indexterm>XkbSetCompatMap <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XkbSetControls</primary></indexterm>XkbSetControls <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XkbSetDebuggingFlags</primary></indexterm>XkbSetDebuggingFlags <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XkbSetDetectableAutoRepeat</primary></indexterm>XkbSetDetectableAutoRepeat <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XkbSetGeometry</primary></indexterm>XkbSetGeometry <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XkbSetIgnoreLockMods</primary></indexterm>XkbSetIgnoreLockMods <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XkbSetIndicatorMap</primary></indexterm>XkbSetIndicatorMap <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XkbSetMap</primary></indexterm>XkbSetMap <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XkbSetNamedIndicator</primary></indexterm>XkbSetNamedIndicator <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XkbSetNames</primary></indexterm>XkbSetNames <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XkbSetServerInternalMods</primary></indexterm>XkbSetServerInternalMods <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XkbSetXlibControls</primary></indexterm>XkbSetXlibControls <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XkbToControl</primary></indexterm>XkbToControl <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XkbTranslateKeyCode</primary></indexterm>XkbTranslateKeyCode <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XkbTranslateKeySym</primary></indexterm>XkbTranslateKeySym <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XkbUpdateMapFromCore</primary></indexterm>XkbUpdateMapFromCore <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XkbUseExtension</primary></indexterm>XkbUseExtension <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XkbVirtualModsToReal</primary></indexterm>XkbVirtualModsToReal <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XmbDrawImageString</primary></indexterm>XmbDrawImageString <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XmbDrawString</primary></indexterm>XmbDrawString <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XmbDrawText</primary></indexterm>XmbDrawText <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XmbLookupString</primary></indexterm>XmbLookupString <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XmbResetIC</primary></indexterm>XmbResetIC <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XmbSetWMProperties</primary></indexterm>XmbSetWMProperties <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XmbTextEscapement</primary></indexterm>XmbTextEscapement <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XmbTextExtents</primary></indexterm>XmbTextExtents <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XmbTextListToTextProperty</primary></indexterm>XmbTextListToTextProperty <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XmbTextPerCharExtents</primary></indexterm>XmbTextPerCharExtents <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XmbTextPropertyToTextList</primary></indexterm>XmbTextPropertyToTextList <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XrmCombineDatabase</primary></indexterm>XrmCombineDatabase <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XrmCombineFileDatabase</primary></indexterm>XrmCombineFileDatabase <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XrmDestroyDatabase</primary></indexterm>XrmDestroyDatabase <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XrmEnumerateDatabase</primary></indexterm>XrmEnumerateDatabase <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XrmGetDatabase</primary></indexterm>XrmGetDatabase <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XrmGetFileDatabase</primary></indexterm>XrmGetFileDatabase <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XrmGetResource</primary></indexterm>XrmGetResource <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XrmGetStringDatabase</primary></indexterm>XrmGetStringDatabase <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XrmInitialize</primary></indexterm>XrmInitialize <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XrmLocaleOfDatabase</primary></indexterm>XrmLocaleOfDatabase <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XrmMergeDatabases</primary></indexterm>XrmMergeDatabases <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XrmParseCommand</primary></indexterm>XrmParseCommand <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XrmPermStringToQuark</primary></indexterm>XrmPermStringToQuark <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XrmPutFileDatabase</primary></indexterm>XrmPutFileDatabase <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XrmPutLineResource</primary></indexterm>XrmPutLineResource <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XrmPutResource</primary></indexterm>XrmPutResource <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XrmPutStringResource</primary></indexterm>XrmPutStringResource <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XrmQGetResource</primary></indexterm>XrmQGetResource <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XrmQGetSearchList</primary></indexterm>XrmQGetSearchList <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XrmQGetSearchResource</primary></indexterm>XrmQGetSearchResource <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XrmQPutResource</primary></indexterm>XrmQPutResource <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XrmQPutStringResource</primary></indexterm>XrmQPutStringResource <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XrmQuarkToString</primary></indexterm>XrmQuarkToString <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XrmSetDatabase</primary></indexterm>XrmSetDatabase <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XrmStringToBindingQuarkList</primary></indexterm>XrmStringToBindingQuarkList <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XrmStringToQuark</primary></indexterm>XrmStringToQuark <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XrmStringToQuarkList</primary></indexterm>XrmStringToQuarkList <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XrmUniqueQuark</primary></indexterm>XrmUniqueQuark <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>Xutf8TextListToTextProperty</primary></indexterm>Xutf8TextListToTextProperty <LINK LINKEND="REFSTD.libX11.1">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>Xutf8TextPropertyToTextList</primary></indexterm>Xutf8TextPropertyToTextList <LINK LINKEND="REFSTD.libX11.1">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>XwcDrawImageString</primary></indexterm>XwcDrawImageString <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XwcDrawString</primary></indexterm>XwcDrawString <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XwcDrawText</primary></indexterm>XwcDrawText <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XwcFreeStringList</primary></indexterm>XwcFreeStringList <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XwcLookupString</primary></indexterm>XwcLookupString <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XwcResetIC</primary></indexterm>XwcResetIC <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XwcTextEscapement</primary></indexterm>XwcTextEscapement <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XwcTextExtents</primary></indexterm>XwcTextExtents <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XwcTextListToTextProperty</primary></indexterm>XwcTextListToTextProperty <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XwcTextPerCharExtents</primary></indexterm>XwcTextPerCharExtents <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XwcTextPropertyToTextList</primary></indexterm>XwcTextPropertyToTextList <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY></ENTRY>
<ENTRY></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for X Windows System Interface specified in <XREF linkend="tbl-libX11-x-w-data">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<TABLE id="tbl-libX11-x-w-data">
<TITLE>libX11 - X Windows System Interface Data Interfaces</TITLE>
<TGROUP COLS=4>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>XSetAfterFunction</primary></indexterm>XSetAfterFunction <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY><indexterm><primary>XSynchronize</primary></indexterm>XSynchronize <LINK LINKEND="REFSTD.libX11.2">[Xlib]</LINK></ENTRY>
<ENTRY></ENTRY>
<ENTRY></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>
</SECT2>
</SECT1>
<SECT1 ID=libX11-ddefs>
<TITLE>Data Definitions for libX11</TITLE>
<PARA>
This section defines global identifiers and their values that are associated
with interfaces contained in libX11.
These definitions are organized into groups that
correspond to system headers. This convention is used as a
convenience for the reader, and does not imply the existence
of these headers, or their content.
Where an interface is defined as requiring a particular system header file
all of the data definitions for that system header file presented here shall be in effect.
</PARA>
<PARA>
This section gives data definitions to promote binary application
portability, not to repeat source interface definitions available
elsewhere. System providers and application developers should use this ABI
to supplement - not to replace - source interface definition specifications.
</PARA>
<PARA>
This specification uses the <XREF LINKEND='std.ISOC99'> C Language as the reference programming language, and data definitions are specified in ISO C format. The C language is used here as a convenient notation. Using a C language description of these data objects does not preclude their use by other programming languages.</PARA>
<SECT2>
<TITLE>X11/X.h</TITLE>
<PARA>
</PARA>
<SCREEN>

typedef unsigned long int XID;
typedef unsigned long int Atom;
typedef unsigned long int VisualID;
typedef unsigned long int Time;
typedef XID Window;
typedef XID Font;
typedef XID Pixmap;
typedef unsigned char KeyCode;
typedef XID Drawable;
typedef XID Cursor;
typedef XID Colormap;
typedef XID GContext;
typedef XID KeySym;

#define AllTemporary	0L
#define AnyButton	0L
#define AnyKey	0L
#define AnyPropertyType	0L
#define CopyFromParent	0L
#define CurrentTime	0L
#define NoSymbol	0L
#define None	0L
#define PointerWindow	0L
#define InputFocus	1L
#define ParentRelative	1L
#define PointerRoot	1L

#define KeyPressMask	(1L&lt;&lt;0)
#define KeyReleaseMask	(1L&lt;&lt;1)
#define Button3MotionMask	(1L&lt;&lt;10)
#define Button4MotionMask	(1L&lt;&lt;11)
#define Button5MotionMask	(1L&lt;&lt;12)
#define ButtonMotionMask	(1L&lt;&lt;13)
#define KeymapStateMask	(1L&lt;&lt;14)
#define ExposureMask	(1L&lt;&lt;15)
#define VisibilityChangeMask	(1L&lt;&lt;16)
#define StructureNotifyMask	(1L&lt;&lt;17)
#define ResizeRedirectMask	(1L&lt;&lt;18)
#define SubstructureNotifyMask	(1L&lt;&lt;19)
#define ButtonPressMask	(1L&lt;&lt;2)
#define SubstructureRedirectMask	(1L&lt;&lt;20)
#define FocusChangeMask	(1L&lt;&lt;21)
#define PropertyChangeMask	(1L&lt;&lt;22)
#define ColormapChangeMask	(1L&lt;&lt;23)
#define ButtonReleaseMask	(1L&lt;&lt;3)
#define EnterWindowMask	(1L&lt;&lt;4)
#define LeaveWindowMask	(1L&lt;&lt;5)
#define PointerMotionMask	(1L&lt;&lt;6)
#define PointerMotionHintMask	(1L&lt;&lt;7)
#define Button1MotionMask	(1L&lt;&lt;8)
#define Button2MotionMask	(1L&lt;&lt;9)

#define NoEventMask	0L
#define FocusOut	10
#define KeymapNotify	11
#define Expose	12
#define GraphicsExpose	13
#define NoExpose	14
#define VisibilityNotify	15
#define CreateNotify	16
#define DestroyNotify	17
#define UnmapNotify	18
#define MapNotify	19
#define KeyPress	2
#define MapRequest	20
#define ReparentNotify	21
#define ConfigureNotify	22
#define ConfigureRequest	23
#define GravityNotify	24
#define ResizeRequest	25
#define CirculateNotify	26
#define CirculateRequest	27
#define PropertyNotify	28
#define SelectionClear	29
#define KeyRelease	3
#define SelectionRequest	30
#define SelectionNotify	31
#define ColormapNotify	32
#define ClientMessage	33
#define MappingNotify	34
#define LASTEvent	35
#define ButtonPress	4
#define ButtonRelease	5
#define MotionNotify	6
#define EnterNotify	7
#define LeaveNotify	8
#define FocusIn	9

#define ShiftMask	(1&lt;&lt;0)
#define LockMask	(1&lt;&lt;1)
#define ControlMask	(1&lt;&lt;2)
#define Mod1Mask	(1&lt;&lt;3)
#define Mod2Mask	(1&lt;&lt;4)
#define Mod3Mask	(1&lt;&lt;5)
#define Mod4Mask	(1&lt;&lt;6)
#define Mod5Mask	(1&lt;&lt;7)

#define ShiftMapIndex	0
#define LockMapIndex	1
#define ControlMapIndex	2
#define Mod1MapIndex	3
#define Mod2MapIndex	4
#define Mod3MapIndex	5
#define Mod4MapIndex	6
#define Mod5MapIndex	7

#define Button3Mask	(1&lt;&lt;10)
#define Button4Mask	(1&lt;&lt;11)
#define Button5Mask	(1&lt;&lt;12)
#define AnyModifier	(1&lt;&lt;15)
#define Button1Mask	(1&lt;&lt;8)
#define Button2Mask	(1&lt;&lt;9)

#define Button1	1
#define Button2	2
#define Button3	3
#define Button4	4
#define Button5	5

#define NotifyNormal	0
#define NotifyGrab	1
#define NotifyHint	1
#define NotifyUngrab	2
#define NotifyWhileGrabbed	3

#define NotifyAncestor	0
#define NotifyVirtual	1
#define NotifyInferior	2
#define NotifyNonlinear	3
#define NotifyNonlinearVirtual	4
#define NotifyPointer	5
#define NotifyPointerRoot	6
#define NotifyDetailNone	7

#define VisibilityUnobscured	0
#define VisibilityPartiallyObscured	1
#define VisibilityFullyObscured	2

#define PlaceOnTop	0
#define PlaceOnBottom	1

#define FamilyInternet	0
#define FamilyDECnet	1
#define FamilyChaos	2

#define PropModeReplace	0
#define PropertyNewValue	0
#define PropertyDelete	1

#define ColormapUninstalled	0
#define ColormapInstalled	1

#define GrabModeSync	0
#define GrabModeAsync	1

#define GrabSuccess	0
#define AlreadyGrabbed	1
#define GrabInvalidTime	2
#define GrabNotViewable	3
#define GrabFrozen	4

#define AsyncPointer	0
#define SyncPointer	1
#define ReplayPointer	2
#define AsyncKeyboard	3
#define SyncKeyboard	4
#define ReplayKeyboard	5
#define AsyncBoth	6
#define SyncBoth	7

#define RevertToNone	(int)None
#define RevertToPointerRoot	(int)PointerRoot
#define RevertToParent	2

#define Success	0
#define BadRequest	1
#define BadAccess	10
#define BadAlloc	11
#define BadColor	12
#define FirstExtensionError	128
#define BadGC	13
#define BadIDChoice	14
#define BadName	15
#define BadLength	16
#define BadImplementation	17
#define BadValue	2
#define LastExtensionError	255
#define BadWindow	3
#define BadPixmap	4
#define BadAtom	5
#define BadCursor	6
#define BadFont	7
#define BadMatch	8
#define BadDrawable	9

#define CWX	(1&lt;&lt;0)
#define InputOutput	1
#define InputOnly	2

#define CWBackPixmap	(1L&lt;&lt;0)
#define CWBackPixel	(1L&lt;&lt;1)
#define CWSaveUnder	(1L&lt;&lt;10)
#define CWEventMask	(1L&lt;&lt;11)
#define CWDontPropagate	(1L&lt;&lt;12)
#define CWColormap	(1L&lt;&lt;13)
#define CWCursor	(1L&lt;&lt;14)
#define CWBorderPixmap	(1L&lt;&lt;2)
#define CWBorderPixel	(1L&lt;&lt;3)
#define CWBitGravity	(1L&lt;&lt;4)
#define CWWinGravity	(1L&lt;&lt;5)
#define CWBackingStore	(1L&lt;&lt;6)
#define CWBackingPlanes	(1L&lt;&lt;7)
#define CWBackingPixel	(1L&lt;&lt;8)
#define CWOverrideRedirect	(1L&lt;&lt;9)

#define CWY	(1&lt;&lt;1)
#define CWWidth	(1&lt;&lt;2)
#define CWHeight	(1&lt;&lt;3)
#define CWBorderWidth	(1&lt;&lt;4)
#define CWSibling	(1&lt;&lt;5)
#define CWStackMode	(1&lt;&lt;6)

#define ForgetGravity	0
#define UnmapGravity	0
#define NorthWestGravity	1
#define StaticGravity	10
#define NorthGravity	2
#define NorthEastGravity	3
#define WestGravity	4
#define CenterGravity	5
#define EastGravity	6
#define SouthWestGravity	7
#define SouthGravity	8
#define SouthEastGravity	9

#define NotUseful	0
#define WhenMapped	1
#define Always	2

#define IsUnmapped	0
#define IsUnviewable	1
#define IsViewable	2

#define SetModeInsert	0
#define SetModeDelete	1

#define DestroyAll	0
#define RetainPermanent	1
#define RetainTemporary	2

#define Above	0
#define Below	1
#define TopIf	2
#define BottomIf	3

#define RaiseLowest	0
#define LowerHighest	1

#define PropModePrepend	1
#define PropModeAppend	2

#define GXclear	0x0
#define GXand	0x1
#define GXandReverse	0x2
#define GXcopy	0x3
#define GXandInverted	0x4
#define GXnoop	0x5
#define GXxor	0x6
#define GXor	0x7
#define GXnor	0x8
#define GXequiv	0x9
#define GXinvert	0xa
#define GXorReverse	0xb
#define GXcopyInverted	0xc
#define GXorInverted	0xd
#define GXnand	0xe
#define GXset	0xf

#define LineSolid	0
#define LineOnOffDash	1
#define LineDoubleDash	2

#define CapNotLast	0
#define CapButt	1
#define CapRound	2
#define CapProjecting	3

#define JoinMiter	0
#define JoinRound	1
#define JoinBevel	2

#define FillSolid	0
#define FillTiled	1
#define FillStippled	2
#define FillOpaqueStippled	3

#define EvenOddRule	0
#define WindingRule	1

#define ClipByChildren	0
#define IncludeInferiors	1

#define Unsorted	0
#define XYBitmap	0
#define YSorted	1
#define YXSorted	2
#define YXBanded	3

#define CoordModeOrigin	0
#define CoordModePrevious	1

#define Complex	0
#define Nonconvex	1
#define Convex	2

#define ArcChord	0
#define ArcPieSlice	1

#define GCFunction	(1L&lt;&lt;0)
#define GCPlaneMask	(1L&lt;&lt;1)
#define GCTile	(1L&lt;&lt;10)
#define GCStipple	(1L&lt;&lt;11)
#define GCTileStipXOrigin	(1L&lt;&lt;12)
#define GCTileStipYOrigin	(1L&lt;&lt;13)
#define GCFont	(1L&lt;&lt;14)
#define GCSubwindowMode	(1L&lt;&lt;15)
#define GCGraphicsExposures	(1L&lt;&lt;16)
#define GCClipXOrigin	(1L&lt;&lt;17)
#define GCClipYOrigin	(1L&lt;&lt;18)
#define GCClipMask	(1L&lt;&lt;19)
#define GCForeground	(1L&lt;&lt;2)
#define GCDashOffset	(1L&lt;&lt;20)
#define GCDashList	(1L&lt;&lt;21)
#define GCArcMode	(1L&lt;&lt;22)
#define GCBackground	(1L&lt;&lt;3)
#define GCLineWidth	(1L&lt;&lt;4)
#define GCLineStyle	(1L&lt;&lt;5)
#define GCCapStyle	(1L&lt;&lt;6)
#define GCJoinStyle	(1L&lt;&lt;7)
#define GCFillStyle	(1L&lt;&lt;8)
#define GCFillRule	(1L&lt;&lt;9)
#define GCLastBit	22
#define FontChange	255

#define FontLeftToRight	0
#define FontRightToLeft	1

#define XYPixmap	1
#define ZPixmap	2

#define AllocNone	0
#define AllocAll	1

#define DoRed	(1&lt;&lt;0)
#define DoGreen	(1&lt;&lt;1)
#define DoBlue	(1&lt;&lt;2)

#define CursorShape	0
#define TileShape	1
#define StippleShape	2

#define AutoRepeatModeOff	0
#define LedModeOff	0
#define AutoRepeatModeOn	1
#define LedModeOn	1
#define AutoRepeatModeDefault	2

#define KBKeyClickPercent	(1L&lt;&lt;0)
#define KBBellPercent	(1L&lt;&lt;1)
#define KBBellPitch	(1L&lt;&lt;2)
#define KBBellDuration	(1L&lt;&lt;3)
#define KBLed	(1L&lt;&lt;4)
#define KBLedMode	(1L&lt;&lt;5)
#define KBKey	(1L&lt;&lt;6)
#define KBAutoRepeatMode	(1L&lt;&lt;7)
#define MappingModifier	0
#define MappingSuccess	0
#define MappingBusy	1
#define MappingKeyboard	1
#define MappingFailed	2
#define MappingPointer	2

#define DisableScreenInterval	0
#define DisableScreenSaver	0
#define DontAllowExposures	0
#define DontPreferBlanking	0
#define AllowExposures	1
#define PreferBlanking	1
#define DefaultBlanking	2
#define DefaultExposures	2

#define ScreenSaverReset	0
#define ScreenSaverActive	1

#define HostInsert	0
#define HostDelete	1

#define DisableAccess	0
#define EnableAccess	1

#define StaticGray	0
#define GrayScale	1
#define StaticColor	2
#define PseudoColor	3
#define TrueColor	4
#define DirectColor	5

#define LSBFirst	0
#define MSBFirst	1
</SCREEN>
</SECT2>
<SECT2>
<TITLE>X11/XKBlib.h</TITLE>
<PARA>
</PARA>
<SCREEN>

extern int XkbAllocClientMap(Unknown Type:"..", unsigned int,
			     unsigned int);
extern int XkbAllocCompatMap(Unknown Type:"..", unsigned int,
			     unsigned int);
extern int XkbAllocControls(Unknown Type:"..", unsigned int);
extern int XkbAllocIndicatorMaps(Unknown Type:"..");
extern Unknown Type:".." XkbAllocKeyboard(void);
extern int XkbAllocNames(Unknown Type:"..", unsigned int, int, int);
extern int XkbAllocServerMap(Unknown Type:"..", unsigned int,
			     unsigned int);
extern Unknown Type:".." XkbApplyCompatMapToKey(Unknown Type:"..", KeyCode,
						Unknown Type:"..");
extern int XkbBell(Display *, Window, int, Atom);
extern int XkbBellEvent(Display *, Window, int, Atom);
extern Unknown Type:".."
XkbChangeEnabledControls(Display *, unsigned int, unsigned int,
			 unsigned int);
extern Unknown Type:".." XkbChangeMap(Display *, Unknown Type:"..",
				      Unknown Type:"..");
extern Unknown Type:".." XkbChangeNames(Display *, Unknown Type:"..",
					Unknown Type:"..");
extern Unknown Type:".." XkbChangeTypesOfKey(Unknown Type:"..", int, int,
					     unsigned int, int *,
					     Unknown Type:"..");
extern int XkbComputeEffectiveMap(Unknown Type:"..", Unknown Type:"..",
				  unsigned char *);
extern int XkbCopyKeyType(Unknown Type:"..", Unknown Type:"..");
extern int XkbCopyKeyTypes(Unknown Type:"..", Unknown Type:"..", int);
extern int XkbForceBell(Display *, int);
extern void XkbFreeClientMap(Unknown Type:"..", unsigned int, int);
extern void XkbFreeCompatMap(Unknown Type:"..", unsigned int, int);
extern void XkbFreeComponentList(Unknown Type:"..");
extern void XkbFreeControls(Unknown Type:"..", unsigned int, int);
extern void XkbFreeIndicatorMaps(Unknown Type:"..");
extern void XkbFreeKeyboard(Unknown Type:"..", unsigned int, int);
extern void XkbFreeNames(Unknown Type:"..", unsigned int, int);
extern void XkbFreeServerMap(Unknown Type:"..", unsigned int, int);
extern int XkbGetAutoRepeatRate(Display *, unsigned int, unsigned int *,
				unsigned int *);
extern int XkbGetCompatMap(Display *, unsigned int, Unknown Type:"..");
extern int XkbGetControls(Display *, unsigned long int, Unknown Type:"..");
extern int XkbGetIndicatorMap(Display *, unsigned long int,
			      Unknown Type:"..");
extern int XkbGetIndicatorState(Display *, unsigned int, unsigned int *);
extern Unknown Type:".."
XkbGetKeyActions(Display *, unsigned int, unsigned int, Unknown Type:"..");
extern Unknown Type:".."
XkbGetKeyBehaviors(Display *, unsigned int, unsigned int,
		   Unknown Type:"..");
extern Unknown Type:".." XkbGetKeyExplicitComponents(Display *,
						     unsigned int,
						     unsigned int,
						     Unknown Type:"..");
extern Unknown Type:".." XkbGetKeyModifierMap(Display *, unsigned int,
					      unsigned int,
					      Unknown Type:"..");
extern Unknown Type:".." XkbGetKeySyms(Display *, unsigned int,
				       unsigned int, Unknown Type:"..");
extern Unknown Type:".." XkbGetKeyTypes(Display *, unsigned int,
					unsigned int, Unknown Type:"..");
extern Unknown Type:".." XkbGetKeyboard(Display *, unsigned int,
					unsigned int);
extern Unknown Type:".." XkbGetKeyboardByName(Display *, unsigned int,
					      Unknown Type:"..",
					      unsigned int, unsigned int,
					      int);
extern Unknown Type:".." XkbGetMap(Display *, unsigned int, unsigned int);
extern int XkbGetMapChanges(Display *, Unknown Type:"..",
			    Unknown Type:"..");
extern int XkbGetNamedIndicator(Display *, Atom, int *, int *,
				Unknown Type:"..", int *);
extern int XkbGetNames(Display *, unsigned int, Unknown Type:"..");
extern int XkbGetState(Display *, unsigned int, Unknown Type:"..");
extern int XkbGetUpdatedMap(Display *, unsigned int, Unknown Type:"..");
extern int XkbGetVirtualMods(Display *, unsigned int, Unknown Type:"..");
extern unsigned int XkbGetXlibControls(Display *);
extern int XkbIgnoreExtension(int);
extern int XkbInitCanonicalKeyTypes(Unknown Type:"..", unsigned int, int);
extern int XkbKeyTypesForCoreSymbols(Unknown Type:"..", int, KeySym *,
				     unsigned int, int *, KeySym *);
extern KeySym XkbKeycodeToKeysym(Display *, unsigned int, int, int);
extern unsigned int XkbKeysymToModifiers(Display *, KeySym);
extern int XkbLatchGroup(Display *, unsigned int, unsigned int);
extern int XkbLatchModifiers(Display *, unsigned int, unsigned int,
			     unsigned int);
extern int XkbLibraryVersion(int *, int *);
extern Unknown Type:".."
XkbListComponents(Display *, unsigned int, Unknown Type:"..", int *);
extern int XkbLockGroup(Display *, unsigned int, unsigned int);
extern int XkbLockModifiers(Display *, unsigned int, unsigned int,
			    unsigned int);
extern int XkbLookupKeyBinding(Display *, KeySym, unsigned int, char *,
			       int, int *);
extern int XkbLookupKeySym(Display *, KeyCode, unsigned int,
			   unsigned int *, KeySym *);
extern void XkbNoteControlsChanges(Unknown Type:"..",
				   XkbControlsNotifyEvent *, unsigned int);
extern void XkbNoteMapChanges(Unknown Type:"..", XkbMapNotifyEvent *,
			      unsigned int);
extern void XkbNoteNameChanges(Unknown Type:"..", XkbNamesNotifyEvent *,
			       unsigned int);
extern Display *XkbOpenDisplay(char *, int *, int *, int *, int *, int *);
extern int XkbQueryExtension(Display *, int *, int *, int *, int *, int *);
extern int XkbRefreshKeyboardMapping(XkbMapNotifyEvent *);
extern Unknown Type:".."
    * XkbResizeKeyActions(Unknown Type:"..", int, int);
extern KeySym *XkbResizeKeySyms(Unknown Type:"..", int, int);
extern int XkbResizeKeyType(Unknown Type:"..", int, int, int, int);
extern int XkbSelectEventDetails(Display *, unsigned int, unsigned int,
				 unsigned long int, unsigned long int);
extern int XkbSelectEvents(Display *, unsigned int, unsigned int,
			   unsigned int);
extern void XkbSetAtomFuncs(XkbInternAtomFunc, XkbGetAtomNameFunc);
extern int XkbSetAutoRepeatRate(Display *, unsigned int, unsigned int,
				unsigned int);
extern int XkbSetAutoResetControls(Display *, unsigned int, unsigned int *,
				   unsigned int *);
extern int XkbSetCompatMap(Display *, unsigned int, Unknown Type:"..",
			   int);
extern int XkbSetControls(Display *, unsigned long int, Unknown Type:"..");
extern int XkbSetDebuggingFlags(Display *, unsigned int, unsigned int,
				char *, unsigned int, unsigned int,
				unsigned int *, unsigned int *);
extern int XkbSetDetectableAutoRepeat(Display *, int, int *);
extern int XkbSetIgnoreLockMods(Display *, unsigned int, unsigned int,
				unsigned int, unsigned int, unsigned int);
extern int XkbSetIndicatorMap(Display *, unsigned long int,
			      Unknown Type:"..");
extern int XkbSetMap(Display *, unsigned int, Unknown Type:"..");
extern int XkbSetNamedIndicator(Display *, Atom, int, int, int,
				Unknown Type:"..");
extern int XkbSetNames(Display *, unsigned int, unsigned int, unsigned int,
		       Unknown Type:"..");
extern int XkbSetServerInternalMods(Display *, unsigned int, unsigned int,
				    unsigned int, unsigned int,
				    unsigned int);
extern unsigned int XkbSetXlibControls(unsigned int, unsigned int,
				       Display *);
extern char XkbToControl(char);
extern Unknown Type:".."
XkbTranslateKeyCode(Unknown Type:"..", KeyCode, unsigned int,
		    unsigned int *, KeySym *);
extern Unknown Type:".." XkbTranslateKeySym(Display *, KeySym *,
					    unsigned int, char *, int,
					    int *);
extern Unknown Type:".." XkbUpdateMapFromCore(Unknown Type:"..", KeyCode,
					      int, int, KeySym *,
					      Unknown Type:"..");
extern int XkbUseExtension(int *, int *, Display *);
extern int XkbVirtualModsToReal(Unknown Type:"..", unsigned int,
				unsigned int *);
</SCREEN>
</SECT2>
<SECT2>
<TITLE>X11/Xauth.h</TITLE>
<PARA>
</PARA>
<SCREEN>

typedef struct xauth {
    unsigned short family;
    unsigned short address_length;
    char *address;
    unsigned short number_length;
    char *number;
    unsigned short name_length;
    char *name;
    unsigned short data_length;
    char *data;
} Xauth;
extern void XauDisposeAuth(Xauth *);
extern char *XauFileName(void);
extern Xauth *XauGetBestAuthByAddr(char **, int, char *, unsigned int,
				   const char *, unsigned int,
				   unsigned int, int *);
extern Xauth *XauReadAuth(FILE *);
</SCREEN>
</SECT2>
<SECT2>
<TITLE>X11/Xcms.h</TITLE>
<PARA>
</PARA>
<SCREEN>

typedef struct _XcmsFunctionSet {
    XcmsColorSpace **DDColorSpaces;
    XcmsScreenInitProc screenInitProc;
    XcmsScreenFreeProc screenFreeProc;
} XcmsFunctionSet;

typedef unsigned long int XcmsColorFormat;
typedef double XcmsFloat;
typedef struct {
    unsigned short red;
    unsigned short green;
    unsigned short blue;
} XcmsRGB;
typedef struct {
    XcmsFloat red;
    XcmsFloat green;
    XcmsFloat blue;
} XcmsRGBi;
typedef struct {
    XcmsFloat X;
    XcmsFloat Y;
    XcmsFloat Z;
} XcmsCIEXYZ;
typedef struct {
    XcmsFloat u_prime;
    XcmsFloat v_prime;
    XcmsFloat Y;
} XcmsCIEuvY;
typedef struct {
    XcmsFloat x;
    XcmsFloat y;
    XcmsFloat Y;
} XcmsCIExyY;
typedef struct {
    XcmsFloat L_star;
    XcmsFloat a_star;
    XcmsFloat b_star;
} XcmsCIELab;
typedef struct {
    XcmsFloat L_star;
    XcmsFloat u_star;
    XcmsFloat v_star;
} XcmsCIELuv;
typedef struct {
    XcmsFloat H;
    XcmsFloat V;
    XcmsFloat C;
} XcmsTekHVC;
typedef struct {
    XcmsFloat pad0;
    XcmsFloat pad1;
    XcmsFloat pad2;
    XcmsFloat pad3;
} XcmsPad;

typedef union {
    XcmsRGB RGB;
    XcmsRGBi RGBi;
    XcmsCIEXYZ CIEXYZ;
    XcmsCIEuvY CIEuvY;
    XcmsCIExyY CIExyY;
    XcmsCIELab CIELab;
    XcmsCIELuv CIELuv;
    XcmsTekHVC TekHVC;
    XcmsPad Pad;
} XcmsColor;

typedef struct _XcmsPerScrnInfo {
    XcmsColor screenWhitePt;
    XPointer functionSet;
    XPointer screenData;
    unsigned char state;
    char pad[1];
} XcmsPerScrnInfo;

typedef int (*XcmsCompressionProc) (void);
typedef int (*XcmsWhiteAdjustProc) (void);
typedef int (*XcmsScreenInitProc) (void);
typedef void (*XcmsScreenFreeProc) (void);
typedef int (*XcmsConversionProc) (void);
typedef int (*XcmsParseStringProc) (void);

typedef struct _XcmsCCC {
    Display *dpy;
    int screenNumber;
    Visual *visual;
    XcmsColor clientWhitePt;
    XcmsCompressionProc gamutCompProc;
    XPointer gamutCompClientData;
    XcmsWhiteAdjustProc whitePtAdjProc;
    XPointer whitePtAdjClientData;
    XcmsPerScrnInfo *pPerScrnInfo;
} *XcmsCCC;

typedef XcmsConversionProc *XcmsFuncListPtr;

typedef struct _XcmsColorSpace {
    char *prefix;
    XcmsColorFormat id;
    XcmsParseStringProc parseString;
    XcmsFuncListPtr to_CIEXYZ;
    XcmsFuncListPtr from_CIEXYZ;
    int inverse_flag;
} XcmsColorSpace;
extern int XcmsAddColorSpace(XcmsColorSpace *);
extern int XcmsAddFunctionSet(XcmsFunctionSet *);
extern int XcmsAllocColor(XcmsColorFormat, XcmsColor *, Colormap,
			  Display *);
extern int XcmsAllocNamedColor(Colormap, Display *, XcmsColorFormat,
			       XcmsColor *, XcmsColor *, const char *);
extern XcmsCCC XcmsCCCOfColormap(Display *, Colormap);
extern int XcmsCIELabClipL(XcmsCCC, unsigned int, unsigned int,
			   XcmsColor *, int *);
extern int XcmsCIELabClipLab(unsigned int, XcmsColor *, XcmsCCC, int *,
			     unsigned int);
extern int XcmsCIELabClipab(XcmsColor *, XcmsCCC, int *, unsigned int,
			    unsigned int);
extern int XcmsCIELabQueryMaxC(XcmsCCC, XcmsFloat, XcmsFloat, XcmsColor *);
extern int XcmsCIELabQueryMaxL(XcmsFloat, XcmsFloat, XcmsCCC, XcmsColor *);
extern int XcmsCIELabQueryMaxLC(XcmsColor *, XcmsFloat, XcmsCCC);
extern int XcmsCIELabQueryMinL(XcmsCCC, XcmsFloat, XcmsFloat, XcmsColor *);
extern int XcmsCIELabToCIEXYZ(XcmsColor *, XcmsCCC, unsigned int,
			      XcmsColor *);
extern int XcmsCIELabWhiteShiftColors(XcmsColor *, XcmsColor *, XcmsCCC,
				      unsigned int, XcmsColor *,
				      XcmsColorFormat, int *);
extern int XcmsCIELuvClipL(XcmsCCC, unsigned int, unsigned int,
			   XcmsColor *, int *);
extern int XcmsCIELuvClipLuv(XcmsColor *, XcmsCCC, int *, unsigned int,
			     unsigned int);
extern int XcmsCIELuvClipuv(XcmsCCC, XcmsColor *, int *, unsigned int,
			    unsigned int);
extern int XcmsCIELuvQueryMaxC(XcmsCCC, XcmsColor *, XcmsFloat, XcmsFloat);
extern int XcmsCIELuvQueryMaxL(XcmsCCC, XcmsFloat, XcmsFloat, XcmsColor *);
extern int XcmsCIELuvQueryMaxLC(XcmsCCC, XcmsColor *, XcmsFloat);
extern int XcmsCIELuvQueryMinL(XcmsCCC, XcmsFloat, XcmsFloat, XcmsColor *);
extern int XcmsCIELuvToCIEuvY(XcmsColor *, XcmsColor *, XcmsCCC,
			      unsigned int);
extern int XcmsCIELuvWhiteShiftColors(XcmsColorFormat, XcmsColor *,
				      XcmsColor *, XcmsCCC, int *,
				      unsigned int, XcmsColor *);
extern int XcmsCIEXYZToCIELab(XcmsCCC, XcmsColor *, XcmsColor *,
			      unsigned int);
extern int XcmsCIEXYZToCIEuvY(XcmsCCC, XcmsColor *, XcmsColor *,
			      unsigned int);
extern int XcmsCIEXYZToCIExyY(XcmsCCC, XcmsColor *, XcmsColor *,
			      unsigned int);
extern int XcmsCIEXYZToRGBi(XcmsCCC, XcmsColor *, unsigned int, int *);
extern int XcmsCIEuvYToCIELuv(XcmsCCC, XcmsColor *, XcmsColor *,
			      unsigned int);
extern int XcmsCIEuvYToCIEXYZ(XcmsCCC, XcmsColor *, XcmsColor *,
			      unsigned int);
extern int XcmsCIEuvYToTekHVC(XcmsCCC, XcmsColor *, XcmsColor *,
			      unsigned int);
extern int XcmsCIExyYToCIEXYZ(XcmsCCC, XcmsColor *, XcmsColor *,
			      unsigned int);
extern XcmsColor *XcmsClientWhitePointOfCCC(XcmsCCC);
extern int XcmsConvertColors(XcmsColorFormat, unsigned int, XcmsColor *,
			     XcmsCCC, int *);
extern XcmsCCC XcmsCreateCCC(Display *, int, Visual *, XcmsColor *,
			     XcmsCompressionProc, XPointer,
			     XcmsWhiteAdjustProc, XPointer);
extern XcmsCCC XcmsDefaultCCC(int, Display *);
extern Display *XcmsDisplayOfCCC(XcmsCCC);
extern XcmsColorFormat XcmsFormatOfPrefix(char *);
extern void XcmsFreeCCC(XcmsCCC);
extern int XcmsLookupColor(Display *, Colormap, const char *, XcmsColor *,
			   XcmsColor *, XcmsColorFormat);
extern char *XcmsPrefixOfFormat(XcmsColorFormat);
extern int XcmsQueryBlack(XcmsCCC, XcmsColorFormat, XcmsColor *);
extern int XcmsQueryBlue(XcmsColor *, XcmsColorFormat, XcmsCCC);
extern int XcmsQueryColor(Display *, Colormap, XcmsColor *,
			  XcmsColorFormat);
extern int XcmsQueryColors(unsigned int, XcmsColor *, Colormap, Display *,
			   XcmsColorFormat);
extern int XcmsQueryGreen(XcmsCCC, XcmsColorFormat, XcmsColor *);
extern int XcmsQueryRed(XcmsCCC, XcmsColorFormat, XcmsColor *);
extern int XcmsQueryWhite(XcmsCCC, XcmsColor *, XcmsColorFormat);
extern int XcmsRGBToRGBi(XcmsCCC, XcmsColor *, unsigned int, int *);
extern int XcmsRGBiToCIEXYZ(XcmsCCC, int *, unsigned int, XcmsColor *);
extern int XcmsRGBiToRGB(XcmsCCC, XcmsColor *, unsigned int, int *);
extern int XcmsScreenNumberOfCCC(XcmsCCC);
extern XcmsColor *XcmsScreenWhitePointOfCCC(XcmsCCC);
extern XcmsCCC XcmsSetCCCOfColormap(XcmsCCC, Colormap, Display *);
extern XcmsCompressionProc XcmsSetCompressionProc(XcmsCompressionProc,
						  XcmsCCC, XPointer);
extern XcmsWhiteAdjustProc XcmsSetWhiteAdjustProc(XPointer,
						  XcmsWhiteAdjustProc,
						  XcmsCCC);
extern int XcmsSetWhitePoint(XcmsCCC, XcmsColor *);
extern int XcmsStoreColor(XcmsColor *, Colormap, Display *);
extern int XcmsStoreColors(XcmsColor *, Colormap, Display *, int *,
			   unsigned int);
extern int XcmsTekHVCClipC(XcmsColor *, XcmsCCC, int *, unsigned int,
			   unsigned int);
extern int XcmsTekHVCClipV(XcmsCCC, unsigned int, unsigned int,
			   XcmsColor *, int *);
extern int XcmsTekHVCClipVC(unsigned int, XcmsColor *, XcmsCCC, int *,
			    unsigned int);
extern int XcmsTekHVCQueryMaxC(XcmsFloat, XcmsCCC, XcmsColor *, XcmsFloat);
extern int XcmsTekHVCQueryMaxV(XcmsCCC, XcmsFloat, XcmsFloat, XcmsColor *);
extern int XcmsTekHVCQueryMaxVC(XcmsColor *, XcmsFloat, XcmsCCC);
extern int XcmsTekHVCQueryMaxVSamples(XcmsCCC, XcmsFloat, XcmsColor *,
				      unsigned int);
extern int XcmsTekHVCQueryMinV(XcmsFloat, XcmsCCC, XcmsColor *, XcmsFloat);
extern int XcmsTekHVCToCIEuvY(XcmsCCC, XcmsColor *, XcmsColor *,
			      unsigned int);
extern int XcmsTekHVCWhiteShiftColors(XcmsCCC, XcmsColor *, XcmsColor *,
				      XcmsColorFormat, XcmsColor *,
				      unsigned int, int *);
extern Visual *XcmsVisualOfCCC(XcmsCCC);
</SCREEN>
</SECT2>
<SECT2>
<TITLE>X11/Xlib.h</TITLE>
<PARA>
</PARA>
<SCREEN>

struct _XDisplay;
typedef struct
    XColor;
typedef void *XVaNestedList;
typedef int (*XErrorHandler) (void);
typedef int (*XIOErrorHandler) (void);
typedef void (*XConnectionWatchProc) (void);

typedef char *XPointer;

typedef struct _XExtData {
    int number;
    struct _XExtData *next;
    int (*free_private) (struct _XExtData * extension);
    XPointer private_data;
} XExtData;
typedef struct
    XExtCodes;

typedef struct
    XPixmapFormatValues;

typedef struct
    XGCValues;

typedef struct _XGC *GC;

typedef struct
    Visual;

typedef struct
    Depth;

typedef struct
    Screen;

typedef struct
    ScreenFormat;

typedef struct
    XSetWindowAttributes;
typedef struct
    XWindowAttributes;

typedef struct
    XHostAddress;

typedef struct _XImage {
    int width;
    int height;
    int xoffset;
    int format;
    char *data;
    int byte_order;
    int bitmap_unit;
    int bitmap_bit_order;
    int bitmap_pad;
    int depth;
    int bytes_per_line;
    int bits_per_pixel;
    unsigned long int red_mask;
    unsigned long int green_mask;
    unsigned long int blue_mask;
    XPointer obdata;
    struct funcs f;
} XImage;

typedef struct
    XWindowChanges;

typedef struct
    XSegment;
typedef struct
    XPoint;
typedef struct
    XRectangle;
typedef struct
    XArc;

typedef struct
    XKeyboardControl;

typedef struct
    XKeyboardState;

typedef struct
    XTimeCoord;

typedef struct
    XModifierKeymap;

typedef struct _XDisplay Display;

typedef struct
    XKeyEvent;
typedef XKeyEvent XKeyPressedEvent;
typedef XKeyEvent XKeyReleasedEvent;
typedef struct
    XButtonEvent;
typedef XButtonEvent XButtonPressedEvent;
typedef XButtonEvent XButtonReleasedEvent;
typedef struct
    XMotionEvent;
typedef XMotionEvent XPointerMovedEvent;
typedef struct
    XCrossingEvent;
typedef XCrossingEvent XEnterWindowEvent;
typedef XCrossingEvent XLeaveWindowEvent;
typedef struct
    XFocusChangeEvent;
typedef XFocusChangeEvent XFocusInEvent;
typedef XFocusChangeEvent XFocusOutEvent;
typedef struct
    XKeymapEvent;
typedef struct
    XExposeEvent;
typedef struct
    XGraphicsExposeEvent;
typedef struct
    XNoExposeEvent;
typedef struct
    XVisibilityEvent;
typedef struct
    XCreateWindowEvent;
typedef struct
    XDestroyWindowEvent;
typedef struct
    XUnmapEvent;
typedef struct
    XMapEvent;
typedef struct
    XMapRequestEvent;
typedef struct
    XReparentEvent;
typedef struct
    XConfigureEvent;
typedef struct
    XGravityEvent;
typedef struct
    XResizeRequestEvent;
typedef struct
    XConfigureRequestEvent;
typedef struct
    XCirculateEvent;
typedef struct
    XCirculateRequestEvent;
typedef struct
    XPropertyEvent;
typedef struct
    XSelectionClearEvent;
typedef struct
    XSelectionRequestEvent;
typedef struct
    XSelectionEvent;
typedef struct
    XColormapEvent;
typedef union XClientMessageEvent;
typedef struct
    XMappingEvent;
typedef struct
    XErrorEvent;
typedef struct
    XAnyEvent;

typedef union _XEvent {
    int type;
    XAnyEvent xany;
    XKeyEvent xkey;
    XButtonEvent xbutton;
    XMotionEvent xmotion;
    XCrossingEvent xcrossing;
    XFocusChangeEvent xfocus;
    XExposeEvent xexpose;
    XGraphicsExposeEvent xgraphicsexpose;
    XNoExposeEvent xnoexpose;
    XVisibilityEvent xvisibility;
    XCreateWindowEvent xcreatewindow;
    XDestroyWindowEvent xdestroywindow;
    XUnmapEvent xunmap;
    XMapEvent xmap;
    XMapRequestEvent xmaprequest;
    XReparentEvent xreparent;
    XConfigureEvent xconfigure;
    XGravityEvent xgravity;
    XResizeRequestEvent xresizerequest;
    XConfigureRequestEvent xconfigurerequest;
    XCirculateEvent xcirculate;
    XCirculateRequestEvent xcirculaterequest;
    XPropertyEvent xproperty;
    XSelectionClearEvent xselectionclear;
    XSelectionRequestEvent xselectionrequest;
    XSelectionEvent xselection;
    XColormapEvent xcolormap;
    XClientMessageEvent xclient;
    XMappingEvent xmapping;
    XErrorEvent xerror;
    XKeymapEvent xkeymap;
    long int pad[1];
} XEvent;

typedef struct
    XCharStruct;

typedef struct
    XFontProp;
typedef struct
    XFontStruct;
typedef struct
    XFontSetExtents;

typedef struct
    XTextItem;
typedef struct
    XChar2b;
typedef struct
    XTextItem16;

typedef union XEDataObject;

typedef struct _XOM *XOM;
typedef struct _XOC *XOC;
typedef struct _XOC *XFontSet;

typedef struct
    XmbTextItem;
typedef struct
    XwcTextItem;

typedef struct _XIM *XIM;
typedef struct _XIC *XIC;
typedef void (*XIDProc) (void);
extern int XActivateScreenSaver(Display *);
extern int XAddConnectionWatch(XPointer, XConnectionWatchProc, Display *);
extern XExtCodes *XAddExtension(Display *);
extern int XAddHost(Display *, XHostAddress *);
extern int XAddHosts(Display *, XHostAddress *, int);
extern int XAddToExtensionList(struct _XExtData **, XExtData *);
extern int XAddToSaveSet(Display *, Window);
extern unsigned long int XAllPlanes(void);
extern int XAllocColor(Display *, Colormap, XColor *);
extern int XAllocColorCells(unsigned int, unsigned long int *,
			    unsigned int, unsigned long int *, int,
			    Colormap, Display *);
extern int XAllocColorPlanes(Display *, Colormap, int, unsigned long int *,
			     int, int, int, int, unsigned long int *,
			     unsigned long int *, unsigned long int *);
extern int XAllocNamedColor(Colormap, Display *, XColor *, XColor *,
			    const char *);
extern int XAllowEvents(Display *, int, Time);
extern int XAutoRepeatOff(Display *);
extern int XAutoRepeatOn(Display *);
extern char *XBaseFontNameListOfFontSet(XFontSet);
extern int XBell(Display *, int);
extern int XBitmapBitOrder(Display *);
extern int XBitmapPad(Display *);
extern int XBitmapUnit(Display *);
extern unsigned long int XBlackPixel(Display *, int);
extern unsigned long int XBlackPixelOfScreen(Screen *);
extern int XCellsOfScreen(Screen *);
extern int XChangeActivePointerGrab(Display *, unsigned int, Cursor, Time);
extern int XChangeGC(Display *, GC, unsigned long int, XGCValues *);
extern int XChangeKeyboardControl(Display *, unsigned long int,
				  XKeyboardControl *);
extern int XChangeKeyboardMapping(int, int, Display *, int, KeySym *);
extern int XChangePointerControl(Display *, int, int, int, int, int);
extern int XChangeProperty(Display *, int, Atom, Atom, Window, int,
			   const unsigned char *, int);
extern int XChangeSaveSet(int, Window, Display *);
extern int XChangeWindowAttributes(Display *, XSetWindowAttributes *,
				   unsigned long int, Window);
extern int XCheckIfEvent(struct
			 , XEvent *, Display *, typedef char *XPointer);
extern int XCheckMaskEvent(long int, Display *, XEvent *);
extern int XCheckTypedEvent(int, Display *, XEvent *);
extern int XCheckTypedWindowEvent(typedef XID Window, Display *, XEvent *,
				  int);
extern int XCheckWindowEvent(Display *, XEvent *, long int,
			     typedef XID Window);
extern int XCirculateSubwindows(int, typedef XID Window, Display *);
extern int XCirculateSubwindowsDown(typedef XID Window, Display *);
extern int XCirculateSubwindowsUp(Display *, typedef XID Window);
extern int XClearArea(int, typedef XID Window, Display *, unsigned int,
		      int, int, unsigned int);
extern int XClearWindow(Display *, typedef XID Window);
extern int XCloseDisplay(Display *);
extern int XCloseIM(typedef struct _XIM *XIM);
extern int XCloseOM(typedef struct _XOM *XOM);
extern int XConfigureWindow(typedef XID Window, Display *,
			    XWindowChanges *, unsigned int);
extern int XConnectionNumber(Display *);
extern int XContextDependentDrawing(typedef struct _XOC *XFontSet);
extern int XContextualDrawing(typedef struct _XOC *XFontSet);
extern int XConvertSelection(Display *, typedef unsigned long int Atom,
			     typedef unsigned long int Atom,
			     typedef unsigned long int Atom,
			     typedef unsigned long int Time,
			     typedef XID Window);
extern int XCopyArea(int, typedef struct _XGC *GC, typedef XID Drawable,
		     typedef XID Drawable, Display *, unsigned int,
		     unsigned int, int, int, int);
extern typedef XID Colormap XCopyColormapAndFree(Display *,
						 typedef XID Colormap);
extern int XCopyGC(Display *, typedef struct _XGC *GC, unsigned long int,
		   typedef struct _XGC *GC);
extern int XCopyPlane(typedef XID Drawable, typedef XID Drawable,
		      Display *, int, int, typedef struct _XGC *GC,
		      unsigned long int, int, int, unsigned int,
		      unsigned int);
extern typedef XID Pixmap XCreateBitmapFromData(unsigned int, unsigned int,
						const char *,
						typedef XID Drawable,
						Display *);
extern typedef XID Colormap XCreateColormap(Display *, typedef XID Window,
					    Visual *, int);
extern typedef XID Cursor XCreateFontCursor(unsigned int, Display *);
extern typedef struct _XOC *XFontSet XCreateFontSet(Display *,
						    const char *, char ***,
						    int *, char **);
extern typedef struct _XGC *GC XCreateGC(XGCValues *, unsigned long int,
					 typedef XID Drawable, Display *);
extern typedef XID Cursor XCreateGlyphCursor(XColor *, unsigned int,
					     unsigned int,
					     typedef XID Font,
					     typedef XID Font, Display *,
					     XColor *);
extern typedef struct _XIC *XIC XCreateIC(typedef struct _XIM *XIM, ...);
extern XImage *XCreateImage(Display *, Visual *, unsigned int, int, int,
			    char *, unsigned int, unsigned int, int, int);
extern typedef struct _XOC *XOC XCreateOC(..., typedef struct _XOM *XOM);
extern typedef XID Pixmap XCreatePixmap(Display *, typedef XID Drawable,
					unsigned int, unsigned int,
					unsigned int);
extern typedef XID Cursor XCreatePixmapCursor(unsigned int, unsigned int,
					      XColor *, XColor *,
					      typedef XID Pixmap,
					      typedef XID Pixmap,
					      Display *);
extern typedef XID Pixmap XCreatePixmapFromBitmapData(char *,
						      typedef XID Drawable,
						      Display *,
						      unsigned int,
						      unsigned long int,
						      unsigned long int,
						      unsigned int,
						      unsigned int);
extern typedef XID Window XCreateSimpleWindow(unsigned long int,
					      unsigned long int,
					      unsigned int, unsigned int,
					      unsigned int, int, int,
					      typedef XID Window,
					      Display *);
extern typedef XID Window XCreateWindow(Display *, typedef XID Window, int,
					int, unsigned int, unsigned int,
					unsigned int, int, unsigned int,
					Visual *, unsigned long int,
					XSetWindowAttributes *);
extern typedef XID Colormap XDefaultColormap(Display *, int);
extern typedef XID Colormap XDefaultColormapOfScreen(Screen *);
extern int XDefaultDepth(Display *, int);
extern int XDefaultDepthOfScreen(Screen *);
extern typedef struct _XGC *GC XDefaultGC(Display *, int);
extern typedef struct _XGC *GC XDefaultGCOfScreen(Screen *);
extern typedef XID Window XDefaultRootWindow(Display *);
extern int XDefaultScreen(Display *);
extern Screen *XDefaultScreenOfDisplay(Display *);
extern Visual *XDefaultVisual(Display *, int);
extern Visual *XDefaultVisualOfScreen(Screen *);
extern int XDefineCursor(Display *, typedef XID Window,
			 typedef XID Cursor);
extern XModifierKeymap *XDeleteModifiermapEntry(XModifierKeymap *,
						unsigned int, int);
extern int XDeleteProperty(Display *, typedef unsigned long int Atom,
			   typedef XID Window);
extern void XDestroyIC(typedef struct _XIC *XIC);
extern void XDestroyOC(typedef struct _XOC *XOC);
extern int XDestroySubwindows(Display *, typedef XID Window);
extern int XDestroyWindow(Display *, typedef XID Window);
extern int XDirectionalDependentDrawing(typedef struct _XOC *XFontSet);
extern int XDisableAccessControl(Display *);
extern int XDisplayCells(Display *, int);
extern int XDisplayHeight(Display *, int);
extern int XDisplayHeightMM(Display *, int);
extern int XDisplayKeycodes(Display *, int *, int *);
extern unsigned long int XDisplayMotionBufferSize(Display *);
extern char *XDisplayName(const char *);
extern Display *XDisplayOfIM(typedef struct _XIM *XIM);
extern Display *XDisplayOfOM(typedef struct _XOM *XOM);
extern Display *XDisplayOfScreen(Screen *);
extern int XDisplayPlanes(Display *, int);
extern char *XDisplayString(Display *);
extern int XDisplayWidth(Display *, int);
extern int XDisplayWidthMM(Display *, int);
extern int XDoesBackingStore(Screen *);
extern int XDoesSaveUnders(Screen *);
extern int XDrawArc(Display *, typedef XID Drawable,
		    typedef struct _XGC *GC, int, int, unsigned int,
		    unsigned int, int, int);
extern int XDrawArcs(Display *, typedef XID Drawable,
		     typedef struct _XGC *GC, XArc *, int);
extern int XDrawImageString(Display *, typedef XID Drawable,
			    typedef struct _XGC *GC, int, int,
			    const char *, int);
extern int XDrawImageString16(Display *, typedef XID Drawable,
			      typedef struct _XGC *GC, int, int, XChar2b *,
			      int);
extern int XDrawLine(Display *, typedef XID Drawable,
		     typedef struct _XGC *GC, int, int, int, int);
extern int XDrawLines(Display *, typedef XID Drawable,
		      typedef struct _XGC *GC, XPoint *, int, int);
extern int XDrawPoint(Display *, typedef XID Drawable,
		      typedef struct _XGC *GC, int, int);
extern int XDrawPoints(Display *, typedef XID Drawable,
		       typedef struct _XGC *GC, XPoint *, int, int);
extern int XDrawRectangle(Display *, typedef XID Drawable,
			  typedef struct _XGC *GC, int, int, unsigned int,
			  unsigned int);
extern int XDrawRectangles(Display *, typedef XID Drawable,
			   typedef struct _XGC *GC, XRectangle *, int);
extern int XDrawSegments(Display *, typedef XID Drawable,
			 typedef struct _XGC *GC, XSegment *, int);
extern int XDrawString(Display *, typedef XID Drawable,
		       typedef struct _XGC *GC, int, int, const char *,
		       int);
extern int XDrawString16(Display *, typedef XID Drawable,
			 typedef struct _XGC *GC, int, int, XChar2b *,
			 int);
extern int XDrawText(Display *, typedef XID Drawable,
		     typedef struct _XGC *GC, int, int, XTextItem *, int);
extern int XDrawText16(Display *, typedef XID Drawable,
		       typedef struct _XGC *GC, int, int, XTextItem16 *,
		       int);
extern XExtData **XEHeadOfExtensionList(typedef union XEDataObject);
extern int XESetBeforeFlush(void);
extern int *XESetCloseDisplay(void);
extern int XESetCopyGC(void);
extern int XESetCreateFont(void);
extern int XESetCreateGC(void);
extern int XESetError(void);
extern int XESetErrorString(void);
extern int XESetEventToWire(void);
extern int XESetFlushGC(void);
extern int XESetFreeFont(void);
extern int XESetFreeGC(void);
extern int XESetPrintErrorValues(void);
extern int XESetWireToError(void);
extern int XESetWireToEvent(void);
extern int XEnableAccessControl(Display *);
extern long int XEventMaskOfScreen(Screen *);
extern int XEventsQueued(Display *, int);
extern long int XExtendedMaxRequestSize(Display *);
extern XFontSetExtents *XExtentsOfFontSet(typedef struct _XOC *XFontSet);
extern char *XFetchBuffer(Display *, int *, int);
extern char *XFetchBytes(Display *, int *);
extern int XFetchName(char **, typedef XID Window, Display *);
extern int XFillArc(Display *, typedef XID Drawable,
		    typedef struct _XGC *GC, int, int, unsigned int,
		    unsigned int, int, int);
extern int XFillArcs(Display *, int, XArc *, typedef struct _XGC *GC,
		     typedef XID Drawable);
extern int XFillPolygon(Display *, typedef XID Drawable,
			typedef struct _XGC *GC, XPoint *, int, int, int);
extern int XFillRectangle(Display *, typedef XID Drawable,
			  typedef struct _XGC *GC, int, int, unsigned int,
			  unsigned int);
extern int XFillRectangles(XRectangle *, typedef struct _XGC *GC,
			   typedef XID Drawable, Display *, int);
extern int XFilterEvent(XEvent *, typedef XID Window);
extern XExtData *XFindOnExtensionList(XExtData * *, int);
extern int XFlush(Display *);
extern void XFlushGC(typedef struct _XGC *GC, Display *);
extern int XFontsOfFontSet(typedef struct _XOC *XFontSet, XFontStruct * **,
			   char ***);
extern int XForceScreenSaver(Display *, int);
extern int XFree(void *);
extern int XFreeColormap(typedef XID Colormap, Display *);
extern int XFreeColors(Display *, typedef XID Colormap,
		       unsigned long int *, int, unsigned long int);
extern int XFreeCursor(typedef XID Cursor, Display *);
extern int XFreeExtensionList(char **);
extern int XFreeFont(Display *, XFontStruct *);
extern int XFreeFontInfo(XFontStruct *, char **, int);
extern int XFreeFontNames(char **);
extern int XFreeFontPath(char **);
extern void XFreeFontSet(Display *, typedef struct _XOC *XFontSet);
extern int XFreeGC(typedef struct _XGC *GC, Display *);
extern int XFreeModifiermap(XModifierKeymap *);
extern int XFreePixmap(Display *, typedef XID Pixmap);
extern void XFreeStringList(char **);
extern typedef XID GContext XGContextFromGC(typedef struct _XGC *GC);
extern int XGeometry(Display *, int, const char *, const char *,
		     unsigned int, unsigned int, unsigned int, int, int,
		     int *, int *, int *, int *);
extern char *XGetAtomName(typedef unsigned long int Atom, Display *);
extern int XGetAtomNames(Display *, Atom *, int, char **);
extern int XGetCommand(Display *, typedef XID Window, char ***, int *);
extern char *XGetDefault(Display *, const char *, const char *);
extern int XGetErrorDatabaseText(const char *, Display *, const char *,
				 const char *, int, char *);
extern int XGetErrorText(Display *, int, char *, int);
extern char **XGetFontPath(Display *, int *);
extern int XGetFontProperty(unsigned long int *,
			    typedef unsigned long int Atom, XFontStruct *);
extern int XGetGCValues(Display *, typedef struct _XGC *GC,
			unsigned long int, XGCValues *);
extern int XGetGeometry(Display *, typedef XID Drawable, Window *, int *,
			int *, unsigned int *, unsigned int *,
			unsigned int *, unsigned int *);
extern char *XGetICValues(typedef struct _XIC *XIC, ...);
extern char *XGetIMValues(typedef struct _XIM *XIM, ...);
extern int XGetIconName(char **, typedef XID Window, Display *);
extern XImage *XGetImage(typedef XID Drawable, Display *, int,
			 unsigned long int, unsigned int, unsigned int,
			 int, int);
extern int XGetInputFocus(Display *, Window *, int *);
extern int XGetKeyboardControl(Display *, XKeyboardState *);
extern KeySym *XGetKeyboardMapping(int *, int, unsigned int, Display *);
extern XModifierKeymap *XGetModifierMapping(Display *);
extern XTimeCoord *XGetMotionEvents(Display *, typedef XID Window,
				    typedef unsigned long int Time,
				    typedef unsigned long int Time, int *);
extern char *XGetOCValues(typedef struct _XOC *XOC, ...);
extern char *XGetOMValues(typedef struct _XOM *XOM, ...);
extern int XGetPointerControl(Display *, int *, int *, int *);
extern int XGetPointerMapping(int, unsigned char *, Display *);
extern int XGetScreenSaver(Display *, int *, int *, int *, int *);
extern typedef XID Window XGetSelectionOwner(Display *,
					     typedef unsigned long int
					     Atom);
extern XImage *XGetSubImage(Display *, typedef XID Drawable, int, int,
			    unsigned int, unsigned int, unsigned long int,
			    int, XImage *, int, int);
extern int XGetTransientForHint(Window *, typedef XID Window, Display *);
extern int XGetWMColormapWindows(Display *, typedef XID Window, Window * *,
				 int *);
extern int XGetWMProtocols(Display *, int *, Atom * *, typedef XID Window);
extern int XGetWindowAttributes(Display *, XWindowAttributes *,
				typedef XID Window);
extern int XGetWindowProperty(unsigned char **, unsigned long int *,
			      long int, typedef unsigned long int Atom,
			      typedef unsigned long int Atom, int,
			      Display *, typedef XID Window,
			      unsigned long int *, int *, Atom *,
			      long int);
extern int XGrabButton(int, int, unsigned int, unsigned int, Display *,
		       unsigned int, int, typedef XID Window,
		       typedef XID Cursor, typedef XID Window);
extern int XGrabKey(int, int, int, typedef XID Window, int, unsigned int,
		    Display *);
extern int XGrabKeyboard(int, typedef XID Window, Display *,
			 typedef unsigned long int Time, int, int);
extern int XGrabPointer(Display *, typedef XID Window, int, unsigned int,
			typedef unsigned long int Time, typedef XID Cursor,
			typedef XID Window, int, int);
extern int XGrabServer(Display *);
extern int XHeightMMOfScreen(Screen *);
extern int XHeightOfScreen(Screen *);
extern typedef struct _XIM *XIM XIMOfIC(typedef struct _XIC *XIC);
extern int XIconifyWindow(typedef XID Window, Display *, int);
extern int XIfEvent(Display *, typedef char *XPointer, int, XEvent *);
extern int XImageByteOrder(Display *);
extern XExtCodes *XInitExtension(Display *, const char *);
extern int XInitImage(XImage *);
extern int XInitThreads(void);
extern XModifierKeymap *XInsertModifiermapEntry(unsigned int,
						XModifierKeymap *, int);
extern int XInstallColormap(typedef XID Colormap, Display *);
extern typedef unsigned long int Atom XInternAtom(int, const char *,
						  Display *);
extern int XInternAtoms(Display *, Atom *, int, int, char **);
extern int XInternalConnectionNumbers(int *, int **, Display *);
extern typedef XID KeySym XKeycodeToKeysym(Display *, int, unsigned int);
extern typedef unsigned char KeyCode XKeysymToKeycode(typedef XID KeySym,
						      Display *);
extern char *XKeysymToString(typedef XID KeySym);
extern int XKillClient(typedef unsigned long int XID, Display *);
extern unsigned long int XLastKnownRequestProcessed(Display *);
extern int *XListDepths(int *, int, Display *);
extern char **XListExtensions(Display *, int *);
extern char **XListFonts(int *, int, const char *, Display *);
extern char **XListFontsWithInfo(const char *, Display *, int, int *,
				 XFontStruct * *);
extern XHostAddress *XListHosts(int *, int *, Display *);
extern Colormap *XListInstalledColormaps(typedef XID Window, Display *,
					 int *);
extern XPixmapFormatValues *XListPixmapFormats(Display *, int *);
extern Atom *XListProperties(int *, typedef XID Window, Display *);
extern typedef XID Font XLoadFont(Display *, const char *);
extern XFontStruct *XLoadQueryFont(const char *, Display *);
extern char *XLocaleOfFontSet(typedef struct _XOC *XFontSet);
extern char *XLocaleOfIM(typedef struct _XIM *XIM);
extern char *XLocaleOfOM(typedef struct _XOM *XOM);
extern void XLockDisplay(Display *);
extern int XLookupColor(const char *, typedef XID Colormap, Display *,
			XColor *, XColor *);
extern typedef XID KeySym XLookupKeysym(XKeyEvent *, int);
extern int XLowerWindow(Display *, typedef XID Window);
extern int XMapRaised(typedef XID Window, Display *);
extern int XMapSubwindows(Display *, typedef XID Window);
extern int XMapWindow(Display *, typedef XID Window);
extern int XMaskEvent(XEvent *, long int, Display *);
extern int XMaxCmapsOfScreen(Screen *);
extern long int XMaxRequestSize(Display *);
extern int XMinCmapsOfScreen(Screen *);
extern int XMoveResizeWindow(unsigned int, unsigned int, int, int,
			     typedef XID Window, Display *);
extern int XMoveWindow(int, int, typedef XID Window, Display *);
extern XModifierKeymap *XNewModifiermap(int);
extern int XNextEvent(Display *, XEvent *);
extern unsigned long int XNextRequest(Display *);
extern int XNoOp(Display *);
extern typedef struct _XOM *XOM XOMOfOC(typedef struct _XOC *XOC);
extern Display *XOpenDisplay(const char *);
extern typedef struct _XIM *XIM XOpenIM(char *, char *, struct _XrmHashBucketRec
					*, Display *);
extern typedef struct _XOM *XOM XOpenOM(Display *, struct _XrmHashBucketRec
					*, const char *, const char *);
extern int XParseColor(Display *, typedef XID Colormap, const char *,
		       XColor *);
extern int XParseGeometry(unsigned int *, int *, int *, const char *,
			  unsigned int *);
extern int XPeekEvent(Display *, XEvent *);
extern int XPeekIfEvent(Display *, XEvent *, int, typedef char *XPointer);
extern int XPending(Display *);
extern int XPlanesOfScreen(Screen *);
extern void XProcessInternalConnection(Display *, int);
extern int XProtocolRevision(Display *);
extern int XProtocolVersion(Display *);
extern int XPutBackEvent(Display *, XEvent *);
extern int XPutImage(int, XImage *, typedef struct _XGC *GC,
		     typedef XID Drawable, Display *, int, int, int,
		     unsigned int, unsigned int);
extern int XQLength(Display *);
extern int XQueryBestCursor(unsigned int *, unsigned int, unsigned int,
			    typedef XID Drawable, Display *,
			    unsigned int *);
extern int XQueryBestSize(unsigned int *, unsigned int *, unsigned int,
			  unsigned int, typedef XID Drawable, int,
			  Display *);
extern int XQueryBestStipple(unsigned int, unsigned int, unsigned int *,
			     unsigned int *, typedef XID Drawable,
			     Display *);
extern int XQueryBestTile(Display *, unsigned int *, unsigned int *,
			  unsigned int, unsigned int,
			  typedef XID Drawable);
extern int XQueryColor(XColor *, typedef XID Colormap, Display *);
extern int XQueryColors(int, XColor *, typedef XID Colormap, Display *);
extern int XQueryExtension(int *, const char *, Display *, int *, int *);
extern XFontStruct *XQueryFont(Display *, typedef unsigned long int XID);
extern int XQueryKeymap(char, Display *);
extern int XQueryPointer(int *, Window *, Window *, typedef XID Window,
			 Display *, unsigned int *, int *, int *, int *);
extern int XQueryTextExtents(const char *, typedef unsigned long int XID,
			     Display *, XCharStruct *, int *, int *, int *,
			     int);
extern int XQueryTextExtents16(Display *, int *, int *, int *, int,
			       XChar2b *, typedef unsigned long int XID,
			       XCharStruct *);
extern int XQueryTree(unsigned int *, Window * *, Window *, Window *,
		      typedef XID Window, Display *);
extern int XRaiseWindow(typedef XID Window, Display *);
extern int XReadBitmapFile(int *, int *, Pixmap *, unsigned int *,
			   typedef XID Drawable, Display *, unsigned int *,
			   const char *);
extern int XReadBitmapFileData(int *, int *, unsigned char **,
			       unsigned int *, unsigned int *,
			       const char *);
extern int XRebindKeysym(KeySym *, typedef XID KeySym, Display *, int,
			 const unsigned char *, int);
extern int XRecolorCursor(Display *, typedef XID Cursor, XColor *,
			  XColor *);
extern int XReconfigureWMWindow(Display *, typedef XID Window, int,
				unsigned int, XWindowChanges *);
extern int XRefreshKeyboardMapping(XMappingEvent *);
extern int XRegisterIMInstantiateCallback(struct _XrmHashBucketRec
					  *, Display *,
					  typedef char *XPointer,
					  typedef void (*XIDProc) (void)
					  , char *, char *);
extern void XRemoveConnectionWatch(typedef
				   void (*XConnectionWatchProc) (void)
				   , Display *, typedef char *XPointer);
extern int XRemoveFromSaveSet(Display *, typedef XID Window);
extern int XRemoveHost(Display *, XHostAddress *);
extern int XRemoveHosts(XHostAddress *, Display *, int);
extern int XReparentWindow(Display *, typedef XID Window,
			   typedef XID Window, int, int);
extern int XResetScreenSaver(Display *);
extern int XResizeWindow(unsigned int, typedef XID Window, Display *,
			 unsigned int);
extern char *XResourceManagerString(Display *);
extern int XRestackWindows(Display *, Window *, int);
extern typedef XID Window XRootWindow(Display *, int);
extern typedef XID Window XRootWindowOfScreen(Screen *);
extern int XRotateBuffers(Display *, int);
extern int XRotateWindowProperties(typedef XID Window, Display *, int, int,
				   Atom *);
extern int XScreenCount(Display *);
extern int XScreenNumberOfScreen(Screen *);
extern Screen *XScreenOfDisplay(Display *, int);
extern char *XScreenResourceString(Screen *);
extern int XSelectInput(long int, typedef XID Window, Display *);
extern int XSendEvent(Display *, typedef XID Window, int, long int,
		      XEvent *);
extern char *XServerVendor(Display *);
extern int XSetAccessControl(Display *, int);
extern int (*XSetAfterFunction) (void) XSetAfterFunction(Display *);
extern int XSetArcMode(int, typedef struct _XGC *GC, Display *);
extern void XSetAuthorization(char *, int, char *, int);
extern int XSetBackground(typedef struct _XGC *GC, Display *,
			  unsigned long int);
extern int XSetClipMask(typedef XID Pixmap, typedef struct _XGC *GC,
			Display *);
extern int XSetClipOrigin(Display *, typedef struct _XGC *GC, int, int);
extern int XSetClipRectangles(int, int, typedef struct _XGC *GC, Display *,
			      int, int, XRectangle *);
extern int XSetCloseDownMode(Display *, int);
extern int XSetCommand(Display *, typedef XID Window, char **, int);
extern int XSetDashes(Display *, typedef struct _XGC *GC, int,
		      const char *, int);
extern typedef int (*XErrorHandler) (void) XSetErrorHandler(typedef
							    int
							    (*XErrorHandler)
							    (void)
    );
extern int XSetFillRule(int, typedef struct _XGC *GC, Display *);
extern int XSetFillStyle(Display *, int, typedef struct _XGC *GC);
extern int XSetFont(Display *, typedef XID Font, typedef struct _XGC *GC);
extern int XSetFontPath(int, char **, Display *);
extern int XSetForeground(unsigned long int, typedef struct _XGC *GC,
			  Display *);
extern int XSetFunction(typedef struct _XGC *GC, Display *, int);
extern int XSetGraphicsExposures(Display *, typedef struct _XGC *GC, int);
extern void XSetICFocus(typedef struct _XIC *XIC);
extern char *XSetICValues(typedef struct _XIC *XIC, ...);
extern typedef int (*XIOErrorHandler) (void)
XSetIOErrorHandler(typedef int (*XIOErrorHandler) (void)
    );
extern int XSetIconName(Display *, typedef XID Window, const char *);
extern int XSetInputFocus(Display *, typedef XID Window, int,
			  typedef unsigned long int Time);
extern int XSetLineAttributes(Display *, typedef struct _XGC *GC,
			      unsigned int, int, int, int);
extern char *XSetLocaleModifiers(const char *);
extern int XSetModifierMapping(Display *, XModifierKeymap *);
extern char *XSetOCValues(typedef struct _XOC *XOC, ...);
extern char *XSetOMValues(typedef struct _XOM *XOM, ...);
extern int XSetPlaneMask(Display *, typedef struct _XGC *GC,
			 unsigned long int);
extern int XSetPointerMapping(int, const unsigned char *, Display *);
extern int XSetScreenSaver(Display *, int, int, int, int);
extern int XSetSelectionOwner(Display *, typedef unsigned long int Atom,
			      typedef XID Window,
			      typedef unsigned long int Time);
extern int XSetState(Display *, typedef struct _XGC *GC, unsigned long int,
		     unsigned long int, int, unsigned long int);
extern int XSetStipple(Display *, typedef struct _XGC *GC,
		       typedef XID Pixmap);
extern int XSetSubwindowMode(Display *, typedef struct _XGC *GC, int);
extern int XSetTSOrigin(Display *, typedef struct _XGC *GC, int, int);
extern int XSetTile(typedef XID Pixmap, typedef struct _XGC *GC,
		    Display *);
extern int XSetTransientForHint(Display *, typedef XID Window,
				typedef XID Window);
extern int XSetWMColormapWindows(Display *, typedef XID Window, Window *,
				 int);
extern int XSetWMProtocols(Display *, typedef XID Window, Atom *, int);
extern int XSetWindowBackground(typedef XID Window, Display *,
				unsigned long int);
extern int XSetWindowBackgroundPixmap(typedef XID Pixmap,
				      typedef XID Window, Display *);
extern int XSetWindowBorder(Display *, typedef XID Window,
			    unsigned long int);
extern int XSetWindowBorderPixmap(Display *, typedef XID Window,
				  typedef XID Pixmap);
extern int XSetWindowBorderWidth(unsigned int, typedef XID Window,
				 Display *);
extern int XSetWindowColormap(Display *, typedef XID Colormap,
			      typedef XID Window);
extern int XStoreBuffer(Display *, const char *, int, int);
extern int XStoreBytes(Display *, int, const char *);
extern int XStoreColor(XColor *, typedef XID Colormap, Display *);
extern int XStoreColors(Display *, typedef XID Colormap, XColor *, int);
extern int XStoreName(const char *, typedef XID Window, Display *);
extern int XStoreNamedColor(Display *, typedef XID Colormap, const char *,
			    unsigned long int, int);
extern typedef XID KeySym XStringToKeysym(const char *);
extern int XSupportsLocale(void);
extern int XSync(Display *, int);
extern int (*XSynchronize) (void) XSynchronize(Display *);
extern int XTextExtents(XFontStruct *, const char *, int, int *, int *,
			int *, XCharStruct *);
extern int XTextExtents16(XFontStruct *, XChar2b *, int, int *, int *,
			  int *, XCharStruct *);
extern int XTextWidth(XFontStruct *, const char *, int);
extern int XTextWidth16(int, XFontStruct *, XChar2b *);
extern int XTranslateCoordinates(Display *, typedef XID Window,
				 typedef XID Window, int, int, int *,
				 int *, Window *);
extern int XUndefineCursor(Display *, typedef XID Window);
extern int XUngrabButton(Display *, unsigned int, unsigned int,
			 typedef XID Window);
extern int XUngrabKey(Display *, int, unsigned int, typedef XID Window);
extern int XUngrabKeyboard(Display *, typedef unsigned long int Time);
extern int XUngrabPointer(Display *, typedef unsigned long int Time);
extern int XUngrabServer(Display *);
extern int XUninstallColormap(typedef XID Colormap, Display *);
extern int XUnloadFont(Display *, typedef XID Font);
extern void XUnlockDisplay(Display *);
extern int XUnmapSubwindows(Display *, typedef XID Window);
extern int XUnmapWindow(Display *, typedef XID Window);
extern int XUnregisterIMInstantiateCallback(char *, struct _XrmHashBucketRec
					    *, Display *,
					    typedef char *XPointer,
					    typedef void (*XIDProc) (void)
					    , char *);
extern void XUnsetICFocus(typedef struct _XIC *XIC);
extern typedef void *XVaNestedList XVaCreateNestedList(int, ...);
extern int XVendorRelease(Display *);
extern typedef unsigned long int VisualID XVisualIDFromVisual(Visual *);
extern int XWarpPointer(Display *, typedef XID Window, typedef XID Window,
			int, int, unsigned int, unsigned int, int, int);
extern unsigned long int XWhitePixel(int, Display *);
extern unsigned long int XWhitePixelOfScreen(Screen *);
extern int XWidthMMOfScreen(Screen *);
extern int XWidthOfScreen(Screen *);
extern int XWindowEvent(Display *, typedef XID Window, long int, XEvent *);
extern int XWithdrawWindow(int, typedef XID Window, Display *);
extern int XWriteBitmapFile(unsigned int, typedef XID Pixmap, const char *,
			    Display *, int, int, unsigned int);
extern void XmbDrawImageString(typedef XID Drawable, Display *, int, int,
			       typedef struct _XGC *GC,
			       typedef struct _XOC *XFontSet, int,
			       const char *);
extern void XmbDrawString(Display *, typedef struct _XOC *XFontSet,
			  typedef XID Drawable, int,
			  typedef struct _XGC *GC, int, const char *, int);
extern void XmbDrawText(int, int, typedef struct _XGC *GC,
			typedef XID Drawable, Display *, XmbTextItem *,
			int);
extern int XmbLookupString(typedef struct _XIC *XIC, XKeyPressedEvent *,
			   char *, int, KeySym *, int *);
extern char *XmbResetIC(typedef struct _XIC *XIC);
extern int XmbTextEscapement(typedef struct _XOC *XFontSet, const char *,
			     int);
extern int XmbTextExtents(typedef struct _XOC *XFontSet, const char *, int,
			  XRectangle *, XRectangle *);
extern int XmbTextPerCharExtents(typedef struct _XOC *XFontSet,
				 const char *, int, XRectangle *,
				 XRectangle *, int, int *, XRectangle *,
				 XRectangle *);
extern void XrmInitialize(void);
extern void XwcDrawImageString(Display *, typedef XID Drawable,
			       typedef struct _XOC *XFontSet,
			       typedef struct _XGC *GC, int, int,
			       wchar_t *, int);
extern void XwcDrawString(Display *, typedef XID Drawable,
			  typedef struct _XOC *XFontSet,
			  typedef struct _XGC *GC, int, int, wchar_t *,
			  int);
extern void XwcDrawText(Display *, typedef XID Drawable,
			typedef struct _XGC *GC, int, int, XwcTextItem *,
			int);
extern int XwcLookupString(typedef struct _XIC *XIC, XKeyPressedEvent *,
			   wchar_t *, int, KeySym *, int *);
extern wchar_t *XwcResetIC(typedef struct _XIC *XIC);
extern int XwcTextEscapement(typedef struct _XOC *XFontSet, wchar_t *,
			     int);
extern int XwcTextExtents(typedef struct _XOC *XFontSet, wchar_t *, int,
			  XRectangle *, XRectangle *);
extern int XwcTextPerCharExtents(typedef struct _XOC *XFontSet, wchar_t *,
				 int, XRectangle *, XRectangle *, int,
				 int *, XRectangle *, XRectangle *);
</SCREEN>
</SECT2>
<SECT2>
<TITLE>X11/Xresource.h</TITLE>
<PARA>
</PARA>
<SCREEN>

extern void XrmCombineDatabase(XrmDatabase, XrmDatabase *, int);
extern int XrmCombineFileDatabase(const char *, XrmDatabase *, int);
extern void XrmDestroyDatabase(XrmDatabase);
extern int XrmEnumerateDatabase(XrmDatabase, XrmNameList, XrmClassList,
				int, int, XPointer);
extern XrmDatabase XrmGetDatabase(Display *);
extern XrmDatabase XrmGetFileDatabase(const char *);
extern int XrmGetResource(XrmDatabase, const char *, const char *, char **,
			  XrmValue *);
extern XrmDatabase XrmGetStringDatabase(const char *);
extern const char *XrmLocaleOfDatabase(XrmDatabase);
extern void XrmMergeDatabases(XrmDatabase, XrmDatabase *);
extern void XrmParseCommand(XrmDatabase *, XrmOptionDescList, int,
			    const char *, int *, char **);
extern XrmQuark XrmPermStringToQuark(const char *);
extern void XrmPutFileDatabase(XrmDatabase, const char *);
extern void XrmPutLineResource(XrmDatabase *, const char *);
extern void XrmPutResource(XrmDatabase *, const char *, const char *,
			   XrmValue *);
extern void XrmPutStringResource(XrmDatabase *, const char *,
				 const char *);
extern int XrmQGetResource(XrmDatabase, XrmNameList, XrmClassList,
			   XrmRepresentation *, XrmValue *);
extern int XrmQGetSearchList(XrmDatabase, XrmNameList, XrmClassList,
			     XrmSearchList, int);
extern int XrmQGetSearchResource(XrmSearchList, XrmName, XrmClass,
				 XrmRepresentation *, XrmValue *);
extern void XrmQPutResource(XrmDatabase *, XrmBindingList, XrmQuarkList,
			    XrmRepresentation, XrmValue *);
extern void XrmQPutStringResource(XrmDatabase *, XrmBindingList,
				  XrmQuarkList, const char *);
extern XrmString XrmQuarkToString(XrmQuark);
extern void XrmSetDatabase(Display *, XrmDatabase);
extern void XrmStringToBindingQuarkList(const char *, XrmBindingList,
					XrmQuarkList);
extern XrmQuark XrmStringToQuark(const char *);
extern void XrmStringToQuarkList(const char *, XrmQuarkList);
extern XrmQuark XrmUniqueQuark(void);
</SCREEN>
</SECT2>
<SECT2>
<TITLE>X11/Xutil.h</TITLE>
<PARA>
</PARA>
<SCREEN>

typedef struct
    XSizeHints;
typedef struct
    XWMHints;
typedef struct
    XTextProperty;
typedef struct
    XIconSize;
typedef struct
    XClassHint;
typedef struct _XComposeStatus {
    XPointer compose_ptr;
    int chars_matched;
} XComposeStatus;
typedef struct _XRegion *Region;
typedef struct
    XVisualInfo;
typedef struct
    XStandardColormap;
typedef int XContext;
typedef enum XICCEncodingStyle;
extern int XAddPixel(void);
extern XClassHint *XAllocClassHint(void);
extern XIconSize *XAllocIconSize(void);
extern XSizeHints *XAllocSizeHints(void);
extern XStandardColormap *XAllocStandardColormap(void);
extern XWMHints *XAllocWMHints(void);
extern int XClipBox(Region, XRectangle *);
extern void XConvertCase(KeySym, KeySym *, KeySym *);
extern Region XCreateRegion(void);
extern const char *XDefaultString(void);
extern int XDeleteContext(XContext, XID, Display *);
extern int XDestroyImage(XImage *);
extern int XDestroyRegion(Region);
extern int XEmptyRegion(Region);
extern int XEqualRegion(Region, Region);
extern int XFindContext(Display *, XID, XContext, XPointer *);
extern int XGetClassHint(Window, Display *, XClassHint *);
extern int XGetIconSizes(Display *, Window, XIconSize * *, int *);
extern int XGetNormalHints(Display *, XSizeHints *, Window);
extern unsigned long int XGetPixel(void);
extern int XGetRGBColormaps(Display *, Window, XStandardColormap * *,
			    int *, Atom);
extern int XGetSizeHints(Display *, Window, XSizeHints *, Atom);
extern int XGetStandardColormap(Display *, Window, XStandardColormap *,
				Atom);
extern int XGetTextProperty(Display *, Window, XTextProperty *, Atom);
extern XVisualInfo *XGetVisualInfo(Display *, long int, XVisualInfo *,
				   int *);
extern int XGetWMClientMachine(XTextProperty *, Window, Display *);
extern XWMHints *XGetWMHints(Display *, Window);
extern int XGetWMIconName(Display *, Window, XTextProperty *);
extern int XGetWMName(Display *, XTextProperty *, Window);
extern int XGetWMNormalHints(Display *, Window, XSizeHints *, long int *);
extern int XGetWMSizeHints(XSizeHints *, Window, Atom, Display *,
			   long int *);
extern int XGetZoomHints(XSizeHints *, Window, Display *);
extern int XIntersectRegion(Region, Region, Region);
extern int XLookupString(XKeyEvent *, XComposeStatus *, KeySym *, int,
			 char *);
extern int XMatchVisualInfo(Display *, int, int, int, XVisualInfo *);
extern int XOffsetRegion(int, int, Region);
extern int XPointInRegion(Region, int, int);
extern Region XPolygonRegion(int, XPoint *, int);
extern int XPutPixel(void);
extern int XRectInRegion(Region, unsigned int, int, unsigned int, int);
extern int XSaveContext(Display *, XID, XContext, const char *);
extern int XSetClassHint(Display *, XClassHint *, Window);
extern int XSetIconSizes(Display *, Window, XIconSize *, int);
extern int XSetNormalHints(XSizeHints *, Window, Display *);
extern void XSetRGBColormaps(Display *, Window, XStandardColormap *, int,
			     Atom);
extern int XSetRegion(Display *, Region, GC);
extern int XSetSizeHints(Display *, Window, XSizeHints *, Atom);
extern void XSetStandardColormap(Display *, Window, XStandardColormap *,
				 Atom);
extern int XSetStandardProperties(Display *, Window, const char *,
				  const char *, Pixmap, char **, int,
				  XSizeHints *);
extern void XSetTextProperty(Display *, Window, XTextProperty *, Atom);
extern void XSetWMClientMachine(Display *, XTextProperty *, Window);
extern int XSetWMHints(Display *, Window, XWMHints *);
extern void XSetWMIconName(Window, Display *, XTextProperty *);
extern void XSetWMName(Display *, Window, XTextProperty *);
extern void XSetWMNormalHints(XSizeHints *, Window, Display *);
extern void XSetWMProperties(Display *, Window, XTextProperty *,
			     XTextProperty *, char **, int, XSizeHints *,
			     XWMHints *, XClassHint *);
extern void XSetWMSizeHints(Display *, Window, XSizeHints *, Atom);
extern int XSetZoomHints(Display *, XSizeHints *, Window);
extern int XShrinkRegion(Region, int, int);
extern int XStringListToTextProperty(char **, int, XTextProperty *);
extern XImage *XSubImage(void);
extern int XSubtractRegion(Region, Region, Region);
extern int XTextPropertyToStringList(XTextProperty *, char ***, int *);
extern int XUnionRectWithRegion(XRectangle *, Region, Region);
extern int XUnionRegion(Region, Region, Region);
extern int XWMGeometry(const char *, const char *, int *, int *,
		       XSizeHints *, unsigned int, int *, int *, int,
		       Display *, int *);
extern int XXorRegion(Region, Region, Region);
extern void XmbSetWMProperties(Display *, Window, const char *,
			       const char *, char **, int, XSizeHints *,
			       XWMHints *, XClassHint *);
extern int XmbTextListToTextProperty(Display *, char **, int,
				     XICCEncodingStyle, XTextProperty *);
extern int XmbTextPropertyToTextList(Display *, XTextProperty *, char ***,
				     int *);
extern void XwcFreeStringList(wchar_t * *);
extern int XwcTextListToTextProperty(Display *, wchar_t * *, int,
				     XICCEncodingStyle, XTextProperty *);
extern int XwcTextPropertyToTextList(Display *, XTextProperty *,
				     wchar_t * **, int *);
extern int Xutf8TextPropertyToTextList(Display *, XTextProperty *,
				       char ***, int *);
extern int Xutf8TextListToTextProperty(Display *, char **, int,
				       XICCEncodingStyle, XTextProperty *);
</SCREEN>
</SECT2>
</SECT1>
<SECT1 ID=libX11man>
<TITLE>Interface Definitions for libX11</TITLE>
<PARA>
The interfaces defined on the following pages are included in libX11 and are defined
by this specification.
Unless otherwise noted, these interfaces shall be included
in the source standard.
</PARA>
<PARA>
Other interfaces listed in <XREF LINKEND=libX11> shall behave as described
in the referenced base document.
</PARA>
<!-- MISSING DEFINITION FOR Xutf8TextListToTextProperty -->
<!-- Lets just hope nobody notices -->
<!-- MISSING DEFINITION FOR Xutf8TextPropertyToTextList -->
<!-- Lets just hope nobody notices -->
</SECT1>
<!-- End of text generated from database -->
<!--    by $Header: /cvsroot/lsb/lsbspec/mklibspec,v 1.75 2005/10/12 22:24:36 nick Exp 0 -->


<!-- Start of text generated from database -->
<!-- generated from the LSB specification database -->
<!--    by $Header: /cvsroot/lsb/lsbspec/mklibspec,v 1.75 2005/10/12 22:24:36 nick Exp 0 -->
<!--    at Wed Oct 12 18:26:26 2005 -->
<SECT1 ID=libXext>
<TITLE>Interfaces for libXext</TITLE>
<PARA>
<XREF LINKEND="lib-libXext-def"> defines the library name and shared object name
for the libXext library
</PARA>
<TABLE id="lib-libXext-def">
<TITLE>libXext Definition</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Library:</ENTRY>
<ENTRY>libXext</ENTRY>
</ROW>
<ROW>
<ENTRY>SONAME:</ENTRY>
<ENTRY>libXext.so.6</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The behavior of the interfaces in this library is specified by the following specifications:<SIMPLELIST COLUMNS=1>
<MEMBER ID='REFSTD.libXext.1'>
[X-dbe] <XREF LINKEND="std.X.dbe">
</MEMBER>
<MEMBER ID='REFSTD.libXext.2'>
[X-DPMS] <XREF LINKEND="std.X.DPMS">
</MEMBER>
<MEMBER ID='REFSTD.libXext.3'>
[X-evi] <XREF LINKEND="std.X.evi">
</MEMBER>
<MEMBER ID='REFSTD.libXext.4'>
[X-security] <XREF LINKEND="std.X.security">
</MEMBER>
<MEMBER ID='REFSTD.libXext.5'>
[X-shape] <XREF LINKEND="std.X.shape">
</MEMBER>
<MEMBER ID='REFSTD.libXext.6'>
[X-shm] <XREF LINKEND="std.X.shm">
</MEMBER>
<MEMBER ID='REFSTD.libXext.7'>
[X-sync] <XREF LINKEND="std.X.sync">
</MEMBER>
</SIMPLELIST>
</PARA>
<!-- debug: database interface name X Shape Extension -->
<SECT2>
<!--libgroup-->
<TITLE>X Shape Extension</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Interfaces for X Shape Extension</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic functions
for X Shape Extension specified in <XREF linkend="tbl-libXext-x-s-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<TABLE id="tbl-libXext-x-s-ints">
<TITLE>libXext - X Shape Extension Function Interfaces</TITLE>
<TGROUP COLS=4>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>XShapeCombineMask</primary></indexterm>XShapeCombineMask <LINK LINKEND="REFSTD.libXext.5">[X-shape]</LINK></ENTRY>
<ENTRY><indexterm><primary>XShapeCombineRectangles</primary></indexterm>XShapeCombineRectangles <LINK LINKEND="REFSTD.libXext.5">[X-shape]</LINK></ENTRY>
<ENTRY><indexterm><primary>XShapeCombineRegion</primary></indexterm>XShapeCombineRegion <LINK LINKEND="REFSTD.libXext.5">[X-shape]</LINK></ENTRY>
<ENTRY><indexterm><primary>XShapeCombineShape</primary></indexterm>XShapeCombineShape <LINK LINKEND="REFSTD.libXext.5">[X-shape]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XShapeGetRectangles</primary></indexterm>XShapeGetRectangles <LINK LINKEND="REFSTD.libXext.5">[X-shape]</LINK></ENTRY>
<ENTRY><indexterm><primary>XShapeInputSelected</primary></indexterm>XShapeInputSelected <LINK LINKEND="REFSTD.libXext.5">[X-shape]</LINK></ENTRY>
<ENTRY><indexterm><primary>XShapeOffsetShape</primary></indexterm>XShapeOffsetShape <LINK LINKEND="REFSTD.libXext.5">[X-shape]</LINK></ENTRY>
<ENTRY><indexterm><primary>XShapeQueryExtension</primary></indexterm>XShapeQueryExtension <LINK LINKEND="REFSTD.libXext.5">[X-shape]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XShapeQueryExtents</primary></indexterm>XShapeQueryExtents <LINK LINKEND="REFSTD.libXext.5">[X-shape]</LINK></ENTRY>
<ENTRY><indexterm><primary>XShapeQueryVersion</primary></indexterm>XShapeQueryVersion <LINK LINKEND="REFSTD.libXext.5">[X-shape]</LINK></ENTRY>
<ENTRY><indexterm><primary>XShapeSelectInput</primary></indexterm>XShapeSelectInput <LINK LINKEND="REFSTD.libXext.5">[X-shape]</LINK></ENTRY>
<ENTRY></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>
</SECT2>
<!-- debug: database interface name X Display Power Management Signaling Extension -->
<SECT2>
<!--libgroup-->
<TITLE>X Display Power Management Signaling Extension</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Interfaces for X Display Power Management Signaling Extension</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic functions
for X Display Power Management Signaling Extension specified in <XREF linkend="tbl-libXext-x-d-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<TABLE id="tbl-libXext-x-d-ints">
<TITLE>libXext - X Display Power Management Signaling Extension Function Interfaces</TITLE>
<TGROUP COLS=4>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>DPMSCapable</primary></indexterm>DPMSCapable <LINK LINKEND="REFSTD.libXext.2">[X-DPMS]</LINK></ENTRY>
<ENTRY><indexterm><primary>DPMSDisable</primary></indexterm>DPMSDisable <LINK LINKEND="REFSTD.libXext.2">[X-DPMS]</LINK></ENTRY>
<ENTRY><indexterm><primary>DPMSEnable</primary></indexterm>DPMSEnable <LINK LINKEND="REFSTD.libXext.2">[X-DPMS]</LINK></ENTRY>
<ENTRY><indexterm><primary>DPMSForceLevel</primary></indexterm>DPMSForceLevel <LINK LINKEND="REFSTD.libXext.2">[X-DPMS]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>DPMSGetTimeouts</primary></indexterm>DPMSGetTimeouts <LINK LINKEND="REFSTD.libXext.2">[X-DPMS]</LINK></ENTRY>
<ENTRY><indexterm><primary>DPMSGetVersion</primary></indexterm>DPMSGetVersion <LINK LINKEND="REFSTD.libXext.2">[X-DPMS]</LINK></ENTRY>
<ENTRY><indexterm><primary>DPMSInfo</primary></indexterm>DPMSInfo <LINK LINKEND="REFSTD.libXext.2">[X-DPMS]</LINK></ENTRY>
<ENTRY><indexterm><primary>DPMSQueryExtension</primary></indexterm>DPMSQueryExtension <LINK LINKEND="REFSTD.libXext.2">[X-DPMS]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>DPMSSetTimeouts</primary></indexterm>DPMSSetTimeouts <LINK LINKEND="REFSTD.libXext.2">[X-DPMS]</LINK></ENTRY>
<ENTRY></ENTRY>
<ENTRY></ENTRY>
<ENTRY></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>
</SECT2>
<!-- debug: database interface name X Shared Memory Extensions -->
<SECT2>
<!--libgroup-->
<TITLE>X Shared Memory Extensions</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Interfaces for X Shared Memory Extensions</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic functions
for X Shared Memory Extensions specified in <XREF linkend="tbl-libXext-1-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<TABLE id="tbl-libXext-1-ints">
<TITLE>libXext - X Shared Memory Extensions Function Interfaces</TITLE>
<TGROUP COLS=4>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>XShmAttach</primary></indexterm>XShmAttach <LINK LINKEND="REFSTD.libXext.6">[X-shm]</LINK></ENTRY>
<ENTRY><indexterm><primary>XShmCreateImage</primary></indexterm>XShmCreateImage <LINK LINKEND="REFSTD.libXext.6">[X-shm]</LINK></ENTRY>
<ENTRY><indexterm><primary>XShmCreatePixmap</primary></indexterm>XShmCreatePixmap <LINK LINKEND="REFSTD.libXext.6">[X-shm]</LINK></ENTRY>
<ENTRY><indexterm><primary>XShmDetach</primary></indexterm>XShmDetach <LINK LINKEND="REFSTD.libXext.6">[X-shm]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XShmGetEventBase</primary></indexterm>XShmGetEventBase <LINK LINKEND="REFSTD.libXext.6">[X-shm]</LINK></ENTRY>
<ENTRY><indexterm><primary>XShmGetImage</primary></indexterm>XShmGetImage <LINK LINKEND="REFSTD.libXext.6">[X-shm]</LINK></ENTRY>
<ENTRY><indexterm><primary>XShmPixmapFormat</primary></indexterm>XShmPixmapFormat <LINK LINKEND="REFSTD.libXext.6">[X-shm]</LINK></ENTRY>
<ENTRY><indexterm><primary>XShmPutImage</primary></indexterm>XShmPutImage <LINK LINKEND="REFSTD.libXext.6">[X-shm]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XShmQueryExtension</primary></indexterm>XShmQueryExtension <LINK LINKEND="REFSTD.libXext.6">[X-shm]</LINK></ENTRY>
<ENTRY><indexterm><primary>XShmQueryVersion</primary></indexterm>XShmQueryVersion <LINK LINKEND="REFSTD.libXext.6">[X-shm]</LINK></ENTRY>
<ENTRY></ENTRY>
<ENTRY></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>
</SECT2>
<!-- debug: database interface name MIT-MISC Extension -->
<SECT2>
<!--libgroup-->
<TITLE>MIT-MISC Extension</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Interfaces for MIT-MISC Extension</TITLE>
<PARA>
No external functions are defined for libXext - MIT-MISC Extension
in this part of the specification. See also the relevant architecture specific supplement.
</PARA>
</SECT3>
</SECT2>
<!-- debug: database interface name X Synchronization Extension -->
<SECT2>
<!--libgroup-->
<TITLE>X Synchronization Extension</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Interfaces for X Synchronization Extension</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic functions
for X Synchronization Extension specified in <XREF linkend="tbl-libXext-2-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<TABLE id="tbl-libXext-2-ints">
<TITLE>libXext - X Synchronization Extension Function Interfaces</TITLE>
<TGROUP COLS=4>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>XSyncAwait</primary></indexterm>XSyncAwait <LINK LINKEND="REFSTD.libXext.7">[X-sync]</LINK></ENTRY>
<ENTRY><indexterm><primary>XSyncChangeAlarm</primary></indexterm>XSyncChangeAlarm <LINK LINKEND="REFSTD.libXext.7">[X-sync]</LINK></ENTRY>
<ENTRY><indexterm><primary>XSyncChangeCounter</primary></indexterm>XSyncChangeCounter <LINK LINKEND="REFSTD.libXext.7">[X-sync]</LINK></ENTRY>
<ENTRY><indexterm><primary>XSyncCreateAlarm</primary></indexterm>XSyncCreateAlarm <LINK LINKEND="REFSTD.libXext.7">[X-sync]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XSyncCreateCounter</primary></indexterm>XSyncCreateCounter <LINK LINKEND="REFSTD.libXext.7">[X-sync]</LINK></ENTRY>
<ENTRY><indexterm><primary>XSyncDestroyAlarm</primary></indexterm>XSyncDestroyAlarm <LINK LINKEND="REFSTD.libXext.7">[X-sync]</LINK></ENTRY>
<ENTRY><indexterm><primary>XSyncDestroyCounter</primary></indexterm>XSyncDestroyCounter <LINK LINKEND="REFSTD.libXext.7">[X-sync]</LINK></ENTRY>
<ENTRY><indexterm><primary>XSyncFreeSystemCounterList</primary></indexterm>XSyncFreeSystemCounterList <LINK LINKEND="REFSTD.libXext.7">[X-sync]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XSyncGetPriority</primary></indexterm>XSyncGetPriority <LINK LINKEND="REFSTD.libXext.7">[X-sync]</LINK></ENTRY>
<ENTRY><indexterm><primary>XSyncInitialize</primary></indexterm>XSyncInitialize <LINK LINKEND="REFSTD.libXext.7">[X-sync]</LINK></ENTRY>
<ENTRY><indexterm><primary>XSyncIntToValue</primary></indexterm>XSyncIntToValue <LINK LINKEND="REFSTD.libXext.7">[X-sync]</LINK></ENTRY>
<ENTRY><indexterm><primary>XSyncIntsToValue</primary></indexterm>XSyncIntsToValue <LINK LINKEND="REFSTD.libXext.7">[X-sync]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XSyncListSystemCounters</primary></indexterm>XSyncListSystemCounters <LINK LINKEND="REFSTD.libXext.7">[X-sync]</LINK></ENTRY>
<ENTRY><indexterm><primary>XSyncMaxValue</primary></indexterm>XSyncMaxValue <LINK LINKEND="REFSTD.libXext.7">[X-sync]</LINK></ENTRY>
<ENTRY><indexterm><primary>XSyncMinValue</primary></indexterm>XSyncMinValue <LINK LINKEND="REFSTD.libXext.7">[X-sync]</LINK></ENTRY>
<ENTRY><indexterm><primary>XSyncQueryAlarm</primary></indexterm>XSyncQueryAlarm <LINK LINKEND="REFSTD.libXext.7">[X-sync]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XSyncQueryCounter</primary></indexterm>XSyncQueryCounter <LINK LINKEND="REFSTD.libXext.7">[X-sync]</LINK></ENTRY>
<ENTRY><indexterm><primary>XSyncQueryExtension</primary></indexterm>XSyncQueryExtension <LINK LINKEND="REFSTD.libXext.7">[X-sync]</LINK></ENTRY>
<ENTRY><indexterm><primary>XSyncSetCounter</primary></indexterm>XSyncSetCounter <LINK LINKEND="REFSTD.libXext.7">[X-sync]</LINK></ENTRY>
<ENTRY><indexterm><primary>XSyncSetPriority</primary></indexterm>XSyncSetPriority <LINK LINKEND="REFSTD.libXext.7">[X-sync]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XSyncValueAdd</primary></indexterm>XSyncValueAdd <LINK LINKEND="REFSTD.libXext.7">[X-sync]</LINK></ENTRY>
<ENTRY><indexterm><primary>XSyncValueEqual</primary></indexterm>XSyncValueEqual <LINK LINKEND="REFSTD.libXext.7">[X-sync]</LINK></ENTRY>
<ENTRY><indexterm><primary>XSyncValueGreaterOrEqual</primary></indexterm>XSyncValueGreaterOrEqual <LINK LINKEND="REFSTD.libXext.7">[X-sync]</LINK></ENTRY>
<ENTRY><indexterm><primary>XSyncValueGreaterThan</primary></indexterm>XSyncValueGreaterThan <LINK LINKEND="REFSTD.libXext.7">[X-sync]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XSyncValueHigh32</primary></indexterm>XSyncValueHigh32 <LINK LINKEND="REFSTD.libXext.7">[X-sync]</LINK></ENTRY>
<ENTRY><indexterm><primary>XSyncValueIsNegative</primary></indexterm>XSyncValueIsNegative <LINK LINKEND="REFSTD.libXext.7">[X-sync]</LINK></ENTRY>
<ENTRY><indexterm><primary>XSyncValueIsPositive</primary></indexterm>XSyncValueIsPositive <LINK LINKEND="REFSTD.libXext.7">[X-sync]</LINK></ENTRY>
<ENTRY><indexterm><primary>XSyncValueIsZero</primary></indexterm>XSyncValueIsZero <LINK LINKEND="REFSTD.libXext.7">[X-sync]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XSyncValueLessOrEqual</primary></indexterm>XSyncValueLessOrEqual <LINK LINKEND="REFSTD.libXext.7">[X-sync]</LINK></ENTRY>
<ENTRY><indexterm><primary>XSyncValueLessThan</primary></indexterm>XSyncValueLessThan <LINK LINKEND="REFSTD.libXext.7">[X-sync]</LINK></ENTRY>
<ENTRY><indexterm><primary>XSyncValueLow32</primary></indexterm>XSyncValueLow32 <LINK LINKEND="REFSTD.libXext.7">[X-sync]</LINK></ENTRY>
<ENTRY><indexterm><primary>XSyncValueSubtract</primary></indexterm>XSyncValueSubtract <LINK LINKEND="REFSTD.libXext.7">[X-sync]</LINK></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>
</SECT2>
<!-- debug: database interface name X Security Extension -->
<SECT2>
<!--libgroup-->
<TITLE>X Security Extension</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Interfaces for X Security Extension</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic functions
for X Security Extension specified in <XREF linkend="tbl-libXext-3-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<TABLE id="tbl-libXext-3-ints">
<TITLE>libXext - X Security Extension Function Interfaces</TITLE>
<TGROUP COLS=4>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>XSecurityAllocXauth</primary></indexterm>XSecurityAllocXauth <LINK LINKEND="REFSTD.libXext.4">[X-security]</LINK></ENTRY>
<ENTRY><indexterm><primary>XSecurityFreeXauth</primary></indexterm>XSecurityFreeXauth <LINK LINKEND="REFSTD.libXext.4">[X-security]</LINK></ENTRY>
<ENTRY><indexterm><primary>XSecurityGenerateAuthorization</primary></indexterm>XSecurityGenerateAuthorization <LINK LINKEND="REFSTD.libXext.4">[X-security]</LINK></ENTRY>
<ENTRY><indexterm><primary>XSecurityQueryExtension</primary></indexterm>XSecurityQueryExtension <LINK LINKEND="REFSTD.libXext.4">[X-security]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XSecurityRevokeAuthorization</primary></indexterm>XSecurityRevokeAuthorization <LINK LINKEND="REFSTD.libXext.4">[X-security]</LINK></ENTRY>
<ENTRY></ENTRY>
<ENTRY></ENTRY>
<ENTRY></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>
</SECT2>
<!-- debug: database interface name X Double Buffer Extension -->
<SECT2>
<!--libgroup-->
<TITLE>X Double Buffer Extension</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Interfaces for X Double Buffer Extension</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic functions
for X Double Buffer Extension specified in <XREF linkend="tbl-libXext-4-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<TABLE id="tbl-libXext-4-ints">
<TITLE>libXext - X Double Buffer Extension Function Interfaces</TITLE>
<TGROUP COLS=4>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>XdbeAllocateBackBufferName</primary></indexterm>XdbeAllocateBackBufferName <LINK LINKEND="REFSTD.libXext.1">[X-dbe]</LINK></ENTRY>
<ENTRY><indexterm><primary>XdbeBeginIdiom</primary></indexterm>XdbeBeginIdiom <LINK LINKEND="REFSTD.libXext.1">[X-dbe]</LINK></ENTRY>
<ENTRY><indexterm><primary>XdbeDeallocateBackBufferName</primary></indexterm>XdbeDeallocateBackBufferName <LINK LINKEND="REFSTD.libXext.1">[X-dbe]</LINK></ENTRY>
<ENTRY><indexterm><primary>XdbeEndIdiom</primary></indexterm>XdbeEndIdiom <LINK LINKEND="REFSTD.libXext.1">[X-dbe]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XdbeFreeVisualInfo</primary></indexterm>XdbeFreeVisualInfo <LINK LINKEND="REFSTD.libXext.1">[X-dbe]</LINK></ENTRY>
<ENTRY><indexterm><primary>XdbeGetBackBufferAttributes</primary></indexterm>XdbeGetBackBufferAttributes <LINK LINKEND="REFSTD.libXext.1">[X-dbe]</LINK></ENTRY>
<ENTRY><indexterm><primary>XdbeGetVisualInfo</primary></indexterm>XdbeGetVisualInfo <LINK LINKEND="REFSTD.libXext.1">[X-dbe]</LINK></ENTRY>
<ENTRY><indexterm><primary>XdbeQueryExtension</primary></indexterm>XdbeQueryExtension <LINK LINKEND="REFSTD.libXext.1">[X-dbe]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XdbeSwapBuffers</primary></indexterm>XdbeSwapBuffers <LINK LINKEND="REFSTD.libXext.1">[X-dbe]</LINK></ENTRY>
<ENTRY></ENTRY>
<ENTRY></ENTRY>
<ENTRY></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>
</SECT2>
<!-- debug: database interface name X Extended Visual Interface Extension -->
<SECT2>
<!--libgroup-->
<TITLE>X Extended Visual Interface Extension</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Interfaces for X Extended Visual Interface Extension</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic functions
for X Extended Visual Interface Extension specified in <XREF linkend="tbl-libXext-x-e-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<TABLE id="tbl-libXext-x-e-ints">
<TITLE>libXext - X Extended Visual Interface Extension Function Interfaces</TITLE>
<TGROUP COLS=4>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>XeviGetVisualInfo</primary></indexterm>XeviGetVisualInfo <LINK LINKEND="REFSTD.libXext.3">[X-evi]</LINK></ENTRY>
<ENTRY><indexterm><primary>XeviQueryExtension</primary></indexterm>XeviQueryExtension <LINK LINKEND="REFSTD.libXext.3">[X-evi]</LINK></ENTRY>
<ENTRY><indexterm><primary>XeviQueryVersion</primary></indexterm>XeviQueryVersion <LINK LINKEND="REFSTD.libXext.3">[X-evi]</LINK></ENTRY>
<ENTRY></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>
</SECT2>
</SECT1>
<SECT1 ID=libXext-ddefs>
<TITLE>Data Definitions for libXext</TITLE>
<PARA>
This section defines global identifiers and their values that are associated
with interfaces contained in libXext.
These definitions are organized into groups that
correspond to system headers. This convention is used as a
convenience for the reader, and does not imply the existence
of these headers, or their content.
Where an interface is defined as requiring a particular system header file
all of the data definitions for that system header file presented here shall be in effect.
</PARA>
<PARA>
This section gives data definitions to promote binary application
portability, not to repeat source interface definitions available
elsewhere. System providers and application developers should use this ABI
to supplement - not to replace - source interface definition specifications.
</PARA>
<PARA>
This specification uses the <XREF LINKEND='std.ISOC99'> C Language as the reference programming language, and data definitions are specified in ISO C format. The C language is used here as a convenient notation. Using a C language description of these data objects does not preclude their use by other programming languages.</PARA>
<SECT2>
<TITLE>X11/extensions/XEVI.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define XEVI_TRANSPARENCY_NONE	0
#define XEVI_TRANSPARENCY_PIXEL	1
#define XEVI_TRANSPARENCY_MASK	2

typedef struct {
    VisualID core_visual_id;
    int screen;
    int level;
    unsigned int transparency_type;
    unsigned int transparency_value;
    unsigned int min_hw_colormaps;
    unsigned int max_hw_colormaps;
    unsigned int num_colormap_conflicts;
    VisualID *colormap_conflicts;
} ExtendedVisualInfo;
extern Unknown Type:".."
XeviGetVisualInfo(Display *, Visual *, int, ExtendedVisualInfo * *, int *);
extern Unknown Type:".." XeviQueryExtension(Display *);
extern Unknown Type:".." XeviQueryVersion(Display *, int *, int *);
</SCREEN>
</SECT2>
<SECT2>
<TITLE>X11/extensions/XKBgeom.h</TITLE>
<PARA>
</PARA>
<SCREEN>

extern int XkbAllocGeomColors(Unknown Type:"..", int);
extern int XkbAllocGeomDoodads(Unknown Type:"..", int);
extern int XkbAllocGeomKeyAliases(Unknown Type:"..", int);
extern int XkbAllocGeomKeys(XkbRowPtr, int);
extern int XkbAllocGeomOutlines(XkbShapePtr, int);
extern int XkbAllocGeomOverlayKeys(XkbOverlayRowPtr, int);
extern int XkbAllocGeomOverlayRows(XkbOverlayPtr, int);
extern int XkbAllocGeomOverlays(XkbSectionPtr, int);
extern int XkbAllocGeomPoints(XkbOutlinePtr, int);
extern int XkbAllocGeomProps(Unknown Type:"..", int);
extern int XkbAllocGeomRows(XkbSectionPtr, int);
extern int XkbAllocGeomSectionDoodads(XkbSectionPtr, int);
extern int XkbAllocGeomSections(Unknown Type:"..", int);
extern int XkbAllocGeomShapes(Unknown Type:"..", int);
extern int XkbAllocGeometry(Unknown Type:"..", XkbGeometrySizesPtr);
extern int XkbComputeRowBounds(Unknown Type:"..", XkbSectionPtr,
			       XkbRowPtr);
extern int XkbComputeSectionBounds(Unknown Type:"..", XkbSectionPtr);
extern int XkbComputeShapeBounds(XkbShapePtr);
extern int XkbComputeShapeTop(XkbShapePtr, XkbBoundsPtr);
extern char *XkbFindOverlayForKey(Unknown Type:"..", XkbSectionPtr,
				  char *);
extern void XkbFreeGeomColors(Unknown Type:"..", int, int, int);
extern void XkbFreeGeomDoodads(XkbDoodadPtr, int, int);
extern void XkbFreeGeomKeyAliases(Unknown Type:"..", int, int, int);
extern void XkbFreeGeomKeys(XkbRowPtr, int, int, int);
extern void XkbFreeGeomOutlines(XkbShapePtr, int, int, int);
extern void XkbFreeGeomOverlayKeys(XkbOverlayRowPtr, int, int, int);
extern void XkbFreeGeomOverlayRows(XkbOverlayPtr, int, int, int);
extern void XkbFreeGeomOverlays(XkbSectionPtr, int, int, int);
extern void XkbFreeGeomPoints(XkbOutlinePtr, int, int, int);
extern void XkbFreeGeomProperties(Unknown Type:"..", int, int, int);
extern void XkbFreeGeomRows(XkbSectionPtr, int, int, int);
extern void XkbFreeGeomSections(Unknown Type:"..", int, int, int);
extern void XkbFreeGeomShapes(Unknown Type:"..", int, int, int);
extern void XkbFreeGeometry(Unknown Type:"..", unsigned int, int);
extern int XkbGetGeometry(Display *, Unknown Type:"..");
extern int XkbGetNamedGeometry(Display *, Unknown Type:"..", Atom);
extern int XkbSetGeometry(Display *, unsigned int, Unknown Type:"..");
</SCREEN>
</SECT2>
<SECT2>
<TITLE>X11/extensions/XShm.h</TITLE>
<PARA>
</PARA>
<SCREEN>

extern int XShmAttach(Display *, XShmSegmentInfo *);
extern XImage *XShmCreateImage(Display *, Visual *, unsigned int, int,
			       char *, XShmSegmentInfo *, unsigned int,
			       unsigned int);
extern Pixmap XShmCreatePixmap(Display *, Drawable, char *,
			       XShmSegmentInfo *, unsigned int,
			       unsigned int, unsigned int);
extern int XShmDetach(Display *, XShmSegmentInfo *);
extern int XShmGetEventBase(Display *);
extern int XShmGetImage(Display *, Drawable, XImage *, int, int,
			unsigned long int);
extern int XShmPixmapFormat(Display *);
extern int XShmPutImage(Display *, Drawable, GC, XImage *, int, int, int,
			int, unsigned int, unsigned int, int);
extern int XShmQueryExtension(Display *);
extern int XShmQueryVersion(Display *, int *, int *, int *);
</SCREEN>
</SECT2>
<SECT2>
<TITLE>X11/extensions/Xdbe.h</TITLE>
<PARA>
</PARA>
<SCREEN>

extern XdbeBackBuffer XdbeAllocateBackBufferName(Display *, Window,
						 XdbeSwapAction);
extern int XdbeBeginIdiom(Display *);
extern int XdbeDeallocateBackBufferName(Display *, XdbeBackBuffer);
extern int XdbeEndIdiom(Display *);
extern void XdbeFreeVisualInfo(Unknown Type:".." *);
extern XdbeBackBufferAttributes *XdbeGetBackBufferAttributes(Display *,
							     XdbeBackBuffer);
extern Unknown Type:".." * XdbeGetVisualInfo(Display *, Drawable *, int *);
extern int XdbeQueryExtension(Display *, int *, int *);
extern int XdbeSwapBuffers(Display *, XdbeSwapInfo *, int);
</SCREEN>
</SECT2>
<SECT2>
<TITLE>X11/extensions/dpms.h</TITLE>
<PARA>
</PARA>
<SCREEN>

extern int DPMSCapable(Display *);
extern int DPMSDisable(Display *);
extern int DPMSEnable(Display *);
extern int DPMSForceLevel(Display *, Unknown Type:"..");
extern int DPMSGetTimeouts(Unknown Type:".."
			   *, Display *, Unknown Type:".."
			   *, Unknown Type:".." *);
extern int DPMSGetVersion(Display *, int *, int *);
extern int DPMSInfo(Unknown Type:".." *, Unknown Type:".." *, Display *);
extern int DPMSQueryExtension(int *, int *, Display *);
extern int DPMSSetTimeouts(Display *, Unknown Type:"..", Unknown Type:"..",
			   Unknown Type:"..");
</SCREEN>
</SECT2>
<SECT2>
<TITLE>X11/extensions/security.h</TITLE>
<PARA>
</PARA>
<SCREEN>

typedef unsigned long int XSecurityAuthorization;
typedef struct {
    unsigned int timeout;
    unsigned int trust_level;
    XID group;
    long int event_mask;
} XSecurityAuthorizationAttributes;
extern Xauth *XSecurityAllocXauth(void);
extern void XSecurityFreeXauth(Xauth *);
extern Xauth *XSecurityGenerateAuthorization(XSecurityAuthorization *,
					     XSecurityAuthorizationAttributes
					     *, unsigned long int, Xauth *,
					     Display *);
extern int XSecurityQueryExtension(int *, Display *, int *);
extern int XSecurityRevokeAuthorization(Display *, XSecurityAuthorization);
</SCREEN>
</SECT2>
<SECT2>
<TITLE>X11/extensions/shape.h</TITLE>
<PARA>
</PARA>
<SCREEN>

extern void XShapeCombineMask(Display *, Window, int, int, int, Pixmap,
			      int);
extern void XShapeCombineRectangles(Display *, Window, int, int, int,
				    XRectangle *, int, int, int);
extern void XShapeCombineRegion(Display *, Window, int, int, int, Region,
				int);
extern void XShapeCombineShape(Display *, Window, int, int, int, Window,
			       int, int);
extern XRectangle *XShapeGetRectangles(Display *, Window, int, int *,
				       int *);
extern unsigned long int XShapeInputSelected(Display *, Window);
extern void XShapeOffsetShape(Display *, Window, int, int, int);
extern int XShapeQueryExtension(Display *, int *, int *);
extern int XShapeQueryExtents(Display *, Window, int *, int *, int *,
			      unsigned int *, unsigned int *, int *, int *,
			      int *, unsigned int *, unsigned int *);
extern int XShapeQueryVersion(Display *, int *, int *);
extern void XShapeSelectInput(Display *, Window, unsigned long int);
</SCREEN>
</SECT2>
<SECT2>
<TITLE>X11/extensions/sync.h</TITLE>
<PARA>
</PARA>
<SCREEN>

typedef struct _XSyncSystemCounter {
    char *name;
    XSyncCounter counter;
    XSyncValue resolution;
} XSyncSystemCounter;
typedef struct {
    XSyncCounter counter;
    XSyncValueType value_type;
    XSyncValue wait_value;
    XSyncTestType test_type;
} XSyncTrigger;
typedef struct {
    XSyncTrigger trigger;
    XSyncValue event_threshold;
} XSyncWaitCondition;
typedef struct {
    XSyncTrigger trigger;
    XSyncValue delta;
    int events;
    XSyncAlarmState state;
} XSyncAlarmAttributes;

typedef XID XSyncCounter;
typedef XID XSyncAlarm;
typedef struct _XSyncValue {
    int hi;
    unsigned int lo;
} XSyncValue;
typedef enum {
    XSyncAbsolute, XSyncRelative
} XSyncValueType;
typedef enum {
    XSyncPositiveTransition, XSyncNegativeTransition,
	XSyncPositiveComparison, XSyncNegativeComparison
} XSyncTestType;
typedef enum {
    XSyncAlarmActive, XSyncAlarmInactive, XSyncAlarmDestroyed
} XSyncAlarmState;
extern int XSyncAwait(Display *, int, XSyncWaitCondition *);
extern int XSyncChangeAlarm(unsigned long int, XSyncAlarm, Display *,
			    XSyncAlarmAttributes *);
extern int XSyncChangeCounter(Display *, XSyncValue, XSyncCounter);
extern XSyncAlarm XSyncCreateAlarm(XSyncAlarmAttributes *,
				   unsigned long int, Display *);
extern XSyncCounter XSyncCreateCounter(Display *, XSyncValue);
extern int XSyncDestroyAlarm(XSyncAlarm, Display *);
extern int XSyncDestroyCounter(Display *, XSyncCounter);
extern void XSyncFreeSystemCounterList(XSyncSystemCounter *);
extern int XSyncGetPriority(int *, XID, Display *);
extern int XSyncInitialize(int *, int *, Display *);
extern void XSyncIntToValue(int, XSyncValue *);
extern void XSyncIntsToValue(unsigned int, int, XSyncValue *);
extern XSyncSystemCounter *XSyncListSystemCounters(int *, Display *);
extern void XSyncMaxValue(XSyncValue *);
extern void XSyncMinValue(XSyncValue *);
extern int XSyncQueryAlarm(XSyncAlarmAttributes *, XSyncAlarm, Display *);
extern int XSyncQueryCounter(Display *, XSyncValue *, XSyncCounter);
extern int XSyncQueryExtension(int *, Display *, int *);
extern int XSyncSetCounter(XSyncValue, XSyncCounter, Display *);
extern int XSyncSetPriority(int, XID, Display *);
extern void XSyncValueAdd(XSyncValue, XSyncValue, XSyncValue *, int *);
extern int XSyncValueEqual(XSyncValue, XSyncValue);
extern int XSyncValueGreaterOrEqual(XSyncValue, XSyncValue);
extern int XSyncValueGreaterThan(XSyncValue, XSyncValue);
extern int XSyncValueHigh32(XSyncValue);
extern int XSyncValueIsNegative(XSyncValue);
extern int XSyncValueIsPositive(XSyncValue);
extern int XSyncValueIsZero(XSyncValue);
extern int XSyncValueLessOrEqual(XSyncValue, XSyncValue);
extern int XSyncValueLessThan(XSyncValue, XSyncValue);
extern unsigned int XSyncValueLow32(XSyncValue);
extern void XSyncValueSubtract(XSyncValue, int *, XSyncValue,
			       XSyncValue *);
</SCREEN>
</SECT2>
</SECT1>
<!-- End of text generated from database -->
<!--    by $Header: /cvsroot/lsb/lsbspec/mklibspec,v 1.75 2005/10/12 22:24:36 nick Exp 0 -->


<!-- Start of text generated from database -->
<!-- generated from the LSB specification database -->
<!--    by $Header: /cvsroot/lsb/lsbspec/mklibspec,v 1.75 2005/10/12 22:24:36 nick Exp 0 -->
<!--    at Wed Oct 12 18:26:27 2005 -->
<SECT1 ID=libSM>
<TITLE>Interfaces for libSM</TITLE>
<PARA>
<XREF LINKEND="lib-libSM-def"> defines the library name and shared object name
for the libSM library
</PARA>
<TABLE id="lib-libSM-def">
<TITLE>libSM Definition</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Library:</ENTRY>
<ENTRY>libSM</ENTRY>
</ROW>
<ROW>
<ENTRY>SONAME:</ENTRY>
<ENTRY>libSM.so.6</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The behavior of the interfaces in this library is specified by the following specifications:<SIMPLELIST COLUMNS=1>
<MEMBER ID='REFSTD.libSM.1'>
[XSM] <XREF LINKEND="std.XSM">
</MEMBER>
</SIMPLELIST>
</PARA>
<!-- debug: database interface name Session Management Functions -->
<SECT2>
<!--libgroup-->
<TITLE>Session Management Functions</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Interfaces for Session Management Functions</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic functions
for Session Management Functions specified in <XREF linkend="tbl-libSM-ses-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<TABLE id="tbl-libSM-ses-ints">
<TITLE>libSM - Session Management Functions Function Interfaces</TITLE>
<TGROUP COLS=4>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>SmFreeProperty</primary></indexterm>SmFreeProperty <LINK LINKEND="REFSTD.libSM.1">[XSM]</LINK></ENTRY>
<ENTRY><indexterm><primary>SmFreeReasons</primary></indexterm>SmFreeReasons <LINK LINKEND="REFSTD.libSM.1">[XSM]</LINK></ENTRY>
<ENTRY><indexterm><primary>SmcClientID</primary></indexterm>SmcClientID <LINK LINKEND="REFSTD.libSM.1">[XSM]</LINK></ENTRY>
<ENTRY><indexterm><primary>SmcCloseConnection</primary></indexterm>SmcCloseConnection <LINK LINKEND="REFSTD.libSM.1">[XSM]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>SmcDeleteProperties</primary></indexterm>SmcDeleteProperties <LINK LINKEND="REFSTD.libSM.1">[XSM]</LINK></ENTRY>
<ENTRY><indexterm><primary>SmcGetIceConnection</primary></indexterm>SmcGetIceConnection <LINK LINKEND="REFSTD.libSM.1">[XSM]</LINK></ENTRY>
<ENTRY><indexterm><primary>SmcGetProperties</primary></indexterm>SmcGetProperties <LINK LINKEND="REFSTD.libSM.1">[XSM]</LINK></ENTRY>
<ENTRY><indexterm><primary>SmcInteractDone</primary></indexterm>SmcInteractDone <LINK LINKEND="REFSTD.libSM.1">[XSM]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>SmcInteractRequest</primary></indexterm>SmcInteractRequest <LINK LINKEND="REFSTD.libSM.1">[XSM]</LINK></ENTRY>
<ENTRY><indexterm><primary>SmcModifyCallbacks</primary></indexterm>SmcModifyCallbacks <LINK LINKEND="REFSTD.libSM.1">[XSM]</LINK></ENTRY>
<ENTRY><indexterm><primary>SmcOpenConnection</primary></indexterm>SmcOpenConnection <LINK LINKEND="REFSTD.libSM.1">[XSM]</LINK></ENTRY>
<ENTRY><indexterm><primary>SmcProtocolRevision</primary></indexterm>SmcProtocolRevision <LINK LINKEND="REFSTD.libSM.1">[XSM]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>SmcProtocolVersion</primary></indexterm>SmcProtocolVersion <LINK LINKEND="REFSTD.libSM.1">[XSM]</LINK></ENTRY>
<ENTRY><indexterm><primary>SmcRelease</primary></indexterm>SmcRelease <LINK LINKEND="REFSTD.libSM.1">[XSM]</LINK></ENTRY>
<ENTRY><indexterm><primary>SmcRequestSaveYourself</primary></indexterm>SmcRequestSaveYourself <LINK LINKEND="REFSTD.libSM.1">[XSM]</LINK></ENTRY>
<ENTRY><indexterm><primary>SmcRequestSaveYourselfPhase2</primary></indexterm>SmcRequestSaveYourselfPhase2 <LINK LINKEND="REFSTD.libSM.1">[XSM]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>SmcSaveYourselfDone</primary></indexterm>SmcSaveYourselfDone <LINK LINKEND="REFSTD.libSM.1">[XSM]</LINK></ENTRY>
<ENTRY><indexterm><primary>SmcSetErrorHandler</primary></indexterm>SmcSetErrorHandler <LINK LINKEND="REFSTD.libSM.1">[XSM]</LINK></ENTRY>
<ENTRY><indexterm><primary>SmcSetProperties</primary></indexterm>SmcSetProperties <LINK LINKEND="REFSTD.libSM.1">[XSM]</LINK></ENTRY>
<ENTRY><indexterm><primary>SmcVendor</primary></indexterm>SmcVendor <LINK LINKEND="REFSTD.libSM.1">[XSM]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>SmsCleanUp</primary></indexterm>SmsCleanUp <LINK LINKEND="REFSTD.libSM.1">[XSM]</LINK></ENTRY>
<ENTRY><indexterm><primary>SmsClientHostName</primary></indexterm>SmsClientHostName <LINK LINKEND="REFSTD.libSM.1">[XSM]</LINK></ENTRY>
<ENTRY><indexterm><primary>SmsClientID</primary></indexterm>SmsClientID <LINK LINKEND="REFSTD.libSM.1">[XSM]</LINK></ENTRY>
<ENTRY><indexterm><primary>SmsDie</primary></indexterm>SmsDie <LINK LINKEND="REFSTD.libSM.1">[XSM]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>SmsGenerateClientID</primary></indexterm>SmsGenerateClientID <LINK LINKEND="REFSTD.libSM.1">[XSM]</LINK></ENTRY>
<ENTRY><indexterm><primary>SmsGetIceConnection</primary></indexterm>SmsGetIceConnection <LINK LINKEND="REFSTD.libSM.1">[XSM]</LINK></ENTRY>
<ENTRY><indexterm><primary>SmsInitialize</primary></indexterm>SmsInitialize <LINK LINKEND="REFSTD.libSM.1">[XSM]</LINK></ENTRY>
<ENTRY><indexterm><primary>SmsInteract</primary></indexterm>SmsInteract <LINK LINKEND="REFSTD.libSM.1">[XSM]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>SmsProtocolRevision</primary></indexterm>SmsProtocolRevision <LINK LINKEND="REFSTD.libSM.1">[XSM]</LINK></ENTRY>
<ENTRY><indexterm><primary>SmsProtocolVersion</primary></indexterm>SmsProtocolVersion <LINK LINKEND="REFSTD.libSM.1">[XSM]</LINK></ENTRY>
<ENTRY><indexterm><primary>SmsRegisterClientReply</primary></indexterm>SmsRegisterClientReply <LINK LINKEND="REFSTD.libSM.1">[XSM]</LINK></ENTRY>
<ENTRY><indexterm><primary>SmsReturnProperties</primary></indexterm>SmsReturnProperties <LINK LINKEND="REFSTD.libSM.1">[XSM]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>SmsSaveComplete</primary></indexterm>SmsSaveComplete <LINK LINKEND="REFSTD.libSM.1">[XSM]</LINK></ENTRY>
<ENTRY><indexterm><primary>SmsSaveYourself</primary></indexterm>SmsSaveYourself <LINK LINKEND="REFSTD.libSM.1">[XSM]</LINK></ENTRY>
<ENTRY><indexterm><primary>SmsSaveYourselfPhase2</primary></indexterm>SmsSaveYourselfPhase2 <LINK LINKEND="REFSTD.libSM.1">[XSM]</LINK></ENTRY>
<ENTRY><indexterm><primary>SmsSetErrorHandler</primary></indexterm>SmsSetErrorHandler <LINK LINKEND="REFSTD.libSM.1">[XSM]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>SmsShutdownCancelled</primary></indexterm>SmsShutdownCancelled <LINK LINKEND="REFSTD.libSM.1">[XSM]</LINK></ENTRY>
<ENTRY></ENTRY>
<ENTRY></ENTRY>
<ENTRY></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>
</SECT2>
</SECT1>
<SECT1 ID=libSM-ddefs>
<TITLE>Data Definitions for libSM</TITLE>
<PARA>
This section defines global identifiers and their values that are associated
with interfaces contained in libSM.
These definitions are organized into groups that
correspond to system headers. This convention is used as a
convenience for the reader, and does not imply the existence
of these headers, or their content.
Where an interface is defined as requiring a particular system header file
all of the data definitions for that system header file presented here shall be in effect.
</PARA>
<PARA>
This section gives data definitions to promote binary application
portability, not to repeat source interface definitions available
elsewhere. System providers and application developers should use this ABI
to supplement - not to replace - source interface definition specifications.
</PARA>
<PARA>
This specification uses the <XREF LINKEND='std.ISOC99'> C Language as the reference programming language, and data definitions are specified in ISO C format. The C language is used here as a convenient notation. Using a C language description of these data objects does not preclude their use by other programming languages.</PARA>
<SECT2>
<TITLE>X11/SM/SMlib.h</TITLE>
<PARA>
</PARA>
<SCREEN>

typedef IcePointer SmPointer;
typedef struct _SmcConn *SmcConn;
typedef struct _SmsConn *SmsConn;

typedef struct {
    int length;
    SmPointer value;
} SmPropValue;
typedef struct {
    char *name;
    char *type;
    int num_vals;
    SmPropValue *vals;
} SmProp;

typedef enum {
    SmcClosedNow, SmcClosedASAP, SmcConnectionInUse
} SmcCloseStatus;

typedef void (*SmcSaveYourselfPhase2Proc) (void);
typedef void (*SmcInteractProc) (void);
typedef void (*SmcDieProc) (void);
typedef void (*SmcShutdownCancelledProc) (void);
typedef void (*SmcSaveCompleteProc) (void);
typedef void (*SmcPropReplyProc) (void);

typedef struct {
    SmcShutdownCancelledProc callback;
    SmPointer client_data;
} SmcCallbacks;

typedef void (*SmsSetPropertiesProc) (void);
typedef void (*SmsDeletePropertiesProc) (void);
typedef void (*SmsGetPropertiesProc) (void);

typedef struct {
    SmsGetPropertiesProc callback;
    SmPointer manager_data;
} SmsCallbacks;

typedef int (*SmsNewClientProc) (void);

typedef void (*SmcErrorHandler) (void);
typedef void (*SmsErrorHandler) (void);

extern void SmFreeProperty(SmProp *);
extern void SmFreeReasons(int, char **);
extern char *SmcClientID(SmcConn);
extern SmcCloseStatus SmcCloseConnection(char **, int, SmcConn);
extern void SmcDeleteProperties(char **, int, SmcConn);
extern IceConn SmcGetIceConnection(SmcConn);
extern int SmcGetProperties(SmPointer, SmcPropReplyProc, SmcConn);
extern void SmcInteractDone(SmcConn, int);
extern int SmcInteractRequest(SmcConn, SmPointer, SmcInteractProc, int);
extern void SmcModifyCallbacks(SmcConn, SmcCallbacks *, unsigned long int);
extern SmcConn SmcOpenConnection(char **, SmPointer, int, int, char *,
				 char *, SmcCallbacks *, unsigned long int,
				 int, char *);
extern int SmcProtocolRevision(SmcConn);
extern int SmcProtocolVersion(SmcConn);
extern char *SmcRelease(SmcConn);
extern void SmcRequestSaveYourself(int, int, int, SmcConn, int, int);
extern int SmcRequestSaveYourselfPhase2(SmPointer,
					SmcSaveYourselfPhase2Proc,
					SmcConn);
extern void SmcSaveYourselfDone(int, SmcConn);
extern SmcErrorHandler SmcSetErrorHandler(SmcErrorHandler);
extern void SmcSetProperties(SmcConn, int, SmProp * *);
extern char *SmcVendor(SmcConn);
extern void SmsCleanUp(SmsConn);
extern char *SmsClientHostName(SmsConn);
extern char *SmsClientID(SmsConn);
extern void SmsDie(SmsConn);
extern char *SmsGenerateClientID(SmsConn);
extern IceConn SmsGetIceConnection(SmsConn);
extern int SmsInitialize(char *, int, IceHostBasedAuthProc, SmPointer,
			 SmsNewClientProc, char *, char *);
extern void SmsInteract(SmsConn);
extern int SmsProtocolRevision(SmsConn);
extern int SmsProtocolVersion(SmsConn);
extern int SmsRegisterClientReply(char *, SmsConn);
extern void SmsReturnProperties(int, SmsConn, SmProp * *);
extern void SmsSaveComplete(SmsConn);
extern void SmsSaveYourself(int, int, int, SmsConn, int);
extern void SmsSaveYourselfPhase2(SmsConn);
extern SmsErrorHandler SmsSetErrorHandler(SmsErrorHandler);
extern void SmsShutdownCancelled(SmsConn);
</SCREEN>
</SECT2>
</SECT1>
<!-- End of text generated from database -->
<!--    by $Header: /cvsroot/lsb/lsbspec/mklibspec,v 1.75 2005/10/12 22:24:36 nick Exp 0 -->


<!-- Start of text generated from database -->
<!-- generated from the LSB specification database -->
<!--    by $Header: /cvsroot/lsb/lsbspec/mklibspec,v 1.75 2005/10/12 22:24:36 nick Exp 0 -->
<!--    at Wed Oct 12 18:26:26 2005 -->
<SECT1 ID=libICE>
<TITLE>Interfaces for libICE</TITLE>
<PARA>
<XREF LINKEND="lib-libICE-def"> defines the library name and shared object name
for the libICE library
</PARA>
<TABLE id="lib-libICE-def">
<TITLE>libICE Definition</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Library:</ENTRY>
<ENTRY>libICE</ENTRY>
</ROW>
<ROW>
<ENTRY>SONAME:</ENTRY>
<ENTRY>libICE.so.6</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The behavior of the interfaces in this library is specified by the following specifications:<SIMPLELIST COLUMNS=1>
<MEMBER ID='REFSTD.libICE.1'>
[XICE] <XREF LINKEND="std.XICE">
</MEMBER>
</SIMPLELIST>
</PARA>
<!-- debug: database interface name ICE Functions -->
<SECT2>
<!--libgroup-->
<TITLE>ICE Functions</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Interfaces for ICE Functions</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic functions
for ICE Functions specified in <XREF linkend="tbl-libICE-ice-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<TABLE id="tbl-libICE-ice-ints">
<TITLE>libICE - ICE Functions Function Interfaces</TITLE>
<TGROUP COLS=4>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>IceAcceptConnection</primary></indexterm>IceAcceptConnection <LINK LINKEND="REFSTD.libICE.1">[XICE]</LINK></ENTRY>
<ENTRY><indexterm><primary>IceAddConnectionWatch</primary></indexterm>IceAddConnectionWatch <LINK LINKEND="REFSTD.libICE.1">[XICE]</LINK></ENTRY>
<ENTRY><indexterm><primary>IceAllocScratch</primary></indexterm>IceAllocScratch <LINK LINKEND="REFSTD.libICE.1">[XICE]</LINK></ENTRY>
<ENTRY><indexterm><primary>IceAppLockConn</primary></indexterm>IceAppLockConn <LINK LINKEND="REFSTD.libICE.1">[XICE]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>IceAppUnlockConn</primary></indexterm>IceAppUnlockConn <LINK LINKEND="REFSTD.libICE.1">[XICE]</LINK></ENTRY>
<ENTRY><indexterm><primary>IceAuthFileName</primary></indexterm>IceAuthFileName <LINK LINKEND="REFSTD.libICE.1">[XICE]</LINK></ENTRY>
<ENTRY><indexterm><primary>IceCheckShutdownNegotiation</primary></indexterm>IceCheckShutdownNegotiation <LINK LINKEND="REFSTD.libICE.1">[XICE]</LINK></ENTRY>
<ENTRY><indexterm><primary>IceCloseConnection</primary></indexterm>IceCloseConnection <LINK LINKEND="REFSTD.libICE.1">[XICE]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>IceComposeNetworkIdList</primary></indexterm>IceComposeNetworkIdList <LINK LINKEND="REFSTD.libICE.1">[XICE]</LINK></ENTRY>
<ENTRY><indexterm><primary>IceConnectionNumber</primary></indexterm>IceConnectionNumber <LINK LINKEND="REFSTD.libICE.1">[XICE]</LINK></ENTRY>
<ENTRY><indexterm><primary>IceConnectionStatus</primary></indexterm>IceConnectionStatus <LINK LINKEND="REFSTD.libICE.1">[XICE]</LINK></ENTRY>
<ENTRY><indexterm><primary>IceConnectionString</primary></indexterm>IceConnectionString <LINK LINKEND="REFSTD.libICE.1">[XICE]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>IceFlush</primary></indexterm>IceFlush <LINK LINKEND="REFSTD.libICE.1">[XICE]</LINK></ENTRY>
<ENTRY><indexterm><primary>IceFreeAuthFileEntry</primary></indexterm>IceFreeAuthFileEntry <LINK LINKEND="REFSTD.libICE.1">[XICE]</LINK></ENTRY>
<ENTRY><indexterm><primary>IceFreeListenObjs</primary></indexterm>IceFreeListenObjs <LINK LINKEND="REFSTD.libICE.1">[XICE]</LINK></ENTRY>
<ENTRY><indexterm><primary>IceGenerateMagicCookie</primary></indexterm>IceGenerateMagicCookie <LINK LINKEND="REFSTD.libICE.1">[XICE]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>IceGetAuthFileEntry</primary></indexterm>IceGetAuthFileEntry <LINK LINKEND="REFSTD.libICE.1">[XICE]</LINK></ENTRY>
<ENTRY><indexterm><primary>IceGetConnectionContext</primary></indexterm>IceGetConnectionContext <LINK LINKEND="REFSTD.libICE.1">[XICE]</LINK></ENTRY>
<ENTRY><indexterm><primary>IceGetInBufSize</primary></indexterm>IceGetInBufSize <LINK LINKEND="REFSTD.libICE.1">[XICE]</LINK></ENTRY>
<ENTRY><indexterm><primary>IceGetListenConnectionNumber</primary></indexterm>IceGetListenConnectionNumber <LINK LINKEND="REFSTD.libICE.1">[XICE]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>IceGetListenConnectionString</primary></indexterm>IceGetListenConnectionString <LINK LINKEND="REFSTD.libICE.1">[XICE]</LINK></ENTRY>
<ENTRY><indexterm><primary>IceGetOutBufSize</primary></indexterm>IceGetOutBufSize <LINK LINKEND="REFSTD.libICE.1">[XICE]</LINK></ENTRY>
<ENTRY><indexterm><primary>IceInitThreads</primary></indexterm>IceInitThreads <LINK LINKEND="REFSTD.libICE.1">[XICE]</LINK></ENTRY>
<ENTRY><indexterm><primary>IceLastReceivedSequenceNumber</primary></indexterm>IceLastReceivedSequenceNumber <LINK LINKEND="REFSTD.libICE.1">[XICE]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>IceLastSentSequenceNumber</primary></indexterm>IceLastSentSequenceNumber <LINK LINKEND="REFSTD.libICE.1">[XICE]</LINK></ENTRY>
<ENTRY><indexterm><primary>IceListenForConnections</primary></indexterm>IceListenForConnections <LINK LINKEND="REFSTD.libICE.1">[XICE]</LINK></ENTRY>
<ENTRY><indexterm><primary>IceListenForWellKnownConnections</primary></indexterm>IceListenForWellKnownConnections <LINK LINKEND="REFSTD.libICE.1">[XICE]</LINK></ENTRY>
<ENTRY><indexterm><primary>IceLockAuthFile</primary></indexterm>IceLockAuthFile <LINK LINKEND="REFSTD.libICE.1">[XICE]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>IceOpenConnection</primary></indexterm>IceOpenConnection <LINK LINKEND="REFSTD.libICE.1">[XICE]</LINK></ENTRY>
<ENTRY><indexterm><primary>IcePing</primary></indexterm>IcePing <LINK LINKEND="REFSTD.libICE.1">[XICE]</LINK></ENTRY>
<ENTRY><indexterm><primary>IceProcessMessages</primary></indexterm>IceProcessMessages <LINK LINKEND="REFSTD.libICE.1">[XICE]</LINK></ENTRY>
<ENTRY><indexterm><primary>IceProtocolRevision</primary></indexterm>IceProtocolRevision <LINK LINKEND="REFSTD.libICE.1">[XICE]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>IceProtocolSetup</primary></indexterm>IceProtocolSetup <LINK LINKEND="REFSTD.libICE.1">[XICE]</LINK></ENTRY>
<ENTRY><indexterm><primary>IceProtocolShutdown</primary></indexterm>IceProtocolShutdown <LINK LINKEND="REFSTD.libICE.1">[XICE]</LINK></ENTRY>
<ENTRY><indexterm><primary>IceProtocolVersion</primary></indexterm>IceProtocolVersion <LINK LINKEND="REFSTD.libICE.1">[XICE]</LINK></ENTRY>
<ENTRY><indexterm><primary>IceReadAuthFileEntry</primary></indexterm>IceReadAuthFileEntry <LINK LINKEND="REFSTD.libICE.1">[XICE]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>IceRegisterForProtocolReply</primary></indexterm>IceRegisterForProtocolReply <LINK LINKEND="REFSTD.libICE.1">[XICE]</LINK></ENTRY>
<ENTRY><indexterm><primary>IceRegisterForProtocolSetup</primary></indexterm>IceRegisterForProtocolSetup <LINK LINKEND="REFSTD.libICE.1">[XICE]</LINK></ENTRY>
<ENTRY><indexterm><primary>IceRelease</primary></indexterm>IceRelease <LINK LINKEND="REFSTD.libICE.1">[XICE]</LINK></ENTRY>
<ENTRY><indexterm><primary>IceRemoveConnectionWatch</primary></indexterm>IceRemoveConnectionWatch <LINK LINKEND="REFSTD.libICE.1">[XICE]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>IceSetErrorHandler</primary></indexterm>IceSetErrorHandler <LINK LINKEND="REFSTD.libICE.1">[XICE]</LINK></ENTRY>
<ENTRY><indexterm><primary>IceSetHostBasedAuthProc</primary></indexterm>IceSetHostBasedAuthProc <LINK LINKEND="REFSTD.libICE.1">[XICE]</LINK></ENTRY>
<ENTRY><indexterm><primary>IceSetIOErrorHandler</primary></indexterm>IceSetIOErrorHandler <LINK LINKEND="REFSTD.libICE.1">[XICE]</LINK></ENTRY>
<ENTRY><indexterm><primary>IceSetPaAuthData</primary></indexterm>IceSetPaAuthData <LINK LINKEND="REFSTD.libICE.1">[XICE]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>IceSetShutdownNegotiation</primary></indexterm>IceSetShutdownNegotiation <LINK LINKEND="REFSTD.libICE.1">[XICE]</LINK></ENTRY>
<ENTRY><indexterm><primary>IceSwapping</primary></indexterm>IceSwapping <LINK LINKEND="REFSTD.libICE.1">[XICE]</LINK></ENTRY>
<ENTRY><indexterm><primary>IceUnlockAuthFile</primary></indexterm>IceUnlockAuthFile <LINK LINKEND="REFSTD.libICE.1">[XICE]</LINK></ENTRY>
<ENTRY><indexterm><primary>IceVendor</primary></indexterm>IceVendor <LINK LINKEND="REFSTD.libICE.1">[XICE]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>IceWriteAuthFileEntry</primary></indexterm>IceWriteAuthFileEntry <LINK LINKEND="REFSTD.libICE.1">[XICE]</LINK></ENTRY>
<ENTRY></ENTRY>
<ENTRY></ENTRY>
<ENTRY></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>
</SECT2>
</SECT1>
<SECT1 ID=libICE-ddefs>
<TITLE>Data Definitions for libICE</TITLE>
<PARA>
This section defines global identifiers and their values that are associated
with interfaces contained in libICE.
These definitions are organized into groups that
correspond to system headers. This convention is used as a
convenience for the reader, and does not imply the existence
of these headers, or their content.
Where an interface is defined as requiring a particular system header file
all of the data definitions for that system header file presented here shall be in effect.
</PARA>
<PARA>
This section gives data definitions to promote binary application
portability, not to repeat source interface definitions available
elsewhere. System providers and application developers should use this ABI
to supplement - not to replace - source interface definition specifications.
</PARA>
<PARA>
This specification uses the <XREF LINKEND='std.ISOC99'> C Language as the reference programming language, and data definitions are specified in ISO C format. The C language is used here as a convenient notation. Using a C language description of these data objects does not preclude their use by other programming languages.</PARA>
<SECT2>
<TITLE>X11/ICE/ICElib.h</TITLE>
<PARA>
</PARA>
<SCREEN>

typedef void *IcePointer;
typedef enum {
    IcePoAuthHaveReply, IcePoAuthRejected, IcePoAuthFailed,
	IcePoAuthDoneCleanup
} IcePoAuthStatus;
typedef enum {
    IcePaAuthContinue, IcePaAuthAccepted, IcePaAuthRejected,
	IcePaAuthFailed
} IcePaAuthStatus;
typedef enum {
    IceConnectPending, IceConnectAccepted, IceConnectRejected,
	IceConnectIOError
} IceConnectStatus;
typedef enum {
    IceProtocolSetupSuccess, IceProtocolSetupFailure,
	IceProtocolSetupIOError, IceProtocolAlreadyActive
} IceProtocolSetupStatus;
typedef enum {
    IceAcceptSuccess, IceAcceptFailure, IceAcceptBadMalloc
} IceAcceptStatus;
typedef enum {
    IceClosedNow, IceClosedASAP, IceConnectionInUse,
	IceStartedShutdownNegotiation
} IceCloseStatus;
typedef enum {
    IceProcessMessagesSuccess, IceProcessMessagesIOError,
	IceProcessMessagesConnectionClosed
} IceProcessMessagesStatus;

typedef struct {
    unsigned long int sequence_of_request;
    int major_opcode_of_request;
    int minor_opcode_of_request;
    IcePointer reply;
} IceReplyWaitInfo;

typedef struct _IceConn *IceConn;
typedef struct _IceListenObj
*IceListenObj;

typedef void (*IceWatchProc) (void);
typedef void (*IcePoProcessMsgProc) (void);
typedef void (*IcePaProcessMsgProc) (void);
typedef IcePoAuthStatus(*IcePoAuthProc) (void);
typedef IcePaAuthStatus(*IcePaAuthProc) (void);
typedef int (*IceHostBasedAuthProc) (void);
typedef int (*IceProtocolSetupProc) (void);
typedef void (*IceProtocolActivateProc) (void);
typedef void (*IceIOErrorProc) (void);
typedef void (*IcePingReplyProc) (void);
typedef void (*IceErrorHandler) (void);
typedef void (*IceIOErrorHandler) (void);

typedef struct {
    int major_version;
    int minor_version;
    IcePoProcessMsgProc process_msg_proc;
} IcePoVersionRec;
typedef struct {
    int major_version;
    int minor_version;
    IcePaProcessMsgProc process_msg_proc;
} IcePaVersionRec;
extern IceConn IceAcceptConnection(IceListenObj, IceAcceptStatus *);
extern int IceAddConnectionWatch(IceWatchProc, IcePointer);
extern char *IceAllocScratch(IceConn, unsigned long int);
extern void IceAppLockConn(IceConn);
extern void IceAppUnlockConn(IceConn);
extern int IceCheckShutdownNegotiation(IceConn);
extern IceCloseStatus IceCloseConnection(IceConn);
extern char *IceComposeNetworkIdList(IceListenObj *, int);
extern int IceConnectionNumber(IceConn);
extern IceConnectStatus IceConnectionStatus(IceConn);
extern char *IceConnectionString(IceConn);
extern int IceFlush(IceConn);
extern void IceFreeListenObjs(IceListenObj *, int);
extern IcePointer IceGetConnectionContext(IceConn);
extern int IceGetInBufSize(IceConn);
extern int IceGetListenConnectionNumber(IceListenObj);
extern char *IceGetListenConnectionString(IceListenObj);
extern int IceGetOutBufSize(IceConn);
extern int IceInitThreads(void);
extern unsigned long int IceLastReceivedSequenceNumber(IceConn);
extern unsigned long int IceLastSentSequenceNumber(IceConn);
extern int IceListenForConnections(char *, int, IceListenObj * *, int *);
extern int IceListenForWellKnownConnections(IceListenObj * *, int *,
					    char *, char *, int);
extern IceConn IceOpenConnection(char *, int, int, int, IcePointer,
				 char *);
extern int IcePing(IceConn, IcePingReplyProc, IcePointer);
extern IceProcessMessagesStatus IceProcessMessages(int *, IceConn,
						   IceReplyWaitInfo *);
extern int IceProtocolRevision(IceConn);
extern IceProtocolSetupStatus IceProtocolSetup(char **, char **, char *,
					       int, IcePointer, int *, int,
					       IceConn, int *, int);
extern int IceProtocolShutdown(int, IceConn);
extern int IceProtocolVersion(IceConn);
extern int IceRegisterForProtocolReply(IceProtocolActivateProc,
				       IceProtocolSetupProc,
				       IceHostBasedAuthProc,
				       IcePaAuthProc *, char **, int,
				       IcePaVersionRec *, char *, char *,
				       int, char *, IceIOErrorProc);
extern int IceRegisterForProtocolSetup(char **, int, IcePoAuthProc *,
				       char *, int, char *, char *,
				       IceIOErrorProc, IcePoVersionRec *);
extern char *IceRelease(IceConn);
extern void IceRemoveConnectionWatch(IceWatchProc, IcePointer);
extern IceErrorHandler IceSetErrorHandler(IceErrorHandler);
extern void IceSetHostBasedAuthProc(IceHostBasedAuthProc, IceListenObj);
extern IceIOErrorHandler IceSetIOErrorHandler(IceIOErrorHandler);
extern void IceSetShutdownNegotiation(int, IceConn);
extern int IceSwapping(IceConn);
extern char *IceVendor(IceConn);
</SCREEN>
</SECT2>
<SECT2>
<TITLE>X11/ICE/ICEutil.h</TITLE>
<PARA>
</PARA>
<SCREEN>

typedef struct {
    char *protocol_name;
    unsigned short protocol_data_length;
    char *protocol_data;
    char *network_id;
    char *auth_name;
    unsigned short auth_data_length;
    char *auth_data;
} IceAuthFileEntry;
typedef struct {
    char *protocol_name;
    char *network_id;
    char *auth_name;
    unsigned short auth_data_length;
    char *auth_data;
} IceAuthDataEntry;
extern char *IceAuthFileName(void);
extern void IceFreeAuthFileEntry(IceAuthFileEntry *);
extern char *IceGenerateMagicCookie(int);
extern IceAuthFileEntry *IceGetAuthFileEntry(char *, char *, char *);
extern int IceLockAuthFile(char *, long int, int, int);
extern IceAuthFileEntry *IceReadAuthFileEntry(FILE);
extern void IceSetPaAuthData(IceAuthDataEntry *, int);
extern void IceUnlockAuthFile(char *);
extern int IceWriteAuthFileEntry(FILE, IceAuthFileEntry *);
</SCREEN>
</SECT2>
</SECT1>
<!-- End of text generated from database -->
<!--    by $Header: /cvsroot/lsb/lsbspec/mklibspec,v 1.75 2005/10/12 22:24:36 nick Exp 0 -->


<!-- Start of text generated from database -->
<!-- generated from the LSB specification database -->
<!--    by $Header: /cvsroot/lsb/lsbspec/mklibspec,v 1.75 2005/10/12 22:24:36 nick Exp 0 -->
<!--    at Wed Oct 12 18:26:27 2005 -->
<SECT1 ID=libXt>
<TITLE>Interfaces for libXt</TITLE>
<PARA>
<XREF LINKEND="lib-libXt-def"> defines the library name and shared object name
for the libXt library
</PARA>
<TABLE id="lib-libXt-def">
<TITLE>libXt Definition</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Library:</ENTRY>
<ENTRY>libXt</ENTRY>
</ROW>
<ROW>
<ENTRY>SONAME:</ENTRY>
<ENTRY>libXt.so.6</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The behavior of the interfaces in this library is specified by the following specifications:<SIMPLELIST COLUMNS=1>
<MEMBER ID='REFSTD.libXt.1'>
[LSB] <XREF LINKEND="std.LSB">
</MEMBER>
<MEMBER ID='REFSTD.libXt.2'>
[Xt] <XREF LINKEND="std.Xt">
</MEMBER>
</SIMPLELIST>
</PARA>
<!-- debug: database interface name X Toolkit -->
<SECT2>
<!--libgroup-->
<TITLE>X Toolkit</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Interfaces for X Toolkit</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic functions
for X Toolkit specified in <XREF linkend="tbl-libXt-x-t-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<TABLE id="tbl-libXt-x-t-ints">
<TITLE>libXt - X Toolkit Function Interfaces</TITLE>
<TGROUP COLS=4>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>XtAddActions</primary></indexterm>XtAddActions <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
<ENTRY><indexterm><primary>XtAddCallback</primary></indexterm>XtAddCallback <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
<ENTRY><indexterm><primary>XtAddCallbacks</primary></indexterm>XtAddCallbacks <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
<ENTRY><indexterm><primary>XtAddConverter</primary></indexterm>XtAddConverter <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XtAddEventHandler</primary></indexterm>XtAddEventHandler <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
<ENTRY><indexterm><primary>XtAddExposureToRegion</primary></indexterm>XtAddExposureToRegion <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
<ENTRY><indexterm><primary>XtAddGrab</primary></indexterm>XtAddGrab <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
<ENTRY><indexterm><primary>XtAddInput</primary></indexterm>XtAddInput <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XtAddRawEventHandler</primary></indexterm>XtAddRawEventHandler <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
<ENTRY><indexterm><primary>XtAddSignal</primary></indexterm>XtAddSignal <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
<ENTRY><indexterm><primary>XtAddTimeOut</primary></indexterm>XtAddTimeOut <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
<ENTRY><indexterm><primary>XtAddWorkProc</primary></indexterm>XtAddWorkProc <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XtAllocateGC</primary></indexterm>XtAllocateGC <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
<ENTRY><indexterm><primary>XtAppAddActionHook</primary></indexterm>XtAppAddActionHook <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
<ENTRY><indexterm><primary>XtAppAddActions</primary></indexterm>XtAppAddActions <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
<ENTRY><indexterm><primary>XtAppAddBlockHook</primary></indexterm>XtAppAddBlockHook <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XtAppAddConverter</primary></indexterm>XtAppAddConverter <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
<ENTRY><indexterm><primary>XtAppAddInput</primary></indexterm>XtAppAddInput <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
<ENTRY><indexterm><primary>XtAppAddSignal</primary></indexterm>XtAppAddSignal <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
<ENTRY><indexterm><primary>XtAppAddTimeOut</primary></indexterm>XtAppAddTimeOut <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XtAppAddWorkProc</primary></indexterm>XtAppAddWorkProc <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
<ENTRY><indexterm><primary>XtAppCreateShell</primary></indexterm>XtAppCreateShell <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
<ENTRY><indexterm><primary>XtAppError</primary></indexterm>XtAppError <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
<ENTRY><indexterm><primary>XtAppErrorMsg</primary></indexterm>XtAppErrorMsg <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XtAppGetErrorDatabase</primary></indexterm>XtAppGetErrorDatabase <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
<ENTRY><indexterm><primary>XtAppGetErrorDatabaseText</primary></indexterm>XtAppGetErrorDatabaseText <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
<ENTRY><indexterm><primary>XtAppGetExitFlag</primary></indexterm>XtAppGetExitFlag <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
<ENTRY><indexterm><primary>XtAppGetSelectionTimeout</primary></indexterm>XtAppGetSelectionTimeout <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XtAppInitialize</primary></indexterm>XtAppInitialize <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
<ENTRY><indexterm><primary>XtAppLock</primary></indexterm>XtAppLock <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
<ENTRY><indexterm><primary>XtAppMainLoop</primary></indexterm>XtAppMainLoop <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
<ENTRY><indexterm><primary>XtAppNextEvent</primary></indexterm>XtAppNextEvent <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XtAppPeekEvent</primary></indexterm>XtAppPeekEvent <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
<ENTRY><indexterm><primary>XtAppPending</primary></indexterm>XtAppPending <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
<ENTRY><indexterm><primary>XtAppProcessEvent</primary></indexterm>XtAppProcessEvent <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
<ENTRY><indexterm><primary>XtAppReleaseCacheRefs</primary></indexterm>XtAppReleaseCacheRefs <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XtAppSetErrorHandler</primary></indexterm>XtAppSetErrorHandler <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
<ENTRY><indexterm><primary>XtAppSetErrorMsgHandler</primary></indexterm>XtAppSetErrorMsgHandler <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
<ENTRY><indexterm><primary>XtAppSetExitFlag</primary></indexterm>XtAppSetExitFlag <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
<ENTRY><indexterm><primary>XtAppSetFallbackResources</primary></indexterm>XtAppSetFallbackResources <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XtAppSetSelectionTimeout</primary></indexterm>XtAppSetSelectionTimeout <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
<ENTRY><indexterm><primary>XtAppSetTypeConverter</primary></indexterm>XtAppSetTypeConverter <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
<ENTRY><indexterm><primary>XtAppSetWarningHandler</primary></indexterm>XtAppSetWarningHandler <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
<ENTRY><indexterm><primary>XtAppSetWarningMsgHandler</primary></indexterm>XtAppSetWarningMsgHandler <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XtAppUnlock</primary></indexterm>XtAppUnlock <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
<ENTRY><indexterm><primary>XtAppWarning</primary></indexterm>XtAppWarning <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
<ENTRY><indexterm><primary>XtAppWarningMsg</primary></indexterm>XtAppWarningMsg <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
<ENTRY><indexterm><primary>XtAugmentTranslations</primary></indexterm>XtAugmentTranslations <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XtBuildEventMask</primary></indexterm>XtBuildEventMask <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
<ENTRY><indexterm><primary>XtCallAcceptFocus</primary></indexterm>XtCallAcceptFocus <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
<ENTRY><indexterm><primary>XtCallActionProc</primary></indexterm>XtCallActionProc <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
<ENTRY><indexterm><primary>XtCallCallbackList</primary></indexterm>XtCallCallbackList <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XtCallCallbacks</primary></indexterm>XtCallCallbacks <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
<ENTRY><indexterm><primary>XtCallConverter</primary></indexterm>XtCallConverter <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
<ENTRY><indexterm><primary>XtCallbackExclusive</primary></indexterm>XtCallbackExclusive <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
<ENTRY><indexterm><primary>XtCallbackNone</primary></indexterm>XtCallbackNone <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XtCallbackNonexclusive</primary></indexterm>XtCallbackNonexclusive <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
<ENTRY><indexterm><primary>XtCallbackPopdown</primary></indexterm>XtCallbackPopdown <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
<ENTRY><indexterm><primary>XtCallbackReleaseCacheRef</primary></indexterm>XtCallbackReleaseCacheRef <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
<ENTRY><indexterm><primary>XtCallbackReleaseCacheRefList</primary></indexterm>XtCallbackReleaseCacheRefList <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XtCalloc</primary></indexterm>XtCalloc <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
<ENTRY><indexterm><primary>XtCancelSelectionRequest</primary></indexterm>XtCancelSelectionRequest <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
<ENTRY><indexterm><primary>XtChangeManagedSet</primary></indexterm>XtChangeManagedSet <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
<ENTRY><indexterm><primary>XtClass</primary></indexterm>XtClass <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XtCloseDisplay</primary></indexterm>XtCloseDisplay <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
<ENTRY><indexterm><primary>XtConfigureWidget</primary></indexterm>XtConfigureWidget <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
<ENTRY><indexterm><primary>XtConvert</primary></indexterm>XtConvert <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
<ENTRY><indexterm><primary>XtConvertAndStore</primary></indexterm>XtConvertAndStore <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XtConvertCase</primary></indexterm>XtConvertCase <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
<ENTRY><indexterm><primary>XtCreateApplicationContext</primary></indexterm>XtCreateApplicationContext <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
<ENTRY><indexterm><primary>XtCreateApplicationShell</primary></indexterm>XtCreateApplicationShell <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
<ENTRY><indexterm><primary>XtCreateManagedWidget</primary></indexterm>XtCreateManagedWidget <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XtCreatePopupShell</primary></indexterm>XtCreatePopupShell <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
<ENTRY><indexterm><primary>XtCreateSelectionRequest</primary></indexterm>XtCreateSelectionRequest <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
<ENTRY><indexterm><primary>XtCreateWidget</primary></indexterm>XtCreateWidget <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
<ENTRY><indexterm><primary>XtCreateWindow</primary></indexterm>XtCreateWindow <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XtCvtColorToPixel</primary></indexterm>XtCvtColorToPixel <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
<ENTRY><indexterm><primary>XtCvtIntToBool</primary></indexterm>XtCvtIntToBool <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
<ENTRY><indexterm><primary>XtCvtIntToBoolean</primary></indexterm>XtCvtIntToBoolean <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
<ENTRY><indexterm><primary>XtCvtIntToColor</primary></indexterm>XtCvtIntToColor <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XtCvtIntToFloat</primary></indexterm>XtCvtIntToFloat <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
<ENTRY><indexterm><primary>XtCvtIntToFont</primary></indexterm>XtCvtIntToFont <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
<ENTRY><indexterm><primary>XtCvtIntToPixel</primary></indexterm>XtCvtIntToPixel <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
<ENTRY><indexterm><primary>XtCvtIntToPixmap</primary></indexterm>XtCvtIntToPixmap <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XtCvtIntToShort</primary></indexterm>XtCvtIntToShort <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
<ENTRY><indexterm><primary>XtCvtIntToUnsignedChar</primary></indexterm>XtCvtIntToUnsignedChar <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
<ENTRY><indexterm><primary>XtCvtStringToAcceleratorTable</primary></indexterm>XtCvtStringToAcceleratorTable <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
<ENTRY><indexterm><primary>XtCvtStringToAtom</primary></indexterm>XtCvtStringToAtom <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XtCvtStringToBool</primary></indexterm>XtCvtStringToBool <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
<ENTRY><indexterm><primary>XtCvtStringToBoolean</primary></indexterm>XtCvtStringToBoolean <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
<ENTRY><indexterm><primary>XtCvtStringToCommandArgArray</primary></indexterm>XtCvtStringToCommandArgArray <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
<ENTRY><indexterm><primary>XtCvtStringToCursor</primary></indexterm>XtCvtStringToCursor <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XtCvtStringToDimension</primary></indexterm>XtCvtStringToDimension <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
<ENTRY><indexterm><primary>XtCvtStringToDirectoryString</primary></indexterm>XtCvtStringToDirectoryString <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
<ENTRY><indexterm><primary>XtCvtStringToDisplay</primary></indexterm>XtCvtStringToDisplay <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
<ENTRY><indexterm><primary>XtCvtStringToFile</primary></indexterm>XtCvtStringToFile <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XtCvtStringToFloat</primary></indexterm>XtCvtStringToFloat <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
<ENTRY><indexterm><primary>XtCvtStringToFont</primary></indexterm>XtCvtStringToFont <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
<ENTRY><indexterm><primary>XtCvtStringToFontSet</primary></indexterm>XtCvtStringToFontSet <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
<ENTRY><indexterm><primary>XtCvtStringToFontStruct</primary></indexterm>XtCvtStringToFontStruct <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XtCvtStringToGravity</primary></indexterm>XtCvtStringToGravity <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
<ENTRY><indexterm><primary>XtCvtStringToInitialState</primary></indexterm>XtCvtStringToInitialState <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
<ENTRY><indexterm><primary>XtCvtStringToInt</primary></indexterm>XtCvtStringToInt <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
<ENTRY><indexterm><primary>XtCvtStringToPixel</primary></indexterm>XtCvtStringToPixel <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XtCvtStringToRestartStyle</primary></indexterm>XtCvtStringToRestartStyle <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
<ENTRY><indexterm><primary>XtCvtStringToShort</primary></indexterm>XtCvtStringToShort <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
<ENTRY><indexterm><primary>XtCvtStringToTranslationTable</primary></indexterm>XtCvtStringToTranslationTable <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
<ENTRY><indexterm><primary>XtCvtStringToUnsignedChar</primary></indexterm>XtCvtStringToUnsignedChar <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XtCvtStringToVisual</primary></indexterm>XtCvtStringToVisual <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
<ENTRY><indexterm><primary>XtDatabase</primary></indexterm>XtDatabase <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
<ENTRY><indexterm><primary>XtDestroyApplicationContext</primary></indexterm>XtDestroyApplicationContext <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
<ENTRY><indexterm><primary>XtDestroyGC</primary></indexterm>XtDestroyGC <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XtDestroyWidget</primary></indexterm>XtDestroyWidget <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
<ENTRY><indexterm><primary>XtDirectConvert</primary></indexterm>XtDirectConvert <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
<ENTRY><indexterm><primary>XtDisownSelection</primary></indexterm>XtDisownSelection <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
<ENTRY><indexterm><primary>XtDispatchEvent</primary></indexterm>XtDispatchEvent <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XtDispatchEventToWidget</primary></indexterm>XtDispatchEventToWidget <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
<ENTRY><indexterm><primary>XtDisplay</primary></indexterm>XtDisplay <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
<ENTRY><indexterm><primary>XtDisplayInitialize</primary></indexterm>XtDisplayInitialize <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
<ENTRY><indexterm><primary>XtDisplayOfObject</primary></indexterm>XtDisplayOfObject <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XtDisplayStringConversionWarning</primary></indexterm>XtDisplayStringConversionWarning <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
<ENTRY><indexterm><primary>XtDisplayToApplicationContext</primary></indexterm>XtDisplayToApplicationContext <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
<ENTRY><indexterm><primary>XtError</primary></indexterm>XtError <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
<ENTRY><indexterm><primary>XtErrorMsg</primary></indexterm>XtErrorMsg <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XtFindFile</primary></indexterm>XtFindFile <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
<ENTRY><indexterm><primary>XtFree</primary></indexterm>XtFree <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
<ENTRY><indexterm><primary>XtGetActionKeysym</primary></indexterm>XtGetActionKeysym <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
<ENTRY><indexterm><primary>XtGetActionList</primary></indexterm>XtGetActionList <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XtGetApplicationNameAndClass</primary></indexterm>XtGetApplicationNameAndClass <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
<ENTRY><indexterm><primary>XtGetApplicationResources</primary></indexterm>XtGetApplicationResources <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
<ENTRY><indexterm><primary>XtGetClassExtension</primary></indexterm>XtGetClassExtension <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
<ENTRY><indexterm><primary>XtGetConstraintResourceList</primary></indexterm>XtGetConstraintResourceList <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XtGetDisplays</primary></indexterm>XtGetDisplays <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
<ENTRY><indexterm><primary>XtGetErrorDatabase</primary></indexterm>XtGetErrorDatabase <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
<ENTRY><indexterm><primary>XtGetErrorDatabaseText</primary></indexterm>XtGetErrorDatabaseText <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
<ENTRY><indexterm><primary>XtGetGC</primary></indexterm>XtGetGC <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XtGetKeyboardFocusWidget</primary></indexterm>XtGetKeyboardFocusWidget <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
<ENTRY><indexterm><primary>XtGetKeysymTable</primary></indexterm>XtGetKeysymTable <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
<ENTRY><indexterm><primary>XtGetMultiClickTime</primary></indexterm>XtGetMultiClickTime <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
<ENTRY><indexterm><primary>XtGetResourceList</primary></indexterm>XtGetResourceList <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XtGetSelectionParameters</primary></indexterm>XtGetSelectionParameters <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
<ENTRY><indexterm><primary>XtGetSelectionRequest</primary></indexterm>XtGetSelectionRequest <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
<ENTRY><indexterm><primary>XtGetSelectionTimeout</primary></indexterm>XtGetSelectionTimeout <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
<ENTRY><indexterm><primary>XtGetSelectionValue</primary></indexterm>XtGetSelectionValue <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XtGetSelectionValueIncremental</primary></indexterm>XtGetSelectionValueIncremental <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
<ENTRY><indexterm><primary>XtGetSelectionValues</primary></indexterm>XtGetSelectionValues <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
<ENTRY><indexterm><primary>XtGetSelectionValuesIncremental</primary></indexterm>XtGetSelectionValuesIncremental <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
<ENTRY><indexterm><primary>XtGetSubresources</primary></indexterm>XtGetSubresources <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XtGetSubvalues</primary></indexterm>XtGetSubvalues <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
<ENTRY><indexterm><primary>XtGetValues</primary></indexterm>XtGetValues <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
<ENTRY><indexterm><primary>XtGrabButton</primary></indexterm>XtGrabButton <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
<ENTRY><indexterm><primary>XtGrabKey</primary></indexterm>XtGrabKey <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XtGrabKeyboard</primary></indexterm>XtGrabKeyboard <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
<ENTRY><indexterm><primary>XtGrabPointer</primary></indexterm>XtGrabPointer <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
<ENTRY><indexterm><primary>XtHasCallbacks</primary></indexterm>XtHasCallbacks <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
<ENTRY><indexterm><primary>XtHooksOfDisplay</primary></indexterm>XtHooksOfDisplay <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XtInitialize</primary></indexterm>XtInitialize <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
<ENTRY><indexterm><primary>XtInitializeWidgetClass</primary></indexterm>XtInitializeWidgetClass <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
<ENTRY><indexterm><primary>XtInsertEventHandler</primary></indexterm>XtInsertEventHandler <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
<ENTRY><indexterm><primary>XtInsertEventTypeHandler</primary></indexterm>XtInsertEventTypeHandler <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XtInsertRawEventHandler</primary></indexterm>XtInsertRawEventHandler <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
<ENTRY><indexterm><primary>XtInstallAccelerators</primary></indexterm>XtInstallAccelerators <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
<ENTRY><indexterm><primary>XtInstallAllAccelerators</primary></indexterm>XtInstallAllAccelerators <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
<ENTRY><indexterm><primary>XtIsApplicationShell</primary></indexterm>XtIsApplicationShell <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XtIsComposite</primary></indexterm>XtIsComposite <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
<ENTRY><indexterm><primary>XtIsConstraint</primary></indexterm>XtIsConstraint <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
<ENTRY><indexterm><primary>XtIsManaged</primary></indexterm>XtIsManaged <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
<ENTRY><indexterm><primary>XtIsObject</primary></indexterm>XtIsObject <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XtIsOverrideShell</primary></indexterm>XtIsOverrideShell <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
<ENTRY><indexterm><primary>XtIsRealized</primary></indexterm>XtIsRealized <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
<ENTRY><indexterm><primary>XtIsRectObj</primary></indexterm>XtIsRectObj <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
<ENTRY><indexterm><primary>XtIsSensitive</primary></indexterm>XtIsSensitive <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XtIsSessionShell</primary></indexterm>XtIsSessionShell <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
<ENTRY><indexterm><primary>XtIsShell</primary></indexterm>XtIsShell <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
<ENTRY><indexterm><primary>XtIsSubclass</primary></indexterm>XtIsSubclass <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
<ENTRY><indexterm><primary>XtIsTopLevelShell</primary></indexterm>XtIsTopLevelShell <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XtIsTransientShell</primary></indexterm>XtIsTransientShell <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
<ENTRY><indexterm><primary>XtIsVendorShell</primary></indexterm>XtIsVendorShell <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
<ENTRY><indexterm><primary>XtIsWMShell</primary></indexterm>XtIsWMShell <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
<ENTRY><indexterm><primary>XtIsWidget</primary></indexterm>XtIsWidget <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XtKeysymToKeycodeList</primary></indexterm>XtKeysymToKeycodeList <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
<ENTRY><indexterm><primary>XtLastEventProcessed</primary></indexterm>XtLastEventProcessed <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
<ENTRY><indexterm><primary>XtLastTimestampProcessed</primary></indexterm>XtLastTimestampProcessed <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
<ENTRY><indexterm><primary>XtMainLoop</primary></indexterm>XtMainLoop <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XtMakeGeometryRequest</primary></indexterm>XtMakeGeometryRequest <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
<ENTRY><indexterm><primary>XtMakeResizeRequest</primary></indexterm>XtMakeResizeRequest <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
<ENTRY><indexterm><primary>XtMalloc</primary></indexterm>XtMalloc <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
<ENTRY><indexterm><primary>XtManageChild</primary></indexterm>XtManageChild <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XtManageChildren</primary></indexterm>XtManageChildren <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
<ENTRY><indexterm><primary>XtMapWidget</primary></indexterm>XtMapWidget <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
<ENTRY><indexterm><primary>XtMenuPopupAction</primary></indexterm>XtMenuPopupAction <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
<ENTRY><indexterm><primary>XtMergeArgLists</primary></indexterm>XtMergeArgLists <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XtMoveWidget</primary></indexterm>XtMoveWidget <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
<ENTRY><indexterm><primary>XtName</primary></indexterm>XtName <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
<ENTRY><indexterm><primary>XtNameToWidget</primary></indexterm>XtNameToWidget <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
<ENTRY><indexterm><primary>XtNewString</primary></indexterm>XtNewString <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XtNextEvent</primary></indexterm>XtNextEvent <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
<ENTRY><indexterm><primary>XtNoticeSignal</primary></indexterm>XtNoticeSignal <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
<ENTRY><indexterm><primary>XtOpenApplication</primary></indexterm>XtOpenApplication <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
<ENTRY><indexterm><primary>XtOpenDisplay</primary></indexterm>XtOpenDisplay <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XtOverrideTranslations</primary></indexterm>XtOverrideTranslations <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
<ENTRY><indexterm><primary>XtOwnSelection</primary></indexterm>XtOwnSelection <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
<ENTRY><indexterm><primary>XtOwnSelectionIncremental</primary></indexterm>XtOwnSelectionIncremental <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
<ENTRY><indexterm><primary>XtParent</primary></indexterm>XtParent <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XtParseAcceleratorTable</primary></indexterm>XtParseAcceleratorTable <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
<ENTRY><indexterm><primary>XtParseTranslationTable</primary></indexterm>XtParseTranslationTable <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
<ENTRY><indexterm><primary>XtPeekEvent</primary></indexterm>XtPeekEvent <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
<ENTRY><indexterm><primary>XtPending</primary></indexterm>XtPending <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XtPopdown</primary></indexterm>XtPopdown <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
<ENTRY><indexterm><primary>XtPopup</primary></indexterm>XtPopup <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
<ENTRY><indexterm><primary>XtPopupSpringLoaded</primary></indexterm>XtPopupSpringLoaded <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
<ENTRY><indexterm><primary>XtProcessEvent</primary></indexterm>XtProcessEvent <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XtProcessLock</primary></indexterm>XtProcessLock <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
<ENTRY><indexterm><primary>XtProcessUnlock</primary></indexterm>XtProcessUnlock <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
<ENTRY><indexterm><primary>XtQueryGeometry</primary></indexterm>XtQueryGeometry <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
<ENTRY><indexterm><primary>XtRealizeWidget</primary></indexterm>XtRealizeWidget <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XtRealloc</primary></indexterm>XtRealloc <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
<ENTRY><indexterm><primary>XtRegisterCaseConverter</primary></indexterm>XtRegisterCaseConverter <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
<ENTRY><indexterm><primary>XtRegisterDrawable</primary></indexterm>XtRegisterDrawable <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
<ENTRY><indexterm><primary>XtRegisterExtensionSelector</primary></indexterm>XtRegisterExtensionSelector <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XtRegisterGrabAction</primary></indexterm>XtRegisterGrabAction <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
<ENTRY><indexterm><primary>XtReleaseGC</primary></indexterm>XtReleaseGC <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
<ENTRY><indexterm><primary>XtReleasePropertyAtom</primary></indexterm>XtReleasePropertyAtom <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
<ENTRY><indexterm><primary>XtRemoveActionHook</primary></indexterm>XtRemoveActionHook <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XtRemoveAllCallbacks</primary></indexterm>XtRemoveAllCallbacks <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
<ENTRY><indexterm><primary>XtRemoveBlockHook</primary></indexterm>XtRemoveBlockHook <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
<ENTRY><indexterm><primary>XtRemoveCallback</primary></indexterm>XtRemoveCallback <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
<ENTRY><indexterm><primary>XtRemoveCallbacks</primary></indexterm>XtRemoveCallbacks <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XtRemoveEventHandler</primary></indexterm>XtRemoveEventHandler <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
<ENTRY><indexterm><primary>XtRemoveEventTypeHandler</primary></indexterm>XtRemoveEventTypeHandler <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
<ENTRY><indexterm><primary>XtRemoveGrab</primary></indexterm>XtRemoveGrab <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
<ENTRY><indexterm><primary>XtRemoveInput</primary></indexterm>XtRemoveInput <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XtRemoveRawEventHandler</primary></indexterm>XtRemoveRawEventHandler <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
<ENTRY><indexterm><primary>XtRemoveSignal</primary></indexterm>XtRemoveSignal <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
<ENTRY><indexterm><primary>XtRemoveTimeOut</primary></indexterm>XtRemoveTimeOut <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
<ENTRY><indexterm><primary>XtRemoveWorkProc</primary></indexterm>XtRemoveWorkProc <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XtReservePropertyAtom</primary></indexterm>XtReservePropertyAtom <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
<ENTRY><indexterm><primary>XtResizeWidget</primary></indexterm>XtResizeWidget <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
<ENTRY><indexterm><primary>XtResizeWindow</primary></indexterm>XtResizeWindow <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
<ENTRY><indexterm><primary>XtResolvePathname</primary></indexterm>XtResolvePathname <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XtScreen</primary></indexterm>XtScreen <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
<ENTRY><indexterm><primary>XtScreenDatabase</primary></indexterm>XtScreenDatabase <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
<ENTRY><indexterm><primary>XtScreenOfObject</primary></indexterm>XtScreenOfObject <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
<ENTRY><indexterm><primary>XtSendSelectionRequest</primary></indexterm>XtSendSelectionRequest <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XtSessionGetToken</primary></indexterm>XtSessionGetToken <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
<ENTRY><indexterm><primary>XtSessionReturnToken</primary></indexterm>XtSessionReturnToken <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
<ENTRY><indexterm><primary>XtSetErrorHandler</primary></indexterm>XtSetErrorHandler <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
<ENTRY><indexterm><primary>XtSetErrorMsgHandler</primary></indexterm>XtSetErrorMsgHandler <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XtSetEventDispatcher</primary></indexterm>XtSetEventDispatcher <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
<ENTRY><indexterm><primary>XtSetKeyTranslator</primary></indexterm>XtSetKeyTranslator <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
<ENTRY><indexterm><primary>XtSetKeyboardFocus</primary></indexterm>XtSetKeyboardFocus <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
<ENTRY><indexterm><primary>XtSetLanguageProc</primary></indexterm>XtSetLanguageProc <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XtSetMappedWhenManaged</primary></indexterm>XtSetMappedWhenManaged <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
<ENTRY><indexterm><primary>XtSetMultiClickTime</primary></indexterm>XtSetMultiClickTime <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
<ENTRY><indexterm><primary>XtSetSelectionParameters</primary></indexterm>XtSetSelectionParameters <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
<ENTRY><indexterm><primary>XtSetSelectionTimeout</primary></indexterm>XtSetSelectionTimeout <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XtSetSensitive</primary></indexterm>XtSetSensitive <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
<ENTRY><indexterm><primary>XtSetSubvalues</primary></indexterm>XtSetSubvalues <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
<ENTRY><indexterm><primary>XtSetTypeConverter</primary></indexterm>XtSetTypeConverter <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
<ENTRY><indexterm><primary>XtSetValues</primary></indexterm>XtSetValues <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XtSetWMColormapWindows</primary></indexterm>XtSetWMColormapWindows <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
<ENTRY><indexterm><primary>XtSetWarningHandler</primary></indexterm>XtSetWarningHandler <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
<ENTRY><indexterm><primary>XtSetWarningMsgHandler</primary></indexterm>XtSetWarningMsgHandler <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
<ENTRY><indexterm><primary>XtStringConversionWarning</primary></indexterm>XtStringConversionWarning <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XtSuperclass</primary></indexterm>XtSuperclass <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
<ENTRY><indexterm><primary>XtToolkitInitialize</primary></indexterm>XtToolkitInitialize <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
<ENTRY><indexterm><primary>XtToolkitThreadInitialize</primary></indexterm>XtToolkitThreadInitialize <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
<ENTRY><indexterm><primary>XtTranslateCoords</primary></indexterm>XtTranslateCoords <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XtTranslateKey</primary></indexterm>XtTranslateKey <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
<ENTRY><indexterm><primary>XtTranslateKeycode</primary></indexterm>XtTranslateKeycode <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
<ENTRY><indexterm><primary>XtUngrabButton</primary></indexterm>XtUngrabButton <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
<ENTRY><indexterm><primary>XtUngrabKey</primary></indexterm>XtUngrabKey <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XtUngrabKeyboard</primary></indexterm>XtUngrabKeyboard <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
<ENTRY><indexterm><primary>XtUngrabPointer</primary></indexterm>XtUngrabPointer <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
<ENTRY><indexterm><primary>XtUninstallTranslations</primary></indexterm>XtUninstallTranslations <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
<ENTRY><indexterm><primary>XtUnmanageChild</primary></indexterm>XtUnmanageChild <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XtUnmanageChildren</primary></indexterm>XtUnmanageChildren <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
<ENTRY><indexterm><primary>XtUnmapWidget</primary></indexterm>XtUnmapWidget <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
<ENTRY><indexterm><primary>XtUnrealizeWidget</primary></indexterm>XtUnrealizeWidget <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
<ENTRY><indexterm><primary>XtUnregisterDrawable</primary></indexterm>XtUnregisterDrawable <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XtVaAppCreateShell</primary></indexterm>XtVaAppCreateShell <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
<ENTRY><indexterm><primary>XtVaAppInitialize</primary></indexterm>XtVaAppInitialize <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
<ENTRY><indexterm><primary>XtVaCreateArgsList</primary></indexterm>XtVaCreateArgsList <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
<ENTRY><indexterm><primary>XtVaCreateManagedWidget</primary></indexterm>XtVaCreateManagedWidget <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XtVaCreatePopupShell</primary></indexterm>XtVaCreatePopupShell <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
<ENTRY><indexterm><primary>XtVaCreateWidget</primary></indexterm>XtVaCreateWidget <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
<ENTRY><indexterm><primary>XtVaGetApplicationResources</primary></indexterm>XtVaGetApplicationResources <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
<ENTRY><indexterm><primary>XtVaGetSubresources</primary></indexterm>XtVaGetSubresources <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XtVaGetSubvalues</primary></indexterm>XtVaGetSubvalues <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
<ENTRY><indexterm><primary>XtVaGetValues</primary></indexterm>XtVaGetValues <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
<ENTRY><indexterm><primary>XtVaOpenApplication</primary></indexterm>XtVaOpenApplication <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
<ENTRY><indexterm><primary>XtVaSetSubvalues</primary></indexterm>XtVaSetSubvalues <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XtVaSetValues</primary></indexterm>XtVaSetValues <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
<ENTRY><indexterm><primary>XtWarning</primary></indexterm>XtWarning <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
<ENTRY><indexterm><primary>XtWarningMsg</primary></indexterm>XtWarningMsg <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
<ENTRY><indexterm><primary>XtWidgetToApplicationContext</primary></indexterm>XtWidgetToApplicationContext <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XtWindow</primary></indexterm>XtWindow <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
<ENTRY><indexterm><primary>XtWindowOfObject</primary></indexterm>XtWindowOfObject <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
<ENTRY><indexterm><primary>XtWindowToWidget</primary></indexterm>XtWindowToWidget <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
<ENTRY><indexterm><primary>_XtCheckSubclassFlag</primary></indexterm>_XtCheckSubclassFlag <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_XtCopyFromArg</primary></indexterm>_XtCopyFromArg <LINK LINKEND="REFSTD.libXt.1">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>_XtInherit</primary></indexterm>_XtInherit <LINK LINKEND="REFSTD.libXt.1">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>_XtIsSubclassOf</primary></indexterm>_XtIsSubclassOf <LINK LINKEND="REFSTD.libXt.1">[LSB]</LINK></ENTRY>
<ENTRY></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for X Toolkit specified in <XREF linkend="tbl-libXt-x-t-data">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<TABLE id="tbl-libXt-x-t-data">
<TITLE>libXt - X Toolkit Data Interfaces</TITLE>
<TGROUP COLS=4>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>XtCXtToolkitError</primary></indexterm>XtCXtToolkitError <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
<ENTRY><indexterm><primary>XtShellStrings</primary></indexterm>XtShellStrings <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
<ENTRY><indexterm><primary>XtStrings</primary></indexterm>XtStrings <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
<ENTRY><indexterm><primary>_XtInheritTranslations</primary></indexterm>_XtInheritTranslations <LINK LINKEND="REFSTD.libXt.1">[LSB]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>applicationShellWidgetClass</primary></indexterm>applicationShellWidgetClass <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
<ENTRY><indexterm><primary>compositeClassRec</primary></indexterm>compositeClassRec <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
<ENTRY><indexterm><primary>compositeWidgetClass</primary></indexterm>compositeWidgetClass <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
<ENTRY><indexterm><primary>constraintClassRec</primary></indexterm>constraintClassRec <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>constraintWidgetClass</primary></indexterm>constraintWidgetClass <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
<ENTRY><indexterm><primary>coreWidgetClass</primary></indexterm>coreWidgetClass <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
<ENTRY><indexterm><primary>objectClass</primary></indexterm>objectClass <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
<ENTRY><indexterm><primary>objectClassRec</primary></indexterm>objectClassRec <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>overrideShellClassRec</primary></indexterm>overrideShellClassRec <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
<ENTRY><indexterm><primary>overrideShellWidgetClass</primary></indexterm>overrideShellWidgetClass <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
<ENTRY><indexterm><primary>rectObjClass</primary></indexterm>rectObjClass <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
<ENTRY><indexterm><primary>rectObjClassRec</primary></indexterm>rectObjClassRec <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>sessionShellClassRec</primary></indexterm>sessionShellClassRec <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
<ENTRY><indexterm><primary>sessionShellWidgetClass</primary></indexterm>sessionShellWidgetClass <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
<ENTRY><indexterm><primary>shellClassRec</primary></indexterm>shellClassRec <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
<ENTRY><indexterm><primary>shellWidgetClass</primary></indexterm>shellWidgetClass <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>topLevelShellClassRec</primary></indexterm>topLevelShellClassRec <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
<ENTRY><indexterm><primary>topLevelShellWidgetClass</primary></indexterm>topLevelShellWidgetClass <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
<ENTRY><indexterm><primary>transientShellClassRec</primary></indexterm>transientShellClassRec <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
<ENTRY><indexterm><primary>transientShellWidgetClass</primary></indexterm>transientShellWidgetClass <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>widgetClass</primary></indexterm>widgetClass <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
<ENTRY><indexterm><primary>widgetClassRec</primary></indexterm>widgetClassRec <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
<ENTRY><indexterm><primary>wmShellClassRec</primary></indexterm>wmShellClassRec <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
<ENTRY><indexterm><primary>wmShellWidgetClass</primary></indexterm>wmShellWidgetClass <LINK LINKEND="REFSTD.libXt.2">[Xt]</LINK></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>
</SECT2>
</SECT1>
<SECT1 ID=libXt-ddefs>
<TITLE>Data Definitions for libXt</TITLE>
<PARA>
This section defines global identifiers and their values that are associated
with interfaces contained in libXt.
These definitions are organized into groups that
correspond to system headers. This convention is used as a
convenience for the reader, and does not imply the existence
of these headers, or their content.
Where an interface is defined as requiring a particular system header file
all of the data definitions for that system header file presented here shall be in effect.
</PARA>
<PARA>
This section gives data definitions to promote binary application
portability, not to repeat source interface definitions available
elsewhere. System providers and application developers should use this ABI
to supplement - not to replace - source interface definition specifications.
</PARA>
<PARA>
This specification uses the <XREF LINKEND='std.ISOC99'> C Language as the reference programming language, and data definitions are specified in ISO C format. The C language is used here as a convenient notation. Using a C language description of these data objects does not preclude their use by other programming languages.</PARA>
<SECT2>
<TITLE>X11/Composite.h</TITLE>
<PARA>
</PARA>
<SCREEN>

typedef Cardinal(*XtOrderProc) (Widget child);
typedef void (*XtDoChangeProc) (Widget composite_parent,
				WidgetList unmanage_children,
				Cardinal * num_unmanage_children,
				WidgetList manage_children,
				Cardinal * num_manage_children,
				XtPointer client_data);
extern void XtChangeManagedSet(WidgetList, Cardinal, XtDoChangeProc,
			       XtPointer, WidgetList, Cardinal);
extern void XtManageChild(Widget);
extern void XtManageChildren(WidgetList, Cardinal);
extern void XtUnmanageChild(Widget);
extern void XtUnmanageChildren(WidgetList, Cardinal);
extern WidgetClass compositeWidgetClass(void);
</SCREEN>
</SECT2>
<SECT2>
<TITLE>X11/CompositeP.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define XtInheritGeometryManager	((XtGeometryHandler) _XtInherit)
#define XtInheritDeleteChild	((XtWidgetProc) _XtInherit)
#define XtInheritInsertChild	((XtWidgetProc) _XtInherit)
#define XtCompositeExtensionVersion	2L

typedef struct _CompositeClassPart CompositeClassPart;

typedef struct _CompositeClassRec CompositeClassRec;
extern CompositeClassRec compositeClassRec(void);
</SCREEN>
</SECT2>
<SECT2>
<TITLE>X11/ConstrainP.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define XtConstraintExtensionVersion	1L

typedef struct _ConstraintPart ConstraintPart;
typedef struct _ConstraintClassPart ConstraintClassPart;
typedef struct _ConstraintClassRec {
    CoreClassPart core_class;
    CompositeClassPart composite_class;
    ConstraintClassPart constraint_class;
} ConstraintClassRec;
extern ConstraintClassRec constraintClassRec(void);
</SCREEN>
</SECT2>
<SECT2>
<TITLE>X11/Constraint.h</TITLE>
<PARA>
</PARA>
<SCREEN>

typedef struct _ConstraintClassRec *ConstraintWidgetClass;
extern WidgetClass constraintWidgetClass(void);
</SCREEN>
</SECT2>
<SECT2>
<TITLE>X11/Core.h</TITLE>
<PARA>
</PARA>
<SCREEN>
extern WidgetClass coreWidgetClass(void);
</SCREEN>
</SECT2>
<SECT2>
<TITLE>X11/Intrinsic.h</TITLE>
<PARA>
</PARA>
<SCREEN>

typedef struct _WidgetRec *Widget;
typedef Widget *WidgetList;
typedef struct _WidgetClassRec *WidgetClass;
typedef struct _CompositeRec *CompositeWidget;
typedef struct _XtActionsRec *XtActionList;
typedef struct _XtEventRec *XtEventTable;
typedef struct _XtAppStruct *XtAppContext;
typedef unsigned long int XtValueMask;
typedef unsigned long int XtIntervalId;
typedef unsigned long int XtInputId;
typedef unsigned long int XtSignalId;
typedef unsigned int XtGeometryMask;
typedef unsigned long int XtGCMask;
typedef unsigned long int Pixel;
typedef int XtCacheType;
typedef char Boolean;
typedef long int XtArgVal;
typedef unsigned char XtEnum;
typedef unsigned int Cardinal;
typedef unsigned short Dimension;
typedef short Position;
typedef void *XtPointer;
typedef XtPointer Opaque;
extern void XtAddActions(Cardinal, XtActionList);
extern void XtAddCallback(Widget, char *, XtCallbackProc, XtPointer);
extern void XtAddCallbacks(Widget, char *, XtCallbackList);
extern void XtAddConverter(char *, char *, XtConverter, XtConvertArgList,
			   Cardinal);
extern void XtAddEventHandler(int, XtPointer, XtEventHandler, EventMask,
			      Widget);
extern void XtAddExposureToRegion(XEvent *, Region);
extern void XtAddGrab(Widget, int, int);
extern XtInputId XtAddInput(XtInputCallbackProc, XtPointer, XtPointer,
			    int);
extern void XtAddRawEventHandler(Widget, EventMask, int, XtEventHandler,
				 XtPointer);
extern XtIntervalId XtAddTimeOut(XtTimerCallbackProc, unsigned long int,
				 XtPointer);
extern XtWorkProcId XtAddWorkProc(XtWorkProc, XtPointer);
extern GC XtAllocateGC(Widget, Cardinal, XtGCMask, XGCValues *, XtGCMask,
		       XtGCMask);
extern XtActionHookId XtAppAddActionHook(XtActionHookProc, XtAppContext,
					 XtPointer);
extern void XtAppAddActions(Cardinal, XtActionList, XtAppContext);
extern XtBlockHookId XtAppAddBlockHook(XtPointer, XtBlockHookProc,
				       XtAppContext);
extern void XtAppAddConverter(XtAppContext, char *, char *, XtConverter,
			      XtConvertArgList, Cardinal);
extern XtInputId XtAppAddInput(XtPointer, XtInputCallbackProc, XtPointer,
			       int, XtAppContext);
extern XtSignalId XtAppAddSignal(XtSignalCallbackProc, XtAppContext,
				 XtPointer);
extern XtIntervalId XtAppAddTimeOut(XtAppContext, XtTimerCallbackProc,
				    unsigned long int, XtPointer);
extern XtWorkProcId XtAppAddWorkProc(XtPointer, XtWorkProc, XtAppContext);
extern Widget XtAppCreateShell(Display *, WidgetClass, char *, char *,
			       Cardinal, ArgList);
extern void XtAppError(XtAppContext, char *);
extern void XtAppErrorMsg(String *, char *, char *, char *, char *,
			  XtAppContext, Cardinal *);
extern XrmDatabase *XtAppGetErrorDatabase(XtAppContext);
extern void XtAppGetErrorDatabaseText(char *, XtAppContext, XrmDatabase,
				      int, String, char *, char *, char *);
extern Boolean XtAppGetExitFlag(XtAppContext);
extern unsigned long int XtAppGetSelectionTimeout(XtAppContext);
extern Widget XtAppInitialize(Cardinal, ArgList, String *, String *, int *,
			      Cardinal, XrmOptionDescList, char *,
			      XtAppContext *);
extern void XtAppLock(XtAppContext);
extern void XtAppMainLoop(XtAppContext);
extern void XtAppNextEvent(XtAppContext, XEvent *);
extern Boolean XtAppPeekEvent(XtAppContext, XEvent *);
extern XtInputMask XtAppPending(XtAppContext);
extern void XtAppProcessEvent(XtInputMask, XtAppContext);
extern void XtAppReleaseCacheRefs(XtAppContext, XtCacheRef *);
extern XtErrorHandler XtAppSetErrorHandler(XtAppContext, XtErrorHandler);
extern XtErrorMsgHandler XtAppSetErrorMsgHandler(XtAppContext,
						 XtErrorMsgHandler);
extern void XtAppSetExitFlag(XtAppContext);
extern void XtAppSetFallbackResources(XtAppContext, String *);
extern void XtAppSetSelectionTimeout(XtAppContext, unsigned long int);
extern void XtAppSetTypeConverter(XtDestructor, XtCacheType, Cardinal,
				  XtConvertArgList, XtTypeConverter,
				  char *, char *, XtAppContext);
extern XtErrorHandler XtAppSetWarningHandler(XtAppContext, XtErrorHandler);
extern XtErrorMsgHandler XtAppSetWarningMsgHandler(XtAppContext,
						   XtErrorMsgHandler);
extern void XtAppUnlock(XtAppContext);
extern void XtAppWarning(XtAppContext, char *);
extern void XtAppWarningMsg(char *, char *, char *, char *, XtAppContext,
			    Cardinal *, String *);
extern void XtAugmentTranslations(Widget, XtTranslations);
extern EventMask XtBuildEventMask(Widget);
extern String XtCXtToolkitError(void);
extern Boolean XtCallAcceptFocus(Time *, Widget);
extern void XtCallActionProc(Widget, char *, XEvent *, String *, Cardinal);
extern void XtCallCallbackList(Widget, XtCallbackList, XtPointer);
extern void XtCallCallbacks(XtPointer, char *, Widget);
extern Boolean XtCallConverter(XrmValuePtr, XrmValuePtr, XtTypeConverter,
			       XrmValue *, Display *, Cardinal,
			       XtCacheRef *);
extern void XtCallbackExclusive(Widget, XtPointer, XtPointer);
extern void XtCallbackNone(XtPointer, XtPointer, Widget);
extern void XtCallbackNonexclusive(XtPointer, XtPointer, Widget);
extern void XtCallbackPopdown(Widget, XtPointer, XtPointer);
extern void XtCallbackReleaseCacheRef(XtPointer, XtPointer, Widget);
extern void XtCallbackReleaseCacheRefList(Widget, XtPointer, XtPointer);
extern char *XtCalloc(Cardinal, Cardinal);
extern void XtCancelSelectionRequest(Widget, Atom);
extern WidgetClass XtClass(Widget);
extern void XtCloseDisplay(Display *);
extern void XtConvert(Widget, char *, XrmValue *, char *, XrmValue *);
extern Boolean XtConvertAndStore(Widget, char *, XrmValue *, char *,
				 XrmValue *);
extern void XtConvertCase(Display *, KeySym, KeySym *, KeySym *);
extern XtAppContext XtCreateApplicationContext(void);
extern Widget XtCreateApplicationShell(ArgList, WidgetClass, char *,
				       Cardinal);
extern Widget XtCreateManagedWidget(char *, WidgetClass, Widget, ArgList,
				    Cardinal);
extern Widget XtCreatePopupShell(char *, WidgetClass, Widget, ArgList,
				 Cardinal);
extern void XtCreateSelectionRequest(Atom, Widget);
extern Widget XtCreateWidget(char *, WidgetClass, Widget, ArgList,
			     Cardinal);
extern Boolean XtCvtColorToPixel(XrmValuePtr, Cardinal *, XrmValuePtr,
				 Display *, XtPointer *, XrmValuePtr);
extern Boolean XtCvtIntToBool(Display *, XtPointer *, XrmValuePtr,
			      XrmValuePtr, Cardinal *, XrmValuePtr);
extern Boolean XtCvtIntToBoolean(Display *, XrmValuePtr, Cardinal *,
				 XrmValuePtr, XtPointer *, XrmValuePtr);
extern Boolean XtCvtIntToColor(XrmValuePtr, Cardinal *, XrmValuePtr,
			       Display *, XtPointer *, XrmValuePtr);
extern Boolean XtCvtIntToFloat(XrmValuePtr, Cardinal *, XrmValuePtr,
			       Display *, XtPointer *, XrmValuePtr);
extern Boolean XtCvtIntToFont(Cardinal *, XrmValuePtr, Display *,
			      XtPointer *, XrmValuePtr, XrmValuePtr);
extern Boolean XtCvtIntToPixel(XtPointer *, XrmValuePtr, XrmValuePtr,
			       Cardinal *, XrmValuePtr, Display *);
extern Boolean XtCvtIntToPixmap(XrmValuePtr, XrmValuePtr, Cardinal *,
				XrmValuePtr, Display *, XtPointer *);
extern Boolean XtCvtIntToShort(XrmValuePtr, Cardinal *, XtPointer *,
			       XrmValuePtr, XrmValuePtr, Display *);
extern Boolean XtCvtIntToUnsignedChar(XtPointer *, XrmValuePtr,
				      XrmValuePtr, Cardinal *, XrmValuePtr,
				      Display *);
extern Boolean XtCvtStringToAcceleratorTable(XrmValuePtr, Display *,
					     XtPointer *, XrmValuePtr,
					     XrmValuePtr, Cardinal *);
extern Boolean XtCvtStringToAtom(Cardinal *, XrmValuePtr, Display *,
				 XtPointer *, XrmValuePtr, XrmValuePtr);
extern Boolean XtCvtStringToBool(XtPointer *, XrmValuePtr, Cardinal *,
				 XrmValuePtr, Display *, XrmValuePtr);
extern Boolean XtCvtStringToBoolean(XtPointer *, Cardinal *, XrmValuePtr,
				    Display *, XrmValuePtr, XrmValuePtr);
extern Boolean XtCvtStringToCommandArgArray(XtPointer *, XrmValuePtr,
					    XrmValuePtr, Cardinal *,
					    XrmValuePtr, Display *);
extern Boolean XtCvtStringToCursor(XrmValuePtr, Display *, XtPointer *,
				   Cardinal *, XrmValuePtr, XrmValuePtr);
extern Boolean XtCvtStringToDimension(XtPointer *, XrmValuePtr, Display *,
				      XrmValuePtr, Cardinal *,
				      XrmValuePtr);
extern Boolean XtCvtStringToDirectoryString(XrmValuePtr, XrmValuePtr,
					    Display *, Cardinal *,
					    XrmValuePtr, XtPointer *);
extern Boolean XtCvtStringToDisplay(XtPointer *, XrmValuePtr, XrmValuePtr,
				    Cardinal *, XrmValuePtr, Display *);
extern Boolean XtCvtStringToFile(Cardinal *, XrmValuePtr, Display *,
				 XtPointer *, XrmValuePtr, XrmValuePtr);
extern Boolean XtCvtStringToFloat(XtPointer *, XrmValuePtr, XrmValuePtr,
				  Cardinal *, XrmValuePtr, Display *);
extern Boolean XtCvtStringToFont(XtPointer *, Cardinal *, XrmValuePtr,
				 Display *, XrmValuePtr, XrmValuePtr);
extern Boolean XtCvtStringToFontSet(XrmValuePtr, Display *, XtPointer *,
				    XrmValuePtr, XrmValuePtr, Cardinal *);
extern Boolean XtCvtStringToFontStruct(XrmValuePtr, XtPointer *,
				       XrmValuePtr, Cardinal *,
				       XrmValuePtr, Display *);
extern Boolean XtCvtStringToGravity(Cardinal *, XrmValuePtr, XrmValuePtr,
				    XrmValuePtr, Display *, XtPointer *);
extern Boolean XtCvtStringToInitialState(XtPointer *, XrmValuePtr,
					 XrmValuePtr, Cardinal *,
					 XrmValuePtr, Display *);
extern Boolean XtCvtStringToInt(XrmValuePtr, XrmValuePtr, Display *,
				XtPointer *, XrmValuePtr, Cardinal *);
extern Boolean XtCvtStringToPixel(XtPointer *, XrmValuePtr, XrmValuePtr,
				  Cardinal *, XrmValuePtr, Display *);
extern Boolean XtCvtStringToRestartStyle(Display *, XtPointer *,
					 XrmValuePtr, XrmValuePtr,
					 Cardinal *, XrmValuePtr);
extern Boolean XtCvtStringToShort(XtPointer *, XrmValuePtr, XrmValuePtr,
				  Cardinal *, XrmValuePtr, Display *);
extern Boolean XtCvtStringToTranslationTable(XrmValuePtr, Cardinal *,
					     XrmValuePtr, Display *,
					     XtPointer *, XrmValuePtr);
extern Boolean XtCvtStringToUnsignedChar(XtPointer *, XrmValuePtr,
					 XrmValuePtr, Cardinal *,
					 XrmValuePtr, Display *);
extern Boolean XtCvtStringToVisual(Display *, XrmValuePtr, Cardinal *,
				   XrmValuePtr, XrmValuePtr, XtPointer *);
extern XrmDatabase XtDatabase(Display *);
extern void XtDestroyApplicationContext(XtAppContext);
extern void XtDestroyGC(GC);
extern void XtDestroyWidget(Widget);
extern void XtDirectConvert(XtConverter, XrmValuePtr, Cardinal,
			    XrmValuePtr, XrmValue *);
extern void XtDisownSelection(Widget, Time, Atom);
extern Boolean XtDispatchEvent(XEvent *);
extern Boolean XtDispatchEventToWidget(Widget, XEvent *);
extern Display *XtDisplay(Widget);
extern void XtDisplayInitialize(XtAppContext, Display *, char *, char *,
				XrmOptionDescRec *, Cardinal, int *,
				char **);
extern Display *XtDisplayOfObject(Widget);
extern void XtDisplayStringConversionWarning(char *, Display *, char *);
extern XtAppContext XtDisplayToApplicationContext(Display *);
extern void XtError(char *);
extern void XtErrorMsg(char *, char *, char *, char *, String *,
		       Cardinal *);
extern String XtFindFile(char *, Substitution, Cardinal, XtFilePredicate);
extern void XtFree(char *);
extern KeySym XtGetActionKeysym(XEvent *, Modifiers *);
extern void XtGetActionList(Cardinal *, XtActionList *, WidgetClass);
extern void XtGetApplicationNameAndClass(String *, String *, Display *);
extern void XtGetApplicationResources(Widget, XtPointer, XtResourceList,
				      Cardinal, ArgList, Cardinal);
extern XtPointer XtGetClassExtension(WidgetClass, Cardinal, XrmQuark,
				     long int, Cardinal);
extern void XtGetConstraintResourceList(Cardinal *, XtResourceList *,
					WidgetClass);
extern void XtGetDisplays(XtAppContext, Display * **, Cardinal *);
extern XrmDatabase *XtGetErrorDatabase(void);
extern void XtGetErrorDatabaseText(int, String, char *, char *, char *,
				   char *);
extern GC XtGetGC(XGCValues *, XtGCMask, Widget);
extern Widget XtGetKeyboardFocusWidget(Widget);
extern KeySym *XtGetKeysymTable(int *, KeyCode *, Display *);
extern int XtGetMultiClickTime(Display *);
extern void XtGetResourceList(XtResourceList *, WidgetClass, Cardinal *);
extern void XtGetSelectionParameters(Widget, Atom, XtRequestId, Atom *,
				     XtPointer *, unsigned long int *,
				     int *);
extern XSelectionRequestEvent *XtGetSelectionRequest(Widget, Atom,
						     XtRequestId);
extern unsigned long int XtGetSelectionTimeout(void);
extern void XtGetSelectionValue(Widget, Atom, Atom,
				XtSelectionCallbackProc, XtPointer, Time);
extern void XtGetSelectionValueIncremental(Widget, Time, XtPointer,
					   XtSelectionCallbackProc, Atom,
					   Atom);
extern void XtGetSelectionValues(Widget, Atom, Atom *, int,
				 XtSelectionCallbackProc, XtPointer *,
				 Time);
extern void XtGetSelectionValuesIncremental(Widget, Time, XtPointer *,
					    XtSelectionCallbackProc, int,
					    Atom *, Atom);
extern void XtGetSubresources(char *, XtPointer, Widget, Cardinal, ArgList,
			      Cardinal, XtResourceList, char *);
extern void XtGetSubvalues(XtPointer, ArgList, XtResourceList, Cardinal,
			   Cardinal);
extern void XtGetValues(Widget, ArgList, Cardinal);
extern void XtGrabButton(Modifiers, int, Widget, Window, int, int,
			 unsigned int, int, Cursor);
extern void XtGrabKey(Widget, int, int, int, Modifiers, unsigned int);
extern int XtGrabKeyboard(int, int, int, Widget, Time);
extern int XtGrabPointer(unsigned int, int, Widget, Time, Cursor, Window,
			 int, int);
extern XtCallbackStatus XtHasCallbacks(char *, Widget);
extern Widget XtHooksOfDisplay(Display *);
extern Widget XtInitialize(char *, char **, int *, Cardinal,
			   XrmOptionDescRec *, char *);
extern void XtInitializeWidgetClass(WidgetClass);
extern void XtInsertEventHandler(int, EventMask, Widget, XtEventHandler,
				 XtListPosition, XtPointer);
extern void XtInsertEventTypeHandler(XtEventHandler, XtListPosition,
				     XtPointer, int, Widget, XtPointer);
extern void XtInsertRawEventHandler(int, EventMask, Widget, XtListPosition,
				    XtPointer, XtEventHandler);
extern void XtInstallAccelerators(Widget, Widget);
extern void XtInstallAllAccelerators(Widget, Widget);
extern Boolean XtIsApplicationShell(void);
extern Boolean XtIsComposite(void);
extern Boolean XtIsConstraint(void);
extern Boolean XtIsManaged(Widget);
extern Boolean XtIsObject(Widget);
extern Boolean XtIsOverrideShell(void);
extern Boolean XtIsRealized(Widget);
extern Boolean XtIsRectObj(void);
extern Boolean XtIsSensitive(Widget);
extern Boolean XtIsSessionShell(void);
extern Boolean XtIsShell(void);
extern Boolean XtIsSubclass(Widget, WidgetClass);
extern Boolean XtIsTopLevelShell(void);
extern Boolean XtIsTransientShell(void);
extern Boolean XtIsVendorShell(void);
extern Boolean XtIsWMShell(void);
extern Boolean XtIsWidget(void);
extern void XtKeysymToKeycodeList(Display *, KeySym, KeyCode * *,
				  Cardinal *);
extern XEvent *XtLastEventProcessed(Display *);
extern Time XtLastTimestampProcessed(Display *);
extern void XtMainLoop(void);
extern XtGeometryResult XtMakeGeometryRequest(XtWidgetGeometry *,
					      XtWidgetGeometry *, Widget);
extern XtGeometryResult XtMakeResizeRequest(unsigned int, Widget,
					    Dimension *, Dimension *,
					    unsigned int);
extern char *XtMalloc(Cardinal);
extern void XtMapWidget(void);
extern void XtMenuPopupAction(XEvent *, Widget, Cardinal *, String *);
extern ArgList XtMergeArgLists(ArgList, Cardinal, ArgList, Cardinal);
extern String XtName(Widget);
extern Widget XtNameToWidget(Widget, char *);
extern String XtNewString(void);
extern void XtNextEvent(XEvent *);
extern void XtNoticeSignal(XtSignalId);
extern Widget XtOpenApplication(XrmOptionDescList, char *, XtAppContext *,
				Cardinal, ArgList, WidgetClass, String *,
				String *, int *, Cardinal);
extern Display *XtOpenDisplay(XrmOptionDescRec *, char *, char *,
			      XtAppContext, char *, char **, int *,
			      Cardinal);
extern void XtOverrideTranslations(Widget, XtTranslations);
extern Boolean XtOwnSelection(XtLoseSelectionProc, XtConvertSelectionProc,
			      Time, Atom, Widget, XtSelectionDoneProc);
extern Boolean XtOwnSelectionIncremental(XtPointer,
					 XtCancelConvertSelectionProc,
					 XtSelectionDoneIncrProc,
					 XtLoseSelectionIncrProc,
					 XtConvertSelectionIncrProc, Time,
					 Atom, Widget);
extern Widget XtParent(Widget);
extern XtAccelerators XtParseAcceleratorTable(char *);
extern XtTranslations XtParseTranslationTable(char *);
extern Boolean XtPeekEvent(XEvent *);
extern Boolean XtPending(void);
extern void XtPopdown(Widget);
extern void XtPopup(Widget, XtGrabKind);
extern void XtPopupSpringLoaded(Widget);
extern void XtProcessEvent(XtInputMask);
extern XtGeometryResult XtQueryGeometry(Widget, XtWidgetGeometry *,
					XtWidgetGeometry *);
extern void XtRealizeWidget(Widget);
extern char *XtRealloc(Cardinal, char *);
extern void XtRegisterCaseConverter(Display *, XtCaseProc, KeySym, KeySym);
extern void XtRegisterDrawable(Display *, Drawable, Widget);
extern void XtRegisterExtensionSelector(Display *, int, int,
					XtExtensionSelectProc, XtPointer);
extern void XtRegisterGrabAction(int, XtActionProc, int, unsigned int,
				 int);
extern void XtReleaseGC(Widget, GC);
extern void XtReleasePropertyAtom(Widget, Atom);
extern void XtRemoveActionHook(XtActionHookId);
extern void XtRemoveAllCallbacks(Widget, char *);
extern void XtRemoveBlockHook(XtBlockHookId);
extern void XtRemoveCallback(Widget, char *, XtCallbackProc, XtPointer);
extern void XtRemoveCallbacks(XtCallbackList, char *, Widget);
extern void XtRemoveEventHandler(Widget, EventMask, int, XtEventHandler,
				 XtPointer);
extern void XtRemoveEventTypeHandler(Widget, int, XtPointer,
				     XtEventHandler, XtPointer);
extern void XtRemoveGrab(Widget);
extern void XtRemoveInput(XtInputId);
extern void XtRemoveRawEventHandler(Widget, EventMask, int, XtEventHandler,
				    XtPointer);
extern void XtRemoveSignal(XtSignalId);
extern void XtRemoveTimeOut(XtIntervalId);
extern void XtRemoveWorkProc(XtWorkProcId);
extern Atom XtReservePropertyAtom(Widget);
extern String XtResolvePathname(char *, char *, Display *, XtFilePredicate,
				Cardinal, Substitution, char *, char *);
extern Screen *XtScreen(Widget);
extern XrmDatabase XtScreenDatabase(Screen *);
extern Screen *XtScreenOfObject(Widget);
extern void XtSendSelectionRequest(Time, Atom, Widget);
extern XtCheckpointToken XtSessionGetToken(Widget);
extern void XtSessionReturnToken(XtCheckpointToken);
extern void XtSetErrorHandler(XtErrorHandler);
extern void XtSetErrorMsgHandler(XtErrorMsgHandler);
extern XtEventDispatchProc XtSetEventDispatcher(XtEventDispatchProc, int,
						Display *);
extern void XtSetKeyTranslator(Display *, XtKeyProc);
extern void XtSetKeyboardFocus(Widget, Widget);
extern XtLanguageProc XtSetLanguageProc(XtAppContext, XtLanguageProc,
					XtPointer);
extern void XtSetMappedWhenManaged(Widget, int);
extern void XtSetMultiClickTime(int, Display *);
extern void XtSetSelectionParameters(Widget, Atom, Atom, XtPointer,
				     unsigned long int, int);
extern void XtSetSelectionTimeout(unsigned long int);
extern void XtSetSensitive(Widget, int);
extern void XtSetSubvalues(XtPointer, XtResourceList, Cardinal, ArgList,
			   Cardinal);
extern void XtSetTypeConverter(XtTypeConverter, char *, XtDestructor,
			       XtCacheType, XtConvertArgList, char *,
			       Cardinal);
extern void XtSetValues(Widget, ArgList, Cardinal);
extern void XtSetWMColormapWindows(Cardinal, Widget *, Widget);
extern void XtSetWarningHandler(XtErrorHandler);
extern void XtSetWarningMsgHandler(XtErrorMsgHandler);
extern void XtStringConversionWarning(char *, char *);
extern WidgetClass XtSuperclass(Widget);
extern void XtToolkitInitialize(void);
extern Boolean XtToolkitThreadInitialize(void);
extern void XtTranslateCoords(Widget, int, int, Position *, Position *);
extern void XtTranslateKey(Display *, unsigned int, Modifiers, Modifiers *,
			   KeySym *);
extern void XtTranslateKeycode(KeySym *, Modifiers *, Modifiers,
			       unsigned int, Display *);
extern void XtUngrabButton(Modifiers, unsigned int, Widget);
extern void XtUngrabKey(Widget, unsigned int, Modifiers);
extern void XtUngrabKeyboard(Time, Widget);
extern void XtUngrabPointer(Widget, Time);
extern void XtUninstallTranslations(Widget);
extern void XtUnmapWidget(void);
extern void XtUnrealizeWidget(Widget);
extern void XtUnregisterDrawable(Display *, Drawable);
extern Widget XtVaAppCreateShell(char *, char *, WidgetClass, Display *,
				 ...);
extern Widget XtVaAppInitialize(int *, Cardinal, XrmOptionDescList,
				String *, char *, ..., String *,
				XtAppContext *);
extern XtVarArgsList XtVaCreateArgsList(..., XtPointer);
extern Widget XtVaCreateManagedWidget(char *, WidgetClass, Widget, ...);
extern Widget XtVaCreatePopupShell(..., Widget, WidgetClass, char *);
extern Widget XtVaCreateWidget(..., Widget, WidgetClass, char *);
extern void XtVaGetApplicationResources(Widget, XtResourceList, XtPointer,
					..., Cardinal);
extern void XtVaGetSubresources(Cardinal, XtResourceList, ..., char *,
				char *, XtPointer, Widget);
extern void XtVaGetSubvalues(XtPointer, XtResourceList, Cardinal, ...);
extern void XtVaGetValues(Widget, ...);
extern Widget XtVaOpenApplication(XtAppContext *, char *,
				  XrmOptionDescList, Cardinal, int *,
				  String *, String *, WidgetClass, ...);
extern void XtVaSetSubvalues(XtPointer, XtResourceList, Cardinal, ...);
extern void XtVaSetValues(Widget, ...);
extern void XtWarning(char *);
extern void XtWarningMsg(char *, char *, Cardinal *, String *, char *,
			 char *);
extern XtAppContext XtWidgetToApplicationContext(Widget);
extern Window XtWindow(Widget);
extern Window XtWindowOfObject(Widget);
extern Widget XtWindowToWidget(Display *, Window);
extern Boolean _XtCheckSubclassFlag(Widget, unsigned int);
extern Boolean _XtIsSubclassOf(Widget, unsigned int, WidgetClass,
			       WidgetClass);
</SCREEN>
</SECT2>
<SECT2>
<TITLE>X11/IntrinsicP.h</TITLE>
<PARA>
</PARA>
<SCREEN>

extern void XtConfigureWidget(Widget, int, int, unsigned int, unsigned int,
			      unsigned int);
extern void XtCreateWindow(Widget, unsigned int, Visual *, XtValueMask,
			   XSetWindowAttributes *);
extern void XtMoveWidget(int, int, Widget);
extern void XtProcessLock(void);
extern void XtProcessUnlock(void);
extern void XtResizeWidget(Widget, unsigned int, unsigned int,
			   unsigned int);
extern void XtResizeWindow(Widget);
extern void _XtInherit(void);
</SCREEN>
</SECT2>
<SECT2>
<TITLE>X11/Object.h</TITLE>
<PARA>
</PARA>
<SCREEN>

extern WidgetClass objectClass(void);
</SCREEN>
</SECT2>
<SECT2>
<TITLE>X11/ObjectP.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define XtInheritAllocate	((XtAllocateProc) _XtInherit)
#define XtInheritDeallocate	((XtDeallocateProc) _XtInherit)
#define XtObjectExtensionVersion	1L

typedef struct _ObjectPart {
    Widget self;
    WidgetClass widget_class;
    Widget parent;
    XrmName xrm_name;
    Boolean being_destroyed;
    XtCallbackList destroy_callbacks;
    XtPointer constraints;
} ObjectPart;

typedef struct _ObjectRec {
    ObjectPart object;
} ObjectRec;

typedef struct _ObjectClassPart {
    WidgetClass superclass;
    String class_name;
    Cardinal widget_size;
    XtProc class_initialize;
    XtWidgetClassProc class_part_initialize;
    XtEnum class_inited;
    XtInitProc initialize;
    XtArgsProc initialize_hook;
    XtProc obj1;
    XtProc obj2;
    XtProc obj3;
    XtResourceList resources;
    Cardinal num_resources;
    XrmClass xrm_class;
    Boolean obj4;
    XtEnum obj5;
    Boolean obj6;
    Boolean obj7;
    XtWidgetProc destroy;
    XtProc obj8;
    XtProc obj9;
    XtSetValuesFunc set_values;
    XtArgsFunc set_values_hook;
    XtProc obj10;
    XtArgsProc get_values_hook;
    XtProc obj11;
    XtVersionType version;
    XtPointer callback_private;
    String obj12;
    XtProc obj13;
    XtProc obj14;
    XtPointer extension;
} ObjectClassPart;

struct {
    XtPointer next_extension;
    XrmQuark record_type;
    long int version;
    Cardinal record_size;
    XtAllocateProc allocate;
    XtDeallocateProc deallocate;
};

typedef struct {
    XtPointer next_extension;
    XrmQuark record_type;
    long int version;
    Cardinal record_size;
    XtAllocateProc allocate;
    XtDeallocateProc deallocate;
} ObjectClassExtensionRec;
typedef struct {
    XtPointer next_extension;
    XrmQuark record_type;
    long int version;
    Cardinal record_size;
    XtAllocateProc allocate;
    XtDeallocateProc deallocate;
} *ObjectClassExtension;

typedef struct _ObjectClassRec {
    ObjectClassPart object_class;
} ObjectClassRec;
extern ObjectClassRec objectClassRec(void);
</SCREEN>
</SECT2>
<SECT2>
<TITLE>X11/Shell.h</TITLE>
<PARA>
</PARA>
<SCREEN>

extern char XtShellStrings(void);
extern WidgetClass applicationShellWidgetClass(void);
extern WidgetClass overrideShellWidgetClass(void);
extern WidgetClass sessionShellWidgetClass(void);
extern WidgetClass shellWidgetClass(void);
extern WidgetClass topLevelShellWidgetClass(void);
extern WidgetClass transientShellWidgetClass(void);
extern WidgetClass wmShellWidgetClass(void);
</SCREEN>
</SECT2>
<SECT2>
<TITLE>X11/StringDefs.h</TITLE>
<PARA>
</PARA>
<SCREEN>

extern char XtStrings(void);
</SCREEN>
</SECT2>
</SECT1>
<SECT1 ID=libXtman>
<TITLE>Interface Definitions for libXt</TITLE>
<PARA>
The interfaces defined on the following pages are included in libXt and are defined
by this specification.
Unless otherwise noted, these interfaces shall be included
in the source standard.
</PARA>
<PARA>
Other interfaces listed in <XREF LINKEND=libXt> shall behave as described
in the referenced base document.
</PARA>
<REFENTRY ID="graphiclib--XtCopyFromArg-"> <REFMETA>
<REFENTRYTITLE>_XtCopyFromArg</REFENTRYTITLE>
<REFMISCINFO>Graphic Libraries</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>_XtCopyFromArg</REFNAME>
<REFPURPOSE>
Copy "size" bytes from src to dst.  
</REFPURPOSE>
</REFNAMEDIV>
<REFSYNOPSISDIV>
<REFSYNOPSISDIVINFO>
<DATE>3 May 2001</DATE>
</REFSYNOPSISDIVINFO>
<SYNOPSIS>
void _XtCopyFromArg(XtArgVal src,char* dst,unsigned int size);
</SYNOPSIS>
</REFSYNOPSISDIV>
<REFSECT1>
<REFSECT1INFO>
<DATE>3 May 2001</DATE>
</REFSECT1INFO>
<TITLE>Description
</TITLE>
<PARA>
The _XtCopyFromArg() function copies "size" bytes from src
to dst.  This is an internal X function call.
</PARA>

</REFSECT1>
</REFENTRY>









<REFENTRY ID="graphiclib--XtInherit-"> <REFMETA>
<REFENTRYTITLE>_XtInherit</REFENTRYTITLE>
<REFMISCINFO>Graphic Libraries</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>_XtInherit
</REFNAME>
<REFPURPOSE>
inheritance operation.
</REFPURPOSE>
</REFNAMEDIV>

<REFSYNOPSISDIV>
<REFSYNOPSISDIVINFO>
<DATE>2 May  2001</DATE>
</REFSYNOPSISDIVINFO>
<SYNOPSIS>
#include &lt;IntrinsicP.h>

extern void _XtInherit(
#if NeedFunctionPrototypes
    void
#endif
);
</SYNOPSIS>
</REFSYNOPSISDIV>

<REFSECT1>
<REFSECT1INFO>
<DATE>2 May 2001</DATE>
</REFSECT1INFO>
<TITLE>Description
</TITLE>
<PARA>
_XtInherit() is a procedure that issues an error message if it is actually called.
</PARA>
</REFSECT1>
</REFENTRY>

<REFENTRY ID="graphiclib--XtInheritTranslations-"> <REFMETA>
<REFENTRYTITLE>_XtInheritTranslations</REFENTRYTITLE>
<REFMISCINFO>Graphic Libraries</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>_XtInheritTranslations
</REFNAME>
<REFPURPOSE>
an inheritance constant
</REFPURPOSE>
</REFNAMEDIV>

<REFSYNOPSISDIV>
<REFSYNOPSISDIVINFO>
<DATE>2 May  2001</DATE>
</REFSYNOPSISDIVINFO>
<SYNOPSIS>
#include &lt;CoreP.h>

externalref int _XtInheritTranslations;
</SYNOPSIS>
</REFSYNOPSISDIV>

<REFSECT1>
<REFSECT1INFO>
<DATE>2 May 2001</DATE>
</REFSECT1INFO>
<TITLE>Description
</TITLE>
<PARA>
_XtInheritTranslations is an inheritance constant.
</PARA>
</REFSECT1>
</REFENTRY>

<REFENTRY ID="graphiclib--XtIsSubclassOf-"> <REFMETA>
<REFENTRYTITLE>_XtIsSubclassOf</REFENTRYTITLE>
<REFMISCINFO>Graphic Libraries</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>_XtIsSubclassOf</REFNAME>
<REFPURPOSE>
determine if Widget is a subclass of WidgetClass.
</REFPURPOSE>
</REFNAMEDIV>
<REFSYNOPSISDIV>
<REFSYNOPSISDIVINFO>
<DATE>3 May 2001</DATE>
</REFSYNOPSISDIVINFO>
<SYNOPSIS>
#include &lt;Intrinsic.h>

extern Boolean _XtIsSubclassOf(
    Widget              /* object*  /,
    WidgetClass         /* widget_class */,
    WidgetClass         /* flag_class */,
    _XtXtEnum           /* type_flag */,
);

</SYNOPSIS>
</REFSYNOPSISDIV>
<REFSECT1>
<REFSECT1INFO>
<DATE>3 May 2001</DATE>
</REFSECT1INFO>
<TITLE>Description
</TITLE>
<PARA>
Determine if Widget(object) is a subclass of WidgetClass(widget_class).
</PARA>

</REFSECT1>
</REFENTRY>









</SECT1>
<!-- End of text generated from database -->
<!--    by $Header: /cvsroot/lsb/lsbspec/mklibspec,v 1.75 2005/10/12 22:24:36 nick Exp 0 -->


</CHAPTER>

</PART>
