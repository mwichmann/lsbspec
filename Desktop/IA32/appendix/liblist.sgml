<APPENDIX ID=app-A>
<TITLE>Alphabetical Listing of Interfaces by Library</TITLE>

<!-- Start of generated text - do not edit! -->
<!-- generated from the LSB specification database by mklibapnd -->
<sect1 id=app-libGL>
<title>libGL</title>
<para>
</para>
<para>
The behavior of the interfaces in this library is specified by the following Standards.<simplelist columns=1>
<member>
<xref linkend="std.GLX"> [GLX]
</member>
<member>
<xref linkend="std.OGL"> [OGL 2.1]
</member>
<member>
<xref linkend="std.OGL.ABI"> [OGL ABI]
</member>
</simplelist>
</para>
<table>
<title>libGL Function Interfaces</title>
<tgroup cols=3>
<tbody>
<row><entry>glAccum<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glIndexMask<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glSecondaryColor3uiv<link linkend="std.OGL">[OGL 2.1]</link></entry></row>
<row><entry>glActiveTexture<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glIndexPointer<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glSecondaryColor3us<link linkend="std.OGL">[OGL 2.1]</link></entry></row>
<row><entry>glActiveTextureARB<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glIndexd<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glSecondaryColor3usv<link linkend="std.OGL">[OGL 2.1]</link></entry></row>
<row><entry>glAlphaFunc<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glIndexdv<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glSecondaryColorPointer<link linkend="std.OGL">[OGL 2.1]</link></entry></row>
<row><entry>glAreTexturesResident<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glIndexf<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glSelectBuffer<link linkend="std.OGL">[OGL 2.1]</link></entry></row>
<row><entry>glArrayElement<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glIndexfv<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glSeparableFilter2D<link linkend="std.OGL">[OGL 2.1]</link></entry></row>
<row><entry>glAttachShader<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glIndexi<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glShadeModel<link linkend="std.OGL">[OGL 2.1]</link></entry></row>
<row><entry>glBegin<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glIndexiv<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glShaderSource<link linkend="std.OGL">[OGL 2.1]</link></entry></row>
<row><entry>glBeginQuery<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glIndexs<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glStencilFunc<link linkend="std.OGL">[OGL 2.1]</link></entry></row>
<row><entry>glBindAttribLocation<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glIndexsv<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glStencilFuncSeparate<link linkend="std.OGL">[OGL 2.1]</link></entry></row>
<row><entry>glBindBuffer<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glIndexub<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glStencilMask<link linkend="std.OGL">[OGL 2.1]</link></entry></row>
<row><entry>glBindTexture<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glIndexubv<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glStencilMaskSeparate<link linkend="std.OGL">[OGL 2.1]</link></entry></row>
<row><entry>glBitmap<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glInitNames<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glStencilOp<link linkend="std.OGL">[OGL 2.1]</link></entry></row>
<row><entry>glBlendColor<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glInterleavedArrays<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glStencilOpSeparate<link linkend="std.OGL">[OGL 2.1]</link></entry></row>
<row><entry>glBlendEquation<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glIsBuffer<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glTexCoord1d<link linkend="std.OGL">[OGL 2.1]</link></entry></row>
<row><entry>glBlendEquationSeparate<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glIsEnabled<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glTexCoord1dv<link linkend="std.OGL">[OGL 2.1]</link></entry></row>
<row><entry>glBlendFunc<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glIsList<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glTexCoord1f<link linkend="std.OGL">[OGL 2.1]</link></entry></row>
<row><entry>glBlendFuncSeparate<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glIsProgram<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glTexCoord1fv<link linkend="std.OGL">[OGL 2.1]</link></entry></row>
<row><entry>glBufferData<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glIsQuery<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glTexCoord1i<link linkend="std.OGL">[OGL 2.1]</link></entry></row>
<row><entry>glBufferSubData<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glIsShader<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glTexCoord1iv<link linkend="std.OGL">[OGL 2.1]</link></entry></row>
<row><entry>glCallList<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glIsTexture<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glTexCoord1s<link linkend="std.OGL">[OGL 2.1]</link></entry></row>
<row><entry>glCallLists<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glLightModelf<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glTexCoord1sv<link linkend="std.OGL">[OGL 2.1]</link></entry></row>
<row><entry>glClear<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glLightModelfv<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glTexCoord2d<link linkend="std.OGL">[OGL 2.1]</link></entry></row>
<row><entry>glClearAccum<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glLightModeli<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glTexCoord2dv<link linkend="std.OGL">[OGL 2.1]</link></entry></row>
<row><entry>glClearColor<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glLightModeliv<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glTexCoord2f<link linkend="std.OGL">[OGL 2.1]</link></entry></row>
<row><entry>glClearDepth<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glLightf<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glTexCoord2fv<link linkend="std.OGL">[OGL 2.1]</link></entry></row>
<row><entry>glClearIndex<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glLightfv<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glTexCoord2i<link linkend="std.OGL">[OGL 2.1]</link></entry></row>
<row><entry>glClearStencil<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glLighti<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glTexCoord2iv<link linkend="std.OGL">[OGL 2.1]</link></entry></row>
<row><entry>glClientActiveTexture<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glLightiv<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glTexCoord2s<link linkend="std.OGL">[OGL 2.1]</link></entry></row>
<row><entry>glClientActiveTextureARB<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glLineStipple<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glTexCoord2sv<link linkend="std.OGL">[OGL 2.1]</link></entry></row>
<row><entry>glClipPlane<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glLineWidth<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glTexCoord3d<link linkend="std.OGL">[OGL 2.1]</link></entry></row>
<row><entry>glColor3b<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glLinkProgram<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glTexCoord3dv<link linkend="std.OGL">[OGL 2.1]</link></entry></row>
<row><entry>glColor3bv<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glListBase<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glTexCoord3f<link linkend="std.OGL">[OGL 2.1]</link></entry></row>
<row><entry>glColor3d<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glLoadIdentity<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glTexCoord3fv<link linkend="std.OGL">[OGL 2.1]</link></entry></row>
<row><entry>glColor3dv<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glLoadMatrixd<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glTexCoord3i<link linkend="std.OGL">[OGL 2.1]</link></entry></row>
<row><entry>glColor3f<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glLoadMatrixf<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glTexCoord3iv<link linkend="std.OGL">[OGL 2.1]</link></entry></row>
<row><entry>glColor3fv<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glLoadName<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glTexCoord3s<link linkend="std.OGL">[OGL 2.1]</link></entry></row>
<row><entry>glColor3i<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glLoadTransposeMatrixd<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glTexCoord3sv<link linkend="std.OGL">[OGL 2.1]</link></entry></row>
<row><entry>glColor3iv<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glLoadTransposeMatrixf<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glTexCoord4d<link linkend="std.OGL">[OGL 2.1]</link></entry></row>
<row><entry>glColor3s<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glLogicOp<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glTexCoord4dv<link linkend="std.OGL">[OGL 2.1]</link></entry></row>
<row><entry>glColor3sv<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glMap1d<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glTexCoord4f<link linkend="std.OGL">[OGL 2.1]</link></entry></row>
<row><entry>glColor3ub<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glMap1f<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glTexCoord4fv<link linkend="std.OGL">[OGL 2.1]</link></entry></row>
<row><entry>glColor3ubv<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glMap2d<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glTexCoord4i<link linkend="std.OGL">[OGL 2.1]</link></entry></row>
<row><entry>glColor3ui<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glMap2f<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glTexCoord4iv<link linkend="std.OGL">[OGL 2.1]</link></entry></row>
<row><entry>glColor3uiv<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glMapBuffer<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glTexCoord4s<link linkend="std.OGL">[OGL 2.1]</link></entry></row>
<row><entry>glColor3us<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glMapGrid1d<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glTexCoord4sv<link linkend="std.OGL">[OGL 2.1]</link></entry></row>
<row><entry>glColor3usv<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glMapGrid1f<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glTexCoordPointer<link linkend="std.OGL">[OGL 2.1]</link></entry></row>
<row><entry>glColor4b<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glMapGrid2d<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glTexEnvf<link linkend="std.OGL">[OGL 2.1]</link></entry></row>
<row><entry>glColor4bv<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glMapGrid2f<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glTexEnvfv<link linkend="std.OGL">[OGL 2.1]</link></entry></row>
<row><entry>glColor4d<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glMaterialf<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glTexEnvi<link linkend="std.OGL">[OGL 2.1]</link></entry></row>
<row><entry>glColor4dv<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glMaterialfv<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glTexEnviv<link linkend="std.OGL">[OGL 2.1]</link></entry></row>
<row><entry>glColor4f<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glMateriali<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glTexGend<link linkend="std.OGL">[OGL 2.1]</link></entry></row>
<row><entry>glColor4fv<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glMaterialiv<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glTexGendv<link linkend="std.OGL">[OGL 2.1]</link></entry></row>
<row><entry>glColor4i<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glMatrixMode<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glTexGenf<link linkend="std.OGL">[OGL 2.1]</link></entry></row>
<row><entry>glColor4iv<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glMinmax<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glTexGenfv<link linkend="std.OGL">[OGL 2.1]</link></entry></row>
<row><entry>glColor4s<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glMultMatrixd<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glTexGeni<link linkend="std.OGL">[OGL 2.1]</link></entry></row>
<row><entry>glColor4sv<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glMultMatrixf<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glTexGeniv<link linkend="std.OGL">[OGL 2.1]</link></entry></row>
<row><entry>glColor4ub<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glMultTransposeMatrixd<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glTexImage1D<link linkend="std.OGL">[OGL 2.1]</link></entry></row>
<row><entry>glColor4ubv<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glMultTransposeMatrixf<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glTexImage2D<link linkend="std.OGL">[OGL 2.1]</link></entry></row>
<row><entry>glColor4ui<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glMultiDrawArrays<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glTexImage3D<link linkend="std.OGL">[OGL 2.1]</link></entry></row>
<row><entry>glColor4uiv<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glMultiDrawElements<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glTexParameterf<link linkend="std.OGL">[OGL 2.1]</link></entry></row>
<row><entry>glColor4us<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glMultiTexCoord1d<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glTexParameterfv<link linkend="std.OGL">[OGL 2.1]</link></entry></row>
<row><entry>glColor4usv<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glMultiTexCoord1dARB<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glTexParameteri<link linkend="std.OGL">[OGL 2.1]</link></entry></row>
<row><entry>glColorMask<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glMultiTexCoord1dv<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glTexParameteriv<link linkend="std.OGL">[OGL 2.1]</link></entry></row>
<row><entry>glColorMaterial<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glMultiTexCoord1dvARB<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glTexSubImage1D<link linkend="std.OGL">[OGL 2.1]</link></entry></row>
<row><entry>glColorPointer<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glMultiTexCoord1f<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glTexSubImage2D<link linkend="std.OGL">[OGL 2.1]</link></entry></row>
<row><entry>glColorSubTable<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glMultiTexCoord1fARB<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glTexSubImage3D<link linkend="std.OGL">[OGL 2.1]</link></entry></row>
<row><entry>glColorTable<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glMultiTexCoord1fv<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glTranslated<link linkend="std.OGL">[OGL 2.1]</link></entry></row>
<row><entry>glColorTableParameterfv<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glMultiTexCoord1fvARB<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glTranslatef<link linkend="std.OGL">[OGL 2.1]</link></entry></row>
<row><entry>glColorTableParameteriv<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glMultiTexCoord1i<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glUniform1f<link linkend="std.OGL">[OGL 2.1]</link></entry></row>
<row><entry>glCompileShader<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glMultiTexCoord1iARB<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glUniform1fv<link linkend="std.OGL">[OGL 2.1]</link></entry></row>
<row><entry>glCompressedTexImage1D<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glMultiTexCoord1iv<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glUniform1i<link linkend="std.OGL">[OGL 2.1]</link></entry></row>
<row><entry>glCompressedTexImage2D<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glMultiTexCoord1ivARB<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glUniform1iv<link linkend="std.OGL">[OGL 2.1]</link></entry></row>
<row><entry>glCompressedTexImage3D<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glMultiTexCoord1s<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glUniform2f<link linkend="std.OGL">[OGL 2.1]</link></entry></row>
<row><entry>glCompressedTexSubImage1D<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glMultiTexCoord1sARB<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glUniform2fv<link linkend="std.OGL">[OGL 2.1]</link></entry></row>
<row><entry>glCompressedTexSubImage2D<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glMultiTexCoord1sv<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glUniform2i<link linkend="std.OGL">[OGL 2.1]</link></entry></row>
<row><entry>glCompressedTexSubImage3D<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glMultiTexCoord1svARB<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glUniform2iv<link linkend="std.OGL">[OGL 2.1]</link></entry></row>
<row><entry>glConvolutionFilter1D<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glMultiTexCoord2d<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glUniform3f<link linkend="std.OGL">[OGL 2.1]</link></entry></row>
<row><entry>glConvolutionFilter2D<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glMultiTexCoord2dARB<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glUniform3fv<link linkend="std.OGL">[OGL 2.1]</link></entry></row>
<row><entry>glConvolutionParameterf<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glMultiTexCoord2dv<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glUniform3i<link linkend="std.OGL">[OGL 2.1]</link></entry></row>
<row><entry>glConvolutionParameterfv<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glMultiTexCoord2dvARB<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glUniform3iv<link linkend="std.OGL">[OGL 2.1]</link></entry></row>
<row><entry>glConvolutionParameteri<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glMultiTexCoord2f<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glUniform4f<link linkend="std.OGL">[OGL 2.1]</link></entry></row>
<row><entry>glConvolutionParameteriv<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glMultiTexCoord2fARB<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glUniform4fv<link linkend="std.OGL">[OGL 2.1]</link></entry></row>
<row><entry>glCopyColorSubTable<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glMultiTexCoord2fv<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glUniform4i<link linkend="std.OGL">[OGL 2.1]</link></entry></row>
<row><entry>glCopyColorTable<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glMultiTexCoord2fvARB<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glUniform4iv<link linkend="std.OGL">[OGL 2.1]</link></entry></row>
<row><entry>glCopyConvolutionFilter1D<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glMultiTexCoord2i<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glUniformMatrix2fv<link linkend="std.OGL">[OGL 2.1]</link></entry></row>
<row><entry>glCopyConvolutionFilter2D<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glMultiTexCoord2iARB<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glUniformMatrix2x3fv<link linkend="std.OGL">[OGL 2.1]</link></entry></row>
<row><entry>glCopyPixels<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glMultiTexCoord2iv<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glUniformMatrix2x4fv<link linkend="std.OGL">[OGL 2.1]</link></entry></row>
<row><entry>glCopyTexImage1D<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glMultiTexCoord2ivARB<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glUniformMatrix3fv<link linkend="std.OGL">[OGL 2.1]</link></entry></row>
<row><entry>glCopyTexImage2D<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glMultiTexCoord2s<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glUniformMatrix3x2fv<link linkend="std.OGL">[OGL 2.1]</link></entry></row>
<row><entry>glCopyTexSubImage1D<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glMultiTexCoord2sARB<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glUniformMatrix3x4fv<link linkend="std.OGL">[OGL 2.1]</link></entry></row>
<row><entry>glCopyTexSubImage2D<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glMultiTexCoord2sv<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glUniformMatrix4fv<link linkend="std.OGL">[OGL 2.1]</link></entry></row>
<row><entry>glCopyTexSubImage3D<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glMultiTexCoord2svARB<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glUniformMatrix4x2fv<link linkend="std.OGL">[OGL 2.1]</link></entry></row>
<row><entry>glCreateProgram<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glMultiTexCoord3d<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glUniformMatrix4x3fv<link linkend="std.OGL">[OGL 2.1]</link></entry></row>
<row><entry>glCreateShader<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glMultiTexCoord3dARB<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glUnmapBuffer<link linkend="std.OGL">[OGL 2.1]</link></entry></row>
<row><entry>glCullFace<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glMultiTexCoord3dv<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glUseProgram<link linkend="std.OGL">[OGL 2.1]</link></entry></row>
<row><entry>glDeleteBuffers<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glMultiTexCoord3dvARB<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glValidateProgram<link linkend="std.OGL">[OGL 2.1]</link></entry></row>
<row><entry>glDeleteLists<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glMultiTexCoord3f<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glVertex2d<link linkend="std.OGL">[OGL 2.1]</link></entry></row>
<row><entry>glDeleteProgram<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glMultiTexCoord3fARB<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glVertex2dv<link linkend="std.OGL">[OGL 2.1]</link></entry></row>
<row><entry>glDeleteQueries<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glMultiTexCoord3fv<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glVertex2f<link linkend="std.OGL">[OGL 2.1]</link></entry></row>
<row><entry>glDeleteShader<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glMultiTexCoord3fvARB<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glVertex2fv<link linkend="std.OGL">[OGL 2.1]</link></entry></row>
<row><entry>glDeleteTextures<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glMultiTexCoord3i<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glVertex2i<link linkend="std.OGL">[OGL 2.1]</link></entry></row>
<row><entry>glDepthFunc<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glMultiTexCoord3iARB<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glVertex2iv<link linkend="std.OGL">[OGL 2.1]</link></entry></row>
<row><entry>glDepthMask<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glMultiTexCoord3iv<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glVertex2s<link linkend="std.OGL">[OGL 2.1]</link></entry></row>
<row><entry>glDepthRange<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glMultiTexCoord3ivARB<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glVertex2sv<link linkend="std.OGL">[OGL 2.1]</link></entry></row>
<row><entry>glDetachShader<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glMultiTexCoord3s<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glVertex3d<link linkend="std.OGL">[OGL 2.1]</link></entry></row>
<row><entry>glDisable<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glMultiTexCoord3sARB<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glVertex3dv<link linkend="std.OGL">[OGL 2.1]</link></entry></row>
<row><entry>glDisableClientState<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glMultiTexCoord3sv<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glVertex3f<link linkend="std.OGL">[OGL 2.1]</link></entry></row>
<row><entry>glDisableVertexAttribArray<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glMultiTexCoord3svARB<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glVertex3fv<link linkend="std.OGL">[OGL 2.1]</link></entry></row>
<row><entry>glDrawArrays<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glMultiTexCoord4d<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glVertex3i<link linkend="std.OGL">[OGL 2.1]</link></entry></row>
<row><entry>glDrawBuffer<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glMultiTexCoord4dARB<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glVertex3iv<link linkend="std.OGL">[OGL 2.1]</link></entry></row>
<row><entry>glDrawBuffers<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glMultiTexCoord4dv<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glVertex3s<link linkend="std.OGL">[OGL 2.1]</link></entry></row>
<row><entry>glDrawElements<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glMultiTexCoord4dvARB<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glVertex3sv<link linkend="std.OGL">[OGL 2.1]</link></entry></row>
<row><entry>glDrawPixels<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glMultiTexCoord4f<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glVertex4d<link linkend="std.OGL">[OGL 2.1]</link></entry></row>
<row><entry>glDrawRangeElements<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glMultiTexCoord4fARB<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glVertex4dv<link linkend="std.OGL">[OGL 2.1]</link></entry></row>
<row><entry>glEdgeFlag<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glMultiTexCoord4fv<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glVertex4f<link linkend="std.OGL">[OGL 2.1]</link></entry></row>
<row><entry>glEdgeFlagPointer<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glMultiTexCoord4fvARB<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glVertex4fv<link linkend="std.OGL">[OGL 2.1]</link></entry></row>
<row><entry>glEdgeFlagv<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glMultiTexCoord4i<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glVertex4i<link linkend="std.OGL">[OGL 2.1]</link></entry></row>
<row><entry>glEnable<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glMultiTexCoord4iARB<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glVertex4iv<link linkend="std.OGL">[OGL 2.1]</link></entry></row>
<row><entry>glEnableClientState<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glMultiTexCoord4iv<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glVertex4s<link linkend="std.OGL">[OGL 2.1]</link></entry></row>
<row><entry>glEnableVertexAttribArray<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glMultiTexCoord4ivARB<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glVertex4sv<link linkend="std.OGL">[OGL 2.1]</link></entry></row>
<row><entry>glEnd<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glMultiTexCoord4s<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glVertexAttrib1d<link linkend="std.OGL">[OGL 2.1]</link></entry></row>
<row><entry>glEndList<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glMultiTexCoord4sARB<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glVertexAttrib1dv<link linkend="std.OGL">[OGL 2.1]</link></entry></row>
<row><entry>glEvalCoord1d<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glMultiTexCoord4sv<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glVertexAttrib1f<link linkend="std.OGL">[OGL 2.1]</link></entry></row>
<row><entry>glEvalCoord1dv<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glMultiTexCoord4svARB<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glVertexAttrib1fv<link linkend="std.OGL">[OGL 2.1]</link></entry></row>
<row><entry>glEvalCoord1f<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glNewList<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glVertexAttrib1s<link linkend="std.OGL">[OGL 2.1]</link></entry></row>
<row><entry>glEvalCoord1fv<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glNormal3b<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glVertexAttrib1sv<link linkend="std.OGL">[OGL 2.1]</link></entry></row>
<row><entry>glEvalCoord2d<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glNormal3bv<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glVertexAttrib2d<link linkend="std.OGL">[OGL 2.1]</link></entry></row>
<row><entry>glEvalCoord2dv<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glNormal3d<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glVertexAttrib2dv<link linkend="std.OGL">[OGL 2.1]</link></entry></row>
<row><entry>glEvalCoord2f<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glNormal3dv<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glVertexAttrib2f<link linkend="std.OGL">[OGL 2.1]</link></entry></row>
<row><entry>glEvalCoord2fv<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glNormal3f<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glVertexAttrib2fv<link linkend="std.OGL">[OGL 2.1]</link></entry></row>
<row><entry>glEvalMesh1<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glNormal3fv<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glVertexAttrib2s<link linkend="std.OGL">[OGL 2.1]</link></entry></row>
<row><entry>glEvalMesh2<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glNormal3i<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glVertexAttrib2sv<link linkend="std.OGL">[OGL 2.1]</link></entry></row>
<row><entry>glEvalPoint1<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glNormal3iv<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glVertexAttrib3d<link linkend="std.OGL">[OGL 2.1]</link></entry></row>
<row><entry>glEvalPoint2<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glNormal3s<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glVertexAttrib3dv<link linkend="std.OGL">[OGL 2.1]</link></entry></row>
<row><entry>glFeedbackBuffer<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glNormal3sv<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glVertexAttrib3f<link linkend="std.OGL">[OGL 2.1]</link></entry></row>
<row><entry>glFinish<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glNormalPointer<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glVertexAttrib3fv<link linkend="std.OGL">[OGL 2.1]</link></entry></row>
<row><entry>glFlush<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glOrtho<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glVertexAttrib3s<link linkend="std.OGL">[OGL 2.1]</link></entry></row>
<row><entry>glFogCoordPointer<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glPassThrough<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glVertexAttrib3sv<link linkend="std.OGL">[OGL 2.1]</link></entry></row>
<row><entry>glFogCoordd<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glPixelMapfv<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glVertexAttrib4Nbv<link linkend="std.OGL">[OGL 2.1]</link></entry></row>
<row><entry>glFogCoorddv<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glPixelMapuiv<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glVertexAttrib4Niv<link linkend="std.OGL">[OGL 2.1]</link></entry></row>
<row><entry>glFogCoordf<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glPixelMapusv<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glVertexAttrib4Nsv<link linkend="std.OGL">[OGL 2.1]</link></entry></row>
<row><entry>glFogCoordfv<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glPixelStoref<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glVertexAttrib4Nub<link linkend="std.OGL">[OGL 2.1]</link></entry></row>
<row><entry>glFogf<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glPixelStorei<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glVertexAttrib4Nubv<link linkend="std.OGL">[OGL 2.1]</link></entry></row>
<row><entry>glFogfv<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glPixelTransferf<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glVertexAttrib4Nuiv<link linkend="std.OGL">[OGL 2.1]</link></entry></row>
<row><entry>glFogi<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glPixelTransferi<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glVertexAttrib4Nusv<link linkend="std.OGL">[OGL 2.1]</link></entry></row>
<row><entry>glFogiv<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glPixelZoom<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glVertexAttrib4bv<link linkend="std.OGL">[OGL 2.1]</link></entry></row>
<row><entry>glFrontFace<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glPointParameterf<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glVertexAttrib4d<link linkend="std.OGL">[OGL 2.1]</link></entry></row>
<row><entry>glFrustum<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glPointParameterfv<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glVertexAttrib4dv<link linkend="std.OGL">[OGL 2.1]</link></entry></row>
<row><entry>glGenBuffers<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glPointParameteri<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glVertexAttrib4f<link linkend="std.OGL">[OGL 2.1]</link></entry></row>
<row><entry>glGenLists<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glPointParameteriv<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glVertexAttrib4fv<link linkend="std.OGL">[OGL 2.1]</link></entry></row>
<row><entry>glGenQueries<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glPointSize<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glVertexAttrib4iv<link linkend="std.OGL">[OGL 2.1]</link></entry></row>
<row><entry>glGenTextures<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glPolygonMode<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glVertexAttrib4s<link linkend="std.OGL">[OGL 2.1]</link></entry></row>
<row><entry>glGetActiveAttrib<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glPolygonOffset<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glVertexAttrib4sv<link linkend="std.OGL">[OGL 2.1]</link></entry></row>
<row><entry>glGetActiveUniform<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glPolygonStipple<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glVertexAttrib4ubv<link linkend="std.OGL">[OGL 2.1]</link></entry></row>
<row><entry>glGetAttachedShaders<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glPopAttrib<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glVertexAttrib4uiv<link linkend="std.OGL">[OGL 2.1]</link></entry></row>
<row><entry>glGetAttribLocation<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glPopClientAttrib<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glVertexAttrib4usv<link linkend="std.OGL">[OGL 2.1]</link></entry></row>
<row><entry>glGetBooleanv<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glPopMatrix<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glVertexAttribPointer<link linkend="std.OGL">[OGL 2.1]</link></entry></row>
<row><entry>glGetBufferParameteriv<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glPopName<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glVertexPointer<link linkend="std.OGL">[OGL 2.1]</link></entry></row>
<row><entry>glGetBufferPointerv<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glPrioritizeTextures<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glViewport<link linkend="std.OGL">[OGL 2.1]</link></entry></row>
<row><entry>glGetBufferSubData<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glPushAttrib<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glWindowPos2d<link linkend="std.OGL">[OGL 2.1]</link></entry></row>
<row><entry>glGetClipPlane<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glPushClientAttrib<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glWindowPos2dv<link linkend="std.OGL">[OGL 2.1]</link></entry></row>
<row><entry>glGetColorTable<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glPushMatrix<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glWindowPos2f<link linkend="std.OGL">[OGL 2.1]</link></entry></row>
<row><entry>glGetColorTableParameterfv<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glPushName<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glWindowPos2fv<link linkend="std.OGL">[OGL 2.1]</link></entry></row>
<row><entry>glGetColorTableParameteriv<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glRasterPos2d<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glWindowPos2i<link linkend="std.OGL">[OGL 2.1]</link></entry></row>
<row><entry>glGetCompressedTexImage<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glRasterPos2dv<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glWindowPos2iv<link linkend="std.OGL">[OGL 2.1]</link></entry></row>
<row><entry>glGetConvolutionFilter<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glRasterPos2f<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glWindowPos2s<link linkend="std.OGL">[OGL 2.1]</link></entry></row>
<row><entry>glGetConvolutionParameterfv<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glRasterPos2fv<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glWindowPos2sv<link linkend="std.OGL">[OGL 2.1]</link></entry></row>
<row><entry>glGetConvolutionParameteriv<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glRasterPos2i<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glWindowPos3d<link linkend="std.OGL">[OGL 2.1]</link></entry></row>
<row><entry>glGetDoublev<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glRasterPos2iv<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glWindowPos3dv<link linkend="std.OGL">[OGL 2.1]</link></entry></row>
<row><entry>glGetError<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glRasterPos2s<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glWindowPos3f<link linkend="std.OGL">[OGL 2.1]</link></entry></row>
<row><entry>glGetFloatv<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glRasterPos2sv<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glWindowPos3fv<link linkend="std.OGL">[OGL 2.1]</link></entry></row>
<row><entry>glGetHistogram<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glRasterPos3d<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glWindowPos3i<link linkend="std.OGL">[OGL 2.1]</link></entry></row>
<row><entry>glGetHistogramParameterfv<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glRasterPos3dv<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glWindowPos3iv<link linkend="std.OGL">[OGL 2.1]</link></entry></row>
<row><entry>glGetHistogramParameteriv<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glRasterPos3f<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glWindowPos3s<link linkend="std.OGL">[OGL 2.1]</link></entry></row>
<row><entry>glGetIntegerv<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glRasterPos3fv<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glWindowPos3sv<link linkend="std.OGL">[OGL 2.1]</link></entry></row>
<row><entry>glGetLightfv<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glRasterPos3i<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glXChooseFBConfig<link linkend="std.GLX">[GLX]</link></entry></row>
<row><entry>glGetLightiv<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glRasterPos3iv<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glXChooseVisual<link linkend="std.GLX">[GLX]</link></entry></row>
<row><entry>glGetMapdv<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glRasterPos3s<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glXCopyContext<link linkend="std.GLX">[GLX]</link></entry></row>
<row><entry>glGetMapfv<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glRasterPos3sv<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glXCreateContext<link linkend="std.GLX">[GLX]</link></entry></row>
<row><entry>glGetMapiv<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glRasterPos4d<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glXCreateGLXPixmap<link linkend="std.GLX">[GLX]</link></entry></row>
<row><entry>glGetMaterialfv<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glRasterPos4dv<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glXCreateNewContext<link linkend="std.GLX">[GLX]</link></entry></row>
<row><entry>glGetMaterialiv<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glRasterPos4f<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glXCreatePbuffer<link linkend="std.GLX">[GLX]</link></entry></row>
<row><entry>glGetMinmax<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glRasterPos4fv<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glXCreatePixmap<link linkend="std.GLX">[GLX]</link></entry></row>
<row><entry>glGetMinmaxParameterfv<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glRasterPos4i<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glXCreateWindow<link linkend="std.GLX">[GLX]</link></entry></row>
<row><entry>glGetMinmaxParameteriv<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glRasterPos4iv<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glXDestroyContext<link linkend="std.GLX">[GLX]</link></entry></row>
<row><entry>glGetPixelMapfv<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glRasterPos4s<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glXDestroyGLXPixmap<link linkend="std.GLX">[GLX]</link></entry></row>
<row><entry>glGetPixelMapuiv<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glRasterPos4sv<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glXDestroyPbuffer<link linkend="std.GLX">[GLX]</link></entry></row>
<row><entry>glGetPixelMapusv<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glReadBuffer<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glXDestroyPixmap<link linkend="std.GLX">[GLX]</link></entry></row>
<row><entry>glGetPointerv<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glReadPixels<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glXDestroyWindow<link linkend="std.GLX">[GLX]</link></entry></row>
<row><entry>glGetPolygonStipple<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glRectd<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glXFreeContextEXT<link linkend="std.GLX">[GLX]</link></entry></row>
<row><entry>glGetProgramInfoLog<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glRectdv<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glXGetClientString<link linkend="std.GLX">[GLX]</link></entry></row>
<row><entry>glGetProgramiv<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glRectf<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glXGetConfig<link linkend="std.GLX">[GLX]</link></entry></row>
<row><entry>glGetQueryObjectiv<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glRectfv<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glXGetContextIDEXT<link linkend="std.GLX">[GLX]</link></entry></row>
<row><entry>glGetQueryObjectuiv<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glRecti<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glXGetCurrentContext<link linkend="std.GLX">[GLX]</link></entry></row>
<row><entry>glGetQueryiv<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glRectiv<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glXGetCurrentDisplay<link linkend="std.GLX">[GLX]</link></entry></row>
<row><entry>glGetSeparableFilter<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glRects<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glXGetCurrentDrawable<link linkend="std.GLX">[GLX]</link></entry></row>
<row><entry>glGetShaderInfoLog<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glRectsv<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glXGetCurrentReadDrawable<link linkend="std.GLX">[GLX]</link></entry></row>
<row><entry>glGetShaderSource<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glRenderMode<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glXGetFBConfigAttrib<link linkend="std.GLX">[GLX]</link></entry></row>
<row><entry>glGetShaderiv<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glResetHistogram<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glXGetFBConfigs<link linkend="std.GLX">[GLX]</link></entry></row>
<row><entry>glGetString<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glResetMinmax<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glXGetProcAddress<link linkend="std.OGL">[OGL 2.1]</link></entry></row>
<row><entry>glGetTexEnvfv<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glRotated<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glXGetProcAddressARB<link linkend="std.OGL.ABI">[OGL ABI]</link></entry></row>
<row><entry>glGetTexEnviv<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glRotatef<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glXGetSelectedEvent<link linkend="std.GLX">[GLX]</link></entry></row>
<row><entry>glGetTexGendv<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glSampleCoverage<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glXGetVisualFromFBConfig<link linkend="std.GLX">[GLX]</link></entry></row>
<row><entry>glGetTexGenfv<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glScaled<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glXImportContextEXT<link linkend="std.GLX">[GLX]</link></entry></row>
<row><entry>glGetTexGeniv<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glScalef<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glXIsDirect<link linkend="std.GLX">[GLX]</link></entry></row>
<row><entry>glGetTexImage<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glScissor<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glXMakeContextCurrent<link linkend="std.GLX">[GLX]</link></entry></row>
<row><entry>glGetTexLevelParameterfv<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glSecondaryColor3b<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glXMakeCurrent<link linkend="std.GLX">[GLX]</link></entry></row>
<row><entry>glGetTexLevelParameteriv<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glSecondaryColor3bv<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glXQueryContext<link linkend="std.GLX">[GLX]</link></entry></row>
<row><entry>glGetTexParameterfv<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glSecondaryColor3d<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glXQueryContextInfoEXT<link linkend="std.GLX">[GLX]</link></entry></row>
<row><entry>glGetTexParameteriv<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glSecondaryColor3dv<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glXQueryDrawable<link linkend="std.GLX">[GLX]</link></entry></row>
<row><entry>glGetUniformLocation<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glSecondaryColor3f<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glXQueryExtension<link linkend="std.GLX">[GLX]</link></entry></row>
<row><entry>glGetUniformfv<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glSecondaryColor3fv<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glXQueryExtensionsString<link linkend="std.GLX">[GLX]</link></entry></row>
<row><entry>glGetUniformiv<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glSecondaryColor3i<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glXQueryServerString<link linkend="std.GLX">[GLX]</link></entry></row>
<row><entry>glGetVertexAttribPointerv<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glSecondaryColor3iv<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glXQueryVersion<link linkend="std.GLX">[GLX]</link></entry></row>
<row><entry>glGetVertexAttribdv<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glSecondaryColor3s<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glXSelectEvent<link linkend="std.GLX">[GLX]</link></entry></row>
<row><entry>glGetVertexAttribfv<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glSecondaryColor3sv<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glXSwapBuffers<link linkend="std.GLX">[GLX]</link></entry></row>
<row><entry>glGetVertexAttribiv<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glSecondaryColor3ub<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glXUseXFont<link linkend="std.GLX">[GLX]</link></entry></row>
<row><entry>glHint<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glSecondaryColor3ubv<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glXWaitGL<link linkend="std.GLX">[GLX]</link></entry></row>
<row><entry>glHistogram<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glSecondaryColor3ui<link linkend="std.OGL">[OGL 2.1]</link></entry><entry>glXWaitX<link linkend="std.GLX">[GLX]</link></entry></row>
</tbody>
</tgroup>
</table>
</sect1>
<sect1 id=app-libGLU>
<title>libGLU</title>
<para>
</para>
<para>
The behavior of the interfaces in this library is specified by the following Standards.<simplelist columns=1>
<member>
<xref linkend="std.GLU"> [GLU]
</member>
</simplelist>
</para>
<table>
<title>libGLU Function Interfaces</title>
<tgroup cols=3>
<tbody>
<row><entry>gluBeginCurve<link linkend="std.GLU">[GLU]</link></entry><entry>gluErrorString<link linkend="std.GLU">[GLU]</link></entry><entry>gluProject<link linkend="std.GLU">[GLU]</link></entry></row>
<row><entry>gluBeginPolygon<link linkend="std.GLU">[GLU]</link></entry><entry>gluGetNurbsProperty<link linkend="std.GLU">[GLU]</link></entry><entry>gluPwlCurve<link linkend="std.GLU">[GLU]</link></entry></row>
<row><entry>gluBeginSurface<link linkend="std.GLU">[GLU]</link></entry><entry>gluGetString<link linkend="std.GLU">[GLU]</link></entry><entry>gluQuadricCallback<link linkend="std.GLU">[GLU]</link></entry></row>
<row><entry>gluBeginTrim<link linkend="std.GLU">[GLU]</link></entry><entry>gluGetTessProperty<link linkend="std.GLU">[GLU]</link></entry><entry>gluQuadricDrawStyle<link linkend="std.GLU">[GLU]</link></entry></row>
<row><entry>gluBuild1DMipmapLevels<link linkend="std.GLU">[GLU]</link></entry><entry>gluLoadSamplingMatrices<link linkend="std.GLU">[GLU]</link></entry><entry>gluQuadricNormals<link linkend="std.GLU">[GLU]</link></entry></row>
<row><entry>gluBuild1DMipmaps<link linkend="std.GLU">[GLU]</link></entry><entry>gluLookAt<link linkend="std.GLU">[GLU]</link></entry><entry>gluQuadricOrientation<link linkend="std.GLU">[GLU]</link></entry></row>
<row><entry>gluBuild2DMipmapLevels<link linkend="std.GLU">[GLU]</link></entry><entry>gluNewNurbsRenderer<link linkend="std.GLU">[GLU]</link></entry><entry>gluQuadricTexture<link linkend="std.GLU">[GLU]</link></entry></row>
<row><entry>gluBuild2DMipmaps<link linkend="std.GLU">[GLU]</link></entry><entry>gluNewQuadric<link linkend="std.GLU">[GLU]</link></entry><entry>gluScaleImage<link linkend="std.GLU">[GLU]</link></entry></row>
<row><entry>gluBuild3DMipmapLevels<link linkend="std.GLU">[GLU]</link></entry><entry>gluNewTess<link linkend="std.GLU">[GLU]</link></entry><entry>gluSphere<link linkend="std.GLU">[GLU]</link></entry></row>
<row><entry>gluBuild3DMipmaps<link linkend="std.GLU">[GLU]</link></entry><entry>gluNextContour<link linkend="std.GLU">[GLU]</link></entry><entry>gluTessBeginContour<link linkend="std.GLU">[GLU]</link></entry></row>
<row><entry>gluCheckExtension<link linkend="std.GLU">[GLU]</link></entry><entry>gluNurbsCallback<link linkend="std.GLU">[GLU]</link></entry><entry>gluTessBeginPolygon<link linkend="std.GLU">[GLU]</link></entry></row>
<row><entry>gluCylinder<link linkend="std.GLU">[GLU]</link></entry><entry>gluNurbsCallbackData<link linkend="std.GLU">[GLU]</link></entry><entry>gluTessCallback<link linkend="std.GLU">[GLU]</link></entry></row>
<row><entry>gluDeleteNurbsRenderer<link linkend="std.GLU">[GLU]</link></entry><entry>gluNurbsCallbackDataEXT<link linkend="std.GLU">[GLU]</link></entry><entry>gluTessEndContour<link linkend="std.GLU">[GLU]</link></entry></row>
<row><entry>gluDeleteQuadric<link linkend="std.GLU">[GLU]</link></entry><entry>gluNurbsCurve<link linkend="std.GLU">[GLU]</link></entry><entry>gluTessEndPolygon<link linkend="std.GLU">[GLU]</link></entry></row>
<row><entry>gluDeleteTess<link linkend="std.GLU">[GLU]</link></entry><entry>gluNurbsProperty<link linkend="std.GLU">[GLU]</link></entry><entry>gluTessNormal<link linkend="std.GLU">[GLU]</link></entry></row>
<row><entry>gluDisk<link linkend="std.GLU">[GLU]</link></entry><entry>gluNurbsSurface<link linkend="std.GLU">[GLU]</link></entry><entry>gluTessProperty<link linkend="std.GLU">[GLU]</link></entry></row>
<row><entry>gluEndCurve<link linkend="std.GLU">[GLU]</link></entry><entry>gluOrtho2D<link linkend="std.GLU">[GLU]</link></entry><entry>gluTessVertex<link linkend="std.GLU">[GLU]</link></entry></row>
<row><entry>gluEndPolygon<link linkend="std.GLU">[GLU]</link></entry><entry>gluPartialDisk<link linkend="std.GLU">[GLU]</link></entry><entry>gluUnProject<link linkend="std.GLU">[GLU]</link></entry></row>
<row><entry>gluEndSurface<link linkend="std.GLU">[GLU]</link></entry><entry>gluPerspective<link linkend="std.GLU">[GLU]</link></entry><entry>gluUnProject4<link linkend="std.GLU">[GLU]</link></entry></row>
<row><entry>gluEndTrim<link linkend="std.GLU">[GLU]</link></entry><entry>gluPickMatrix<link linkend="std.GLU">[GLU]</link></entry><entry></entry></row>
</tbody>
</tgroup>
</table>
</sect1>
<sect1 id=app-libICE>
<title>libICE</title>
<para>
</para>
<para>
The behavior of the interfaces in this library is specified by the following Standards.<simplelist columns=1>
<member>
<xref linkend="std.LSB"> [LSB]
</member>
<member>
<xref linkend="std.XICE"> [XICE]
</member>
</simplelist>
</para>
<table>
<title>libICE Function Interfaces</title>
<tgroup cols=3>
<tbody>
<row><entry>IceAcceptConnection<link linkend="std.XICE">[XICE]</link></entry><entry>IceGetInBufSize<link linkend="std.XICE">[XICE]</link></entry><entry>IceRegisterForProtocolReply<link linkend="std.XICE">[XICE]</link></entry></row>
<row><entry>IceAddConnectionWatch<link linkend="std.XICE">[XICE]</link></entry><entry>IceGetListenConnectionNumber<link linkend="std.XICE">[XICE]</link></entry><entry>IceRegisterForProtocolSetup<link linkend="std.XICE">[XICE]</link></entry></row>
<row><entry>IceAllocScratch<link linkend="std.XICE">[XICE]</link></entry><entry>IceGetListenConnectionString<link linkend="std.XICE">[XICE]</link></entry><entry>IceRelease<link linkend="std.XICE">[XICE]</link></entry></row>
<row><entry>IceAppLockConn<link linkend="std.XICE">[XICE]</link></entry><entry>IceGetOutBufSize<link linkend="std.XICE">[XICE]</link></entry><entry>IceRemoveConnectionWatch<link linkend="std.XICE">[XICE]</link></entry></row>
<row><entry>IceAppUnlockConn<link linkend="std.XICE">[XICE]</link></entry><entry>IceInitThreads<link linkend="std.XICE">[XICE]</link></entry><entry>IceSetErrorHandler<link linkend="std.XICE">[XICE]</link></entry></row>
<row><entry>IceAuthFileName<link linkend="std.XICE">[XICE]</link></entry><entry>IceLastReceivedSequenceNumber<link linkend="std.XICE">[XICE]</link></entry><entry>IceSetHostBasedAuthProc<link linkend="std.XICE">[XICE]</link></entry></row>
<row><entry>IceCheckShutdownNegotiation<link linkend="std.XICE">[XICE]</link></entry><entry>IceLastSentSequenceNumber<link linkend="std.XICE">[XICE]</link></entry><entry>IceSetIOErrorHandler<link linkend="std.XICE">[XICE]</link></entry></row>
<row><entry>IceCloseConnection<link linkend="std.XICE">[XICE]</link></entry><entry>IceListenForConnections<link linkend="std.XICE">[XICE]</link></entry><entry>IceSetPaAuthData<link linkend="std.XICE">[XICE]</link></entry></row>
<row><entry>IceComposeNetworkIdList<link linkend="std.XICE">[XICE]</link></entry><entry>IceListenForWellKnownConnections<link linkend="std.XICE">[XICE]</link></entry><entry>IceSetShutdownNegotiation<link linkend="std.XICE">[XICE]</link></entry></row>
<row><entry>IceConnectionNumber<link linkend="std.XICE">[XICE]</link></entry><entry>IceLockAuthFile<link linkend="std.XICE">[XICE]</link></entry><entry>IceSwapping<link linkend="std.XICE">[XICE]</link></entry></row>
<row><entry>IceConnectionStatus<link linkend="std.XICE">[XICE]</link></entry><entry>IceOpenConnection<link linkend="std.XICE">[XICE]</link></entry><entry>IceUnlockAuthFile<link linkend="std.XICE">[XICE]</link></entry></row>
<row><entry>IceConnectionString<link linkend="std.XICE">[XICE]</link></entry><entry>IcePing<link linkend="std.XICE">[XICE]</link></entry><entry>IceVendor<link linkend="std.XICE">[XICE]</link></entry></row>
<row><entry>IceFlush<link linkend="std.XICE">[XICE]</link></entry><entry>IceProcessMessages<link linkend="std.XICE">[XICE]</link></entry><entry>IceWriteAuthFileEntry<link linkend="std.XICE">[XICE]</link></entry></row>
<row><entry>IceFreeAuthFileEntry<link linkend="std.XICE">[XICE]</link></entry><entry>IceProtocolRevision<link linkend="std.XICE">[XICE]</link></entry><entry>_IceRead<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>IceFreeListenObjs<link linkend="std.XICE">[XICE]</link></entry><entry>IceProtocolSetup<link linkend="std.XICE">[XICE]</link></entry><entry>_IceReadSkip<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>IceGenerateMagicCookie<link linkend="std.XICE">[XICE]</link></entry><entry>IceProtocolShutdown<link linkend="std.XICE">[XICE]</link></entry><entry>_IceWrite<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>IceGetAuthFileEntry<link linkend="std.XICE">[XICE]</link></entry><entry>IceProtocolVersion<link linkend="std.XICE">[XICE]</link></entry><entry></entry></row>
<row><entry>IceGetConnectionContext<link linkend="std.XICE">[XICE]</link></entry><entry>IceReadAuthFileEntry<link linkend="std.XICE">[XICE]</link></entry><entry></entry></row>
</tbody>
</tgroup>
</table>
</sect1>
<sect1 id=app-libSM>
<title>libSM</title>
<para>
</para>
<para>
The behavior of the interfaces in this library is specified by the following Standards.<simplelist columns=1>
<member>
<xref linkend="std.XSM"> [XSM]
</member>
</simplelist>
</para>
<table>
<title>libSM Function Interfaces</title>
<tgroup cols=3>
<tbody>
<row><entry>SmFreeProperty<link linkend="std.XSM">[XSM]</link></entry><entry>SmcRelease<link linkend="std.XSM">[XSM]</link></entry><entry>SmsInitialize<link linkend="std.XSM">[XSM]</link></entry></row>
<row><entry>SmFreeReasons<link linkend="std.XSM">[XSM]</link></entry><entry>SmcRequestSaveYourself<link linkend="std.XSM">[XSM]</link></entry><entry>SmsInteract<link linkend="std.XSM">[XSM]</link></entry></row>
<row><entry>SmcClientID<link linkend="std.XSM">[XSM]</link></entry><entry>SmcRequestSaveYourselfPhase2<link linkend="std.XSM">[XSM]</link></entry><entry>SmsProtocolRevision<link linkend="std.XSM">[XSM]</link></entry></row>
<row><entry>SmcCloseConnection<link linkend="std.XSM">[XSM]</link></entry><entry>SmcSaveYourselfDone<link linkend="std.XSM">[XSM]</link></entry><entry>SmsProtocolVersion<link linkend="std.XSM">[XSM]</link></entry></row>
<row><entry>SmcDeleteProperties<link linkend="std.XSM">[XSM]</link></entry><entry>SmcSetErrorHandler<link linkend="std.XSM">[XSM]</link></entry><entry>SmsRegisterClientReply<link linkend="std.XSM">[XSM]</link></entry></row>
<row><entry>SmcGetIceConnection<link linkend="std.XSM">[XSM]</link></entry><entry>SmcSetProperties<link linkend="std.XSM">[XSM]</link></entry><entry>SmsReturnProperties<link linkend="std.XSM">[XSM]</link></entry></row>
<row><entry>SmcGetProperties<link linkend="std.XSM">[XSM]</link></entry><entry>SmcVendor<link linkend="std.XSM">[XSM]</link></entry><entry>SmsSaveComplete<link linkend="std.XSM">[XSM]</link></entry></row>
<row><entry>SmcInteractDone<link linkend="std.XSM">[XSM]</link></entry><entry>SmsCleanUp<link linkend="std.XSM">[XSM]</link></entry><entry>SmsSaveYourself<link linkend="std.XSM">[XSM]</link></entry></row>
<row><entry>SmcInteractRequest<link linkend="std.XSM">[XSM]</link></entry><entry>SmsClientHostName<link linkend="std.XSM">[XSM]</link></entry><entry>SmsSaveYourselfPhase2<link linkend="std.XSM">[XSM]</link></entry></row>
<row><entry>SmcModifyCallbacks<link linkend="std.XSM">[XSM]</link></entry><entry>SmsClientID<link linkend="std.XSM">[XSM]</link></entry><entry>SmsSetErrorHandler<link linkend="std.XSM">[XSM]</link></entry></row>
<row><entry>SmcOpenConnection<link linkend="std.XSM">[XSM]</link></entry><entry>SmsDie<link linkend="std.XSM">[XSM]</link></entry><entry>SmsShutdownCancelled<link linkend="std.XSM">[XSM]</link></entry></row>
<row><entry>SmcProtocolRevision<link linkend="std.XSM">[XSM]</link></entry><entry>SmsGenerateClientID<link linkend="std.XSM">[XSM]</link></entry><entry></entry></row>
<row><entry>SmcProtocolVersion<link linkend="std.XSM">[XSM]</link></entry><entry>SmsGetIceConnection<link linkend="std.XSM">[XSM]</link></entry><entry></entry></row>
</tbody>
</tgroup>
</table>
</sect1>
<sect1 id=app-libX11>
<title>libX11</title>
<para>
</para>
<para>
The behavior of the interfaces in this library is specified by the following Standards.<simplelist columns=1>
<member>
<xref linkend="std.LSB"> [LSB]
</member>
<member>
<xref linkend="std.XKBlib"> [XKBlib]
</member>
<member>
<xref linkend="std.Xlib"> [Xlib]
</member>
</simplelist>
</para>
<table>
<title>libX11 Function Interfaces</title>
<tgroup cols=3>
<tbody>
<row><entry>XActivateScreenSaver<link linkend="std.Xlib">[Xlib]</link></entry><entry>XImageByteOrder<link linkend="std.Xlib">[Xlib]</link></entry><entry>XcmsCIELabWhiteShiftColors<link linkend="std.Xlib">[Xlib]</link></entry></row>
<row><entry>XAddConnectionWatch<link linkend="std.Xlib">[Xlib]</link></entry><entry>XInitExtension<link linkend="std.Xlib">[Xlib]</link></entry><entry>XcmsCIELuvClipL<link linkend="std.Xlib">[Xlib]</link></entry></row>
<row><entry>XAddExtension<link linkend="std.Xlib">[Xlib]</link></entry><entry>XInitImage<link linkend="std.Xlib">[Xlib]</link></entry><entry>XcmsCIELuvClipLuv<link linkend="std.Xlib">[Xlib]</link></entry></row>
<row><entry>XAddHost<link linkend="std.Xlib">[Xlib]</link></entry><entry>XInitThreads<link linkend="std.Xlib">[Xlib]</link></entry><entry>XcmsCIELuvClipuv<link linkend="std.Xlib">[Xlib]</link></entry></row>
<row><entry>XAddHosts<link linkend="std.Xlib">[Xlib]</link></entry><entry>XInsertModifiermapEntry<link linkend="std.Xlib">[Xlib]</link></entry><entry>XcmsCIELuvQueryMaxC<link linkend="std.Xlib">[Xlib]</link></entry></row>
<row><entry>XAddPixel<link linkend="std.Xlib">[Xlib]</link></entry><entry>XInstallColormap<link linkend="std.Xlib">[Xlib]</link></entry><entry>XcmsCIELuvQueryMaxL<link linkend="std.Xlib">[Xlib]</link></entry></row>
<row><entry>XAddToExtensionList<link linkend="std.Xlib">[Xlib]</link></entry><entry>XInternAtom<link linkend="std.Xlib">[Xlib]</link></entry><entry>XcmsCIELuvQueryMaxLC<link linkend="std.Xlib">[Xlib]</link></entry></row>
<row><entry>XAddToSaveSet<link linkend="std.Xlib">[Xlib]</link></entry><entry>XInternAtoms<link linkend="std.Xlib">[Xlib]</link></entry><entry>XcmsCIELuvQueryMinL<link linkend="std.Xlib">[Xlib]</link></entry></row>
<row><entry>XAllPlanes<link linkend="std.Xlib">[Xlib]</link></entry><entry>XInternalConnectionNumbers<link linkend="std.Xlib">[Xlib]</link></entry><entry>XcmsCIELuvToCIEuvY<link linkend="std.Xlib">[Xlib]</link></entry></row>
<row><entry>XAllocClassHint<link linkend="std.Xlib">[Xlib]</link></entry><entry>XIntersectRegion<link linkend="std.Xlib">[Xlib]</link></entry><entry>XcmsCIELuvWhiteShiftColors<link linkend="std.Xlib">[Xlib]</link></entry></row>
<row><entry>XAllocColor<link linkend="std.Xlib">[Xlib]</link></entry><entry>XKeycodeToKeysym<link linkend="std.Xlib">[Xlib]</link></entry><entry>XcmsCIEXYZToCIELab<link linkend="std.Xlib">[Xlib]</link></entry></row>
<row><entry>XAllocColorCells<link linkend="std.Xlib">[Xlib]</link></entry><entry>XKeysymToKeycode<link linkend="std.Xlib">[Xlib]</link></entry><entry>XcmsCIEXYZToCIEuvY<link linkend="std.Xlib">[Xlib]</link></entry></row>
<row><entry>XAllocColorPlanes<link linkend="std.Xlib">[Xlib]</link></entry><entry>XKeysymToString<link linkend="std.Xlib">[Xlib]</link></entry><entry>XcmsCIEXYZToCIExyY<link linkend="std.Xlib">[Xlib]</link></entry></row>
<row><entry>XAllocIconSize<link linkend="std.Xlib">[Xlib]</link></entry><entry>XKillClient<link linkend="std.Xlib">[Xlib]</link></entry><entry>XcmsCIEXYZToRGBi<link linkend="std.Xlib">[Xlib]</link></entry></row>
<row><entry>XAllocNamedColor<link linkend="std.Xlib">[Xlib]</link></entry><entry>XLastKnownRequestProcessed<link linkend="std.Xlib">[Xlib]</link></entry><entry>XcmsCIEuvYToCIELuv<link linkend="std.Xlib">[Xlib]</link></entry></row>
<row><entry>XAllocSizeHints<link linkend="std.Xlib">[Xlib]</link></entry><entry>XListDepths<link linkend="std.Xlib">[Xlib]</link></entry><entry>XcmsCIEuvYToCIEXYZ<link linkend="std.Xlib">[Xlib]</link></entry></row>
<row><entry>XAllocStandardColormap<link linkend="std.Xlib">[Xlib]</link></entry><entry>XListExtensions<link linkend="std.Xlib">[Xlib]</link></entry><entry>XcmsCIEuvYToTekHVC<link linkend="std.Xlib">[Xlib]</link></entry></row>
<row><entry>XAllocWMHints<link linkend="std.Xlib">[Xlib]</link></entry><entry>XListFonts<link linkend="std.Xlib">[Xlib]</link></entry><entry>XcmsCIExyYToCIEXYZ<link linkend="std.Xlib">[Xlib]</link></entry></row>
<row><entry>XAllowEvents<link linkend="std.Xlib">[Xlib]</link></entry><entry>XListFontsWithInfo<link linkend="std.Xlib">[Xlib]</link></entry><entry>XcmsClientWhitePointOfCCC<link linkend="std.Xlib">[Xlib]</link></entry></row>
<row><entry>XAutoRepeatOff<link linkend="std.Xlib">[Xlib]</link></entry><entry>XListHosts<link linkend="std.Xlib">[Xlib]</link></entry><entry>XcmsConvertColors<link linkend="std.Xlib">[Xlib]</link></entry></row>
<row><entry>XAutoRepeatOn<link linkend="std.Xlib">[Xlib]</link></entry><entry>XListInstalledColormaps<link linkend="std.Xlib">[Xlib]</link></entry><entry>XcmsCreateCCC<link linkend="std.Xlib">[Xlib]</link></entry></row>
<row><entry>XBaseFontNameListOfFontSet<link linkend="std.Xlib">[Xlib]</link></entry><entry>XListPixmapFormats<link linkend="std.Xlib">[Xlib]</link></entry><entry>XcmsDefaultCCC<link linkend="std.Xlib">[Xlib]</link></entry></row>
<row><entry>XBell<link linkend="std.Xlib">[Xlib]</link></entry><entry>XListProperties<link linkend="std.Xlib">[Xlib]</link></entry><entry>XcmsDisplayOfCCC<link linkend="std.Xlib">[Xlib]</link></entry></row>
<row><entry>XBitmapBitOrder<link linkend="std.Xlib">[Xlib]</link></entry><entry>XLoadFont<link linkend="std.Xlib">[Xlib]</link></entry><entry>XcmsFormatOfPrefix<link linkend="std.Xlib">[Xlib]</link></entry></row>
<row><entry>XBitmapPad<link linkend="std.Xlib">[Xlib]</link></entry><entry>XLoadQueryFont<link linkend="std.Xlib">[Xlib]</link></entry><entry>XcmsFreeCCC<link linkend="std.Xlib">[Xlib]</link></entry></row>
<row><entry>XBitmapUnit<link linkend="std.Xlib">[Xlib]</link></entry><entry>XLocaleOfFontSet<link linkend="std.Xlib">[Xlib]</link></entry><entry>XcmsLookupColor<link linkend="std.Xlib">[Xlib]</link></entry></row>
<row><entry>XBlackPixel<link linkend="std.Xlib">[Xlib]</link></entry><entry>XLocaleOfIM<link linkend="std.Xlib">[Xlib]</link></entry><entry>XcmsPrefixOfFormat<link linkend="std.Xlib">[Xlib]</link></entry></row>
<row><entry>XBlackPixelOfScreen<link linkend="std.Xlib">[Xlib]</link></entry><entry>XLocaleOfOM<link linkend="std.Xlib">[Xlib]</link></entry><entry>XcmsQueryBlack<link linkend="std.Xlib">[Xlib]</link></entry></row>
<row><entry>XCellsOfScreen<link linkend="std.Xlib">[Xlib]</link></entry><entry>XLockDisplay<link linkend="std.Xlib">[Xlib]</link></entry><entry>XcmsQueryBlue<link linkend="std.Xlib">[Xlib]</link></entry></row>
<row><entry>XChangeActivePointerGrab<link linkend="std.Xlib">[Xlib]</link></entry><entry>XLookupColor<link linkend="std.Xlib">[Xlib]</link></entry><entry>XcmsQueryColor<link linkend="std.Xlib">[Xlib]</link></entry></row>
<row><entry>XChangeGC<link linkend="std.Xlib">[Xlib]</link></entry><entry>XLookupKeysym<link linkend="std.Xlib">[Xlib]</link></entry><entry>XcmsQueryColors<link linkend="std.Xlib">[Xlib]</link></entry></row>
<row><entry>XChangeKeyboardControl<link linkend="std.Xlib">[Xlib]</link></entry><entry>XLookupString<link linkend="std.Xlib">[Xlib]</link></entry><entry>XcmsQueryGreen<link linkend="std.Xlib">[Xlib]</link></entry></row>
<row><entry>XChangeKeyboardMapping<link linkend="std.Xlib">[Xlib]</link></entry><entry>XLowerWindow<link linkend="std.Xlib">[Xlib]</link></entry><entry>XcmsQueryRed<link linkend="std.Xlib">[Xlib]</link></entry></row>
<row><entry>XChangePointerControl<link linkend="std.Xlib">[Xlib]</link></entry><entry>XMapRaised<link linkend="std.Xlib">[Xlib]</link></entry><entry>XcmsQueryWhite<link linkend="std.Xlib">[Xlib]</link></entry></row>
<row><entry>XChangeProperty<link linkend="std.Xlib">[Xlib]</link></entry><entry>XMapSubwindows<link linkend="std.Xlib">[Xlib]</link></entry><entry>XcmsRGBToRGBi<link linkend="std.Xlib">[Xlib]</link></entry></row>
<row><entry>XChangeSaveSet<link linkend="std.Xlib">[Xlib]</link></entry><entry>XMapWindow<link linkend="std.Xlib">[Xlib]</link></entry><entry>XcmsRGBiToCIEXYZ<link linkend="std.Xlib">[Xlib]</link></entry></row>
<row><entry>XChangeWindowAttributes<link linkend="std.Xlib">[Xlib]</link></entry><entry>XMaskEvent<link linkend="std.Xlib">[Xlib]</link></entry><entry>XcmsRGBiToRGB<link linkend="std.Xlib">[Xlib]</link></entry></row>
<row><entry>XCheckIfEvent<link linkend="std.Xlib">[Xlib]</link></entry><entry>XMatchVisualInfo<link linkend="std.Xlib">[Xlib]</link></entry><entry>XcmsScreenNumberOfCCC<link linkend="std.Xlib">[Xlib]</link></entry></row>
<row><entry>XCheckMaskEvent<link linkend="std.Xlib">[Xlib]</link></entry><entry>XMaxCmapsOfScreen<link linkend="std.Xlib">[Xlib]</link></entry><entry>XcmsScreenWhitePointOfCCC<link linkend="std.Xlib">[Xlib]</link></entry></row>
<row><entry>XCheckTypedEvent<link linkend="std.Xlib">[Xlib]</link></entry><entry>XMaxRequestSize<link linkend="std.Xlib">[Xlib]</link></entry><entry>XcmsSetCCCOfColormap<link linkend="std.Xlib">[Xlib]</link></entry></row>
<row><entry>XCheckTypedWindowEvent<link linkend="std.Xlib">[Xlib]</link></entry><entry>XMinCmapsOfScreen<link linkend="std.Xlib">[Xlib]</link></entry><entry>XcmsSetCompressionProc<link linkend="std.Xlib">[Xlib]</link></entry></row>
<row><entry>XCheckWindowEvent<link linkend="std.Xlib">[Xlib]</link></entry><entry>XMoveResizeWindow<link linkend="std.Xlib">[Xlib]</link></entry><entry>XcmsSetWhiteAdjustProc<link linkend="std.Xlib">[Xlib]</link></entry></row>
<row><entry>XCirculateSubwindows<link linkend="std.Xlib">[Xlib]</link></entry><entry>XMoveWindow<link linkend="std.Xlib">[Xlib]</link></entry><entry>XcmsSetWhitePoint<link linkend="std.Xlib">[Xlib]</link></entry></row>
<row><entry>XCirculateSubwindowsDown<link linkend="std.Xlib">[Xlib]</link></entry><entry>XNewModifiermap<link linkend="std.Xlib">[Xlib]</link></entry><entry>XcmsStoreColor<link linkend="std.Xlib">[Xlib]</link></entry></row>
<row><entry>XCirculateSubwindowsUp<link linkend="std.Xlib">[Xlib]</link></entry><entry>XNextEvent<link linkend="std.Xlib">[Xlib]</link></entry><entry>XcmsStoreColors<link linkend="std.Xlib">[Xlib]</link></entry></row>
<row><entry>XClearArea<link linkend="std.Xlib">[Xlib]</link></entry><entry>XNextRequest<link linkend="std.Xlib">[Xlib]</link></entry><entry>XcmsTekHVCClipC<link linkend="std.Xlib">[Xlib]</link></entry></row>
<row><entry>XClearWindow<link linkend="std.Xlib">[Xlib]</link></entry><entry>XNoOp<link linkend="std.Xlib">[Xlib]</link></entry><entry>XcmsTekHVCClipV<link linkend="std.Xlib">[Xlib]</link></entry></row>
<row><entry>XClipBox<link linkend="std.Xlib">[Xlib]</link></entry><entry>XOMOfOC<link linkend="std.Xlib">[Xlib]</link></entry><entry>XcmsTekHVCClipVC<link linkend="std.Xlib">[Xlib]</link></entry></row>
<row><entry>XCloseDisplay<link linkend="std.Xlib">[Xlib]</link></entry><entry>XOffsetRegion<link linkend="std.Xlib">[Xlib]</link></entry><entry>XcmsTekHVCQueryMaxC<link linkend="std.Xlib">[Xlib]</link></entry></row>
<row><entry>XCloseIM<link linkend="std.Xlib">[Xlib]</link></entry><entry>XOpenDisplay<link linkend="std.Xlib">[Xlib]</link></entry><entry>XcmsTekHVCQueryMaxV<link linkend="std.Xlib">[Xlib]</link></entry></row>
<row><entry>XCloseOM<link linkend="std.Xlib">[Xlib]</link></entry><entry>XOpenIM<link linkend="std.Xlib">[Xlib]</link></entry><entry>XcmsTekHVCQueryMaxVC<link linkend="std.Xlib">[Xlib]</link></entry></row>
<row><entry>XConfigureWindow<link linkend="std.Xlib">[Xlib]</link></entry><entry>XOpenOM<link linkend="std.Xlib">[Xlib]</link></entry><entry>XcmsTekHVCQueryMaxVSamples<link linkend="std.Xlib">[Xlib]</link></entry></row>
<row><entry>XConnectionNumber<link linkend="std.Xlib">[Xlib]</link></entry><entry>XParseColor<link linkend="std.Xlib">[Xlib]</link></entry><entry>XcmsTekHVCQueryMinV<link linkend="std.Xlib">[Xlib]</link></entry></row>
<row><entry>XContextDependentDrawing<link linkend="std.Xlib">[Xlib]</link></entry><entry>XParseGeometry<link linkend="std.Xlib">[Xlib]</link></entry><entry>XcmsTekHVCToCIEuvY<link linkend="std.Xlib">[Xlib]</link></entry></row>
<row><entry>XContextualDrawing<link linkend="std.Xlib">[Xlib]</link></entry><entry>XPeekEvent<link linkend="std.Xlib">[Xlib]</link></entry><entry>XcmsTekHVCWhiteShiftColors<link linkend="std.Xlib">[Xlib]</link></entry></row>
<row><entry>XConvertCase<link linkend="std.Xlib">[Xlib]</link></entry><entry>XPeekIfEvent<link linkend="std.Xlib">[Xlib]</link></entry><entry>XcmsVisualOfCCC<link linkend="std.Xlib">[Xlib]</link></entry></row>
<row><entry>XConvertSelection<link linkend="std.Xlib">[Xlib]</link></entry><entry>XPending<link linkend="std.Xlib">[Xlib]</link></entry><entry>XkbAllocClientMap<link linkend="std.XKBlib">[XKBlib]</link></entry></row>
<row><entry>XCopyArea<link linkend="std.Xlib">[Xlib]</link></entry><entry>XPlanesOfScreen<link linkend="std.Xlib">[Xlib]</link></entry><entry>XkbAllocCompatMap<link linkend="std.XKBlib">[XKBlib]</link></entry></row>
<row><entry>XCopyColormapAndFree<link linkend="std.Xlib">[Xlib]</link></entry><entry>XPointInRegion<link linkend="std.Xlib">[Xlib]</link></entry><entry>XkbAllocControls<link linkend="std.XKBlib">[XKBlib]</link></entry></row>
<row><entry>XCopyGC<link linkend="std.Xlib">[Xlib]</link></entry><entry>XPolygonRegion<link linkend="std.Xlib">[Xlib]</link></entry><entry>XkbAllocGeomColors<link linkend="std.XKBlib">[XKBlib]</link></entry></row>
<row><entry>XCopyPlane<link linkend="std.Xlib">[Xlib]</link></entry><entry>XProcessInternalConnection<link linkend="std.Xlib">[Xlib]</link></entry><entry>XkbAllocGeomDoodads<link linkend="std.XKBlib">[XKBlib]</link></entry></row>
<row><entry>XCreateBitmapFromData<link linkend="std.Xlib">[Xlib]</link></entry><entry>XProtocolRevision<link linkend="std.Xlib">[Xlib]</link></entry><entry>XkbAllocGeomKeyAliases<link linkend="std.XKBlib">[XKBlib]</link></entry></row>
<row><entry>XCreateColormap<link linkend="std.Xlib">[Xlib]</link></entry><entry>XProtocolVersion<link linkend="std.Xlib">[Xlib]</link></entry><entry>XkbAllocGeomKeys<link linkend="std.XKBlib">[XKBlib]</link></entry></row>
<row><entry>XCreateFontCursor<link linkend="std.Xlib">[Xlib]</link></entry><entry>XPutBackEvent<link linkend="std.Xlib">[Xlib]</link></entry><entry>XkbAllocGeomOutlines<link linkend="std.XKBlib">[XKBlib]</link></entry></row>
<row><entry>XCreateFontSet<link linkend="std.Xlib">[Xlib]</link></entry><entry>XPutImage<link linkend="std.Xlib">[Xlib]</link></entry><entry>XkbAllocGeomOverlayKeys<link linkend="std.XKBlib">[XKBlib]</link></entry></row>
<row><entry>XCreateGC<link linkend="std.Xlib">[Xlib]</link></entry><entry>XPutPixel<link linkend="std.Xlib">[Xlib]</link></entry><entry>XkbAllocGeomOverlayRows<link linkend="std.XKBlib">[XKBlib]</link></entry></row>
<row><entry>XCreateGlyphCursor<link linkend="std.Xlib">[Xlib]</link></entry><entry>XQLength<link linkend="std.Xlib">[Xlib]</link></entry><entry>XkbAllocGeomOverlays<link linkend="std.XKBlib">[XKBlib]</link></entry></row>
<row><entry>XCreateIC<link linkend="std.Xlib">[Xlib]</link></entry><entry>XQueryBestCursor<link linkend="std.Xlib">[Xlib]</link></entry><entry>XkbAllocGeomPoints<link linkend="std.XKBlib">[XKBlib]</link></entry></row>
<row><entry>XCreateImage<link linkend="std.Xlib">[Xlib]</link></entry><entry>XQueryBestSize<link linkend="std.Xlib">[Xlib]</link></entry><entry>XkbAllocGeomProps<link linkend="std.XKBlib">[XKBlib]</link></entry></row>
<row><entry>XCreateOC<link linkend="std.Xlib">[Xlib]</link></entry><entry>XQueryBestStipple<link linkend="std.Xlib">[Xlib]</link></entry><entry>XkbAllocGeomRows<link linkend="std.XKBlib">[XKBlib]</link></entry></row>
<row><entry>XCreatePixmap<link linkend="std.Xlib">[Xlib]</link></entry><entry>XQueryBestTile<link linkend="std.Xlib">[Xlib]</link></entry><entry>XkbAllocGeomSectionDoodads<link linkend="std.XKBlib">[XKBlib]</link></entry></row>
<row><entry>XCreatePixmapCursor<link linkend="std.Xlib">[Xlib]</link></entry><entry>XQueryColor<link linkend="std.Xlib">[Xlib]</link></entry><entry>XkbAllocGeomSections<link linkend="std.XKBlib">[XKBlib]</link></entry></row>
<row><entry>XCreatePixmapFromBitmapData<link linkend="std.Xlib">[Xlib]</link></entry><entry>XQueryColors<link linkend="std.Xlib">[Xlib]</link></entry><entry>XkbAllocGeomShapes<link linkend="std.XKBlib">[XKBlib]</link></entry></row>
<row><entry>XCreateRegion<link linkend="std.Xlib">[Xlib]</link></entry><entry>XQueryExtension<link linkend="std.Xlib">[Xlib]</link></entry><entry>XkbAllocGeometry<link linkend="std.XKBlib">[XKBlib]</link></entry></row>
<row><entry>XCreateSimpleWindow<link linkend="std.Xlib">[Xlib]</link></entry><entry>XQueryFont<link linkend="std.Xlib">[Xlib]</link></entry><entry>XkbAllocIndicatorMaps<link linkend="std.XKBlib">[XKBlib]</link></entry></row>
<row><entry>XCreateWindow<link linkend="std.Xlib">[Xlib]</link></entry><entry>XQueryKeymap<link linkend="std.Xlib">[Xlib]</link></entry><entry>XkbAllocKeyboard<link linkend="std.XKBlib">[XKBlib]</link></entry></row>
<row><entry>XDefaultColormap<link linkend="std.Xlib">[Xlib]</link></entry><entry>XQueryPointer<link linkend="std.Xlib">[Xlib]</link></entry><entry>XkbAllocNames<link linkend="std.XKBlib">[XKBlib]</link></entry></row>
<row><entry>XDefaultColormapOfScreen<link linkend="std.Xlib">[Xlib]</link></entry><entry>XQueryTextExtents<link linkend="std.Xlib">[Xlib]</link></entry><entry>XkbAllocServerMap<link linkend="std.XKBlib">[XKBlib]</link></entry></row>
<row><entry>XDefaultDepth<link linkend="std.Xlib">[Xlib]</link></entry><entry>XQueryTextExtents16<link linkend="std.Xlib">[Xlib]</link></entry><entry>XkbApplyCompatMapToKey<link linkend="std.XKBlib">[XKBlib]</link></entry></row>
<row><entry>XDefaultDepthOfScreen<link linkend="std.Xlib">[Xlib]</link></entry><entry>XQueryTree<link linkend="std.Xlib">[Xlib]</link></entry><entry>XkbBell<link linkend="std.XKBlib">[XKBlib]</link></entry></row>
<row><entry>XDefaultGC<link linkend="std.Xlib">[Xlib]</link></entry><entry>XRaiseWindow<link linkend="std.Xlib">[Xlib]</link></entry><entry>XkbBellEvent<link linkend="std.XKBlib">[XKBlib]</link></entry></row>
<row><entry>XDefaultGCOfScreen<link linkend="std.Xlib">[Xlib]</link></entry><entry>XReadBitmapFile<link linkend="std.Xlib">[Xlib]</link></entry><entry>XkbChangeEnabledControls<link linkend="std.XKBlib">[XKBlib]</link></entry></row>
<row><entry>XDefaultRootWindow<link linkend="std.Xlib">[Xlib]</link></entry><entry>XReadBitmapFileData<link linkend="std.Xlib">[Xlib]</link></entry><entry>XkbChangeMap<link linkend="std.XKBlib">[XKBlib]</link></entry></row>
<row><entry>XDefaultScreen<link linkend="std.Xlib">[Xlib]</link></entry><entry>XRebindKeysym<link linkend="std.Xlib">[Xlib]</link></entry><entry>XkbChangeNames<link linkend="std.XKBlib">[XKBlib]</link></entry></row>
<row><entry>XDefaultScreenOfDisplay<link linkend="std.Xlib">[Xlib]</link></entry><entry>XRecolorCursor<link linkend="std.Xlib">[Xlib]</link></entry><entry>XkbChangeTypesOfKey<link linkend="std.XKBlib">[XKBlib]</link></entry></row>
<row><entry>XDefaultString<link linkend="std.Xlib">[Xlib]</link></entry><entry>XReconfigureWMWindow<link linkend="std.Xlib">[Xlib]</link></entry><entry>XkbComputeEffectiveMap<link linkend="std.XKBlib">[XKBlib]</link></entry></row>
<row><entry>XDefaultVisual<link linkend="std.Xlib">[Xlib]</link></entry><entry>XRectInRegion<link linkend="std.Xlib">[Xlib]</link></entry><entry>XkbComputeRowBounds<link linkend="std.XKBlib">[XKBlib]</link></entry></row>
<row><entry>XDefaultVisualOfScreen<link linkend="std.Xlib">[Xlib]</link></entry><entry>XRefreshKeyboardMapping<link linkend="std.Xlib">[Xlib]</link></entry><entry>XkbComputeSectionBounds<link linkend="std.XKBlib">[XKBlib]</link></entry></row>
<row><entry>XDefineCursor<link linkend="std.Xlib">[Xlib]</link></entry><entry>XRegisterIMInstantiateCallback<link linkend="std.Xlib">[Xlib]</link></entry><entry>XkbComputeShapeBounds<link linkend="std.XKBlib">[XKBlib]</link></entry></row>
<row><entry>XDeleteContext<link linkend="std.Xlib">[Xlib]</link></entry><entry>XRemoveConnectionWatch<link linkend="std.Xlib">[Xlib]</link></entry><entry>XkbComputeShapeTop<link linkend="std.XKBlib">[XKBlib]</link></entry></row>
<row><entry>XDeleteModifiermapEntry<link linkend="std.Xlib">[Xlib]</link></entry><entry>XRemoveFromSaveSet<link linkend="std.Xlib">[Xlib]</link></entry><entry>XkbCopyKeyType<link linkend="std.XKBlib">[XKBlib]</link></entry></row>
<row><entry>XDeleteProperty<link linkend="std.Xlib">[Xlib]</link></entry><entry>XRemoveHost<link linkend="std.Xlib">[Xlib]</link></entry><entry>XkbCopyKeyTypes<link linkend="std.XKBlib">[XKBlib]</link></entry></row>
<row><entry>XDestroyIC<link linkend="std.Xlib">[Xlib]</link></entry><entry>XRemoveHosts<link linkend="std.Xlib">[Xlib]</link></entry><entry>XkbFindOverlayForKey<link linkend="std.XKBlib">[XKBlib]</link></entry></row>
<row><entry>XDestroyImage<link linkend="std.Xlib">[Xlib]</link></entry><entry>XReparentWindow<link linkend="std.Xlib">[Xlib]</link></entry><entry>XkbForceBell<link linkend="std.XKBlib">[XKBlib]</link></entry></row>
<row><entry>XDestroyOC<link linkend="std.Xlib">[Xlib]</link></entry><entry>XResetScreenSaver<link linkend="std.Xlib">[Xlib]</link></entry><entry>XkbFreeClientMap<link linkend="std.XKBlib">[XKBlib]</link></entry></row>
<row><entry>XDestroyRegion<link linkend="std.Xlib">[Xlib]</link></entry><entry>XResizeWindow<link linkend="std.Xlib">[Xlib]</link></entry><entry>XkbFreeCompatMap<link linkend="std.XKBlib">[XKBlib]</link></entry></row>
<row><entry>XDestroySubwindows<link linkend="std.Xlib">[Xlib]</link></entry><entry>XResourceManagerString<link linkend="std.Xlib">[Xlib]</link></entry><entry>XkbFreeComponentList<link linkend="std.XKBlib">[XKBlib]</link></entry></row>
<row><entry>XDestroyWindow<link linkend="std.Xlib">[Xlib]</link></entry><entry>XRestackWindows<link linkend="std.Xlib">[Xlib]</link></entry><entry>XkbFreeControls<link linkend="std.XKBlib">[XKBlib]</link></entry></row>
<row><entry>XDirectionalDependentDrawing<link linkend="std.Xlib">[Xlib]</link></entry><entry>XRootWindow<link linkend="std.Xlib">[Xlib]</link></entry><entry>XkbFreeGeomColors<link linkend="std.XKBlib">[XKBlib]</link></entry></row>
<row><entry>XDisableAccessControl<link linkend="std.Xlib">[Xlib]</link></entry><entry>XRootWindowOfScreen<link linkend="std.Xlib">[Xlib]</link></entry><entry>XkbFreeGeomDoodads<link linkend="std.XKBlib">[XKBlib]</link></entry></row>
<row><entry>XDisplayCells<link linkend="std.Xlib">[Xlib]</link></entry><entry>XRotateBuffers<link linkend="std.Xlib">[Xlib]</link></entry><entry>XkbFreeGeomKeyAliases<link linkend="std.XKBlib">[XKBlib]</link></entry></row>
<row><entry>XDisplayHeight<link linkend="std.Xlib">[Xlib]</link></entry><entry>XRotateWindowProperties<link linkend="std.Xlib">[Xlib]</link></entry><entry>XkbFreeGeomKeys<link linkend="std.XKBlib">[XKBlib]</link></entry></row>
<row><entry>XDisplayHeightMM<link linkend="std.Xlib">[Xlib]</link></entry><entry>XSaveContext<link linkend="std.Xlib">[Xlib]</link></entry><entry>XkbFreeGeomOutlines<link linkend="std.XKBlib">[XKBlib]</link></entry></row>
<row><entry>XDisplayKeycodes<link linkend="std.Xlib">[Xlib]</link></entry><entry>XScreenCount<link linkend="std.Xlib">[Xlib]</link></entry><entry>XkbFreeGeomOverlayKeys<link linkend="std.XKBlib">[XKBlib]</link></entry></row>
<row><entry>XDisplayMotionBufferSize<link linkend="std.Xlib">[Xlib]</link></entry><entry>XScreenNumberOfScreen<link linkend="std.Xlib">[Xlib]</link></entry><entry>XkbFreeGeomOverlayRows<link linkend="std.XKBlib">[XKBlib]</link></entry></row>
<row><entry>XDisplayName<link linkend="std.Xlib">[Xlib]</link></entry><entry>XScreenOfDisplay<link linkend="std.Xlib">[Xlib]</link></entry><entry>XkbFreeGeomOverlays<link linkend="std.XKBlib">[XKBlib]</link></entry></row>
<row><entry>XDisplayOfIM<link linkend="std.Xlib">[Xlib]</link></entry><entry>XScreenResourceString<link linkend="std.Xlib">[Xlib]</link></entry><entry>XkbFreeGeomPoints<link linkend="std.XKBlib">[XKBlib]</link></entry></row>
<row><entry>XDisplayOfOM<link linkend="std.Xlib">[Xlib]</link></entry><entry>XSelectInput<link linkend="std.Xlib">[Xlib]</link></entry><entry>XkbFreeGeomProperties<link linkend="std.XKBlib">[XKBlib]</link></entry></row>
<row><entry>XDisplayOfScreen<link linkend="std.Xlib">[Xlib]</link></entry><entry>XSendEvent<link linkend="std.Xlib">[Xlib]</link></entry><entry>XkbFreeGeomRows<link linkend="std.XKBlib">[XKBlib]</link></entry></row>
<row><entry>XDisplayPlanes<link linkend="std.Xlib">[Xlib]</link></entry><entry>XServerVendor<link linkend="std.Xlib">[Xlib]</link></entry><entry>XkbFreeGeomSections<link linkend="std.XKBlib">[XKBlib]</link></entry></row>
<row><entry>XDisplayString<link linkend="std.Xlib">[Xlib]</link></entry><entry>XSetAccessControl<link linkend="std.Xlib">[Xlib]</link></entry><entry>XkbFreeGeomShapes<link linkend="std.XKBlib">[XKBlib]</link></entry></row>
<row><entry>XDisplayWidth<link linkend="std.Xlib">[Xlib]</link></entry><entry>XSetAfterFunction<link linkend="std.Xlib">[Xlib]</link></entry><entry>XkbFreeGeometry<link linkend="std.XKBlib">[XKBlib]</link></entry></row>
<row><entry>XDisplayWidthMM<link linkend="std.Xlib">[Xlib]</link></entry><entry>XSetArcMode<link linkend="std.Xlib">[Xlib]</link></entry><entry>XkbFreeIndicatorMaps<link linkend="std.XKBlib">[XKBlib]</link></entry></row>
<row><entry>XDoesBackingStore<link linkend="std.Xlib">[Xlib]</link></entry><entry>XSetAuthorization<link linkend="std.Xlib">[Xlib]</link></entry><entry>XkbFreeKeyboard<link linkend="std.XKBlib">[XKBlib]</link></entry></row>
<row><entry>XDoesSaveUnders<link linkend="std.Xlib">[Xlib]</link></entry><entry>XSetBackground<link linkend="std.Xlib">[Xlib]</link></entry><entry>XkbFreeNames<link linkend="std.XKBlib">[XKBlib]</link></entry></row>
<row><entry>XDrawArc<link linkend="std.Xlib">[Xlib]</link></entry><entry>XSetClassHint<link linkend="std.Xlib">[Xlib]</link></entry><entry>XkbFreeServerMap<link linkend="std.XKBlib">[XKBlib]</link></entry></row>
<row><entry>XDrawArcs<link linkend="std.Xlib">[Xlib]</link></entry><entry>XSetClipMask<link linkend="std.Xlib">[Xlib]</link></entry><entry>XkbGetAutoRepeatRate<link linkend="std.XKBlib">[XKBlib]</link></entry></row>
<row><entry>XDrawImageString<link linkend="std.Xlib">[Xlib]</link></entry><entry>XSetClipOrigin<link linkend="std.Xlib">[Xlib]</link></entry><entry>XkbGetCompatMap<link linkend="std.XKBlib">[XKBlib]</link></entry></row>
<row><entry>XDrawImageString16<link linkend="std.Xlib">[Xlib]</link></entry><entry>XSetClipRectangles<link linkend="std.Xlib">[Xlib]</link></entry><entry>XkbGetControls<link linkend="std.XKBlib">[XKBlib]</link></entry></row>
<row><entry>XDrawLine<link linkend="std.Xlib">[Xlib]</link></entry><entry>XSetCloseDownMode<link linkend="std.Xlib">[Xlib]</link></entry><entry>XkbGetGeometry<link linkend="std.XKBlib">[XKBlib]</link></entry></row>
<row><entry>XDrawLines<link linkend="std.Xlib">[Xlib]</link></entry><entry>XSetCommand<link linkend="std.Xlib">[Xlib]</link></entry><entry>XkbGetIndicatorMap<link linkend="std.XKBlib">[XKBlib]</link></entry></row>
<row><entry>XDrawPoint<link linkend="std.Xlib">[Xlib]</link></entry><entry>XSetDashes<link linkend="std.Xlib">[Xlib]</link></entry><entry>XkbGetIndicatorState<link linkend="std.XKBlib">[XKBlib]</link></entry></row>
<row><entry>XDrawPoints<link linkend="std.Xlib">[Xlib]</link></entry><entry>XSetErrorHandler<link linkend="std.Xlib">[Xlib]</link></entry><entry>XkbGetKeyActions<link linkend="std.XKBlib">[XKBlib]</link></entry></row>
<row><entry>XDrawRectangle<link linkend="std.Xlib">[Xlib]</link></entry><entry>XSetFillRule<link linkend="std.Xlib">[Xlib]</link></entry><entry>XkbGetKeyBehaviors<link linkend="std.XKBlib">[XKBlib]</link></entry></row>
<row><entry>XDrawRectangles<link linkend="std.Xlib">[Xlib]</link></entry><entry>XSetFillStyle<link linkend="std.Xlib">[Xlib]</link></entry><entry>XkbGetKeyExplicitComponents<link linkend="std.XKBlib">[XKBlib]</link></entry></row>
<row><entry>XDrawSegments<link linkend="std.Xlib">[Xlib]</link></entry><entry>XSetFont<link linkend="std.Xlib">[Xlib]</link></entry><entry>XkbGetKeyModifierMap<link linkend="std.XKBlib">[XKBlib]</link></entry></row>
<row><entry>XDrawString<link linkend="std.Xlib">[Xlib]</link></entry><entry>XSetFontPath<link linkend="std.Xlib">[Xlib]</link></entry><entry>XkbGetKeySyms<link linkend="std.XKBlib">[XKBlib]</link></entry></row>
<row><entry>XDrawString16<link linkend="std.Xlib">[Xlib]</link></entry><entry>XSetForeground<link linkend="std.Xlib">[Xlib]</link></entry><entry>XkbGetKeyTypes<link linkend="std.XKBlib">[XKBlib]</link></entry></row>
<row><entry>XDrawText<link linkend="std.Xlib">[Xlib]</link></entry><entry>XSetFunction<link linkend="std.Xlib">[Xlib]</link></entry><entry>XkbGetKeyboard<link linkend="std.XKBlib">[XKBlib]</link></entry></row>
<row><entry>XDrawText16<link linkend="std.Xlib">[Xlib]</link></entry><entry>XSetGraphicsExposures<link linkend="std.Xlib">[Xlib]</link></entry><entry>XkbGetKeyboardByName<link linkend="std.XKBlib">[XKBlib]</link></entry></row>
<row><entry>XEHeadOfExtensionList<link linkend="std.Xlib">[Xlib]</link></entry><entry>XSetICFocus<link linkend="std.Xlib">[Xlib]</link></entry><entry>XkbGetMap<link linkend="std.XKBlib">[XKBlib]</link></entry></row>
<row><entry>XESetBeforeFlush<link linkend="std.Xlib">[Xlib]</link></entry><entry>XSetICValues<link linkend="std.Xlib">[Xlib]</link></entry><entry>XkbGetMapChanges<link linkend="std.XKBlib">[XKBlib]</link></entry></row>
<row><entry>XESetCloseDisplay<link linkend="std.Xlib">[Xlib]</link></entry><entry>XSetIMValues<link linkend="std.Xlib">[Xlib]</link></entry><entry>XkbGetNamedGeometry<link linkend="std.XKBlib">[XKBlib]</link></entry></row>
<row><entry>XESetCopyGC<link linkend="std.Xlib">[Xlib]</link></entry><entry>XSetIOErrorHandler<link linkend="std.Xlib">[Xlib]</link></entry><entry>XkbGetNamedIndicator<link linkend="std.XKBlib">[XKBlib]</link></entry></row>
<row><entry>XESetCreateFont<link linkend="std.Xlib">[Xlib]</link></entry><entry>XSetIconName<link linkend="std.Xlib">[Xlib]</link></entry><entry>XkbGetNames<link linkend="std.XKBlib">[XKBlib]</link></entry></row>
<row><entry>XESetCreateGC<link linkend="std.Xlib">[Xlib]</link></entry><entry>XSetIconSizes<link linkend="std.Xlib">[Xlib]</link></entry><entry>XkbGetPerClientControls<link linkend="std.XKBlib">[XKBlib]</link></entry></row>
<row><entry>XESetError<link linkend="std.Xlib">[Xlib]</link></entry><entry>XSetInputFocus<link linkend="std.Xlib">[Xlib]</link></entry><entry>XkbGetState<link linkend="std.XKBlib">[XKBlib]</link></entry></row>
<row><entry>XESetErrorString<link linkend="std.Xlib">[Xlib]</link></entry><entry>XSetLineAttributes<link linkend="std.Xlib">[Xlib]</link></entry><entry>XkbGetUpdatedMap<link linkend="std.XKBlib">[XKBlib]</link></entry></row>
<row><entry>XESetEventToWire<link linkend="std.Xlib">[Xlib]</link></entry><entry>XSetLocaleModifiers<link linkend="std.Xlib">[Xlib]</link></entry><entry>XkbGetVirtualMods<link linkend="std.XKBlib">[XKBlib]</link></entry></row>
<row><entry>XESetFlushGC<link linkend="std.Xlib">[Xlib]</link></entry><entry>XSetModifierMapping<link linkend="std.Xlib">[Xlib]</link></entry><entry>XkbGetXlibControls<link linkend="std.XKBlib">[XKBlib]</link></entry></row>
<row><entry>XESetFreeFont<link linkend="std.Xlib">[Xlib]</link></entry><entry>XSetNormalHints<link linkend="std.Xlib">[Xlib]</link></entry><entry>XkbIgnoreExtension<link linkend="std.XKBlib">[XKBlib]</link></entry></row>
<row><entry>XESetFreeGC<link linkend="std.Xlib">[Xlib]</link></entry><entry>XSetOCValues<link linkend="std.Xlib">[Xlib]</link></entry><entry>XkbInitCanonicalKeyTypes<link linkend="std.XKBlib">[XKBlib]</link></entry></row>
<row><entry>XESetPrintErrorValues<link linkend="std.Xlib">[Xlib]</link></entry><entry>XSetOMValues<link linkend="std.Xlib">[Xlib]</link></entry><entry>XkbKeyTypesForCoreSymbols<link linkend="std.XKBlib">[XKBlib]</link></entry></row>
<row><entry>XESetWireToError<link linkend="std.Xlib">[Xlib]</link></entry><entry>XSetPlaneMask<link linkend="std.Xlib">[Xlib]</link></entry><entry>XkbKeycodeToKeysym<link linkend="std.XKBlib">[XKBlib]</link></entry></row>
<row><entry>XESetWireToEvent<link linkend="std.Xlib">[Xlib]</link></entry><entry>XSetPointerMapping<link linkend="std.Xlib">[Xlib]</link></entry><entry>XkbKeysymToModifiers<link linkend="std.XKBlib">[XKBlib]</link></entry></row>
<row><entry>XEmptyRegion<link linkend="std.Xlib">[Xlib]</link></entry><entry>XSetRGBColormaps<link linkend="std.Xlib">[Xlib]</link></entry><entry>XkbLatchGroup<link linkend="std.XKBlib">[XKBlib]</link></entry></row>
<row><entry>XEnableAccessControl<link linkend="std.Xlib">[Xlib]</link></entry><entry>XSetRegion<link linkend="std.Xlib">[Xlib]</link></entry><entry>XkbLatchModifiers<link linkend="std.XKBlib">[XKBlib]</link></entry></row>
<row><entry>XEqualRegion<link linkend="std.Xlib">[Xlib]</link></entry><entry>XSetScreenSaver<link linkend="std.Xlib">[Xlib]</link></entry><entry>XkbLibraryVersion<link linkend="std.XKBlib">[XKBlib]</link></entry></row>
<row><entry>XEventMaskOfScreen<link linkend="std.Xlib">[Xlib]</link></entry><entry>XSetSelectionOwner<link linkend="std.Xlib">[Xlib]</link></entry><entry>XkbListComponents<link linkend="std.XKBlib">[XKBlib]</link></entry></row>
<row><entry>XEventsQueued<link linkend="std.Xlib">[Xlib]</link></entry><entry>XSetSizeHints<link linkend="std.Xlib">[Xlib]</link></entry><entry>XkbLockGroup<link linkend="std.XKBlib">[XKBlib]</link></entry></row>
<row><entry>XExtendedMaxRequestSize<link linkend="std.Xlib">[Xlib]</link></entry><entry>XSetStandardColormap<link linkend="std.Xlib">[Xlib]</link></entry><entry>XkbLockModifiers<link linkend="std.XKBlib">[XKBlib]</link></entry></row>
<row><entry>XExtentsOfFontSet<link linkend="std.Xlib">[Xlib]</link></entry><entry>XSetStandardProperties<link linkend="std.Xlib">[Xlib]</link></entry><entry>XkbLookupKeyBinding<link linkend="std.XKBlib">[XKBlib]</link></entry></row>
<row><entry>XFetchBuffer<link linkend="std.Xlib">[Xlib]</link></entry><entry>XSetState<link linkend="std.Xlib">[Xlib]</link></entry><entry>XkbLookupKeySym<link linkend="std.XKBlib">[XKBlib]</link></entry></row>
<row><entry>XFetchBytes<link linkend="std.Xlib">[Xlib]</link></entry><entry>XSetStipple<link linkend="std.Xlib">[Xlib]</link></entry><entry>XkbNoteControlsChanges<link linkend="std.XKBlib">[XKBlib]</link></entry></row>
<row><entry>XFetchName<link linkend="std.Xlib">[Xlib]</link></entry><entry>XSetSubwindowMode<link linkend="std.Xlib">[Xlib]</link></entry><entry>XkbNoteMapChanges<link linkend="std.XKBlib">[XKBlib]</link></entry></row>
<row><entry>XFillArc<link linkend="std.Xlib">[Xlib]</link></entry><entry>XSetTSOrigin<link linkend="std.Xlib">[Xlib]</link></entry><entry>XkbNoteNameChanges<link linkend="std.XKBlib">[XKBlib]</link></entry></row>
<row><entry>XFillArcs<link linkend="std.Xlib">[Xlib]</link></entry><entry>XSetTextProperty<link linkend="std.Xlib">[Xlib]</link></entry><entry>XkbOpenDisplay<link linkend="std.XKBlib">[XKBlib]</link></entry></row>
<row><entry>XFillPolygon<link linkend="std.Xlib">[Xlib]</link></entry><entry>XSetTile<link linkend="std.Xlib">[Xlib]</link></entry><entry>XkbQueryExtension<link linkend="std.XKBlib">[XKBlib]</link></entry></row>
<row><entry>XFillRectangle<link linkend="std.Xlib">[Xlib]</link></entry><entry>XSetTransientForHint<link linkend="std.Xlib">[Xlib]</link></entry><entry>XkbRefreshKeyboardMapping<link linkend="std.XKBlib">[XKBlib]</link></entry></row>
<row><entry>XFillRectangles<link linkend="std.Xlib">[Xlib]</link></entry><entry>XSetWMClientMachine<link linkend="std.Xlib">[Xlib]</link></entry><entry>XkbResizeKeyActions<link linkend="std.XKBlib">[XKBlib]</link></entry></row>
<row><entry>XFilterEvent<link linkend="std.Xlib">[Xlib]</link></entry><entry>XSetWMColormapWindows<link linkend="std.Xlib">[Xlib]</link></entry><entry>XkbResizeKeySyms<link linkend="std.XKBlib">[XKBlib]</link></entry></row>
<row><entry>XFindContext<link linkend="std.Xlib">[Xlib]</link></entry><entry>XSetWMHints<link linkend="std.Xlib">[Xlib]</link></entry><entry>XkbResizeKeyType<link linkend="std.XKBlib">[XKBlib]</link></entry></row>
<row><entry>XFindOnExtensionList<link linkend="std.Xlib">[Xlib]</link></entry><entry>XSetWMIconName<link linkend="std.Xlib">[Xlib]</link></entry><entry>XkbSelectEventDetails<link linkend="std.XKBlib">[XKBlib]</link></entry></row>
<row><entry>XFlush<link linkend="std.Xlib">[Xlib]</link></entry><entry>XSetWMName<link linkend="std.Xlib">[Xlib]</link></entry><entry>XkbSelectEvents<link linkend="std.XKBlib">[XKBlib]</link></entry></row>
<row><entry>XFlushGC<link linkend="std.Xlib">[Xlib]</link></entry><entry>XSetWMNormalHints<link linkend="std.Xlib">[Xlib]</link></entry><entry>XkbSetAtomFuncs<link linkend="std.XKBlib">[XKBlib]</link></entry></row>
<row><entry>XFontsOfFontSet<link linkend="std.Xlib">[Xlib]</link></entry><entry>XSetWMProperties<link linkend="std.Xlib">[Xlib]</link></entry><entry>XkbSetAutoRepeatRate<link linkend="std.XKBlib">[XKBlib]</link></entry></row>
<row><entry>XForceScreenSaver<link linkend="std.Xlib">[Xlib]</link></entry><entry>XSetWMProtocols<link linkend="std.Xlib">[Xlib]</link></entry><entry>XkbSetAutoResetControls<link linkend="std.XKBlib">[XKBlib]</link></entry></row>
<row><entry>XFree<link linkend="std.Xlib">[Xlib]</link></entry><entry>XSetWMSizeHints<link linkend="std.Xlib">[Xlib]</link></entry><entry>XkbSetCompatMap<link linkend="std.XKBlib">[XKBlib]</link></entry></row>
<row><entry>XFreeColormap<link linkend="std.Xlib">[Xlib]</link></entry><entry>XSetWindowBackground<link linkend="std.Xlib">[Xlib]</link></entry><entry>XkbSetControls<link linkend="std.XKBlib">[XKBlib]</link></entry></row>
<row><entry>XFreeColors<link linkend="std.Xlib">[Xlib]</link></entry><entry>XSetWindowBackgroundPixmap<link linkend="std.Xlib">[Xlib]</link></entry><entry>XkbSetDebuggingFlags<link linkend="std.XKBlib">[XKBlib]</link></entry></row>
<row><entry>XFreeCursor<link linkend="std.Xlib">[Xlib]</link></entry><entry>XSetWindowBorder<link linkend="std.Xlib">[Xlib]</link></entry><entry>XkbSetDetectableAutoRepeat<link linkend="std.XKBlib">[XKBlib]</link></entry></row>
<row><entry>XFreeExtensionList<link linkend="std.Xlib">[Xlib]</link></entry><entry>XSetWindowBorderPixmap<link linkend="std.Xlib">[Xlib]</link></entry><entry>XkbSetGeometry<link linkend="std.XKBlib">[XKBlib]</link></entry></row>
<row><entry>XFreeFont<link linkend="std.Xlib">[Xlib]</link></entry><entry>XSetWindowBorderWidth<link linkend="std.Xlib">[Xlib]</link></entry><entry>XkbSetIgnoreLockMods<link linkend="std.XKBlib">[XKBlib]</link></entry></row>
<row><entry>XFreeFontInfo<link linkend="std.Xlib">[Xlib]</link></entry><entry>XSetWindowColormap<link linkend="std.Xlib">[Xlib]</link></entry><entry>XkbSetIndicatorMap<link linkend="std.XKBlib">[XKBlib]</link></entry></row>
<row><entry>XFreeFontNames<link linkend="std.Xlib">[Xlib]</link></entry><entry>XSetZoomHints<link linkend="std.Xlib">[Xlib]</link></entry><entry>XkbSetMap<link linkend="std.XKBlib">[XKBlib]</link></entry></row>
<row><entry>XFreeFontPath<link linkend="std.Xlib">[Xlib]</link></entry><entry>XShrinkRegion<link linkend="std.Xlib">[Xlib]</link></entry><entry>XkbSetNamedIndicator<link linkend="std.XKBlib">[XKBlib]</link></entry></row>
<row><entry>XFreeFontSet<link linkend="std.Xlib">[Xlib]</link></entry><entry>XStoreBuffer<link linkend="std.Xlib">[Xlib]</link></entry><entry>XkbSetNames<link linkend="std.XKBlib">[XKBlib]</link></entry></row>
<row><entry>XFreeGC<link linkend="std.Xlib">[Xlib]</link></entry><entry>XStoreBytes<link linkend="std.Xlib">[Xlib]</link></entry><entry>XkbSetPerClientControls<link linkend="std.XKBlib">[XKBlib]</link></entry></row>
<row><entry>XFreeModifiermap<link linkend="std.Xlib">[Xlib]</link></entry><entry>XStoreColor<link linkend="std.Xlib">[Xlib]</link></entry><entry>XkbSetServerInternalMods<link linkend="std.XKBlib">[XKBlib]</link></entry></row>
<row><entry>XFreePixmap<link linkend="std.Xlib">[Xlib]</link></entry><entry>XStoreColors<link linkend="std.Xlib">[Xlib]</link></entry><entry>XkbSetXlibControls<link linkend="std.XKBlib">[XKBlib]</link></entry></row>
<row><entry>XFreeStringList<link linkend="std.Xlib">[Xlib]</link></entry><entry>XStoreName<link linkend="std.Xlib">[Xlib]</link></entry><entry>XkbToControl<link linkend="std.XKBlib">[XKBlib]</link></entry></row>
<row><entry>XGContextFromGC<link linkend="std.Xlib">[Xlib]</link></entry><entry>XStoreNamedColor<link linkend="std.Xlib">[Xlib]</link></entry><entry>XkbTranslateKeyCode<link linkend="std.XKBlib">[XKBlib]</link></entry></row>
<row><entry>XGeometry<link linkend="std.Xlib">[Xlib]</link></entry><entry>XStringListToTextProperty<link linkend="std.Xlib">[Xlib]</link></entry><entry>XkbTranslateKeySym<link linkend="std.XKBlib">[XKBlib]</link></entry></row>
<row><entry>XGetAtomName<link linkend="std.Xlib">[Xlib]</link></entry><entry>XStringToKeysym<link linkend="std.Xlib">[Xlib]</link></entry><entry>XkbUpdateMapFromCore<link linkend="std.XKBlib">[XKBlib]</link></entry></row>
<row><entry>XGetAtomNames<link linkend="std.Xlib">[Xlib]</link></entry><entry>XSubImage<link linkend="std.Xlib">[Xlib]</link></entry><entry>XkbUseExtension<link linkend="std.XKBlib">[XKBlib]</link></entry></row>
<row><entry>XGetClassHint<link linkend="std.Xlib">[Xlib]</link></entry><entry>XSubtractRegion<link linkend="std.Xlib">[Xlib]</link></entry><entry>XkbVirtualModsToReal<link linkend="std.XKBlib">[XKBlib]</link></entry></row>
<row><entry>XGetCommand<link linkend="std.Xlib">[Xlib]</link></entry><entry>XSupportsLocale<link linkend="std.Xlib">[Xlib]</link></entry><entry>XmbDrawImageString<link linkend="std.Xlib">[Xlib]</link></entry></row>
<row><entry>XGetDefault<link linkend="std.Xlib">[Xlib]</link></entry><entry>XSync<link linkend="std.Xlib">[Xlib]</link></entry><entry>XmbDrawString<link linkend="std.Xlib">[Xlib]</link></entry></row>
<row><entry>XGetErrorDatabaseText<link linkend="std.Xlib">[Xlib]</link></entry><entry>XSynchronize<link linkend="std.Xlib">[Xlib]</link></entry><entry>XmbDrawText<link linkend="std.Xlib">[Xlib]</link></entry></row>
<row><entry>XGetErrorText<link linkend="std.Xlib">[Xlib]</link></entry><entry>XTextExtents<link linkend="std.Xlib">[Xlib]</link></entry><entry>XmbLookupString<link linkend="std.Xlib">[Xlib]</link></entry></row>
<row><entry>XGetFontPath<link linkend="std.Xlib">[Xlib]</link></entry><entry>XTextExtents16<link linkend="std.Xlib">[Xlib]</link></entry><entry>XmbResetIC<link linkend="std.Xlib">[Xlib]</link></entry></row>
<row><entry>XGetFontProperty<link linkend="std.Xlib">[Xlib]</link></entry><entry>XTextPropertyToStringList<link linkend="std.Xlib">[Xlib]</link></entry><entry>XmbSetWMProperties<link linkend="std.Xlib">[Xlib]</link></entry></row>
<row><entry>XGetGCValues<link linkend="std.Xlib">[Xlib]</link></entry><entry>XTextWidth<link linkend="std.Xlib">[Xlib]</link></entry><entry>XmbTextEscapement<link linkend="std.Xlib">[Xlib]</link></entry></row>
<row><entry>XGetGeometry<link linkend="std.Xlib">[Xlib]</link></entry><entry>XTextWidth16<link linkend="std.Xlib">[Xlib]</link></entry><entry>XmbTextExtents<link linkend="std.Xlib">[Xlib]</link></entry></row>
<row><entry>XGetICValues<link linkend="std.Xlib">[Xlib]</link></entry><entry>XTranslateCoordinates<link linkend="std.Xlib">[Xlib]</link></entry><entry>XmbTextListToTextProperty<link linkend="std.Xlib">[Xlib]</link></entry></row>
<row><entry>XGetIMValues<link linkend="std.Xlib">[Xlib]</link></entry><entry>XUndefineCursor<link linkend="std.Xlib">[Xlib]</link></entry><entry>XmbTextPerCharExtents<link linkend="std.Xlib">[Xlib]</link></entry></row>
<row><entry>XGetIconName<link linkend="std.Xlib">[Xlib]</link></entry><entry>XUngrabButton<link linkend="std.Xlib">[Xlib]</link></entry><entry>XmbTextPropertyToTextList<link linkend="std.Xlib">[Xlib]</link></entry></row>
<row><entry>XGetIconSizes<link linkend="std.Xlib">[Xlib]</link></entry><entry>XUngrabKey<link linkend="std.Xlib">[Xlib]</link></entry><entry>XrmCombineDatabase<link linkend="std.Xlib">[Xlib]</link></entry></row>
<row><entry>XGetImage<link linkend="std.Xlib">[Xlib]</link></entry><entry>XUngrabKeyboard<link linkend="std.Xlib">[Xlib]</link></entry><entry>XrmCombineFileDatabase<link linkend="std.Xlib">[Xlib]</link></entry></row>
<row><entry>XGetInputFocus<link linkend="std.Xlib">[Xlib]</link></entry><entry>XUngrabPointer<link linkend="std.Xlib">[Xlib]</link></entry><entry>XrmDestroyDatabase<link linkend="std.Xlib">[Xlib]</link></entry></row>
<row><entry>XGetKeyboardControl<link linkend="std.Xlib">[Xlib]</link></entry><entry>XUngrabServer<link linkend="std.Xlib">[Xlib]</link></entry><entry>XrmEnumerateDatabase<link linkend="std.Xlib">[Xlib]</link></entry></row>
<row><entry>XGetKeyboardMapping<link linkend="std.Xlib">[Xlib]</link></entry><entry>XUninstallColormap<link linkend="std.Xlib">[Xlib]</link></entry><entry>XrmGetDatabase<link linkend="std.Xlib">[Xlib]</link></entry></row>
<row><entry>XGetModifierMapping<link linkend="std.Xlib">[Xlib]</link></entry><entry>XUnionRectWithRegion<link linkend="std.Xlib">[Xlib]</link></entry><entry>XrmGetFileDatabase<link linkend="std.Xlib">[Xlib]</link></entry></row>
<row><entry>XGetMotionEvents<link linkend="std.Xlib">[Xlib]</link></entry><entry>XUnionRegion<link linkend="std.Xlib">[Xlib]</link></entry><entry>XrmGetResource<link linkend="std.Xlib">[Xlib]</link></entry></row>
<row><entry>XGetNormalHints<link linkend="std.Xlib">[Xlib]</link></entry><entry>XUnloadFont<link linkend="std.Xlib">[Xlib]</link></entry><entry>XrmGetStringDatabase<link linkend="std.Xlib">[Xlib]</link></entry></row>
<row><entry>XGetOCValues<link linkend="std.Xlib">[Xlib]</link></entry><entry>XUnlockDisplay<link linkend="std.Xlib">[Xlib]</link></entry><entry>XrmInitialize<link linkend="std.Xlib">[Xlib]</link></entry></row>
<row><entry>XGetOMValues<link linkend="std.Xlib">[Xlib]</link></entry><entry>XUnmapSubwindows<link linkend="std.Xlib">[Xlib]</link></entry><entry>XrmLocaleOfDatabase<link linkend="std.Xlib">[Xlib]</link></entry></row>
<row><entry>XGetPixel<link linkend="std.Xlib">[Xlib]</link></entry><entry>XUnmapWindow<link linkend="std.Xlib">[Xlib]</link></entry><entry>XrmMergeDatabases<link linkend="std.Xlib">[Xlib]</link></entry></row>
<row><entry>XGetPointerControl<link linkend="std.Xlib">[Xlib]</link></entry><entry>XUnregisterIMInstantiateCallback<link linkend="std.Xlib">[Xlib]</link></entry><entry>XrmParseCommand<link linkend="std.Xlib">[Xlib]</link></entry></row>
<row><entry>XGetPointerMapping<link linkend="std.Xlib">[Xlib]</link></entry><entry>XUnsetICFocus<link linkend="std.Xlib">[Xlib]</link></entry><entry>XrmPermStringToQuark<link linkend="std.Xlib">[Xlib]</link></entry></row>
<row><entry>XGetRGBColormaps<link linkend="std.Xlib">[Xlib]</link></entry><entry>XVaCreateNestedList<link linkend="std.Xlib">[Xlib]</link></entry><entry>XrmPutFileDatabase<link linkend="std.Xlib">[Xlib]</link></entry></row>
<row><entry>XGetScreenSaver<link linkend="std.Xlib">[Xlib]</link></entry><entry>XVendorRelease<link linkend="std.Xlib">[Xlib]</link></entry><entry>XrmPutLineResource<link linkend="std.Xlib">[Xlib]</link></entry></row>
<row><entry>XGetSelectionOwner<link linkend="std.Xlib">[Xlib]</link></entry><entry>XVisualIDFromVisual<link linkend="std.Xlib">[Xlib]</link></entry><entry>XrmPutResource<link linkend="std.Xlib">[Xlib]</link></entry></row>
<row><entry>XGetSizeHints<link linkend="std.Xlib">[Xlib]</link></entry><entry>XWMGeometry<link linkend="std.Xlib">[Xlib]</link></entry><entry>XrmPutStringResource<link linkend="std.Xlib">[Xlib]</link></entry></row>
<row><entry>XGetStandardColormap<link linkend="std.Xlib">[Xlib]</link></entry><entry>XWarpPointer<link linkend="std.Xlib">[Xlib]</link></entry><entry>XrmQGetResource<link linkend="std.Xlib">[Xlib]</link></entry></row>
<row><entry>XGetSubImage<link linkend="std.Xlib">[Xlib]</link></entry><entry>XWhitePixel<link linkend="std.Xlib">[Xlib]</link></entry><entry>XrmQGetSearchList<link linkend="std.Xlib">[Xlib]</link></entry></row>
<row><entry>XGetTextProperty<link linkend="std.Xlib">[Xlib]</link></entry><entry>XWhitePixelOfScreen<link linkend="std.Xlib">[Xlib]</link></entry><entry>XrmQGetSearchResource<link linkend="std.Xlib">[Xlib]</link></entry></row>
<row><entry>XGetTransientForHint<link linkend="std.Xlib">[Xlib]</link></entry><entry>XWidthMMOfScreen<link linkend="std.Xlib">[Xlib]</link></entry><entry>XrmQPutResource<link linkend="std.Xlib">[Xlib]</link></entry></row>
<row><entry>XGetVisualInfo<link linkend="std.Xlib">[Xlib]</link></entry><entry>XWidthOfScreen<link linkend="std.Xlib">[Xlib]</link></entry><entry>XrmQPutStringResource<link linkend="std.Xlib">[Xlib]</link></entry></row>
<row><entry>XGetWMClientMachine<link linkend="std.Xlib">[Xlib]</link></entry><entry>XWindowEvent<link linkend="std.Xlib">[Xlib]</link></entry><entry>XrmQuarkToString<link linkend="std.Xlib">[Xlib]</link></entry></row>
<row><entry>XGetWMColormapWindows<link linkend="std.Xlib">[Xlib]</link></entry><entry>XWithdrawWindow<link linkend="std.Xlib">[Xlib]</link></entry><entry>XrmSetDatabase<link linkend="std.Xlib">[Xlib]</link></entry></row>
<row><entry>XGetWMHints<link linkend="std.Xlib">[Xlib]</link></entry><entry>XWriteBitmapFile<link linkend="std.Xlib">[Xlib]</link></entry><entry>XrmStringToBindingQuarkList<link linkend="std.Xlib">[Xlib]</link></entry></row>
<row><entry>XGetWMIconName<link linkend="std.Xlib">[Xlib]</link></entry><entry>XXorRegion<link linkend="std.Xlib">[Xlib]</link></entry><entry>XrmStringToQuark<link linkend="std.Xlib">[Xlib]</link></entry></row>
<row><entry>XGetWMName<link linkend="std.Xlib">[Xlib]</link></entry><entry>XauDisposeAuth<link linkend="std.Xlib">[Xlib]</link></entry><entry>XrmStringToQuarkList<link linkend="std.Xlib">[Xlib]</link></entry></row>
<row><entry>XGetWMNormalHints<link linkend="std.Xlib">[Xlib]</link></entry><entry>XauFileName<link linkend="std.Xlib">[Xlib]</link></entry><entry>XrmUniqueQuark<link linkend="std.Xlib">[Xlib]</link></entry></row>
<row><entry>XGetWMProtocols<link linkend="std.Xlib">[Xlib]</link></entry><entry>XauGetBestAuthByAddr<link linkend="std.Xlib">[Xlib]</link></entry><entry>Xutf8TextListToTextProperty<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>XGetWMSizeHints<link linkend="std.Xlib">[Xlib]</link></entry><entry>XauReadAuth<link linkend="std.Xlib">[Xlib]</link></entry><entry>Xutf8TextPropertyToTextList<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>XGetWindowAttributes<link linkend="std.Xlib">[Xlib]</link></entry><entry>XcmsAddColorSpace<link linkend="std.Xlib">[Xlib]</link></entry><entry>XwcDrawImageString<link linkend="std.Xlib">[Xlib]</link></entry></row>
<row><entry>XGetWindowProperty<link linkend="std.Xlib">[Xlib]</link></entry><entry>XcmsAddFunctionSet<link linkend="std.Xlib">[Xlib]</link></entry><entry>XwcDrawString<link linkend="std.Xlib">[Xlib]</link></entry></row>
<row><entry>XGetZoomHints<link linkend="std.Xlib">[Xlib]</link></entry><entry>XcmsAllocColor<link linkend="std.Xlib">[Xlib]</link></entry><entry>XwcDrawText<link linkend="std.Xlib">[Xlib]</link></entry></row>
<row><entry>XGrabButton<link linkend="std.Xlib">[Xlib]</link></entry><entry>XcmsAllocNamedColor<link linkend="std.Xlib">[Xlib]</link></entry><entry>XwcFreeStringList<link linkend="std.Xlib">[Xlib]</link></entry></row>
<row><entry>XGrabKey<link linkend="std.Xlib">[Xlib]</link></entry><entry>XcmsCCCOfColormap<link linkend="std.Xlib">[Xlib]</link></entry><entry>XwcLookupString<link linkend="std.Xlib">[Xlib]</link></entry></row>
<row><entry>XGrabKeyboard<link linkend="std.Xlib">[Xlib]</link></entry><entry>XcmsCIELabClipL<link linkend="std.Xlib">[Xlib]</link></entry><entry>XwcResetIC<link linkend="std.Xlib">[Xlib]</link></entry></row>
<row><entry>XGrabPointer<link linkend="std.Xlib">[Xlib]</link></entry><entry>XcmsCIELabClipLab<link linkend="std.Xlib">[Xlib]</link></entry><entry>XwcTextEscapement<link linkend="std.Xlib">[Xlib]</link></entry></row>
<row><entry>XGrabServer<link linkend="std.Xlib">[Xlib]</link></entry><entry>XcmsCIELabClipab<link linkend="std.Xlib">[Xlib]</link></entry><entry>XwcTextExtents<link linkend="std.Xlib">[Xlib]</link></entry></row>
<row><entry>XHeightMMOfScreen<link linkend="std.Xlib">[Xlib]</link></entry><entry>XcmsCIELabQueryMaxC<link linkend="std.Xlib">[Xlib]</link></entry><entry>XwcTextListToTextProperty<link linkend="std.Xlib">[Xlib]</link></entry></row>
<row><entry>XHeightOfScreen<link linkend="std.Xlib">[Xlib]</link></entry><entry>XcmsCIELabQueryMaxL<link linkend="std.Xlib">[Xlib]</link></entry><entry>XwcTextPerCharExtents<link linkend="std.Xlib">[Xlib]</link></entry></row>
<row><entry>XIMOfIC<link linkend="std.Xlib">[Xlib]</link></entry><entry>XcmsCIELabQueryMaxLC<link linkend="std.Xlib">[Xlib]</link></entry><entry>XwcTextPropertyToTextList<link linkend="std.Xlib">[Xlib]</link></entry></row>
<row><entry>XIconifyWindow<link linkend="std.Xlib">[Xlib]</link></entry><entry>XcmsCIELabQueryMinL<link linkend="std.Xlib">[Xlib]</link></entry><entry></entry></row>
<row><entry>XIfEvent<link linkend="std.Xlib">[Xlib]</link></entry><entry>XcmsCIELabToCIEXYZ<link linkend="std.Xlib">[Xlib]</link></entry><entry></entry></row>
</tbody>
</tgroup>
</table>
</sect1>
<sect1 id=app-libXext>
<title>libXext</title>
<para>
</para>
<para>
The behavior of the interfaces in this library is specified by the following Standards.<simplelist columns=1>
<member>
<xref linkend="std.LSB"> [LSB]
</member>
<member>
<xref linkend="std.X.dbe"> [X-dbe]
</member>
<member>
<xref linkend="std.X.DPMS"> [X-DPMS]
</member>
<member>
<xref linkend="std.X.evi"> [X-evi]
</member>
<member>
<xref linkend="std.X.security"> [X-security]
</member>
<member>
<xref linkend="std.X.shape"> [X-shape]
</member>
<member>
<xref linkend="std.X.shm"> [X-shm]
</member>
<member>
<xref linkend="std.X.sync"> [X-sync]
</member>
</simplelist>
</para>
<table>
<title>libXext Function Interfaces</title>
<tgroup cols=3>
<tbody>
<row><entry>DPMSCapable<link linkend="std.X.DPMS">[X-DPMS]</link></entry><entry>XShmCreatePixmap<link linkend="std.X.shm">[X-shm]</link></entry><entry>XSyncValueEqual<link linkend="std.X.sync">[X-sync]</link></entry></row>
<row><entry>DPMSDisable<link linkend="std.X.DPMS">[X-DPMS]</link></entry><entry>XShmDetach<link linkend="std.X.shm">[X-shm]</link></entry><entry>XSyncValueGreaterOrEqual<link linkend="std.X.sync">[X-sync]</link></entry></row>
<row><entry>DPMSEnable<link linkend="std.X.DPMS">[X-DPMS]</link></entry><entry>XShmGetEventBase<link linkend="std.X.shm">[X-shm]</link></entry><entry>XSyncValueGreaterThan<link linkend="std.X.sync">[X-sync]</link></entry></row>
<row><entry>DPMSForceLevel<link linkend="std.X.DPMS">[X-DPMS]</link></entry><entry>XShmGetImage<link linkend="std.X.shm">[X-shm]</link></entry><entry>XSyncValueHigh32<link linkend="std.X.sync">[X-sync]</link></entry></row>
<row><entry>DPMSGetTimeouts<link linkend="std.X.DPMS">[X-DPMS]</link></entry><entry>XShmPixmapFormat<link linkend="std.X.shm">[X-shm]</link></entry><entry>XSyncValueIsNegative<link linkend="std.X.sync">[X-sync]</link></entry></row>
<row><entry>DPMSGetVersion<link linkend="std.X.DPMS">[X-DPMS]</link></entry><entry>XShmPutImage<link linkend="std.X.shm">[X-shm]</link></entry><entry>XSyncValueIsPositive<link linkend="std.X.sync">[X-sync]</link></entry></row>
<row><entry>DPMSInfo<link linkend="std.X.DPMS">[X-DPMS]</link></entry><entry>XShmQueryExtension<link linkend="std.X.shm">[X-shm]</link></entry><entry>XSyncValueIsZero<link linkend="std.X.sync">[X-sync]</link></entry></row>
<row><entry>DPMSQueryExtension<link linkend="std.X.DPMS">[X-DPMS]</link></entry><entry>XShmQueryVersion<link linkend="std.X.shm">[X-shm]</link></entry><entry>XSyncValueLessOrEqual<link linkend="std.X.sync">[X-sync]</link></entry></row>
<row><entry>DPMSSetTimeouts<link linkend="std.X.DPMS">[X-DPMS]</link></entry><entry>XSyncAwait<link linkend="std.X.sync">[X-sync]</link></entry><entry>XSyncValueLessThan<link linkend="std.X.sync">[X-sync]</link></entry></row>
<row><entry>XMissingExtension<link linkend="std.LSB">[LSB]</link></entry><entry>XSyncChangeAlarm<link linkend="std.X.sync">[X-sync]</link></entry><entry>XSyncValueLow32<link linkend="std.X.sync">[X-sync]</link></entry></row>
<row><entry>XSecurityAllocXauth<link linkend="std.X.security">[X-security]</link></entry><entry>XSyncChangeCounter<link linkend="std.X.sync">[X-sync]</link></entry><entry>XSyncValueSubtract<link linkend="std.X.sync">[X-sync]</link></entry></row>
<row><entry>XSecurityFreeXauth<link linkend="std.X.security">[X-security]</link></entry><entry>XSyncCreateAlarm<link linkend="std.X.sync">[X-sync]</link></entry><entry>XdbeAllocateBackBufferName<link linkend="std.X.dbe">[X-dbe]</link></entry></row>
<row><entry>XSecurityGenerateAuthorization<link linkend="std.X.security">[X-security]</link></entry><entry>XSyncCreateCounter<link linkend="std.X.sync">[X-sync]</link></entry><entry>XdbeBeginIdiom<link linkend="std.X.dbe">[X-dbe]</link></entry></row>
<row><entry>XSecurityQueryExtension<link linkend="std.X.security">[X-security]</link></entry><entry>XSyncDestroyAlarm<link linkend="std.X.sync">[X-sync]</link></entry><entry>XdbeDeallocateBackBufferName<link linkend="std.X.dbe">[X-dbe]</link></entry></row>
<row><entry>XSecurityRevokeAuthorization<link linkend="std.X.security">[X-security]</link></entry><entry>XSyncDestroyCounter<link linkend="std.X.sync">[X-sync]</link></entry><entry>XdbeEndIdiom<link linkend="std.X.dbe">[X-dbe]</link></entry></row>
<row><entry>XSetExtensionErrorHandler<link linkend="std.LSB">[LSB]</link></entry><entry>XSyncFreeSystemCounterList<link linkend="std.X.sync">[X-sync]</link></entry><entry>XdbeFreeVisualInfo<link linkend="std.X.dbe">[X-dbe]</link></entry></row>
<row><entry>XShapeCombineMask<link linkend="std.X.shape">[X-shape]</link></entry><entry>XSyncGetPriority<link linkend="std.X.sync">[X-sync]</link></entry><entry>XdbeGetBackBufferAttributes<link linkend="std.X.dbe">[X-dbe]</link></entry></row>
<row><entry>XShapeCombineRectangles<link linkend="std.X.shape">[X-shape]</link></entry><entry>XSyncInitialize<link linkend="std.X.sync">[X-sync]</link></entry><entry>XdbeGetVisualInfo<link linkend="std.X.dbe">[X-dbe]</link></entry></row>
<row><entry>XShapeCombineRegion<link linkend="std.X.shape">[X-shape]</link></entry><entry>XSyncIntToValue<link linkend="std.X.sync">[X-sync]</link></entry><entry>XdbeQueryExtension<link linkend="std.X.dbe">[X-dbe]</link></entry></row>
<row><entry>XShapeCombineShape<link linkend="std.X.shape">[X-shape]</link></entry><entry>XSyncIntsToValue<link linkend="std.X.sync">[X-sync]</link></entry><entry>XdbeSwapBuffers<link linkend="std.X.dbe">[X-dbe]</link></entry></row>
<row><entry>XShapeGetRectangles<link linkend="std.X.shape">[X-shape]</link></entry><entry>XSyncListSystemCounters<link linkend="std.X.sync">[X-sync]</link></entry><entry>XeviGetVisualInfo<link linkend="std.X.evi">[X-evi]</link></entry></row>
<row><entry>XShapeInputSelected<link linkend="std.X.shape">[X-shape]</link></entry><entry>XSyncMaxValue<link linkend="std.X.sync">[X-sync]</link></entry><entry>XeviQueryExtension<link linkend="std.X.evi">[X-evi]</link></entry></row>
<row><entry>XShapeOffsetShape<link linkend="std.X.shape">[X-shape]</link></entry><entry>XSyncMinValue<link linkend="std.X.sync">[X-sync]</link></entry><entry>XeviQueryVersion<link linkend="std.X.evi">[X-evi]</link></entry></row>
<row><entry>XShapeQueryExtension<link linkend="std.X.shape">[X-shape]</link></entry><entry>XSyncQueryAlarm<link linkend="std.X.sync">[X-sync]</link></entry><entry>XextAddDisplay<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>XShapeQueryExtents<link linkend="std.X.shape">[X-shape]</link></entry><entry>XSyncQueryCounter<link linkend="std.X.sync">[X-sync]</link></entry><entry>XextCreateExtension<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>XShapeQueryVersion<link linkend="std.X.shape">[X-shape]</link></entry><entry>XSyncQueryExtension<link linkend="std.X.sync">[X-sync]</link></entry><entry>XextDestroyExtension<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>XShapeSelectInput<link linkend="std.X.shape">[X-shape]</link></entry><entry>XSyncSetCounter<link linkend="std.X.sync">[X-sync]</link></entry><entry>XextFindDisplay<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>XShmAttach<link linkend="std.X.shm">[X-shm]</link></entry><entry>XSyncSetPriority<link linkend="std.X.sync">[X-sync]</link></entry><entry>XextRemoveDisplay<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>XShmCreateImage<link linkend="std.X.shm">[X-shm]</link></entry><entry>XSyncValueAdd<link linkend="std.X.sync">[X-sync]</link></entry><entry></entry></row>
</tbody>
</tgroup>
</table>
</sect1>
<sect1 id=app-libXft>
<title>libXft</title>
<para>
</para>
<para>
The behavior of the interfaces in this library is specified by the following Standards.<simplelist columns=1>
<member>
<xref linkend="std.LSB"> [LSB]
</member>
</simplelist>
</para>
<table>
<title>libXft Function Interfaces</title>
<tgroup cols=3>
<tbody>
<row><entry>XftCharExists<link linkend="std.LSB">[LSB]</link></entry><entry>XftDrawSetClipRectangles<link linkend="std.LSB">[LSB]</link></entry><entry>XftGlyphFontSpecRender<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>XftCharFontSpecRender<link linkend="std.LSB">[LSB]</link></entry><entry>XftDrawSetSubwindowMode<link linkend="std.LSB">[LSB]</link></entry><entry>XftGlyphRender<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>XftCharIndex<link linkend="std.LSB">[LSB]</link></entry><entry>XftDrawSrcPicture<link linkend="std.LSB">[LSB]</link></entry><entry>XftGlyphSpecRender<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>XftCharSpecRender<link linkend="std.LSB">[LSB]</link></entry><entry>XftDrawString16<link linkend="std.LSB">[LSB]</link></entry><entry>XftInit<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>XftColorAllocName<link linkend="std.LSB">[LSB]</link></entry><entry>XftDrawString32<link linkend="std.LSB">[LSB]</link></entry><entry>XftInitFtLibrary<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>XftColorAllocValue<link linkend="std.LSB">[LSB]</link></entry><entry>XftDrawString8<link linkend="std.LSB">[LSB]</link></entry><entry>XftListFonts<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>XftColorFree<link linkend="std.LSB">[LSB]</link></entry><entry>XftDrawStringUtf16<link linkend="std.LSB">[LSB]</link></entry><entry>XftLockFace<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>XftDefaultHasRender<link linkend="std.LSB">[LSB]</link></entry><entry>XftDrawStringUtf8<link linkend="std.LSB">[LSB]</link></entry><entry>XftNameParse<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>XftDefaultSet<link linkend="std.LSB">[LSB]</link></entry><entry>XftDrawVisual<link linkend="std.LSB">[LSB]</link></entry><entry>XftTextExtents16<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>XftDefaultSubstitute<link linkend="std.LSB">[LSB]</link></entry><entry>XftFontCheckGlyph<link linkend="std.LSB">[LSB]</link></entry><entry>XftTextExtents32<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>XftDrawChange<link linkend="std.LSB">[LSB]</link></entry><entry>XftFontClose<link linkend="std.LSB">[LSB]</link></entry><entry>XftTextExtents8<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>XftDrawCharFontSpec<link linkend="std.LSB">[LSB]</link></entry><entry>XftFontCopy<link linkend="std.LSB">[LSB]</link></entry><entry>XftTextExtentsUtf16<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>XftDrawCharSpec<link linkend="std.LSB">[LSB]</link></entry><entry>XftFontInfoCreate<link linkend="std.LSB">[LSB]</link></entry><entry>XftTextExtentsUtf8<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>XftDrawColormap<link linkend="std.LSB">[LSB]</link></entry><entry>XftFontInfoDestroy<link linkend="std.LSB">[LSB]</link></entry><entry>XftTextRender16<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>XftDrawCreate<link linkend="std.LSB">[LSB]</link></entry><entry>XftFontInfoEqual<link linkend="std.LSB">[LSB]</link></entry><entry>XftTextRender16BE<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>XftDrawCreateAlpha<link linkend="std.LSB">[LSB]</link></entry><entry>XftFontInfoHash<link linkend="std.LSB">[LSB]</link></entry><entry>XftTextRender16LE<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>XftDrawCreateBitmap<link linkend="std.LSB">[LSB]</link></entry><entry>XftFontLoadGlyphs<link linkend="std.LSB">[LSB]</link></entry><entry>XftTextRender32<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>XftDrawDestroy<link linkend="std.LSB">[LSB]</link></entry><entry>XftFontMatch<link linkend="std.LSB">[LSB]</link></entry><entry>XftTextRender32BE<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>XftDrawDisplay<link linkend="std.LSB">[LSB]</link></entry><entry>XftFontOpen<link linkend="std.LSB">[LSB]</link></entry><entry>XftTextRender32LE<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>XftDrawDrawable<link linkend="std.LSB">[LSB]</link></entry><entry>XftFontOpenInfo<link linkend="std.LSB">[LSB]</link></entry><entry>XftTextRender8<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>XftDrawGlyphFontSpec<link linkend="std.LSB">[LSB]</link></entry><entry>XftFontOpenName<link linkend="std.LSB">[LSB]</link></entry><entry>XftTextRenderUtf16<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>XftDrawGlyphSpec<link linkend="std.LSB">[LSB]</link></entry><entry>XftFontOpenPattern<link linkend="std.LSB">[LSB]</link></entry><entry>XftTextRenderUtf8<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>XftDrawGlyphs<link linkend="std.LSB">[LSB]</link></entry><entry>XftFontOpenXlfd<link linkend="std.LSB">[LSB]</link></entry><entry>XftUnlockFace<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>XftDrawPicture<link linkend="std.LSB">[LSB]</link></entry><entry>XftFontUnloadGlyphs<link linkend="std.LSB">[LSB]</link></entry><entry>XftXlfdParse<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>XftDrawRect<link linkend="std.LSB">[LSB]</link></entry><entry>XftGetVersion<link linkend="std.LSB">[LSB]</link></entry><entry></entry></row>
<row><entry>XftDrawSetClip<link linkend="std.LSB">[LSB]</link></entry><entry>XftGlyphExtents<link linkend="std.LSB">[LSB]</link></entry><entry></entry></row>
</tbody>
</tgroup>
</table>
</sect1>
<sect1 id=app-libXi>
<title>libXi</title>
<para>
</para>
<para>
The behavior of the interfaces in this library is specified by the following Standards.<simplelist columns=1>
<member>
<xref linkend="std.XINPUT"> [XINPUT]
</member>
</simplelist>
</para>
<table>
<title>libXi Function Interfaces</title>
<tgroup cols=3>
<tbody>
<row><entry>XAllowDeviceEvents<link linkend="std.XINPUT">[XINPUT]</link></entry><entry>XGetDeviceButtonMapping<link linkend="std.XINPUT">[XINPUT]</link></entry><entry>XOpenDevice<link linkend="std.XINPUT">[XINPUT]</link></entry></row>
<row><entry>XChangeDeviceControl<link linkend="std.XINPUT">[XINPUT]</link></entry><entry>XGetDeviceControl<link linkend="std.XINPUT">[XINPUT]</link></entry><entry>XQueryDeviceState<link linkend="std.XINPUT">[XINPUT]</link></entry></row>
<row><entry>XChangeDeviceDontPropagateList<link linkend="std.XINPUT">[XINPUT]</link></entry><entry>XGetDeviceDontPropagateList<link linkend="std.XINPUT">[XINPUT]</link></entry><entry>XSelectExtensionEvent<link linkend="std.XINPUT">[XINPUT]</link></entry></row>
<row><entry>XChangeDeviceKeyMapping<link linkend="std.XINPUT">[XINPUT]</link></entry><entry>XGetDeviceFocus<link linkend="std.XINPUT">[XINPUT]</link></entry><entry>XSendExtensionEvent<link linkend="std.XINPUT">[XINPUT]</link></entry></row>
<row><entry>XChangeFeedbackControl<link linkend="std.XINPUT">[XINPUT]</link></entry><entry>XGetDeviceKeyMapping<link linkend="std.XINPUT">[XINPUT]</link></entry><entry>XSetDeviceButtonMapping<link linkend="std.XINPUT">[XINPUT]</link></entry></row>
<row><entry>XChangeKeyboardDevice<link linkend="std.XINPUT">[XINPUT]</link></entry><entry>XGetDeviceModifierMapping<link linkend="std.XINPUT">[XINPUT]</link></entry><entry>XSetDeviceFocus<link linkend="std.XINPUT">[XINPUT]</link></entry></row>
<row><entry>XChangePointerDevice<link linkend="std.XINPUT">[XINPUT]</link></entry><entry>XGetDeviceMotionEvents<link linkend="std.XINPUT">[XINPUT]</link></entry><entry>XSetDeviceMode<link linkend="std.XINPUT">[XINPUT]</link></entry></row>
<row><entry>XCloseDevice<link linkend="std.XINPUT">[XINPUT]</link></entry><entry>XGetExtensionVersion<link linkend="std.XINPUT">[XINPUT]</link></entry><entry>XSetDeviceModifierMapping<link linkend="std.XINPUT">[XINPUT]</link></entry></row>
<row><entry>XDeviceBell<link linkend="std.XINPUT">[XINPUT]</link></entry><entry>XGetFeedbackControl<link linkend="std.XINPUT">[XINPUT]</link></entry><entry>XSetDeviceValuators<link linkend="std.XINPUT">[XINPUT]</link></entry></row>
<row><entry>XFreeDeviceControl<link linkend="std.XINPUT">[XINPUT]</link></entry><entry>XGetSelectedExtensionEvents<link linkend="std.XINPUT">[XINPUT]</link></entry><entry>XUngrabDevice<link linkend="std.XINPUT">[XINPUT]</link></entry></row>
<row><entry>XFreeDeviceList<link linkend="std.XINPUT">[XINPUT]</link></entry><entry>XGrabDevice<link linkend="std.XINPUT">[XINPUT]</link></entry><entry>XUngrabDeviceButton<link linkend="std.XINPUT">[XINPUT]</link></entry></row>
<row><entry>XFreeDeviceMotionEvents<link linkend="std.XINPUT">[XINPUT]</link></entry><entry>XGrabDeviceButton<link linkend="std.XINPUT">[XINPUT]</link></entry><entry>XUngrabDeviceKey<link linkend="std.XINPUT">[XINPUT]</link></entry></row>
<row><entry>XFreeDeviceState<link linkend="std.XINPUT">[XINPUT]</link></entry><entry>XGrabDeviceKey<link linkend="std.XINPUT">[XINPUT]</link></entry><entry></entry></row>
<row><entry>XFreeFeedbackList<link linkend="std.XINPUT">[XINPUT]</link></entry><entry>XListInputDevices<link linkend="std.XINPUT">[XINPUT]</link></entry><entry></entry></row>
</tbody>
</tgroup>
</table>
</sect1>
<sect1 id=app-libXrender>
<title>libXrender</title>
<para>
</para>
<para>
The behavior of the interfaces in this library is specified by the following Standards.<simplelist columns=1>
<member>
<xref linkend="std.LSB"> [LSB]
</member>
</simplelist>
</para>
<table>
<title>libXrender Function Interfaces</title>
<tgroup cols=3>
<tbody>
<row><entry>XRenderAddGlyphs<link linkend="std.LSB">[LSB]</link></entry><entry>XRenderCreateAnimCursor<link linkend="std.LSB">[LSB]</link></entry><entry>XRenderFreePicture<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>XRenderAddTraps<link linkend="std.LSB">[LSB]</link></entry><entry>XRenderCreateConicalGradient<link linkend="std.LSB">[LSB]</link></entry><entry>XRenderParseColor<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>XRenderChangePicture<link linkend="std.LSB">[LSB]</link></entry><entry>XRenderCreateCursor<link linkend="std.LSB">[LSB]</link></entry><entry>XRenderQueryExtension<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>XRenderComposite<link linkend="std.LSB">[LSB]</link></entry><entry>XRenderCreateGlyphSet<link linkend="std.LSB">[LSB]</link></entry><entry>XRenderQueryFilters<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>XRenderCompositeDoublePoly<link linkend="std.LSB">[LSB]</link></entry><entry>XRenderCreateLinearGradient<link linkend="std.LSB">[LSB]</link></entry><entry>XRenderQueryFormats<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>XRenderCompositeString16<link linkend="std.LSB">[LSB]</link></entry><entry>XRenderCreatePicture<link linkend="std.LSB">[LSB]</link></entry><entry>XRenderQueryPictIndexValues<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>XRenderCompositeString32<link linkend="std.LSB">[LSB]</link></entry><entry>XRenderCreateRadialGradient<link linkend="std.LSB">[LSB]</link></entry><entry>XRenderQuerySubpixelOrder<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>XRenderCompositeString8<link linkend="std.LSB">[LSB]</link></entry><entry>XRenderCreateSolidFill<link linkend="std.LSB">[LSB]</link></entry><entry>XRenderQueryVersion<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>XRenderCompositeText16<link linkend="std.LSB">[LSB]</link></entry><entry>XRenderFillRectangle<link linkend="std.LSB">[LSB]</link></entry><entry>XRenderReferenceGlyphSet<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>XRenderCompositeText32<link linkend="std.LSB">[LSB]</link></entry><entry>XRenderFillRectangles<link linkend="std.LSB">[LSB]</link></entry><entry>XRenderSetPictureClipRectangles<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>XRenderCompositeText8<link linkend="std.LSB">[LSB]</link></entry><entry>XRenderFindFormat<link linkend="std.LSB">[LSB]</link></entry><entry>XRenderSetPictureClipRegion<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>XRenderCompositeTrapezoids<link linkend="std.LSB">[LSB]</link></entry><entry>XRenderFindStandardFormat<link linkend="std.LSB">[LSB]</link></entry><entry>XRenderSetPictureFilter<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>XRenderCompositeTriFan<link linkend="std.LSB">[LSB]</link></entry><entry>XRenderFindVisualFormat<link linkend="std.LSB">[LSB]</link></entry><entry>XRenderSetPictureTransform<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>XRenderCompositeTriStrip<link linkend="std.LSB">[LSB]</link></entry><entry>XRenderFreeGlyphSet<link linkend="std.LSB">[LSB]</link></entry><entry>XRenderSetSubpixelOrder<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>XRenderCompositeTriangles<link linkend="std.LSB">[LSB]</link></entry><entry>XRenderFreeGlyphs<link linkend="std.LSB">[LSB]</link></entry><entry></entry></row>
</tbody>
</tgroup>
</table>
</sect1>
<sect1 id=app-libXt>
<title>libXt</title>
<para>
</para>
<para>
The behavior of the interfaces in this library is specified by the following Standards.<simplelist columns=1>
<member>
<xref linkend="std.LSB"> [LSB]
</member>
<member>
<xref linkend="std.Xt"> [Xt]
</member>
</simplelist>
</para>
<table>
<title>libXt Function Interfaces</title>
<tgroup cols=3>
<tbody>
<row><entry>XtAddActions<link linkend="std.Xt">[Xt]</link></entry><entry>XtCvtStringToInitialState<link linkend="std.Xt">[Xt]</link></entry><entry>XtOwnSelectionIncremental<link linkend="std.Xt">[Xt]</link></entry></row>
<row><entry>XtAddCallback<link linkend="std.Xt">[Xt]</link></entry><entry>XtCvtStringToInt<link linkend="std.Xt">[Xt]</link></entry><entry>XtParent<link linkend="std.Xt">[Xt]</link></entry></row>
<row><entry>XtAddCallbacks<link linkend="std.Xt">[Xt]</link></entry><entry>XtCvtStringToPixel<link linkend="std.Xt">[Xt]</link></entry><entry>XtParseAcceleratorTable<link linkend="std.Xt">[Xt]</link></entry></row>
<row><entry>XtAddConverter<link linkend="std.Xt">[Xt]</link></entry><entry>XtCvtStringToRestartStyle<link linkend="std.Xt">[Xt]</link></entry><entry>XtParseTranslationTable<link linkend="std.Xt">[Xt]</link></entry></row>
<row><entry>XtAddEventHandler<link linkend="std.Xt">[Xt]</link></entry><entry>XtCvtStringToShort<link linkend="std.Xt">[Xt]</link></entry><entry>XtPeekEvent<link linkend="std.Xt">[Xt]</link></entry></row>
<row><entry>XtAddExposureToRegion<link linkend="std.Xt">[Xt]</link></entry><entry>XtCvtStringToTranslationTable<link linkend="std.Xt">[Xt]</link></entry><entry>XtPending<link linkend="std.Xt">[Xt]</link></entry></row>
<row><entry>XtAddGrab<link linkend="std.Xt">[Xt]</link></entry><entry>XtCvtStringToUnsignedChar<link linkend="std.Xt">[Xt]</link></entry><entry>XtPopdown<link linkend="std.Xt">[Xt]</link></entry></row>
<row><entry>XtAddInput<link linkend="std.Xt">[Xt]</link></entry><entry>XtCvtStringToVisual<link linkend="std.Xt">[Xt]</link></entry><entry>XtPopup<link linkend="std.Xt">[Xt]</link></entry></row>
<row><entry>XtAddRawEventHandler<link linkend="std.Xt">[Xt]</link></entry><entry>XtDatabase<link linkend="std.Xt">[Xt]</link></entry><entry>XtPopupSpringLoaded<link linkend="std.Xt">[Xt]</link></entry></row>
<row><entry>XtAddSignal<link linkend="std.Xt">[Xt]</link></entry><entry>XtDestroyApplicationContext<link linkend="std.Xt">[Xt]</link></entry><entry>XtProcessEvent<link linkend="std.Xt">[Xt]</link></entry></row>
<row><entry>XtAddTimeOut<link linkend="std.Xt">[Xt]</link></entry><entry>XtDestroyGC<link linkend="std.Xt">[Xt]</link></entry><entry>XtProcessLock<link linkend="std.Xt">[Xt]</link></entry></row>
<row><entry>XtAddWorkProc<link linkend="std.Xt">[Xt]</link></entry><entry>XtDestroyWidget<link linkend="std.Xt">[Xt]</link></entry><entry>XtProcessUnlock<link linkend="std.Xt">[Xt]</link></entry></row>
<row><entry>XtAllocateGC<link linkend="std.Xt">[Xt]</link></entry><entry>XtDirectConvert<link linkend="std.Xt">[Xt]</link></entry><entry>XtQueryGeometry<link linkend="std.Xt">[Xt]</link></entry></row>
<row><entry>XtAppAddActionHook<link linkend="std.Xt">[Xt]</link></entry><entry>XtDisownSelection<link linkend="std.Xt">[Xt]</link></entry><entry>XtRealizeWidget<link linkend="std.Xt">[Xt]</link></entry></row>
<row><entry>XtAppAddActions<link linkend="std.Xt">[Xt]</link></entry><entry>XtDispatchEvent<link linkend="std.Xt">[Xt]</link></entry><entry>XtRealloc<link linkend="std.Xt">[Xt]</link></entry></row>
<row><entry>XtAppAddBlockHook<link linkend="std.Xt">[Xt]</link></entry><entry>XtDispatchEventToWidget<link linkend="std.Xt">[Xt]</link></entry><entry>XtRegisterCaseConverter<link linkend="std.Xt">[Xt]</link></entry></row>
<row><entry>XtAppAddConverter<link linkend="std.Xt">[Xt]</link></entry><entry>XtDisplay<link linkend="std.Xt">[Xt]</link></entry><entry>XtRegisterDrawable<link linkend="std.Xt">[Xt]</link></entry></row>
<row><entry>XtAppAddInput<link linkend="std.Xt">[Xt]</link></entry><entry>XtDisplayInitialize<link linkend="std.Xt">[Xt]</link></entry><entry>XtRegisterExtensionSelector<link linkend="std.Xt">[Xt]</link></entry></row>
<row><entry>XtAppAddSignal<link linkend="std.Xt">[Xt]</link></entry><entry>XtDisplayOfObject<link linkend="std.Xt">[Xt]</link></entry><entry>XtRegisterGrabAction<link linkend="std.Xt">[Xt]</link></entry></row>
<row><entry>XtAppAddTimeOut<link linkend="std.Xt">[Xt]</link></entry><entry>XtDisplayStringConversionWarning<link linkend="std.Xt">[Xt]</link></entry><entry>XtReleaseGC<link linkend="std.Xt">[Xt]</link></entry></row>
<row><entry>XtAppAddWorkProc<link linkend="std.Xt">[Xt]</link></entry><entry>XtDisplayToApplicationContext<link linkend="std.Xt">[Xt]</link></entry><entry>XtReleasePropertyAtom<link linkend="std.Xt">[Xt]</link></entry></row>
<row><entry>XtAppCreateShell<link linkend="std.Xt">[Xt]</link></entry><entry>XtError<link linkend="std.Xt">[Xt]</link></entry><entry>XtRemoveActionHook<link linkend="std.Xt">[Xt]</link></entry></row>
<row><entry>XtAppError<link linkend="std.Xt">[Xt]</link></entry><entry>XtErrorMsg<link linkend="std.Xt">[Xt]</link></entry><entry>XtRemoveAllCallbacks<link linkend="std.Xt">[Xt]</link></entry></row>
<row><entry>XtAppErrorMsg<link linkend="std.Xt">[Xt]</link></entry><entry>XtFindFile<link linkend="std.Xt">[Xt]</link></entry><entry>XtRemoveBlockHook<link linkend="std.Xt">[Xt]</link></entry></row>
<row><entry>XtAppGetErrorDatabase<link linkend="std.Xt">[Xt]</link></entry><entry>XtFree<link linkend="std.Xt">[Xt]</link></entry><entry>XtRemoveCallback<link linkend="std.Xt">[Xt]</link></entry></row>
<row><entry>XtAppGetErrorDatabaseText<link linkend="std.Xt">[Xt]</link></entry><entry>XtGetActionKeysym<link linkend="std.Xt">[Xt]</link></entry><entry>XtRemoveCallbacks<link linkend="std.Xt">[Xt]</link></entry></row>
<row><entry>XtAppGetExitFlag<link linkend="std.Xt">[Xt]</link></entry><entry>XtGetActionList<link linkend="std.Xt">[Xt]</link></entry><entry>XtRemoveEventHandler<link linkend="std.Xt">[Xt]</link></entry></row>
<row><entry>XtAppGetSelectionTimeout<link linkend="std.Xt">[Xt]</link></entry><entry>XtGetApplicationNameAndClass<link linkend="std.Xt">[Xt]</link></entry><entry>XtRemoveEventTypeHandler<link linkend="std.Xt">[Xt]</link></entry></row>
<row><entry>XtAppInitialize<link linkend="std.Xt">[Xt]</link></entry><entry>XtGetApplicationResources<link linkend="std.Xt">[Xt]</link></entry><entry>XtRemoveGrab<link linkend="std.Xt">[Xt]</link></entry></row>
<row><entry>XtAppLock<link linkend="std.Xt">[Xt]</link></entry><entry>XtGetClassExtension<link linkend="std.Xt">[Xt]</link></entry><entry>XtRemoveInput<link linkend="std.Xt">[Xt]</link></entry></row>
<row><entry>XtAppMainLoop<link linkend="std.Xt">[Xt]</link></entry><entry>XtGetConstraintResourceList<link linkend="std.Xt">[Xt]</link></entry><entry>XtRemoveRawEventHandler<link linkend="std.Xt">[Xt]</link></entry></row>
<row><entry>XtAppNextEvent<link linkend="std.Xt">[Xt]</link></entry><entry>XtGetDisplays<link linkend="std.Xt">[Xt]</link></entry><entry>XtRemoveSignal<link linkend="std.Xt">[Xt]</link></entry></row>
<row><entry>XtAppPeekEvent<link linkend="std.Xt">[Xt]</link></entry><entry>XtGetErrorDatabase<link linkend="std.Xt">[Xt]</link></entry><entry>XtRemoveTimeOut<link linkend="std.Xt">[Xt]</link></entry></row>
<row><entry>XtAppPending<link linkend="std.Xt">[Xt]</link></entry><entry>XtGetErrorDatabaseText<link linkend="std.Xt">[Xt]</link></entry><entry>XtRemoveWorkProc<link linkend="std.Xt">[Xt]</link></entry></row>
<row><entry>XtAppProcessEvent<link linkend="std.Xt">[Xt]</link></entry><entry>XtGetGC<link linkend="std.Xt">[Xt]</link></entry><entry>XtReservePropertyAtom<link linkend="std.Xt">[Xt]</link></entry></row>
<row><entry>XtAppReleaseCacheRefs<link linkend="std.Xt">[Xt]</link></entry><entry>XtGetKeyboardFocusWidget<link linkend="std.Xt">[Xt]</link></entry><entry>XtResizeWidget<link linkend="std.Xt">[Xt]</link></entry></row>
<row><entry>XtAppSetErrorHandler<link linkend="std.Xt">[Xt]</link></entry><entry>XtGetKeysymTable<link linkend="std.Xt">[Xt]</link></entry><entry>XtResizeWindow<link linkend="std.Xt">[Xt]</link></entry></row>
<row><entry>XtAppSetErrorMsgHandler<link linkend="std.Xt">[Xt]</link></entry><entry>XtGetMultiClickTime<link linkend="std.Xt">[Xt]</link></entry><entry>XtResolvePathname<link linkend="std.Xt">[Xt]</link></entry></row>
<row><entry>XtAppSetExitFlag<link linkend="std.Xt">[Xt]</link></entry><entry>XtGetResourceList<link linkend="std.Xt">[Xt]</link></entry><entry>XtScreen<link linkend="std.Xt">[Xt]</link></entry></row>
<row><entry>XtAppSetFallbackResources<link linkend="std.Xt">[Xt]</link></entry><entry>XtGetSelectionParameters<link linkend="std.Xt">[Xt]</link></entry><entry>XtScreenDatabase<link linkend="std.Xt">[Xt]</link></entry></row>
<row><entry>XtAppSetSelectionTimeout<link linkend="std.Xt">[Xt]</link></entry><entry>XtGetSelectionRequest<link linkend="std.Xt">[Xt]</link></entry><entry>XtScreenOfObject<link linkend="std.Xt">[Xt]</link></entry></row>
<row><entry>XtAppSetTypeConverter<link linkend="std.Xt">[Xt]</link></entry><entry>XtGetSelectionTimeout<link linkend="std.Xt">[Xt]</link></entry><entry>XtSendSelectionRequest<link linkend="std.Xt">[Xt]</link></entry></row>
<row><entry>XtAppSetWarningHandler<link linkend="std.Xt">[Xt]</link></entry><entry>XtGetSelectionValue<link linkend="std.Xt">[Xt]</link></entry><entry>XtSessionGetToken<link linkend="std.Xt">[Xt]</link></entry></row>
<row><entry>XtAppSetWarningMsgHandler<link linkend="std.Xt">[Xt]</link></entry><entry>XtGetSelectionValueIncremental<link linkend="std.Xt">[Xt]</link></entry><entry>XtSessionReturnToken<link linkend="std.Xt">[Xt]</link></entry></row>
<row><entry>XtAppUnlock<link linkend="std.Xt">[Xt]</link></entry><entry>XtGetSelectionValues<link linkend="std.Xt">[Xt]</link></entry><entry>XtSetErrorHandler<link linkend="std.Xt">[Xt]</link></entry></row>
<row><entry>XtAppWarning<link linkend="std.Xt">[Xt]</link></entry><entry>XtGetSelectionValuesIncremental<link linkend="std.Xt">[Xt]</link></entry><entry>XtSetErrorMsgHandler<link linkend="std.Xt">[Xt]</link></entry></row>
<row><entry>XtAppWarningMsg<link linkend="std.Xt">[Xt]</link></entry><entry>XtGetSubresources<link linkend="std.Xt">[Xt]</link></entry><entry>XtSetEventDispatcher<link linkend="std.Xt">[Xt]</link></entry></row>
<row><entry>XtAugmentTranslations<link linkend="std.Xt">[Xt]</link></entry><entry>XtGetSubvalues<link linkend="std.Xt">[Xt]</link></entry><entry>XtSetKeyTranslator<link linkend="std.Xt">[Xt]</link></entry></row>
<row><entry>XtBuildEventMask<link linkend="std.Xt">[Xt]</link></entry><entry>XtGetValues<link linkend="std.Xt">[Xt]</link></entry><entry>XtSetKeyboardFocus<link linkend="std.Xt">[Xt]</link></entry></row>
<row><entry>XtCallAcceptFocus<link linkend="std.Xt">[Xt]</link></entry><entry>XtGrabButton<link linkend="std.Xt">[Xt]</link></entry><entry>XtSetLanguageProc<link linkend="std.Xt">[Xt]</link></entry></row>
<row><entry>XtCallActionProc<link linkend="std.Xt">[Xt]</link></entry><entry>XtGrabKey<link linkend="std.Xt">[Xt]</link></entry><entry>XtSetMappedWhenManaged<link linkend="std.Xt">[Xt]</link></entry></row>
<row><entry>XtCallCallbackList<link linkend="std.Xt">[Xt]</link></entry><entry>XtGrabKeyboard<link linkend="std.Xt">[Xt]</link></entry><entry>XtSetMultiClickTime<link linkend="std.Xt">[Xt]</link></entry></row>
<row><entry>XtCallCallbacks<link linkend="std.Xt">[Xt]</link></entry><entry>XtGrabPointer<link linkend="std.Xt">[Xt]</link></entry><entry>XtSetSelectionParameters<link linkend="std.Xt">[Xt]</link></entry></row>
<row><entry>XtCallConverter<link linkend="std.Xt">[Xt]</link></entry><entry>XtHasCallbacks<link linkend="std.Xt">[Xt]</link></entry><entry>XtSetSelectionTimeout<link linkend="std.Xt">[Xt]</link></entry></row>
<row><entry>XtCallbackExclusive<link linkend="std.Xt">[Xt]</link></entry><entry>XtHooksOfDisplay<link linkend="std.Xt">[Xt]</link></entry><entry>XtSetSensitive<link linkend="std.Xt">[Xt]</link></entry></row>
<row><entry>XtCallbackNone<link linkend="std.Xt">[Xt]</link></entry><entry>XtInitialize<link linkend="std.Xt">[Xt]</link></entry><entry>XtSetSubvalues<link linkend="std.Xt">[Xt]</link></entry></row>
<row><entry>XtCallbackNonexclusive<link linkend="std.Xt">[Xt]</link></entry><entry>XtInitializeWidgetClass<link linkend="std.Xt">[Xt]</link></entry><entry>XtSetTypeConverter<link linkend="std.Xt">[Xt]</link></entry></row>
<row><entry>XtCallbackPopdown<link linkend="std.Xt">[Xt]</link></entry><entry>XtInsertEventHandler<link linkend="std.Xt">[Xt]</link></entry><entry>XtSetValues<link linkend="std.Xt">[Xt]</link></entry></row>
<row><entry>XtCallbackReleaseCacheRef<link linkend="std.Xt">[Xt]</link></entry><entry>XtInsertEventTypeHandler<link linkend="std.Xt">[Xt]</link></entry><entry>XtSetWMColormapWindows<link linkend="std.Xt">[Xt]</link></entry></row>
<row><entry>XtCallbackReleaseCacheRefList<link linkend="std.Xt">[Xt]</link></entry><entry>XtInsertRawEventHandler<link linkend="std.Xt">[Xt]</link></entry><entry>XtSetWarningHandler<link linkend="std.Xt">[Xt]</link></entry></row>
<row><entry>XtCalloc<link linkend="std.Xt">[Xt]</link></entry><entry>XtInstallAccelerators<link linkend="std.Xt">[Xt]</link></entry><entry>XtSetWarningMsgHandler<link linkend="std.Xt">[Xt]</link></entry></row>
<row><entry>XtCancelSelectionRequest<link linkend="std.Xt">[Xt]</link></entry><entry>XtInstallAllAccelerators<link linkend="std.Xt">[Xt]</link></entry><entry>XtStringConversionWarning<link linkend="std.Xt">[Xt]</link></entry></row>
<row><entry>XtChangeManagedSet<link linkend="std.Xt">[Xt]</link></entry><entry>XtIsApplicationShell<link linkend="std.Xt">[Xt]</link></entry><entry>XtSuperclass<link linkend="std.Xt">[Xt]</link></entry></row>
<row><entry>XtClass<link linkend="std.Xt">[Xt]</link></entry><entry>XtIsComposite<link linkend="std.Xt">[Xt]</link></entry><entry>XtToolkitInitialize<link linkend="std.Xt">[Xt]</link></entry></row>
<row><entry>XtCloseDisplay<link linkend="std.Xt">[Xt]</link></entry><entry>XtIsConstraint<link linkend="std.Xt">[Xt]</link></entry><entry>XtToolkitThreadInitialize<link linkend="std.Xt">[Xt]</link></entry></row>
<row><entry>XtConfigureWidget<link linkend="std.Xt">[Xt]</link></entry><entry>XtIsManaged<link linkend="std.Xt">[Xt]</link></entry><entry>XtTranslateCoords<link linkend="std.Xt">[Xt]</link></entry></row>
<row><entry>XtConvert<link linkend="std.Xt">[Xt]</link></entry><entry>XtIsObject<link linkend="std.Xt">[Xt]</link></entry><entry>XtTranslateKey<link linkend="std.Xt">[Xt]</link></entry></row>
<row><entry>XtConvertAndStore<link linkend="std.Xt">[Xt]</link></entry><entry>XtIsOverrideShell<link linkend="std.Xt">[Xt]</link></entry><entry>XtTranslateKeycode<link linkend="std.Xt">[Xt]</link></entry></row>
<row><entry>XtConvertCase<link linkend="std.Xt">[Xt]</link></entry><entry>XtIsRealized<link linkend="std.Xt">[Xt]</link></entry><entry>XtUngrabButton<link linkend="std.Xt">[Xt]</link></entry></row>
<row><entry>XtCreateApplicationContext<link linkend="std.Xt">[Xt]</link></entry><entry>XtIsRectObj<link linkend="std.Xt">[Xt]</link></entry><entry>XtUngrabKey<link linkend="std.Xt">[Xt]</link></entry></row>
<row><entry>XtCreateApplicationShell<link linkend="std.Xt">[Xt]</link></entry><entry>XtIsSensitive<link linkend="std.Xt">[Xt]</link></entry><entry>XtUngrabKeyboard<link linkend="std.Xt">[Xt]</link></entry></row>
<row><entry>XtCreateManagedWidget<link linkend="std.Xt">[Xt]</link></entry><entry>XtIsSessionShell<link linkend="std.Xt">[Xt]</link></entry><entry>XtUngrabPointer<link linkend="std.Xt">[Xt]</link></entry></row>
<row><entry>XtCreatePopupShell<link linkend="std.Xt">[Xt]</link></entry><entry>XtIsShell<link linkend="std.Xt">[Xt]</link></entry><entry>XtUninstallTranslations<link linkend="std.Xt">[Xt]</link></entry></row>
<row><entry>XtCreateSelectionRequest<link linkend="std.Xt">[Xt]</link></entry><entry>XtIsSubclass<link linkend="std.Xt">[Xt]</link></entry><entry>XtUnmanageChild<link linkend="std.Xt">[Xt]</link></entry></row>
<row><entry>XtCreateWidget<link linkend="std.Xt">[Xt]</link></entry><entry>XtIsTopLevelShell<link linkend="std.Xt">[Xt]</link></entry><entry>XtUnmanageChildren<link linkend="std.Xt">[Xt]</link></entry></row>
<row><entry>XtCreateWindow<link linkend="std.Xt">[Xt]</link></entry><entry>XtIsTransientShell<link linkend="std.Xt">[Xt]</link></entry><entry>XtUnmapWidget<link linkend="std.Xt">[Xt]</link></entry></row>
<row><entry>XtCvtColorToPixel<link linkend="std.Xt">[Xt]</link></entry><entry>XtIsVendorShell<link linkend="std.Xt">[Xt]</link></entry><entry>XtUnrealizeWidget<link linkend="std.Xt">[Xt]</link></entry></row>
<row><entry>XtCvtIntToBool<link linkend="std.Xt">[Xt]</link></entry><entry>XtIsWMShell<link linkend="std.Xt">[Xt]</link></entry><entry>XtUnregisterDrawable<link linkend="std.Xt">[Xt]</link></entry></row>
<row><entry>XtCvtIntToBoolean<link linkend="std.Xt">[Xt]</link></entry><entry>XtIsWidget<link linkend="std.Xt">[Xt]</link></entry><entry>XtVaAppCreateShell<link linkend="std.Xt">[Xt]</link></entry></row>
<row><entry>XtCvtIntToColor<link linkend="std.Xt">[Xt]</link></entry><entry>XtKeysymToKeycodeList<link linkend="std.Xt">[Xt]</link></entry><entry>XtVaAppInitialize<link linkend="std.Xt">[Xt]</link></entry></row>
<row><entry>XtCvtIntToFloat<link linkend="std.Xt">[Xt]</link></entry><entry>XtLastEventProcessed<link linkend="std.Xt">[Xt]</link></entry><entry>XtVaCreateArgsList<link linkend="std.Xt">[Xt]</link></entry></row>
<row><entry>XtCvtIntToFont<link linkend="std.Xt">[Xt]</link></entry><entry>XtLastTimestampProcessed<link linkend="std.Xt">[Xt]</link></entry><entry>XtVaCreateManagedWidget<link linkend="std.Xt">[Xt]</link></entry></row>
<row><entry>XtCvtIntToPixel<link linkend="std.Xt">[Xt]</link></entry><entry>XtMainLoop<link linkend="std.Xt">[Xt]</link></entry><entry>XtVaCreatePopupShell<link linkend="std.Xt">[Xt]</link></entry></row>
<row><entry>XtCvtIntToPixmap<link linkend="std.Xt">[Xt]</link></entry><entry>XtMakeGeometryRequest<link linkend="std.Xt">[Xt]</link></entry><entry>XtVaCreateWidget<link linkend="std.Xt">[Xt]</link></entry></row>
<row><entry>XtCvtIntToShort<link linkend="std.Xt">[Xt]</link></entry><entry>XtMakeResizeRequest<link linkend="std.Xt">[Xt]</link></entry><entry>XtVaGetApplicationResources<link linkend="std.Xt">[Xt]</link></entry></row>
<row><entry>XtCvtIntToUnsignedChar<link linkend="std.Xt">[Xt]</link></entry><entry>XtMalloc<link linkend="std.Xt">[Xt]</link></entry><entry>XtVaGetSubresources<link linkend="std.Xt">[Xt]</link></entry></row>
<row><entry>XtCvtStringToAcceleratorTable<link linkend="std.Xt">[Xt]</link></entry><entry>XtManageChild<link linkend="std.Xt">[Xt]</link></entry><entry>XtVaGetSubvalues<link linkend="std.Xt">[Xt]</link></entry></row>
<row><entry>XtCvtStringToAtom<link linkend="std.Xt">[Xt]</link></entry><entry>XtManageChildren<link linkend="std.Xt">[Xt]</link></entry><entry>XtVaGetValues<link linkend="std.Xt">[Xt]</link></entry></row>
<row><entry>XtCvtStringToBool<link linkend="std.Xt">[Xt]</link></entry><entry>XtMapWidget<link linkend="std.Xt">[Xt]</link></entry><entry>XtVaOpenApplication<link linkend="std.Xt">[Xt]</link></entry></row>
<row><entry>XtCvtStringToBoolean<link linkend="std.Xt">[Xt]</link></entry><entry>XtMenuPopupAction<link linkend="std.Xt">[Xt]</link></entry><entry>XtVaSetSubvalues<link linkend="std.Xt">[Xt]</link></entry></row>
<row><entry>XtCvtStringToCommandArgArray<link linkend="std.Xt">[Xt]</link></entry><entry>XtMergeArgLists<link linkend="std.Xt">[Xt]</link></entry><entry>XtVaSetValues<link linkend="std.Xt">[Xt]</link></entry></row>
<row><entry>XtCvtStringToCursor<link linkend="std.Xt">[Xt]</link></entry><entry>XtMoveWidget<link linkend="std.Xt">[Xt]</link></entry><entry>XtWarning<link linkend="std.Xt">[Xt]</link></entry></row>
<row><entry>XtCvtStringToDimension<link linkend="std.Xt">[Xt]</link></entry><entry>XtName<link linkend="std.Xt">[Xt]</link></entry><entry>XtWarningMsg<link linkend="std.Xt">[Xt]</link></entry></row>
<row><entry>XtCvtStringToDirectoryString<link linkend="std.Xt">[Xt]</link></entry><entry>XtNameToWidget<link linkend="std.Xt">[Xt]</link></entry><entry>XtWidgetToApplicationContext<link linkend="std.Xt">[Xt]</link></entry></row>
<row><entry>XtCvtStringToDisplay<link linkend="std.Xt">[Xt]</link></entry><entry>XtNewString<link linkend="std.Xt">[Xt]</link></entry><entry>XtWindow<link linkend="std.Xt">[Xt]</link></entry></row>
<row><entry>XtCvtStringToFile<link linkend="std.Xt">[Xt]</link></entry><entry>XtNextEvent<link linkend="std.Xt">[Xt]</link></entry><entry>XtWindowOfObject<link linkend="std.Xt">[Xt]</link></entry></row>
<row><entry>XtCvtStringToFloat<link linkend="std.Xt">[Xt]</link></entry><entry>XtNoticeSignal<link linkend="std.Xt">[Xt]</link></entry><entry>XtWindowToWidget<link linkend="std.Xt">[Xt]</link></entry></row>
<row><entry>XtCvtStringToFont<link linkend="std.Xt">[Xt]</link></entry><entry>XtOpenApplication<link linkend="std.Xt">[Xt]</link></entry><entry>_XtCheckSubclassFlag<link linkend="std.Xt">[Xt]</link></entry></row>
<row><entry>XtCvtStringToFontSet<link linkend="std.Xt">[Xt]</link></entry><entry>XtOpenDisplay<link linkend="std.Xt">[Xt]</link></entry><entry>_XtCopyFromArg<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>XtCvtStringToFontStruct<link linkend="std.Xt">[Xt]</link></entry><entry>XtOverrideTranslations<link linkend="std.Xt">[Xt]</link></entry><entry>_XtInherit<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>XtCvtStringToGravity<link linkend="std.Xt">[Xt]</link></entry><entry>XtOwnSelection<link linkend="std.Xt">[Xt]</link></entry><entry>_XtIsSubclassOf<link linkend="std.LSB">[LSB]</link></entry></row>
</tbody>
</tgroup>
</table>
<table>
<title>libXt Data Interfaces</title>
<tgroup cols=3>
<tbody>
<row><entry>XtCXtToolkitError<link linkend="std.Xt">[Xt]</link></entry><entry>constraintWidgetClass<link linkend="std.Xt">[Xt]</link></entry><entry>shellWidgetClass<link linkend="std.Xt">[Xt]</link></entry></row>
<row><entry>XtShellStrings<link linkend="std.Xt">[Xt]</link></entry><entry>coreWidgetClass<link linkend="std.Xt">[Xt]</link></entry><entry>topLevelShellClassRec<link linkend="std.Xt">[Xt]</link></entry></row>
<row><entry>XtStrings<link linkend="std.Xt">[Xt]</link></entry><entry>objectClass<link linkend="std.Xt">[Xt]</link></entry><entry>topLevelShellWidgetClass<link linkend="std.Xt">[Xt]</link></entry></row>
<row><entry>_XtInheritTranslations<link linkend="std.LSB">[LSB]</link></entry><entry>objectClassRec<link linkend="std.Xt">[Xt]</link></entry><entry>transientShellClassRec<link linkend="std.Xt">[Xt]</link></entry></row>
<row><entry>applicationShellClassRec<link linkend="std.Xt">[Xt]</link></entry><entry>overrideShellClassRec<link linkend="std.Xt">[Xt]</link></entry><entry>transientShellWidgetClass<link linkend="std.Xt">[Xt]</link></entry></row>
<row><entry>applicationShellWidgetClass<link linkend="std.Xt">[Xt]</link></entry><entry>overrideShellWidgetClass<link linkend="std.Xt">[Xt]</link></entry><entry>widgetClass<link linkend="std.Xt">[Xt]</link></entry></row>
<row><entry>colorConvertArgs<link linkend="std.Xt">[Xt]</link></entry><entry>rectObjClass<link linkend="std.Xt">[Xt]</link></entry><entry>widgetClassRec<link linkend="std.Xt">[Xt]</link></entry></row>
<row><entry>compositeClassRec<link linkend="std.Xt">[Xt]</link></entry><entry>rectObjClassRec<link linkend="std.Xt">[Xt]</link></entry><entry>wmShellClassRec<link linkend="std.Xt">[Xt]</link></entry></row>
<row><entry>compositeWidgetClass<link linkend="std.Xt">[Xt]</link></entry><entry>sessionShellClassRec<link linkend="std.Xt">[Xt]</link></entry><entry>wmShellWidgetClass<link linkend="std.Xt">[Xt]</link></entry></row>
<row><entry>constraintClassRec<link linkend="std.Xt">[Xt]</link></entry><entry>sessionShellWidgetClass<link linkend="std.Xt">[Xt]</link></entry><entry></entry></row>
</tbody>
</tgroup>
</table>
</sect1>
<sect1 id=app-libXtst>
<title>libXtst</title>
<para>
</para>
<para>
The behavior of the interfaces in this library is specified by the following Standards.<simplelist columns=1>
<member>
<xref linkend="std.X.test"> [X-test]
</member>
</simplelist>
</para>
<table>
<title>libXtst Function Interfaces</title>
<tgroup cols=3>
<tbody>
<row><entry>XTestCompareCurrentCursorWithWindow<link linkend="std.X.test">[X-test]</link></entry><entry>XTestFakeDeviceKeyEvent<link linkend="std.X.test">[X-test]</link></entry><entry>XTestFakeRelativeMotionEvent<link linkend="std.X.test">[X-test]</link></entry></row>
<row><entry>XTestCompareCursorWithWindow<link linkend="std.X.test">[X-test]</link></entry><entry>XTestFakeDeviceMotionEvent<link linkend="std.X.test">[X-test]</link></entry><entry>XTestGrabControl<link linkend="std.X.test">[X-test]</link></entry></row>
<row><entry>XTestDiscard<link linkend="std.X.test">[X-test]</link></entry><entry>XTestFakeKeyEvent<link linkend="std.X.test">[X-test]</link></entry><entry>XTestQueryExtension<link linkend="std.X.test">[X-test]</link></entry></row>
<row><entry>XTestFakeButtonEvent<link linkend="std.X.test">[X-test]</link></entry><entry>XTestFakeMotionEvent<link linkend="std.X.test">[X-test]</link></entry><entry>XTestSetGContextOfGC<link linkend="std.X.test">[X-test]</link></entry></row>
<row><entry>XTestFakeDeviceButtonEvent<link linkend="std.X.test">[X-test]</link></entry><entry>XTestFakeProximityEvent<link linkend="std.X.test">[X-test]</link></entry><entry>XTestSetVisualIDOfVisual<link linkend="std.X.test">[X-test]</link></entry></row>
</tbody>
</tgroup>
</table>
</sect1>
<sect1 id=app-libcairo>
<title>libcairo</title>
<para>
</para>
<para>
The behavior of the interfaces in this library is specified by the following Standards.<simplelist columns=1>
<member>
<xref linkend="std.Cairo"> [Cairo 1.12.4]
</member>
<member>
<xref linkend="std.LSB"> [LSB]
</member>
</simplelist>
</para>
<table>
<title>libcairo Function Interfaces</title>
<tgroup cols=3>
<tbody>
<row><entry>cairo_append_path<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry><entry>cairo_mesh_pattern_get_corner_color_rgba<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry><entry>cairo_script_set_mode<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry></row>
<row><entry>cairo_arc<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry><entry>cairo_mesh_pattern_get_patch_count<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry><entry>cairo_script_surface_create<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry></row>
<row><entry>cairo_arc_negative<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry><entry>cairo_mesh_pattern_get_path<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry><entry>cairo_script_surface_create_for_target<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry></row>
<row><entry>cairo_clip<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry><entry>cairo_mesh_pattern_line_to<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry><entry>cairo_script_write_comment<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry></row>
<row><entry>cairo_clip_preserve<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry><entry>cairo_mesh_pattern_move_to<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry><entry>cairo_select_font_face<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry></row>
<row><entry>cairo_close_path<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry><entry>cairo_mesh_pattern_set_control_point<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry><entry>cairo_set_antialias<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry></row>
<row><entry>cairo_copy_page<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry><entry>cairo_mesh_pattern_set_corner_color_rgb<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry><entry>cairo_set_dash<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry></row>
<row><entry>cairo_copy_path<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry><entry>cairo_mesh_pattern_set_corner_color_rgba<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry><entry>cairo_set_fill_rule<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry></row>
<row><entry>cairo_copy_path_flat<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry><entry>cairo_move_to<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry><entry>cairo_set_font_face<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry></row>
<row><entry>cairo_create<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry><entry>cairo_new_path<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry><entry>cairo_set_font_matrix<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry></row>
<row><entry>cairo_curve_to<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry><entry>cairo_new_sub_path<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry><entry>cairo_set_font_options<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry></row>
<row><entry>cairo_destroy<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry><entry>cairo_paint<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry><entry>cairo_set_font_size<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry></row>
<row><entry>cairo_device_acquire<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry><entry>cairo_paint_with_alpha<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry><entry>cairo_set_line_cap<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry></row>
<row><entry>cairo_device_destroy<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry><entry>cairo_path_destroy<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry><entry>cairo_set_line_join<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry></row>
<row><entry>cairo_device_finish<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry><entry>cairo_path_extents<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry><entry>cairo_set_line_width<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry></row>
<row><entry>cairo_device_flush<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry><entry>cairo_pattern_add_color_stop_rgb<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry><entry>cairo_set_matrix<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry></row>
<row><entry>cairo_device_get_reference_count<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry><entry>cairo_pattern_add_color_stop_rgba<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry><entry>cairo_set_miter_limit<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry></row>
<row><entry>cairo_device_get_type<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry><entry>cairo_pattern_create_for_surface<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry><entry>cairo_set_operator<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry></row>
<row><entry>cairo_device_get_user_data<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry><entry>cairo_pattern_create_linear<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry><entry>cairo_set_scaled_font<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry></row>
<row><entry>cairo_device_observer_elapsed<link linkend="std.LSB">[LSB]</link></entry><entry>cairo_pattern_create_mesh<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry><entry>cairo_set_source<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry></row>
<row><entry>cairo_device_observer_fill_elapsed<link linkend="std.LSB">[LSB]</link></entry><entry>cairo_pattern_create_radial<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry><entry>cairo_set_source_rgb<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry></row>
<row><entry>cairo_device_observer_glyphs_elapsed<link linkend="std.LSB">[LSB]</link></entry><entry>cairo_pattern_create_raster_source<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry><entry>cairo_set_source_rgba<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry></row>
<row><entry>cairo_device_observer_mask_elapsed<link linkend="std.LSB">[LSB]</link></entry><entry>cairo_pattern_create_rgb<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry><entry>cairo_set_source_surface<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry></row>
<row><entry>cairo_device_observer_paint_elapsed<link linkend="std.LSB">[LSB]</link></entry><entry>cairo_pattern_create_rgba<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry><entry>cairo_set_tolerance<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry></row>
<row><entry>cairo_device_observer_print<link linkend="std.LSB">[LSB]</link></entry><entry>cairo_pattern_destroy<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry><entry>cairo_show_glyphs<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry></row>
<row><entry>cairo_device_observer_stroke_elapsed<link linkend="std.LSB">[LSB]</link></entry><entry>cairo_pattern_get_extend<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry><entry>cairo_show_page<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry></row>
<row><entry>cairo_device_reference<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry><entry>cairo_pattern_get_filter<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry><entry>cairo_show_text<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry></row>
<row><entry>cairo_device_release<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry><entry>cairo_pattern_get_matrix<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry><entry>cairo_show_text_glyphs<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry></row>
<row><entry>cairo_device_set_user_data<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry><entry>cairo_pattern_get_type<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry><entry>cairo_status<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry></row>
<row><entry>cairo_device_status<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry><entry>cairo_pattern_reference<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry><entry>cairo_status_to_string<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry></row>
<row><entry>cairo_device_to_user<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry><entry>cairo_pattern_set_extend<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry><entry>cairo_stroke<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry></row>
<row><entry>cairo_device_to_user_distance<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry><entry>cairo_pattern_set_filter<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry><entry>cairo_stroke_extents<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry></row>
<row><entry>cairo_fill<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry><entry>cairo_pattern_set_matrix<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry><entry>cairo_stroke_preserve<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry></row>
<row><entry>cairo_fill_extents<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry><entry>cairo_pattern_status<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry><entry>cairo_surface_copy_page<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry></row>
<row><entry>cairo_fill_preserve<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry><entry>cairo_pdf_get_versions<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry><entry>cairo_surface_create_for_rectangle<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry></row>
<row><entry>cairo_font_extents<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry><entry>cairo_pdf_surface_create<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry><entry>cairo_surface_create_observer<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>cairo_font_face_destroy<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry><entry>cairo_pdf_surface_create_for_stream<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry><entry>cairo_surface_create_similar<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry></row>
<row><entry>cairo_font_face_get_type<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry><entry>cairo_pdf_surface_restrict_to_version<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry><entry>cairo_surface_create_similar_image<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry></row>
<row><entry>cairo_font_face_get_user_data<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry><entry>cairo_pdf_surface_set_size<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry><entry>cairo_surface_destroy<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry></row>
<row><entry>cairo_font_face_reference<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry><entry>cairo_pdf_version_to_string<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry><entry>cairo_surface_finish<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry></row>
<row><entry>cairo_font_face_set_user_data<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry><entry>cairo_pop_group<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry><entry>cairo_surface_flush<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry></row>
<row><entry>cairo_font_face_status<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry><entry>cairo_pop_group_to_source<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry><entry>cairo_surface_get_content<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry></row>
<row><entry>cairo_font_options_copy<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry><entry>cairo_ps_get_levels<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry><entry>cairo_surface_get_device<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry></row>
<row><entry>cairo_font_options_create<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry><entry>cairo_ps_level_to_string<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry><entry>cairo_surface_get_device_offset<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry></row>
<row><entry>cairo_font_options_destroy<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry><entry>cairo_ps_surface_create<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry><entry>cairo_surface_get_fallback_resolution<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry></row>
<row><entry>cairo_font_options_equal<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry><entry>cairo_ps_surface_create_for_stream<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry><entry>cairo_surface_get_font_options<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry></row>
<row><entry>cairo_font_options_get_antialias<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry><entry>cairo_ps_surface_dsc_begin_page_setup<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry><entry>cairo_surface_get_mime_data<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry></row>
<row><entry>cairo_font_options_get_hint_metrics<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry><entry>cairo_ps_surface_dsc_begin_setup<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry><entry>cairo_surface_get_type<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry></row>
<row><entry>cairo_font_options_get_hint_style<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry><entry>cairo_ps_surface_dsc_comment<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry><entry>cairo_surface_get_user_data<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry></row>
<row><entry>cairo_font_options_get_subpixel_order<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry><entry>cairo_ps_surface_get_eps<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry><entry>cairo_surface_has_show_text_glyphs<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry></row>
<row><entry>cairo_font_options_hash<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry><entry>cairo_ps_surface_restrict_to_level<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry><entry>cairo_surface_map_to_image<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry></row>
<row><entry>cairo_font_options_merge<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry><entry>cairo_ps_surface_set_eps<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry><entry>cairo_surface_mark_dirty<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry></row>
<row><entry>cairo_font_options_set_antialias<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry><entry>cairo_ps_surface_set_size<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry><entry>cairo_surface_mark_dirty_rectangle<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry></row>
<row><entry>cairo_font_options_set_hint_metrics<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry><entry>cairo_push_group<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry><entry>cairo_surface_observer_add_fill_callback<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>cairo_font_options_set_hint_style<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry><entry>cairo_push_group_with_content<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry><entry>cairo_surface_observer_add_finish_callback<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>cairo_font_options_set_subpixel_order<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry><entry>cairo_raster_source_pattern_get_acquire<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry><entry>cairo_surface_observer_add_flush_callback<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>cairo_font_options_status<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry><entry>cairo_raster_source_pattern_get_callback_data<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry><entry>cairo_surface_observer_add_glyphs_callback<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>cairo_format_stride_for_width<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry><entry>cairo_raster_source_pattern_get_copy<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry><entry>cairo_surface_observer_add_mask_callback<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>cairo_ft_font_face_create_for_ft_face<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry><entry>cairo_raster_source_pattern_get_finish<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry><entry>cairo_surface_observer_add_paint_callback<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>cairo_ft_font_face_create_for_pattern<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry><entry>cairo_raster_source_pattern_get_snapshot<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry><entry>cairo_surface_observer_add_stroke_callback<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>cairo_ft_font_face_get_synthesize<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry><entry>cairo_raster_source_pattern_set_acquire<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry><entry>cairo_surface_observer_elapsed<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>cairo_ft_font_face_set_synthesize<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry><entry>cairo_raster_source_pattern_set_callback_data<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry><entry>cairo_surface_observer_print<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>cairo_ft_font_face_unset_synthesize<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry><entry>cairo_raster_source_pattern_set_copy<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry><entry>cairo_surface_reference<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry></row>
<row><entry>cairo_ft_font_options_substitute<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry><entry>cairo_raster_source_pattern_set_finish<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry><entry>cairo_surface_set_device_offset<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry></row>
<row><entry>cairo_ft_scaled_font_lock_face<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry><entry>cairo_raster_source_pattern_set_snapshot<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry><entry>cairo_surface_set_fallback_resolution<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry></row>
<row><entry>cairo_ft_scaled_font_unlock_face<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry><entry>cairo_recording_surface_create<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry><entry>cairo_surface_set_mime_data<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry></row>
<row><entry>cairo_get_antialias<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry><entry>cairo_recording_surface_get_extents<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry><entry>cairo_surface_set_user_data<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry></row>
<row><entry>cairo_get_current_point<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry><entry>cairo_recording_surface_ink_extents<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry><entry>cairo_surface_show_page<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry></row>
<row><entry>cairo_get_fill_rule<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry><entry>cairo_rectangle<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry><entry>cairo_surface_status<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry></row>
<row><entry>cairo_get_font_face<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry><entry>cairo_reference<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry><entry>cairo_surface_supports_mime_type<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry></row>
<row><entry>cairo_get_font_matrix<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry><entry>cairo_region_contains_point<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry><entry>cairo_surface_unmap_image<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry></row>
<row><entry>cairo_get_font_options<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry><entry>cairo_region_contains_rectangle<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry><entry>cairo_surface_write_to_png<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry></row>
<row><entry>cairo_get_group_target<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry><entry>cairo_region_copy<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry><entry>cairo_surface_write_to_png_stream<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry></row>
<row><entry>cairo_get_line_cap<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry><entry>cairo_region_create<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry><entry>cairo_svg_get_versions<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry></row>
<row><entry>cairo_get_line_join<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry><entry>cairo_region_create_rectangle<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry><entry>cairo_svg_surface_create<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry></row>
<row><entry>cairo_get_line_width<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry><entry>cairo_region_create_rectangles<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry><entry>cairo_svg_surface_create_for_stream<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry></row>
<row><entry>cairo_get_matrix<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry><entry>cairo_region_destroy<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry><entry>cairo_svg_surface_restrict_to_version<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry></row>
<row><entry>cairo_get_miter_limit<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry><entry>cairo_region_equal<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry><entry>cairo_svg_version_to_string<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry></row>
<row><entry>cairo_get_operator<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry><entry>cairo_region_get_extents<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry><entry>cairo_text_cluster_allocate<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry></row>
<row><entry>cairo_get_source<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry><entry>cairo_region_get_rectangle<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry><entry>cairo_text_cluster_free<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry></row>
<row><entry>cairo_get_target<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry><entry>cairo_region_intersect<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry><entry>cairo_text_extents<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry></row>
<row><entry>cairo_get_tolerance<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry><entry>cairo_region_intersect_rectangle<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry><entry>cairo_text_path<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry></row>
<row><entry>cairo_glyph_allocate<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry><entry>cairo_region_is_empty<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry><entry>cairo_toy_font_face_create<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry></row>
<row><entry>cairo_glyph_extents<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry><entry>cairo_region_num_rectangles<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry><entry>cairo_toy_font_face_get_family<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry></row>
<row><entry>cairo_glyph_free<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry><entry>cairo_region_reference<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry><entry>cairo_toy_font_face_get_slant<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry></row>
<row><entry>cairo_glyph_path<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry><entry>cairo_region_status<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry><entry>cairo_toy_font_face_get_weight<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry></row>
<row><entry>cairo_has_current_point<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry><entry>cairo_region_subtract<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry><entry>cairo_transform<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry></row>
<row><entry>cairo_identity_matrix<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry><entry>cairo_region_subtract_rectangle<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry><entry>cairo_translate<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry></row>
<row><entry>cairo_image_surface_create<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry><entry>cairo_region_translate<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry><entry>cairo_user_font_face_create<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry></row>
<row><entry>cairo_image_surface_create_for_data<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry><entry>cairo_region_union<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry><entry>cairo_user_font_face_get_init_func<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry></row>
<row><entry>cairo_image_surface_create_from_png<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry><entry>cairo_region_union_rectangle<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry><entry>cairo_user_font_face_get_render_glyph_func<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry></row>
<row><entry>cairo_image_surface_create_from_png_stream<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry><entry>cairo_region_xor<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry><entry>cairo_user_font_face_get_text_to_glyphs_func<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry></row>
<row><entry>cairo_image_surface_get_data<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry><entry>cairo_region_xor_rectangle<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry><entry>cairo_user_font_face_get_unicode_to_glyph_func<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry></row>
<row><entry>cairo_image_surface_get_format<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry><entry>cairo_rel_curve_to<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry><entry>cairo_user_font_face_set_init_func<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry></row>
<row><entry>cairo_image_surface_get_height<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry><entry>cairo_rel_line_to<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry><entry>cairo_user_font_face_set_render_glyph_func<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry></row>
<row><entry>cairo_image_surface_get_stride<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry><entry>cairo_rel_move_to<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry><entry>cairo_user_font_face_set_text_to_glyphs_func<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry></row>
<row><entry>cairo_image_surface_get_width<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry><entry>cairo_reset_clip<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry><entry>cairo_user_font_face_set_unicode_to_glyph_func<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry></row>
<row><entry>cairo_in_clip<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry><entry>cairo_restore<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry><entry>cairo_user_to_device<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry></row>
<row><entry>cairo_in_fill<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry><entry>cairo_rotate<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry><entry>cairo_user_to_device_distance<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry></row>
<row><entry>cairo_in_stroke<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry><entry>cairo_save<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry><entry>cairo_version<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry></row>
<row><entry>cairo_line_to<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry><entry>cairo_scale<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry><entry>cairo_version_string<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry></row>
<row><entry>cairo_mask<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry><entry>cairo_scaled_font_create<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry><entry>cairo_xcb_device_get_connection<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry></row>
<row><entry>cairo_mask_surface<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry><entry>cairo_scaled_font_destroy<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry><entry>cairo_xcb_surface_create<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry></row>
<row><entry>cairo_matrix_init<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry><entry>cairo_scaled_font_extents<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry><entry>cairo_xcb_surface_create_for_bitmap<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry></row>
<row><entry>cairo_matrix_init_identity<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry><entry>cairo_scaled_font_get_ctm<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry><entry>cairo_xcb_surface_set_drawable<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry></row>
<row><entry>cairo_matrix_init_rotate<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry><entry>cairo_scaled_font_get_font_face<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry><entry>cairo_xcb_surface_set_size<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry></row>
<row><entry>cairo_matrix_init_scale<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry><entry>cairo_scaled_font_get_font_matrix<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry><entry>cairo_xlib_surface_create<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry></row>
<row><entry>cairo_matrix_init_translate<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry><entry>cairo_scaled_font_get_font_options<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry><entry>cairo_xlib_surface_create_for_bitmap<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry></row>
<row><entry>cairo_matrix_invert<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry><entry>cairo_scaled_font_get_scale_matrix<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry><entry>cairo_xlib_surface_create_with_xrender_format<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry></row>
<row><entry>cairo_matrix_multiply<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry><entry>cairo_scaled_font_get_type<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry><entry>cairo_xlib_surface_get_depth<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry></row>
<row><entry>cairo_matrix_rotate<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry><entry>cairo_scaled_font_glyph_extents<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry><entry>cairo_xlib_surface_get_display<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry></row>
<row><entry>cairo_matrix_scale<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry><entry>cairo_scaled_font_reference<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry><entry>cairo_xlib_surface_get_drawable<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry></row>
<row><entry>cairo_matrix_transform_distance<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry><entry>cairo_scaled_font_status<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry><entry>cairo_xlib_surface_get_height<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry></row>
<row><entry>cairo_matrix_transform_point<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry><entry>cairo_scaled_font_text_extents<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry><entry>cairo_xlib_surface_get_screen<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry></row>
<row><entry>cairo_matrix_translate<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry><entry>cairo_scaled_font_text_to_glyphs<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry><entry>cairo_xlib_surface_get_visual<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry></row>
<row><entry>cairo_mesh_pattern_begin_patch<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry><entry>cairo_script_create<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry><entry>cairo_xlib_surface_get_width<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry></row>
<row><entry>cairo_mesh_pattern_curve_to<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry><entry>cairo_script_create_for_stream<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry><entry>cairo_xlib_surface_get_xrender_format<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry></row>
<row><entry>cairo_mesh_pattern_end_patch<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry><entry>cairo_script_from_recording_surface<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry><entry>cairo_xlib_surface_set_drawable<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry></row>
<row><entry>cairo_mesh_pattern_get_control_point<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry><entry>cairo_script_get_mode<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry><entry>cairo_xlib_surface_set_size<link linkend="std.Cairo">[Cairo 1.12.4]</link></entry></row>
</tbody>
</tgroup>
</table>
</sect1>
<sect1 id=app-libcairo-gobject>
<title>libcairo-gobject</title>
<para>
</para>
<para>
The behavior of the interfaces in this library is specified by the following Standards.<simplelist columns=1>
<member>
<xref linkend="std.Gobject"> [Gobject 2.32]
</member>
</simplelist>
</para>
<table>
<title>libcairo-gobject Function Interfaces</title>
<tgroup cols=3>
<tbody>
<row><entry>cairo_gobject_antialias_get_type<link linkend="std.Gobject">[Gobject 2.32]</link></entry><entry>cairo_gobject_font_type_get_type<link linkend="std.Gobject">[Gobject 2.32]</link></entry><entry>cairo_gobject_rectangle_get_type<link linkend="std.Gobject">[Gobject 2.32]</link></entry></row>
<row><entry>cairo_gobject_content_get_type<link linkend="std.Gobject">[Gobject 2.32]</link></entry><entry>cairo_gobject_font_weight_get_type<link linkend="std.Gobject">[Gobject 2.32]</link></entry><entry>cairo_gobject_rectangle_int_get_type<link linkend="std.Gobject">[Gobject 2.32]</link></entry></row>
<row><entry>cairo_gobject_context_get_type<link linkend="std.Gobject">[Gobject 2.32]</link></entry><entry>cairo_gobject_format_get_type<link linkend="std.Gobject">[Gobject 2.32]</link></entry><entry>cairo_gobject_region_get_type<link linkend="std.Gobject">[Gobject 2.32]</link></entry></row>
<row><entry>cairo_gobject_device_get_type<link linkend="std.Gobject">[Gobject 2.32]</link></entry><entry>cairo_gobject_hint_metrics_get_type<link linkend="std.Gobject">[Gobject 2.32]</link></entry><entry>cairo_gobject_region_overlap_get_type<link linkend="std.Gobject">[Gobject 2.32]</link></entry></row>
<row><entry>cairo_gobject_device_type_get_type<link linkend="std.Gobject">[Gobject 2.32]</link></entry><entry>cairo_gobject_hint_style_get_type<link linkend="std.Gobject">[Gobject 2.32]</link></entry><entry>cairo_gobject_scaled_font_get_type<link linkend="std.Gobject">[Gobject 2.32]</link></entry></row>
<row><entry>cairo_gobject_extend_get_type<link linkend="std.Gobject">[Gobject 2.32]</link></entry><entry>cairo_gobject_line_cap_get_type<link linkend="std.Gobject">[Gobject 2.32]</link></entry><entry>cairo_gobject_status_get_type<link linkend="std.Gobject">[Gobject 2.32]</link></entry></row>
<row><entry>cairo_gobject_fill_rule_get_type<link linkend="std.Gobject">[Gobject 2.32]</link></entry><entry>cairo_gobject_line_join_get_type<link linkend="std.Gobject">[Gobject 2.32]</link></entry><entry>cairo_gobject_subpixel_order_get_type<link linkend="std.Gobject">[Gobject 2.32]</link></entry></row>
<row><entry>cairo_gobject_filter_get_type<link linkend="std.Gobject">[Gobject 2.32]</link></entry><entry>cairo_gobject_operator_get_type<link linkend="std.Gobject">[Gobject 2.32]</link></entry><entry>cairo_gobject_surface_get_type<link linkend="std.Gobject">[Gobject 2.32]</link></entry></row>
<row><entry>cairo_gobject_font_face_get_type<link linkend="std.Gobject">[Gobject 2.32]</link></entry><entry>cairo_gobject_path_data_type_get_type<link linkend="std.Gobject">[Gobject 2.32]</link></entry><entry>cairo_gobject_surface_type_get_type<link linkend="std.Gobject">[Gobject 2.32]</link></entry></row>
<row><entry>cairo_gobject_font_options_get_type<link linkend="std.Gobject">[Gobject 2.32]</link></entry><entry>cairo_gobject_pattern_get_type<link linkend="std.Gobject">[Gobject 2.32]</link></entry><entry>cairo_gobject_text_cluster_flags_get_type<link linkend="std.Gobject">[Gobject 2.32]</link></entry></row>
<row><entry>cairo_gobject_font_slant_get_type<link linkend="std.Gobject">[Gobject 2.32]</link></entry><entry>cairo_gobject_pattern_type_get_type<link linkend="std.Gobject">[Gobject 2.32]</link></entry><entry></entry></row>
</tbody>
</tgroup>
</table>
</sect1>
<sect1 id=app-libcairo-script-interpreter>
<title>libcairo-script-interpreter</title>
<para>
</para>
<para>
The behavior of the interfaces in this library is specified by the following Standards.<simplelist columns=1>
<member>
<xref linkend="std.LSB"> [LSB]
</member>
</simplelist>
</para>
<table>
<title>libcairo-script-interpreter Function Interfaces</title>
<tgroup cols=3>
<tbody>
<row><entry>cairo_script_interpreter_create<link linkend="std.LSB">[LSB]</link></entry><entry>cairo_script_interpreter_finish<link linkend="std.LSB">[LSB]</link></entry><entry>cairo_script_interpreter_run<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>cairo_script_interpreter_destroy<link linkend="std.LSB">[LSB]</link></entry><entry>cairo_script_interpreter_get_line_number<link linkend="std.LSB">[LSB]</link></entry><entry>cairo_script_interpreter_translate_stream<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>cairo_script_interpreter_feed_stream<link linkend="std.LSB">[LSB]</link></entry><entry>cairo_script_interpreter_install_hooks<link linkend="std.LSB">[LSB]</link></entry><entry></entry></row>
<row><entry>cairo_script_interpreter_feed_string<link linkend="std.LSB">[LSB]</link></entry><entry>cairo_script_interpreter_reference<link linkend="std.LSB">[LSB]</link></entry><entry></entry></row>
</tbody>
</tgroup>
</table>
</sect1>
<sect1 id=app-libfontconfig>
<title>libfontconfig</title>
<para>
</para>
<para>
The behavior of the interfaces in this library is specified by the following Standards.<simplelist columns=1>
<member>
<xref linkend="std.fontconfig"> [fontconfig]
</member>
</simplelist>
</para>
<table>
<title>libfontconfig Function Interfaces</title>
<tgroup cols=3>
<tbody>
<row><entry>FcAtomicCreate<link linkend="std.fontconfig">[fontconfig]</link></entry><entry>FcFileScan<link linkend="std.fontconfig">[fontconfig]</link></entry><entry>FcPatternAddCharSet<link linkend="std.fontconfig">[fontconfig]</link></entry></row>
<row><entry>FcAtomicDeleteNew<link linkend="std.fontconfig">[fontconfig]</link></entry><entry>FcFini<link linkend="std.fontconfig">[fontconfig]</link></entry><entry>FcPatternAddDouble<link linkend="std.fontconfig">[fontconfig]</link></entry></row>
<row><entry>FcAtomicDestroy<link linkend="std.fontconfig">[fontconfig]</link></entry><entry>FcFontList<link linkend="std.fontconfig">[fontconfig]</link></entry><entry>FcPatternAddFTFace<link linkend="std.fontconfig">[fontconfig]</link></entry></row>
<row><entry>FcAtomicLock<link linkend="std.fontconfig">[fontconfig]</link></entry><entry>FcFontMatch<link linkend="std.fontconfig">[fontconfig]</link></entry><entry>FcPatternAddInteger<link linkend="std.fontconfig">[fontconfig]</link></entry></row>
<row><entry>FcAtomicNewFile<link linkend="std.fontconfig">[fontconfig]</link></entry><entry>FcFontRenderPrepare<link linkend="std.fontconfig">[fontconfig]</link></entry><entry>FcPatternAddLangSet<link linkend="std.fontconfig">[fontconfig]</link></entry></row>
<row><entry>FcAtomicOrigFile<link linkend="std.fontconfig">[fontconfig]</link></entry><entry>FcFontSetAdd<link linkend="std.fontconfig">[fontconfig]</link></entry><entry>FcPatternAddMatrix<link linkend="std.fontconfig">[fontconfig]</link></entry></row>
<row><entry>FcAtomicReplaceOrig<link linkend="std.fontconfig">[fontconfig]</link></entry><entry>FcFontSetCreate<link linkend="std.fontconfig">[fontconfig]</link></entry><entry>FcPatternAddString<link linkend="std.fontconfig">[fontconfig]</link></entry></row>
<row><entry>FcAtomicUnlock<link linkend="std.fontconfig">[fontconfig]</link></entry><entry>FcFontSetDestroy<link linkend="std.fontconfig">[fontconfig]</link></entry><entry>FcPatternAddWeak<link linkend="std.fontconfig">[fontconfig]</link></entry></row>
<row><entry>FcBlanksAdd<link linkend="std.fontconfig">[fontconfig]</link></entry><entry>FcFontSetList<link linkend="std.fontconfig">[fontconfig]</link></entry><entry>FcPatternBuild<link linkend="std.fontconfig">[fontconfig]</link></entry></row>
<row><entry>FcBlanksCreate<link linkend="std.fontconfig">[fontconfig]</link></entry><entry>FcFontSetMatch<link linkend="std.fontconfig">[fontconfig]</link></entry><entry>FcPatternCreate<link linkend="std.fontconfig">[fontconfig]</link></entry></row>
<row><entry>FcBlanksDestroy<link linkend="std.fontconfig">[fontconfig]</link></entry><entry>FcFontSetPrint<link linkend="std.fontconfig">[fontconfig]</link></entry><entry>FcPatternDel<link linkend="std.fontconfig">[fontconfig]</link></entry></row>
<row><entry>FcBlanksIsMember<link linkend="std.fontconfig">[fontconfig]</link></entry><entry>FcFontSetSort<link linkend="std.fontconfig">[fontconfig]</link></entry><entry>FcPatternDestroy<link linkend="std.fontconfig">[fontconfig]</link></entry></row>
<row><entry>FcCharSetAddChar<link linkend="std.fontconfig">[fontconfig]</link></entry><entry>FcFontSetSortDestroy<link linkend="std.fontconfig">[fontconfig]</link></entry><entry>FcPatternDuplicate<link linkend="std.fontconfig">[fontconfig]</link></entry></row>
<row><entry>FcCharSetCopy<link linkend="std.fontconfig">[fontconfig]</link></entry><entry>FcFontSort<link linkend="std.fontconfig">[fontconfig]</link></entry><entry>FcPatternEqual<link linkend="std.fontconfig">[fontconfig]</link></entry></row>
<row><entry>FcCharSetCount<link linkend="std.fontconfig">[fontconfig]</link></entry><entry>FcFreeTypeCharIndex<link linkend="std.fontconfig">[fontconfig]</link></entry><entry>FcPatternEqualSubset<link linkend="std.fontconfig">[fontconfig]</link></entry></row>
<row><entry>FcCharSetCreate<link linkend="std.fontconfig">[fontconfig]</link></entry><entry>FcFreeTypeCharSet<link linkend="std.fontconfig">[fontconfig]</link></entry><entry>FcPatternGet<link linkend="std.fontconfig">[fontconfig]</link></entry></row>
<row><entry>FcCharSetDestroy<link linkend="std.fontconfig">[fontconfig]</link></entry><entry>FcFreeTypeCharSetAndSpacing<link linkend="std.fontconfig">[fontconfig]</link></entry><entry>FcPatternGetBool<link linkend="std.fontconfig">[fontconfig]</link></entry></row>
<row><entry>FcCharSetEqual<link linkend="std.fontconfig">[fontconfig]</link></entry><entry>FcFreeTypeQuery<link linkend="std.fontconfig">[fontconfig]</link></entry><entry>FcPatternGetCharSet<link linkend="std.fontconfig">[fontconfig]</link></entry></row>
<row><entry>FcCharSetFirstPage<link linkend="std.fontconfig">[fontconfig]</link></entry><entry>FcGetVersion<link linkend="std.fontconfig">[fontconfig]</link></entry><entry>FcPatternGetDouble<link linkend="std.fontconfig">[fontconfig]</link></entry></row>
<row><entry>FcCharSetHasChar<link linkend="std.fontconfig">[fontconfig]</link></entry><entry>FcInit<link linkend="std.fontconfig">[fontconfig]</link></entry><entry>FcPatternGetFTFace<link linkend="std.fontconfig">[fontconfig]</link></entry></row>
<row><entry>FcCharSetIntersect<link linkend="std.fontconfig">[fontconfig]</link></entry><entry>FcInitBringUptoDate<link linkend="std.fontconfig">[fontconfig]</link></entry><entry>FcPatternGetInteger<link linkend="std.fontconfig">[fontconfig]</link></entry></row>
<row><entry>FcCharSetIntersectCount<link linkend="std.fontconfig">[fontconfig]</link></entry><entry>FcInitLoadConfig<link linkend="std.fontconfig">[fontconfig]</link></entry><entry>FcPatternGetLangSet<link linkend="std.fontconfig">[fontconfig]</link></entry></row>
<row><entry>FcCharSetIsSubset<link linkend="std.fontconfig">[fontconfig]</link></entry><entry>FcInitLoadConfigAndFonts<link linkend="std.fontconfig">[fontconfig]</link></entry><entry>FcPatternGetMatrix<link linkend="std.fontconfig">[fontconfig]</link></entry></row>
<row><entry>FcCharSetNextPage<link linkend="std.fontconfig">[fontconfig]</link></entry><entry>FcInitReinitialize<link linkend="std.fontconfig">[fontconfig]</link></entry><entry>FcPatternGetString<link linkend="std.fontconfig">[fontconfig]</link></entry></row>
<row><entry>FcCharSetSubtract<link linkend="std.fontconfig">[fontconfig]</link></entry><entry>FcLangSetAdd<link linkend="std.fontconfig">[fontconfig]</link></entry><entry>FcPatternHash<link linkend="std.fontconfig">[fontconfig]</link></entry></row>
<row><entry>FcCharSetSubtractCount<link linkend="std.fontconfig">[fontconfig]</link></entry><entry>FcLangSetCompare<link linkend="std.fontconfig">[fontconfig]</link></entry><entry>FcPatternPrint<link linkend="std.fontconfig">[fontconfig]</link></entry></row>
<row><entry>FcCharSetUnion<link linkend="std.fontconfig">[fontconfig]</link></entry><entry>FcLangSetContains<link linkend="std.fontconfig">[fontconfig]</link></entry><entry>FcPatternReference<link linkend="std.fontconfig">[fontconfig]</link></entry></row>
<row><entry>FcConfigAppFontAddDir<link linkend="std.fontconfig">[fontconfig]</link></entry><entry>FcLangSetCopy<link linkend="std.fontconfig">[fontconfig]</link></entry><entry>FcPatternVaBuild<link linkend="std.fontconfig">[fontconfig]</link></entry></row>
<row><entry>FcConfigAppFontAddFile<link linkend="std.fontconfig">[fontconfig]</link></entry><entry>FcLangSetCreate<link linkend="std.fontconfig">[fontconfig]</link></entry><entry>FcStrBasename<link linkend="std.fontconfig">[fontconfig]</link></entry></row>
<row><entry>FcConfigAppFontClear<link linkend="std.fontconfig">[fontconfig]</link></entry><entry>FcLangSetDestroy<link linkend="std.fontconfig">[fontconfig]</link></entry><entry>FcStrCmp<link linkend="std.fontconfig">[fontconfig]</link></entry></row>
<row><entry>FcConfigBuildFonts<link linkend="std.fontconfig">[fontconfig]</link></entry><entry>FcLangSetEqual<link linkend="std.fontconfig">[fontconfig]</link></entry><entry>FcStrCmpIgnoreCase<link linkend="std.fontconfig">[fontconfig]</link></entry></row>
<row><entry>FcConfigDestroy<link linkend="std.fontconfig">[fontconfig]</link></entry><entry>FcLangSetHasLang<link linkend="std.fontconfig">[fontconfig]</link></entry><entry>FcStrCopy<link linkend="std.fontconfig">[fontconfig]</link></entry></row>
<row><entry>FcConfigEnableHome<link linkend="std.fontconfig">[fontconfig]</link></entry><entry>FcLangSetHash<link linkend="std.fontconfig">[fontconfig]</link></entry><entry>FcStrCopyFilename<link linkend="std.fontconfig">[fontconfig]</link></entry></row>
<row><entry>FcConfigFilename<link linkend="std.fontconfig">[fontconfig]</link></entry><entry>FcMatrixCopy<link linkend="std.fontconfig">[fontconfig]</link></entry><entry>FcStrDirname<link linkend="std.fontconfig">[fontconfig]</link></entry></row>
<row><entry>FcConfigGetBlanks<link linkend="std.fontconfig">[fontconfig]</link></entry><entry>FcMatrixEqual<link linkend="std.fontconfig">[fontconfig]</link></entry><entry>FcStrListCreate<link linkend="std.fontconfig">[fontconfig]</link></entry></row>
<row><entry>FcConfigGetCache<link linkend="std.fontconfig">[fontconfig]</link></entry><entry>FcMatrixMultiply<link linkend="std.fontconfig">[fontconfig]</link></entry><entry>FcStrListDone<link linkend="std.fontconfig">[fontconfig]</link></entry></row>
<row><entry>FcConfigGetConfigDirs<link linkend="std.fontconfig">[fontconfig]</link></entry><entry>FcMatrixRotate<link linkend="std.fontconfig">[fontconfig]</link></entry><entry>FcStrListNext<link linkend="std.fontconfig">[fontconfig]</link></entry></row>
<row><entry>FcConfigGetConfigFiles<link linkend="std.fontconfig">[fontconfig]</link></entry><entry>FcMatrixScale<link linkend="std.fontconfig">[fontconfig]</link></entry><entry>FcStrSetAdd<link linkend="std.fontconfig">[fontconfig]</link></entry></row>
<row><entry>FcConfigGetCurrent<link linkend="std.fontconfig">[fontconfig]</link></entry><entry>FcMatrixShear<link linkend="std.fontconfig">[fontconfig]</link></entry><entry>FcStrSetAddFilename<link linkend="std.fontconfig">[fontconfig]</link></entry></row>
<row><entry>FcConfigGetFontDirs<link linkend="std.fontconfig">[fontconfig]</link></entry><entry>FcNameConstant<link linkend="std.fontconfig">[fontconfig]</link></entry><entry>FcStrSetCreate<link linkend="std.fontconfig">[fontconfig]</link></entry></row>
<row><entry>FcConfigGetFonts<link linkend="std.fontconfig">[fontconfig]</link></entry><entry>FcNameGetConstant<link linkend="std.fontconfig">[fontconfig]</link></entry><entry>FcStrSetDel<link linkend="std.fontconfig">[fontconfig]</link></entry></row>
<row><entry>FcConfigGetRescanInterval<link linkend="std.fontconfig">[fontconfig]</link></entry><entry>FcNameGetObjectType<link linkend="std.fontconfig">[fontconfig]</link></entry><entry>FcStrSetDestroy<link linkend="std.fontconfig">[fontconfig]</link></entry></row>
<row><entry>FcConfigGetRescanInverval<link linkend="std.fontconfig">[fontconfig]</link></entry><entry>FcNameParse<link linkend="std.fontconfig">[fontconfig]</link></entry><entry>FcStrSetEqual<link linkend="std.fontconfig">[fontconfig]</link></entry></row>
<row><entry>FcConfigHome<link linkend="std.fontconfig">[fontconfig]</link></entry><entry>FcNameRegisterConstants<link linkend="std.fontconfig">[fontconfig]</link></entry><entry>FcStrSetMember<link linkend="std.fontconfig">[fontconfig]</link></entry></row>
<row><entry>FcConfigParseAndLoad<link linkend="std.fontconfig">[fontconfig]</link></entry><entry>FcNameRegisterObjectTypes<link linkend="std.fontconfig">[fontconfig]</link></entry><entry>FcUcs4ToUtf8<link linkend="std.fontconfig">[fontconfig]</link></entry></row>
<row><entry>FcConfigSetCurrent<link linkend="std.fontconfig">[fontconfig]</link></entry><entry>FcNameUnparse<link linkend="std.fontconfig">[fontconfig]</link></entry><entry>FcUtf16Len<link linkend="std.fontconfig">[fontconfig]</link></entry></row>
<row><entry>FcConfigSetRescanInterval<link linkend="std.fontconfig">[fontconfig]</link></entry><entry>FcNameUnregisterConstants<link linkend="std.fontconfig">[fontconfig]</link></entry><entry>FcUtf16ToUcs4<link linkend="std.fontconfig">[fontconfig]</link></entry></row>
<row><entry>FcConfigSetRescanInverval<link linkend="std.fontconfig">[fontconfig]</link></entry><entry>FcNameUnregisterObjectTypes<link linkend="std.fontconfig">[fontconfig]</link></entry><entry>FcUtf8Len<link linkend="std.fontconfig">[fontconfig]</link></entry></row>
<row><entry>FcConfigSubstitute<link linkend="std.fontconfig">[fontconfig]</link></entry><entry>FcObjectSetAdd<link linkend="std.fontconfig">[fontconfig]</link></entry><entry>FcUtf8ToUcs4<link linkend="std.fontconfig">[fontconfig]</link></entry></row>
<row><entry>FcConfigSubstituteWithPat<link linkend="std.fontconfig">[fontconfig]</link></entry><entry>FcObjectSetBuild<link linkend="std.fontconfig">[fontconfig]</link></entry><entry>FcValueDestroy<link linkend="std.fontconfig">[fontconfig]</link></entry></row>
<row><entry>FcConfigUptoDate<link linkend="std.fontconfig">[fontconfig]</link></entry><entry>FcObjectSetCreate<link linkend="std.fontconfig">[fontconfig]</link></entry><entry>FcValueEqual<link linkend="std.fontconfig">[fontconfig]</link></entry></row>
<row><entry>FcDefaultSubstitute<link linkend="std.fontconfig">[fontconfig]</link></entry><entry>FcObjectSetDestroy<link linkend="std.fontconfig">[fontconfig]</link></entry><entry>FcValuePrint<link linkend="std.fontconfig">[fontconfig]</link></entry></row>
<row><entry>FcDirCacheValid<link linkend="std.fontconfig">[fontconfig]</link></entry><entry>FcObjectSetVaBuild<link linkend="std.fontconfig">[fontconfig]</link></entry><entry>FcValueSave<link linkend="std.fontconfig">[fontconfig]</link></entry></row>
<row><entry>FcDirSave<link linkend="std.fontconfig">[fontconfig]</link></entry><entry>FcPatternAdd<link linkend="std.fontconfig">[fontconfig]</link></entry><entry></entry></row>
<row><entry>FcDirScan<link linkend="std.fontconfig">[fontconfig]</link></entry><entry>FcPatternAddBool<link linkend="std.fontconfig">[fontconfig]</link></entry><entry></entry></row>
</tbody>
</tgroup>
</table>
</sect1>
<sect1 id=app-libfreetype>
<title>libfreetype</title>
<para>
</para>
<para>
The behavior of the interfaces in this library is specified by the following Standards.<simplelist columns=1>
<member>
<xref linkend="std.freetype"> [freetype 2.2]
</member>
<member>
<xref linkend="std.LSB"> [LSB]
</member>
</simplelist>
</para>
<table>
<title>libfreetype Function Interfaces</title>
<tgroup cols=3>
<tbody>
<row><entry>FT_Activate_Size<link linkend="std.freetype">[freetype 2.2]</link></entry><entry>FT_Get_Sfnt_Name_Count<link linkend="std.freetype">[freetype 2.2]</link></entry><entry>FT_Outline_Render<link linkend="std.freetype">[freetype 2.2]</link></entry></row>
<row><entry>FT_Add_Default_Modules<link linkend="std.freetype">[freetype 2.2]</link></entry><entry>FT_Get_Sfnt_Table<link linkend="std.freetype">[freetype 2.2]</link></entry><entry>FT_Outline_Reverse<link linkend="std.freetype">[freetype 2.2]</link></entry></row>
<row><entry>FT_Add_Module<link linkend="std.freetype">[freetype 2.2]</link></entry><entry>FT_Get_X11_Font_Format<link linkend="std.LSB">[LSB]</link></entry><entry>FT_Outline_Transform<link linkend="std.freetype">[freetype 2.2]</link></entry></row>
<row><entry>FT_Angle_Diff<link linkend="std.freetype">[freetype 2.2]</link></entry><entry>FT_Glyph_Copy<link linkend="std.freetype">[freetype 2.2]</link></entry><entry>FT_Outline_Translate<link linkend="std.freetype">[freetype 2.2]</link></entry></row>
<row><entry>FT_Atan2<link linkend="std.freetype">[freetype 2.2]</link></entry><entry>FT_Glyph_Get_CBox<link linkend="std.freetype">[freetype 2.2]</link></entry><entry>FT_Remove_Module<link linkend="std.freetype">[freetype 2.2]</link></entry></row>
<row><entry>FT_Attach_File<link linkend="std.freetype">[freetype 2.2]</link></entry><entry>FT_Glyph_Stroke<link linkend="std.freetype">[freetype 2.2]</link></entry><entry>FT_Render_Glyph<link linkend="std.freetype">[freetype 2.2]</link></entry></row>
<row><entry>FT_Attach_Stream<link linkend="std.freetype">[freetype 2.2]</link></entry><entry>FT_Glyph_StrokeBorder<link linkend="std.freetype">[freetype 2.2]</link></entry><entry>FT_RoundFix<link linkend="std.freetype">[freetype 2.2]</link></entry></row>
<row><entry>FT_Bitmap_Convert<link linkend="std.freetype">[freetype 2.2]</link></entry><entry>FT_Glyph_To_Bitmap<link linkend="std.freetype">[freetype 2.2]</link></entry><entry>FT_Select_Charmap<link linkend="std.freetype">[freetype 2.2]</link></entry></row>
<row><entry>FT_Bitmap_Copy<link linkend="std.freetype">[freetype 2.2]</link></entry><entry>FT_Glyph_Transform<link linkend="std.freetype">[freetype 2.2]</link></entry><entry>FT_Set_Char_Size<link linkend="std.freetype">[freetype 2.2]</link></entry></row>
<row><entry>FT_Bitmap_Done<link linkend="std.freetype">[freetype 2.2]</link></entry><entry>FT_Has_PS_Glyph_Names<link linkend="std.freetype">[freetype 2.2]</link></entry><entry>FT_Set_Charmap<link linkend="std.freetype">[freetype 2.2]</link></entry></row>
<row><entry>FT_Bitmap_Embolden<link linkend="std.freetype">[freetype 2.2]</link></entry><entry>FT_Init_FreeType<link linkend="std.freetype">[freetype 2.2]</link></entry><entry>FT_Set_Debug_Hook<link linkend="std.freetype">[freetype 2.2]</link></entry></row>
<row><entry>FT_Bitmap_New<link linkend="std.freetype">[freetype 2.2]</link></entry><entry>FT_Library_Version<link linkend="std.freetype">[freetype 2.2]</link></entry><entry>FT_Set_MM_Blend_Coordinates<link linkend="std.freetype">[freetype 2.2]</link></entry></row>
<row><entry>FT_CeilFix<link linkend="std.freetype">[freetype 2.2]</link></entry><entry>FT_List_Add<link linkend="std.freetype">[freetype 2.2]</link></entry><entry>FT_Set_MM_Design_Coordinates<link linkend="std.freetype">[freetype 2.2]</link></entry></row>
<row><entry>FT_Cos<link linkend="std.freetype">[freetype 2.2]</link></entry><entry>FT_List_Finalize<link linkend="std.freetype">[freetype 2.2]</link></entry><entry>FT_Set_Pixel_Sizes<link linkend="std.freetype">[freetype 2.2]</link></entry></row>
<row><entry>FT_DivFix<link linkend="std.freetype">[freetype 2.2]</link></entry><entry>FT_List_Find<link linkend="std.freetype">[freetype 2.2]</link></entry><entry>FT_Set_Renderer<link linkend="std.freetype">[freetype 2.2]</link></entry></row>
<row><entry>FT_Done_Face<link linkend="std.freetype">[freetype 2.2]</link></entry><entry>FT_List_Insert<link linkend="std.freetype">[freetype 2.2]</link></entry><entry>FT_Set_Transform<link linkend="std.freetype">[freetype 2.2]</link></entry></row>
<row><entry>FT_Done_FreeType<link linkend="std.freetype">[freetype 2.2]</link></entry><entry>FT_List_Iterate<link linkend="std.freetype">[freetype 2.2]</link></entry><entry>FT_Set_Var_Blend_Coordinates<link linkend="std.freetype">[freetype 2.2]</link></entry></row>
<row><entry>FT_Done_Glyph<link linkend="std.freetype">[freetype 2.2]</link></entry><entry>FT_List_Remove<link linkend="std.freetype">[freetype 2.2]</link></entry><entry>FT_Set_Var_Design_Coordinates<link linkend="std.freetype">[freetype 2.2]</link></entry></row>
<row><entry>FT_Done_Library<link linkend="std.freetype">[freetype 2.2]</link></entry><entry>FT_List_Up<link linkend="std.freetype">[freetype 2.2]</link></entry><entry>FT_Sfnt_Table_Info<link linkend="std.freetype">[freetype 2.2]</link></entry></row>
<row><entry>FT_Done_Size<link linkend="std.freetype">[freetype 2.2]</link></entry><entry>FT_Load_Char<link linkend="std.freetype">[freetype 2.2]</link></entry><entry>FT_Sin<link linkend="std.freetype">[freetype 2.2]</link></entry></row>
<row><entry>FT_FloorFix<link linkend="std.freetype">[freetype 2.2]</link></entry><entry>FT_Load_Glyph<link linkend="std.freetype">[freetype 2.2]</link></entry><entry>FT_Stroker_BeginSubPath<link linkend="std.freetype">[freetype 2.2]</link></entry></row>
<row><entry>FT_Get_BDF_Charset_ID<link linkend="std.freetype">[freetype 2.2]</link></entry><entry>FT_Load_Sfnt_Table<link linkend="std.freetype">[freetype 2.2]</link></entry><entry>FT_Stroker_ConicTo<link linkend="std.freetype">[freetype 2.2]</link></entry></row>
<row><entry>FT_Get_BDF_Property<link linkend="std.freetype">[freetype 2.2]</link></entry><entry>FT_Matrix_Invert<link linkend="std.freetype">[freetype 2.2]</link></entry><entry>FT_Stroker_CubicTo<link linkend="std.freetype">[freetype 2.2]</link></entry></row>
<row><entry>FT_Get_CMap_Language_ID<link linkend="std.freetype">[freetype 2.2]</link></entry><entry>FT_Matrix_Multiply<link linkend="std.freetype">[freetype 2.2]</link></entry><entry>FT_Stroker_Done<link linkend="std.freetype">[freetype 2.2]</link></entry></row>
<row><entry>FT_Get_Char_Index<link linkend="std.freetype">[freetype 2.2]</link></entry><entry>FT_MulDiv<link linkend="std.freetype">[freetype 2.2]</link></entry><entry>FT_Stroker_EndSubPath<link linkend="std.freetype">[freetype 2.2]</link></entry></row>
<row><entry>FT_Get_Charmap_Index<link linkend="std.freetype">[freetype 2.2]</link></entry><entry>FT_MulFix<link linkend="std.freetype">[freetype 2.2]</link></entry><entry>FT_Stroker_Export<link linkend="std.freetype">[freetype 2.2]</link></entry></row>
<row><entry>FT_Get_First_Char<link linkend="std.freetype">[freetype 2.2]</link></entry><entry>FT_New_Face<link linkend="std.freetype">[freetype 2.2]</link></entry><entry>FT_Stroker_ExportBorder<link linkend="std.freetype">[freetype 2.2]</link></entry></row>
<row><entry>FT_Get_Glyph<link linkend="std.freetype">[freetype 2.2]</link></entry><entry>FT_New_Library<link linkend="std.freetype">[freetype 2.2]</link></entry><entry>FT_Stroker_GetBorderCounts<link linkend="std.freetype">[freetype 2.2]</link></entry></row>
<row><entry>FT_Get_Glyph_Name<link linkend="std.freetype">[freetype 2.2]</link></entry><entry>FT_New_Memory_Face<link linkend="std.freetype">[freetype 2.2]</link></entry><entry>FT_Stroker_GetCounts<link linkend="std.freetype">[freetype 2.2]</link></entry></row>
<row><entry>FT_Get_Kerning<link linkend="std.freetype">[freetype 2.2]</link></entry><entry>FT_New_Size<link linkend="std.freetype">[freetype 2.2]</link></entry><entry>FT_Stroker_LineTo<link linkend="std.freetype">[freetype 2.2]</link></entry></row>
<row><entry>FT_Get_MM_Var<link linkend="std.freetype">[freetype 2.2]</link></entry><entry>FT_OpenType_Validate<link linkend="std.freetype">[freetype 2.2]</link></entry><entry>FT_Stroker_New<link linkend="std.freetype">[freetype 2.2]</link></entry></row>
<row><entry>FT_Get_Module<link linkend="std.freetype">[freetype 2.2]</link></entry><entry>FT_Open_Face<link linkend="std.freetype">[freetype 2.2]</link></entry><entry>FT_Stroker_ParseOutline<link linkend="std.freetype">[freetype 2.2]</link></entry></row>
<row><entry>FT_Get_Multi_Master<link linkend="std.freetype">[freetype 2.2]</link></entry><entry>FT_Outline_Check<link linkend="std.freetype">[freetype 2.2]</link></entry><entry>FT_Stroker_Rewind<link linkend="std.freetype">[freetype 2.2]</link></entry></row>
<row><entry>FT_Get_Name_Index<link linkend="std.freetype">[freetype 2.2]</link></entry><entry>FT_Outline_Copy<link linkend="std.freetype">[freetype 2.2]</link></entry><entry>FT_Stroker_Set<link linkend="std.freetype">[freetype 2.2]</link></entry></row>
<row><entry>FT_Get_Next_Char<link linkend="std.freetype">[freetype 2.2]</link></entry><entry>FT_Outline_Decompose<link linkend="std.freetype">[freetype 2.2]</link></entry><entry>FT_Tan<link linkend="std.freetype">[freetype 2.2]</link></entry></row>
<row><entry>FT_Get_PFR_Advance<link linkend="std.freetype">[freetype 2.2]</link></entry><entry>FT_Outline_Done<link linkend="std.freetype">[freetype 2.2]</link></entry><entry>FT_Vector_From_Polar<link linkend="std.freetype">[freetype 2.2]</link></entry></row>
<row><entry>FT_Get_PFR_Kerning<link linkend="std.freetype">[freetype 2.2]</link></entry><entry>FT_Outline_GetInsideBorder<link linkend="std.freetype">[freetype 2.2]</link></entry><entry>FT_Vector_Length<link linkend="std.freetype">[freetype 2.2]</link></entry></row>
<row><entry>FT_Get_PFR_Metrics<link linkend="std.freetype">[freetype 2.2]</link></entry><entry>FT_Outline_GetOutsideBorder<link linkend="std.freetype">[freetype 2.2]</link></entry><entry>FT_Vector_Polarize<link linkend="std.freetype">[freetype 2.2]</link></entry></row>
<row><entry>FT_Get_PS_Font_Info<link linkend="std.freetype">[freetype 2.2]</link></entry><entry>FT_Outline_Get_BBox<link linkend="std.freetype">[freetype 2.2]</link></entry><entry>FT_Vector_Rotate<link linkend="std.freetype">[freetype 2.2]</link></entry></row>
<row><entry>FT_Get_PS_Font_Private<link linkend="std.freetype">[freetype 2.2]</link></entry><entry>FT_Outline_Get_Bitmap<link linkend="std.freetype">[freetype 2.2]</link></entry><entry>FT_Vector_Transform<link linkend="std.freetype">[freetype 2.2]</link></entry></row>
<row><entry>FT_Get_Postscript_Name<link linkend="std.freetype">[freetype 2.2]</link></entry><entry>FT_Outline_Get_CBox<link linkend="std.freetype">[freetype 2.2]</link></entry><entry>FT_Vector_Unit<link linkend="std.freetype">[freetype 2.2]</link></entry></row>
<row><entry>FT_Get_Renderer<link linkend="std.freetype">[freetype 2.2]</link></entry><entry>FT_Outline_Get_Orientation<link linkend="std.freetype">[freetype 2.2]</link></entry><entry></entry></row>
<row><entry>FT_Get_Sfnt_Name<link linkend="std.freetype">[freetype 2.2]</link></entry><entry>FT_Outline_New<link linkend="std.freetype">[freetype 2.2]</link></entry><entry></entry></row>
</tbody>
</tgroup>
</table>
</sect1>
<sect1 id=app-libjpeg>
<title>libjpeg</title>
<para>
</para>
<para>
The behavior of the interfaces in this library is specified by the following Standards.<simplelist columns=1>
<member>
<xref linkend="std.LSB"> [LSB]
</member>
</simplelist>
</para>
<table>
<title>libjpeg Function Interfaces</title>
<tgroup cols=3>
<tbody>
<row><entry>jpeg_CreateCompress(LIBJPEG_6.2)<link linkend="std.LSB">[LSB]</link></entry><entry>jpeg_finish_decompress(LIBJPEG_6.2)<link linkend="std.LSB">[LSB]</link></entry><entry>jpeg_set_quality(LIBJPEG_6.2)<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>jpeg_CreateDecompress(LIBJPEG_6.2)<link linkend="std.LSB">[LSB]</link></entry><entry>jpeg_finish_output(LIBJPEG_6.2)<link linkend="std.LSB">[LSB]</link></entry><entry>jpeg_simple_progression(LIBJPEG_6.2)<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>jpeg_abort(LIBJPEG_6.2)<link linkend="std.LSB">[LSB]</link></entry><entry>jpeg_has_multiple_scans(LIBJPEG_6.2)<link linkend="std.LSB">[LSB]</link></entry><entry>jpeg_start_compress(LIBJPEG_6.2)<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>jpeg_abort_compress(LIBJPEG_6.2)<link linkend="std.LSB">[LSB]</link></entry><entry>jpeg_input_complete(LIBJPEG_6.2)<link linkend="std.LSB">[LSB]</link></entry><entry>jpeg_start_decompress(LIBJPEG_6.2)<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>jpeg_abort_decompress(LIBJPEG_6.2)<link linkend="std.LSB">[LSB]</link></entry><entry>jpeg_new_colormap(LIBJPEG_6.2)<link linkend="std.LSB">[LSB]</link></entry><entry>jpeg_start_output(LIBJPEG_6.2)<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>jpeg_add_quant_table(LIBJPEG_6.2)<link linkend="std.LSB">[LSB]</link></entry><entry>jpeg_quality_scaling(LIBJPEG_6.2)<link linkend="std.LSB">[LSB]</link></entry><entry>jpeg_std_error(LIBJPEG_6.2)<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>jpeg_alloc_huff_table(LIBJPEG_6.2)<link linkend="std.LSB">[LSB]</link></entry><entry>jpeg_read_coefficients(LIBJPEG_6.2)<link linkend="std.LSB">[LSB]</link></entry><entry>jpeg_stdio_dest(LIBJPEG_6.2)<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>jpeg_alloc_quant_table(LIBJPEG_6.2)<link linkend="std.LSB">[LSB]</link></entry><entry>jpeg_read_header(LIBJPEG_6.2)<link linkend="std.LSB">[LSB]</link></entry><entry>jpeg_stdio_src(LIBJPEG_6.2)<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>jpeg_calc_output_dimensions(LIBJPEG_6.2)<link linkend="std.LSB">[LSB]</link></entry><entry>jpeg_read_raw_data(LIBJPEG_6.2)<link linkend="std.LSB">[LSB]</link></entry><entry>jpeg_suppress_tables(LIBJPEG_6.2)<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>jpeg_consume_input(LIBJPEG_6.2)<link linkend="std.LSB">[LSB]</link></entry><entry>jpeg_read_scanlines(LIBJPEG_6.2)<link linkend="std.LSB">[LSB]</link></entry><entry>jpeg_write_coefficients(LIBJPEG_6.2)<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>jpeg_copy_critical_parameters(LIBJPEG_6.2)<link linkend="std.LSB">[LSB]</link></entry><entry>jpeg_resync_to_restart(LIBJPEG_6.2)<link linkend="std.LSB">[LSB]</link></entry><entry>jpeg_write_m_byte(LIBJPEG_6.2)<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>jpeg_default_colorspace(LIBJPEG_6.2)<link linkend="std.LSB">[LSB]</link></entry><entry>jpeg_save_markers(LIBJPEG_6.2)<link linkend="std.LSB">[LSB]</link></entry><entry>jpeg_write_m_header(LIBJPEG_6.2)<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>jpeg_destroy(LIBJPEG_6.2)<link linkend="std.LSB">[LSB]</link></entry><entry>jpeg_set_colorspace(LIBJPEG_6.2)<link linkend="std.LSB">[LSB]</link></entry><entry>jpeg_write_marker(LIBJPEG_6.2)<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>jpeg_destroy_compress(LIBJPEG_6.2)<link linkend="std.LSB">[LSB]</link></entry><entry>jpeg_set_defaults(LIBJPEG_6.2)<link linkend="std.LSB">[LSB]</link></entry><entry>jpeg_write_raw_data(LIBJPEG_6.2)<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>jpeg_destroy_decompress(LIBJPEG_6.2)<link linkend="std.LSB">[LSB]</link></entry><entry>jpeg_set_linear_quality(LIBJPEG_6.2)<link linkend="std.LSB">[LSB]</link></entry><entry>jpeg_write_scanlines(LIBJPEG_6.2)<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>jpeg_finish_compress(LIBJPEG_6.2)<link linkend="std.LSB">[LSB]</link></entry><entry>jpeg_set_marker_processor(LIBJPEG_6.2)<link linkend="std.LSB">[LSB]</link></entry><entry>jpeg_write_tables(LIBJPEG_6.2)<link linkend="std.LSB">[LSB]</link></entry></row>
</tbody>
</tgroup>
</table>
</sect1>
<sect1 id=app-libpng12>
<title>libpng12</title>
<para>
</para>
<para>
The behavior of the interfaces in this library is specified by the following Standards.<simplelist columns=1>
<member>
<xref linkend="std.LSB"> [LSB]
</member>
</simplelist>
</para>
<table>
<title>libpng12 Function Interfaces</title>
<tgroup cols=3>
<tbody>
<row><entry>png_access_version_number(PNG12_0)<link linkend="std.LSB">[LSB]</link></entry><entry>png_get_user_chunk_ptr(PNG12_0)<link linkend="std.LSB">[LSB]</link></entry><entry>png_set_invert_mono(PNG12_0)<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>png_check_sig(PNG12_0)<link linkend="std.LSB">[LSB]</link></entry><entry>png_get_valid(PNG12_0)<link linkend="std.LSB">[LSB]</link></entry><entry>png_set_keep_unknown_chunks(PNG12_0)<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>png_convert_from_struct_tm(PNG12_0)<link linkend="std.LSB">[LSB]</link></entry><entry>png_get_x_offset_pixels(PNG12_0)<link linkend="std.LSB">[LSB]</link></entry><entry>png_set_mem_fn(PNG12_0)<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>png_convert_from_time_t(PNG12_0)<link linkend="std.LSB">[LSB]</link></entry><entry>png_get_x_pixels_per_meter(PNG12_0)<link linkend="std.LSB">[LSB]</link></entry><entry>png_set_oFFs(PNG12_0)<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>png_create_info_struct(PNG12_0)<link linkend="std.LSB">[LSB]</link></entry><entry>png_get_y_offset_pixels(PNG12_0)<link linkend="std.LSB">[LSB]</link></entry><entry>png_set_pHYs(PNG12_0)<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>png_create_read_struct(PNG12_0)<link linkend="std.LSB">[LSB]</link></entry><entry>png_get_y_pixels_per_meter(PNG12_0)<link linkend="std.LSB">[LSB]</link></entry><entry>png_set_packing(PNG12_0)<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>png_create_read_struct_2(PNG12_0)<link linkend="std.LSB">[LSB]</link></entry><entry>png_info_init_3(PNG12_0)<link linkend="std.LSB">[LSB]</link></entry><entry>png_set_packswap(PNG12_0)<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>png_create_write_struct(PNG12_0)<link linkend="std.LSB">[LSB]</link></entry><entry>png_init_io(PNG12_0)<link linkend="std.LSB">[LSB]</link></entry><entry>png_set_palette_to_rgb(PNG12_0)<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>png_create_write_struct_2(PNG12_0)<link linkend="std.LSB">[LSB]</link></entry><entry>png_malloc(PNG12_0)<link linkend="std.LSB">[LSB]</link></entry><entry>png_set_progressive_read_fn(PNG12_0)<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>png_data_freer(PNG12_0)<link linkend="std.LSB">[LSB]</link></entry><entry>png_permit_mng_features(PNG12_0)<link linkend="std.LSB">[LSB]</link></entry><entry>png_set_read_fn(PNG12_0)<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>png_destroy_info_struct(PNG12_0)<link linkend="std.LSB">[LSB]</link></entry><entry>png_process_data(PNG12_0)<link linkend="std.LSB">[LSB]</link></entry><entry>png_set_read_user_chunk_fn(PNG12_0)<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>png_destroy_read_struct(PNG12_0)<link linkend="std.LSB">[LSB]</link></entry><entry>png_progressive_combine_row(PNG12_0)<link linkend="std.LSB">[LSB]</link></entry><entry>png_set_read_user_transform_fn(PNG12_0)<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>png_destroy_write_struct(PNG12_0)<link linkend="std.LSB">[LSB]</link></entry><entry>png_read_end(PNG12_0)<link linkend="std.LSB">[LSB]</link></entry><entry>png_set_rgb_to_gray(PNG12_0)<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>png_error(PNG12_0)<link linkend="std.LSB">[LSB]</link></entry><entry>png_read_image(PNG12_0)<link linkend="std.LSB">[LSB]</link></entry><entry>png_set_rows(PNG12_0)<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>png_free(PNG12_0)<link linkend="std.LSB">[LSB]</link></entry><entry>png_read_info(PNG12_0)<link linkend="std.LSB">[LSB]</link></entry><entry>png_set_sBIT(PNG12_0)<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>png_free_data(PNG12_0)<link linkend="std.LSB">[LSB]</link></entry><entry>png_read_png(PNG12_0)<link linkend="std.LSB">[LSB]</link></entry><entry>png_set_sRGB(PNG12_0)<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>png_get_IHDR(PNG12_0)<link linkend="std.LSB">[LSB]</link></entry><entry>png_read_row(PNG12_0)<link linkend="std.LSB">[LSB]</link></entry><entry>png_set_sRGB_gAMA_and_cHRM(PNG12_0)<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>png_get_PLTE(PNG12_0)<link linkend="std.LSB">[LSB]</link></entry><entry>png_read_rows(PNG12_0)<link linkend="std.LSB">[LSB]</link></entry><entry>png_set_shift(PNG12_0)<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>png_get_bKGD(PNG12_0)<link linkend="std.LSB">[LSB]</link></entry><entry>png_read_update_info(PNG12_0)<link linkend="std.LSB">[LSB]</link></entry><entry>png_set_sig_bytes(PNG12_0)<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>png_get_bit_depth(PNG12_0)<link linkend="std.LSB">[LSB]</link></entry><entry>png_set_IHDR(PNG12_0)<link linkend="std.LSB">[LSB]</link></entry><entry>png_set_strip_16(PNG12_0)<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>png_get_cHRM(PNG12_0)<link linkend="std.LSB">[LSB]</link></entry><entry>png_set_PLTE(PNG12_0)<link linkend="std.LSB">[LSB]</link></entry><entry>png_set_strip_alpha(PNG12_0)<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>png_get_channels(PNG12_0)<link linkend="std.LSB">[LSB]</link></entry><entry>png_set_bKGD(PNG12_0)<link linkend="std.LSB">[LSB]</link></entry><entry>png_set_swap(PNG12_0)<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>png_get_color_type(PNG12_0)<link linkend="std.LSB">[LSB]</link></entry><entry>png_set_background(PNG12_0)<link linkend="std.LSB">[LSB]</link></entry><entry>png_set_swap_alpha(PNG12_0)<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>png_get_error_ptr(PNG12_0)<link linkend="std.LSB">[LSB]</link></entry><entry>png_set_bgr(PNG12_0)<link linkend="std.LSB">[LSB]</link></entry><entry>png_set_tIME(PNG12_0)<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>png_get_gAMA(PNG12_0)<link linkend="std.LSB">[LSB]</link></entry><entry>png_set_cHRM(PNG12_0)<link linkend="std.LSB">[LSB]</link></entry><entry>png_set_tRNS(PNG12_0)<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>png_get_hIST(PNG12_0)<link linkend="std.LSB">[LSB]</link></entry><entry>png_set_compression_buffer_size(PNG12_0)<link linkend="std.LSB">[LSB]</link></entry><entry>png_set_tRNS_to_alpha(PNG12_0)<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>png_get_header_ver(PNG12_0)<link linkend="std.LSB">[LSB]</link></entry><entry>png_set_compression_level(PNG12_0)<link linkend="std.LSB">[LSB]</link></entry><entry>png_set_text(PNG12_0)<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>png_get_iCCP(PNG12_0)<link linkend="std.LSB">[LSB]</link></entry><entry>png_set_compression_mem_level(PNG12_0)<link linkend="std.LSB">[LSB]</link></entry><entry>png_set_unknown_chunk_location(PNG12_0)<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>png_get_image_height(PNG12_0)<link linkend="std.LSB">[LSB]</link></entry><entry>png_set_compression_method(PNG12_0)<link linkend="std.LSB">[LSB]</link></entry><entry>png_set_unknown_chunks(PNG12_0)<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>png_get_image_width(PNG12_0)<link linkend="std.LSB">[LSB]</link></entry><entry>png_set_compression_strategy(PNG12_0)<link linkend="std.LSB">[LSB]</link></entry><entry>png_set_write_fn(PNG12_0)<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>png_get_interlace_type(PNG12_0)<link linkend="std.LSB">[LSB]</link></entry><entry>png_set_compression_window_bits(PNG12_0)<link linkend="std.LSB">[LSB]</link></entry><entry>png_set_write_status_fn(PNG12_0)<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>png_get_io_ptr(PNG12_0)<link linkend="std.LSB">[LSB]</link></entry><entry>png_set_dither(PNG12_0)<link linkend="std.LSB">[LSB]</link></entry><entry>png_set_write_user_transform_fn(PNG12_0)<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>png_get_libpng_ver(PNG12_0)<link linkend="std.LSB">[LSB]</link></entry><entry>png_set_error_fn(PNG12_0)<link linkend="std.LSB">[LSB]</link></entry><entry>png_sig_cmp(PNG12_0)<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>png_get_oFFs(PNG12_0)<link linkend="std.LSB">[LSB]</link></entry><entry>png_set_expand(PNG12_0)<link linkend="std.LSB">[LSB]</link></entry><entry>png_start_read_image(PNG12_0)<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>png_get_pHYs(PNG12_0)<link linkend="std.LSB">[LSB]</link></entry><entry>png_set_filler(PNG12_0)<link linkend="std.LSB">[LSB]</link></entry><entry>png_warning(PNG12_0)<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>png_get_progressive_ptr(PNG12_0)<link linkend="std.LSB">[LSB]</link></entry><entry>png_set_filter(PNG12_0)<link linkend="std.LSB">[LSB]</link></entry><entry>png_write_chunk(PNG12_0)<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>png_get_rowbytes(PNG12_0)<link linkend="std.LSB">[LSB]</link></entry><entry>png_set_gAMA(PNG12_0)<link linkend="std.LSB">[LSB]</link></entry><entry>png_write_end(PNG12_0)<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>png_get_rows(PNG12_0)<link linkend="std.LSB">[LSB]</link></entry><entry>png_set_gamma(PNG12_0)<link linkend="std.LSB">[LSB]</link></entry><entry>png_write_flush(PNG12_0)<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>png_get_sBIT(PNG12_0)<link linkend="std.LSB">[LSB]</link></entry><entry>png_set_gray_1_2_4_to_8(PNG12_0)<link linkend="std.LSB">[LSB]</link></entry><entry>png_write_image(PNG12_0)<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>png_get_sRGB(PNG12_0)<link linkend="std.LSB">[LSB]</link></entry><entry>png_set_gray_to_rgb(PNG12_0)<link linkend="std.LSB">[LSB]</link></entry><entry>png_write_info(PNG12_0)<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>png_get_tIME(PNG12_0)<link linkend="std.LSB">[LSB]</link></entry><entry>png_set_hIST(PNG12_0)<link linkend="std.LSB">[LSB]</link></entry><entry>png_write_png(PNG12_0)<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>png_get_tRNS(PNG12_0)<link linkend="std.LSB">[LSB]</link></entry><entry>png_set_iCCP(PNG12_0)<link linkend="std.LSB">[LSB]</link></entry><entry>png_write_row(PNG12_0)<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>png_get_text(PNG12_0)<link linkend="std.LSB">[LSB]</link></entry><entry>png_set_interlace_handling(PNG12_0)<link linkend="std.LSB">[LSB]</link></entry><entry>png_write_rows(PNG12_0)<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>png_get_unknown_chunks(PNG12_0)<link linkend="std.LSB">[LSB]</link></entry><entry>png_set_invert_alpha(PNG12_0)<link linkend="std.LSB">[LSB]</link></entry><entry></entry></row>
</tbody>
</tgroup>
</table>
<table>
<title>libpng12 Data Interfaces</title>
<tgroup cols=3>
<tbody>
<row><entry>png_libpng_ver<link linkend="std.LSB">[LSB]</link></entry><entry></entry><entry></entry></row>
</tbody>
</tgroup>
</table>
</sect1>
<sect1 id=app-libtiff>
<title>libtiff</title>
<para>
</para>
<para>
The behavior of the interfaces in this library is specified by the following Standards.<simplelist columns=1>
<member>
<xref linkend="std.Tiff"> [Libtiff 4.0.2]
</member>
</simplelist>
</para>
<table>
<title>libtiff Function Interfaces</title>
<tgroup cols=3>
<tbody>
<row><entry>TIFFAccessTagMethods<link linkend="std.Tiff">[Libtiff 4.0.2]</link></entry><entry>TIFFGetWriteProc<link linkend="std.Tiff">[Libtiff 4.0.2]</link></entry><entry>TIFFSetSubDirectory<link linkend="std.Tiff">[Libtiff 4.0.2]</link></entry></row>
<row><entry>TIFFCIELabToRGBInit<link linkend="std.Tiff">[Libtiff 4.0.2]</link></entry><entry>TIFFIsBigEndian<link linkend="std.Tiff">[Libtiff 4.0.2]</link></entry><entry>TIFFSetTagExtender<link linkend="std.Tiff">[Libtiff 4.0.2]</link></entry></row>
<row><entry>TIFFCIELabToXYZ<link linkend="std.Tiff">[Libtiff 4.0.2]</link></entry><entry>TIFFIsByteSwapped<link linkend="std.Tiff">[Libtiff 4.0.2]</link></entry><entry>TIFFSetWarningHandler<link linkend="std.Tiff">[Libtiff 4.0.2]</link></entry></row>
<row><entry>TIFFCheckTile<link linkend="std.Tiff">[Libtiff 4.0.2]</link></entry><entry>TIFFIsCODECConfigured<link linkend="std.Tiff">[Libtiff 4.0.2]</link></entry><entry>TIFFSetWarningHandlerExt<link linkend="std.Tiff">[Libtiff 4.0.2]</link></entry></row>
<row><entry>TIFFCheckpointDirectory<link linkend="std.Tiff">[Libtiff 4.0.2]</link></entry><entry>TIFFIsMSB2LSB<link linkend="std.Tiff">[Libtiff 4.0.2]</link></entry><entry>TIFFSetWriteOffset<link linkend="std.Tiff">[Libtiff 4.0.2]</link></entry></row>
<row><entry>TIFFCleanup<link linkend="std.Tiff">[Libtiff 4.0.2]</link></entry><entry>TIFFIsTiled<link linkend="std.Tiff">[Libtiff 4.0.2]</link></entry><entry>TIFFSetupStrips<link linkend="std.Tiff">[Libtiff 4.0.2]</link></entry></row>
<row><entry>TIFFClientOpen<link linkend="std.Tiff">[Libtiff 4.0.2]</link></entry><entry>TIFFIsUpSampled<link linkend="std.Tiff">[Libtiff 4.0.2]</link></entry><entry>TIFFStripSize<link linkend="std.Tiff">[Libtiff 4.0.2]</link></entry></row>
<row><entry>TIFFClientdata<link linkend="std.Tiff">[Libtiff 4.0.2]</link></entry><entry>TIFFLastDirectory<link linkend="std.Tiff">[Libtiff 4.0.2]</link></entry><entry>TIFFStripSize64<link linkend="std.Tiff">[Libtiff 4.0.2]</link></entry></row>
<row><entry>TIFFClose<link linkend="std.Tiff">[Libtiff 4.0.2]</link></entry><entry>TIFFNumberOfDirectories<link linkend="std.Tiff">[Libtiff 4.0.2]</link></entry><entry>TIFFSwabArrayOfDouble<link linkend="std.Tiff">[Libtiff 4.0.2]</link></entry></row>
<row><entry>TIFFComputeStrip<link linkend="std.Tiff">[Libtiff 4.0.2]</link></entry><entry>TIFFNumberOfStrips<link linkend="std.Tiff">[Libtiff 4.0.2]</link></entry><entry>TIFFSwabArrayOfFloat<link linkend="std.Tiff">[Libtiff 4.0.2]</link></entry></row>
<row><entry>TIFFComputeTile<link linkend="std.Tiff">[Libtiff 4.0.2]</link></entry><entry>TIFFNumberOfTiles<link linkend="std.Tiff">[Libtiff 4.0.2]</link></entry><entry>TIFFSwabArrayOfLong<link linkend="std.Tiff">[Libtiff 4.0.2]</link></entry></row>
<row><entry>TIFFCreateCustomDirectory<link linkend="std.Tiff">[Libtiff 4.0.2]</link></entry><entry>TIFFOpen<link linkend="std.Tiff">[Libtiff 4.0.2]</link></entry><entry>TIFFSwabArrayOfLong8<link linkend="std.Tiff">[Libtiff 4.0.2]</link></entry></row>
<row><entry>TIFFCreateDirectory<link linkend="std.Tiff">[Libtiff 4.0.2]</link></entry><entry>TIFFPrintDirectory<link linkend="std.Tiff">[Libtiff 4.0.2]</link></entry><entry>TIFFSwabArrayOfShort<link linkend="std.Tiff">[Libtiff 4.0.2]</link></entry></row>
<row><entry>TIFFCreateEXIFDirectory<link linkend="std.Tiff">[Libtiff 4.0.2]</link></entry><entry>TIFFRGBAImageBegin<link linkend="std.Tiff">[Libtiff 4.0.2]</link></entry><entry>TIFFSwabArrayOfTriples<link linkend="std.Tiff">[Libtiff 4.0.2]</link></entry></row>
<row><entry>TIFFCurrentDirOffset<link linkend="std.Tiff">[Libtiff 4.0.2]</link></entry><entry>TIFFRGBAImageEnd<link linkend="std.Tiff">[Libtiff 4.0.2]</link></entry><entry>TIFFSwabDouble<link linkend="std.Tiff">[Libtiff 4.0.2]</link></entry></row>
<row><entry>TIFFCurrentDirectory<link linkend="std.Tiff">[Libtiff 4.0.2]</link></entry><entry>TIFFRGBAImageGet<link linkend="std.Tiff">[Libtiff 4.0.2]</link></entry><entry>TIFFSwabFloat<link linkend="std.Tiff">[Libtiff 4.0.2]</link></entry></row>
<row><entry>TIFFCurrentRow<link linkend="std.Tiff">[Libtiff 4.0.2]</link></entry><entry>TIFFRGBAImageOK<link linkend="std.Tiff">[Libtiff 4.0.2]</link></entry><entry>TIFFSwabLong<link linkend="std.Tiff">[Libtiff 4.0.2]</link></entry></row>
<row><entry>TIFFCurrentStrip<link linkend="std.Tiff">[Libtiff 4.0.2]</link></entry><entry>TIFFRasterScanlineSize<link linkend="std.Tiff">[Libtiff 4.0.2]</link></entry><entry>TIFFSwabLong8<link linkend="std.Tiff">[Libtiff 4.0.2]</link></entry></row>
<row><entry>TIFFCurrentTile<link linkend="std.Tiff">[Libtiff 4.0.2]</link></entry><entry>TIFFRasterScanlineSize64<link linkend="std.Tiff">[Libtiff 4.0.2]</link></entry><entry>TIFFSwabShort<link linkend="std.Tiff">[Libtiff 4.0.2]</link></entry></row>
<row><entry>TIFFDataWidth<link linkend="std.Tiff">[Libtiff 4.0.2]</link></entry><entry>TIFFRawStripSize<link linkend="std.Tiff">[Libtiff 4.0.2]</link></entry><entry>TIFFTileRowSize<link linkend="std.Tiff">[Libtiff 4.0.2]</link></entry></row>
<row><entry>TIFFDefaultStripSize<link linkend="std.Tiff">[Libtiff 4.0.2]</link></entry><entry>TIFFRawStripSize64<link linkend="std.Tiff">[Libtiff 4.0.2]</link></entry><entry>TIFFTileRowSize64<link linkend="std.Tiff">[Libtiff 4.0.2]</link></entry></row>
<row><entry>TIFFDefaultTileSize<link linkend="std.Tiff">[Libtiff 4.0.2]</link></entry><entry>TIFFReadBufferSetup<link linkend="std.Tiff">[Libtiff 4.0.2]</link></entry><entry>TIFFTileSize<link linkend="std.Tiff">[Libtiff 4.0.2]</link></entry></row>
<row><entry>TIFFError<link linkend="std.Tiff">[Libtiff 4.0.2]</link></entry><entry>TIFFReadCustomDirectory<link linkend="std.Tiff">[Libtiff 4.0.2]</link></entry><entry>TIFFTileSize64<link linkend="std.Tiff">[Libtiff 4.0.2]</link></entry></row>
<row><entry>TIFFErrorExt<link linkend="std.Tiff">[Libtiff 4.0.2]</link></entry><entry>TIFFReadDirectory<link linkend="std.Tiff">[Libtiff 4.0.2]</link></entry><entry>TIFFUnRegisterCODEC<link linkend="std.Tiff">[Libtiff 4.0.2]</link></entry></row>
<row><entry>TIFFFdOpen<link linkend="std.Tiff">[Libtiff 4.0.2]</link></entry><entry>TIFFReadEXIFDirectory<link linkend="std.Tiff">[Libtiff 4.0.2]</link></entry><entry>TIFFUnlinkDirectory<link linkend="std.Tiff">[Libtiff 4.0.2]</link></entry></row>
<row><entry>TIFFFieldWithName<link linkend="std.Tiff">[Libtiff 4.0.2]</link></entry><entry>TIFFReadEncodedStrip<link linkend="std.Tiff">[Libtiff 4.0.2]</link></entry><entry>TIFFUnsetField<link linkend="std.Tiff">[Libtiff 4.0.2]</link></entry></row>
<row><entry>TIFFFieldWithTag<link linkend="std.Tiff">[Libtiff 4.0.2]</link></entry><entry>TIFFReadEncodedTile<link linkend="std.Tiff">[Libtiff 4.0.2]</link></entry><entry>TIFFVGetField<link linkend="std.Tiff">[Libtiff 4.0.2]</link></entry></row>
<row><entry>TIFFFileName<link linkend="std.Tiff">[Libtiff 4.0.2]</link></entry><entry>TIFFReadRGBAImage<link linkend="std.Tiff">[Libtiff 4.0.2]</link></entry><entry>TIFFVGetFieldDefaulted<link linkend="std.Tiff">[Libtiff 4.0.2]</link></entry></row>
<row><entry>TIFFFileno<link linkend="std.Tiff">[Libtiff 4.0.2]</link></entry><entry>TIFFReadRGBAImageOriented<link linkend="std.Tiff">[Libtiff 4.0.2]</link></entry><entry>TIFFVSetField<link linkend="std.Tiff">[Libtiff 4.0.2]</link></entry></row>
<row><entry>TIFFFindCODEC<link linkend="std.Tiff">[Libtiff 4.0.2]</link></entry><entry>TIFFReadRGBAStrip<link linkend="std.Tiff">[Libtiff 4.0.2]</link></entry><entry>TIFFVStripSize<link linkend="std.Tiff">[Libtiff 4.0.2]</link></entry></row>
<row><entry>TIFFFindField<link linkend="std.Tiff">[Libtiff 4.0.2]</link></entry><entry>TIFFReadRGBATile<link linkend="std.Tiff">[Libtiff 4.0.2]</link></entry><entry>TIFFVStripSize64<link linkend="std.Tiff">[Libtiff 4.0.2]</link></entry></row>
<row><entry>TIFFFlush<link linkend="std.Tiff">[Libtiff 4.0.2]</link></entry><entry>TIFFReadRawStrip<link linkend="std.Tiff">[Libtiff 4.0.2]</link></entry><entry>TIFFVTileSize<link linkend="std.Tiff">[Libtiff 4.0.2]</link></entry></row>
<row><entry>TIFFFlushData<link linkend="std.Tiff">[Libtiff 4.0.2]</link></entry><entry>TIFFReadRawTile<link linkend="std.Tiff">[Libtiff 4.0.2]</link></entry><entry>TIFFVTileSize64<link linkend="std.Tiff">[Libtiff 4.0.2]</link></entry></row>
<row><entry>TIFFFreeDirectory<link linkend="std.Tiff">[Libtiff 4.0.2]</link></entry><entry>TIFFReadScanline<link linkend="std.Tiff">[Libtiff 4.0.2]</link></entry><entry>TIFFWarning<link linkend="std.Tiff">[Libtiff 4.0.2]</link></entry></row>
<row><entry>TIFFGetBitRevTable<link linkend="std.Tiff">[Libtiff 4.0.2]</link></entry><entry>TIFFReadTile<link linkend="std.Tiff">[Libtiff 4.0.2]</link></entry><entry>TIFFWarningExt<link linkend="std.Tiff">[Libtiff 4.0.2]</link></entry></row>
<row><entry>TIFFGetClientInfo<link linkend="std.Tiff">[Libtiff 4.0.2]</link></entry><entry>TIFFRegisterCODEC<link linkend="std.Tiff">[Libtiff 4.0.2]</link></entry><entry>TIFFWriteBufferSetup<link linkend="std.Tiff">[Libtiff 4.0.2]</link></entry></row>
<row><entry>TIFFGetCloseProc<link linkend="std.Tiff">[Libtiff 4.0.2]</link></entry><entry>TIFFReverseBits<link linkend="std.Tiff">[Libtiff 4.0.2]</link></entry><entry>TIFFWriteCheck<link linkend="std.Tiff">[Libtiff 4.0.2]</link></entry></row>
<row><entry>TIFFGetConfiguredCODECs<link linkend="std.Tiff">[Libtiff 4.0.2]</link></entry><entry>TIFFRewriteDirectory<link linkend="std.Tiff">[Libtiff 4.0.2]</link></entry><entry>TIFFWriteCustomDirectory<link linkend="std.Tiff">[Libtiff 4.0.2]</link></entry></row>
<row><entry>TIFFGetField<link linkend="std.Tiff">[Libtiff 4.0.2]</link></entry><entry>TIFFScanlineSize<link linkend="std.Tiff">[Libtiff 4.0.2]</link></entry><entry>TIFFWriteDirectory<link linkend="std.Tiff">[Libtiff 4.0.2]</link></entry></row>
<row><entry>TIFFGetFieldDefaulted<link linkend="std.Tiff">[Libtiff 4.0.2]</link></entry><entry>TIFFScanlineSize64<link linkend="std.Tiff">[Libtiff 4.0.2]</link></entry><entry>TIFFWriteEncodedStrip<link linkend="std.Tiff">[Libtiff 4.0.2]</link></entry></row>
<row><entry>TIFFGetMapFileProc<link linkend="std.Tiff">[Libtiff 4.0.2]</link></entry><entry>TIFFSetClientInfo<link linkend="std.Tiff">[Libtiff 4.0.2]</link></entry><entry>TIFFWriteEncodedTile<link linkend="std.Tiff">[Libtiff 4.0.2]</link></entry></row>
<row><entry>TIFFGetMode<link linkend="std.Tiff">[Libtiff 4.0.2]</link></entry><entry>TIFFSetClientdata<link linkend="std.Tiff">[Libtiff 4.0.2]</link></entry><entry>TIFFWriteRawStrip<link linkend="std.Tiff">[Libtiff 4.0.2]</link></entry></row>
<row><entry>TIFFGetReadProc<link linkend="std.Tiff">[Libtiff 4.0.2]</link></entry><entry>TIFFSetDirectory<link linkend="std.Tiff">[Libtiff 4.0.2]</link></entry><entry>TIFFWriteRawTile<link linkend="std.Tiff">[Libtiff 4.0.2]</link></entry></row>
<row><entry>TIFFGetSeekProc<link linkend="std.Tiff">[Libtiff 4.0.2]</link></entry><entry>TIFFSetErrorHandler<link linkend="std.Tiff">[Libtiff 4.0.2]</link></entry><entry>TIFFWriteScanline<link linkend="std.Tiff">[Libtiff 4.0.2]</link></entry></row>
<row><entry>TIFFGetSizeProc<link linkend="std.Tiff">[Libtiff 4.0.2]</link></entry><entry>TIFFSetErrorHandlerExt<link linkend="std.Tiff">[Libtiff 4.0.2]</link></entry><entry>TIFFWriteTile<link linkend="std.Tiff">[Libtiff 4.0.2]</link></entry></row>
<row><entry>TIFFGetTagListCount<link linkend="std.Tiff">[Libtiff 4.0.2]</link></entry><entry>TIFFSetField<link linkend="std.Tiff">[Libtiff 4.0.2]</link></entry><entry>TIFFXYZToRGB<link linkend="std.Tiff">[Libtiff 4.0.2]</link></entry></row>
<row><entry>TIFFGetTagListEntry<link linkend="std.Tiff">[Libtiff 4.0.2]</link></entry><entry>TIFFSetFileName<link linkend="std.Tiff">[Libtiff 4.0.2]</link></entry><entry>TIFFYCbCrToRGBInit<link linkend="std.Tiff">[Libtiff 4.0.2]</link></entry></row>
<row><entry>TIFFGetUnmapFileProc<link linkend="std.Tiff">[Libtiff 4.0.2]</link></entry><entry>TIFFSetFileno<link linkend="std.Tiff">[Libtiff 4.0.2]</link></entry><entry>TIFFYCbCrtoRGB<link linkend="std.Tiff">[Libtiff 4.0.2]</link></entry></row>
<row><entry>TIFFGetVersion<link linkend="std.Tiff">[Libtiff 4.0.2]</link></entry><entry>TIFFSetMode<link linkend="std.Tiff">[Libtiff 4.0.2]</link></entry><entry></entry></row>
</tbody>
</tgroup>
</table>
</sect1>
<sect1 id=app-libxcb>
<title>libxcb</title>
<para>
</para>
<para>
The behavior of the interfaces in this library is specified by the following Standards.<simplelist columns=1>
<member>
<xref linkend="std.Libxcb"> [Libxcb 1.7]
</member>
<member>
<xref linkend="std.LSB"> [LSB]
</member>
</simplelist>
</para>
<table>
<title>libxcb Function Interfaces</title>
<tgroup cols=3>
<tbody>
<row><entry>xcb_alloc_color<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_get_input_focus<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_query_best_size_unchecked<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>xcb_alloc_color_cells<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_get_input_focus_reply<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_query_colors<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>xcb_alloc_color_cells_masks<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_get_input_focus_unchecked<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_query_colors_colors<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>xcb_alloc_color_cells_masks_end<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_get_keyboard_control<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_query_colors_colors_iterator<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>xcb_alloc_color_cells_masks_length<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_get_keyboard_control_reply<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_query_colors_colors_length<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>xcb_alloc_color_cells_pixels<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_get_keyboard_control_unchecked<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_query_colors_reply<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>xcb_alloc_color_cells_pixels_end<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_get_keyboard_mapping<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_query_colors_unchecked<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>xcb_alloc_color_cells_pixels_length<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_get_keyboard_mapping_keysyms<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_query_extension<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>xcb_alloc_color_cells_reply<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_get_keyboard_mapping_keysyms_end<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_query_extension_reply<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>xcb_alloc_color_cells_unchecked<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_get_keyboard_mapping_keysyms_length<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_query_extension_unchecked<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>xcb_alloc_color_planes<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_get_keyboard_mapping_reply<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_query_font<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>xcb_alloc_color_planes_pixels<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_get_keyboard_mapping_unchecked<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_query_font_char_infos<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>xcb_alloc_color_planes_pixels_end<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_get_maximum_request_length<link linkend="std.Libxcb">[Libxcb 1.7]</link></entry><entry>xcb_query_font_char_infos_iterator<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>xcb_alloc_color_planes_pixels_length<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_get_modifier_mapping<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_query_font_char_infos_length<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>xcb_alloc_color_planes_reply<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_get_modifier_mapping_keycodes<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_query_font_properties<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>xcb_alloc_color_planes_unchecked<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_get_modifier_mapping_keycodes_end<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_query_font_properties_iterator<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>xcb_alloc_color_reply<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_get_modifier_mapping_keycodes_length<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_query_font_properties_length<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>xcb_alloc_color_unchecked<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_get_modifier_mapping_reply<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_query_font_reply<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>xcb_alloc_named_color<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_get_modifier_mapping_unchecked<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_query_font_unchecked<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>xcb_alloc_named_color_reply<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_get_motion_events<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_query_keymap<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>xcb_alloc_named_color_unchecked<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_get_motion_events_events<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_query_keymap_reply<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>xcb_allow_events<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_get_motion_events_events_iterator<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_query_keymap_unchecked<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>xcb_allow_events_checked<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_get_motion_events_events_length<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_query_pointer<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>xcb_arc_end<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_get_motion_events_reply<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_query_pointer_reply<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>xcb_arc_next<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_get_motion_events_unchecked<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_query_pointer_unchecked<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>xcb_atom_end<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_get_pointer_control<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_query_text_extents<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>xcb_atom_next<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_get_pointer_control_reply<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_query_text_extents_reply<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>xcb_bell<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_get_pointer_control_unchecked<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_query_text_extents_unchecked<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>xcb_bell_checked<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_get_pointer_mapping<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_query_tree<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>xcb_big_requests_enable<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_get_pointer_mapping_map<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_query_tree_children<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>xcb_big_requests_enable_reply<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_get_pointer_mapping_map_end<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_query_tree_children_end<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>xcb_big_requests_enable_unchecked<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_get_pointer_mapping_map_length<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_query_tree_children_length<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>xcb_button_end<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_get_pointer_mapping_reply<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_query_tree_reply<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>xcb_button_next<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_get_pointer_mapping_unchecked<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_query_tree_unchecked<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>xcb_change_active_pointer_grab<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_get_property<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_recolor_cursor<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>xcb_change_active_pointer_grab_checked<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_get_property_reply<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_recolor_cursor_checked<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>xcb_change_gc<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_get_property_unchecked<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_rectangle_end<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>xcb_change_gc_checked<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_get_property_value<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_rectangle_next<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>xcb_change_hosts<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_get_property_value_end<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_reparent_window<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>xcb_change_hosts_checked<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_get_property_value_length<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_reparent_window_checked<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>xcb_change_keyboard_control<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_get_screen_saver<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_request_check<link linkend="std.Libxcb">[Libxcb 1.7]</link></entry></row>
<row><entry>xcb_change_keyboard_control_checked<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_get_screen_saver_reply<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_rgb_end<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>xcb_change_keyboard_mapping<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_get_screen_saver_unchecked<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_rgb_next<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>xcb_change_keyboard_mapping_checked<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_get_selection_owner<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_rotate_properties<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>xcb_change_pointer_control<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_get_selection_owner_reply<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_rotate_properties_checked<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>xcb_change_pointer_control_checked<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_get_selection_owner_unchecked<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_screen_allowed_depths_iterator<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>xcb_change_property<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_get_setup<link linkend="std.Libxcb">[Libxcb 1.7]</link></entry><entry>xcb_screen_allowed_depths_length<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>xcb_change_property_checked<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_get_window_attributes<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_screen_end<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>xcb_change_save_set<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_get_window_attributes_reply<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_screen_next<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>xcb_change_save_set_checked<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_get_window_attributes_unchecked<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_segment_end<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>xcb_change_window_attributes<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_grab_button<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_segment_next<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>xcb_change_window_attributes_checked<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_grab_button_checked<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_send_event<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>xcb_char2b_end<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_grab_key<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_send_event_checked<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>xcb_char2b_next<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_grab_key_checked<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_send_request<link linkend="std.Libxcb">[Libxcb 1.7]</link></entry></row>
<row><entry>xcb_charinfo_end<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_grab_keyboard<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_set_access_control<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>xcb_charinfo_next<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_grab_keyboard_reply<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_set_access_control_checked<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>xcb_circulate_window<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_grab_keyboard_unchecked<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_set_clip_rectangles<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>xcb_circulate_window_checked<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_grab_pointer<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_set_clip_rectangles_checked<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>xcb_clear_area<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_grab_pointer_reply<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_set_close_down_mode<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>xcb_clear_area_checked<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_grab_pointer_unchecked<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_set_close_down_mode_checked<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>xcb_client_message_data_end<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_grab_server<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_set_dashes<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>xcb_client_message_data_next<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_grab_server_checked<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_set_dashes_checked<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>xcb_close_font<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_host_address<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_set_font_path<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>xcb_close_font_checked<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_host_address_end<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_set_font_path_checked<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>xcb_coloritem_end<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_host_address_length<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_set_input_focus<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>xcb_coloritem_next<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_host_end<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_set_input_focus_checked<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>xcb_colormap_end<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_host_next<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_set_modifier_mapping<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>xcb_colormap_next<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_image_text_16<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_set_modifier_mapping_reply<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>xcb_configure_window<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_image_text_16_checked<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_set_modifier_mapping_unchecked<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>xcb_configure_window_checked<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_image_text_8<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_set_pointer_mapping<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>xcb_connect<link linkend="std.Libxcb">[Libxcb 1.7]</link></entry><entry>xcb_image_text_8_checked<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_set_pointer_mapping_reply<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>xcb_connect_to_display_with_auth_info<link linkend="std.Libxcb">[Libxcb 1.7]</link></entry><entry>xcb_install_colormap<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_set_pointer_mapping_unchecked<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>xcb_connect_to_fd<link linkend="std.Libxcb">[Libxcb 1.7]</link></entry><entry>xcb_install_colormap_checked<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_set_screen_saver<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>xcb_connection_has_error<link linkend="std.Libxcb">[Libxcb 1.7]</link></entry><entry>xcb_intern_atom<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_set_screen_saver_checked<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>xcb_convert_selection<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_intern_atom_reply<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_set_selection_owner<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>xcb_convert_selection_checked<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_intern_atom_unchecked<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_set_selection_owner_checked<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>xcb_copy_area<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_keycode_end<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_setup_authenticate_end<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>xcb_copy_area_checked<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_keycode_next<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_setup_authenticate_next<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>xcb_copy_colormap_and_free<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_keysym_end<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_setup_authenticate_reason<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>xcb_copy_colormap_and_free_checked<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_keysym_next<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_setup_authenticate_reason_end<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>xcb_copy_gc<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_kill_client<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_setup_authenticate_reason_length<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>xcb_copy_gc_checked<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_kill_client_checked<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_setup_end<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>xcb_copy_plane<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_list_extensions<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_setup_failed_end<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>xcb_copy_plane_checked<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_list_extensions_names_iterator<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_setup_failed_next<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>xcb_create_colormap<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_list_extensions_names_length<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_setup_failed_reason<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>xcb_create_colormap_checked<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_list_extensions_reply<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_setup_failed_reason_end<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>xcb_create_cursor<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_list_extensions_unchecked<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_setup_failed_reason_length<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>xcb_create_cursor_checked<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_list_fonts<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_setup_next<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>xcb_create_gc<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_list_fonts_names_iterator<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_setup_pixmap_formats<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>xcb_create_gc_checked<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_list_fonts_names_length<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_setup_pixmap_formats_iterator<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>xcb_create_glyph_cursor<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_list_fonts_reply<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_setup_pixmap_formats_length<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>xcb_create_glyph_cursor_checked<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_list_fonts_unchecked<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_setup_request_authorization_protocol_data<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>xcb_create_pixmap<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_list_fonts_with_info<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_setup_request_authorization_protocol_data_end<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>xcb_create_pixmap_checked<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_list_fonts_with_info_name<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_setup_request_authorization_protocol_data_length<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>xcb_create_window<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_list_fonts_with_info_name_end<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_setup_request_authorization_protocol_name<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>xcb_create_window_checked<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_list_fonts_with_info_name_length<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_setup_request_authorization_protocol_name_end<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>xcb_cursor_end<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_list_fonts_with_info_properties<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_setup_request_authorization_protocol_name_length<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>xcb_cursor_next<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_list_fonts_with_info_properties_iterator<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_setup_request_end<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>xcb_delete_property<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_list_fonts_with_info_properties_length<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_setup_request_next<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>xcb_delete_property_checked<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_list_fonts_with_info_reply<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_setup_roots_iterator<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>xcb_depth_end<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_list_fonts_with_info_unchecked<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_setup_roots_length<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>xcb_depth_next<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_list_hosts<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_setup_vendor<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>xcb_depth_visuals<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_list_hosts_hosts_iterator<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_setup_vendor_end<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>xcb_depth_visuals_iterator<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_list_hosts_hosts_length<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_setup_vendor_length<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>xcb_depth_visuals_length<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_list_hosts_reply<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_store_colors<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>xcb_destroy_subwindows<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_list_hosts_unchecked<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_store_colors_checked<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>xcb_destroy_subwindows_checked<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_list_installed_colormaps<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_store_named_color<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>xcb_destroy_window<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_list_installed_colormaps_cmaps<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_store_named_color_checked<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>xcb_destroy_window_checked<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_list_installed_colormaps_cmaps_end<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_str_end<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>xcb_discard_reply<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_list_installed_colormaps_cmaps_length<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_str_name<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>xcb_disconnect<link linkend="std.Libxcb">[Libxcb 1.7]</link></entry><entry>xcb_list_installed_colormaps_reply<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_str_name_end<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>xcb_drawable_end<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_list_installed_colormaps_unchecked<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_str_name_length<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>xcb_drawable_next<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_list_properties<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_str_next<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>xcb_fill_poly<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_list_properties_atoms<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_take_socket<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>xcb_fill_poly_checked<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_list_properties_atoms_end<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_timecoord_end<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>xcb_flush<link linkend="std.Libxcb">[Libxcb 1.7]</link></entry><entry>xcb_list_properties_atoms_length<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_timecoord_next<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>xcb_font_end<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_list_properties_reply<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_timestamp_end<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>xcb_font_next<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_list_properties_unchecked<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_timestamp_next<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>xcb_fontable_end<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_lookup_color<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_translate_coordinates<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>xcb_fontable_next<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_lookup_color_reply<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_translate_coordinates_reply<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>xcb_fontprop_end<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_lookup_color_unchecked<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_translate_coordinates_unchecked<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>xcb_fontprop_next<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_map_subwindows<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_ungrab_button<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>xcb_force_screen_saver<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_map_subwindows_checked<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_ungrab_button_checked<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>xcb_force_screen_saver_checked<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_map_window<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_ungrab_key<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>xcb_format_end<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_map_window_checked<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_ungrab_key_checked<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>xcb_format_next<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_no_operation<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_ungrab_keyboard<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>xcb_free_colormap<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_no_operation_checked<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_ungrab_keyboard_checked<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>xcb_free_colormap_checked<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_open_font<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_ungrab_pointer<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>xcb_free_colors<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_open_font_checked<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_ungrab_pointer_checked<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>xcb_free_colors_checked<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_parse_display<link linkend="std.Libxcb">[Libxcb 1.7]</link></entry><entry>xcb_ungrab_server<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>xcb_free_cursor<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_pixmap_end<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_ungrab_server_checked<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>xcb_free_cursor_checked<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_pixmap_next<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_uninstall_colormap<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>xcb_free_gc<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_point_end<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_uninstall_colormap_checked<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>xcb_free_gc_checked<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_point_next<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_unmap_subwindows<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>xcb_free_pixmap<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_poll_for_event<link linkend="std.Libxcb">[Libxcb 1.7]</link></entry><entry>xcb_unmap_subwindows_checked<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>xcb_free_pixmap_checked<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_poll_for_reply<link linkend="std.Libxcb">[Libxcb 1.7]</link></entry><entry>xcb_unmap_window<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>xcb_gcontext_end<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_poly_arc<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_unmap_window_checked<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>xcb_gcontext_next<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_poly_arc_checked<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_visualid_end<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>xcb_generate_id<link linkend="std.Libxcb">[Libxcb 1.7]</link></entry><entry>xcb_poly_fill_arc<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_visualid_next<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>xcb_get_atom_name<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_poly_fill_arc_checked<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_visualtype_end<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>xcb_get_atom_name_name<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_poly_fill_rectangle<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_visualtype_next<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>xcb_get_atom_name_name_end<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_poly_fill_rectangle_checked<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_wait_for_event<link linkend="std.Libxcb">[Libxcb 1.7]</link></entry></row>
<row><entry>xcb_get_atom_name_name_length<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_poly_line<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_wait_for_reply<link linkend="std.Libxcb">[Libxcb 1.7]</link></entry></row>
<row><entry>xcb_get_atom_name_reply<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_poly_line_checked<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_warp_pointer<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>xcb_get_atom_name_unchecked<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_poly_point<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_warp_pointer_checked<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>xcb_get_extension_data<link linkend="std.Libxcb">[Libxcb 1.7]</link></entry><entry>xcb_poly_point_checked<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_window_end<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>xcb_get_file_descriptor<link linkend="std.Libxcb">[Libxcb 1.7]</link></entry><entry>xcb_poly_rectangle<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_window_next<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>xcb_get_font_path<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_poly_rectangle_checked<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_writev<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>xcb_get_font_path_path_iterator<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_poly_segment<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_xc_misc_get_version<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>xcb_get_font_path_path_length<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_poly_segment_checked<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_xc_misc_get_version_reply<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>xcb_get_font_path_reply<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_poly_text_16<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_xc_misc_get_version_unchecked<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>xcb_get_font_path_unchecked<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_poly_text_16_checked<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_xc_misc_get_xid_list<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>xcb_get_geometry<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_poly_text_8<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_xc_misc_get_xid_list_ids<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>xcb_get_geometry_reply<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_poly_text_8_checked<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_xc_misc_get_xid_list_ids_end<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>xcb_get_geometry_unchecked<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_popcount<link linkend="std.Libxcb">[Libxcb 1.7]</link></entry><entry>xcb_xc_misc_get_xid_list_ids_length<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>xcb_get_image<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_prefetch_extension_data<link linkend="std.Libxcb">[Libxcb 1.7]</link></entry><entry>xcb_xc_misc_get_xid_list_reply<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>xcb_get_image_data<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_prefetch_maximum_request_length<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_xc_misc_get_xid_list_unchecked<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>xcb_get_image_data_end<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_put_image<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_xc_misc_get_xid_range<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>xcb_get_image_data_length<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_put_image_checked<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_xc_misc_get_xid_range_reply<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>xcb_get_image_reply<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_query_best_size<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_xc_misc_get_xid_range_unchecked<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>xcb_get_image_unchecked<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_query_best_size_reply<link linkend="std.LSB">[LSB]</link></entry><entry></entry></row>
</tbody>
</tgroup>
</table>
<table>
<title>libxcb Data Interfaces</title>
<tgroup cols=3>
<tbody>
<row><entry>xcb_big_requests_id<link linkend="std.LSB">[LSB]</link></entry><entry>xcb_xc_misc_id<link linkend="std.LSB">[LSB]</link></entry><entry></entry></row>
</tbody>
</tgroup>
</table>
</sect1>
<!-- End of text generated from database -->


<!-- Start of generated text - do not edit! -->
<!-- generated from the LSB specification database by mklibapnd -->
<!-- End of text generated from database -->


<!-- Start of generated text - do not edit! -->
<!-- generated from the LSB specification database by mklibapnd -->
<sect1 id=app-libQtCore>
<title>libQtCore</title>
<para>
</para>
<para>
The behavior of the interfaces in this library is specified by the following Standards.<simplelist columns=1>
<member>
<xref linkend="std.CXXABI"> [CXXABI-1.86]
</member>
<member>
<xref linkend="std.LSB"> [LSB]
</member>
<member>
<xref linkend="std.QtCore"> [QtCore]
</member>
</simplelist>
</para>
<table>
<title>libQtCore Function Interfaces</title>
<tgroup cols=3>
<tbody>
<row><entry>_Z10qvsnprintfPcjPKcS_<link linkend="std.QtCore">[QtCore]</link></entry><entry>_Z8qReallocPvj<link linkend="std.LSB">[LSB]</link></entry><entry>_ZThn8_N16QTextCodecPluginD0Ev<link linkend="std.CXXABI">[CXXABI-1.86]</link></entry></row>
<row><entry>_Z7qMallocj<link linkend="std.LSB">[LSB]</link></entry><entry>_Z9qsnprintfPcjPKcz<link linkend="std.QtCore">[QtCore]</link></entry><entry>_ZThn8_N16QTextCodecPluginD1Ev<link linkend="std.CXXABI">[CXXABI-1.86]</link></entry></row>
<row><entry>_Z7qMemSetPvij<link linkend="std.LSB">[LSB]</link></entry><entry>_ZN7QString8vsprintfEPKcPc<link linkend="std.QtCore">[QtCore]</link></entry><entry>_ZThn8_NK16QTextCodecPlugin4keysEv<link linkend="std.CXXABI">[CXXABI-1.86]</link></entry></row>
<row><entry>_Z8qMemCopyPvPKvj<link linkend="std.LSB">[LSB]</link></entry><entry>_ZThn8_N16QTextCodecPlugin6createERK7QString<link linkend="std.CXXABI">[CXXABI-1.86]</link></entry><entry></entry></row>
</tbody>
</tgroup>
</table>
</sect1>
<sect1 id=app-libQtGui>
<title>libQtGui</title>
<para>
</para>
<para>
The behavior of the interfaces in this library is specified by the following Standards.<simplelist columns=1>
<member>
<xref linkend="std.CXXABI"> [CXXABI-1.86]
</member>
</simplelist>
</para>
<table>
<title>libQtGui Function Interfaces</title>
<tgroup cols=3>
<tbody>
<row><entry>_ZThn12_N10QDropEventD0Ev<link linkend="std.CXXABI">[CXXABI-1.86]</link></entry><entry>_ZThn8_N12QTextBrowserD1Ev<link linkend="std.CXXABI">[CXXABI-1.86]</link></entry><entry>_ZThn8_N6QLabelD0Ev<link linkend="std.CXXABI">[CXXABI-1.86]</link></entry></row>
<row><entry>_ZThn12_N10QDropEventD1Ev<link linkend="std.CXXABI">[CXXABI-1.86]</link></entry><entry>_ZThn8_N13QErrorMessageD0Ev<link linkend="std.CXXABI">[CXXABI-1.86]</link></entry><entry>_ZThn8_N6QLabelD1Ev<link linkend="std.CXXABI">[CXXABI-1.86]</link></entry></row>
<row><entry>_ZThn12_N14QDragMoveEventD0Ev<link linkend="std.CXXABI">[CXXABI-1.86]</link></entry><entry>_ZThn8_N13QErrorMessageD1Ev<link linkend="std.CXXABI">[CXXABI-1.86]</link></entry><entry>_ZThn8_N7QDialogD0Ev<link linkend="std.CXXABI">[CXXABI-1.86]</link></entry></row>
<row><entry>_ZThn12_N14QDragMoveEventD1Ev<link linkend="std.CXXABI">[CXXABI-1.86]</link></entry><entry>_ZThn8_N13QSplashScreenD0Ev<link linkend="std.CXXABI">[CXXABI-1.86]</link></entry><entry>_ZThn8_N7QDialogD1Ev<link linkend="std.CXXABI">[CXXABI-1.86]</link></entry></row>
<row><entry>_ZThn12_N15QDragEnterEventD0Ev<link linkend="std.CXXABI">[CXXABI-1.86]</link></entry><entry>_ZThn8_N13QSplashScreenD1Ev<link linkend="std.CXXABI">[CXXABI-1.86]</link></entry><entry>_ZThn8_N7QLayout10invalidateEv<link linkend="std.CXXABI">[CXXABI-1.86]</link></entry></row>
<row><entry>_ZThn12_N15QDragEnterEventD1Ev<link linkend="std.CXXABI">[CXXABI-1.86]</link></entry><entry>_ZThn8_N14QDesktopWidgetD0Ev<link linkend="std.CXXABI">[CXXABI-1.86]</link></entry><entry>_ZThn8_N7QLayout6layoutEv<link linkend="std.CXXABI">[CXXABI-1.86]</link></entry></row>
<row><entry>_ZThn12_NK10QDropEvent11encodedDataEPKc<link linkend="std.CXXABI">[CXXABI-1.86]</link></entry><entry>_ZThn8_N14QDesktopWidgetD1Ev<link linkend="std.CXXABI">[CXXABI-1.86]</link></entry><entry>_ZThn8_N7QLayoutD0Ev<link linkend="std.CXXABI">[CXXABI-1.86]</link></entry></row>
<row><entry>_ZThn12_NK10QDropEvent6formatEi<link linkend="std.CXXABI">[CXXABI-1.86]</link></entry><entry>_ZThn8_N14QImageIOPluginD0Ev<link linkend="std.CXXABI">[CXXABI-1.86]</link></entry><entry>_ZThn8_N7QLayoutD1Ev<link linkend="std.CXXABI">[CXXABI-1.86]</link></entry></row>
<row><entry>_ZThn12_NK10QDropEvent8providesEPKc<link linkend="std.CXXABI">[CXXABI-1.86]</link></entry><entry>_ZThn8_N14QImageIOPluginD1Ev<link linkend="std.CXXABI">[CXXABI-1.86]</link></entry><entry>_ZThn8_N7QSliderD0Ev<link linkend="std.CXXABI">[CXXABI-1.86]</link></entry></row>
<row><entry>_ZThn8_N10QBoxLayout10invalidateEv<link linkend="std.CXXABI">[CXXABI-1.86]</link></entry><entry>_ZThn8_N14QStackedLayout11setGeometryERK5QRect<link linkend="std.CXXABI">[CXXABI-1.86]</link></entry><entry>_ZThn8_N7QSliderD1Ev<link linkend="std.CXXABI">[CXXABI-1.86]</link></entry></row>
<row><entry>_ZThn8_N10QBoxLayout11setGeometryERK5QRect<link linkend="std.CXXABI">[CXXABI-1.86]</link></entry><entry>_ZThn8_N14QStackedLayoutD0Ev<link linkend="std.CXXABI">[CXXABI-1.86]</link></entry><entry>_ZThn8_N7QTabBarD0Ev<link linkend="std.CXXABI">[CXXABI-1.86]</link></entry></row>
<row><entry>_ZThn8_N10QBoxLayoutD0Ev<link linkend="std.CXXABI">[CXXABI-1.86]</link></entry><entry>_ZThn8_N14QStackedLayoutD1Ev<link linkend="std.CXXABI">[CXXABI-1.86]</link></entry><entry>_ZThn8_N7QTabBarD1Ev<link linkend="std.CXXABI">[CXXABI-1.86]</link></entry></row>
<row><entry>_ZThn8_N10QBoxLayoutD1Ev<link linkend="std.CXXABI">[CXXABI-1.86]</link></entry><entry>_ZThn8_N14QStackedWidgetD0Ev<link linkend="std.CXXABI">[CXXABI-1.86]</link></entry><entry>_ZThn8_N7QWidgetD0Ev<link linkend="std.CXXABI">[CXXABI-1.86]</link></entry></row>
<row><entry>_ZThn8_N10QLCDNumberD0Ev<link linkend="std.CXXABI">[CXXABI-1.86]</link></entry><entry>_ZThn8_N14QStackedWidgetD1Ev<link linkend="std.CXXABI">[CXXABI-1.86]</link></entry><entry>_ZThn8_N7QWidgetD1Ev<link linkend="std.CXXABI">[CXXABI-1.86]</link></entry></row>
<row><entry>_ZThn8_N10QLCDNumberD1Ev<link linkend="std.CXXABI">[CXXABI-1.86]</link></entry><entry>_ZThn8_N15QAbstractButtonD0Ev<link linkend="std.CXXABI">[CXXABI-1.86]</link></entry><entry>_ZThn8_N8QMenuBarD0Ev<link linkend="std.CXXABI">[CXXABI-1.86]</link></entry></row>
<row><entry>_ZThn8_N10QScrollBarD0Ev<link linkend="std.CXXABI">[CXXABI-1.86]</link></entry><entry>_ZThn8_N15QAbstractButtonD1Ev<link linkend="std.CXXABI">[CXXABI-1.86]</link></entry><entry>_ZThn8_N8QMenuBarD1Ev<link linkend="std.CXXABI">[CXXABI-1.86]</link></entry></row>
<row><entry>_ZThn8_N10QScrollBarD1Ev<link linkend="std.CXXABI">[CXXABI-1.86]</link></entry><entry>_ZThn8_N15QAbstractSliderD0Ev<link linkend="std.CXXABI">[CXXABI-1.86]</link></entry><entry>_ZThn8_N8QToolBarD0Ev<link linkend="std.CXXABI">[CXXABI-1.86]</link></entry></row>
<row><entry>_ZThn8_N10QStatusBarD0Ev<link linkend="std.CXXABI">[CXXABI-1.86]</link></entry><entry>_ZThn8_N15QAbstractSliderD1Ev<link linkend="std.CXXABI">[CXXABI-1.86]</link></entry><entry>_ZThn8_N8QToolBarD1Ev<link linkend="std.CXXABI">[CXXABI-1.86]</link></entry></row>
<row><entry>_ZThn8_N10QStatusBarD1Ev<link linkend="std.CXXABI">[CXXABI-1.86]</link></entry><entry>_ZThn8_N15QProgressDialogD0Ev<link linkend="std.CXXABI">[CXXABI-1.86]</link></entry><entry>_ZThn8_N8QToolBoxD0Ev<link linkend="std.CXXABI">[CXXABI-1.86]</link></entry></row>
<row><entry>_ZThn8_N10QTabWidgetD0Ev<link linkend="std.CXXABI">[CXXABI-1.86]</link></entry><entry>_ZThn8_N15QProgressDialogD1Ev<link linkend="std.CXXABI">[CXXABI-1.86]</link></entry><entry>_ZThn8_N8QToolBoxD1Ev<link linkend="std.CXXABI">[CXXABI-1.86]</link></entry></row>
<row><entry>_ZThn8_N10QTabWidgetD1Ev<link linkend="std.CXXABI">[CXXABI-1.86]</link></entry><entry>_ZThn8_N15QX11EmbedWidgetD0Ev<link linkend="std.CXXABI">[CXXABI-1.86]</link></entry><entry>_ZThn8_N9QComboBoxD0Ev<link linkend="std.CXXABI">[CXXABI-1.86]</link></entry></row>
<row><entry>_ZThn8_N10QTableViewD0Ev<link linkend="std.CXXABI">[CXXABI-1.86]</link></entry><entry>_ZThn8_N15QX11EmbedWidgetD1Ev<link linkend="std.CXXABI">[CXXABI-1.86]</link></entry><entry>_ZThn8_N9QComboBoxD1Ev<link linkend="std.CXXABI">[CXXABI-1.86]</link></entry></row>
<row><entry>_ZThn8_N10QTableViewD1Ev<link linkend="std.CXXABI">[CXXABI-1.86]</link></entry><entry>_ZThn8_N16QAbstractSpinBoxD0Ev<link linkend="std.CXXABI">[CXXABI-1.86]</link></entry><entry>_ZThn8_N9QGroupBoxD0Ev<link linkend="std.CXXABI">[CXXABI-1.86]</link></entry></row>
<row><entry>_ZThn8_N10QWorkspaceD0Ev<link linkend="std.CXXABI">[CXXABI-1.86]</link></entry><entry>_ZThn8_N16QAbstractSpinBoxD1Ev<link linkend="std.CXXABI">[CXXABI-1.86]</link></entry><entry>_ZThn8_N9QGroupBoxD1Ev<link linkend="std.CXXABI">[CXXABI-1.86]</link></entry></row>
<row><entry>_ZThn8_N10QWorkspaceD1Ev<link linkend="std.CXXABI">[CXXABI-1.86]</link></entry><entry>_ZThn8_N17QAbstractItemViewD0Ev<link linkend="std.CXXABI">[CXXABI-1.86]</link></entry><entry>_ZThn8_N9QLineEditD0Ev<link linkend="std.CXXABI">[CXXABI-1.86]</link></entry></row>
<row><entry>_ZThn8_N11QDockWidgetD0Ev<link linkend="std.CXXABI">[CXXABI-1.86]</link></entry><entry>_ZThn8_N17QAbstractItemViewD1Ev<link linkend="std.CXXABI">[CXXABI-1.86]</link></entry><entry>_ZThn8_N9QLineEditD1Ev<link linkend="std.CXXABI">[CXXABI-1.86]</link></entry></row>
<row><entry>_ZThn8_N11QDockWidgetD1Ev<link linkend="std.CXXABI">[CXXABI-1.86]</link></entry><entry>_ZThn8_N17QAccessiblePluginD0Ev<link linkend="std.CXXABI">[CXXABI-1.86]</link></entry><entry>_ZThn8_N9QListViewD0Ev<link linkend="std.CXXABI">[CXXABI-1.86]</link></entry></row>
<row><entry>_ZThn8_N11QFileDialogD0Ev<link linkend="std.CXXABI">[CXXABI-1.86]</link></entry><entry>_ZThn8_N17QAccessiblePluginD1Ev<link linkend="std.CXXABI">[CXXABI-1.86]</link></entry><entry>_ZThn8_N9QListViewD1Ev<link linkend="std.CXXABI">[CXXABI-1.86]</link></entry></row>
<row><entry>_ZThn8_N11QFileDialogD1Ev<link linkend="std.CXXABI">[CXXABI-1.86]</link></entry><entry>_ZThn8_N17QGraphicsTextItem10sceneEventEP6QEvent<link linkend="std.CXXABI">[CXXABI-1.86]</link></entry><entry>_ZThn8_N9QSizeGripD0Ev<link linkend="std.CXXABI">[CXXABI-1.86]</link></entry></row>
<row><entry>_ZThn8_N11QFocusFrameD0Ev<link linkend="std.CXXABI">[CXXABI-1.86]</link></entry><entry>_ZThn8_N17QGraphicsTextItem12focusInEventEP11QFocusEvent<link linkend="std.CXXABI">[CXXABI-1.86]</link></entry><entry>_ZThn8_N9QSizeGripD1Ev<link linkend="std.CXXABI">[CXXABI-1.86]</link></entry></row>
<row><entry>_ZThn8_N11QFocusFrameD1Ev<link linkend="std.CXXABI">[CXXABI-1.86]</link></entry><entry>_ZThn8_N17QGraphicsTextItem12setExtensionEN13QGraphicsItem9ExtensionERK8QVariant<link linkend="std.CXXABI">[CXXABI-1.86]</link></entry><entry>_ZThn8_N9QSplitterD0Ev<link linkend="std.CXXABI">[CXXABI-1.86]</link></entry></row>
<row><entry>_ZThn8_N11QFontDialogD0Ev<link linkend="std.CXXABI">[CXXABI-1.86]</link></entry><entry>_ZThn8_N17QGraphicsTextItem13dragMoveEventEP27QGraphicsSceneDragDropEvent<link linkend="std.CXXABI">[CXXABI-1.86]</link></entry><entry>_ZThn8_N9QSplitterD1Ev<link linkend="std.CXXABI">[CXXABI-1.86]</link></entry></row>
<row><entry>_ZThn8_N11QFontDialogD1Ev<link linkend="std.CXXABI">[CXXABI-1.86]</link></entry><entry>_ZThn8_N17QGraphicsTextItem13focusOutEventEP11QFocusEvent<link linkend="std.CXXABI">[CXXABI-1.86]</link></entry><entry>_ZThn8_N9QTextEditD0Ev<link linkend="std.CXXABI">[CXXABI-1.86]</link></entry></row>
<row><entry>_ZThn8_N11QGridLayout10invalidateEv<link linkend="std.CXXABI">[CXXABI-1.86]</link></entry><entry>_ZThn8_N17QGraphicsTextItem13keyPressEventEP9QKeyEvent<link linkend="std.CXXABI">[CXXABI-1.86]</link></entry><entry>_ZThn8_N9QTextEditD1Ev<link linkend="std.CXXABI">[CXXABI-1.86]</link></entry></row>
<row><entry>_ZThn8_N11QGridLayout11setGeometryERK5QRect<link linkend="std.CXXABI">[CXXABI-1.86]</link></entry><entry>_ZThn8_N17QGraphicsTextItem14dragEnterEventEP27QGraphicsSceneDragDropEvent<link linkend="std.CXXABI">[CXXABI-1.86]</link></entry><entry>_ZThn8_N9QTreeViewD0Ev<link linkend="std.CXXABI">[CXXABI-1.86]</link></entry></row>
<row><entry>_ZThn8_N11QGridLayoutD0Ev<link linkend="std.CXXABI">[CXXABI-1.86]</link></entry><entry>_ZThn8_N17QGraphicsTextItem14dragLeaveEventEP27QGraphicsSceneDragDropEvent<link linkend="std.CXXABI">[CXXABI-1.86]</link></entry><entry>_ZThn8_N9QTreeViewD1Ev<link linkend="std.CXXABI">[CXXABI-1.86]</link></entry></row>
<row><entry>_ZThn8_N11QGridLayoutD1Ev<link linkend="std.CXXABI">[CXXABI-1.86]</link></entry><entry>_ZThn8_N17QGraphicsTextItem14hoverMoveEventEP24QGraphicsSceneHoverEvent<link linkend="std.CXXABI">[CXXABI-1.86]</link></entry><entry>_ZThn8_NK10QBoxLayout11maximumSizeEv<link linkend="std.CXXABI">[CXXABI-1.86]</link></entry></row>
<row><entry>_ZThn8_N11QHBoxLayoutD0Ev<link linkend="std.CXXABI">[CXXABI-1.86]</link></entry><entry>_ZThn8_N17QGraphicsTextItem14mouseMoveEventEP24QGraphicsSceneMouseEvent<link linkend="std.CXXABI">[CXXABI-1.86]</link></entry><entry>_ZThn8_NK10QBoxLayout11minimumSizeEv<link linkend="std.CXXABI">[CXXABI-1.86]</link></entry></row>
<row><entry>_ZThn8_N11QHBoxLayoutD1Ev<link linkend="std.CXXABI">[CXXABI-1.86]</link></entry><entry>_ZThn8_N17QGraphicsTextItem15hoverEnterEventEP24QGraphicsSceneHoverEvent<link linkend="std.CXXABI">[CXXABI-1.86]</link></entry><entry>_ZThn8_NK10QBoxLayout14heightForWidthEi<link linkend="std.CXXABI">[CXXABI-1.86]</link></entry></row>
<row><entry>_ZThn8_N11QHeaderViewD0Ev<link linkend="std.CXXABI">[CXXABI-1.86]</link></entry><entry>_ZThn8_N17QGraphicsTextItem15hoverLeaveEventEP24QGraphicsSceneHoverEvent<link linkend="std.CXXABI">[CXXABI-1.86]</link></entry><entry>_ZThn8_NK10QBoxLayout17hasHeightForWidthEv<link linkend="std.CXXABI">[CXXABI-1.86]</link></entry></row>
<row><entry>_ZThn8_N11QHeaderViewD1Ev<link linkend="std.CXXABI">[CXXABI-1.86]</link></entry><entry>_ZThn8_N17QGraphicsTextItem15keyReleaseEventEP9QKeyEvent<link linkend="std.CXXABI">[CXXABI-1.86]</link></entry><entry>_ZThn8_NK10QBoxLayout19expandingDirectionsEv<link linkend="std.CXXABI">[CXXABI-1.86]</link></entry></row>
<row><entry>_ZThn8_N11QListWidgetD0Ev<link linkend="std.CXXABI">[CXXABI-1.86]</link></entry><entry>_ZThn8_N17QGraphicsTextItem15mousePressEventEP24QGraphicsSceneMouseEvent<link linkend="std.CXXABI">[CXXABI-1.86]</link></entry><entry>_ZThn8_NK10QBoxLayout21minimumHeightForWidthEi<link linkend="std.CXXABI">[CXXABI-1.86]</link></entry></row>
<row><entry>_ZThn8_N11QListWidgetD1Ev<link linkend="std.CXXABI">[CXXABI-1.86]</link></entry><entry>_ZThn8_N17QGraphicsTextItem16contextMenuEventEP30QGraphicsSceneContextMenuEvent<link linkend="std.CXXABI">[CXXABI-1.86]</link></entry><entry>_ZThn8_NK10QBoxLayout8sizeHintEv<link linkend="std.CXXABI">[CXXABI-1.86]</link></entry></row>
<row><entry>_ZThn8_N11QMainWindowD0Ev<link linkend="std.CXXABI">[CXXABI-1.86]</link></entry><entry>_ZThn8_N17QGraphicsTextItem16inputMethodEventEP17QInputMethodEvent<link linkend="std.CXXABI">[CXXABI-1.86]</link></entry><entry>_ZThn8_NK11QGridLayout11maximumSizeEv<link linkend="std.CXXABI">[CXXABI-1.86]</link></entry></row>
<row><entry>_ZThn8_N11QMainWindowD1Ev<link linkend="std.CXXABI">[CXXABI-1.86]</link></entry><entry>_ZThn8_N17QGraphicsTextItem17mouseReleaseEventEP24QGraphicsSceneMouseEvent<link linkend="std.CXXABI">[CXXABI-1.86]</link></entry><entry>_ZThn8_NK11QGridLayout11minimumSizeEv<link linkend="std.CXXABI">[CXXABI-1.86]</link></entry></row>
<row><entry>_ZThn8_N11QMessageBoxD0Ev<link linkend="std.CXXABI">[CXXABI-1.86]</link></entry><entry>_ZThn8_N17QGraphicsTextItem21mouseDoubleClickEventEP24QGraphicsSceneMouseEvent<link linkend="std.CXXABI">[CXXABI-1.86]</link></entry><entry>_ZThn8_NK11QGridLayout14heightForWidthEi<link linkend="std.CXXABI">[CXXABI-1.86]</link></entry></row>
<row><entry>_ZThn8_N11QMessageBoxD1Ev<link linkend="std.CXXABI">[CXXABI-1.86]</link></entry><entry>_ZThn8_N17QGraphicsTextItem5paintEP8QPainterPK24QStyleOptionGraphicsItemP7QWidget<link linkend="std.CXXABI">[CXXABI-1.86]</link></entry><entry>_ZThn8_NK11QGridLayout17hasHeightForWidthEv<link linkend="std.CXXABI">[CXXABI-1.86]</link></entry></row>
<row><entry>_ZThn8_N11QPushButtonD0Ev<link linkend="std.CXXABI">[CXXABI-1.86]</link></entry><entry>_ZThn8_N17QGraphicsTextItem9dropEventEP27QGraphicsSceneDragDropEvent<link linkend="std.CXXABI">[CXXABI-1.86]</link></entry><entry>_ZThn8_NK11QGridLayout19expandingDirectionsEv<link linkend="std.CXXABI">[CXXABI-1.86]</link></entry></row>
<row><entry>_ZThn8_N11QPushButtonD1Ev<link linkend="std.CXXABI">[CXXABI-1.86]</link></entry><entry>_ZThn8_N17QGraphicsTextItemD0Ev<link linkend="std.CXXABI">[CXXABI-1.86]</link></entry><entry>_ZThn8_NK11QGridLayout21minimumHeightForWidthEi<link linkend="std.CXXABI">[CXXABI-1.86]</link></entry></row>
<row><entry>_ZThn8_N11QRubberBandD0Ev<link linkend="std.CXXABI">[CXXABI-1.86]</link></entry><entry>_ZThn8_N17QGraphicsTextItemD1Ev<link linkend="std.CXXABI">[CXXABI-1.86]</link></entry><entry>_ZThn8_NK11QGridLayout8sizeHintEv<link linkend="std.CXXABI">[CXXABI-1.86]</link></entry></row>
<row><entry>_ZThn8_N11QRubberBandD1Ev<link linkend="std.CXXABI">[CXXABI-1.86]</link></entry><entry>_ZThn8_N17QIconEnginePluginD0Ev<link linkend="std.CXXABI">[CXXABI-1.86]</link></entry><entry>_ZThn8_NK14QStackedLayout11minimumSizeEv<link linkend="std.CXXABI">[CXXABI-1.86]</link></entry></row>
<row><entry>_ZThn8_N11QScrollAreaD0Ev<link linkend="std.CXXABI">[CXXABI-1.86]</link></entry><entry>_ZThn8_N17QIconEnginePluginD1Ev<link linkend="std.CXXABI">[CXXABI-1.86]</link></entry><entry>_ZThn8_NK14QStackedLayout8sizeHintEv<link linkend="std.CXXABI">[CXXABI-1.86]</link></entry></row>
<row><entry>_ZThn8_N11QScrollAreaD1Ev<link linkend="std.CXXABI">[CXXABI-1.86]</link></entry><entry>_ZThn8_N18QX11EmbedContainerD0Ev<link linkend="std.CXXABI">[CXXABI-1.86]</link></entry><entry>_ZThn8_NK17QGraphicsTextItem10opaqueAreaEv<link linkend="std.CXXABI">[CXXABI-1.86]</link></entry></row>
<row><entry>_ZThn8_N11QToolButtonD0Ev<link linkend="std.CXXABI">[CXXABI-1.86]</link></entry><entry>_ZThn8_N18QX11EmbedContainerD1Ev<link linkend="std.CXXABI">[CXXABI-1.86]</link></entry><entry>_ZThn8_NK17QGraphicsTextItem12boundingRectEv<link linkend="std.CXXABI">[CXXABI-1.86]</link></entry></row>
<row><entry>_ZThn8_N11QToolButtonD1Ev<link linkend="std.CXXABI">[CXXABI-1.86]</link></entry><entry>_ZThn8_N19QAbstractScrollAreaD0Ev<link linkend="std.CXXABI">[CXXABI-1.86]</link></entry><entry>_ZThn8_NK17QGraphicsTextItem12isObscuredByEPK13QGraphicsItem<link linkend="std.CXXABI">[CXXABI-1.86]</link></entry></row>
<row><entry>_ZThn8_N11QTreeWidgetD0Ev<link linkend="std.CXXABI">[CXXABI-1.86]</link></entry><entry>_ZThn8_N19QAbstractScrollAreaD1Ev<link linkend="std.CXXABI">[CXXABI-1.86]</link></entry><entry>_ZThn8_NK17QGraphicsTextItem16inputMethodQueryEN2Qt16InputMethodQueryE<link linkend="std.CXXABI">[CXXABI-1.86]</link></entry></row>
<row><entry>_ZThn8_N11QTreeWidgetD1Ev<link linkend="std.CXXABI">[CXXABI-1.86]</link></entry><entry>_ZThn8_N19QInputContextPluginD0Ev<link linkend="std.CXXABI">[CXXABI-1.86]</link></entry><entry>_ZThn8_NK17QGraphicsTextItem17supportsExtensionEN13QGraphicsItem9ExtensionE<link linkend="std.CXXABI">[CXXABI-1.86]</link></entry></row>
<row><entry>_ZThn8_N11QVBoxLayoutD0Ev<link linkend="std.CXXABI">[CXXABI-1.86]</link></entry><entry>_ZThn8_N19QInputContextPluginD1Ev<link linkend="std.CXXABI">[CXXABI-1.86]</link></entry><entry>_ZThn8_NK17QGraphicsTextItem4typeEv<link linkend="std.CXXABI">[CXXABI-1.86]</link></entry></row>
<row><entry>_ZThn8_N11QVBoxLayoutD1Ev<link linkend="std.CXXABI">[CXXABI-1.86]</link></entry><entry>_ZThn8_N20QPictureFormatPlugin11loadPictureERK7QStringS2_P8QPicture<link linkend="std.CXXABI">[CXXABI-1.86]</link></entry><entry>_ZThn8_NK17QGraphicsTextItem5shapeEv<link linkend="std.CXXABI">[CXXABI-1.86]</link></entry></row>
<row><entry>_ZThn8_N12QColorDialogD0Ev<link linkend="std.CXXABI">[CXXABI-1.86]</link></entry><entry>_ZThn8_N20QPictureFormatPlugin11savePictureERK7QStringS2_RK8QPicture<link linkend="std.CXXABI">[CXXABI-1.86]</link></entry><entry>_ZThn8_NK17QGraphicsTextItem8containsERK7QPointF<link linkend="std.CXXABI">[CXXABI-1.86]</link></entry></row>
<row><entry>_ZThn8_N12QColorDialogD1Ev<link linkend="std.CXXABI">[CXXABI-1.86]</link></entry><entry>_ZThn8_N20QPictureFormatPluginD0Ev<link linkend="std.CXXABI">[CXXABI-1.86]</link></entry><entry>_ZThn8_NK17QGraphicsTextItem9extensionERK8QVariant<link linkend="std.CXXABI">[CXXABI-1.86]</link></entry></row>
<row><entry>_ZThn8_N12QInputDialogD0Ev<link linkend="std.CXXABI">[CXXABI-1.86]</link></entry><entry>_ZThn8_N20QPictureFormatPluginD1Ev<link linkend="std.CXXABI">[CXXABI-1.86]</link></entry><entry>_ZThn8_NK7QLayout11maximumSizeEv<link linkend="std.CXXABI">[CXXABI-1.86]</link></entry></row>
<row><entry>_ZThn8_N12QInputDialogD1Ev<link linkend="std.CXXABI">[CXXABI-1.86]</link></entry><entry>_ZThn8_N23QAccessibleBridgePluginD0Ev<link linkend="std.CXXABI">[CXXABI-1.86]</link></entry><entry>_ZThn8_NK7QLayout11minimumSizeEv<link linkend="std.CXXABI">[CXXABI-1.86]</link></entry></row>
<row><entry>_ZThn8_N12QPrintDialogD0Ev<link linkend="std.CXXABI">[CXXABI-1.86]</link></entry><entry>_ZThn8_N23QAccessibleBridgePluginD1Ev<link linkend="std.CXXABI">[CXXABI-1.86]</link></entry><entry>_ZThn8_NK7QLayout19expandingDirectionsEv<link linkend="std.CXXABI">[CXXABI-1.86]</link></entry></row>
<row><entry>_ZThn8_N12QPrintDialogD1Ev<link linkend="std.CXXABI">[CXXABI-1.86]</link></entry><entry>_ZThn8_N5QDialD0Ev<link linkend="std.CXXABI">[CXXABI-1.86]</link></entry><entry>_ZThn8_NK7QLayout7isEmptyEv<link linkend="std.CXXABI">[CXXABI-1.86]</link></entry></row>
<row><entry>_ZThn8_N12QStylePluginD0Ev<link linkend="std.CXXABI">[CXXABI-1.86]</link></entry><entry>_ZThn8_N5QDialD1Ev<link linkend="std.CXXABI">[CXXABI-1.86]</link></entry><entry>_ZThn8_NK7QLayout8geometryEv<link linkend="std.CXXABI">[CXXABI-1.86]</link></entry></row>
<row><entry>_ZThn8_N12QStylePluginD1Ev<link linkend="std.CXXABI">[CXXABI-1.86]</link></entry><entry>_ZThn8_N5QMenuD0Ev<link linkend="std.CXXABI">[CXXABI-1.86]</link></entry><entry>_ZThn8_NK7QWidget11paintEngineEv<link linkend="std.CXXABI">[CXXABI-1.86]</link></entry></row>
<row><entry>_ZThn8_N12QTableWidgetD0Ev<link linkend="std.CXXABI">[CXXABI-1.86]</link></entry><entry>_ZThn8_N5QMenuD1Ev<link linkend="std.CXXABI">[CXXABI-1.86]</link></entry><entry>_ZThn8_NK7QWidget6metricEN12QPaintDevice17PaintDeviceMetricE<link linkend="std.CXXABI">[CXXABI-1.86]</link></entry></row>
<row><entry>_ZThn8_N12QTableWidgetD1Ev<link linkend="std.CXXABI">[CXXABI-1.86]</link></entry><entry>_ZThn8_N6QFrameD0Ev<link linkend="std.CXXABI">[CXXABI-1.86]</link></entry><entry>_ZThn8_NK7QWidget7devTypeEv<link linkend="std.CXXABI">[CXXABI-1.86]</link></entry></row>
<row><entry>_ZThn8_N12QTextBrowserD0Ev<link linkend="std.CXXABI">[CXXABI-1.86]</link></entry><entry>_ZThn8_N6QFrameD1Ev<link linkend="std.CXXABI">[CXXABI-1.86]</link></entry><entry></entry></row>
</tbody>
</tgroup>
</table>
</sect1>
<sect1 id=app-libQtOpenGL>
<title>libQtOpenGL</title>
<para>
</para>
<para>
The behavior of the interfaces in this library is specified by the following Standards.<simplelist columns=1>
<member>
<xref linkend="std.CXXABI"> [CXXABI-1.86]
</member>
</simplelist>
</para>
<table>
<title>libQtOpenGL Function Interfaces</title>
<tgroup cols=3>
<tbody>
<row><entry>_ZThn8_N9QGLWidgetD0Ev<link linkend="std.CXXABI">[CXXABI-1.86]</link></entry><entry>_ZThn8_N9QGLWidgetD1Ev<link linkend="std.CXXABI">[CXXABI-1.86]</link></entry><entry>_ZThn8_NK9QGLWidget11paintEngineEv<link linkend="std.CXXABI">[CXXABI-1.86]</link></entry></row>
</tbody>
</tgroup>
</table>
</sect1>
<sect1 id=app-libQtSql>
<title>libQtSql</title>
<para>
</para>
<para>
The behavior of the interfaces in this library is specified by the following Standards.<simplelist columns=1>
<member>
<xref linkend="std.CXXABI"> [CXXABI-1.86]
</member>
</simplelist>
</para>
<table>
<title>libQtSql Function Interfaces</title>
<tgroup cols=3>
<tbody>
<row><entry>_ZThn8_N16QSqlDriverPluginD0Ev<link linkend="std.CXXABI">[CXXABI-1.86]</link></entry><entry>_ZThn8_N16QSqlDriverPluginD1Ev<link linkend="std.CXXABI">[CXXABI-1.86]</link></entry><entry></entry></row>
</tbody>
</tgroup>
</table>
</sect1>
<sect1 id=app-libQtSvg>
<title>libQtSvg</title>
<para>
</para>
<para>
The behavior of the interfaces in this library is specified by the following Standards.<simplelist columns=1>
<member>
<xref linkend="std.CXXABI"> [CXXABI-1.86]
</member>
</simplelist>
</para>
<table>
<title>libQtSvg Function Interfaces</title>
<tgroup cols=3>
<tbody>
<row><entry>_ZThn8_N10QSvgWidgetD0Ev<link linkend="std.CXXABI">[CXXABI-1.86]</link></entry><entry>_ZThn8_N16QGraphicsSvgItem5paintEP8QPainterPK24QStyleOptionGraphicsItemP7QWidget<link linkend="std.CXXABI">[CXXABI-1.86]</link></entry><entry>_ZThn8_NK16QGraphicsSvgItem4typeEv<link linkend="std.CXXABI">[CXXABI-1.86]</link></entry></row>
<row><entry>_ZThn8_N10QSvgWidgetD1Ev<link linkend="std.CXXABI">[CXXABI-1.86]</link></entry><entry>_ZThn8_NK16QGraphicsSvgItem12boundingRectEv<link linkend="std.CXXABI">[CXXABI-1.86]</link></entry><entry></entry></row>
</tbody>
</tgroup>
</table>
</sect1>
<sect1 id=app-libQtXml>
<title>libQtXml</title>
<para>
</para>
<para>
The behavior of the interfaces in this library is specified by the following Standards.<simplelist columns=1>
<member>
<xref linkend="std.CXXABI"> [CXXABI-1.86]
</member>
</simplelist>
</para>
<table>
<title>libQtXml Function Interfaces</title>
<tgroup cols=3>
<tbody>
<row><entry>_ZThn12_N18QXmlDefaultHandler13resolveEntityERK7QStringS2_RP15QXmlInputSource<link linkend="std.CXXABI">[CXXABI-1.86]</link></entry><entry>_ZThn16_N18QXmlDefaultHandler8startDTDERK7QStringS2_S2_<link linkend="std.CXXABI">[CXXABI-1.86]</link></entry><entry>_ZThn4_N18QXmlDefaultHandler10fatalErrorERK18QXmlParseException<link linkend="std.CXXABI">[CXXABI-1.86]</link></entry></row>
<row><entry>_ZThn12_NK18QXmlDefaultHandler11errorStringEv<link linkend="std.CXXABI">[CXXABI-1.86]</link></entry><entry>_ZThn16_N18QXmlDefaultHandler9endEntityERK7QString<link linkend="std.CXXABI">[CXXABI-1.86]</link></entry><entry>_ZThn4_N18QXmlDefaultHandler5errorERK18QXmlParseException<link linkend="std.CXXABI">[CXXABI-1.86]</link></entry></row>
<row><entry>_ZThn16_N18QXmlDefaultHandler10startCDATAEv<link linkend="std.CXXABI">[CXXABI-1.86]</link></entry><entry>_ZThn16_NK18QXmlDefaultHandler11errorStringEv<link linkend="std.CXXABI">[CXXABI-1.86]</link></entry><entry>_ZThn4_N18QXmlDefaultHandler7warningERK18QXmlParseException<link linkend="std.CXXABI">[CXXABI-1.86]</link></entry></row>
<row><entry>_ZThn16_N18QXmlDefaultHandler11startEntityERK7QString<link linkend="std.CXXABI">[CXXABI-1.86]</link></entry><entry>_ZThn20_N18QXmlDefaultHandler13attributeDeclERK7QStringS2_S2_S2_S2_<link linkend="std.CXXABI">[CXXABI-1.86]</link></entry><entry>_ZThn4_NK18QXmlDefaultHandler11errorStringEv<link linkend="std.CXXABI">[CXXABI-1.86]</link></entry></row>
<row><entry>_ZThn16_N18QXmlDefaultHandler6endDTDEv<link linkend="std.CXXABI">[CXXABI-1.86]</link></entry><entry>_ZThn20_N18QXmlDefaultHandler18externalEntityDeclERK7QStringS2_S2_<link linkend="std.CXXABI">[CXXABI-1.86]</link></entry><entry>_ZThn8_N18QXmlDefaultHandler12notationDeclERK7QStringS2_S2_<link linkend="std.CXXABI">[CXXABI-1.86]</link></entry></row>
<row><entry>_ZThn16_N18QXmlDefaultHandler7commentERK7QString<link linkend="std.CXXABI">[CXXABI-1.86]</link></entry><entry>_ZThn20_N18QXmlDefaultHandler18internalEntityDeclERK7QStringS2_<link linkend="std.CXXABI">[CXXABI-1.86]</link></entry><entry>_ZThn8_N18QXmlDefaultHandler18unparsedEntityDeclERK7QStringS2_S2_S2_<link linkend="std.CXXABI">[CXXABI-1.86]</link></entry></row>
<row><entry>_ZThn16_N18QXmlDefaultHandler8endCDATAEv<link linkend="std.CXXABI">[CXXABI-1.86]</link></entry><entry>_ZThn20_NK18QXmlDefaultHandler11errorStringEv<link linkend="std.CXXABI">[CXXABI-1.86]</link></entry><entry>_ZThn8_NK18QXmlDefaultHandler11errorStringEv<link linkend="std.CXXABI">[CXXABI-1.86]</link></entry></row>
</tbody>
</tgroup>
</table>
</sect1>
<!-- End of text generated from database -->


<!-- Start of generated text - do not edit! -->
<!-- generated from the LSB specification database by mklibapnd -->
<sect1 id=app-libasound>
<title>libasound</title>
<para>
</para>
<para>
The behavior of the interfaces in this library is specified by the following Standards.<simplelist columns=1>
<member>
<xref linkend="std.ALSA"> [ALSA]
</member>
</simplelist>
</para>
<table>
<title>libasound Function Interfaces</title>
<tgroup cols=3>
<tbody>
<row><entry>snd_asoundlib_version(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_mixer_elem_prev(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_pcm_status_dump(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry></row>
<row><entry>snd_async_add_ctl_handler(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_mixer_elem_set_callback(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_pcm_status_free(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry></row>
<row><entry>snd_async_add_handler(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_mixer_elem_set_callback_private(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_pcm_status_get_avail(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry></row>
<row><entry>snd_async_add_pcm_handler(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_mixer_find_selem(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_pcm_status_get_avail_max(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry></row>
<row><entry>snd_async_del_handler(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_mixer_first_elem(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_pcm_status_get_delay(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry></row>
<row><entry>snd_async_handler_get_callback_private(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_mixer_free(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_pcm_status_get_state(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry></row>
<row><entry>snd_async_handler_get_ctl(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_mixer_get_callback_private(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_pcm_status_get_trigger_tstamp(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry></row>
<row><entry>snd_async_handler_get_pcm(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_mixer_get_count(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_pcm_status_get_tstamp(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry></row>
<row><entry>snd_card_get_index(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_mixer_handle_events(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_pcm_status_malloc(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry></row>
<row><entry>snd_card_get_longname(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_mixer_last_elem(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_pcm_status_sizeof(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry></row>
<row><entry>snd_card_get_name(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_mixer_load(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_pcm_stream(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry></row>
<row><entry>snd_card_load(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_mixer_open(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_pcm_stream_name(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry></row>
<row><entry>snd_card_next(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_mixer_poll_descriptors(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_pcm_sw_params(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry></row>
<row><entry>snd_config_add(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_mixer_poll_descriptors_count(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_pcm_sw_params_copy(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry></row>
<row><entry>snd_config_copy(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_mixer_poll_descriptors_revents(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_pcm_sw_params_current(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry></row>
<row><entry>snd_config_delete(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_mixer_selem_channel_name(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_pcm_sw_params_dump(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry></row>
<row><entry>snd_config_get_ascii(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_mixer_selem_get_capture_group(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_pcm_sw_params_free(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry></row>
<row><entry>snd_config_get_id(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_mixer_selem_get_capture_switch(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_pcm_sw_params_get_avail_min(ALSA_0.9.0rc4)<link linkend="std.ALSA">[ALSA]</link></entry></row>
<row><entry>snd_config_get_integer(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_mixer_selem_get_capture_volume(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_pcm_sw_params_get_boundary(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry></row>
<row><entry>snd_config_get_integer64(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_mixer_selem_get_capture_volume_range(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_pcm_sw_params_get_silence_size(ALSA_0.9.0rc4)<link linkend="std.ALSA">[ALSA]</link></entry></row>
<row><entry>snd_config_get_string(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_mixer_selem_get_enum_item(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_pcm_sw_params_get_silence_threshold(ALSA_0.9.0rc4)<link linkend="std.ALSA">[ALSA]</link></entry></row>
<row><entry>snd_config_get_type(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_mixer_selem_get_enum_item_name(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_pcm_sw_params_get_start_threshold(ALSA_0.9.0rc4)<link linkend="std.ALSA">[ALSA]</link></entry></row>
<row><entry>snd_config_imake_integer(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_mixer_selem_get_enum_items(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_pcm_sw_params_get_stop_threshold(ALSA_0.9.0rc4)<link linkend="std.ALSA">[ALSA]</link></entry></row>
<row><entry>snd_config_imake_integer64(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_mixer_selem_get_id(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_pcm_sw_params_get_tstamp_mode(ALSA_0.9.0rc4)<link linkend="std.ALSA">[ALSA]</link></entry></row>
<row><entry>snd_config_imake_string(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_mixer_selem_get_index(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_pcm_sw_params_malloc(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry></row>
<row><entry>snd_config_iterator_end(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_mixer_selem_get_name(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_pcm_sw_params_set_avail_min(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry></row>
<row><entry>snd_config_iterator_entry(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_mixer_selem_get_playback_switch(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_pcm_sw_params_set_silence_size(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry></row>
<row><entry>snd_config_iterator_first(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_mixer_selem_get_playback_volume(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_pcm_sw_params_set_silence_threshold(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry></row>
<row><entry>snd_config_iterator_next(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_mixer_selem_get_playback_volume_range(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_pcm_sw_params_set_start_threshold(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry></row>
<row><entry>snd_config_load(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_mixer_selem_has_capture_channel(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_pcm_sw_params_set_stop_threshold(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry></row>
<row><entry>snd_config_make_compound(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_mixer_selem_has_capture_switch(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_pcm_sw_params_set_tstamp_mode(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry></row>
<row><entry>snd_config_make_integer(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_mixer_selem_has_capture_switch_exclusive(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_pcm_sw_params_set_xfer_align(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry></row>
<row><entry>snd_config_make_integer64(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_mixer_selem_has_capture_switch_joined(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_pcm_sw_params_sizeof(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry></row>
<row><entry>snd_config_make_string(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_mixer_selem_has_capture_volume(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_pcm_type(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry></row>
<row><entry>snd_config_save(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_mixer_selem_has_capture_volume_joined(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_pcm_type_name(ALSA_0.9.0)<link linkend="std.ALSA">[ALSA]</link></entry></row>
<row><entry>snd_config_search(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_mixer_selem_has_common_switch(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_pcm_unlink(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry></row>
<row><entry>snd_config_searchv(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_mixer_selem_has_common_volume(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_pcm_wait(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry></row>
<row><entry>snd_config_set_ascii(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_mixer_selem_has_playback_channel(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_pcm_writei(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry></row>
<row><entry>snd_config_set_integer(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_mixer_selem_has_playback_switch(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_pcm_writen(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry></row>
<row><entry>snd_config_set_integer64(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_mixer_selem_has_playback_switch_joined(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_rawmidi_close(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry></row>
<row><entry>snd_config_set_string(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_mixer_selem_has_playback_volume(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_rawmidi_drain(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry></row>
<row><entry>snd_config_top(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_mixer_selem_has_playback_volume_joined(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_rawmidi_drop(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry></row>
<row><entry>snd_config_update(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_mixer_selem_id_copy(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_rawmidi_info(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry></row>
<row><entry>snd_config_update_free_global(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_mixer_selem_id_free(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_rawmidi_info_copy(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry></row>
<row><entry>snd_ctl_card_info(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_mixer_selem_id_get_index(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_rawmidi_info_free(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry></row>
<row><entry>snd_ctl_card_info_clear(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_mixer_selem_id_get_name(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_rawmidi_info_get_card(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry></row>
<row><entry>snd_ctl_card_info_copy(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_mixer_selem_id_malloc(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_rawmidi_info_get_device(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry></row>
<row><entry>snd_ctl_card_info_free(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_mixer_selem_id_set_index(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_rawmidi_info_get_flags(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry></row>
<row><entry>snd_ctl_card_info_get_components(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_mixer_selem_id_set_name(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_rawmidi_info_get_id(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry></row>
<row><entry>snd_ctl_card_info_get_driver(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_mixer_selem_id_sizeof(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_rawmidi_info_get_name(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry></row>
<row><entry>snd_ctl_card_info_get_id(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_mixer_selem_is_active(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_rawmidi_info_get_stream(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry></row>
<row><entry>snd_ctl_card_info_get_longname(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_mixer_selem_is_capture_mono(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_rawmidi_info_get_subdevice(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry></row>
<row><entry>snd_ctl_card_info_get_mixername(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_mixer_selem_is_enum_capture(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_rawmidi_info_get_subdevice_name(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry></row>
<row><entry>snd_ctl_card_info_get_name(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_mixer_selem_is_enum_playback(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_rawmidi_info_get_subdevices_avail(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry></row>
<row><entry>snd_ctl_card_info_malloc(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_mixer_selem_is_enumerated(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_rawmidi_info_get_subdevices_count(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry></row>
<row><entry>snd_ctl_card_info_sizeof(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_mixer_selem_is_playback_mono(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_rawmidi_info_malloc(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry></row>
<row><entry>snd_ctl_close(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_mixer_selem_register(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_rawmidi_info_set_device(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry></row>
<row><entry>snd_ctl_elem_add_boolean(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_mixer_selem_set_capture_switch(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_rawmidi_info_set_stream(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry></row>
<row><entry>snd_ctl_elem_add_iec958(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_mixer_selem_set_capture_switch_all(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_rawmidi_info_set_subdevice(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry></row>
<row><entry>snd_ctl_elem_add_integer(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_mixer_selem_set_capture_volume(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_rawmidi_info_sizeof(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry></row>
<row><entry>snd_ctl_elem_id_clear(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_mixer_selem_set_capture_volume_all(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_rawmidi_nonblock(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry></row>
<row><entry>snd_ctl_elem_id_copy(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_mixer_selem_set_capture_volume_range(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_rawmidi_open(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry></row>
<row><entry>snd_ctl_elem_id_free(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_mixer_selem_set_enum_item(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_rawmidi_poll_descriptors(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry></row>
<row><entry>snd_ctl_elem_id_get_device(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_mixer_selem_set_playback_switch(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_rawmidi_poll_descriptors_count(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry></row>
<row><entry>snd_ctl_elem_id_get_index(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_mixer_selem_set_playback_switch_all(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_rawmidi_poll_descriptors_revents(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry></row>
<row><entry>snd_ctl_elem_id_get_interface(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_mixer_selem_set_playback_volume(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_rawmidi_read(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry></row>
<row><entry>snd_ctl_elem_id_get_name(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_mixer_selem_set_playback_volume_all(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_rawmidi_write(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry></row>
<row><entry>snd_ctl_elem_id_get_numid(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_mixer_selem_set_playback_volume_range(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_seq_alloc_named_queue(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry></row>
<row><entry>snd_ctl_elem_id_get_subdevice(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_mixer_set_callback(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_seq_alloc_queue(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry></row>
<row><entry>snd_ctl_elem_id_malloc(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_mixer_set_callback_private(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_seq_client_id(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry></row>
<row><entry>snd_ctl_elem_id_set_device(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_mixer_wait(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_seq_client_info_copy(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry></row>
<row><entry>snd_ctl_elem_id_set_index(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_output_buffer_open(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_seq_client_info_free(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry></row>
<row><entry>snd_ctl_elem_id_set_interface(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_output_buffer_string(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_seq_client_info_get_client(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry></row>
<row><entry>snd_ctl_elem_id_set_name(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_output_close(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_seq_client_info_get_name(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry></row>
<row><entry>snd_ctl_elem_id_set_numid(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_output_putc(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_seq_client_info_get_num_ports(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry></row>
<row><entry>snd_ctl_elem_id_set_subdevice(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_output_puts(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_seq_client_info_get_type(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry></row>
<row><entry>snd_ctl_elem_id_sizeof(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_output_stdio_attach(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_seq_client_info_malloc(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry></row>
<row><entry>snd_ctl_elem_iface_name(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_output_stdio_open(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_seq_client_info_set_client(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry></row>
<row><entry>snd_ctl_elem_info(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_pcm_access_mask_any(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_seq_client_info_set_name(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry></row>
<row><entry>snd_ctl_elem_info_clear(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_pcm_access_mask_copy(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_seq_client_info_sizeof(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry></row>
<row><entry>snd_ctl_elem_info_copy(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_pcm_access_mask_free(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_seq_close(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry></row>
<row><entry>snd_ctl_elem_info_free(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_pcm_access_mask_malloc(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_seq_connect_from(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry></row>
<row><entry>snd_ctl_elem_info_get_count(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_pcm_access_mask_none(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_seq_connect_to(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry></row>
<row><entry>snd_ctl_elem_info_get_id(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_pcm_access_mask_set(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_seq_control_queue(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry></row>
<row><entry>snd_ctl_elem_info_get_item_name(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_pcm_access_mask_sizeof(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_seq_create_port(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry></row>
<row><entry>snd_ctl_elem_info_get_items(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_pcm_access_mask_test(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_seq_create_simple_port(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry></row>
<row><entry>snd_ctl_elem_info_get_max(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_pcm_access_name(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_seq_delete_port(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry></row>
<row><entry>snd_ctl_elem_info_get_max64(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_pcm_area_copy(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_seq_delete_simple_port(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry></row>
<row><entry>snd_ctl_elem_info_get_min(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_pcm_area_silence(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_seq_disconnect_from(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry></row>
<row><entry>snd_ctl_elem_info_get_min64(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_pcm_areas_copy(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_seq_disconnect_to(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry></row>
<row><entry>snd_ctl_elem_info_get_name(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_pcm_areas_silence(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_seq_drain_output(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry></row>
<row><entry>snd_ctl_elem_info_get_numid(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_pcm_avail_update(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_seq_drop_output(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry></row>
<row><entry>snd_ctl_elem_info_get_step(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_pcm_build_linear_format(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_seq_drop_output_buffer(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry></row>
<row><entry>snd_ctl_elem_info_get_step64(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_pcm_bytes_to_frames(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_seq_event_input(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry></row>
<row><entry>snd_ctl_elem_info_get_type(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_pcm_bytes_to_samples(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_seq_event_input_pending(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry></row>
<row><entry>snd_ctl_elem_info_is_inactive(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_pcm_close(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_seq_event_length(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry></row>
<row><entry>snd_ctl_elem_info_is_locked(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_pcm_delay(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_seq_event_output(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry></row>
<row><entry>snd_ctl_elem_info_is_readable(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_pcm_drain(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_seq_event_output_direct(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry></row>
<row><entry>snd_ctl_elem_info_is_user(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_pcm_drop(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_seq_free_event(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry></row>
<row><entry>snd_ctl_elem_info_is_volatile(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_pcm_dump(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_seq_free_queue(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry></row>
<row><entry>snd_ctl_elem_info_is_writable(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_pcm_format_big_endian(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_seq_get_any_client_info(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry></row>
<row><entry>snd_ctl_elem_info_malloc(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_pcm_format_cpu_endian(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_seq_get_any_port_info(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry></row>
<row><entry>snd_ctl_elem_info_set_id(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_pcm_format_description(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_seq_get_client_info(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry></row>
<row><entry>snd_ctl_elem_info_set_item(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_pcm_format_float(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_seq_get_input_buffer_size(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry></row>
<row><entry>snd_ctl_elem_info_sizeof(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_pcm_format_linear(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_seq_get_output_buffer_size(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry></row>
<row><entry>snd_ctl_elem_list(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_pcm_format_little_endian(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_seq_get_port_info(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry></row>
<row><entry>snd_ctl_elem_list_alloc_space(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_pcm_format_mask_any(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_seq_get_port_subscription(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry></row>
<row><entry>snd_ctl_elem_list_clear(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_pcm_format_mask_copy(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_seq_get_queue_status(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry></row>
<row><entry>snd_ctl_elem_list_copy(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_pcm_format_mask_free(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_seq_get_queue_tempo(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry></row>
<row><entry>snd_ctl_elem_list_free(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_pcm_format_mask_malloc(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_seq_nonblock(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry></row>
<row><entry>snd_ctl_elem_list_free_space(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_pcm_format_mask_none(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_seq_open(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry></row>
<row><entry>snd_ctl_elem_list_get_count(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_pcm_format_mask_set(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_seq_parse_address(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry></row>
<row><entry>snd_ctl_elem_list_get_id(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_pcm_format_mask_sizeof(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_seq_poll_descriptors(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry></row>
<row><entry>snd_ctl_elem_list_get_name(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_pcm_format_mask_test(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_seq_poll_descriptors_count(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry></row>
<row><entry>snd_ctl_elem_list_get_used(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_pcm_format_name(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_seq_poll_descriptors_revents(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry></row>
<row><entry>snd_ctl_elem_list_malloc(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_pcm_format_physical_width(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_seq_port_info_copy(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry></row>
<row><entry>snd_ctl_elem_list_set_offset(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_pcm_format_set_silence(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_seq_port_info_free(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry></row>
<row><entry>snd_ctl_elem_list_sizeof(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_pcm_format_signed(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_seq_port_info_get_addr(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry></row>
<row><entry>snd_ctl_elem_read(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_pcm_format_size(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_seq_port_info_get_capability(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry></row>
<row><entry>snd_ctl_elem_remove(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_pcm_format_unsigned(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_seq_port_info_get_client(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry></row>
<row><entry>snd_ctl_elem_type_name(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_pcm_format_value(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_seq_port_info_get_name(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry></row>
<row><entry>snd_ctl_elem_value_clear(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_pcm_format_width(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_seq_port_info_get_port(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry></row>
<row><entry>snd_ctl_elem_value_copy(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_pcm_forward(ALSA_0.9.0rc8)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_seq_port_info_get_type(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry></row>
<row><entry>snd_ctl_elem_value_free(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_pcm_frames_to_bytes(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_seq_port_info_malloc(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry></row>
<row><entry>snd_ctl_elem_value_get_boolean(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_pcm_hw_free(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_seq_port_info_set_capability(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry></row>
<row><entry>snd_ctl_elem_value_get_byte(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_pcm_hw_params(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_seq_port_info_set_client(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry></row>
<row><entry>snd_ctl_elem_value_get_bytes(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_pcm_hw_params_any(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_seq_port_info_set_midi_channels(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry></row>
<row><entry>snd_ctl_elem_value_get_enumerated(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_pcm_hw_params_can_mmap_sample_resolution(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_seq_port_info_set_name(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry></row>
<row><entry>snd_ctl_elem_value_get_id(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_pcm_hw_params_can_pause(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_seq_port_info_set_port(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry></row>
<row><entry>snd_ctl_elem_value_get_iec958(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_pcm_hw_params_can_resume(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_seq_port_info_set_port_specified(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry></row>
<row><entry>snd_ctl_elem_value_get_integer(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_pcm_hw_params_can_sync_start(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_seq_port_info_set_timestamp_queue(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry></row>
<row><entry>snd_ctl_elem_value_get_integer64(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_pcm_hw_params_copy(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_seq_port_info_set_timestamp_real(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry></row>
<row><entry>snd_ctl_elem_value_malloc(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_pcm_hw_params_current(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_seq_port_info_set_timestamping(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry></row>
<row><entry>snd_ctl_elem_value_set_boolean(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_pcm_hw_params_dump(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_seq_port_info_set_type(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry></row>
<row><entry>snd_ctl_elem_value_set_byte(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_pcm_hw_params_free(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_seq_port_info_sizeof(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry></row>
<row><entry>snd_ctl_elem_value_set_enumerated(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_pcm_hw_params_get_access(ALSA_0.9.0rc4)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_seq_port_subscribe_copy(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry></row>
<row><entry>snd_ctl_elem_value_set_id(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_pcm_hw_params_get_access_mask(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_seq_port_subscribe_free(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry></row>
<row><entry>snd_ctl_elem_value_set_iec958(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_pcm_hw_params_get_buffer_size(ALSA_0.9.0rc4)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_seq_port_subscribe_get_dest(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry></row>
<row><entry>snd_ctl_elem_value_set_integer(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_pcm_hw_params_get_buffer_size_max(ALSA_0.9.0rc4)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_seq_port_subscribe_get_exclusive(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry></row>
<row><entry>snd_ctl_elem_value_set_integer64(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_pcm_hw_params_get_buffer_size_min(ALSA_0.9.0rc4)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_seq_port_subscribe_get_queue(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry></row>
<row><entry>snd_ctl_elem_value_sizeof(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_pcm_hw_params_get_buffer_time(ALSA_0.9.0rc4)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_seq_port_subscribe_get_sender(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry></row>
<row><entry>snd_ctl_elem_write(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_pcm_hw_params_get_buffer_time_max(ALSA_0.9.0rc4)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_seq_port_subscribe_get_time_real(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry></row>
<row><entry>snd_ctl_event_clear(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_pcm_hw_params_get_buffer_time_min(ALSA_0.9.0rc4)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_seq_port_subscribe_get_time_update(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry></row>
<row><entry>snd_ctl_event_copy(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_pcm_hw_params_get_channels(ALSA_0.9.0rc4)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_seq_port_subscribe_malloc(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry></row>
<row><entry>snd_ctl_event_elem_get_id(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_pcm_hw_params_get_channels_max(ALSA_0.9.0rc4)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_seq_port_subscribe_set_dest(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry></row>
<row><entry>snd_ctl_event_elem_get_mask(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_pcm_hw_params_get_channels_min(ALSA_0.9.0rc4)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_seq_port_subscribe_set_exclusive(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry></row>
<row><entry>snd_ctl_event_free(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_pcm_hw_params_get_format(ALSA_0.9.0rc4)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_seq_port_subscribe_set_queue(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry></row>
<row><entry>snd_ctl_event_malloc(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_pcm_hw_params_get_format_mask(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_seq_port_subscribe_set_sender(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry></row>
<row><entry>snd_ctl_event_sizeof(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_pcm_hw_params_get_period_size(ALSA_0.9.0rc4)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_seq_port_subscribe_set_time_real(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry></row>
<row><entry>snd_ctl_hwdep_info(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_pcm_hw_params_get_period_size_max(ALSA_0.9.0rc4)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_seq_port_subscribe_set_time_update(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry></row>
<row><entry>snd_ctl_hwdep_next_device(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_pcm_hw_params_get_period_size_min(ALSA_0.9.0rc4)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_seq_port_subscribe_sizeof(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry></row>
<row><entry>snd_ctl_name(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_pcm_hw_params_get_period_time(ALSA_0.9.0rc4)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_seq_query_next_client(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry></row>
<row><entry>snd_ctl_nonblock(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_pcm_hw_params_get_period_time_max(ALSA_0.9.0rc4)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_seq_query_next_port(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry></row>
<row><entry>snd_ctl_open(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_pcm_hw_params_get_period_time_min(ALSA_0.9.0rc4)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_seq_query_port_subscribers(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry></row>
<row><entry>snd_ctl_pcm_info(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_pcm_hw_params_get_periods(ALSA_0.9.0rc4)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_seq_query_subscribe_copy(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry></row>
<row><entry>snd_ctl_pcm_next_device(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_pcm_hw_params_get_periods_max(ALSA_0.9.0rc4)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_seq_query_subscribe_free(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry></row>
<row><entry>snd_ctl_poll_descriptors(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_pcm_hw_params_get_periods_min(ALSA_0.9.0rc4)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_seq_query_subscribe_get_addr(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry></row>
<row><entry>snd_ctl_poll_descriptors_count(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_pcm_hw_params_get_rate(ALSA_0.9.0rc4)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_seq_query_subscribe_get_exclusive(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry></row>
<row><entry>snd_ctl_rawmidi_info(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_pcm_hw_params_get_rate_max(ALSA_0.9.0rc4)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_seq_query_subscribe_get_index(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry></row>
<row><entry>snd_ctl_rawmidi_next_device(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_pcm_hw_params_get_rate_min(ALSA_0.9.0rc4)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_seq_query_subscribe_get_queue(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry></row>
<row><entry>snd_ctl_read(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_pcm_hw_params_get_rate_numden(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_seq_query_subscribe_get_root(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry></row>
<row><entry>snd_ctl_subscribe_events(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_pcm_hw_params_get_rate_resample(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_seq_query_subscribe_get_time_real(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry></row>
<row><entry>snd_hctl_close(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_pcm_hw_params_get_sbits(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_seq_query_subscribe_get_time_update(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry></row>
<row><entry>snd_hctl_elem_get_callback_private(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_pcm_hw_params_is_double(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_seq_query_subscribe_malloc(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry></row>
<row><entry>snd_hctl_elem_get_id(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_pcm_hw_params_is_half_duplex(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_seq_query_subscribe_set_index(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry></row>
<row><entry>snd_hctl_elem_info(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_pcm_hw_params_is_joint_duplex(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_seq_query_subscribe_set_root(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry></row>
<row><entry>snd_hctl_elem_next(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_pcm_hw_params_malloc(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_seq_query_subscribe_set_type(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry></row>
<row><entry>snd_hctl_elem_prev(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_pcm_hw_params_set_access(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_seq_query_subscribe_sizeof(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry></row>
<row><entry>snd_hctl_elem_read(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_pcm_hw_params_set_access_mask(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_seq_queue_status_copy(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry></row>
<row><entry>snd_hctl_elem_set_callback(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_pcm_hw_params_set_buffer_size(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_seq_queue_status_free(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry></row>
<row><entry>snd_hctl_elem_set_callback_private(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_pcm_hw_params_set_buffer_size_near(ALSA_0.9.0rc4)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_seq_queue_status_get_real_time(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry></row>
<row><entry>snd_hctl_elem_write(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_pcm_hw_params_set_buffer_time(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_seq_queue_status_get_tick_time(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry></row>
<row><entry>snd_hctl_find_elem(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_pcm_hw_params_set_buffer_time_near(ALSA_0.9.0rc4)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_seq_queue_status_malloc(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry></row>
<row><entry>snd_hctl_first_elem(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_pcm_hw_params_set_channels(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_seq_queue_status_sizeof(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry></row>
<row><entry>snd_hctl_free(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_pcm_hw_params_set_channels_near(ALSA_0.9.0rc4)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_seq_queue_tempo_copy(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry></row>
<row><entry>snd_hctl_get_callback_private(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_pcm_hw_params_set_format(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_seq_queue_tempo_free(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry></row>
<row><entry>snd_hctl_get_count(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_pcm_hw_params_set_format_mask(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_seq_queue_tempo_get_ppq(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry></row>
<row><entry>snd_hctl_handle_events(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_pcm_hw_params_set_period_size(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_seq_queue_tempo_get_tempo(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry></row>
<row><entry>snd_hctl_last_elem(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_pcm_hw_params_set_period_size_near(ALSA_0.9.0rc4)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_seq_queue_tempo_malloc(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry></row>
<row><entry>snd_hctl_load(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_pcm_hw_params_set_period_time(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_seq_queue_tempo_set_ppq(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry></row>
<row><entry>snd_hctl_nonblock(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_pcm_hw_params_set_period_time_near(ALSA_0.9.0rc4)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_seq_queue_tempo_set_tempo(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry></row>
<row><entry>snd_hctl_open(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_pcm_hw_params_set_periods(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_seq_queue_tempo_sizeof(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry></row>
<row><entry>snd_hctl_set_callback(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_pcm_hw_params_set_periods_integer(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_seq_set_client_info(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry></row>
<row><entry>snd_hctl_set_callback_private(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_pcm_hw_params_set_periods_near(ALSA_0.9.0rc4)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_seq_set_client_name(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry></row>
<row><entry>snd_hctl_wait(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_pcm_hw_params_set_rate(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_seq_set_input_buffer_size(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry></row>
<row><entry>snd_hwdep_close(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_pcm_hw_params_set_rate_near(ALSA_0.9.0rc4)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_seq_set_output_buffer_size(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry></row>
<row><entry>snd_hwdep_dsp_image_copy(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_pcm_hw_params_set_rate_resample(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_seq_set_port_info(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry></row>
<row><entry>snd_hwdep_dsp_image_free(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_pcm_hw_params_sizeof(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_seq_set_queue_tempo(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry></row>
<row><entry>snd_hwdep_dsp_image_get_image(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_pcm_hw_params_test_access(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_seq_subscribe_port(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry></row>
<row><entry>snd_hwdep_dsp_image_get_index(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_pcm_hw_params_test_buffer_size(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_seq_sync_output_queue(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry></row>
<row><entry>snd_hwdep_dsp_image_get_length(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_pcm_hw_params_test_buffer_time(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_seq_system_info(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry></row>
<row><entry>snd_hwdep_dsp_image_get_name(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_pcm_hw_params_test_channels(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_seq_system_info_copy(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry></row>
<row><entry>snd_hwdep_dsp_image_malloc(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_pcm_hw_params_test_format(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_seq_system_info_free(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry></row>
<row><entry>snd_hwdep_dsp_image_set_image(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_pcm_hw_params_test_period_size(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_seq_system_info_get_clients(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry></row>
<row><entry>snd_hwdep_dsp_image_set_index(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_pcm_hw_params_test_period_time(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_seq_system_info_get_ports(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry></row>
<row><entry>snd_hwdep_dsp_image_set_length(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_pcm_hw_params_test_periods(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_seq_system_info_get_queues(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry></row>
<row><entry>snd_hwdep_dsp_image_set_name(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_pcm_hw_params_test_rate(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_seq_system_info_malloc(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry></row>
<row><entry>snd_hwdep_dsp_image_sizeof(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_pcm_hwsync(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_seq_system_info_sizeof(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry></row>
<row><entry>snd_hwdep_dsp_load(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_pcm_info(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_seq_unsubscribe_port(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry></row>
<row><entry>snd_hwdep_dsp_status(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_pcm_info_copy(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_strerror(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry></row>
<row><entry>snd_hwdep_dsp_status_copy(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_pcm_info_free(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_timer_close(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry></row>
<row><entry>snd_hwdep_dsp_status_free(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_pcm_info_get_card(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_timer_continue(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry></row>
<row><entry>snd_hwdep_dsp_status_get_chip_ready(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_pcm_info_get_class(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_timer_id_copy(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry></row>
<row><entry>snd_hwdep_dsp_status_get_dsp_loaded(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_pcm_info_get_device(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_timer_id_free(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry></row>
<row><entry>snd_hwdep_dsp_status_get_id(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_pcm_info_get_id(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_timer_id_get_card(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry></row>
<row><entry>snd_hwdep_dsp_status_get_num_dsps(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_pcm_info_get_name(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_timer_id_get_class(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry></row>
<row><entry>snd_hwdep_dsp_status_get_version(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_pcm_info_get_stream(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_timer_id_get_device(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry></row>
<row><entry>snd_hwdep_dsp_status_malloc(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_pcm_info_get_subdevice(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_timer_id_get_sclass(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry></row>
<row><entry>snd_hwdep_dsp_status_sizeof(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_pcm_info_get_subdevice_name(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_timer_id_get_subdevice(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry></row>
<row><entry>snd_hwdep_info(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_pcm_info_get_subdevices_avail(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_timer_id_malloc(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry></row>
<row><entry>snd_hwdep_info_copy(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_pcm_info_get_subdevices_count(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_timer_id_set_card(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry></row>
<row><entry>snd_hwdep_info_free(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_pcm_info_malloc(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_timer_id_set_class(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry></row>
<row><entry>snd_hwdep_info_get_card(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_pcm_info_set_device(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_timer_id_set_device(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry></row>
<row><entry>snd_hwdep_info_get_device(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_pcm_info_set_stream(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_timer_id_set_sclass(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry></row>
<row><entry>snd_hwdep_info_get_id(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_pcm_info_set_subdevice(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_timer_id_set_subdevice(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry></row>
<row><entry>snd_hwdep_info_get_iface(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_pcm_info_sizeof(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_timer_id_sizeof(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry></row>
<row><entry>snd_hwdep_info_get_name(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_pcm_link(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_timer_info(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry></row>
<row><entry>snd_hwdep_info_malloc(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_pcm_mmap_begin(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_timer_info_copy(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry></row>
<row><entry>snd_hwdep_info_set_device(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_pcm_mmap_commit(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_timer_info_free(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry></row>
<row><entry>snd_hwdep_info_sizeof(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_pcm_mmap_readi(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_timer_info_get_card(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry></row>
<row><entry>snd_hwdep_ioctl(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_pcm_mmap_readn(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_timer_info_get_id(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry></row>
<row><entry>snd_hwdep_open(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_pcm_mmap_writei(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_timer_info_get_name(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry></row>
<row><entry>snd_hwdep_poll_descriptors(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_pcm_mmap_writen(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_timer_info_get_resolution(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry></row>
<row><entry>snd_hwdep_read(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_pcm_name(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_timer_info_malloc(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry></row>
<row><entry>snd_hwdep_write(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_pcm_nonblock(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_timer_info_sizeof(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry></row>
<row><entry>snd_input_buffer_open(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_pcm_open(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_timer_open(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry></row>
<row><entry>snd_input_close(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_pcm_open_lconf(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_timer_params(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry></row>
<row><entry>snd_input_stdio_attach(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_pcm_pause(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_timer_params_get_ticks(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry></row>
<row><entry>snd_input_stdio_open(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_pcm_poll_descriptors(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_timer_params_malloc(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry></row>
<row><entry>snd_lib_error_set_handler(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_pcm_poll_descriptors_count(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_timer_params_set_auto_start(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry></row>
<row><entry>snd_midi_event_decode(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_pcm_poll_descriptors_revents(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_timer_params_set_ticks(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry></row>
<row><entry>snd_midi_event_encode(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_pcm_prepare(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_timer_poll_descriptors(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry></row>
<row><entry>snd_midi_event_encode_byte(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_pcm_readi(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_timer_poll_descriptors_count(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry></row>
<row><entry>snd_midi_event_free(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_pcm_readn(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_timer_read(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry></row>
<row><entry>snd_midi_event_init(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_pcm_recover(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_timer_start(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry></row>
<row><entry>snd_midi_event_new(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_pcm_reset(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_timer_status(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry></row>
<row><entry>snd_midi_event_reset_decode(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_pcm_resume(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_timer_status_free(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry></row>
<row><entry>snd_midi_event_reset_encode(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_pcm_rewind(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_timer_status_get_lost(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry></row>
<row><entry>snd_mixer_attach(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_pcm_samples_to_bytes(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_timer_status_get_overrun(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry></row>
<row><entry>snd_mixer_close(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_pcm_start(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_timer_status_get_queue(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry></row>
<row><entry>snd_mixer_detach(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_pcm_state(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_timer_status_get_resolution(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry></row>
<row><entry>snd_mixer_elem_get_callback_private(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_pcm_state_name(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_timer_status_malloc(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry></row>
<row><entry>snd_mixer_elem_get_type(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_pcm_status(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_timer_stop(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry></row>
<row><entry>snd_mixer_elem_next(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_pcm_status_copy(ALSA_0.9)<link linkend="std.ALSA">[ALSA]</link></entry><entry></entry></row>
</tbody>
</tgroup>
</table>
<table>
<title>libasound Data Interfaces</title>
<tgroup cols=3>
<tbody>
<row><entry>snd_config<link linkend="std.ALSA">[ALSA]</link></entry><entry>snd_seq_event_types<link linkend="std.ALSA">[ALSA]</link></entry><entry></entry></row>
</tbody>
</tgroup>
</table>
</sect1>
<!-- End of text generated from database -->


</APPENDIX>
