<PART ID="packagefmt">
<TITLE>Package Format and Installation</TITLE>

<CHAPTER ID=swinstall>
<TITLE>Software Installation</TITLE>
<SECT1 ID=swinstall-intro>
<TITLE>Introduction</TITLE>
<PARA>
Applications shall either be packaged in the RPM packaging format as
defined in this specification, or supply an installer which is LSB
conforming (for example, calls LSB commands and utilities).
<note>
<para>
Supplying an RPM format package is encouraged because it makes systems
easier to manage.  
This specification does not require the implementation to use
RPM as the package manager; it only specifies the format of
the package file.
</para>
<para>
Applications are also encouraged to uninstall cleanly.
</para>
</note>
</PARA>
<PARA>
A package in RPM format may include a dependency on the LSB Core and other
LSB specifications, as described in <XREF LINKEND=pkgdepend>. Packages that are not
in RPM format may test for the presence of a conforming implementation by means of
the <command>lsb_release</command> utility.
</PARA>
<PARA>
Implementations shall provide a mechanism for installing applications in
this packaging format with some restrictions listed
below.
<NOTE ID="pkg-2">
<PARA>
The implementation itself may use a different packaging format for its
own packages, and of course it may use any available mechanism for 
installing the LSB-conformant packages.
</PARA>
</NOTE>
</PARA>
</SECT1>


<SECT1 ID=pkgformat>
<TITLE>Package File Format</TITLE>
<PARA>
An RPM format file consists of 4 sections, the Lead, Signature, Header, and
the Payload. All values are stored in network byte order.
</PARA>
<TABLE>
<TITLE>RPM File Format</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<ENTRY>Lead</ENTRY>
</ROW>
<ROW>
<ENTRY>Signature</ENTRY>
</ROW>
<ROW>
<ENTRY>Header</ENTRY>
</ROW>
<ROW>
<ENTRY>Payload</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
These 4 sections shall exist in the order specified. 
</PARA>
<PARA>
The lead section is used to identify the package file.
</PARA>
<PARA>
The signature section is used to verify the integrity, and optionally, the
authenticity of the majority of the package file.
</PARA>
<PARA>
The header section contains all available information about the package. Entries
such as the package's name, version, and file list, are contained in the header.
</PARA>
<PARA>
The payload section holds the files to be installed.
</PARA>
<SECT2>
<TITLE>Lead Section</TITLE>
<PARA>
</PARA>
<SCREEN>
struct rpmlead {
    unsigned char magic[4];
    unsigned char major, minor;
    short type;
    short archnum;
    char name[66];
    short osnum;
    short signature_type;
    char reserved[16];
} ;
</SCREEN>
<VARIABLELIST>
<VARLISTENTRY>
<TERM><STRUCTFIELD>magic</STRUCTFIELD></TERM>
<LISTITEM>
<PARA>
Value identifying this file as an RPM format file. This value shall be
"\355\253\356\333".
</PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM><STRUCTFIELD>major</STRUCTFIELD></TERM>
<LISTITEM>
<PARA>
Value indicating the major version number of the file format version. This
value shall be 3.
</PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM><STRUCTFIELD>minor</STRUCTFIELD></TERM>
<LISTITEM>
<PARA>
Value indicating the minor revision number of file format version. This value
shall be 0.
</PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM><STRUCTFIELD>type</STRUCTFIELD></TERM>
<LISTITEM>
<PARA>
Value indicating whether this is a source or binary package.
This value shall be 0 to indicate a binary package.
</PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM><STRUCTFIELD>archnum</STRUCTFIELD></TERM>
<LISTITEM>
<PARA>
Value indicating the architecture for which this package is valid. This value
is specified in the architecture specific supplement.
</PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM><STRUCTFIELD>name</STRUCTFIELD></TERM>
<LISTITEM>
<PARA>
A NUL terminated string that provides the package name. This name shall
conform with the Package Naming section of this specification.
</PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM><STRUCTFIELD>osnum</STRUCTFIELD></TERM>
<LISTITEM>
<PARA>
Value indicating the Operating System for which this package is valid. This
value shall be 1.
</PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM><STRUCTFIELD>signature_type</STRUCTFIELD></TERM>
<LISTITEM>
<PARA>
Value indicating the type of the signature used in the Signature part of the
file. This value shall be 5.
</PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM><STRUCTFIELD>reserved</STRUCTFIELD></TERM>
<LISTITEM>
<PARA>
Reserved space. The value is undefined.
</PARA>
</LISTITEM>
</VARLISTENTRY>
</VARIABLELIST>
</SECT2>


<SECT2>
<TITLE>Header Structure</TITLE>
<PARA>
The Header structure is used for both the Signature and Header Sections. A
Header Structure consists of 3 parts, a Header record, followed by 1 or more
Index records, followed by 0 or more bytes of data associated with the Index
records. A Header structure shall be aligned to an 8 byte boundary.
</PARA>
<TABLE>
<TITLE>Signature Format</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<ENTRY>Header Record</ENTRY>
</ROW>
<ROW>
<ENTRY>Array of Index Records</ENTRY>
</ROW>
<ROW>
<ENTRY>Store of Index Values</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>

<SECT3>
<TITLE>Header Record</TITLE>
<PARA>
</PARA>
<SCREEN>
struct rpmheader {
    unsigned char magic[4];
    unsigned char reserved[4];
    int nindex;
    int hsize;
    } ;
</SCREEN>

<VARIABLELIST>
<VARLISTENTRY>
<TERM><STRUCTFIELD>magic</STRUCTFIELD></TERM>
<LISTITEM>
<PARA>
Value identifying this record as an RPM header record. This value shall be
<literal>"\216\255\350\001"</literal>.
</PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM><STRUCTFIELD>reserved</STRUCTFIELD></TERM>
<LISTITEM>
<PARA>
Reserved space.  This value shall be <literal>"\000\000\000\000"</literal>.
</PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM><STRUCTFIELD>nindex</STRUCTFIELD></TERM>
<LISTITEM>
<PARA>
The number of Index Records that follow this Header Record. There should be at
least 1 Index Record.
</PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM><STRUCTFIELD>hsize</STRUCTFIELD></TERM>
<LISTITEM>
<PARA>
The size in bytes of the storage area for the data pointed to by the
Index Records.
</PARA>
</LISTITEM>
</VARLISTENTRY>
</VARIABLELIST>

</SECT3>


<SECT3>
<TITLE>Index Record</TITLE>
<PARA>
</PARA>
<SCREEN>
struct rpmhdrindex {
    int tag;
    int type;
    int offset;
    int count;
    } ;
</SCREEN>
<VARIABLELIST>
<VARLISTENTRY>
<TERM><STRUCTFIELD>tag</STRUCTFIELD></TERM>
<LISTITEM>
<PARA>
Value identifying the purpose of the data associated with this Index Record.
The value of this field is dependent on the context in which the Index Record
is used, and is defined below and in later sections.
</PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM><STRUCTFIELD>type</STRUCTFIELD></TERM>
<LISTITEM>
<PARA>
Value identifying the type of the data associated with this Index Record. The
possible <STRUCTFIELD>type</STRUCTFIELD> values are defined below.
</PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM><STRUCTFIELD>offset</STRUCTFIELD></TERM>
<LISTITEM>
<PARA>
Location in the Store of the data associated with this Index Record. This value
should between 0 and the value contained in the <STRUCTFIELD>hsize</STRUCTFIELD>
of the Header Structure.
</PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM><STRUCTFIELD>count</STRUCTFIELD></TERM>
<LISTITEM>
<PARA>
Size of the data associated with this Index Record. The
<STRUCTFIELD>count</STRUCTFIELD> is the number of elements whose size is
defined by the type of this Record.
</PARA>
</LISTITEM>
</VARLISTENTRY>
</VARIABLELIST>
<SECT4>
<TITLE>Index Type Values</TITLE>
<PARA>
The possible values for the <STRUCTFIELD>type</STRUCTFIELD> field are defined
in this table.
</PARA>
<TABLE>
<TITLE>Index Type values</TITLE>
<TGROUP COLS=4>
<THEAD>
<ROW>
<ENTRY>Type</ENTRY>
<ENTRY>Value</ENTRY>
<ENTRY>Size (in bytes)</ENTRY>
<ENTRY>Alignment</ENTRY>
</ROW>
</THEAD>
<TBODY>
<ROW>
<ENTRY><CONSTANT>RPM_NULL_TYPE</CONSTANT></ENTRY>
<ENTRY>0</ENTRY>
<ENTRY>Not Implemented.</ENTRY>
<ENTRY></ENTRY>
</ROW>
<ROW>
<ENTRY><CONSTANT>RPM_CHAR_TYPE</CONSTANT></ENTRY>
<ENTRY>1</ENTRY>
<ENTRY>1</ENTRY>
<ENTRY>1</ENTRY>
</ROW>
<ROW>
<ENTRY><CONSTANT>RPM_INT8_TYPE</CONSTANT></ENTRY>
<ENTRY>2</ENTRY>
<ENTRY>1</ENTRY>
<ENTRY>1</ENTRY>
</ROW>
<ROW>
<ENTRY><CONSTANT>RPM_INT16_TYPE</CONSTANT></ENTRY>
<ENTRY>3</ENTRY>
<ENTRY>2</ENTRY>
<ENTRY>2</ENTRY>
</ROW>
<ROW>
<ENTRY><CONSTANT>RPM_INT32_TYPE</CONSTANT></ENTRY>
<ENTRY>4</ENTRY>
<ENTRY>4</ENTRY>
<ENTRY>4</ENTRY>
</ROW>
<ROW>
<ENTRY><CONSTANT>RPM_INT64_TYPE</CONSTANT></ENTRY>
<ENTRY>5</ENTRY>
<ENTRY>Reserved.</ENTRY>
<ENTRY></ENTRY>
</ROW>
<ROW>
<ENTRY><CONSTANT>RPM_STRING_TYPE</CONSTANT></ENTRY>
<ENTRY>6</ENTRY>
<ENTRY>variable, NUL terminated</ENTRY>
<ENTRY>1</ENTRY>
</ROW>
<ROW>
<ENTRY><CONSTANT>RPM_BIN_TYPE</CONSTANT></ENTRY>
<ENTRY>7</ENTRY>
<ENTRY>1</ENTRY>
<ENTRY>1</ENTRY>
</ROW>
<ROW>
<ENTRY><CONSTANT>RPM_STRING_ARRAY_TYPE</CONSTANT></ENTRY>
<ENTRY>8</ENTRY>
<ENTRY>Variable, sequence of NUL terminated strings</ENTRY>
<ENTRY>1</ENTRY>
</ROW>
<ROW>
<ENTRY><CONSTANT>RPM_I18NSTRING_TYPE</CONSTANT></ENTRY>
<ENTRY>9</ENTRY>
<ENTRY>variable, sequence of NUL terminated strings</ENTRY>
<ENTRY>1</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>

<PARA>
The string arrays specified for entries of type
<CONSTANT>RPM_STRING_ARRAY_TYPE</CONSTANT> and
<CONSTANT>RPM_I18NSTRING_TYPE</CONSTANT>
are vectors of strings in a contiguous block of memory, each element separated
from its neighbors by a NUL character.
</PARA>
<PARA>
Index records with type <CONSTANT>RPM_I18NSTRING_TYPE</CONSTANT> shall always
have a <STRUCTFIELD>count</STRUCTFIELD> of 1. The array entries in an index of
type <CONSTANT>RPM_I18NSTRING_TYPE</CONSTANT> correspond to the locale names
contained in the <CONSTANT>RPMTAG_HDRI18NTABLE</CONSTANT> index.
</PARA>
</SECT4>
<SECT4>
<TITLE>Index Tag Values</TITLE>
<PARA>
Some values are designated as header private, and may appear in any header
structure. These are defined here. Additional values are defined in later
sections.
</PARA>
<!-- Start of text generated from database -->
<!-- generated from the LSB specification database -->
<!--    by $Header: /cvsroot/lsb/lsbspec/mkrpmtagtable,v 1.2 2005/05/11 21:46:31 nick Exp 0 -->
<!--    at Wed Oct 12 18:34:34 2005 -->
<TABLE>
<TITLE>Header Private Tag Values</TITLE>
<TGROUP COLS=5>
<THEAD>
<ROW>
<ENTRY ALIGN=center>Name</ENTRY><ENTRY ALIGN=center>Tag Value</ENTRY><ENTRY ALIGN=center>Type</ENTRY><ENTRY ALIGN=center>Count</ENTRY><ENTRY ALIGN=center>Status</ENTRY></ROW>
</THEAD>
<TBODY>
<ROW><ENTRY><CONSTANT>RPMTAG_HEADERSIGNATURES</CONSTANT></ENTRY><ENTRY>62</ENTRY><ENTRY>BIN</ENTRY><ENTRY>16</ENTRY><ENTRY>Optional</ENTRY></ROW>
<ROW><ENTRY><CONSTANT>RPMTAG_HEADERIMMUTABLE</CONSTANT></ENTRY><ENTRY>63</ENTRY><ENTRY>BIN</ENTRY><ENTRY>16</ENTRY><ENTRY>Optional</ENTRY></ROW>
<ROW><ENTRY><CONSTANT>RPMTAG_HEADERI18NTABLE</CONSTANT></ENTRY><ENTRY>100</ENTRY><ENTRY>STRING_ARRAY</ENTRY><ENTRY></ENTRY><ENTRY>Optional</ENTRY></ROW>
</TBODY>
</TGROUP>
</TABLE>
<VARIABLELIST>
<VARLISTENTRY><TERM><CONSTANT>RPMTAG_HEADERSIGNATURES</CONSTANT></TERM><LISTITEM><PARA>The signature tag differentiates a signature header from a metadata header, and identifies the original contents of the signature header.</PARA></LISTITEM></VARLISTENTRY>
<VARLISTENTRY><TERM><CONSTANT>RPMTAG_HEADERIMMUTABLE</CONSTANT></TERM><LISTITEM><PARA>This tag contains an index record which specifies the portion of the Header Record which was used for the calculation of a signature. This data shall be preserved or any header-only signature will be invalidated.</PARA></LISTITEM></VARLISTENTRY>
<VARLISTENTRY><TERM><CONSTANT>RPMTAG_HEADERI18NTABLE</CONSTANT></TERM><LISTITEM><PARA>Contains a list of locales for which strings are provided in other parts of the package.</PARA></LISTITEM></VARLISTENTRY>
</VARIABLELIST>
<!-- End of text generated from database -->
<!--    by $Header: /cvsroot/lsb/lsbspec/mkrpmtagtable,v 1.2 2005/05/11 21:46:31 nick Exp 0 -->

<PARA>
Not all Index records defined here will be present in all packages. Each tag
value has a status which is defined here.
</PARA>
<VARIABLELIST>
<VARLISTENTRY>
<TERM>Required</TERM>
<LISTITEM>
<PARA>
This Index Record shall be present.
</PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM>Optional</TERM>
<LISTITEM>
<PARA>
This Index Record may be present.
</PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM>Informational</TERM>
<LISTITEM>
<PARA>
This Index Record may be present, but does not contribute to the processing of the package.
</PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM>Deprecated</TERM>
<LISTITEM>
<PARA>
This Index Record should not be present.
</PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM>Obsolete</TERM>
<LISTITEM>
<PARA>
This Index Record shall not be present.
</PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM>Reserved</TERM>
<LISTITEM>
<PARA>
This Index Record shall not be present.
</PARA>
</LISTITEM>
</VARLISTENTRY>
</VARIABLELIST>
</SECT4>
</SECT3>

<SECT3>
<TITLE>Header Store</TITLE>
<PARA>
The header store contains the values specified by the Index structures. These
values are aligned according to their type and padding is used if needed. The
store is located immediately following the Index structures.
</PARA>
</SECT3>

</SECT2>


<SECT2>
<TITLE>Signature Section</TITLE>
<PARA>
The Signature section is implemented using the Header structure. The signature
section defines the following additional tag values which may be used in
the Index structures.
</PARA>
<PARA>
These values exist to provide additional information about the rest of the
package.
</PARA>
<!-- Start of text generated from database -->
<!-- generated from the LSB specification database -->
<!--    by $Header: /cvsroot/lsb/lsbspec/mkrpmtagtable,v 1.2 2005/05/11 21:46:31 nick Exp 0 -->
<!--    at Wed Oct 12 18:34:35 2005 -->
<TABLE>
<TITLE>Signature Tag Values</TITLE>
<TGROUP COLS=5>
<THEAD>
<ROW>
<ENTRY ALIGN=center>Name</ENTRY><ENTRY ALIGN=center>Tag Value</ENTRY><ENTRY ALIGN=center>Type</ENTRY><ENTRY ALIGN=center>Count</ENTRY><ENTRY ALIGN=center>Status</ENTRY></ROW>
</THEAD>
<TBODY>
<ROW><ENTRY><CONSTANT>RPMSIGTAG_SIZE</CONSTANT></ENTRY><ENTRY>1000</ENTRY><ENTRY>INT32</ENTRY><ENTRY>1</ENTRY><ENTRY>Required</ENTRY></ROW>
<ROW><ENTRY><CONSTANT>RPMSIGTAG_PAYLOADSIZE</CONSTANT></ENTRY><ENTRY>1007</ENTRY><ENTRY>INT32</ENTRY><ENTRY>1</ENTRY><ENTRY>Optional</ENTRY></ROW>
</TBODY>
</TGROUP>
</TABLE>
<VARIABLELIST>
<VARLISTENTRY><TERM><CONSTANT>RPMSIGTAG_SIZE</CONSTANT></TERM><LISTITEM><PARA>This tag specifies the combined size of the Header and Payload sections.</PARA></LISTITEM></VARLISTENTRY>
<VARLISTENTRY><TERM><CONSTANT>RPMSIGTAG_PAYLOADSIZE</CONSTANT></TERM><LISTITEM><PARA>This tag specifies the uncompressed size of the Payload archive, including the cpio headers.</PARA></LISTITEM></VARLISTENTRY>
</VARIABLELIST>
<!-- End of text generated from database -->
<!--    by $Header: /cvsroot/lsb/lsbspec/mkrpmtagtable,v 1.2 2005/05/11 21:46:31 nick Exp 0 -->

<PARA>
These values exist to ensure the integrity of the rest of the package.
</PARA>
<!-- Start of text generated from database -->
<!-- generated from the LSB specification database -->
<!--    by $Header: /cvsroot/lsb/lsbspec/mkrpmtagtable,v 1.2 2005/05/11 21:46:31 nick Exp 0 -->
<!--    at Wed Oct 12 18:34:35 2005 -->
<TABLE>
<TITLE>Signature Digest Tag Values</TITLE>
<TGROUP COLS=5>
<THEAD>
<ROW>
<ENTRY ALIGN=center>Name</ENTRY><ENTRY ALIGN=center>Tag Value</ENTRY><ENTRY ALIGN=center>Type</ENTRY><ENTRY ALIGN=center>Count</ENTRY><ENTRY ALIGN=center>Status</ENTRY></ROW>
</THEAD>
<TBODY>
<ROW><ENTRY><CONSTANT>RPMSIGTAG_SHA1</CONSTANT></ENTRY><ENTRY>269</ENTRY><ENTRY>STRING</ENTRY><ENTRY>1</ENTRY><ENTRY>Optional</ENTRY></ROW>
<ROW><ENTRY><CONSTANT>RPMSIGTAG_MD5</CONSTANT></ENTRY><ENTRY>1004</ENTRY><ENTRY>BIN</ENTRY><ENTRY>16</ENTRY><ENTRY>Required</ENTRY></ROW>
</TBODY>
</TGROUP>
</TABLE>
<VARIABLELIST>
<VARLISTENTRY><TERM><CONSTANT>RPMSIGTAG_SHA1</CONSTANT></TERM><LISTITEM><PARA>This index contains the SHA1 checksum of the entire Header Section, including the Header Record, Index Records and Header store.</PARA></LISTITEM></VARLISTENTRY>
<VARLISTENTRY><TERM><CONSTANT>RPMSIGTAG_MD5</CONSTANT></TERM><LISTITEM><PARA>This tag specifies the 128-bit MD5 checksum of the combined Header and Archive sections.</PARA></LISTITEM></VARLISTENTRY>
</VARIABLELIST>
<!-- End of text generated from database -->
<!--    by $Header: /cvsroot/lsb/lsbspec/mkrpmtagtable,v 1.2 2005/05/11 21:46:31 nick Exp 0 -->

<PARA>
These values exist to provide authentication of the package.
</PARA>
<!-- Start of text generated from database -->
<!-- generated from the LSB specification database -->
<!--    by $Header: /cvsroot/lsb/lsbspec/mkrpmtagtable,v 1.2 2005/05/11 21:46:31 nick Exp 0 -->
<!--    at Wed Oct 12 18:34:35 2005 -->
<TABLE>
<TITLE>Signature Signing Tag Values</TITLE>
<TGROUP COLS=5>
<THEAD>
<ROW>
<ENTRY ALIGN=center>Name</ENTRY><ENTRY ALIGN=center>Tag Value</ENTRY><ENTRY ALIGN=center>Type</ENTRY><ENTRY ALIGN=center>Count</ENTRY><ENTRY ALIGN=center>Status</ENTRY></ROW>
</THEAD>
<TBODY>
<ROW><ENTRY><CONSTANT>RPMSIGTAG_DSA</CONSTANT></ENTRY><ENTRY>267</ENTRY><ENTRY>BIN</ENTRY><ENTRY>1</ENTRY><ENTRY>Optional</ENTRY></ROW>
<ROW><ENTRY><CONSTANT>RPMSIGTAG_RSA</CONSTANT></ENTRY><ENTRY>268</ENTRY><ENTRY>BIN</ENTRY><ENTRY>1</ENTRY><ENTRY>Optional</ENTRY></ROW>
<ROW><ENTRY><CONSTANT>RPMSIGTAG_PGP</CONSTANT></ENTRY><ENTRY>1002</ENTRY><ENTRY>BIN</ENTRY><ENTRY>1</ENTRY><ENTRY>Optional</ENTRY></ROW>
<ROW><ENTRY><CONSTANT>RPMSIGTAG_GPG</CONSTANT></ENTRY><ENTRY>1005</ENTRY><ENTRY>BIN</ENTRY><ENTRY>65</ENTRY><ENTRY>Optional</ENTRY></ROW>
</TBODY>
</TGROUP>
</TABLE>
<VARIABLELIST>
<VARLISTENTRY><TERM><CONSTANT>RPMSIGTAG_DSA</CONSTANT></TERM><LISTITEM><PARA>The tag contains the DSA signature of the Header section. The data is formatted as a Version 3 Signature Packet as specified in <XREF LINKEND="std.RFC2440">. If this tag is present,then the SIGTAG_GPG tag shall also be present.</PARA></LISTITEM></VARLISTENTRY>
<VARLISTENTRY><TERM><CONSTANT>RPMSIGTAG_RSA</CONSTANT></TERM><LISTITEM><PARA>The tag contains the RSA signature of the Header section.The data is formatted as a Version 3 Signature Packet as specified in <XREF LINKEND="std.RFC2440">. If this tag is present, then the SIGTAG_PGP shall also be present.</PARA></LISTITEM></VARLISTENTRY>
<VARLISTENTRY><TERM><CONSTANT>RPMSIGTAG_PGP</CONSTANT></TERM><LISTITEM><PARA>This tag specifies the RSA signature of the combined Header and Payload sections. The data is formatted as a Version 3 Signature Packet as specified in <XREF LINKEND="std.RFC2440">.</PARA></LISTITEM></VARLISTENTRY>
<VARLISTENTRY><TERM><CONSTANT>RPMSIGTAG_GPG</CONSTANT></TERM><LISTITEM><PARA>The tag contains the DSA signature of the combined Header and Payload sections. The data is formatted as a Version 3 Signature Packet as specified in <XREF LINKEND="std.RFC2440">.</PARA></LISTITEM></VARLISTENTRY>
</VARIABLELIST>
<!-- End of text generated from database -->
<!--    by $Header: /cvsroot/lsb/lsbspec/mkrpmtagtable,v 1.2 2005/05/11 21:46:31 nick Exp 0 -->

</SECT2>


<SECT2>
<TITLE>Header Section</TITLE>
<PARA>
The Header section is implemented using the Header structure. The Header
section defines the following additional tag values which may be used in
the Index structures.
</PARA>
<SECT3>
<TITLE>Package Information</TITLE>
<PARA>
The following tag values are used to indicate information that describes the
package as a whole.
</PARA>
<!-- Start of text generated from database -->
<!-- generated from the LSB specification database -->
<!--    by $Header: /cvsroot/lsb/lsbspec/mkrpmtagtable,v 1.2 2005/05/11 21:46:31 nick Exp 0 -->
<!--    at Wed Oct 12 18:34:36 2005 -->
<TABLE>
<TITLE>Package Info Tag Values</TITLE>
<TGROUP COLS=5>
<THEAD>
<ROW>
<ENTRY ALIGN=center>Name</ENTRY><ENTRY ALIGN=center>Tag Value</ENTRY><ENTRY ALIGN=center>Type</ENTRY><ENTRY ALIGN=center>Count</ENTRY><ENTRY ALIGN=center>Status</ENTRY></ROW>
</THEAD>
<TBODY>
<ROW><ENTRY><CONSTANT>RPMTAG_NAME</CONSTANT></ENTRY><ENTRY>1000</ENTRY><ENTRY>STRING</ENTRY><ENTRY>1</ENTRY><ENTRY>Required</ENTRY></ROW>
<ROW><ENTRY><CONSTANT>RPMTAG_VERSION</CONSTANT></ENTRY><ENTRY>1001</ENTRY><ENTRY>STRING</ENTRY><ENTRY>1</ENTRY><ENTRY>Required</ENTRY></ROW>
<ROW><ENTRY><CONSTANT>RPMTAG_RELEASE</CONSTANT></ENTRY><ENTRY>1002</ENTRY><ENTRY>STRING</ENTRY><ENTRY>1</ENTRY><ENTRY>Required</ENTRY></ROW>
<ROW><ENTRY><CONSTANT>RPMTAG_SUMMARY</CONSTANT></ENTRY><ENTRY>1004</ENTRY><ENTRY>I18NSTRING</ENTRY><ENTRY>1</ENTRY><ENTRY>Required</ENTRY></ROW>
<ROW><ENTRY><CONSTANT>RPMTAG_DESCRIPTION</CONSTANT></ENTRY><ENTRY>1005</ENTRY><ENTRY>I18NSTRING</ENTRY><ENTRY>1</ENTRY><ENTRY>Required</ENTRY></ROW>
<ROW><ENTRY><CONSTANT>RPMTAG_SIZE</CONSTANT></ENTRY><ENTRY>1009</ENTRY><ENTRY>INT32</ENTRY><ENTRY>1</ENTRY><ENTRY>Required</ENTRY></ROW>
<ROW><ENTRY><CONSTANT>RPMTAG_DISTRIBUTION</CONSTANT></ENTRY><ENTRY>1010</ENTRY><ENTRY>STRING</ENTRY><ENTRY>1</ENTRY><ENTRY>Informational</ENTRY></ROW>
<ROW><ENTRY><CONSTANT>RPMTAG_VENDOR</CONSTANT></ENTRY><ENTRY>1011</ENTRY><ENTRY>STRING</ENTRY><ENTRY>1</ENTRY><ENTRY>Informational</ENTRY></ROW>
<ROW><ENTRY><CONSTANT>RPMTAG_LICENSE</CONSTANT></ENTRY><ENTRY>1014</ENTRY><ENTRY>STRING</ENTRY><ENTRY>1</ENTRY><ENTRY>Required</ENTRY></ROW>
<ROW><ENTRY><CONSTANT>RPMTAG_PACKAGER</CONSTANT></ENTRY><ENTRY>1015</ENTRY><ENTRY>STRING</ENTRY><ENTRY>1</ENTRY><ENTRY>Informational</ENTRY></ROW>
<ROW><ENTRY><CONSTANT>RPMTAG_GROUP</CONSTANT></ENTRY><ENTRY>1016</ENTRY><ENTRY>I18NSTRING</ENTRY><ENTRY>1</ENTRY><ENTRY>Required</ENTRY></ROW>
<ROW><ENTRY><CONSTANT>RPMTAG_URL</CONSTANT></ENTRY><ENTRY>1020</ENTRY><ENTRY>STRING</ENTRY><ENTRY>1</ENTRY><ENTRY>Informational</ENTRY></ROW>
<ROW><ENTRY><CONSTANT>RPMTAG_OS</CONSTANT></ENTRY><ENTRY>1021</ENTRY><ENTRY>STRING</ENTRY><ENTRY>1</ENTRY><ENTRY>Required</ENTRY></ROW>
<ROW><ENTRY><CONSTANT>RPMTAG_ARCH</CONSTANT></ENTRY><ENTRY>1022</ENTRY><ENTRY>STRING</ENTRY><ENTRY>1</ENTRY><ENTRY>Required</ENTRY></ROW>
<ROW><ENTRY><CONSTANT>RPMTAG_SOURCERPM</CONSTANT></ENTRY><ENTRY>1044</ENTRY><ENTRY>STRING</ENTRY><ENTRY>1</ENTRY><ENTRY>Informational</ENTRY></ROW>
<ROW><ENTRY><CONSTANT>RPMTAG_ARCHIVESIZE</CONSTANT></ENTRY><ENTRY>1046</ENTRY><ENTRY>INT32</ENTRY><ENTRY>1</ENTRY><ENTRY>Optional</ENTRY></ROW>
<ROW><ENTRY><CONSTANT>RPMTAG_RPMVERSION</CONSTANT></ENTRY><ENTRY>1064</ENTRY><ENTRY>STRING</ENTRY><ENTRY>1</ENTRY><ENTRY>Informational</ENTRY></ROW>
<ROW><ENTRY><CONSTANT>RPMTAG_COOKIE</CONSTANT></ENTRY><ENTRY>1094</ENTRY><ENTRY>STRING</ENTRY><ENTRY>1</ENTRY><ENTRY>Optional</ENTRY></ROW>
<ROW><ENTRY><CONSTANT>RPMTAG_DISTURL</CONSTANT></ENTRY><ENTRY>1123</ENTRY><ENTRY>STRING</ENTRY><ENTRY>1</ENTRY><ENTRY>Informational</ENTRY></ROW>
<ROW><ENTRY><CONSTANT>RPMTAG_PAYLOADFORMAT</CONSTANT></ENTRY><ENTRY>1124</ENTRY><ENTRY>STRING</ENTRY><ENTRY>1</ENTRY><ENTRY>Required</ENTRY></ROW>
<ROW><ENTRY><CONSTANT>RPMTAG_PAYLOADCOMPRESSOR</CONSTANT></ENTRY><ENTRY>1125</ENTRY><ENTRY>STRING</ENTRY><ENTRY>1</ENTRY><ENTRY>Required</ENTRY></ROW>
<ROW><ENTRY><CONSTANT>RPMTAG_PAYLOADFLAGS</CONSTANT></ENTRY><ENTRY>1126</ENTRY><ENTRY>STRING</ENTRY><ENTRY>1</ENTRY><ENTRY>Required</ENTRY></ROW>
</TBODY>
</TGROUP>
</TABLE>
<VARIABLELIST>
<VARLISTENTRY><TERM><CONSTANT>RPMTAG_NAME</CONSTANT></TERM><LISTITEM><PARA>This tag specifies the name of the package.</PARA></LISTITEM></VARLISTENTRY>
<VARLISTENTRY><TERM><CONSTANT>RPMTAG_VERSION</CONSTANT></TERM><LISTITEM><PARA>This tag specifies the version of the package.</PARA></LISTITEM></VARLISTENTRY>
<VARLISTENTRY><TERM><CONSTANT>RPMTAG_RELEASE</CONSTANT></TERM><LISTITEM><PARA>This tag specifies the release of the package.</PARA></LISTITEM></VARLISTENTRY>
<VARLISTENTRY><TERM><CONSTANT>RPMTAG_SUMMARY</CONSTANT></TERM><LISTITEM><PARA>This tag specifies the summary description of the package. The summary value pointed to by this index record contains a one line description of the package.</PARA></LISTITEM></VARLISTENTRY>
<VARLISTENTRY><TERM><CONSTANT>RPMTAG_DESCRIPTION</CONSTANT></TERM><LISTITEM><PARA>This tag specifies the description of the package. The description value pointed to by this index record contains a full desription of the package.</PARA></LISTITEM></VARLISTENTRY>
<VARLISTENTRY><TERM><CONSTANT>RPMTAG_SIZE</CONSTANT></TERM><LISTITEM><PARA>This tag specifies the sum of the sizes of the regular files in the archive.</PARA></LISTITEM></VARLISTENTRY>
<VARLISTENTRY><TERM><CONSTANT>RPMTAG_DISTRIBUTION</CONSTANT></TERM><LISTITEM><PARA>A string containing the name of the distribution on which the package was built.</PARA></LISTITEM></VARLISTENTRY>
<VARLISTENTRY><TERM><CONSTANT>RPMTAG_VENDOR</CONSTANT></TERM><LISTITEM><PARA>A string containing the name of the organization that produced the package.</PARA></LISTITEM></VARLISTENTRY>
<VARLISTENTRY><TERM><CONSTANT>RPMTAG_LICENSE</CONSTANT></TERM><LISTITEM><PARA>This tag specifies the license which applies to this package.</PARA></LISTITEM></VARLISTENTRY>
<VARLISTENTRY><TERM><CONSTANT>RPMTAG_PACKAGER</CONSTANT></TERM><LISTITEM><PARA>A string identifying the tool used to build the package.</PARA></LISTITEM></VARLISTENTRY>
<VARLISTENTRY><TERM><CONSTANT>RPMTAG_GROUP</CONSTANT></TERM><LISTITEM><PARA>This tag specifies the administrative group to which this package belongs.</PARA></LISTITEM></VARLISTENTRY>
<VARLISTENTRY><TERM><CONSTANT>RPMTAG_URL</CONSTANT></TERM><LISTITEM><PARA>Generic package information URL</PARA></LISTITEM></VARLISTENTRY>
<VARLISTENTRY><TERM><CONSTANT>RPMTAG_OS</CONSTANT></TERM><LISTITEM><PARA>This tag specifies the OS of the package. The OS value pointed to by this index record shall be "linux".</PARA></LISTITEM></VARLISTENTRY>
<VARLISTENTRY><TERM><CONSTANT>RPMTAG_ARCH</CONSTANT></TERM><LISTITEM><PARA>This tag specifies the architecture of the package. The architecture value pointed to by this index record is defined in architecture specific LSB specification.</PARA></LISTITEM></VARLISTENTRY>
<VARLISTENTRY><TERM><CONSTANT>RPMTAG_SOURCERPM</CONSTANT></TERM><LISTITEM><PARA>This tag specifies the name of the source RPM</PARA></LISTITEM></VARLISTENTRY>
<VARLISTENTRY><TERM><CONSTANT>RPMTAG_ARCHIVESIZE</CONSTANT></TERM><LISTITEM><PARA>This tag specifies the uncompressed size of the Payload archive, including the cpio headers.</PARA></LISTITEM></VARLISTENTRY>
<VARLISTENTRY><TERM><CONSTANT>RPMTAG_RPMVERSION</CONSTANT></TERM><LISTITEM><PARA>This tag indicates the version of RPM tool used to build this package. The value is unused.</PARA></LISTITEM></VARLISTENTRY>
<VARLISTENTRY><TERM><CONSTANT>RPMTAG_COOKIE</CONSTANT></TERM><LISTITEM><PARA>This tag contains an opaque string whose contents are undefined.</PARA></LISTITEM></VARLISTENTRY>
<VARLISTENTRY><TERM><CONSTANT>RPMTAG_DISTURL</CONSTANT></TERM><LISTITEM><PARA>URL for package</PARA></LISTITEM></VARLISTENTRY>
<VARLISTENTRY><TERM><CONSTANT>RPMTAG_PAYLOADFORMAT</CONSTANT></TERM><LISTITEM><PARA>This tag specifies the format of the Archive section. The format value pointed to by this index record shall be 'cpio'.</PARA></LISTITEM></VARLISTENTRY>
<VARLISTENTRY><TERM><CONSTANT>RPMTAG_PAYLOADCOMPRESSOR</CONSTANT></TERM><LISTITEM><PARA>This tag specifies the compression used on the Archive section. The compression value pointed to by this index record shall be 'gzip'</PARA></LISTITEM></VARLISTENTRY>
<VARLISTENTRY><TERM><CONSTANT>RPMTAG_PAYLOADFLAGS</CONSTANT></TERM><LISTITEM><PARA>This tag indicates the compression level used for the Payload. This value shall always be '9'.</PARA></LISTITEM></VARLISTENTRY>
</VARIABLELIST>
<!-- End of text generated from database -->
<!--    by $Header: /cvsroot/lsb/lsbspec/mkrpmtagtable,v 1.2 2005/05/11 21:46:31 nick Exp 0 -->

</SECT3>
<SECT3>
<TITLE>Installation Information</TITLE>
<PARA>
The following tag values are used to provide information needed during the
installation of the package.
</PARA>
<!-- Start of text generated from database -->
<!-- generated from the LSB specification database -->
<!--    by $Header: /cvsroot/lsb/lsbspec/mkrpmtagtable,v 1.2 2005/05/11 21:46:31 nick Exp 0 -->
<!--    at Wed Oct 12 18:34:37 2005 -->
<TABLE>
<TITLE>Installation Tag Values</TITLE>
<TGROUP COLS=5>
<THEAD>
<ROW>
<ENTRY ALIGN=center>Name</ENTRY><ENTRY ALIGN=center>Tag Value</ENTRY><ENTRY ALIGN=center>Type</ENTRY><ENTRY ALIGN=center>Count</ENTRY><ENTRY ALIGN=center>Status</ENTRY></ROW>
</THEAD>
<TBODY>
<ROW><ENTRY><CONSTANT>RPMTAG_PREIN</CONSTANT></ENTRY><ENTRY>1023</ENTRY><ENTRY>STRING</ENTRY><ENTRY>1</ENTRY><ENTRY>Optional</ENTRY></ROW>
<ROW><ENTRY><CONSTANT>RPMTAG_POSTIN</CONSTANT></ENTRY><ENTRY>1024</ENTRY><ENTRY>STRING</ENTRY><ENTRY>1</ENTRY><ENTRY>Optional</ENTRY></ROW>
<ROW><ENTRY><CONSTANT>RPMTAG_PREUN</CONSTANT></ENTRY><ENTRY>1025</ENTRY><ENTRY>STRING</ENTRY><ENTRY>1</ENTRY><ENTRY>Optional</ENTRY></ROW>
<ROW><ENTRY><CONSTANT>RPMTAG_POSTUN</CONSTANT></ENTRY><ENTRY>1026</ENTRY><ENTRY>STRING</ENTRY><ENTRY>1</ENTRY><ENTRY>Optional</ENTRY></ROW>
<ROW><ENTRY><CONSTANT>RPMTAG_PREINPROG</CONSTANT></ENTRY><ENTRY>1085</ENTRY><ENTRY>STRING</ENTRY><ENTRY>1</ENTRY><ENTRY>Optional</ENTRY></ROW>
<ROW><ENTRY><CONSTANT>RPMTAG_POSTINPROG</CONSTANT></ENTRY><ENTRY>1086</ENTRY><ENTRY>STRING</ENTRY><ENTRY>1</ENTRY><ENTRY>Optional</ENTRY></ROW>
<ROW><ENTRY><CONSTANT>RPMTAG_PREUNPROG</CONSTANT></ENTRY><ENTRY>1087</ENTRY><ENTRY>STRING</ENTRY><ENTRY>1</ENTRY><ENTRY>Optional</ENTRY></ROW>
<ROW><ENTRY><CONSTANT>RPMTAG_POSTUNPROG</CONSTANT></ENTRY><ENTRY>1088</ENTRY><ENTRY>STRING</ENTRY><ENTRY>1</ENTRY><ENTRY>Optional</ENTRY></ROW>
</TBODY>
</TGROUP>
</TABLE>
<VARIABLELIST>
<VARLISTENTRY><TERM><CONSTANT>RPMTAG_PREIN</CONSTANT></TERM><LISTITEM><PARA>This tag specifies the preinstall scriptlet. If present, then RPMTAG_PREINPROG shall also be present.</PARA></LISTITEM></VARLISTENTRY>
<VARLISTENTRY><TERM><CONSTANT>RPMTAG_POSTIN</CONSTANT></TERM><LISTITEM><PARA>This tag specifies the postinstall scriptlet. If present, then RPMTAG_POSTINPROG shall also be present.</PARA></LISTITEM></VARLISTENTRY>
<VARLISTENTRY><TERM><CONSTANT>RPMTAG_PREUN</CONSTANT></TERM><LISTITEM><PARA>his tag specifies the preuninstall scriptlet. If present, then RPMTAG_PREUNPROG shall also be present.</PARA></LISTITEM></VARLISTENTRY>
<VARLISTENTRY><TERM><CONSTANT>RPMTAG_POSTUN</CONSTANT></TERM><LISTITEM><PARA>This tag specified the postuninstall scriptlet. If present, then RPMTAG_POSTUNPROG shall also be present.</PARA></LISTITEM></VARLISTENTRY>
<VARLISTENTRY><TERM><CONSTANT>RPMTAG_PREINPROG</CONSTANT></TERM><LISTITEM><PARA>This tag specifies the name of the intepreter to which the preinstall scriptlet will be passed. The intepreter pointed to by this index record shall be <filename>/bin/sh</filename>.</PARA></LISTITEM></VARLISTENTRY>
<VARLISTENTRY><TERM><CONSTANT>RPMTAG_POSTINPROG</CONSTANT></TERM><LISTITEM><PARA>This tag specifies the name of the intepreter to which the postinstall scriptlet will be passed. The intepreter pointed to by this index record shall be <filename>/bin/sh</filename>.</PARA></LISTITEM></VARLISTENTRY>
<VARLISTENTRY><TERM><CONSTANT>RPMTAG_PREUNPROG</CONSTANT></TERM><LISTITEM><PARA>This tag specifies the name of the intepreter to which the preuninstall scriptlet will be passed. The intepreter pointed to by this index record shall be <filename>/bin/sh</filename>.</PARA></LISTITEM></VARLISTENTRY>
<VARLISTENTRY><TERM><CONSTANT>RPMTAG_POSTUNPROG</CONSTANT></TERM><LISTITEM><PARA>This program specifies the name of the intepreter to which the postuninstall scriptlet will be passed. The intepreter pointed to by this index record shall be <filename>/bin/sh</filename>.</PARA></LISTITEM></VARLISTENTRY>
</VARIABLELIST>
<!-- End of text generated from database -->
<!--    by $Header: /cvsroot/lsb/lsbspec/mkrpmtagtable,v 1.2 2005/05/11 21:46:31 nick Exp 0 -->

</SECT3>
<SECT3>
<TITLE>File Information</TITLE>
<PARA>
The following tag values are used to provide information about the files
in the payload. This information is provided in the header to allow more
efficient access of the information.
</PARA>
<!-- Start of text generated from database -->
<!-- generated from the LSB specification database -->
<!--    by $Header: /cvsroot/lsb/lsbspec/mkrpmtagtable,v 1.2 2005/05/11 21:46:31 nick Exp 0 -->
<!--    at Wed Oct 12 18:34:37 2005 -->
<TABLE>
<TITLE>File Info Tag Values</TITLE>
<TGROUP COLS=5>
<THEAD>
<ROW>
<ENTRY ALIGN=center>Name</ENTRY><ENTRY ALIGN=center>Tag Value</ENTRY><ENTRY ALIGN=center>Type</ENTRY><ENTRY ALIGN=center>Count</ENTRY><ENTRY ALIGN=center>Status</ENTRY></ROW>
</THEAD>
<TBODY>
<ROW><ENTRY><CONSTANT>RPMTAG_OLDFILENAMES</CONSTANT></ENTRY><ENTRY>1027</ENTRY><ENTRY>STRING_ARRAY</ENTRY><ENTRY></ENTRY><ENTRY>Optional</ENTRY></ROW>
<ROW><ENTRY><CONSTANT>RPMTAG_FILESIZES</CONSTANT></ENTRY><ENTRY>1028</ENTRY><ENTRY>INT32</ENTRY><ENTRY></ENTRY><ENTRY>Required</ENTRY></ROW>
<ROW><ENTRY><CONSTANT>RPMTAG_FILEMODES</CONSTANT></ENTRY><ENTRY>1030</ENTRY><ENTRY>INT16</ENTRY><ENTRY></ENTRY><ENTRY>Required</ENTRY></ROW>
<ROW><ENTRY><CONSTANT>RPMTAG_FILERDEVS</CONSTANT></ENTRY><ENTRY>1033</ENTRY><ENTRY>INT16</ENTRY><ENTRY></ENTRY><ENTRY>Required</ENTRY></ROW>
<ROW><ENTRY><CONSTANT>RPMTAG_FILEMTIMES</CONSTANT></ENTRY><ENTRY>1034</ENTRY><ENTRY>INT32</ENTRY><ENTRY></ENTRY><ENTRY>Required</ENTRY></ROW>
<ROW><ENTRY><CONSTANT>RPMTAG_FILEMD5S</CONSTANT></ENTRY><ENTRY>1035</ENTRY><ENTRY>STRING_ARRAY</ENTRY><ENTRY></ENTRY><ENTRY>Required</ENTRY></ROW>
<ROW><ENTRY><CONSTANT>RPMTAG_FILELINKTOS</CONSTANT></ENTRY><ENTRY>1036</ENTRY><ENTRY>STRING_ARRAY</ENTRY><ENTRY></ENTRY><ENTRY>Required</ENTRY></ROW>
<ROW><ENTRY><CONSTANT>RPMTAG_FILEFLAGS</CONSTANT></ENTRY><ENTRY>1037</ENTRY><ENTRY>INT32</ENTRY><ENTRY></ENTRY><ENTRY>Required</ENTRY></ROW>
<ROW><ENTRY><CONSTANT>RPMTAG_FILEUSERNAME</CONSTANT></ENTRY><ENTRY>1039</ENTRY><ENTRY>STRING_ARRAY</ENTRY><ENTRY></ENTRY><ENTRY>Required</ENTRY></ROW>
<ROW><ENTRY><CONSTANT>RPMTAG_FILEGROUPNAME</CONSTANT></ENTRY><ENTRY>1040</ENTRY><ENTRY>STRING_ARRAY</ENTRY><ENTRY></ENTRY><ENTRY>Required</ENTRY></ROW>
<ROW><ENTRY><CONSTANT>RPMTAG_FILEDEVICES</CONSTANT></ENTRY><ENTRY>1095</ENTRY><ENTRY>INT32</ENTRY><ENTRY></ENTRY><ENTRY>Required</ENTRY></ROW>
<ROW><ENTRY><CONSTANT>RPMTAG_FILEINODES</CONSTANT></ENTRY><ENTRY>1096</ENTRY><ENTRY>INT32</ENTRY><ENTRY></ENTRY><ENTRY>Required</ENTRY></ROW>
<ROW><ENTRY><CONSTANT>RPMTAG_FILELANGS</CONSTANT></ENTRY><ENTRY>1097</ENTRY><ENTRY>STRING_ARRAY</ENTRY><ENTRY></ENTRY><ENTRY>Required</ENTRY></ROW>
<ROW><ENTRY><CONSTANT>RPMTAG_DIRINDEXES</CONSTANT></ENTRY><ENTRY>1116</ENTRY><ENTRY>INT32</ENTRY><ENTRY></ENTRY><ENTRY>Optional</ENTRY></ROW>
<ROW><ENTRY><CONSTANT>RPMTAG_BASENAMES</CONSTANT></ENTRY><ENTRY>1117</ENTRY><ENTRY>STRING_ARRAY</ENTRY><ENTRY></ENTRY><ENTRY>Optional</ENTRY></ROW>
<ROW><ENTRY><CONSTANT>RPMTAG_DIRNAMES</CONSTANT></ENTRY><ENTRY>1118</ENTRY><ENTRY>STRING_ARRAY</ENTRY><ENTRY></ENTRY><ENTRY>Optional</ENTRY></ROW>
</TBODY>
</TGROUP>
</TABLE>
<VARIABLELIST>
<VARLISTENTRY><TERM><CONSTANT>RPMTAG_OLDFILENAMES</CONSTANT></TERM><LISTITEM><PARA>This tag specifies the filenames when not in a compressed format as determined by the absence of rpmlib(CompressedFileNames) in the RPMTAG_REQUIRENAME index.</PARA></LISTITEM></VARLISTENTRY>
<VARLISTENTRY><TERM><CONSTANT>RPMTAG_FILESIZES</CONSTANT></TERM><LISTITEM><PARA>This tag specifies the size of each file in the archive.</PARA></LISTITEM></VARLISTENTRY>
<VARLISTENTRY><TERM><CONSTANT>RPMTAG_FILEMODES</CONSTANT></TERM><LISTITEM><PARA>This tag specifies the mode of each file in the archive.</PARA></LISTITEM></VARLISTENTRY>
<VARLISTENTRY><TERM><CONSTANT>RPMTAG_FILERDEVS</CONSTANT></TERM><LISTITEM><PARA>This tag specifies the device number from which the file was copied.</PARA></LISTITEM></VARLISTENTRY>
<VARLISTENTRY><TERM><CONSTANT>RPMTAG_FILEMTIMES</CONSTANT></TERM><LISTITEM><PARA>This tag specifies the modification time in seconds since the epoch of each file in the archive.</PARA></LISTITEM></VARLISTENTRY>
<VARLISTENTRY><TERM><CONSTANT>RPMTAG_FILEMD5S</CONSTANT></TERM><LISTITEM><PARA>This tag specifies the ASCII representation of the MD5 sum of the corresponding file contents. This value is empty if the corresponding archive entry is not a regular file.</PARA></LISTITEM></VARLISTENTRY>
<VARLISTENTRY><TERM><CONSTANT>RPMTAG_FILELINKTOS</CONSTANT></TERM><LISTITEM><PARA>The target for a symlink, otherwise NULL.</PARA></LISTITEM></VARLISTENTRY>
<VARLISTENTRY><TERM><CONSTANT>RPMTAG_FILEFLAGS</CONSTANT></TERM><LISTITEM><PARA>This tag specifies the bit(s) to classify and control how files are to be installed. See below.</PARA></LISTITEM></VARLISTENTRY>
<VARLISTENTRY><TERM><CONSTANT>RPMTAG_FILEUSERNAME</CONSTANT></TERM><LISTITEM><PARA>This tag specifies the owner of the corresponding file.</PARA></LISTITEM></VARLISTENTRY>
<VARLISTENTRY><TERM><CONSTANT>RPMTAG_FILEGROUPNAME</CONSTANT></TERM><LISTITEM><PARA>This tag specifies the group of the corresponding file.</PARA></LISTITEM></VARLISTENTRY>
<VARLISTENTRY><TERM><CONSTANT>RPMTAG_FILEDEVICES</CONSTANT></TERM><LISTITEM><PARA>This tag specifies the 16 bit device number from which the file was copied.</PARA></LISTITEM></VARLISTENTRY>
<VARLISTENTRY><TERM><CONSTANT>RPMTAG_FILEINODES</CONSTANT></TERM><LISTITEM><PARA>This tag specifies the inode value from the original file system on the the system on which it was built.</PARA></LISTITEM></VARLISTENTRY>
<VARLISTENTRY><TERM><CONSTANT>RPMTAG_FILELANGS</CONSTANT></TERM><LISTITEM><PARA>This tag specifies a per-file locale marker used to install only locale specific subsets of files when the package is installed.</PARA></LISTITEM></VARLISTENTRY>
<VARLISTENTRY><TERM><CONSTANT>RPMTAG_DIRINDEXES</CONSTANT></TERM><LISTITEM><PARA>This tag specifies the index into the array provided by the RPMTAG_DIRNAMES Index which contains the directory name for the corresponding filename.</PARA></LISTITEM></VARLISTENTRY>
<VARLISTENTRY><TERM><CONSTANT>RPMTAG_BASENAMES</CONSTANT></TERM><LISTITEM><PARA>This tag specifies the base portion of the corresponding filename.</PARA></LISTITEM></VARLISTENTRY>
<VARLISTENTRY><TERM><CONSTANT>RPMTAG_DIRNAMES</CONSTANT></TERM><LISTITEM><PARA></PARA></LISTITEM></VARLISTENTRY>
</VARIABLELIST>
<!-- End of text generated from database -->
<!--    by $Header: /cvsroot/lsb/lsbspec/mkrpmtagtable,v 1.2 2005/05/11 21:46:31 nick Exp 0 -->

<PARA>
One of <CONSTANT>RPMTAG_OLDFILENAMES</CONSTANT> or the tuple
<CONSTANT>RPMTAG_DIRINDEXES,RPMTAG_BASENAMES,RPMTAG_DIRNAMES</CONSTANT> shall be present, but not
both.
</PARA>
<SECT4>
<TITLE>File Flags</TITLE>
<PARA>
The <CONSTANT>RPMTAG_FILEFLAGS</CONSTANT> tag value shall identify 
various characteristics of the file in the payload that it describes. It
shall be an
<TYPE>INT32</TYPE> value consisting of either the
value <CONSTANT>RPMFILE_NONE</CONSTANT> (0) or the bitwise inclusive or of one
or more of the following values:
<TABLE>
<TITLE>File Flags</TITLE>
<TGROUP COLS=2>
<THEAD>
<ROW>
<ENTRY>Name</ENTRY><ENTRY>Value</ENTRY>
</ROW>
</THEAD>
<TBODY>
<ROW>
<ENTRY><CONSTANT>RPMFILE_CONFIG</CONSTANT></ENTRY><ENTRY>(1 &lt;&lt; 0)</ENTRY>
</ROW><ROW>
<ENTRY><CONSTANT>RPMFILE_DOC</CONSTANT></ENTRY><ENTRY>(1 &lt;&lt; 1)</ENTRY>
</ROW><ROW>
<ENTRY><CONSTANT>RPMFILE_DONOTUSE</CONSTANT></ENTRY><ENTRY>(1 &lt;&lt; 2)</ENTRY>
</ROW><ROW>
<ENTRY><CONSTANT>RPMFILE_MISSINGOK</CONSTANT></ENTRY><ENTRY>(1 &lt;&lt; 3)</ENTRY>
</ROW><ROW>
<ENTRY><CONSTANT>RPMFILE_NOREPLACE</CONSTANT></ENTRY><ENTRY>(1 &lt;&lt; 4)</ENTRY>
</ROW><ROW>
<ENTRY><CONSTANT>RPMFILE_SPECFILE</CONSTANT></ENTRY><ENTRY>(1 &lt;&lt; 5)</ENTRY>
</ROW><ROW>
<ENTRY><CONSTANT>RPMFILE_GHOST</CONSTANT></ENTRY><ENTRY>(1 &lt;&lt; 6)</ENTRY>
</ROW><ROW>
<ENTRY><CONSTANT>RPMFILE_LICENSE</CONSTANT></ENTRY><ENTRY>(1 &lt;&lt; 7)</ENTRY>
</ROW><ROW>
<ENTRY><CONSTANT>RPMFILE_README</CONSTANT></ENTRY><ENTRY>(1 &lt;&lt; 8)</ENTRY>
</ROW><ROW>
<ENTRY><CONSTANT>RPMFILE_EXCLUDE</CONSTANT></ENTRY><ENTRY>(1 &lt;&lt; 9)</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</PARA>
<PARA>
These bits have the following meaning:
<VARIABLELIST>
<VARLISTENTRY>
<TERM><CONSTANT>RPMFILE_CONFIG</CONSTANT></TERM>
<LISTITEM><PARA>
The file is a configuration file, and an existing file should be saved during
a package upgrade operation and not removed during a pakage removal operation.
</PARA></LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM><CONSTANT>RPMFILE_DOC</CONSTANT></TERM>
<LISTITEM><PARA>
The file contains documentation.
</PARA></LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM><CONSTANT>RPMFILE_DONOTUSE</CONSTANT></TERM>
<LISTITEM><PARA>
This value is reserved for future use; conforming
packages may not use this flag.
</PARA></LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM><CONSTANT>RPMFILE_MISSINGOK</CONSTANT></TERM>
<LISTITEM><PARA>
The file need not exist on the installed system.
</PARA></LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM><CONSTANT>RPMFILE_NOREPLACE</CONSTANT></TERM>
<LISTITEM><PARA>
Similar to the <CONSTANT>RPMFILE_CONFIG</CONSTANT>, this
flag indicates that during an upgrade operation the original
file on the system should not be altered.
</PARA></LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM><CONSTANT>RPMFILE_SPECFILE</CONSTANT></TERM>
<LISTITEM><PARA>
The file is a package specification.
</PARA></LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM><CONSTANT>RPMFILE_GHOST</CONSTANT></TERM>
<LISTITEM><PARA>
The file is not actually included in the payload, but
should still be considered as a part of the package. 
For example, a log file
generated by the application at run time.
</PARA></LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM><CONSTANT>RPMFILE_LICENSE</CONSTANT></TERM>
<LISTITEM><PARA>
The file contains the license conditions.
</PARA></LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM><CONSTANT>RPMFILE_README</CONSTANT></TERM>
<LISTITEM><PARA>
The file contains high level notes about the package.
</PARA></LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM><CONSTANT>RPMFILE_EXCLUDE</CONSTANT></TERM>
<LISTITEM><PARA>
The corresponding file is not a part of the package,
and should not be installed.
</PARA></LISTITEM>
</VARLISTENTRY>
</VARIABLELIST>
</PARA>
</SECT4>
</SECT3>
<SECT3>
<TITLE>Dependency Information</TITLE>
<PARA>
The following tag values are used to provide information about
interdependencies between packages.
</PARA>
<!-- Start of text generated from database -->
<!-- generated from the LSB specification database -->
<!--    by $Header: /cvsroot/lsb/lsbspec/mkrpmtagtable,v 1.2 2005/05/11 21:46:31 nick Exp 0 -->
<!--    at Wed Oct 12 18:34:37 2005 -->
<TABLE>
<TITLE>Package Dependency Tag Values</TITLE>
<TGROUP COLS=5>
<THEAD>
<ROW>
<ENTRY ALIGN=center>Name</ENTRY><ENTRY ALIGN=center>Tag Value</ENTRY><ENTRY ALIGN=center>Type</ENTRY><ENTRY ALIGN=center>Count</ENTRY><ENTRY ALIGN=center>Status</ENTRY></ROW>
</THEAD>
<TBODY>
<ROW><ENTRY><CONSTANT>RPMTAG_PROVIDENAME</CONSTANT></ENTRY><ENTRY>1047</ENTRY><ENTRY>STRING_ARRAY</ENTRY><ENTRY>1</ENTRY><ENTRY>Required</ENTRY></ROW>
<ROW><ENTRY><CONSTANT>RPMTAG_REQUIREFLAGS</CONSTANT></ENTRY><ENTRY>1048</ENTRY><ENTRY>INT32</ENTRY><ENTRY></ENTRY><ENTRY>Required</ENTRY></ROW>
<ROW><ENTRY><CONSTANT>RPMTAG_REQUIRENAME</CONSTANT></ENTRY><ENTRY>1049</ENTRY><ENTRY>STRING_ARRAY</ENTRY><ENTRY></ENTRY><ENTRY>Required</ENTRY></ROW>
<ROW><ENTRY><CONSTANT>RPMTAG_REQUIREVERSION</CONSTANT></ENTRY><ENTRY>1050</ENTRY><ENTRY>STRING_ARRAY</ENTRY><ENTRY></ENTRY><ENTRY>Required</ENTRY></ROW>
<ROW><ENTRY><CONSTANT>RPMTAG_CONFLICTFLAGS</CONSTANT></ENTRY><ENTRY>1053</ENTRY><ENTRY>INT32</ENTRY><ENTRY></ENTRY><ENTRY>Optional</ENTRY></ROW>
<ROW><ENTRY><CONSTANT>RPMTAG_CONFLICTNAME</CONSTANT></ENTRY><ENTRY>1054</ENTRY><ENTRY>STRING_ARRAY</ENTRY><ENTRY></ENTRY><ENTRY>Optional</ENTRY></ROW>
<ROW><ENTRY><CONSTANT>RPMTAG_CONFLICTVERSION</CONSTANT></ENTRY><ENTRY>1055</ENTRY><ENTRY>STRING_ARRAY</ENTRY><ENTRY></ENTRY><ENTRY>Optional</ENTRY></ROW>
<ROW><ENTRY><CONSTANT>RPMTAG_OBSOLETENAME</CONSTANT></ENTRY><ENTRY>1090</ENTRY><ENTRY>STRING_ARRAY</ENTRY><ENTRY></ENTRY><ENTRY>Optional</ENTRY></ROW>
<ROW><ENTRY><CONSTANT>RPMTAG_PROVIDEFLAGS</CONSTANT></ENTRY><ENTRY>1112</ENTRY><ENTRY>INT32</ENTRY><ENTRY></ENTRY><ENTRY>Required</ENTRY></ROW>
<ROW><ENTRY><CONSTANT>RPMTAG_PROVIDEVERSION</CONSTANT></ENTRY><ENTRY>1113</ENTRY><ENTRY>STRING_ARRAY</ENTRY><ENTRY></ENTRY><ENTRY>Required</ENTRY></ROW>
<ROW><ENTRY><CONSTANT>RPMTAG_OBSOLETEFLAGS</CONSTANT></ENTRY><ENTRY>1114</ENTRY><ENTRY>INT32</ENTRY><ENTRY>1</ENTRY><ENTRY>Optional</ENTRY></ROW>
<ROW><ENTRY><CONSTANT>RPMTAG_OBSOLETEVERSION</CONSTANT></ENTRY><ENTRY>1115</ENTRY><ENTRY>STRING_ARRAY</ENTRY><ENTRY></ENTRY><ENTRY>Optional</ENTRY></ROW>
</TBODY>
</TGROUP>
</TABLE>
<VARIABLELIST>
<VARLISTENTRY><TERM><CONSTANT>RPMTAG_PROVIDENAME</CONSTANT></TERM><LISTITEM><PARA>This tag indicates the name of the dependency provided by this package.</PARA></LISTITEM></VARLISTENTRY>
<VARLISTENTRY><TERM><CONSTANT>RPMTAG_REQUIREFLAGS</CONSTANT></TERM><LISTITEM><PARA>Bits(s) to specify the dependency range and context.</PARA></LISTITEM></VARLISTENTRY>
<VARLISTENTRY><TERM><CONSTANT>RPMTAG_REQUIRENAME</CONSTANT></TERM><LISTITEM><PARA>This tag indicates the dependencies for this package.</PARA></LISTITEM></VARLISTENTRY>
<VARLISTENTRY><TERM><CONSTANT>RPMTAG_REQUIREVERSION</CONSTANT></TERM><LISTITEM><PARA>This tag indicates the versions associated with the values found in the RPMTAG_REQUIRENAME Index.</PARA></LISTITEM></VARLISTENTRY>
<VARLISTENTRY><TERM><CONSTANT>RPMTAG_CONFLICTFLAGS</CONSTANT></TERM><LISTITEM><PARA>Bits(s) to specify the conflict range and context.</PARA></LISTITEM></VARLISTENTRY>
<VARLISTENTRY><TERM><CONSTANT>RPMTAG_CONFLICTNAME</CONSTANT></TERM><LISTITEM><PARA>This tag indicates the conflicting dependencies for this package.</PARA></LISTITEM></VARLISTENTRY>
<VARLISTENTRY><TERM><CONSTANT>RPMTAG_CONFLICTVERSION</CONSTANT></TERM><LISTITEM><PARA>This tag indicates the versions associated with the values found in the RPMTAG_CONFLICTNAME Index.</PARA></LISTITEM></VARLISTENTRY>
<VARLISTENTRY><TERM><CONSTANT>RPMTAG_OBSOLETENAME</CONSTANT></TERM><LISTITEM><PARA>This tag indicates the obsoleted dependencies for this package.</PARA></LISTITEM></VARLISTENTRY>
<VARLISTENTRY><TERM><CONSTANT>RPMTAG_PROVIDEFLAGS</CONSTANT></TERM><LISTITEM><PARA>Bits(s) to specify the conflict range and context.</PARA></LISTITEM></VARLISTENTRY>
<VARLISTENTRY><TERM><CONSTANT>RPMTAG_PROVIDEVERSION</CONSTANT></TERM><LISTITEM><PARA>This tag indicates the versions associated with the values found in the RPMTAG_PROVIDENAME Index.</PARA></LISTITEM></VARLISTENTRY>
<VARLISTENTRY><TERM><CONSTANT>RPMTAG_OBSOLETEFLAGS</CONSTANT></TERM><LISTITEM><PARA>Bits(s) to specify the conflict range and context.</PARA></LISTITEM></VARLISTENTRY>
<VARLISTENTRY><TERM><CONSTANT>RPMTAG_OBSOLETEVERSION</CONSTANT></TERM><LISTITEM><PARA>This tag indicates the versions associated with the values found in the RPMTAG_OBSOLETENAME Index.</PARA></LISTITEM></VARLISTENTRY>
</VARIABLELIST>
<!-- End of text generated from database -->
<!--    by $Header: /cvsroot/lsb/lsbspec/mkrpmtagtable,v 1.2 2005/05/11 21:46:31 nick Exp 0 -->

<SECT4>
<TITLE>Package Dependency Values</TITLE>
<PARA>
The package dependencies are stored in the
<VARNAME>RPMTAG_REQUIRENAME</VARNAME> and
<VARNAME>RPMTAG_REQUIREVERSION</VARNAME>
index records. The following values may be used.
</PARA>
<TABLE>
<TITLE>Index Type values</TITLE>
<TGROUP COLS=2>
<THEAD>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY>Version</ENTRY>
<ENTRY>Meaning</ENTRY>
<ENTRY>Status</ENTRY>
</ROW>
</THEAD>
<TBODY>
<ROW>
<ENTRY>rpmlib(VersionedDependencies)</ENTRY>
<ENTRY>3.0.3-1</ENTRY>
<ENTRY>Indicates that the package contains <CONSTANT>RPMTAG_PROVIDENAME</CONSTANT>,
<CONSTANT>RPMTAG_OBSOLETENAME</CONSTANT> or 
<CONSTANT>RPMTAG_PREREQ</CONSTANT> records that have a version associated
with them.</ENTRY>
<ENTRY>Optional</ENTRY>
</ROW>
<ROW>
<ENTRY>rpmlib(PayloadFilesHavePrefix)</ENTRY>
<ENTRY>4.0-1</ENTRY>
<ENTRY>Indicates the filenames in the Archive have had "." prepended to them.</ENTRY>
<ENTRY>Optional</ENTRY>
</ROW>
<ROW>
<ENTRY>rpmlib(CompressedFileNames)</ENTRY>
<ENTRY>3.0.4-1</ENTRY>
<ENTRY>Indicates that the filenames in the Payload are represented in the
<CONSTANT>RPMTAG_DIRINDEXES</CONSTANT>, 
<CONSTANT>RPMTAG_DIRNAME</CONSTANT> and 
<CONSTANT>RPMTAG_BASENAMES</CONSTANT> indexes.</ENTRY>
<ENTRY>Optional</ENTRY>
</ROW>
<ROW>
<ENTRY>rpmlib(PartialHardlinkSets)</ENTRY>
<ENTRY>4.0.4-1</ENTRY>
<ENTRY>Indicates that some of the filenames in the Payload contain hard links
to others.
</ENTRY>
<ENTRY>Optional</ENTRY>
</ROW>
<ROW>
<ENTRY><COMMAND>/bin/sh</COMMAND></ENTRY>
<ENTRY></ENTRY>
<ENTRY>Interpreter usually required for installation scripts.</ENTRY>
<ENTRY>Optional</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>

<PARA>
Additional dependencies are specified in the Package Dependencies section of
this specification, and the architecture specific supplements.
</PARA>
</SECT4>
<SECT4>
<TITLE>Package Dependencies Attributes</TITLE>
<PARA>
The package dependency attributes are stored in the
<VARNAME>RPMTAG_REQUIREFLAGS</VARNAME>,
<VARNAME>RPMTAG_PROVIDEFLAGS</VARNAME> and
<VARNAME>RPMTAG_OBSOLETEFLAGS</VARNAME>
index records. The following values may be used.
</PARA>
<TABLE>
<TITLE>Package Dependency Attributes</TITLE>
<TGROUP COLS=2>
<THEAD>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY>Value</ENTRY>
<ENTRY>Meaning</ENTRY>
</ROW>
</THEAD>
<TBODY>
<ROW>
<ENTRY><CONSTANT>RPMSENSE_LESS</CONSTANT></ENTRY>
<ENTRY><LITERAL>0x02</LITERAL></ENTRY>
<ENTRY></ENTRY>
</ROW>
<ROW>
<ENTRY><CONSTANT>RPMSENSE_GREATER</CONSTANT></ENTRY>
<ENTRY><LITERAL>0x04</LITERAL></ENTRY>
<ENTRY></ENTRY>
</ROW>
<ROW>
<ENTRY><CONSTANT>RPMSENSE_EQUAL</CONSTANT></ENTRY>
<ENTRY><LITERAL>0x08</LITERAL></ENTRY>
<ENTRY></ENTRY>
</ROW>
<ROW>
<ENTRY><CONSTANT>RPMSENSE_PREREQ</CONSTANT></ENTRY>
<ENTRY><LITERAL>0x40</LITERAL></ENTRY>
<ENTRY></ENTRY>
</ROW>
<ROW>
<ENTRY><CONSTANT>RPMSENSE_INTERP</CONSTANT></ENTRY>
<ENTRY><LITERAL>0x100</LITERAL></ENTRY>
<ENTRY></ENTRY>
</ROW>
<ROW>
<ENTRY><CONSTANT>RPMSENSE_SCRIPT_PRE</CONSTANT></ENTRY>
<ENTRY><LITERAL>0x200</LITERAL></ENTRY>
<ENTRY></ENTRY>
</ROW>
<ROW>
<ENTRY><CONSTANT>RPMSENSE_SCRIPT_POST</CONSTANT></ENTRY>
<ENTRY><LITERAL>0x400</LITERAL></ENTRY>
<ENTRY></ENTRY>
</ROW>
<ROW>
<ENTRY><CONSTANT>RPMSENSE_SCRIPT_PREUN</CONSTANT></ENTRY>
<ENTRY><LITERAL>0x800</LITERAL></ENTRY>
<ENTRY></ENTRY>
</ROW>
<ROW>
<ENTRY><CONSTANT>RPMSENSE_SCRIPT_POSTUN</CONSTANT></ENTRY>
<ENTRY><LITERAL>0x1000</LITERAL></ENTRY>
<ENTRY></ENTRY>
</ROW>
<ROW>
<ENTRY><CONSTANT>RPMSENSE_RPMLIB</CONSTANT></ENTRY>
<ENTRY><LITERAL>0x1000000</LITERAL></ENTRY>
<ENTRY></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>

</SECT4>
</SECT3>
<SECT3>
<TITLE>Other Information</TITLE>
<PARA>
The following tag values are also found in the Header section.
</PARA>
<!-- Start of text generated from database -->
<!-- generated from the LSB specification database -->
<!--    by $Header: /cvsroot/lsb/lsbspec/mkrpmtagtable,v 1.2 2005/05/11 21:46:31 nick Exp 0 -->
<!--    at Wed Oct 12 18:34:38 2005 -->
<TABLE>
<TITLE>Other Tag Values</TITLE>
<TGROUP COLS=5>
<THEAD>
<ROW>
<ENTRY ALIGN=center>Name</ENTRY><ENTRY ALIGN=center>Tag Value</ENTRY><ENTRY ALIGN=center>Type</ENTRY><ENTRY ALIGN=center>Count</ENTRY><ENTRY ALIGN=center>Status</ENTRY></ROW>
</THEAD>
<TBODY>
<ROW><ENTRY><CONSTANT>RPMTAG_BUILDTIME</CONSTANT></ENTRY><ENTRY>1006</ENTRY><ENTRY>INT32</ENTRY><ENTRY>1</ENTRY><ENTRY>Informational</ENTRY></ROW>
<ROW><ENTRY><CONSTANT>RPMTAG_BUILDHOST</CONSTANT></ENTRY><ENTRY>1007</ENTRY><ENTRY>STRING</ENTRY><ENTRY>1</ENTRY><ENTRY>Informational</ENTRY></ROW>
<ROW><ENTRY><CONSTANT>RPMTAG_FILEVERIFYFLAGS</CONSTANT></ENTRY><ENTRY>1045</ENTRY><ENTRY>INT32</ENTRY><ENTRY></ENTRY><ENTRY>Optional</ENTRY></ROW>
<ROW><ENTRY><CONSTANT>RPMTAG_CHANGELOGTIME</CONSTANT></ENTRY><ENTRY>1080</ENTRY><ENTRY>INT32</ENTRY><ENTRY></ENTRY><ENTRY>Optional</ENTRY></ROW>
<ROW><ENTRY><CONSTANT>RPMTAG_CHANGELOGNAME</CONSTANT></ENTRY><ENTRY>1081</ENTRY><ENTRY>STRING_ARRAY</ENTRY><ENTRY></ENTRY><ENTRY>Optional</ENTRY></ROW>
<ROW><ENTRY><CONSTANT>RPMTAG_CHANGELOGTEXT</CONSTANT></ENTRY><ENTRY>1082</ENTRY><ENTRY>STRING_ARRAY</ENTRY><ENTRY></ENTRY><ENTRY>Optional</ENTRY></ROW>
<ROW><ENTRY><CONSTANT>RPMTAG_OPTFLAGS</CONSTANT></ENTRY><ENTRY>1122</ENTRY><ENTRY>STRING</ENTRY><ENTRY>1</ENTRY><ENTRY>Informational</ENTRY></ROW>
<ROW><ENTRY><CONSTANT>RPMTAG_RHNPLATFORM</CONSTANT></ENTRY><ENTRY>1131</ENTRY><ENTRY>STRING</ENTRY><ENTRY>1</ENTRY><ENTRY>Deprecated</ENTRY></ROW>
<ROW><ENTRY><CONSTANT>RPMTAG_PLATFORM</CONSTANT></ENTRY><ENTRY>1132</ENTRY><ENTRY>STRING</ENTRY><ENTRY>1</ENTRY><ENTRY>Informational</ENTRY></ROW>
</TBODY>
</TGROUP>
</TABLE>
<VARIABLELIST>
<VARLISTENTRY><TERM><CONSTANT>RPMTAG_BUILDTIME</CONSTANT></TERM><LISTITEM><PARA>This tag specifies the time as seconds since the epoch at which the package was built.</PARA></LISTITEM></VARLISTENTRY>
<VARLISTENTRY><TERM><CONSTANT>RPMTAG_BUILDHOST</CONSTANT></TERM><LISTITEM><PARA>This tag specifies the hostname of the system on which which the package was built.</PARA></LISTITEM></VARLISTENTRY>
<VARLISTENTRY><TERM><CONSTANT>RPMTAG_FILEVERIFYFLAGS</CONSTANT></TERM><LISTITEM><PARA>This tag specifies the bit(s) to control how files are to be verified after install, specifying which checks should be performed.</PARA></LISTITEM></VARLISTENTRY>
<VARLISTENTRY><TERM><CONSTANT>RPMTAG_CHANGELOGTIME</CONSTANT></TERM><LISTITEM><PARA>This tag specifies the Unix time in seconds since the epoch associated with each entry in the Changelog file.</PARA></LISTITEM></VARLISTENTRY>
<VARLISTENTRY><TERM><CONSTANT>RPMTAG_CHANGELOGNAME</CONSTANT></TERM><LISTITEM><PARA>This tag specifies the name of who made a change to this package</PARA></LISTITEM></VARLISTENTRY>
<VARLISTENTRY><TERM><CONSTANT>RPMTAG_CHANGELOGTEXT</CONSTANT></TERM><LISTITEM><PARA>This tag specifies the changes asssociated with a changelog entry.</PARA></LISTITEM></VARLISTENTRY>
<VARLISTENTRY><TERM><CONSTANT>RPMTAG_OPTFLAGS</CONSTANT></TERM><LISTITEM><PARA>This tag indicates additional flags which may have been passed to the compiler when building this package.</PARA></LISTITEM></VARLISTENTRY>
<VARLISTENTRY><TERM><CONSTANT>RPMTAG_RHNPLATFORM</CONSTANT></TERM><LISTITEM><PARA>This tag contains an opaque string whose contents are undefined.</PARA></LISTITEM></VARLISTENTRY>
<VARLISTENTRY><TERM><CONSTANT>RPMTAG_PLATFORM</CONSTANT></TERM><LISTITEM><PARA>This tag contains an opaque string whose contents are undefined.</PARA></LISTITEM></VARLISTENTRY>
</VARIABLELIST>
<!-- End of text generated from database -->
<!--    by $Header: /cvsroot/lsb/lsbspec/mkrpmtagtable,v 1.2 2005/05/11 21:46:31 nick Exp 0 -->

</SECT3>
</SECT2>


<SECT2>
<TITLE>Payload Section</TITLE>
<PARA>
The Payload section contains a compressed cpio archive. The format of this
section is defined by <XREF LINKEND="std.RFC1952">.
</PARA>
<PARA>
When uncompressed, the cpio archive contains a sequence of records for each
file. Each record contains a CPIO Header, Filename, Padding, and File Data.
</PARA>
<TABLE>
<TITLE>CPIO File Format</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>CPIO Header</ENTRY>
<ENTRY>Header structure as defined below.</ENTRY>
</ROW>
<ROW>
<ENTRY>Filename</ENTRY>
<ENTRY>NUL terminated ASCII string containing the name of the file.</ENTRY>
</ROW>
<ROW>
<ENTRY>Padding</ENTRY>
<ENTRY>0-3 bytes as needed to align the file stream to a 4 byte boundary.</ENTRY>
</ROW>
<ROW>
<ENTRY>File data</ENTRY>
<ENTRY>The contents of the file.</ENTRY>
</ROW>
<ROW>
<ENTRY>Padding</ENTRY>
<ENTRY>0-3 bytes as needed to align the file stream to a 4 byte boundary.</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The CPIO Header uses the following header structure (sometimes referred to
as "new ASCII" or "SVR4 cpio"). All numbers are stored as ASCII
representations of their hexadecimal value with leading zeros as needed to fill
the field.  With the exception of <STRUCTFIELD>c_namesize</STRUCTFIELD>
and the corresponding name string, and <STRUCTFIELD>c_checksum</STRUCTFIELD>,
all information contained in the CPIO Header is also represented in the
Header Section.
The values in the CPIO Header shall match the values contained in the
Header Section.
</PARA>
<SCREEN>
struct {
        char    c_magic[6];
        char    c_ino[8];
        char    c_mode[8];
        char    c_uid[8];
        char    c_gid[8];
        char    c_nlink[8];
        char    c_mtime[8];
        char    c_filesize[8];
        char    c_devmajor[8];
        char    c_devminor[8];
        char    c_rdevmajor[8];
        char    c_rdevminor[8];
        char    c_namesize[8];
        char    c_checksum[8];
        };
</SCREEN>
<PARA>
<VARIABLELIST>
<VARLISTENTRY>
<TERM><STRUCTFIELD>c_magic</STRUCTFIELD></TERM>
<LISTITEM>
<PARA>
Value identifying this cpio format. This value shall be "070701".
</PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM><STRUCTFIELD>c_ino</STRUCTFIELD></TERM>
<LISTITEM>
<PARA>
This field contains the inode number from the filesystem from which the
file was read.
This field is ignored when installing a package.
This field shall match the corresponding value in the
<CONSTANT>RPMTAG_FILEINODES</CONSTANT> index in the Header section.
</PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM><STRUCTFIELD>c_mode</STRUCTFIELD></TERM>
<LISTITEM>
<PARA>
Permission bits of the file. This is an ascii representation of the hexadecimal
number representing the bit as defined for the
<STRUCTFIELD>st_mode</STRUCTFIELD> field of the <STRUCTNAME>stat</STRUCTNAME>
structure defined for the <VARNAME>stat</VARNAME> function.
This field shall match the corresponding value in the
<CONSTANT>RPMTAG_FILEMODES</CONSTANT> index in the Header section.
</PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM><STRUCTFIELD>c_uid</STRUCTFIELD></TERM>
<LISTITEM>
<PARA>
Value identifying this owner of this file.
This value matches the uid value of the corresponding user in the
RPMTAG_FILEUSERNAME as found on the system where this package was built. The
username specified in RPMTAG_FILEUSERNAME should take precedence when
installing the package.
</PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM><STRUCTFIELD>c_gid</STRUCTFIELD></TERM>
<LISTITEM>
<PARA>
Value identifying this group of this file.
This value matches the gid value of the corresponding user in the
RPMTAG_FILEGROUPNAME as found on the system where this package was built. The
groupname specified in RPMTAG_FILEGROUPNAME should take precedence when
installing the package.
</PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM><STRUCTFIELD>c_nlink</STRUCTFIELD></TERM>
<LISTITEM>
<PARA>
Value identifying the number of links associated with this file. If the value
is greater than 1, then this filename will be linked to 1 or more files in this
archive that has a matching value for the c_ino, c_devmajor and c_devminor
fields.
</PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM><STRUCTFIELD>c_mtime</STRUCTFIELD></TERM>
<LISTITEM>
<PARA>
Value identifying the modification time of the file when it was read.
This field  shall match the corresponding value in the
<CONSTANT>RPMTAG_FILEMTIMES</CONSTANT> index in the Header section.
</PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM><STRUCTFIELD>c_filesize</STRUCTFIELD></TERM>
<LISTITEM>
<PARA>
Value identifying the size of the file.
This field  shall match the corresponding value in the
<CONSTANT>RPMTAG_FILESIZES</CONSTANT> index in the Header section.
</PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM><STRUCTFIELD>c_devmajor</STRUCTFIELD></TERM>
<LISTITEM>
<PARA>
The major number of the device containing the file system from which the
file was read.
With the exception of processing files with c_nlink >1, this field is ignored
when installing a package.
This field shall match the corresponding value in the
<CONSTANT>RPMTAG_FILEDEVICES</CONSTANT> index in the Header section.
</PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM><STRUCTFIELD>c_devminor</STRUCTFIELD></TERM>
<LISTITEM>
<PARA>
The minor number of the device containing the file system from which the
file was read.
With the exception of processing files with c_nlink >1, this field is ignored
when installing a package.
This field shall match the corresponding value in the
<CONSTANT>RPMTAG_FILEDEVICES</CONSTANT> index in the Header section.
</PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM><STRUCTFIELD>c_rdevmajor</STRUCTFIELD></TERM>
<LISTITEM>
<PARA>
The major number of the raw device containing the file system from which the
file was read.
This field is ignored when installing a package.
This field  shall match the corresponding value in the
<CONSTANT>RPMTAG_RDEVS</CONSTANT> index in the Header section.
</PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM><STRUCTFIELD>c_rdevminor</STRUCTFIELD></TERM>
<LISTITEM>
<PARA>
The minor number of the raw device containing the file system from which the
file was read.
This field is ignored when installing a package.
This field  shall match the corresponding value in the
<CONSTANT>RPMTAG_RDEVS</CONSTANT> index in the Header section.
</PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM><STRUCTFIELD>c_namesize</STRUCTFIELD></TERM>
<LISTITEM>
<PARA>
Value identifying the length of the filename, which is located immediately
following the CPIO Header structure.
</PARA>
</LISTITEM>
</VARLISTENTRY>

<VARLISTENTRY>
<TERM><STRUCTFIELD>c_checksum</STRUCTFIELD></TERM>
<LISTITEM>
<PARA>
Value containing the CRC checksum of the file data. This field is not used,
and shall contain the value "00000000".
This field is ignored when installing a package.
</PARA>
</LISTITEM>
</VARLISTENTRY>
</VARIABLELIST>
</PARA>
<PARA>
A record with the filename "TRAILER!!!" indicates the last record in the
archive.
</PARA>
</SECT2>
</SECT1>




<SECT1 ID=pkgscripts>
<TITLE>Package Script Restrictions</TITLE>
<PARA>
Scripts used as part of the package install and uninstall shall only use
commands and interfaces that are specified by the LSB. All other commands are
not guaranteed to be present, or to behave in expected ways.
</PARA>

<PARA>
Packages shall not use RPM triggers.
</PARA>

<PARA>
Packages shall not depend on the order in which scripts are executed
(pre-install, pre-uninstall, etc), when doing an upgrade.
</PARA>
</SECT1>

<SECT1 ID=pkgtools>
<TITLE>Package Tools</TITLE>
<PARA>
The LSB does not specify the interface to the tools used to manipulate 
LSB-conformant packages. Each conforming implementation shall provide 
documentation for installing LSB packages.
</PARA>

</SECT1>

<SECT1 ID=pkgnameconv>
<TITLE>Package Naming</TITLE>
<PARA>
Packages supplied by implementations and applications shall follow the
following rules for the name field within the package.  These rules
are not required for the filename of the package file itself.
<note>
<para>There are discrepancies among implementations
concerning whether the name might be <literal>frobnicator-1.7-21-ppc32.rpm</literal> or
<literal>frobnicator-1.7-21-powerpc32.rpm</literal>.  
The architecture aside, recommended
practice is for the filename of the package file to match the name
within the package.
</para></note>

</PARA>

<para>
The following rules apply to the name field alone, not including any
release or version.
<note><para>If the name with the
release and version is <literal>frobnicator-1.7-21</literal>, the name part is
<literal>frobnicator</literal> and falls under the rules for a name with no
hyphens.</para></note>
</para>

<ITEMIZEDLIST MARK="bullet">
<LISTITEM> <PARA>
If the name begins with <literal>lsb-</literal> and contains no other hyphens, the name
shall be assigned by the 
<ULINK URL="http://www.lanana.org">Linux Assigned Names and 
Numbers Authority</ULINK> (LANANA), which shall maintain a
registry of LSB names.
The name may be registered by either an implementation or an application.
</PARA></LISTITEM>

<LISTITEM><PARA>
If the package name begins with <literal>lsb-</literal> and
contains more than one hyphen (for example
<literal>lsb-distro.example.com-database</literal> or 
<literal>lsb-gnome-gnumeric</literal>), then 
the portion of the package name between first and second hyphens shall 
either be an LSB provider name assigned by the LANANA, or it may be 
one of the owners' fully-qualified domain names in lower case (e.g., 
<literal>debian.org</literal>, <literal>staroffice.sun.com</literal>). 
The LSB provider name assigned 
by LANANA shall only consist of the ASCII characters [a-z0-9].
The provider name or domain name may be either that of an implementation
or an application.
</PARA></LISTITEM>

<listitem><para>
Package names containing no hyphens are reserved for use by
implementations.  Applications shall not use such names.
</para></listitem>

<listitem><para>

Package names which do not start with <literal>lsb-</literal> and which contain a
hyphen are open to both implementations and applications.  Implementations
may name packages in any part of this namespace.  They are encouraged
to use names from one of the other namespaces available to them, but
this is not required due to the large amount of current practice to
the contrary.
<note><para>Widespread existing practice includes such names as
<literal>ssh-common</literal>, <literal>ssh-client</literal>,
<literal>kernel-pcmcia</literal>, and the like.  Possible alternative names include
<literal>sshcommon</literal>, <literal>foolinux-ssh-common</literal>
(where <literal>foolinux</literal> is registered to the
implementation), or <literal>lsb-foolinux-ssh-common</literal>.
</para></note>
Applications may name their packages this way, but only if the portion
of the name before the first hyphen is a provider name or registered
domain name as described above.
<note><para>If an
application vendor has domain name such as <literal>visicalc.example.com</literal> and has
registered <literal>visicalc</literal> as a provider name, they might name packages
<literal>visicalc-base</literal>, <literal>visicalc.example.com-charting</literal>, and the
like.</para>
<para>
Package names in this namespace are
available to both the implementation and an application.  Implementations
and applications will need to consider this potential for conflicts
when deciding to use these names rather than the alternatives (such as
names starting with <literal>lsb-</literal>).
</para>
</note>

</para></listitem>

</ITEMIZEDLIST>

</SECT1>

<SECT1 ID=pkgdepend>
<TITLE>Package Dependencies</TITLE>
<PARA>
Packages shall have a dependency that indicates which LSB modules are
required.
LSB module descriptions are dash seperated tuples containing the name 'lsb',
the module name, and the architecture name. The following dependencies may be
used.
<VARIABLELIST>
<VARLISTENTRY>
<TERM>lsb-core-<replaceable>arch</replaceable></TERM>
<LISTITEM>
<PARA>
This dependency is used to indicate that the application is dependent
on features contained in the LSB-Core specification.
</PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM>lsb-core-noarch</TERM>
<LISTITEM>
<PARA>
This dependency is used to indicate that the application is dependent
on features contained in the LSB-Core specification and that the package 
does not contain any architecture specific files.
</PARA>
</LISTITEM>
</VARLISTENTRY>
</VARIABLELIST>
</PARA>
<PARA>
These dependencies shall have a version of &packaging-depver;.
</PARA>
<PARA>
Packages shall not depend on other system-provided dependencies.  They
shall not depend on non-system-provided dependencies unless those dependencies
are fulfilled by packages which are part of the same application. 
A package may only provide a virtual package name
which is registered to that application.
</PARA>
<PARA>
Other modules in the LSB may supplement this list. The architecture
specific dependencies are described in the relevant architecture
specific LSB.
</PARA>
</SECT1>


<SECT1 ID=pkgarchcon>
<TITLE>Package Architecture Considerations</TITLE>
<PARA>
Packages which do not contain any architecture specific files should specify an
architecture of <COMPUTEROUTPUT>noarch</COMPUTEROUTPUT>. An LSB runtime
environment shall accept values <COMPUTEROUTPUT>noarch</COMPUTEROUTPUT>, or
the value specified in the architecture specific supplement.
</PARA>

<PARA>
Additional specifications or restrictions may be found in the architecture
specific LSB specification.
</PARA>


</SECT1>

</CHAPTER>

</PART>
