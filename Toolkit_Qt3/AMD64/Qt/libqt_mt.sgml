<!-- Start of generated text - do not edit! -->
<!-- generated from the LSB specification database by mklibspec -->
<SECT1 ID=libqt-mt>
<TITLE>Interfaces for libqt-mt</TITLE>
<PARA>
<XREF LINKEND="lib-libqt-mt-def"> defines the library name and shared object name
for the libqt-mt library
</PARA>
<TABLE id="lib-libqt-mt-def">
<TITLE>libqt-mt Definition</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Library:</ENTRY>
<ENTRY>libqt-mt</ENTRY>
</ROW>
<ROW>
<ENTRY>SONAME:</ENTRY>
<ENTRY>libqt-mt.so.3</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The behavior of the interfaces in this library is specified by the following specifications:<SIMPLELIST COLUMNS=1>
<MEMBER ID='REFSTD.libqt.mt.1'>
[CXXABI-1.86] <XREF LINKEND="std.CXXABI">
</MEMBER>
</SIMPLELIST>
</PARA>
<!-- debug: database interface name Qt -->
<SECT2>
<!--libgroup-->
<TITLE>Qt</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Class data for QNetworkProtocolFactoryBase</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QNetworkProtocolFactoryBase class
is described in the generic part of this specification.
</PARA>
<PARA>
The Run Time Type Information for the QNetworkProtocolFactoryBase  class
is described by <XREF LINKEND="rtti-54191">
</PARA>
<!--classdata-->
<TABLE ID="rtti-54191">
<TITLE>typeinfo for QNetworkProtocolFactoryBase</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__class_type_info</primary></indexterm>vtable for __cxxabiv1::__class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QNetworkProtocolFactoryBase</primary></indexterm>typeinfo name for QNetworkProtocolFactoryBase</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Interfaces for Qt</TITLE>
<PARA>
No external functions are defined for libqt-mt - Qt
in this part of the specification. See also the generic specification.
</PARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Qt3 Arrays -->
<SECT2>
<!--libgroup-->
<TITLE>Qt3 Arrays</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Class data for QPointArray</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QPointArray class
is described in the generic part of this specification.
</PARA>
<PARA>
The Run Time Type Information for the QPointArray  class
is described by <XREF LINKEND="rtti-51499">
</PARA>
<!--classdata-->
<TABLE ID="rtti-51499">
<TITLE>typeinfo for QPointArray</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QPointArray</primary></indexterm>typeinfo name for QPointArray</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QMemArray&lt;QPoint&gt;</primary></indexterm>typeinfo for QMemArray&lt;QPoint&gt;</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QBitArray</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QBitArray class
is described in the generic part of this specification.
</PARA>
<PARA>
The Run Time Type Information for the QBitArray  class
is described by <XREF LINKEND="rtti-59264">
</PARA>
<!--classdata-->
<TABLE ID="rtti-59264">
<TITLE>typeinfo for QBitArray</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QBitArray</primary></indexterm>typeinfo name for QBitArray</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QMemArray&lt;char&gt;</primary></indexterm>typeinfo for QMemArray&lt;char&gt;</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Interfaces for Qt3 Arrays</TITLE>
<PARA>
No external functions are defined for libqt-mt - Qt3 Arrays
in this part of the specification. See also the generic specification.
</PARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Qt3 Pointer Collection -->
<SECT2>
<!--libgroup-->
<TITLE>Qt3 Pointer Collection</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Class data for QPtrCollection</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QPtrCollection class
is described in the generic part of this specification.
</PARA>
<PARA>
The Run Time Type Information for the QPtrCollection  class
is described by <XREF LINKEND="rtti-50540">
</PARA>
<!--classdata-->
<TABLE ID="rtti-50540">
<TITLE>typeinfo for QPtrCollection</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__class_type_info</primary></indexterm>vtable for __cxxabiv1::__class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QPtrCollection</primary></indexterm>typeinfo name for QPtrCollection</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QObjectList</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QObjectList class
is described in the generic part of this specification.
</PARA>
<PARA>
The Run Time Type Information for the QObjectList  class
is described by <XREF LINKEND="rtti-59557">
</PARA>
<!--classdata-->
<TABLE ID="rtti-59557">
<TITLE>typeinfo for QObjectList</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QObjectList</primary></indexterm>typeinfo name for QObjectList</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QPtrList&lt;QObject&gt;</primary></indexterm>typeinfo for QPtrList&lt;QObject&gt;</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Interfaces for Qt3 Pointer Collection</TITLE>
<PARA>
No external functions are defined for libqt-mt - Qt3 Pointer Collection
in this part of the specification. See also the generic specification.
</PARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Qt3 Template Library -->
<SECT2>
<!--libgroup-->
<TITLE>Qt3 Template Library</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Interfaces for Qt3 Template Library</TITLE>
<PARA>
No external functions are defined for libqt-mt - Qt3 Template Library
in this part of the specification. See also the generic specification.
</PARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Qt3 COM -->
<SECT2>
<!--libgroup-->
<TITLE>Qt3 COM</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Interfaces for Qt3 COM</TITLE>
<PARA>
No external functions are defined for libqt-mt - Qt3 COM
in this part of the specification. See also the generic specification.
</PARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Qt3 Date and Time -->
<SECT2>
<!--libgroup-->
<TITLE>Qt3 Date and Time</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Class data for QTimer</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QTimer class
is described in the generic part of this specification.
</PARA>
<PARA>
The Run Time Type Information for the QTimer  class
is described by <XREF LINKEND="rtti-56241">
</PARA>
<!--classdata-->
<TABLE ID="rtti-56241">
<TITLE>typeinfo for QTimer</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QTimer</primary></indexterm>typeinfo name for QTimer</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QObject</primary></indexterm>typeinfo for QObject</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QDateTimeEdit</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QDateTimeEdit class
is described by <XREF LINKEND="cls-56364-0">
</PARA>
<!--classdata-->
<TABLE id="cls-56364-0">
<TITLE>Primary vtable for QDateTimeEdit</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QDateTimeEdit</primary></indexterm>typeinfo for QDateTimeEdit</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDateTimeEdit::metaObject() const</primary></indexterm>NULL or QDateTimeEdit::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDateTimeEdit::className() const</primary></indexterm>QDateTimeEdit::className() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDateTimeEdit::qt_cast(char const*)</primary></indexterm>QDateTimeEdit::qt_cast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDateTimeEdit::qt_invoke(int, QUObject*)</primary></indexterm>QDateTimeEdit::qt_invoke(int, QUObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDateTimeEdit::qt_emit(int, QUObject*)</primary></indexterm>QDateTimeEdit::qt_emit(int, QUObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDateTimeEdit::qt_property(int, int, QVariant*)</primary></indexterm>QDateTimeEdit::qt_property(int, int, QVariant*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDateTimeEdit::~QDateTimeEdit()</primary></indexterm>QDateTimeEdit::~QDateTimeEdit()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDateTimeEdit::~QDateTimeEdit()</primary></indexterm>QDateTimeEdit::~QDateTimeEdit()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::event(QEvent*)</primary></indexterm>QWidget::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::eventFilter(QObject*, QEvent*)</primary></indexterm>QObject::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setName(char const*)</primary></indexterm>QWidget::setName(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::insertChild(QObject*)</primary></indexterm>QObject::insertChild(QObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::removeChild(QObject*)</primary></indexterm>QObject::removeChild(QObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::setProperty(char const*, QVariant const&)</primary></indexterm>QObject::setProperty(char const*, QVariant const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::property(char const*) const</primary></indexterm>QObject::property(char const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QCustomEvent*)</primary></indexterm>QObject::customEvent(QCustomEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::checkConnectArgs(char const*, QObject const*, char const*)</primary></indexterm>QObject::checkConnectArgs(char const*, QObject const*, char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setEnabled(bool)</primary></indexterm>QWidget::setEnabled(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMinimumSize(int, int)</primary></indexterm>QWidget::setMinimumSize(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMaximumSize(int, int)</primary></indexterm>QWidget::setMaximumSize(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setSizeIncrement(int, int)</primary></indexterm>QWidget::setSizeIncrement(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundMode(Qt::BackgroundMode)</primary></indexterm>QWidget::setBackgroundMode(Qt::BackgroundMode)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setEraseColor(QColor const&)</primary></indexterm>QWidget::setEraseColor(QColor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setErasePixmap(QPixmap const&)</primary></indexterm>QWidget::setErasePixmap(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setPalette(QPalette const&)</primary></indexterm>QWidget::setPalette(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setPaletteBackgroundColor(QColor const&)</primary></indexterm>QWidget::setPaletteBackgroundColor(QColor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setPaletteBackgroundPixmap(QPixmap const&)</primary></indexterm>QWidget::setPaletteBackgroundPixmap(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFont(QFont const&)</primary></indexterm>QWidget::setFont(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setCursor(QCursor const&)</primary></indexterm>QWidget::setCursor(QCursor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;33&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::unsetCursor()</primary></indexterm>QWidget::unsetCursor()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;34&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMask(QBitmap const&)</primary></indexterm>QWidget::setMask(QBitmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;35&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMask(QRegion const&)</primary></indexterm>QWidget::setMask(QRegion const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;36&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundColor(QColor const&)</primary></indexterm>QWidget::setBackgroundColor(QColor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;37&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundPixmap(QPixmap const&)</primary></indexterm>QWidget::setBackgroundPixmap(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;38&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setCaption(QString const&)</primary></indexterm>QWidget::setCaption(QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;39&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setIcon(QPixmap const&)</primary></indexterm>QWidget::setIcon(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;40&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setIconText(QString const&)</primary></indexterm>QWidget::setIconText(QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;41&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMouseTracking(bool)</primary></indexterm>QWidget::setMouseTracking(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;42&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFocus()</primary></indexterm>QWidget::setFocus()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;43&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setActiveWindow()</primary></indexterm>QWidget::setActiveWindow()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;44&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFocusPolicy(QWidget::FocusPolicy)</primary></indexterm>QWidget::setFocusPolicy(QWidget::FocusPolicy)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;45&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFocusProxy(QWidget*)</primary></indexterm>QWidget::setFocusProxy(QWidget*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;46&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setUpdatesEnabled(bool)</primary></indexterm>QWidget::setUpdatesEnabled(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;47&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::show()</primary></indexterm>QWidget::show()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;48&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::hide()</primary></indexterm>QWidget::hide()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;49&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showMinimized()</primary></indexterm>QWidget::showMinimized()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;50&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showMaximized()</primary></indexterm>QWidget::showMaximized()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;51&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showNormal()</primary></indexterm>QWidget::showNormal()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;52&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::polish()</primary></indexterm>QWidget::polish()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;53&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::move(int, int)</primary></indexterm>QWidget::move(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;54&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::resize(int, int)</primary></indexterm>QWidget::resize(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;55&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setGeometry(int, int, int, int)</primary></indexterm>QWidget::setGeometry(int, int, int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;56&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setGeometry(QRect const&)</primary></indexterm>NULL or QWidget::setGeometry(QRect const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;57&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::close(bool)</primary></indexterm>QWidget::close(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;58&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDateTimeEdit::sizeHint() const</primary></indexterm>QDateTimeEdit::sizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;59&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDateTimeEdit::minimumSizeHint() const</primary></indexterm>QDateTimeEdit::minimumSizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;60&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::sizePolicy() const</primary></indexterm>QWidget::sizePolicy() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;61&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setSizePolicy(QSizePolicy)</primary></indexterm>QWidget::setSizePolicy(QSizePolicy)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;62&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::heightForWidth(int) const</primary></indexterm>QWidget::heightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;63&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::adjustSize()</primary></indexterm>QWidget::adjustSize()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;64&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::reparent(QWidget*, unsigned int, QPoint const&, bool)</primary></indexterm>QWidget::reparent(QWidget*, unsigned int, QPoint const&, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;65&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setAcceptDrops(bool)</primary></indexterm>QWidget::setAcceptDrops(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;66&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setAutoMask(bool)</primary></indexterm>QWidget::setAutoMask(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;67&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundOrigin(QWidget::BackgroundOrigin)</primary></indexterm>QWidget::setBackgroundOrigin(QWidget::BackgroundOrigin)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;68&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::customWhatsThis() const</primary></indexterm>QWidget::customWhatsThis() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;69&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mousePressEvent(QMouseEvent*)</primary></indexterm>QWidget::mousePressEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;70&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseReleaseEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseReleaseEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;71&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseDoubleClickEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseDoubleClickEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;72&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseMoveEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseMoveEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;73&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::wheelEvent(QWheelEvent*)</primary></indexterm>QWidget::wheelEvent(QWheelEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;74&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyPressEvent(QKeyEvent*)</primary></indexterm>QWidget::keyPressEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;75&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyReleaseEvent(QKeyEvent*)</primary></indexterm>QWidget::keyReleaseEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;76&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusInEvent(QFocusEvent*)</primary></indexterm>QWidget::focusInEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;77&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusOutEvent(QFocusEvent*)</primary></indexterm>QWidget::focusOutEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;78&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enterEvent(QEvent*)</primary></indexterm>QWidget::enterEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;79&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::leaveEvent(QEvent*)</primary></indexterm>QWidget::leaveEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;80&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paintEvent(QPaintEvent*)</primary></indexterm>QWidget::paintEvent(QPaintEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;81&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::moveEvent(QMoveEvent*)</primary></indexterm>QWidget::moveEvent(QMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;82&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDateTimeEdit::resizeEvent(QResizeEvent*)</primary></indexterm>QDateTimeEdit::resizeEvent(QResizeEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;83&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::closeEvent(QCloseEvent*)</primary></indexterm>QWidget::closeEvent(QCloseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;84&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::contextMenuEvent(QContextMenuEvent*)</primary></indexterm>QWidget::contextMenuEvent(QContextMenuEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;85&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::imStartEvent(QIMEvent*)</primary></indexterm>QWidget::imStartEvent(QIMEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;86&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::imComposeEvent(QIMEvent*)</primary></indexterm>QWidget::imComposeEvent(QIMEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;87&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::imEndEvent(QIMEvent*)</primary></indexterm>QWidget::imEndEvent(QIMEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;88&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::tabletEvent(QTabletEvent*)</primary></indexterm>QWidget::tabletEvent(QTabletEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;89&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragEnterEvent(QDragEnterEvent*)</primary></indexterm>QWidget::dragEnterEvent(QDragEnterEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;90&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragMoveEvent(QDragMoveEvent*)</primary></indexterm>QWidget::dragMoveEvent(QDragMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;91&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragLeaveEvent(QDragLeaveEvent*)</primary></indexterm>QWidget::dragLeaveEvent(QDragLeaveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;92&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dropEvent(QDropEvent*)</primary></indexterm>QWidget::dropEvent(QDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;93&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showEvent(QShowEvent*)</primary></indexterm>QWidget::showEvent(QShowEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;94&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::hideEvent(QHideEvent*)</primary></indexterm>QWidget::hideEvent(QHideEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;95&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::x11Event(_XEvent*)</primary></indexterm>QWidget::x11Event(_XEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;96&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::updateMask()</primary></indexterm>QWidget::updateMask()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;97&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::styleChange(QStyle&)</primary></indexterm>QWidget::styleChange(QStyle&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;98&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enabledChange(bool)</primary></indexterm>QWidget::enabledChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;99&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paletteChange(QPalette const&)</primary></indexterm>QWidget::paletteChange(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;100&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::fontChange(QFont const&)</primary></indexterm>QWidget::fontChange(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;101&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::windowActivationChange(bool)</primary></indexterm>QWidget::windowActivationChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;102&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::metric(int) const</primary></indexterm>QWidget::metric(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;103&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::create(unsigned long, bool, bool)</primary></indexterm>QWidget::create(unsigned long, bool, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;104&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::destroy(bool, bool)</primary></indexterm>QWidget::destroy(bool, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;105&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setWState(unsigned int)</primary></indexterm>NULL or QWidget::setWState(unsigned int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;106&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setWFlags(unsigned int)</primary></indexterm>NULL or QWidget::setWFlags(unsigned int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;107&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusNextPrevChild(bool)</primary></indexterm>QWidget::focusNextPrevChild(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;108&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setKeyCompression(bool)</primary></indexterm>QWidget::setKeyCompression(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;109&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMicroFocusHint(int, int, int, int, bool, QFont*)</primary></indexterm>QWidget::setMicroFocusHint(int, int, int, int, bool, QFont*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;110&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDateTimeEdit::setDateTime(QDateTime const&)</primary></indexterm>QDateTimeEdit::setDateTime(QDateTime const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;111&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDateTimeEdit::setAutoAdvance(bool)</primary></indexterm>QDateTimeEdit::setAutoAdvance(bool)</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--classdata-->
<TABLE id="cls-56364-1">
<TITLE>Secondary vtable for QDateTimeEdit</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>-80</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QDateTimeEdit</primary></indexterm>typeinfo for QDateTimeEdit</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QDateTimeEdit::~QDateTimeEdit()</primary></indexterm>non-virtual thunk to QDateTimeEdit::~QDateTimeEdit()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QDateTimeEdit::~QDateTimeEdit()</primary></indexterm>non-virtual thunk to QDateTimeEdit::~QDateTimeEdit()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::setResolution(int)</primary></indexterm>QPaintDevice::setResolution(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::resolution() const</primary></indexterm>QPaintDevice::resolution() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::handle() const</primary></indexterm>QPaintDevice::handle() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::x11RenderHandle() const</primary></indexterm>QPaintDevice::x11RenderHandle() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::setX11Data(QPaintDeviceX11Data const*)</primary></indexterm>QPaintDevice::setX11Data(QPaintDeviceX11Data const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::cmd(int, QPainter*, QPDevCmdParam*)</primary></indexterm>QPaintDevice::cmd(int, QPainter*, QPDevCmdParam*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::metric(int) const</primary></indexterm>non-virtual thunk to QWidget::metric(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::fontMet(QFont*, int, char const*, int) const</primary></indexterm>QPaintDevice::fontMet(QFont*, int, char const*, int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::fontInf(QFont*, int) const</primary></indexterm>QPaintDevice::fontInf(QFont*, int) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QDateTimeEdit  class
is described by <XREF LINKEND="rtti-56600">
</PARA>
<!--classdata-->
<TABLE ID="rtti-56600">
<TITLE>typeinfo for QDateTimeEdit</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QDateTimeEdit</primary></indexterm>typeinfo name for QDateTimeEdit</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QWidget</primary></indexterm>typeinfo for QWidget</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QDateTimeEditBase</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QDateTimeEditBase class
is described by <XREF LINKEND="cls-57860-0">
</PARA>
<!--classdata-->
<TABLE id="cls-57860-0">
<TITLE>Primary vtable for QDateTimeEditBase</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QDateTimeEditBase</primary></indexterm>typeinfo for QDateTimeEditBase</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDateTimeEditBase::metaObject() const</primary></indexterm>NULL or QDateTimeEditBase::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDateTimeEditBase::className() const</primary></indexterm>QDateTimeEditBase::className() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDateTimeEditBase::qt_cast(char const*)</primary></indexterm>QDateTimeEditBase::qt_cast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDateTimeEditBase::qt_invoke(int, QUObject*)</primary></indexterm>QDateTimeEditBase::qt_invoke(int, QUObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDateTimeEditBase::qt_emit(int, QUObject*)</primary></indexterm>QDateTimeEditBase::qt_emit(int, QUObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDateTimeEditBase::qt_property(int, int, QVariant*)</primary></indexterm>QDateTimeEditBase::qt_property(int, int, QVariant*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDateTimeEditBase::~QDateTimeEditBase()</primary></indexterm>NULL or QDateTimeEditBase::~QDateTimeEditBase()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDateTimeEditBase::~QDateTimeEditBase()</primary></indexterm>NULL or QDateTimeEditBase::~QDateTimeEditBase()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::event(QEvent*)</primary></indexterm>QWidget::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::eventFilter(QObject*, QEvent*)</primary></indexterm>QObject::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setName(char const*)</primary></indexterm>QWidget::setName(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::insertChild(QObject*)</primary></indexterm>QObject::insertChild(QObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::removeChild(QObject*)</primary></indexterm>QObject::removeChild(QObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::setProperty(char const*, QVariant const&)</primary></indexterm>QObject::setProperty(char const*, QVariant const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::property(char const*) const</primary></indexterm>QObject::property(char const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QCustomEvent*)</primary></indexterm>QObject::customEvent(QCustomEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::checkConnectArgs(char const*, QObject const*, char const*)</primary></indexterm>QObject::checkConnectArgs(char const*, QObject const*, char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setEnabled(bool)</primary></indexterm>QWidget::setEnabled(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMinimumSize(int, int)</primary></indexterm>QWidget::setMinimumSize(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMaximumSize(int, int)</primary></indexterm>QWidget::setMaximumSize(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setSizeIncrement(int, int)</primary></indexterm>QWidget::setSizeIncrement(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundMode(Qt::BackgroundMode)</primary></indexterm>QWidget::setBackgroundMode(Qt::BackgroundMode)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setEraseColor(QColor const&)</primary></indexterm>QWidget::setEraseColor(QColor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setErasePixmap(QPixmap const&)</primary></indexterm>QWidget::setErasePixmap(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setPalette(QPalette const&)</primary></indexterm>QWidget::setPalette(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setPaletteBackgroundColor(QColor const&)</primary></indexterm>QWidget::setPaletteBackgroundColor(QColor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setPaletteBackgroundPixmap(QPixmap const&)</primary></indexterm>QWidget::setPaletteBackgroundPixmap(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFont(QFont const&)</primary></indexterm>QWidget::setFont(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setCursor(QCursor const&)</primary></indexterm>QWidget::setCursor(QCursor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;33&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::unsetCursor()</primary></indexterm>QWidget::unsetCursor()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;34&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMask(QBitmap const&)</primary></indexterm>QWidget::setMask(QBitmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;35&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMask(QRegion const&)</primary></indexterm>QWidget::setMask(QRegion const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;36&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundColor(QColor const&)</primary></indexterm>QWidget::setBackgroundColor(QColor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;37&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundPixmap(QPixmap const&)</primary></indexterm>QWidget::setBackgroundPixmap(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;38&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setCaption(QString const&)</primary></indexterm>QWidget::setCaption(QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;39&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setIcon(QPixmap const&)</primary></indexterm>QWidget::setIcon(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;40&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setIconText(QString const&)</primary></indexterm>QWidget::setIconText(QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;41&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMouseTracking(bool)</primary></indexterm>QWidget::setMouseTracking(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;42&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFocus()</primary></indexterm>QWidget::setFocus()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;43&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setActiveWindow()</primary></indexterm>QWidget::setActiveWindow()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;44&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFocusPolicy(QWidget::FocusPolicy)</primary></indexterm>QWidget::setFocusPolicy(QWidget::FocusPolicy)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;45&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFocusProxy(QWidget*)</primary></indexterm>QWidget::setFocusProxy(QWidget*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;46&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setUpdatesEnabled(bool)</primary></indexterm>QWidget::setUpdatesEnabled(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;47&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::show()</primary></indexterm>QWidget::show()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;48&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::hide()</primary></indexterm>QWidget::hide()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;49&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showMinimized()</primary></indexterm>QWidget::showMinimized()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;50&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showMaximized()</primary></indexterm>QWidget::showMaximized()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;51&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showNormal()</primary></indexterm>QWidget::showNormal()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;52&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::polish()</primary></indexterm>QWidget::polish()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;53&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::move(int, int)</primary></indexterm>QWidget::move(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;54&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::resize(int, int)</primary></indexterm>QWidget::resize(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;55&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setGeometry(int, int, int, int)</primary></indexterm>QWidget::setGeometry(int, int, int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;56&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setGeometry(QRect const&)</primary></indexterm>NULL or QWidget::setGeometry(QRect const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;57&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::close(bool)</primary></indexterm>QWidget::close(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;58&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::sizeHint() const</primary></indexterm>QWidget::sizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;59&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::minimumSizeHint() const</primary></indexterm>QWidget::minimumSizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;60&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::sizePolicy() const</primary></indexterm>QWidget::sizePolicy() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;61&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setSizePolicy(QSizePolicy)</primary></indexterm>QWidget::setSizePolicy(QSizePolicy)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;62&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::heightForWidth(int) const</primary></indexterm>QWidget::heightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;63&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::adjustSize()</primary></indexterm>QWidget::adjustSize()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;64&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::reparent(QWidget*, unsigned int, QPoint const&, bool)</primary></indexterm>QWidget::reparent(QWidget*, unsigned int, QPoint const&, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;65&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setAcceptDrops(bool)</primary></indexterm>QWidget::setAcceptDrops(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;66&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setAutoMask(bool)</primary></indexterm>QWidget::setAutoMask(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;67&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundOrigin(QWidget::BackgroundOrigin)</primary></indexterm>QWidget::setBackgroundOrigin(QWidget::BackgroundOrigin)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;68&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::customWhatsThis() const</primary></indexterm>QWidget::customWhatsThis() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;69&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mousePressEvent(QMouseEvent*)</primary></indexterm>QWidget::mousePressEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;70&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseReleaseEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseReleaseEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;71&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseDoubleClickEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseDoubleClickEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;72&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseMoveEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseMoveEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;73&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::wheelEvent(QWheelEvent*)</primary></indexterm>QWidget::wheelEvent(QWheelEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;74&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyPressEvent(QKeyEvent*)</primary></indexterm>QWidget::keyPressEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;75&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyReleaseEvent(QKeyEvent*)</primary></indexterm>QWidget::keyReleaseEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;76&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusInEvent(QFocusEvent*)</primary></indexterm>QWidget::focusInEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;77&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusOutEvent(QFocusEvent*)</primary></indexterm>QWidget::focusOutEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;78&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enterEvent(QEvent*)</primary></indexterm>QWidget::enterEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;79&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::leaveEvent(QEvent*)</primary></indexterm>QWidget::leaveEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;80&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paintEvent(QPaintEvent*)</primary></indexterm>QWidget::paintEvent(QPaintEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;81&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::moveEvent(QMoveEvent*)</primary></indexterm>QWidget::moveEvent(QMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;82&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::resizeEvent(QResizeEvent*)</primary></indexterm>QWidget::resizeEvent(QResizeEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;83&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::closeEvent(QCloseEvent*)</primary></indexterm>QWidget::closeEvent(QCloseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;84&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::contextMenuEvent(QContextMenuEvent*)</primary></indexterm>QWidget::contextMenuEvent(QContextMenuEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;85&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::imStartEvent(QIMEvent*)</primary></indexterm>QWidget::imStartEvent(QIMEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;86&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::imComposeEvent(QIMEvent*)</primary></indexterm>QWidget::imComposeEvent(QIMEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;87&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::imEndEvent(QIMEvent*)</primary></indexterm>QWidget::imEndEvent(QIMEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;88&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::tabletEvent(QTabletEvent*)</primary></indexterm>QWidget::tabletEvent(QTabletEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;89&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragEnterEvent(QDragEnterEvent*)</primary></indexterm>QWidget::dragEnterEvent(QDragEnterEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;90&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragMoveEvent(QDragMoveEvent*)</primary></indexterm>QWidget::dragMoveEvent(QDragMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;91&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragLeaveEvent(QDragLeaveEvent*)</primary></indexterm>QWidget::dragLeaveEvent(QDragLeaveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;92&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dropEvent(QDropEvent*)</primary></indexterm>QWidget::dropEvent(QDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;93&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showEvent(QShowEvent*)</primary></indexterm>QWidget::showEvent(QShowEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;94&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::hideEvent(QHideEvent*)</primary></indexterm>QWidget::hideEvent(QHideEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;95&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::x11Event(_XEvent*)</primary></indexterm>QWidget::x11Event(_XEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;96&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::updateMask()</primary></indexterm>QWidget::updateMask()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;97&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::styleChange(QStyle&)</primary></indexterm>QWidget::styleChange(QStyle&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;98&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enabledChange(bool)</primary></indexterm>QWidget::enabledChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;99&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paletteChange(QPalette const&)</primary></indexterm>QWidget::paletteChange(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;100&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::fontChange(QFont const&)</primary></indexterm>QWidget::fontChange(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;101&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::windowActivationChange(bool)</primary></indexterm>QWidget::windowActivationChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;102&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::metric(int) const</primary></indexterm>QWidget::metric(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;103&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::create(unsigned long, bool, bool)</primary></indexterm>QWidget::create(unsigned long, bool, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;104&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::destroy(bool, bool)</primary></indexterm>QWidget::destroy(bool, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;105&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setWState(unsigned int)</primary></indexterm>NULL or QWidget::setWState(unsigned int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;106&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setWFlags(unsigned int)</primary></indexterm>NULL or QWidget::setWFlags(unsigned int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;107&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusNextPrevChild(bool)</primary></indexterm>QWidget::focusNextPrevChild(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;108&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setKeyCompression(bool)</primary></indexterm>QWidget::setKeyCompression(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;109&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMicroFocusHint(int, int, int, int, bool, QFont*)</primary></indexterm>QWidget::setMicroFocusHint(int, int, int, int, bool, QFont*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;110&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;111&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;112&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;113&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;114&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;115&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--classdata-->
<TABLE id="cls-57860-1">
<TITLE>Secondary vtable for QDateTimeEditBase</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>-80</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QDateTimeEditBase</primary></indexterm>typeinfo for QDateTimeEditBase</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QDateTimeEditBase::~QDateTimeEditBase()</primary></indexterm>non-virtual thunk to QDateTimeEditBase::~QDateTimeEditBase()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QDateTimeEditBase::~QDateTimeEditBase()</primary></indexterm>non-virtual thunk to QDateTimeEditBase::~QDateTimeEditBase()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::setResolution(int)</primary></indexterm>QPaintDevice::setResolution(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::resolution() const</primary></indexterm>QPaintDevice::resolution() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::handle() const</primary></indexterm>QPaintDevice::handle() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::x11RenderHandle() const</primary></indexterm>QPaintDevice::x11RenderHandle() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::setX11Data(QPaintDeviceX11Data const*)</primary></indexterm>QPaintDevice::setX11Data(QPaintDeviceX11Data const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::cmd(int, QPainter*, QPDevCmdParam*)</primary></indexterm>QPaintDevice::cmd(int, QPainter*, QPDevCmdParam*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::metric(int) const</primary></indexterm>non-virtual thunk to QWidget::metric(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::fontMet(QFont*, int, char const*, int) const</primary></indexterm>QPaintDevice::fontMet(QFont*, int, char const*, int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::fontInf(QFont*, int) const</primary></indexterm>QPaintDevice::fontInf(QFont*, int) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QDateTimeEditBase  class
is described by <XREF LINKEND="rtti-59628">
</PARA>
<!--classdata-->
<TABLE ID="rtti-59628">
<TITLE>typeinfo for QDateTimeEditBase</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QDateTimeEditBase</primary></indexterm>typeinfo name for QDateTimeEditBase</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QWidget</primary></indexterm>typeinfo for QWidget</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QDateEdit</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QDateEdit class
is described by <XREF LINKEND="cls-58172-0">
</PARA>
<!--classdata-->
<TABLE id="cls-58172-0">
<TITLE>Primary vtable for QDateEdit</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QDateEdit</primary></indexterm>typeinfo for QDateEdit</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDateEdit::metaObject() const</primary></indexterm>NULL or QDateEdit::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDateEdit::className() const</primary></indexterm>QDateEdit::className() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDateEdit::qt_cast(char const*)</primary></indexterm>QDateEdit::qt_cast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDateEdit::qt_invoke(int, QUObject*)</primary></indexterm>QDateEdit::qt_invoke(int, QUObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDateEdit::qt_emit(int, QUObject*)</primary></indexterm>QDateEdit::qt_emit(int, QUObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDateEdit::qt_property(int, int, QVariant*)</primary></indexterm>QDateEdit::qt_property(int, int, QVariant*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDateEdit::~QDateEdit()</primary></indexterm>QDateEdit::~QDateEdit()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDateEdit::~QDateEdit()</primary></indexterm>QDateEdit::~QDateEdit()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDateEdit::event(QEvent*)</primary></indexterm>QDateEdit::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::eventFilter(QObject*, QEvent*)</primary></indexterm>QObject::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setName(char const*)</primary></indexterm>QWidget::setName(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::insertChild(QObject*)</primary></indexterm>QObject::insertChild(QObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::removeChild(QObject*)</primary></indexterm>QObject::removeChild(QObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::setProperty(char const*, QVariant const&)</primary></indexterm>QObject::setProperty(char const*, QVariant const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::property(char const*) const</primary></indexterm>QObject::property(char const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDateEdit::timerEvent(QTimerEvent*)</primary></indexterm>QDateEdit::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QCustomEvent*)</primary></indexterm>QObject::customEvent(QCustomEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::checkConnectArgs(char const*, QObject const*, char const*)</primary></indexterm>QObject::checkConnectArgs(char const*, QObject const*, char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setEnabled(bool)</primary></indexterm>QWidget::setEnabled(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMinimumSize(int, int)</primary></indexterm>QWidget::setMinimumSize(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMaximumSize(int, int)</primary></indexterm>QWidget::setMaximumSize(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setSizeIncrement(int, int)</primary></indexterm>QWidget::setSizeIncrement(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundMode(Qt::BackgroundMode)</primary></indexterm>QWidget::setBackgroundMode(Qt::BackgroundMode)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setEraseColor(QColor const&)</primary></indexterm>QWidget::setEraseColor(QColor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setErasePixmap(QPixmap const&)</primary></indexterm>QWidget::setErasePixmap(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setPalette(QPalette const&)</primary></indexterm>QWidget::setPalette(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setPaletteBackgroundColor(QColor const&)</primary></indexterm>QWidget::setPaletteBackgroundColor(QColor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setPaletteBackgroundPixmap(QPixmap const&)</primary></indexterm>QWidget::setPaletteBackgroundPixmap(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFont(QFont const&)</primary></indexterm>QWidget::setFont(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setCursor(QCursor const&)</primary></indexterm>QWidget::setCursor(QCursor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;33&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::unsetCursor()</primary></indexterm>QWidget::unsetCursor()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;34&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMask(QBitmap const&)</primary></indexterm>QWidget::setMask(QBitmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;35&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMask(QRegion const&)</primary></indexterm>QWidget::setMask(QRegion const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;36&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundColor(QColor const&)</primary></indexterm>QWidget::setBackgroundColor(QColor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;37&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundPixmap(QPixmap const&)</primary></indexterm>QWidget::setBackgroundPixmap(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;38&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setCaption(QString const&)</primary></indexterm>QWidget::setCaption(QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;39&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setIcon(QPixmap const&)</primary></indexterm>QWidget::setIcon(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;40&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setIconText(QString const&)</primary></indexterm>QWidget::setIconText(QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;41&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMouseTracking(bool)</primary></indexterm>QWidget::setMouseTracking(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;42&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFocus()</primary></indexterm>QWidget::setFocus()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;43&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setActiveWindow()</primary></indexterm>QWidget::setActiveWindow()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;44&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFocusPolicy(QWidget::FocusPolicy)</primary></indexterm>QWidget::setFocusPolicy(QWidget::FocusPolicy)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;45&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFocusProxy(QWidget*)</primary></indexterm>QWidget::setFocusProxy(QWidget*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;46&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setUpdatesEnabled(bool)</primary></indexterm>QWidget::setUpdatesEnabled(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;47&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::show()</primary></indexterm>QWidget::show()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;48&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::hide()</primary></indexterm>QWidget::hide()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;49&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showMinimized()</primary></indexterm>QWidget::showMinimized()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;50&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showMaximized()</primary></indexterm>QWidget::showMaximized()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;51&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showNormal()</primary></indexterm>QWidget::showNormal()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;52&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::polish()</primary></indexterm>QWidget::polish()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;53&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::move(int, int)</primary></indexterm>QWidget::move(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;54&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::resize(int, int)</primary></indexterm>QWidget::resize(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;55&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setGeometry(int, int, int, int)</primary></indexterm>QWidget::setGeometry(int, int, int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;56&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setGeometry(QRect const&)</primary></indexterm>NULL or QWidget::setGeometry(QRect const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;57&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::close(bool)</primary></indexterm>QWidget::close(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;58&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDateEdit::sizeHint() const</primary></indexterm>QDateEdit::sizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;59&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDateEdit::minimumSizeHint() const</primary></indexterm>QDateEdit::minimumSizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;60&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::sizePolicy() const</primary></indexterm>QWidget::sizePolicy() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;61&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setSizePolicy(QSizePolicy)</primary></indexterm>QWidget::setSizePolicy(QSizePolicy)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;62&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::heightForWidth(int) const</primary></indexterm>QWidget::heightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;63&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::adjustSize()</primary></indexterm>QWidget::adjustSize()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;64&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::reparent(QWidget*, unsigned int, QPoint const&, bool)</primary></indexterm>QWidget::reparent(QWidget*, unsigned int, QPoint const&, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;65&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setAcceptDrops(bool)</primary></indexterm>QWidget::setAcceptDrops(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;66&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setAutoMask(bool)</primary></indexterm>QWidget::setAutoMask(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;67&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundOrigin(QWidget::BackgroundOrigin)</primary></indexterm>QWidget::setBackgroundOrigin(QWidget::BackgroundOrigin)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;68&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::customWhatsThis() const</primary></indexterm>QWidget::customWhatsThis() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;69&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mousePressEvent(QMouseEvent*)</primary></indexterm>QWidget::mousePressEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;70&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseReleaseEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseReleaseEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;71&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseDoubleClickEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseDoubleClickEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;72&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseMoveEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseMoveEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;73&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::wheelEvent(QWheelEvent*)</primary></indexterm>QWidget::wheelEvent(QWheelEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;74&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyPressEvent(QKeyEvent*)</primary></indexterm>QWidget::keyPressEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;75&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyReleaseEvent(QKeyEvent*)</primary></indexterm>QWidget::keyReleaseEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;76&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusInEvent(QFocusEvent*)</primary></indexterm>QWidget::focusInEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;77&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusOutEvent(QFocusEvent*)</primary></indexterm>QWidget::focusOutEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;78&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enterEvent(QEvent*)</primary></indexterm>QWidget::enterEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;79&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::leaveEvent(QEvent*)</primary></indexterm>QWidget::leaveEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;80&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paintEvent(QPaintEvent*)</primary></indexterm>QWidget::paintEvent(QPaintEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;81&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::moveEvent(QMoveEvent*)</primary></indexterm>QWidget::moveEvent(QMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;82&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDateEdit::resizeEvent(QResizeEvent*)</primary></indexterm>QDateEdit::resizeEvent(QResizeEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;83&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::closeEvent(QCloseEvent*)</primary></indexterm>QWidget::closeEvent(QCloseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;84&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::contextMenuEvent(QContextMenuEvent*)</primary></indexterm>QWidget::contextMenuEvent(QContextMenuEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;85&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::imStartEvent(QIMEvent*)</primary></indexterm>QWidget::imStartEvent(QIMEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;86&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::imComposeEvent(QIMEvent*)</primary></indexterm>QWidget::imComposeEvent(QIMEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;87&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::imEndEvent(QIMEvent*)</primary></indexterm>QWidget::imEndEvent(QIMEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;88&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::tabletEvent(QTabletEvent*)</primary></indexterm>QWidget::tabletEvent(QTabletEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;89&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragEnterEvent(QDragEnterEvent*)</primary></indexterm>QWidget::dragEnterEvent(QDragEnterEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;90&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragMoveEvent(QDragMoveEvent*)</primary></indexterm>QWidget::dragMoveEvent(QDragMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;91&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragLeaveEvent(QDragLeaveEvent*)</primary></indexterm>QWidget::dragLeaveEvent(QDragLeaveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;92&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dropEvent(QDropEvent*)</primary></indexterm>QWidget::dropEvent(QDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;93&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showEvent(QShowEvent*)</primary></indexterm>QWidget::showEvent(QShowEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;94&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::hideEvent(QHideEvent*)</primary></indexterm>QWidget::hideEvent(QHideEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;95&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::x11Event(_XEvent*)</primary></indexterm>QWidget::x11Event(_XEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;96&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::updateMask()</primary></indexterm>QWidget::updateMask()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;97&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::styleChange(QStyle&)</primary></indexterm>QWidget::styleChange(QStyle&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;98&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enabledChange(bool)</primary></indexterm>QWidget::enabledChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;99&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paletteChange(QPalette const&)</primary></indexterm>QWidget::paletteChange(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;100&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::fontChange(QFont const&)</primary></indexterm>QWidget::fontChange(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;101&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::windowActivationChange(bool)</primary></indexterm>QWidget::windowActivationChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;102&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::metric(int) const</primary></indexterm>QWidget::metric(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;103&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::create(unsigned long, bool, bool)</primary></indexterm>QWidget::create(unsigned long, bool, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;104&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::destroy(bool, bool)</primary></indexterm>QWidget::destroy(bool, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;105&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setWState(unsigned int)</primary></indexterm>NULL or QWidget::setWState(unsigned int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;106&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setWFlags(unsigned int)</primary></indexterm>NULL or QWidget::setWFlags(unsigned int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;107&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusNextPrevChild(bool)</primary></indexterm>QWidget::focusNextPrevChild(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;108&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setKeyCompression(bool)</primary></indexterm>QWidget::setKeyCompression(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;109&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMicroFocusHint(int, int, int, int, bool, QFont*)</primary></indexterm>QWidget::setMicroFocusHint(int, int, int, int, bool, QFont*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;110&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDateEdit::setFocusSection(int)</primary></indexterm>QDateEdit::setFocusSection(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;111&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDateEdit::sectionFormattedText(int)</primary></indexterm>QDateEdit::sectionFormattedText(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;112&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDateEdit::addNumber(int, int)</primary></indexterm>QDateEdit::addNumber(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;113&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDateEdit::removeLastNumber(int)</primary></indexterm>QDateEdit::removeLastNumber(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;114&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDateEdit::stepUp()</primary></indexterm>QDateEdit::stepUp()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;115&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDateEdit::stepDown()</primary></indexterm>QDateEdit::stepDown()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;116&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDateEdit::setDate(QDate const&)</primary></indexterm>QDateEdit::setDate(QDate const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;117&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDateEdit::setOrder(QDateEdit::Order)</primary></indexterm>QDateEdit::setOrder(QDateEdit::Order)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;118&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDateEdit::setAutoAdvance(bool)</primary></indexterm>QDateEdit::setAutoAdvance(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;119&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDateEdit::setMinValue(QDate const&)</primary></indexterm>NULL or QDateEdit::setMinValue(QDate const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;120&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDateEdit::setMaxValue(QDate const&)</primary></indexterm>NULL or QDateEdit::setMaxValue(QDate const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;121&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDateEdit::setRange(QDate const&, QDate const&)</primary></indexterm>QDateEdit::setRange(QDate const&, QDate const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;122&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDateEdit::setSeparator(QString const&)</primary></indexterm>QDateEdit::setSeparator(QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;123&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDateEdit::setYear(int)</primary></indexterm>QDateEdit::setYear(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;124&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDateEdit::setMonth(int)</primary></indexterm>QDateEdit::setMonth(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;125&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDateEdit::setDay(int)</primary></indexterm>QDateEdit::setDay(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;126&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDateEdit::fix()</primary></indexterm>QDateEdit::fix()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;127&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDateEdit::outOfRange(int, int, int) const</primary></indexterm>QDateEdit::outOfRange(int, int, int) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--classdata-->
<TABLE id="cls-58172-1">
<TITLE>Secondary vtable for QDateEdit</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>-80</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QDateEdit</primary></indexterm>typeinfo for QDateEdit</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QDateEdit::~QDateEdit()</primary></indexterm>non-virtual thunk to QDateEdit::~QDateEdit()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QDateEdit::~QDateEdit()</primary></indexterm>non-virtual thunk to QDateEdit::~QDateEdit()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::setResolution(int)</primary></indexterm>QPaintDevice::setResolution(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::resolution() const</primary></indexterm>QPaintDevice::resolution() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::handle() const</primary></indexterm>QPaintDevice::handle() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::x11RenderHandle() const</primary></indexterm>QPaintDevice::x11RenderHandle() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::setX11Data(QPaintDeviceX11Data const*)</primary></indexterm>QPaintDevice::setX11Data(QPaintDeviceX11Data const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::cmd(int, QPainter*, QPDevCmdParam*)</primary></indexterm>QPaintDevice::cmd(int, QPainter*, QPDevCmdParam*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::metric(int) const</primary></indexterm>non-virtual thunk to QWidget::metric(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::fontMet(QFont*, int, char const*, int) const</primary></indexterm>QPaintDevice::fontMet(QFont*, int, char const*, int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::fontInf(QFont*, int) const</primary></indexterm>QPaintDevice::fontInf(QFont*, int) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QDateEdit  class
is described by <XREF LINKEND="rtti-56508">
</PARA>
<!--classdata-->
<TABLE ID="rtti-56508">
<TITLE>typeinfo for QDateEdit</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QDateEdit</primary></indexterm>typeinfo name for QDateEdit</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QDateTimeEditBase</primary></indexterm>typeinfo for QDateTimeEditBase</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QTimeEdit</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QTimeEdit class
is described by <XREF LINKEND="cls-60681-0">
</PARA>
<!--classdata-->
<TABLE id="cls-60681-0">
<TITLE>Primary vtable for QTimeEdit</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QTimeEdit</primary></indexterm>typeinfo for QTimeEdit</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTimeEdit::metaObject() const</primary></indexterm>NULL or QTimeEdit::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTimeEdit::className() const</primary></indexterm>QTimeEdit::className() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTimeEdit::qt_cast(char const*)</primary></indexterm>QTimeEdit::qt_cast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTimeEdit::qt_invoke(int, QUObject*)</primary></indexterm>QTimeEdit::qt_invoke(int, QUObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTimeEdit::qt_emit(int, QUObject*)</primary></indexterm>QTimeEdit::qt_emit(int, QUObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTimeEdit::qt_property(int, int, QVariant*)</primary></indexterm>QTimeEdit::qt_property(int, int, QVariant*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTimeEdit::~QTimeEdit()</primary></indexterm>QTimeEdit::~QTimeEdit()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTimeEdit::~QTimeEdit()</primary></indexterm>QTimeEdit::~QTimeEdit()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTimeEdit::event(QEvent*)</primary></indexterm>QTimeEdit::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::eventFilter(QObject*, QEvent*)</primary></indexterm>QObject::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setName(char const*)</primary></indexterm>QWidget::setName(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::insertChild(QObject*)</primary></indexterm>QObject::insertChild(QObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::removeChild(QObject*)</primary></indexterm>QObject::removeChild(QObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::setProperty(char const*, QVariant const&)</primary></indexterm>QObject::setProperty(char const*, QVariant const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::property(char const*) const</primary></indexterm>QObject::property(char const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTimeEdit::timerEvent(QTimerEvent*)</primary></indexterm>QTimeEdit::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QCustomEvent*)</primary></indexterm>QObject::customEvent(QCustomEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::checkConnectArgs(char const*, QObject const*, char const*)</primary></indexterm>QObject::checkConnectArgs(char const*, QObject const*, char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setEnabled(bool)</primary></indexterm>QWidget::setEnabled(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMinimumSize(int, int)</primary></indexterm>QWidget::setMinimumSize(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMaximumSize(int, int)</primary></indexterm>QWidget::setMaximumSize(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setSizeIncrement(int, int)</primary></indexterm>QWidget::setSizeIncrement(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundMode(Qt::BackgroundMode)</primary></indexterm>QWidget::setBackgroundMode(Qt::BackgroundMode)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setEraseColor(QColor const&)</primary></indexterm>QWidget::setEraseColor(QColor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setErasePixmap(QPixmap const&)</primary></indexterm>QWidget::setErasePixmap(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setPalette(QPalette const&)</primary></indexterm>QWidget::setPalette(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setPaletteBackgroundColor(QColor const&)</primary></indexterm>QWidget::setPaletteBackgroundColor(QColor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setPaletteBackgroundPixmap(QPixmap const&)</primary></indexterm>QWidget::setPaletteBackgroundPixmap(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFont(QFont const&)</primary></indexterm>QWidget::setFont(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setCursor(QCursor const&)</primary></indexterm>QWidget::setCursor(QCursor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;33&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::unsetCursor()</primary></indexterm>QWidget::unsetCursor()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;34&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMask(QBitmap const&)</primary></indexterm>QWidget::setMask(QBitmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;35&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMask(QRegion const&)</primary></indexterm>QWidget::setMask(QRegion const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;36&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundColor(QColor const&)</primary></indexterm>QWidget::setBackgroundColor(QColor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;37&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundPixmap(QPixmap const&)</primary></indexterm>QWidget::setBackgroundPixmap(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;38&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setCaption(QString const&)</primary></indexterm>QWidget::setCaption(QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;39&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setIcon(QPixmap const&)</primary></indexterm>QWidget::setIcon(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;40&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setIconText(QString const&)</primary></indexterm>QWidget::setIconText(QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;41&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMouseTracking(bool)</primary></indexterm>QWidget::setMouseTracking(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;42&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFocus()</primary></indexterm>QWidget::setFocus()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;43&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setActiveWindow()</primary></indexterm>QWidget::setActiveWindow()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;44&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFocusPolicy(QWidget::FocusPolicy)</primary></indexterm>QWidget::setFocusPolicy(QWidget::FocusPolicy)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;45&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFocusProxy(QWidget*)</primary></indexterm>QWidget::setFocusProxy(QWidget*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;46&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setUpdatesEnabled(bool)</primary></indexterm>QWidget::setUpdatesEnabled(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;47&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::show()</primary></indexterm>QWidget::show()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;48&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::hide()</primary></indexterm>QWidget::hide()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;49&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showMinimized()</primary></indexterm>QWidget::showMinimized()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;50&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showMaximized()</primary></indexterm>QWidget::showMaximized()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;51&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showNormal()</primary></indexterm>QWidget::showNormal()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;52&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::polish()</primary></indexterm>QWidget::polish()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;53&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::move(int, int)</primary></indexterm>QWidget::move(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;54&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::resize(int, int)</primary></indexterm>QWidget::resize(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;55&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setGeometry(int, int, int, int)</primary></indexterm>QWidget::setGeometry(int, int, int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;56&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setGeometry(QRect const&)</primary></indexterm>NULL or QWidget::setGeometry(QRect const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;57&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::close(bool)</primary></indexterm>QWidget::close(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;58&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTimeEdit::sizeHint() const</primary></indexterm>QTimeEdit::sizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;59&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTimeEdit::minimumSizeHint() const</primary></indexterm>QTimeEdit::minimumSizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;60&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::sizePolicy() const</primary></indexterm>QWidget::sizePolicy() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;61&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setSizePolicy(QSizePolicy)</primary></indexterm>QWidget::setSizePolicy(QSizePolicy)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;62&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::heightForWidth(int) const</primary></indexterm>QWidget::heightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;63&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::adjustSize()</primary></indexterm>QWidget::adjustSize()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;64&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::reparent(QWidget*, unsigned int, QPoint const&, bool)</primary></indexterm>QWidget::reparent(QWidget*, unsigned int, QPoint const&, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;65&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setAcceptDrops(bool)</primary></indexterm>QWidget::setAcceptDrops(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;66&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setAutoMask(bool)</primary></indexterm>QWidget::setAutoMask(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;67&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundOrigin(QWidget::BackgroundOrigin)</primary></indexterm>QWidget::setBackgroundOrigin(QWidget::BackgroundOrigin)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;68&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::customWhatsThis() const</primary></indexterm>QWidget::customWhatsThis() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;69&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mousePressEvent(QMouseEvent*)</primary></indexterm>QWidget::mousePressEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;70&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseReleaseEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseReleaseEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;71&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseDoubleClickEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseDoubleClickEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;72&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseMoveEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseMoveEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;73&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::wheelEvent(QWheelEvent*)</primary></indexterm>QWidget::wheelEvent(QWheelEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;74&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyPressEvent(QKeyEvent*)</primary></indexterm>QWidget::keyPressEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;75&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyReleaseEvent(QKeyEvent*)</primary></indexterm>QWidget::keyReleaseEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;76&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusInEvent(QFocusEvent*)</primary></indexterm>QWidget::focusInEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;77&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusOutEvent(QFocusEvent*)</primary></indexterm>QWidget::focusOutEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;78&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enterEvent(QEvent*)</primary></indexterm>QWidget::enterEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;79&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::leaveEvent(QEvent*)</primary></indexterm>QWidget::leaveEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;80&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paintEvent(QPaintEvent*)</primary></indexterm>QWidget::paintEvent(QPaintEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;81&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::moveEvent(QMoveEvent*)</primary></indexterm>QWidget::moveEvent(QMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;82&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTimeEdit::resizeEvent(QResizeEvent*)</primary></indexterm>QTimeEdit::resizeEvent(QResizeEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;83&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::closeEvent(QCloseEvent*)</primary></indexterm>QWidget::closeEvent(QCloseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;84&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::contextMenuEvent(QContextMenuEvent*)</primary></indexterm>QWidget::contextMenuEvent(QContextMenuEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;85&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::imStartEvent(QIMEvent*)</primary></indexterm>QWidget::imStartEvent(QIMEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;86&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::imComposeEvent(QIMEvent*)</primary></indexterm>QWidget::imComposeEvent(QIMEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;87&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::imEndEvent(QIMEvent*)</primary></indexterm>QWidget::imEndEvent(QIMEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;88&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::tabletEvent(QTabletEvent*)</primary></indexterm>QWidget::tabletEvent(QTabletEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;89&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragEnterEvent(QDragEnterEvent*)</primary></indexterm>QWidget::dragEnterEvent(QDragEnterEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;90&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragMoveEvent(QDragMoveEvent*)</primary></indexterm>QWidget::dragMoveEvent(QDragMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;91&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragLeaveEvent(QDragLeaveEvent*)</primary></indexterm>QWidget::dragLeaveEvent(QDragLeaveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;92&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dropEvent(QDropEvent*)</primary></indexterm>QWidget::dropEvent(QDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;93&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showEvent(QShowEvent*)</primary></indexterm>QWidget::showEvent(QShowEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;94&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::hideEvent(QHideEvent*)</primary></indexterm>QWidget::hideEvent(QHideEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;95&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::x11Event(_XEvent*)</primary></indexterm>QWidget::x11Event(_XEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;96&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::updateMask()</primary></indexterm>QWidget::updateMask()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;97&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::styleChange(QStyle&)</primary></indexterm>QWidget::styleChange(QStyle&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;98&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enabledChange(bool)</primary></indexterm>QWidget::enabledChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;99&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paletteChange(QPalette const&)</primary></indexterm>QWidget::paletteChange(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;100&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::fontChange(QFont const&)</primary></indexterm>QWidget::fontChange(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;101&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::windowActivationChange(bool)</primary></indexterm>QWidget::windowActivationChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;102&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::metric(int) const</primary></indexterm>QWidget::metric(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;103&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::create(unsigned long, bool, bool)</primary></indexterm>QWidget::create(unsigned long, bool, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;104&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::destroy(bool, bool)</primary></indexterm>QWidget::destroy(bool, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;105&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setWState(unsigned int)</primary></indexterm>NULL or QWidget::setWState(unsigned int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;106&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setWFlags(unsigned int)</primary></indexterm>NULL or QWidget::setWFlags(unsigned int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;107&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusNextPrevChild(bool)</primary></indexterm>QWidget::focusNextPrevChild(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;108&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setKeyCompression(bool)</primary></indexterm>QWidget::setKeyCompression(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;109&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMicroFocusHint(int, int, int, int, bool, QFont*)</primary></indexterm>QWidget::setMicroFocusHint(int, int, int, int, bool, QFont*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;110&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTimeEdit::setFocusSection(int)</primary></indexterm>QTimeEdit::setFocusSection(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;111&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTimeEdit::sectionFormattedText(int)</primary></indexterm>QTimeEdit::sectionFormattedText(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;112&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTimeEdit::addNumber(int, int)</primary></indexterm>QTimeEdit::addNumber(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;113&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTimeEdit::removeLastNumber(int)</primary></indexterm>QTimeEdit::removeLastNumber(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;114&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTimeEdit::stepUp()</primary></indexterm>QTimeEdit::stepUp()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;115&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTimeEdit::stepDown()</primary></indexterm>QTimeEdit::stepDown()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;116&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTimeEdit::setTime(QTime const&)</primary></indexterm>QTimeEdit::setTime(QTime const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;117&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTimeEdit::setAutoAdvance(bool)</primary></indexterm>QTimeEdit::setAutoAdvance(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;118&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTimeEdit::setMinValue(QTime const&)</primary></indexterm>NULL or QTimeEdit::setMinValue(QTime const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;119&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTimeEdit::setMaxValue(QTime const&)</primary></indexterm>NULL or QTimeEdit::setMaxValue(QTime const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;120&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTimeEdit::setRange(QTime const&, QTime const&)</primary></indexterm>QTimeEdit::setRange(QTime const&, QTime const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;121&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTimeEdit::setSeparator(QString const&)</primary></indexterm>QTimeEdit::setSeparator(QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;122&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTimeEdit::outOfRange(int, int, int) const</primary></indexterm>QTimeEdit::outOfRange(int, int, int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;123&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTimeEdit::setHour(int)</primary></indexterm>QTimeEdit::setHour(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;124&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTimeEdit::setMinute(int)</primary></indexterm>QTimeEdit::setMinute(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;125&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTimeEdit::setSecond(int)</primary></indexterm>QTimeEdit::setSecond(int)</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--classdata-->
<TABLE id="cls-60681-1">
<TITLE>Secondary vtable for QTimeEdit</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>-80</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QTimeEdit</primary></indexterm>typeinfo for QTimeEdit</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QTimeEdit::~QTimeEdit()</primary></indexterm>non-virtual thunk to QTimeEdit::~QTimeEdit()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QTimeEdit::~QTimeEdit()</primary></indexterm>non-virtual thunk to QTimeEdit::~QTimeEdit()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::setResolution(int)</primary></indexterm>QPaintDevice::setResolution(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::resolution() const</primary></indexterm>QPaintDevice::resolution() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::handle() const</primary></indexterm>QPaintDevice::handle() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::x11RenderHandle() const</primary></indexterm>QPaintDevice::x11RenderHandle() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::setX11Data(QPaintDeviceX11Data const*)</primary></indexterm>QPaintDevice::setX11Data(QPaintDeviceX11Data const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::cmd(int, QPainter*, QPDevCmdParam*)</primary></indexterm>QPaintDevice::cmd(int, QPainter*, QPDevCmdParam*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::metric(int) const</primary></indexterm>non-virtual thunk to QWidget::metric(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::fontMet(QFont*, int, char const*, int) const</primary></indexterm>QPaintDevice::fontMet(QFont*, int, char const*, int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::fontInf(QFont*, int) const</primary></indexterm>QPaintDevice::fontInf(QFont*, int) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QTimeEdit  class
is described by <XREF LINKEND="rtti-59077">
</PARA>
<!--classdata-->
<TABLE ID="rtti-59077">
<TITLE>typeinfo for QTimeEdit</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QTimeEdit</primary></indexterm>typeinfo name for QTimeEdit</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QDateTimeEditBase</primary></indexterm>typeinfo for QDateTimeEditBase</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Interfaces for Qt3 Date and Time</TITLE>
<PARA>
An LSB conforming implementation shall provide the architecture specific functions
for Qt3 Date and Time specified in <XREF linkend="tbl-libqt-mt-qt3-d-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<TABLE id="tbl-libqt-mt-qt3-d-ints">
<TITLE>libqt-mt - Qt3 Date and Time Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>_ZThn80_N13QDateTimeEditD0Ev</primary></indexterm>_ZThn80_N13QDateTimeEditD0Ev <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn80_N13QDateTimeEditD1Ev</primary></indexterm>_ZThn80_N13QDateTimeEditD1Ev <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn80_N9QDateEditD0Ev</primary></indexterm>_ZThn80_N9QDateEditD0Ev <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn80_N9QDateEditD1Ev</primary></indexterm>_ZThn80_N9QDateEditD1Ev <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn80_N9QTimeEditD0Ev</primary></indexterm>_ZThn80_N9QTimeEditD0Ev <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn80_N9QTimeEditD1Ev</primary></indexterm>_ZThn80_N9QTimeEditD1Ev <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>
</SECT2>
<!-- debug: database interface name Qt3 Canvas -->
<SECT2>
<!--libgroup-->
<TITLE>Qt3 Canvas</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Class data for QCanvasItem</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QCanvasItem class
is described in the generic part of this specification.
</PARA>
<PARA>
The Run Time Type Information for the QCanvasItem  class
is described by <XREF LINKEND="rtti-51285">
</PARA>
<!--classdata-->
<TABLE ID="rtti-51285">
<TITLE>typeinfo for QCanvasItem</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QCanvasItem</primary></indexterm>typeinfo name for QCanvasItem</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for Qt</primary></indexterm>typeinfo for Qt</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QCanvasSprite</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QCanvasSprite class
is described in the generic part of this specification.
</PARA>
<PARA>
The Run Time Type Information for the QCanvasSprite  class
is described by <XREF LINKEND="rtti-50724">
</PARA>
<!--classdata-->
<TABLE ID="rtti-50724">
<TITLE>typeinfo for QCanvasSprite</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QCanvasSprite</primary></indexterm>typeinfo name for QCanvasSprite</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QCanvasItem</primary></indexterm>typeinfo for QCanvasItem</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QCanvasPolygonalItem</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QCanvasPolygonalItem class
is described in the generic part of this specification.
</PARA>
<PARA>
The Run Time Type Information for the QCanvasPolygonalItem  class
is described by <XREF LINKEND="rtti-48854">
</PARA>
<!--classdata-->
<TABLE ID="rtti-48854">
<TITLE>typeinfo for QCanvasPolygonalItem</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QCanvasPolygonalItem</primary></indexterm>typeinfo name for QCanvasPolygonalItem</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QCanvasItem</primary></indexterm>typeinfo for QCanvasItem</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QCanvasRectangle</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QCanvasRectangle class
is described in the generic part of this specification.
</PARA>
<PARA>
The Run Time Type Information for the QCanvasRectangle  class
is described by <XREF LINKEND="rtti-59337">
</PARA>
<!--classdata-->
<TABLE ID="rtti-59337">
<TITLE>typeinfo for QCanvasRectangle</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QCanvasRectangle</primary></indexterm>typeinfo name for QCanvasRectangle</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QCanvasPolygonalItem</primary></indexterm>typeinfo for QCanvasPolygonalItem</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QCanvasView</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QCanvasView class
is described by <XREF LINKEND="cls-60116-0">
</PARA>
<!--classdata-->
<TABLE id="cls-60116-0">
<TITLE>Primary vtable for QCanvasView</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QCanvasView</primary></indexterm>typeinfo for QCanvasView</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QCanvasView::metaObject() const</primary></indexterm>NULL or QCanvasView::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QCanvasView::className() const</primary></indexterm>QCanvasView::className() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QCanvasView::qt_cast(char const*)</primary></indexterm>QCanvasView::qt_cast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QCanvasView::qt_invoke(int, QUObject*)</primary></indexterm>QCanvasView::qt_invoke(int, QUObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QCanvasView::qt_emit(int, QUObject*)</primary></indexterm>QCanvasView::qt_emit(int, QUObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QCanvasView::qt_property(int, int, QVariant*)</primary></indexterm>QCanvasView::qt_property(int, int, QVariant*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QCanvasView::~QCanvasView()</primary></indexterm>QCanvasView::~QCanvasView()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QCanvasView::~QCanvasView()</primary></indexterm>QCanvasView::~QCanvasView()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::event(QEvent*)</primary></indexterm>QWidget::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::eventFilter(QObject*, QEvent*)</primary></indexterm>QScrollView::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setName(char const*)</primary></indexterm>QWidget::setName(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::insertChild(QObject*)</primary></indexterm>QObject::insertChild(QObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::removeChild(QObject*)</primary></indexterm>QScrollView::removeChild(QObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::setProperty(char const*, QVariant const&)</primary></indexterm>QObject::setProperty(char const*, QVariant const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::property(char const*) const</primary></indexterm>QObject::property(char const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QCustomEvent*)</primary></indexterm>QObject::customEvent(QCustomEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::checkConnectArgs(char const*, QObject const*, char const*)</primary></indexterm>QObject::checkConnectArgs(char const*, QObject const*, char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::setEnabled(bool)</primary></indexterm>QScrollView::setEnabled(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMinimumSize(int, int)</primary></indexterm>QWidget::setMinimumSize(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMaximumSize(int, int)</primary></indexterm>QWidget::setMaximumSize(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setSizeIncrement(int, int)</primary></indexterm>QWidget::setSizeIncrement(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundMode(Qt::BackgroundMode)</primary></indexterm>QWidget::setBackgroundMode(Qt::BackgroundMode)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setEraseColor(QColor const&)</primary></indexterm>QWidget::setEraseColor(QColor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setErasePixmap(QPixmap const&)</primary></indexterm>QWidget::setErasePixmap(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setPalette(QPalette const&)</primary></indexterm>QWidget::setPalette(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setPaletteBackgroundColor(QColor const&)</primary></indexterm>QWidget::setPaletteBackgroundColor(QColor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setPaletteBackgroundPixmap(QPixmap const&)</primary></indexterm>QWidget::setPaletteBackgroundPixmap(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFont(QFont const&)</primary></indexterm>QWidget::setFont(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setCursor(QCursor const&)</primary></indexterm>QWidget::setCursor(QCursor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;33&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::unsetCursor()</primary></indexterm>QWidget::unsetCursor()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;34&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMask(QBitmap const&)</primary></indexterm>QWidget::setMask(QBitmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;35&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMask(QRegion const&)</primary></indexterm>QWidget::setMask(QRegion const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;36&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundColor(QColor const&)</primary></indexterm>QWidget::setBackgroundColor(QColor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;37&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundPixmap(QPixmap const&)</primary></indexterm>QWidget::setBackgroundPixmap(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;38&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setCaption(QString const&)</primary></indexterm>QWidget::setCaption(QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;39&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setIcon(QPixmap const&)</primary></indexterm>QWidget::setIcon(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;40&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setIconText(QString const&)</primary></indexterm>QWidget::setIconText(QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;41&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMouseTracking(bool)</primary></indexterm>QWidget::setMouseTracking(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;42&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFocus()</primary></indexterm>QWidget::setFocus()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;43&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setActiveWindow()</primary></indexterm>QWidget::setActiveWindow()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;44&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFocusPolicy(QWidget::FocusPolicy)</primary></indexterm>QWidget::setFocusPolicy(QWidget::FocusPolicy)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;45&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFocusProxy(QWidget*)</primary></indexterm>QWidget::setFocusProxy(QWidget*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;46&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setUpdatesEnabled(bool)</primary></indexterm>QWidget::setUpdatesEnabled(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;47&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::show()</primary></indexterm>QScrollView::show()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;48&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::hide()</primary></indexterm>QWidget::hide()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;49&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showMinimized()</primary></indexterm>QWidget::showMinimized()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;50&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showMaximized()</primary></indexterm>QWidget::showMaximized()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;51&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showNormal()</primary></indexterm>QWidget::showNormal()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;52&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::polish()</primary></indexterm>QWidget::polish()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;53&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::move(int, int)</primary></indexterm>QWidget::move(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;54&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::resize(int, int)</primary></indexterm>QScrollView::resize(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;55&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setGeometry(int, int, int, int)</primary></indexterm>QWidget::setGeometry(int, int, int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;56&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setGeometry(QRect const&)</primary></indexterm>NULL or QWidget::setGeometry(QRect const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;57&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::close(bool)</primary></indexterm>QWidget::close(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;58&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QCanvasView::sizeHint() const</primary></indexterm>QCanvasView::sizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;59&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::minimumSizeHint() const</primary></indexterm>QScrollView::minimumSizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;60&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::sizePolicy() const</primary></indexterm>QWidget::sizePolicy() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;61&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setSizePolicy(QSizePolicy)</primary></indexterm>QWidget::setSizePolicy(QSizePolicy)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;62&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::heightForWidth(int) const</primary></indexterm>QWidget::heightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;63&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::adjustSize()</primary></indexterm>QWidget::adjustSize()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;64&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::reparent(QWidget*, unsigned int, QPoint const&, bool)</primary></indexterm>QWidget::reparent(QWidget*, unsigned int, QPoint const&, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;65&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setAcceptDrops(bool)</primary></indexterm>QWidget::setAcceptDrops(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;66&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setAutoMask(bool)</primary></indexterm>QWidget::setAutoMask(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;67&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundOrigin(QWidget::BackgroundOrigin)</primary></indexterm>QWidget::setBackgroundOrigin(QWidget::BackgroundOrigin)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;68&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::customWhatsThis() const</primary></indexterm>QWidget::customWhatsThis() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;69&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::mousePressEvent(QMouseEvent*)</primary></indexterm>QScrollView::mousePressEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;70&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::mouseReleaseEvent(QMouseEvent*)</primary></indexterm>QScrollView::mouseReleaseEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;71&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::mouseDoubleClickEvent(QMouseEvent*)</primary></indexterm>QScrollView::mouseDoubleClickEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;72&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::mouseMoveEvent(QMouseEvent*)</primary></indexterm>QScrollView::mouseMoveEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;73&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::wheelEvent(QWheelEvent*)</primary></indexterm>QScrollView::wheelEvent(QWheelEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;74&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyPressEvent(QKeyEvent*)</primary></indexterm>QWidget::keyPressEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;75&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyReleaseEvent(QKeyEvent*)</primary></indexterm>QWidget::keyReleaseEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;76&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusInEvent(QFocusEvent*)</primary></indexterm>QWidget::focusInEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;77&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusOutEvent(QFocusEvent*)</primary></indexterm>QWidget::focusOutEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;78&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enterEvent(QEvent*)</primary></indexterm>QWidget::enterEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;79&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::leaveEvent(QEvent*)</primary></indexterm>QWidget::leaveEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;80&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::paintEvent(QPaintEvent*)</primary></indexterm>QFrame::paintEvent(QPaintEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;81&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::moveEvent(QMoveEvent*)</primary></indexterm>QWidget::moveEvent(QMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;82&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::resizeEvent(QResizeEvent*)</primary></indexterm>QScrollView::resizeEvent(QResizeEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;83&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::closeEvent(QCloseEvent*)</primary></indexterm>QWidget::closeEvent(QCloseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;84&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::contextMenuEvent(QContextMenuEvent*)</primary></indexterm>QScrollView::contextMenuEvent(QContextMenuEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;85&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::imStartEvent(QIMEvent*)</primary></indexterm>QWidget::imStartEvent(QIMEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;86&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::imComposeEvent(QIMEvent*)</primary></indexterm>QWidget::imComposeEvent(QIMEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;87&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::imEndEvent(QIMEvent*)</primary></indexterm>QWidget::imEndEvent(QIMEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;88&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::tabletEvent(QTabletEvent*)</primary></indexterm>QWidget::tabletEvent(QTabletEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;89&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragEnterEvent(QDragEnterEvent*)</primary></indexterm>QWidget::dragEnterEvent(QDragEnterEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;90&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragMoveEvent(QDragMoveEvent*)</primary></indexterm>QWidget::dragMoveEvent(QDragMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;91&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragLeaveEvent(QDragLeaveEvent*)</primary></indexterm>QWidget::dragLeaveEvent(QDragLeaveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;92&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dropEvent(QDropEvent*)</primary></indexterm>QWidget::dropEvent(QDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;93&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showEvent(QShowEvent*)</primary></indexterm>QWidget::showEvent(QShowEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;94&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::hideEvent(QHideEvent*)</primary></indexterm>QWidget::hideEvent(QHideEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;95&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::x11Event(_XEvent*)</primary></indexterm>QWidget::x11Event(_XEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;96&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::updateMask()</primary></indexterm>QWidget::updateMask()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;97&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::styleChange(QStyle&)</primary></indexterm>QScrollView::styleChange(QStyle&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;98&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enabledChange(bool)</primary></indexterm>QWidget::enabledChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;99&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paletteChange(QPalette const&)</primary></indexterm>QWidget::paletteChange(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;100&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::fontChange(QFont const&)</primary></indexterm>QScrollView::fontChange(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;101&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::windowActivationChange(bool)</primary></indexterm>QWidget::windowActivationChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;102&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::metric(int) const</primary></indexterm>QWidget::metric(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;103&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::create(unsigned long, bool, bool)</primary></indexterm>QWidget::create(unsigned long, bool, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;104&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::destroy(bool, bool)</primary></indexterm>QWidget::destroy(bool, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;105&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setWState(unsigned int)</primary></indexterm>NULL or QWidget::setWState(unsigned int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;106&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setWFlags(unsigned int)</primary></indexterm>NULL or QWidget::setWFlags(unsigned int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;107&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::focusNextPrevChild(bool)</primary></indexterm>QScrollView::focusNextPrevChild(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;108&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setKeyCompression(bool)</primary></indexterm>QWidget::setKeyCompression(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;109&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMicroFocusHint(int, int, int, int, bool, QFont*)</primary></indexterm>QWidget::setMicroFocusHint(int, int, int, int, bool, QFont*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;110&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::setFrameStyle(int)</primary></indexterm>QFrame::setFrameStyle(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;111&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::setLineWidth(int)</primary></indexterm>QFrame::setLineWidth(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;112&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::setMargin(int)</primary></indexterm>QFrame::setMargin(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;113&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::setMidLineWidth(int)</primary></indexterm>QFrame::setMidLineWidth(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;114&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::setFrameRect(QRect const&)</primary></indexterm>QFrame::setFrameRect(QRect const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;115&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::drawFrame(QPainter*)</primary></indexterm>QFrame::drawFrame(QPainter*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;116&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QCanvasView::drawContents(QPainter*)</primary></indexterm>QCanvasView::drawContents(QPainter*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;117&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::frameChanged()</primary></indexterm>QScrollView::frameChanged()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;118&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::setResizePolicy(QScrollView::ResizePolicy)</primary></indexterm>QScrollView::setResizePolicy(QScrollView::ResizePolicy)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;119&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::addChild(QWidget*, int, int)</primary></indexterm>QScrollView::addChild(QWidget*, int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;120&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::moveChild(QWidget*, int, int)</primary></indexterm>QScrollView::moveChild(QWidget*, int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;121&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::setVScrollBarMode(QScrollView::ScrollBarMode)</primary></indexterm>QScrollView::setVScrollBarMode(QScrollView::ScrollBarMode)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;122&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::setHScrollBarMode(QScrollView::ScrollBarMode)</primary></indexterm>QScrollView::setHScrollBarMode(QScrollView::ScrollBarMode)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;123&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::setCornerWidget(QWidget*)</primary></indexterm>QScrollView::setCornerWidget(QWidget*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;124&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::setDragAutoScroll(bool)</primary></indexterm>QScrollView::setDragAutoScroll(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;125&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::resizeContents(int, int)</primary></indexterm>QScrollView::resizeContents(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;126&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::setContentsPos(int, int)</primary></indexterm>QScrollView::setContentsPos(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;127&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QCanvasView::drawContents(QPainter*, int, int, int, int)</primary></indexterm>QCanvasView::drawContents(QPainter*, int, int, int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;128&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::drawContentsOffset(QPainter*, int, int, int, int, int, int)</primary></indexterm>QScrollView::drawContentsOffset(QPainter*, int, int, int, int, int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;129&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::contentsMousePressEvent(QMouseEvent*)</primary></indexterm>QScrollView::contentsMousePressEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;130&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::contentsMouseReleaseEvent(QMouseEvent*)</primary></indexterm>QScrollView::contentsMouseReleaseEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;131&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::contentsMouseDoubleClickEvent(QMouseEvent*)</primary></indexterm>QScrollView::contentsMouseDoubleClickEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;132&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::contentsMouseMoveEvent(QMouseEvent*)</primary></indexterm>QScrollView::contentsMouseMoveEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;133&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::contentsDragEnterEvent(QDragEnterEvent*)</primary></indexterm>QScrollView::contentsDragEnterEvent(QDragEnterEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;134&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::contentsDragMoveEvent(QDragMoveEvent*)</primary></indexterm>QScrollView::contentsDragMoveEvent(QDragMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;135&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::contentsDragLeaveEvent(QDragLeaveEvent*)</primary></indexterm>QScrollView::contentsDragLeaveEvent(QDragLeaveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;136&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::contentsDropEvent(QDropEvent*)</primary></indexterm>QScrollView::contentsDropEvent(QDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;137&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::contentsWheelEvent(QWheelEvent*)</primary></indexterm>QScrollView::contentsWheelEvent(QWheelEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;138&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::contentsContextMenuEvent(QContextMenuEvent*)</primary></indexterm>QScrollView::contentsContextMenuEvent(QContextMenuEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;139&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::viewportPaintEvent(QPaintEvent*)</primary></indexterm>QScrollView::viewportPaintEvent(QPaintEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;140&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::viewportResizeEvent(QResizeEvent*)</primary></indexterm>QScrollView::viewportResizeEvent(QResizeEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;141&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::viewportMousePressEvent(QMouseEvent*)</primary></indexterm>QScrollView::viewportMousePressEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;142&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::viewportMouseReleaseEvent(QMouseEvent*)</primary></indexterm>QScrollView::viewportMouseReleaseEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;143&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::viewportMouseDoubleClickEvent(QMouseEvent*)</primary></indexterm>QScrollView::viewportMouseDoubleClickEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;144&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::viewportMouseMoveEvent(QMouseEvent*)</primary></indexterm>QScrollView::viewportMouseMoveEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;145&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::viewportDragEnterEvent(QDragEnterEvent*)</primary></indexterm>QScrollView::viewportDragEnterEvent(QDragEnterEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;146&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::viewportDragMoveEvent(QDragMoveEvent*)</primary></indexterm>QScrollView::viewportDragMoveEvent(QDragMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;147&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::viewportDragLeaveEvent(QDragLeaveEvent*)</primary></indexterm>QScrollView::viewportDragLeaveEvent(QDragLeaveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;148&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::viewportDropEvent(QDropEvent*)</primary></indexterm>QScrollView::viewportDropEvent(QDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;149&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::viewportWheelEvent(QWheelEvent*)</primary></indexterm>QScrollView::viewportWheelEvent(QWheelEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;150&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::viewportContextMenuEvent(QContextMenuEvent*)</primary></indexterm>QScrollView::viewportContextMenuEvent(QContextMenuEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;151&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::setMargins(int, int, int, int)</primary></indexterm>QScrollView::setMargins(int, int, int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;152&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::setHBarGeometry(QScrollBar&, int, int, int, int)</primary></indexterm>QScrollView::setHBarGeometry(QScrollBar&, int, int, int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;153&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::setVBarGeometry(QScrollBar&, int, int, int, int)</primary></indexterm>QScrollView::setVBarGeometry(QScrollBar&, int, int, int, int)</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--classdata-->
<TABLE id="cls-60116-1">
<TITLE>Secondary vtable for QCanvasView</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>-80</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QCanvasView</primary></indexterm>typeinfo for QCanvasView</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QCanvasView::~QCanvasView()</primary></indexterm>non-virtual thunk to QCanvasView::~QCanvasView()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QCanvasView::~QCanvasView()</primary></indexterm>non-virtual thunk to QCanvasView::~QCanvasView()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::setResolution(int)</primary></indexterm>QPaintDevice::setResolution(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::resolution() const</primary></indexterm>QPaintDevice::resolution() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::handle() const</primary></indexterm>QPaintDevice::handle() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::x11RenderHandle() const</primary></indexterm>QPaintDevice::x11RenderHandle() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::setX11Data(QPaintDeviceX11Data const*)</primary></indexterm>QPaintDevice::setX11Data(QPaintDeviceX11Data const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::cmd(int, QPainter*, QPDevCmdParam*)</primary></indexterm>QPaintDevice::cmd(int, QPainter*, QPDevCmdParam*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::metric(int) const</primary></indexterm>non-virtual thunk to QWidget::metric(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::fontMet(QFont*, int, char const*, int) const</primary></indexterm>QPaintDevice::fontMet(QFont*, int, char const*, int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::fontInf(QFont*, int) const</primary></indexterm>QPaintDevice::fontInf(QFont*, int) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QCanvasView  class
is described by <XREF LINKEND="rtti-53208">
</PARA>
<!--classdata-->
<TABLE ID="rtti-53208">
<TITLE>typeinfo for QCanvasView</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QCanvasView</primary></indexterm>typeinfo name for QCanvasView</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QScrollView</primary></indexterm>typeinfo for QScrollView</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QCanvasEllipse</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QCanvasEllipse class
is described in the generic part of this specification.
</PARA>
<PARA>
The Run Time Type Information for the QCanvasEllipse  class
is described by <XREF LINKEND="rtti-59617">
</PARA>
<!--classdata-->
<TABLE ID="rtti-59617">
<TITLE>typeinfo for QCanvasEllipse</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QCanvasEllipse</primary></indexterm>typeinfo name for QCanvasEllipse</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QCanvasPolygonalItem</primary></indexterm>typeinfo for QCanvasPolygonalItem</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QCanvasPixmap</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QCanvasPixmap class
is described in the generic part of this specification.
</PARA>
<PARA>
The Run Time Type Information for the QCanvasPixmap  class
is described by <XREF LINKEND="rtti-53944">
</PARA>
<!--classdata-->
<TABLE ID="rtti-53944">
<TITLE>typeinfo for QCanvasPixmap</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QCanvasPixmap</primary></indexterm>typeinfo name for QCanvasPixmap</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QPixmap</primary></indexterm>typeinfo for QPixmap</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QCanvasLine</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QCanvasLine class
is described in the generic part of this specification.
</PARA>
<PARA>
The Run Time Type Information for the QCanvasLine  class
is described by <XREF LINKEND="rtti-58625">
</PARA>
<!--classdata-->
<TABLE ID="rtti-58625">
<TITLE>typeinfo for QCanvasLine</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QCanvasLine</primary></indexterm>typeinfo name for QCanvasLine</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QCanvasPolygonalItem</primary></indexterm>typeinfo for QCanvasPolygonalItem</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QCanvasSpline</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QCanvasSpline class
is described in the generic part of this specification.
</PARA>
<PARA>
The Run Time Type Information for the QCanvasSpline  class
is described by <XREF LINKEND="rtti-53758">
</PARA>
<!--classdata-->
<TABLE ID="rtti-53758">
<TITLE>typeinfo for QCanvasSpline</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QCanvasSpline</primary></indexterm>typeinfo name for QCanvasSpline</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QCanvasPolygon</primary></indexterm>typeinfo for QCanvasPolygon</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QCanvasText</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QCanvasText class
is described in the generic part of this specification.
</PARA>
<PARA>
The Run Time Type Information for the QCanvasText  class
is described by <XREF LINKEND="rtti-59751">
</PARA>
<!--classdata-->
<TABLE ID="rtti-59751">
<TITLE>typeinfo for QCanvasText</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QCanvasText</primary></indexterm>typeinfo name for QCanvasText</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QCanvasItem</primary></indexterm>typeinfo for QCanvasItem</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QCanvasPolygon</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QCanvasPolygon class
is described in the generic part of this specification.
</PARA>
<PARA>
The Run Time Type Information for the QCanvasPolygon  class
is described by <XREF LINKEND="rtti-53593">
</PARA>
<!--classdata-->
<TABLE ID="rtti-53593">
<TITLE>typeinfo for QCanvasPolygon</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QCanvasPolygon</primary></indexterm>typeinfo name for QCanvasPolygon</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QCanvasPolygonalItem</primary></indexterm>typeinfo for QCanvasPolygonalItem</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QCanvas</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QCanvas class
is described in the generic part of this specification.
</PARA>
<PARA>
The Run Time Type Information for the QCanvas  class
is described by <XREF LINKEND="rtti-60325">
</PARA>
<!--classdata-->
<TABLE ID="rtti-60325">
<TITLE>typeinfo for QCanvas</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QCanvas</primary></indexterm>typeinfo name for QCanvas</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QObject</primary></indexterm>typeinfo for QObject</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Interfaces for Qt3 Canvas</TITLE>
<PARA>
An LSB conforming implementation shall provide the architecture specific functions
for Qt3 Canvas specified in <XREF linkend="tbl-libqt-mt-qt3-c-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<TABLE id="tbl-libqt-mt-qt3-c-ints">
<TITLE>libqt-mt - Qt3 Canvas Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>_ZThn80_N11QCanvasViewD0Ev</primary></indexterm>_ZThn80_N11QCanvasViewD0Ev <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn80_N11QCanvasViewD1Ev</primary></indexterm>_ZThn80_N11QCanvasViewD1Ev <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>
</SECT2>
<!-- debug: database interface name Qt3 Drag and Drop -->
<SECT2>
<!--libgroup-->
<TITLE>Qt3 Drag and Drop</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Class data for QImageDrag</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QImageDrag class
is described by <XREF LINKEND="cls-57404-0">
</PARA>
<!--classdata-->
<TABLE id="cls-57404-0">
<TITLE>Primary vtable for QImageDrag</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QImageDrag</primary></indexterm>typeinfo for QImageDrag</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QImageDrag::metaObject() const</primary></indexterm>NULL or QImageDrag::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QImageDrag::className() const</primary></indexterm>QImageDrag::className() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QImageDrag::qt_cast(char const*)</primary></indexterm>QImageDrag::qt_cast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QImageDrag::qt_invoke(int, QUObject*)</primary></indexterm>QImageDrag::qt_invoke(int, QUObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QImageDrag::qt_emit(int, QUObject*)</primary></indexterm>QImageDrag::qt_emit(int, QUObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QImageDrag::qt_property(int, int, QVariant*)</primary></indexterm>QImageDrag::qt_property(int, int, QVariant*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QImageDrag::~QImageDrag()</primary></indexterm>QImageDrag::~QImageDrag()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QImageDrag::~QImageDrag()</primary></indexterm>QImageDrag::~QImageDrag()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::event(QEvent*)</primary></indexterm>QObject::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::eventFilter(QObject*, QEvent*)</primary></indexterm>QObject::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::setName(char const*)</primary></indexterm>QObject::setName(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::insertChild(QObject*)</primary></indexterm>QObject::insertChild(QObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::removeChild(QObject*)</primary></indexterm>QObject::removeChild(QObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::setProperty(char const*, QVariant const&)</primary></indexterm>QObject::setProperty(char const*, QVariant const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::property(char const*) const</primary></indexterm>QObject::property(char const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QCustomEvent*)</primary></indexterm>QObject::customEvent(QCustomEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::checkConnectArgs(char const*, QObject const*, char const*)</primary></indexterm>QObject::checkConnectArgs(char const*, QObject const*, char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDragObject::setPixmap(QPixmap)</primary></indexterm>QDragObject::setPixmap(QPixmap)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDragObject::setPixmap(QPixmap, QPoint const&)</primary></indexterm>QDragObject::setPixmap(QPixmap, QPoint const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDragObject::drag(QDragObject::DragMode)</primary></indexterm>QDragObject::drag(QDragObject::DragMode)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QImageDrag::setImage(QImage)</primary></indexterm>QImageDrag::setImage(QImage)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QImageDrag::format(int) const</primary></indexterm>QImageDrag::format(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QImageDrag::encodedData(char const*) const</primary></indexterm>QImageDrag::encodedData(char const*) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--classdata-->
<TABLE id="cls-57404-1">
<TITLE>Secondary vtable for QImageDrag</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>-80</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QImageDrag</primary></indexterm>typeinfo for QImageDrag</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QImageDrag::~QImageDrag()</primary></indexterm>non-virtual thunk to QImageDrag::~QImageDrag()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QImageDrag::~QImageDrag()</primary></indexterm>non-virtual thunk to QImageDrag::~QImageDrag()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QImageDrag::format(int) const</primary></indexterm>non-virtual thunk to QImageDrag::format(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMimeSource::provides(char const*) const</primary></indexterm>QMimeSource::provides(char const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QImageDrag::encodedData(char const*) const</primary></indexterm>non-virtual thunk to QImageDrag::encodedData(char const*) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QImageDrag  class
is described by <XREF LINKEND="rtti-50014">
</PARA>
<!--classdata-->
<TABLE ID="rtti-50014">
<TITLE>typeinfo for QImageDrag</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QImageDrag</primary></indexterm>typeinfo name for QImageDrag</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QDragObject</primary></indexterm>typeinfo for QDragObject</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QDragLeaveEvent</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QDragLeaveEvent class
is described in the generic part of this specification.
</PARA>
<PARA>
The Run Time Type Information for the QDragLeaveEvent  class
is described by <XREF LINKEND="rtti-55996">
</PARA>
<!--classdata-->
<TABLE ID="rtti-55996">
<TITLE>typeinfo for QDragLeaveEvent</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QDragLeaveEvent</primary></indexterm>typeinfo name for QDragLeaveEvent</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QEvent</primary></indexterm>typeinfo for QEvent</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QColorDrag</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QColorDrag class
is described by <XREF LINKEND="cls-56153-0">
</PARA>
<!--classdata-->
<TABLE id="cls-56153-0">
<TITLE>Primary vtable for QColorDrag</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QColorDrag</primary></indexterm>typeinfo for QColorDrag</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QColorDrag::metaObject() const</primary></indexterm>NULL or QColorDrag::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QColorDrag::className() const</primary></indexterm>QColorDrag::className() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QColorDrag::qt_cast(char const*)</primary></indexterm>QColorDrag::qt_cast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QColorDrag::qt_invoke(int, QUObject*)</primary></indexterm>QColorDrag::qt_invoke(int, QUObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QColorDrag::qt_emit(int, QUObject*)</primary></indexterm>QColorDrag::qt_emit(int, QUObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QColorDrag::qt_property(int, int, QVariant*)</primary></indexterm>QColorDrag::qt_property(int, int, QVariant*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QColorDrag::~QColorDrag()</primary></indexterm>NULL or QColorDrag::~QColorDrag()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QColorDrag::~QColorDrag()</primary></indexterm>NULL or QColorDrag::~QColorDrag()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::event(QEvent*)</primary></indexterm>QObject::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::eventFilter(QObject*, QEvent*)</primary></indexterm>QObject::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::setName(char const*)</primary></indexterm>QObject::setName(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::insertChild(QObject*)</primary></indexterm>QObject::insertChild(QObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::removeChild(QObject*)</primary></indexterm>QObject::removeChild(QObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::setProperty(char const*, QVariant const&)</primary></indexterm>QObject::setProperty(char const*, QVariant const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::property(char const*) const</primary></indexterm>QObject::property(char const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QCustomEvent*)</primary></indexterm>QObject::customEvent(QCustomEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::checkConnectArgs(char const*, QObject const*, char const*)</primary></indexterm>QObject::checkConnectArgs(char const*, QObject const*, char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDragObject::setPixmap(QPixmap)</primary></indexterm>QDragObject::setPixmap(QPixmap)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDragObject::setPixmap(QPixmap, QPoint const&)</primary></indexterm>QDragObject::setPixmap(QPixmap, QPoint const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDragObject::drag(QDragObject::DragMode)</primary></indexterm>QDragObject::drag(QDragObject::DragMode)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStoredDrag::setEncodedData(QMemArray&lt;char&gt; const&)</primary></indexterm>QStoredDrag::setEncodedData(QMemArray&lt;char&gt; const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStoredDrag::format(int) const</primary></indexterm>QStoredDrag::format(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStoredDrag::encodedData(char const*) const</primary></indexterm>QStoredDrag::encodedData(char const*) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--classdata-->
<TABLE id="cls-56153-1">
<TITLE>Secondary vtable for QColorDrag</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>-80</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QColorDrag</primary></indexterm>typeinfo for QColorDrag</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QColorDrag::~QColorDrag()</primary></indexterm>non-virtual thunk to QColorDrag::~QColorDrag()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QColorDrag::~QColorDrag()</primary></indexterm>non-virtual thunk to QColorDrag::~QColorDrag()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QStoredDrag::format(int) const</primary></indexterm>non-virtual thunk to QStoredDrag::format(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMimeSource::provides(char const*) const</primary></indexterm>QMimeSource::provides(char const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QStoredDrag::encodedData(char const*) const</primary></indexterm>non-virtual thunk to QStoredDrag::encodedData(char const*) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QColorDrag  class
is described by <XREF LINKEND="rtti-48654">
</PARA>
<!--classdata-->
<TABLE ID="rtti-48654">
<TITLE>typeinfo for QColorDrag</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QColorDrag</primary></indexterm>typeinfo name for QColorDrag</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QStoredDrag</primary></indexterm>typeinfo for QStoredDrag</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QDragResponseEvent</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QDragResponseEvent class
is described in the generic part of this specification.
</PARA>
<PARA>
The Run Time Type Information for the QDragResponseEvent  class
is described by <XREF LINKEND="rtti-58096">
</PARA>
<!--classdata-->
<TABLE ID="rtti-58096">
<TITLE>typeinfo for QDragResponseEvent</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QDragResponseEvent</primary></indexterm>typeinfo name for QDragResponseEvent</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QEvent</primary></indexterm>typeinfo for QEvent</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QIconDrag</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QIconDrag class
is described by <XREF LINKEND="cls-57609-0">
</PARA>
<!--classdata-->
<TABLE id="cls-57609-0">
<TITLE>Primary vtable for QIconDrag</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QIconDrag</primary></indexterm>typeinfo for QIconDrag</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QIconDrag::metaObject() const</primary></indexterm>NULL or QIconDrag::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QIconDrag::className() const</primary></indexterm>QIconDrag::className() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QIconDrag::qt_cast(char const*)</primary></indexterm>QIconDrag::qt_cast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QIconDrag::qt_invoke(int, QUObject*)</primary></indexterm>QIconDrag::qt_invoke(int, QUObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QIconDrag::qt_emit(int, QUObject*)</primary></indexterm>QIconDrag::qt_emit(int, QUObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QIconDrag::qt_property(int, int, QVariant*)</primary></indexterm>QIconDrag::qt_property(int, int, QVariant*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QIconDrag::~QIconDrag()</primary></indexterm>QIconDrag::~QIconDrag()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QIconDrag::~QIconDrag()</primary></indexterm>QIconDrag::~QIconDrag()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::event(QEvent*)</primary></indexterm>QObject::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::eventFilter(QObject*, QEvent*)</primary></indexterm>QObject::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::setName(char const*)</primary></indexterm>QObject::setName(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::insertChild(QObject*)</primary></indexterm>QObject::insertChild(QObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::removeChild(QObject*)</primary></indexterm>QObject::removeChild(QObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::setProperty(char const*, QVariant const&)</primary></indexterm>QObject::setProperty(char const*, QVariant const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::property(char const*) const</primary></indexterm>QObject::property(char const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QCustomEvent*)</primary></indexterm>QObject::customEvent(QCustomEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::checkConnectArgs(char const*, QObject const*, char const*)</primary></indexterm>QObject::checkConnectArgs(char const*, QObject const*, char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDragObject::setPixmap(QPixmap)</primary></indexterm>QDragObject::setPixmap(QPixmap)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDragObject::setPixmap(QPixmap, QPoint const&)</primary></indexterm>QDragObject::setPixmap(QPixmap, QPoint const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDragObject::drag(QDragObject::DragMode)</primary></indexterm>QDragObject::drag(QDragObject::DragMode)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QIconDrag::format(int) const</primary></indexterm>QIconDrag::format(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QIconDrag::encodedData(char const*) const</primary></indexterm>QIconDrag::encodedData(char const*) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--classdata-->
<TABLE id="cls-57609-1">
<TITLE>Secondary vtable for QIconDrag</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>-80</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QIconDrag</primary></indexterm>typeinfo for QIconDrag</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QIconDrag::~QIconDrag()</primary></indexterm>non-virtual thunk to QIconDrag::~QIconDrag()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QIconDrag::~QIconDrag()</primary></indexterm>non-virtual thunk to QIconDrag::~QIconDrag()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QIconDrag::format(int) const</primary></indexterm>non-virtual thunk to QIconDrag::format(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMimeSource::provides(char const*) const</primary></indexterm>QMimeSource::provides(char const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QIconDrag::encodedData(char const*) const</primary></indexterm>non-virtual thunk to QIconDrag::encodedData(char const*) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QIconDrag  class
is described by <XREF LINKEND="rtti-59217">
</PARA>
<!--classdata-->
<TABLE ID="rtti-59217">
<TITLE>typeinfo for QIconDrag</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QIconDrag</primary></indexterm>typeinfo name for QIconDrag</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QDragObject</primary></indexterm>typeinfo for QDragObject</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QUriDrag</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QUriDrag class
is described by <XREF LINKEND="cls-54440-0">
</PARA>
<!--classdata-->
<TABLE id="cls-54440-0">
<TITLE>Primary vtable for QUriDrag</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QUriDrag</primary></indexterm>typeinfo for QUriDrag</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QUriDrag::metaObject() const</primary></indexterm>NULL or QUriDrag::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QUriDrag::className() const</primary></indexterm>QUriDrag::className() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QUriDrag::qt_cast(char const*)</primary></indexterm>QUriDrag::qt_cast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QUriDrag::qt_invoke(int, QUObject*)</primary></indexterm>QUriDrag::qt_invoke(int, QUObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QUriDrag::qt_emit(int, QUObject*)</primary></indexterm>QUriDrag::qt_emit(int, QUObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QUriDrag::qt_property(int, int, QVariant*)</primary></indexterm>QUriDrag::qt_property(int, int, QVariant*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QUriDrag::~QUriDrag()</primary></indexterm>QUriDrag::~QUriDrag()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QUriDrag::~QUriDrag()</primary></indexterm>QUriDrag::~QUriDrag()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::event(QEvent*)</primary></indexterm>QObject::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::eventFilter(QObject*, QEvent*)</primary></indexterm>QObject::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::setName(char const*)</primary></indexterm>QObject::setName(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::insertChild(QObject*)</primary></indexterm>QObject::insertChild(QObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::removeChild(QObject*)</primary></indexterm>QObject::removeChild(QObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::setProperty(char const*, QVariant const&)</primary></indexterm>QObject::setProperty(char const*, QVariant const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::property(char const*) const</primary></indexterm>QObject::property(char const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QCustomEvent*)</primary></indexterm>QObject::customEvent(QCustomEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::checkConnectArgs(char const*, QObject const*, char const*)</primary></indexterm>QObject::checkConnectArgs(char const*, QObject const*, char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDragObject::setPixmap(QPixmap)</primary></indexterm>QDragObject::setPixmap(QPixmap)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDragObject::setPixmap(QPixmap, QPoint const&)</primary></indexterm>QDragObject::setPixmap(QPixmap, QPoint const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDragObject::drag(QDragObject::DragMode)</primary></indexterm>QDragObject::drag(QDragObject::DragMode)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStoredDrag::setEncodedData(QMemArray&lt;char&gt; const&)</primary></indexterm>QStoredDrag::setEncodedData(QMemArray&lt;char&gt; const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStoredDrag::format(int) const</primary></indexterm>QStoredDrag::format(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStoredDrag::encodedData(char const*) const</primary></indexterm>QStoredDrag::encodedData(char const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QUriDrag::setUris(QStrList)</primary></indexterm>QUriDrag::setUris(QStrList)</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--classdata-->
<TABLE id="cls-54440-1">
<TITLE>Secondary vtable for QUriDrag</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>-80</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QUriDrag</primary></indexterm>typeinfo for QUriDrag</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QUriDrag::~QUriDrag()</primary></indexterm>non-virtual thunk to QUriDrag::~QUriDrag()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QUriDrag::~QUriDrag()</primary></indexterm>non-virtual thunk to QUriDrag::~QUriDrag()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QStoredDrag::format(int) const</primary></indexterm>non-virtual thunk to QStoredDrag::format(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMimeSource::provides(char const*) const</primary></indexterm>QMimeSource::provides(char const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QStoredDrag::encodedData(char const*) const</primary></indexterm>non-virtual thunk to QStoredDrag::encodedData(char const*) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QUriDrag  class
is described by <XREF LINKEND="rtti-60641">
</PARA>
<!--classdata-->
<TABLE ID="rtti-60641">
<TITLE>typeinfo for QUriDrag</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QUriDrag</primary></indexterm>typeinfo name for QUriDrag</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QStoredDrag</primary></indexterm>typeinfo for QStoredDrag</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QDropSite</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QDropSite class
is described in the generic part of this specification.
</PARA>
<PARA>
The Run Time Type Information for the QDropSite  class
is described by <XREF LINKEND="rtti-56835">
</PARA>
<!--classdata-->
<TABLE ID="rtti-56835">
<TITLE>typeinfo for QDropSite</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__class_type_info</primary></indexterm>vtable for __cxxabiv1::__class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QDropSite</primary></indexterm>typeinfo name for QDropSite</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QStoredDrag</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QStoredDrag class
is described by <XREF LINKEND="cls-50760-0">
</PARA>
<!--classdata-->
<TABLE id="cls-50760-0">
<TITLE>Primary vtable for QStoredDrag</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QStoredDrag</primary></indexterm>typeinfo for QStoredDrag</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStoredDrag::metaObject() const</primary></indexterm>NULL or QStoredDrag::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStoredDrag::className() const</primary></indexterm>QStoredDrag::className() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStoredDrag::qt_cast(char const*)</primary></indexterm>QStoredDrag::qt_cast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStoredDrag::qt_invoke(int, QUObject*)</primary></indexterm>QStoredDrag::qt_invoke(int, QUObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStoredDrag::qt_emit(int, QUObject*)</primary></indexterm>QStoredDrag::qt_emit(int, QUObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStoredDrag::qt_property(int, int, QVariant*)</primary></indexterm>QStoredDrag::qt_property(int, int, QVariant*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStoredDrag::~QStoredDrag()</primary></indexterm>QStoredDrag::~QStoredDrag()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStoredDrag::~QStoredDrag()</primary></indexterm>QStoredDrag::~QStoredDrag()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::event(QEvent*)</primary></indexterm>QObject::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::eventFilter(QObject*, QEvent*)</primary></indexterm>QObject::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::setName(char const*)</primary></indexterm>QObject::setName(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::insertChild(QObject*)</primary></indexterm>QObject::insertChild(QObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::removeChild(QObject*)</primary></indexterm>QObject::removeChild(QObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::setProperty(char const*, QVariant const&)</primary></indexterm>QObject::setProperty(char const*, QVariant const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::property(char const*) const</primary></indexterm>QObject::property(char const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QCustomEvent*)</primary></indexterm>QObject::customEvent(QCustomEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::checkConnectArgs(char const*, QObject const*, char const*)</primary></indexterm>QObject::checkConnectArgs(char const*, QObject const*, char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDragObject::setPixmap(QPixmap)</primary></indexterm>QDragObject::setPixmap(QPixmap)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDragObject::setPixmap(QPixmap, QPoint const&)</primary></indexterm>QDragObject::setPixmap(QPixmap, QPoint const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDragObject::drag(QDragObject::DragMode)</primary></indexterm>QDragObject::drag(QDragObject::DragMode)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStoredDrag::setEncodedData(QMemArray&lt;char&gt; const&)</primary></indexterm>QStoredDrag::setEncodedData(QMemArray&lt;char&gt; const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStoredDrag::format(int) const</primary></indexterm>QStoredDrag::format(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStoredDrag::encodedData(char const*) const</primary></indexterm>QStoredDrag::encodedData(char const*) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--classdata-->
<TABLE id="cls-50760-1">
<TITLE>Secondary vtable for QStoredDrag</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>-80</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QStoredDrag</primary></indexterm>typeinfo for QStoredDrag</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QStoredDrag::~QStoredDrag()</primary></indexterm>non-virtual thunk to QStoredDrag::~QStoredDrag()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QStoredDrag::~QStoredDrag()</primary></indexterm>non-virtual thunk to QStoredDrag::~QStoredDrag()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QStoredDrag::format(int) const</primary></indexterm>non-virtual thunk to QStoredDrag::format(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMimeSource::provides(char const*) const</primary></indexterm>QMimeSource::provides(char const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QStoredDrag::encodedData(char const*) const</primary></indexterm>non-virtual thunk to QStoredDrag::encodedData(char const*) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QStoredDrag  class
is described by <XREF LINKEND="rtti-51651">
</PARA>
<!--classdata-->
<TABLE ID="rtti-51651">
<TITLE>typeinfo for QStoredDrag</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QStoredDrag</primary></indexterm>typeinfo name for QStoredDrag</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QDragObject</primary></indexterm>typeinfo for QDragObject</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QTextDrag</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QTextDrag class
is described by <XREF LINKEND="cls-57961-0">
</PARA>
<!--classdata-->
<TABLE id="cls-57961-0">
<TITLE>Primary vtable for QTextDrag</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QTextDrag</primary></indexterm>typeinfo for QTextDrag</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextDrag::metaObject() const</primary></indexterm>NULL or QTextDrag::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextDrag::className() const</primary></indexterm>QTextDrag::className() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextDrag::qt_cast(char const*)</primary></indexterm>QTextDrag::qt_cast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextDrag::qt_invoke(int, QUObject*)</primary></indexterm>QTextDrag::qt_invoke(int, QUObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextDrag::qt_emit(int, QUObject*)</primary></indexterm>QTextDrag::qt_emit(int, QUObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextDrag::qt_property(int, int, QVariant*)</primary></indexterm>QTextDrag::qt_property(int, int, QVariant*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextDrag::~QTextDrag()</primary></indexterm>QTextDrag::~QTextDrag()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextDrag::~QTextDrag()</primary></indexterm>QTextDrag::~QTextDrag()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::event(QEvent*)</primary></indexterm>QObject::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::eventFilter(QObject*, QEvent*)</primary></indexterm>QObject::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::setName(char const*)</primary></indexterm>QObject::setName(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::insertChild(QObject*)</primary></indexterm>QObject::insertChild(QObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::removeChild(QObject*)</primary></indexterm>QObject::removeChild(QObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::setProperty(char const*, QVariant const&)</primary></indexterm>QObject::setProperty(char const*, QVariant const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::property(char const*) const</primary></indexterm>QObject::property(char const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QCustomEvent*)</primary></indexterm>QObject::customEvent(QCustomEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::checkConnectArgs(char const*, QObject const*, char const*)</primary></indexterm>QObject::checkConnectArgs(char const*, QObject const*, char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDragObject::setPixmap(QPixmap)</primary></indexterm>QDragObject::setPixmap(QPixmap)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDragObject::setPixmap(QPixmap, QPoint const&)</primary></indexterm>QDragObject::setPixmap(QPixmap, QPoint const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDragObject::drag(QDragObject::DragMode)</primary></indexterm>QDragObject::drag(QDragObject::DragMode)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextDrag::setText(QString const&)</primary></indexterm>QTextDrag::setText(QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextDrag::setSubtype(QCString const&)</primary></indexterm>QTextDrag::setSubtype(QCString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextDrag::format(int) const</primary></indexterm>QTextDrag::format(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextDrag::encodedData(char const*) const</primary></indexterm>QTextDrag::encodedData(char const*) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--classdata-->
<TABLE id="cls-57961-1">
<TITLE>Secondary vtable for QTextDrag</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>-80</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QTextDrag</primary></indexterm>typeinfo for QTextDrag</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QTextDrag::~QTextDrag()</primary></indexterm>non-virtual thunk to QTextDrag::~QTextDrag()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QTextDrag::~QTextDrag()</primary></indexterm>non-virtual thunk to QTextDrag::~QTextDrag()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QTextDrag::format(int) const</primary></indexterm>non-virtual thunk to QTextDrag::format(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMimeSource::provides(char const*) const</primary></indexterm>QMimeSource::provides(char const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QTextDrag::encodedData(char const*) const</primary></indexterm>non-virtual thunk to QTextDrag::encodedData(char const*) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QTextDrag  class
is described by <XREF LINKEND="rtti-56313">
</PARA>
<!--classdata-->
<TABLE ID="rtti-56313">
<TITLE>typeinfo for QTextDrag</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QTextDrag</primary></indexterm>typeinfo name for QTextDrag</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QDragObject</primary></indexterm>typeinfo for QDragObject</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QDragEnterEvent</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QDragEnterEvent class
is described by <XREF LINKEND="cls-60010-0">
</PARA>
<!--classdata-->
<TABLE id="cls-60010-0">
<TITLE>Primary vtable for QDragEnterEvent</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QDragEnterEvent</primary></indexterm>typeinfo for QDragEnterEvent</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDragEnterEvent::~QDragEnterEvent()</primary></indexterm>NULL or QDragEnterEvent::~QDragEnterEvent()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDragEnterEvent::~QDragEnterEvent()</primary></indexterm>NULL or QDragEnterEvent::~QDragEnterEvent()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDropEvent::format(int) const</primary></indexterm>QDropEvent::format(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDropEvent::encodedData(char const*) const</primary></indexterm>QDropEvent::encodedData(char const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDropEvent::provides(char const*) const</primary></indexterm>QDropEvent::provides(char const*) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--classdata-->
<TABLE id="cls-60010-1">
<TITLE>Secondary vtable for QDragEnterEvent</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>-16</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QDragEnterEvent</primary></indexterm>typeinfo for QDragEnterEvent</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QDragEnterEvent::~QDragEnterEvent()</primary></indexterm>non-virtual thunk to QDragEnterEvent::~QDragEnterEvent()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QDragEnterEvent::~QDragEnterEvent()</primary></indexterm>non-virtual thunk to QDragEnterEvent::~QDragEnterEvent()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QDropEvent::format(int) const</primary></indexterm>non-virtual thunk to QDropEvent::format(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QDropEvent::provides(char const*) const</primary></indexterm>non-virtual thunk to QDropEvent::provides(char const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QDropEvent::encodedData(char const*) const</primary></indexterm>non-virtual thunk to QDropEvent::encodedData(char const*) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QDragEnterEvent  class
is described by <XREF LINKEND="rtti-55049">
</PARA>
<!--classdata-->
<TABLE ID="rtti-55049">
<TITLE>typeinfo for QDragEnterEvent</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QDragEnterEvent</primary></indexterm>typeinfo name for QDragEnterEvent</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QDragMoveEvent</primary></indexterm>typeinfo for QDragMoveEvent</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QDragMoveEvent</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QDragMoveEvent class
is described by <XREF LINKEND="cls-50912-0">
</PARA>
<!--classdata-->
<TABLE id="cls-50912-0">
<TITLE>Primary vtable for QDragMoveEvent</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QDragMoveEvent</primary></indexterm>typeinfo for QDragMoveEvent</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDragMoveEvent::~QDragMoveEvent()</primary></indexterm>NULL or QDragMoveEvent::~QDragMoveEvent()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDragMoveEvent::~QDragMoveEvent()</primary></indexterm>NULL or QDragMoveEvent::~QDragMoveEvent()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDropEvent::format(int) const</primary></indexterm>QDropEvent::format(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDropEvent::encodedData(char const*) const</primary></indexterm>QDropEvent::encodedData(char const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDropEvent::provides(char const*) const</primary></indexterm>QDropEvent::provides(char const*) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--classdata-->
<TABLE id="cls-50912-1">
<TITLE>Secondary vtable for QDragMoveEvent</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>-16</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QDragMoveEvent</primary></indexterm>typeinfo for QDragMoveEvent</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QDragMoveEvent::~QDragMoveEvent()</primary></indexterm>non-virtual thunk to QDragMoveEvent::~QDragMoveEvent()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QDragMoveEvent::~QDragMoveEvent()</primary></indexterm>non-virtual thunk to QDragMoveEvent::~QDragMoveEvent()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QDropEvent::format(int) const</primary></indexterm>non-virtual thunk to QDropEvent::format(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QDropEvent::provides(char const*) const</primary></indexterm>non-virtual thunk to QDropEvent::provides(char const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QDropEvent::encodedData(char const*) const</primary></indexterm>non-virtual thunk to QDropEvent::encodedData(char const*) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QDragMoveEvent  class
is described by <XREF LINKEND="rtti-57191">
</PARA>
<!--classdata-->
<TABLE ID="rtti-57191">
<TITLE>typeinfo for QDragMoveEvent</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QDragMoveEvent</primary></indexterm>typeinfo name for QDragMoveEvent</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QDropEvent</primary></indexterm>typeinfo for QDropEvent</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QDropEvent</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QDropEvent class
is described by <XREF LINKEND="cls-54433-0">
</PARA>
<!--classdata-->
<TABLE id="cls-54433-0">
<TITLE>Primary vtable for QDropEvent</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QDropEvent</primary></indexterm>typeinfo for QDropEvent</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDropEvent::~QDropEvent()</primary></indexterm>NULL or QDropEvent::~QDropEvent()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDropEvent::~QDropEvent()</primary></indexterm>NULL or QDropEvent::~QDropEvent()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDropEvent::format(int) const</primary></indexterm>QDropEvent::format(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDropEvent::encodedData(char const*) const</primary></indexterm>QDropEvent::encodedData(char const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDropEvent::provides(char const*) const</primary></indexterm>QDropEvent::provides(char const*) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--classdata-->
<TABLE id="cls-54433-1">
<TITLE>Secondary vtable for QDropEvent</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>-16</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QDropEvent</primary></indexterm>typeinfo for QDropEvent</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QDropEvent::~QDropEvent()</primary></indexterm>non-virtual thunk to QDropEvent::~QDropEvent()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QDropEvent::~QDropEvent()</primary></indexterm>non-virtual thunk to QDropEvent::~QDropEvent()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QDropEvent::format(int) const</primary></indexterm>non-virtual thunk to QDropEvent::format(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QDropEvent::provides(char const*) const</primary></indexterm>non-virtual thunk to QDropEvent::provides(char const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QDropEvent::encodedData(char const*) const</primary></indexterm>non-virtual thunk to QDropEvent::encodedData(char const*) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QDropEvent  class
is described by <XREF LINKEND="rtti-59301">
</PARA>
<!--classdata-->
<TABLE ID="rtti-59301">
<TITLE>typeinfo for QDropEvent</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__vmi_class_type_info</primary></indexterm>vtable for __cxxabiv1::__vmi_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QDropEvent</primary></indexterm>typeinfo name for QDropEvent</ENTRY>
</ROW>
<ROW>
<ENTRY>flags:</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QEvent</primary></indexterm>typeinfo for QEvent</ENTRY>
<ENTRY>2</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QMimeSource</primary></indexterm>typeinfo for QMimeSource</ENTRY>
<ENTRY>3074</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QDragObject</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QDragObject class
is described by <XREF LINKEND="cls-56406-0">
</PARA>
<!--classdata-->
<TABLE id="cls-56406-0">
<TITLE>Primary vtable for QDragObject</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QDragObject</primary></indexterm>typeinfo for QDragObject</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDragObject::metaObject() const</primary></indexterm>NULL or QDragObject::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDragObject::className() const</primary></indexterm>QDragObject::className() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDragObject::qt_cast(char const*)</primary></indexterm>QDragObject::qt_cast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDragObject::qt_invoke(int, QUObject*)</primary></indexterm>QDragObject::qt_invoke(int, QUObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDragObject::qt_emit(int, QUObject*)</primary></indexterm>QDragObject::qt_emit(int, QUObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDragObject::qt_property(int, int, QVariant*)</primary></indexterm>QDragObject::qt_property(int, int, QVariant*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDragObject::~QDragObject()</primary></indexterm>QDragObject::~QDragObject()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDragObject::~QDragObject()</primary></indexterm>QDragObject::~QDragObject()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::event(QEvent*)</primary></indexterm>QObject::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::eventFilter(QObject*, QEvent*)</primary></indexterm>QObject::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::setName(char const*)</primary></indexterm>QObject::setName(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::insertChild(QObject*)</primary></indexterm>QObject::insertChild(QObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::removeChild(QObject*)</primary></indexterm>QObject::removeChild(QObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::setProperty(char const*, QVariant const&)</primary></indexterm>QObject::setProperty(char const*, QVariant const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::property(char const*) const</primary></indexterm>QObject::property(char const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QCustomEvent*)</primary></indexterm>QObject::customEvent(QCustomEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::checkConnectArgs(char const*, QObject const*, char const*)</primary></indexterm>QObject::checkConnectArgs(char const*, QObject const*, char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDragObject::setPixmap(QPixmap)</primary></indexterm>QDragObject::setPixmap(QPixmap)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDragObject::setPixmap(QPixmap, QPoint const&)</primary></indexterm>QDragObject::setPixmap(QPixmap, QPoint const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDragObject::drag(QDragObject::DragMode)</primary></indexterm>QDragObject::drag(QDragObject::DragMode)</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--classdata-->
<TABLE id="cls-56406-1">
<TITLE>Secondary vtable for QDragObject</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>-80</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QDragObject</primary></indexterm>typeinfo for QDragObject</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QDragObject::~QDragObject()</primary></indexterm>non-virtual thunk to QDragObject::~QDragObject()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QDragObject::~QDragObject()</primary></indexterm>non-virtual thunk to QDragObject::~QDragObject()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMimeSource::provides(char const*) const</primary></indexterm>QMimeSource::provides(char const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QDragObject  class
is described by <XREF LINKEND="rtti-55492">
</PARA>
<!--classdata-->
<TABLE ID="rtti-55492">
<TITLE>typeinfo for QDragObject</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__vmi_class_type_info</primary></indexterm>vtable for __cxxabiv1::__vmi_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QDragObject</primary></indexterm>typeinfo name for QDragObject</ENTRY>
</ROW>
<ROW>
<ENTRY>flags:</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QObject</primary></indexterm>typeinfo for QObject</ENTRY>
<ENTRY>2</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QMimeSource</primary></indexterm>typeinfo for QMimeSource</ENTRY>
<ENTRY>10242</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QIconDragItem</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QIconDragItem class
is described in the generic part of this specification.
</PARA>
<PARA>
The Run Time Type Information for the QIconDragItem  class
is described by <XREF LINKEND="rtti-58347">
</PARA>
<!--classdata-->
<TABLE ID="rtti-58347">
<TITLE>typeinfo for QIconDragItem</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__class_type_info</primary></indexterm>vtable for __cxxabiv1::__class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QIconDragItem</primary></indexterm>typeinfo name for QIconDragItem</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Interfaces for Qt3 Drag and Drop</TITLE>
<PARA>
An LSB conforming implementation shall provide the architecture specific functions
for Qt3 Drag and Drop specified in <XREF linkend="tbl-libqt-mt-1-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<TABLE id="tbl-libqt-mt-1-ints">
<TITLE>libqt-mt - Qt3 Drag and Drop Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>_ZThn16_NK10QDropEvent11encodedDataEPKc</primary></indexterm>_ZThn16_NK10QDropEvent11encodedDataEPKc <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn16_NK10QDropEvent6formatEi</primary></indexterm>_ZThn16_NK10QDropEvent6formatEi <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn16_NK10QDropEvent8providesEPKc</primary></indexterm>_ZThn16_NK10QDropEvent8providesEPKc <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn80_N10QImageDragD0Ev</primary></indexterm>_ZThn80_N10QImageDragD0Ev <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn80_N10QImageDragD1Ev</primary></indexterm>_ZThn80_N10QImageDragD1Ev <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn80_N11QDragObjectD0Ev</primary></indexterm>_ZThn80_N11QDragObjectD0Ev <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn80_N11QDragObjectD1Ev</primary></indexterm>_ZThn80_N11QDragObjectD1Ev <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn80_N11QStoredDragD0Ev</primary></indexterm>_ZThn80_N11QStoredDragD0Ev <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn80_N11QStoredDragD1Ev</primary></indexterm>_ZThn80_N11QStoredDragD1Ev <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn80_N8QUriDragD0Ev</primary></indexterm>_ZThn80_N8QUriDragD0Ev <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn80_N8QUriDragD1Ev</primary></indexterm>_ZThn80_N8QUriDragD1Ev <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn80_N9QIconDragD0Ev</primary></indexterm>_ZThn80_N9QIconDragD0Ev <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn80_N9QIconDragD1Ev</primary></indexterm>_ZThn80_N9QIconDragD1Ev <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn80_N9QTextDragD0Ev</primary></indexterm>_ZThn80_N9QTextDragD0Ev <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn80_N9QTextDragD1Ev</primary></indexterm>_ZThn80_N9QTextDragD1Ev <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn80_NK10QImageDrag11encodedDataEPKc</primary></indexterm>_ZThn80_NK10QImageDrag11encodedDataEPKc <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn80_NK10QImageDrag6formatEi</primary></indexterm>_ZThn80_NK10QImageDrag6formatEi <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn80_NK11QStoredDrag11encodedDataEPKc</primary></indexterm>_ZThn80_NK11QStoredDrag11encodedDataEPKc <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn80_NK11QStoredDrag6formatEi</primary></indexterm>_ZThn80_NK11QStoredDrag6formatEi <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn80_NK9QIconDrag11encodedDataEPKc</primary></indexterm>_ZThn80_NK9QIconDrag11encodedDataEPKc <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn80_NK9QIconDrag6formatEi</primary></indexterm>_ZThn80_NK9QIconDrag6formatEi <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn80_NK9QTextDrag11encodedDataEPKc</primary></indexterm>_ZThn80_NK9QTextDrag11encodedDataEPKc <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn80_NK9QTextDrag6formatEi</primary></indexterm>_ZThn80_NK9QTextDrag6formatEi <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
<ENTRY></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>
</SECT2>
<!-- debug: database interface name Qt3 Events -->
<SECT2>
<!--libgroup-->
<TITLE>Qt3 Events</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Class data for QContextMenuEvent</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QContextMenuEvent class
is described in the generic part of this specification.
</PARA>
<PARA>
The Run Time Type Information for the QContextMenuEvent  class
is described by <XREF LINKEND="rtti-54819">
</PARA>
<!--classdata-->
<TABLE ID="rtti-54819">
<TITLE>typeinfo for QContextMenuEvent</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QContextMenuEvent</primary></indexterm>typeinfo name for QContextMenuEvent</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QEvent</primary></indexterm>typeinfo for QEvent</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QIMEvent</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QIMEvent class
is described in the generic part of this specification.
</PARA>
<PARA>
The Run Time Type Information for the QIMEvent  class
is described by <XREF LINKEND="rtti-59961">
</PARA>
<!--classdata-->
<TABLE ID="rtti-59961">
<TITLE>typeinfo for QIMEvent</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QIMEvent</primary></indexterm>typeinfo name for QIMEvent</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QEvent</primary></indexterm>typeinfo for QEvent</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QTimerEvent</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QTimerEvent class
is described in the generic part of this specification.
</PARA>
<PARA>
The Run Time Type Information for the QTimerEvent  class
is described by <XREF LINKEND="rtti-49406">
</PARA>
<!--classdata-->
<TABLE ID="rtti-49406">
<TITLE>typeinfo for QTimerEvent</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QTimerEvent</primary></indexterm>typeinfo name for QTimerEvent</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QEvent</primary></indexterm>typeinfo for QEvent</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QKeyEvent</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QKeyEvent class
is described in the generic part of this specification.
</PARA>
<PARA>
The Run Time Type Information for the QKeyEvent  class
is described by <XREF LINKEND="rtti-56359">
</PARA>
<!--classdata-->
<TABLE ID="rtti-56359">
<TITLE>typeinfo for QKeyEvent</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QKeyEvent</primary></indexterm>typeinfo name for QKeyEvent</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QEvent</primary></indexterm>typeinfo for QEvent</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QCustomEvent</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QCustomEvent class
is described in the generic part of this specification.
</PARA>
<PARA>
The Run Time Type Information for the QCustomEvent  class
is described by <XREF LINKEND="rtti-48882">
</PARA>
<!--classdata-->
<TABLE ID="rtti-48882">
<TITLE>typeinfo for QCustomEvent</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QCustomEvent</primary></indexterm>typeinfo name for QCustomEvent</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QEvent</primary></indexterm>typeinfo for QEvent</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QEventLoop</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QEventLoop class
is described in the generic part of this specification.
</PARA>
<PARA>
The Run Time Type Information for the QEventLoop  class
is described by <XREF LINKEND="rtti-53080">
</PARA>
<!--classdata-->
<TABLE ID="rtti-53080">
<TITLE>typeinfo for QEventLoop</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QEventLoop</primary></indexterm>typeinfo name for QEventLoop</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QObject</primary></indexterm>typeinfo for QObject</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QHideEvent</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QHideEvent class
is described in the generic part of this specification.
</PARA>
<PARA>
The Run Time Type Information for the QHideEvent  class
is described by <XREF LINKEND="rtti-60312">
</PARA>
<!--classdata-->
<TABLE ID="rtti-60312">
<TITLE>typeinfo for QHideEvent</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QHideEvent</primary></indexterm>typeinfo name for QHideEvent</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QEvent</primary></indexterm>typeinfo for QEvent</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QResizeEvent</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QResizeEvent class
is described in the generic part of this specification.
</PARA>
<PARA>
The Run Time Type Information for the QResizeEvent  class
is described by <XREF LINKEND="rtti-50356">
</PARA>
<!--classdata-->
<TABLE ID="rtti-50356">
<TITLE>typeinfo for QResizeEvent</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QResizeEvent</primary></indexterm>typeinfo name for QResizeEvent</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QEvent</primary></indexterm>typeinfo for QEvent</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QTabletEvent</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QTabletEvent class
is described in the generic part of this specification.
</PARA>
<PARA>
The Run Time Type Information for the QTabletEvent  class
is described by <XREF LINKEND="rtti-53404">
</PARA>
<!--classdata-->
<TABLE ID="rtti-53404">
<TITLE>typeinfo for QTabletEvent</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QTabletEvent</primary></indexterm>typeinfo name for QTabletEvent</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QEvent</primary></indexterm>typeinfo for QEvent</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QFocusEvent</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QFocusEvent class
is described in the generic part of this specification.
</PARA>
<PARA>
The Run Time Type Information for the QFocusEvent  class
is described by <XREF LINKEND="rtti-49041">
</PARA>
<!--classdata-->
<TABLE ID="rtti-49041">
<TITLE>typeinfo for QFocusEvent</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QFocusEvent</primary></indexterm>typeinfo name for QFocusEvent</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QEvent</primary></indexterm>typeinfo for QEvent</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QMouseEvent</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QMouseEvent class
is described in the generic part of this specification.
</PARA>
<PARA>
The Run Time Type Information for the QMouseEvent  class
is described by <XREF LINKEND="rtti-53711">
</PARA>
<!--classdata-->
<TABLE ID="rtti-53711">
<TITLE>typeinfo for QMouseEvent</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QMouseEvent</primary></indexterm>typeinfo name for QMouseEvent</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QEvent</primary></indexterm>typeinfo for QEvent</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QChildEvent</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QChildEvent class
is described in the generic part of this specification.
</PARA>
<PARA>
The Run Time Type Information for the QChildEvent  class
is described by <XREF LINKEND="rtti-59659">
</PARA>
<!--classdata-->
<TABLE ID="rtti-59659">
<TITLE>typeinfo for QChildEvent</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QChildEvent</primary></indexterm>typeinfo name for QChildEvent</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QEvent</primary></indexterm>typeinfo for QEvent</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QEvent</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QEvent class
is described in the generic part of this specification.
</PARA>
<PARA>
The Run Time Type Information for the QEvent  class
is described by <XREF LINKEND="rtti-59456">
</PARA>
<!--classdata-->
<TABLE ID="rtti-59456">
<TITLE>typeinfo for QEvent</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QEvent</primary></indexterm>typeinfo name for QEvent</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for Qt</primary></indexterm>typeinfo for Qt</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QIMComposeEvent</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QIMComposeEvent class
is described in the generic part of this specification.
</PARA>
<PARA>
The Run Time Type Information for the QIMComposeEvent  class
is described by <XREF LINKEND="rtti-56486">
</PARA>
<!--classdata-->
<TABLE ID="rtti-56486">
<TITLE>typeinfo for QIMComposeEvent</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QIMComposeEvent</primary></indexterm>typeinfo name for QIMComposeEvent</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QIMEvent</primary></indexterm>typeinfo for QIMEvent</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QShowEvent</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QShowEvent class
is described in the generic part of this specification.
</PARA>
<PARA>
The Run Time Type Information for the QShowEvent  class
is described by <XREF LINKEND="rtti-54950">
</PARA>
<!--classdata-->
<TABLE ID="rtti-54950">
<TITLE>typeinfo for QShowEvent</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QShowEvent</primary></indexterm>typeinfo name for QShowEvent</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QEvent</primary></indexterm>typeinfo for QEvent</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QPaintEvent</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QPaintEvent class
is described in the generic part of this specification.
</PARA>
<PARA>
The Run Time Type Information for the QPaintEvent  class
is described by <XREF LINKEND="rtti-56289">
</PARA>
<!--classdata-->
<TABLE ID="rtti-56289">
<TITLE>typeinfo for QPaintEvent</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QPaintEvent</primary></indexterm>typeinfo name for QPaintEvent</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QEvent</primary></indexterm>typeinfo for QEvent</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QWheelEvent</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QWheelEvent class
is described in the generic part of this specification.
</PARA>
<PARA>
The Run Time Type Information for the QWheelEvent  class
is described by <XREF LINKEND="rtti-49074">
</PARA>
<!--classdata-->
<TABLE ID="rtti-49074">
<TITLE>typeinfo for QWheelEvent</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QWheelEvent</primary></indexterm>typeinfo name for QWheelEvent</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QEvent</primary></indexterm>typeinfo for QEvent</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QMoveEvent</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QMoveEvent class
is described in the generic part of this specification.
</PARA>
<PARA>
The Run Time Type Information for the QMoveEvent  class
is described by <XREF LINKEND="rtti-54961">
</PARA>
<!--classdata-->
<TABLE ID="rtti-54961">
<TITLE>typeinfo for QMoveEvent</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QMoveEvent</primary></indexterm>typeinfo name for QMoveEvent</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QEvent</primary></indexterm>typeinfo for QEvent</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QCloseEvent</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QCloseEvent class
is described in the generic part of this specification.
</PARA>
<PARA>
The Run Time Type Information for the QCloseEvent  class
is described by <XREF LINKEND="rtti-55481">
</PARA>
<!--classdata-->
<TABLE ID="rtti-55481">
<TITLE>typeinfo for QCloseEvent</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QCloseEvent</primary></indexterm>typeinfo name for QCloseEvent</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QEvent</primary></indexterm>typeinfo for QEvent</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Interfaces for Qt3 Events</TITLE>
<PARA>
No external functions are defined for libqt-mt - Qt3 Events
in this part of the specification. See also the generic specification.
</PARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Qt3 Internationalization -->
<SECT2>
<!--libgroup-->
<TITLE>Qt3 Internationalization</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Class data for QUtf8Codec</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QUtf8Codec class
is described in the generic part of this specification.
</PARA>
<PARA>
The Run Time Type Information for the QUtf8Codec  class
is described by <XREF LINKEND="rtti-58732">
</PARA>
<!--classdata-->
<TABLE ID="rtti-58732">
<TITLE>typeinfo for QUtf8Codec</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QUtf8Codec</primary></indexterm>typeinfo name for QUtf8Codec</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QTextCodec</primary></indexterm>typeinfo for QTextCodec</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QTranslator</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QTranslator class
is described in the generic part of this specification.
</PARA>
<PARA>
The Run Time Type Information for the QTranslator  class
is described by <XREF LINKEND="rtti-51424">
</PARA>
<!--classdata-->
<TABLE ID="rtti-51424">
<TITLE>typeinfo for QTranslator</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QTranslator</primary></indexterm>typeinfo name for QTranslator</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QObject</primary></indexterm>typeinfo for QObject</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QGb18030Codec</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QGb18030Codec class
is described in the generic part of this specification.
</PARA>
<PARA>
The Run Time Type Information for the QGb18030Codec  class
is described by <XREF LINKEND="rtti-55916">
</PARA>
<!--classdata-->
<TABLE ID="rtti-55916">
<TITLE>typeinfo for QGb18030Codec</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QGb18030Codec</primary></indexterm>typeinfo name for QGb18030Codec</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QTextCodec</primary></indexterm>typeinfo for QTextCodec</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QGbkCodec</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QGbkCodec class
is described in the generic part of this specification.
</PARA>
<PARA>
The Run Time Type Information for the QGbkCodec  class
is described by <XREF LINKEND="rtti-58557">
</PARA>
<!--classdata-->
<TABLE ID="rtti-58557">
<TITLE>typeinfo for QGbkCodec</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QGbkCodec</primary></indexterm>typeinfo name for QGbkCodec</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QGb18030Codec</primary></indexterm>typeinfo for QGb18030Codec</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QUtf16Codec</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QUtf16Codec class
is described in the generic part of this specification.
</PARA>
<PARA>
The Run Time Type Information for the QUtf16Codec  class
is described by <XREF LINKEND="rtti-59538">
</PARA>
<!--classdata-->
<TABLE ID="rtti-59538">
<TITLE>typeinfo for QUtf16Codec</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QUtf16Codec</primary></indexterm>typeinfo name for QUtf16Codec</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QTextCodec</primary></indexterm>typeinfo for QTextCodec</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QEucKrCodec</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QEucKrCodec class
is described in the generic part of this specification.
</PARA>
<PARA>
The Run Time Type Information for the QEucKrCodec  class
is described by <XREF LINKEND="rtti-51407">
</PARA>
<!--classdata-->
<TABLE ID="rtti-51407">
<TITLE>typeinfo for QEucKrCodec</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QEucKrCodec</primary></indexterm>typeinfo name for QEucKrCodec</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QTextCodec</primary></indexterm>typeinfo for QTextCodec</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QJisCodec</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QJisCodec class
is described in the generic part of this specification.
</PARA>
<PARA>
The Run Time Type Information for the QJisCodec  class
is described by <XREF LINKEND="rtti-51478">
</PARA>
<!--classdata-->
<TABLE ID="rtti-51478">
<TITLE>typeinfo for QJisCodec</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QJisCodec</primary></indexterm>typeinfo name for QJisCodec</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QTextCodec</primary></indexterm>typeinfo for QTextCodec</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QTextEncoder</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QTextEncoder class
is described in the generic part of this specification.
</PARA>
<PARA>
The Run Time Type Information for the QTextEncoder  class
is described by <XREF LINKEND="rtti-53657">
</PARA>
<!--classdata-->
<TABLE ID="rtti-53657">
<TITLE>typeinfo for QTextEncoder</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__class_type_info</primary></indexterm>vtable for __cxxabiv1::__class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QTextEncoder</primary></indexterm>typeinfo name for QTextEncoder</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QTsciiCodec</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QTsciiCodec class
is described in the generic part of this specification.
</PARA>
<PARA>
The Run Time Type Information for the QTsciiCodec  class
is described by <XREF LINKEND="rtti-60358">
</PARA>
<!--classdata-->
<TABLE ID="rtti-60358">
<TITLE>typeinfo for QTsciiCodec</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QTsciiCodec</primary></indexterm>typeinfo name for QTsciiCodec</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QTextCodec</primary></indexterm>typeinfo for QTextCodec</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QSjisCodec</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QSjisCodec class
is described in the generic part of this specification.
</PARA>
<PARA>
The Run Time Type Information for the QSjisCodec  class
is described by <XREF LINKEND="rtti-57225">
</PARA>
<!--classdata-->
<TABLE ID="rtti-57225">
<TITLE>typeinfo for QSjisCodec</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QSjisCodec</primary></indexterm>typeinfo name for QSjisCodec</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QTextCodec</primary></indexterm>typeinfo for QTextCodec</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QEucJpCodec</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QEucJpCodec class
is described in the generic part of this specification.
</PARA>
<PARA>
The Run Time Type Information for the QEucJpCodec  class
is described by <XREF LINKEND="rtti-49876">
</PARA>
<!--classdata-->
<TABLE ID="rtti-49876">
<TITLE>typeinfo for QEucJpCodec</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QEucJpCodec</primary></indexterm>typeinfo name for QEucJpCodec</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QTextCodec</primary></indexterm>typeinfo for QTextCodec</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QGb2312Codec</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QGb2312Codec class
is described in the generic part of this specification.
</PARA>
<PARA>
The Run Time Type Information for the QGb2312Codec  class
is described by <XREF LINKEND="rtti-59339">
</PARA>
<!--classdata-->
<TABLE ID="rtti-59339">
<TITLE>typeinfo for QGb2312Codec</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QGb2312Codec</primary></indexterm>typeinfo name for QGb2312Codec</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QGb18030Codec</primary></indexterm>typeinfo for QGb18030Codec</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QHebrewCodec</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QHebrewCodec class
is described in the generic part of this specification.
</PARA>
<PARA>
The Run Time Type Information for the QHebrewCodec  class
is described by <XREF LINKEND="rtti-58922">
</PARA>
<!--classdata-->
<TABLE ID="rtti-58922">
<TITLE>typeinfo for QHebrewCodec</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QHebrewCodec</primary></indexterm>typeinfo name for QHebrewCodec</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QTextCodec</primary></indexterm>typeinfo for QTextCodec</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QTextDecoder</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QTextDecoder class
is described in the generic part of this specification.
</PARA>
<PARA>
The Run Time Type Information for the QTextDecoder  class
is described by <XREF LINKEND="rtti-48802">
</PARA>
<!--classdata-->
<TABLE ID="rtti-48802">
<TITLE>typeinfo for QTextDecoder</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__class_type_info</primary></indexterm>vtable for __cxxabiv1::__class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QTextDecoder</primary></indexterm>typeinfo name for QTextDecoder</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QTextCodec</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QTextCodec class
is described in the generic part of this specification.
</PARA>
<PARA>
The Run Time Type Information for the QTextCodec  class
is described by <XREF LINKEND="rtti-56702">
</PARA>
<!--classdata-->
<TABLE ID="rtti-56702">
<TITLE>typeinfo for QTextCodec</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__class_type_info</primary></indexterm>vtable for __cxxabiv1::__class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QTextCodec</primary></indexterm>typeinfo name for QTextCodec</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QJpUnicodeConv</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QJpUnicodeConv class
is described in the generic part of this specification.
</PARA>
<PARA>
The Run Time Type Information for the QJpUnicodeConv  class
is described by <XREF LINKEND="rtti-54740">
</PARA>
<!--classdata-->
<TABLE ID="rtti-54740">
<TITLE>typeinfo for QJpUnicodeConv</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__class_type_info</primary></indexterm>vtable for __cxxabiv1::__class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QJpUnicodeConv</primary></indexterm>typeinfo name for QJpUnicodeConv</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Interfaces for Qt3 Internationalization</TITLE>
<PARA>
No external functions are defined for libqt-mt - Qt3 Internationalization
in this part of the specification. See also the generic specification.
</PARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Qt3 Input/Output -->
<SECT2>
<!--libgroup-->
<TITLE>Qt3 Input/Output</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Class data for QDataSource</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QDataSource class
is described in the generic part of this specification.
</PARA>
<PARA>
The Run Time Type Information for the QDataSource  class
is described by <XREF LINKEND="rtti-60298">
</PARA>
<!--classdata-->
<TABLE ID="rtti-60298">
<TITLE>typeinfo for QDataSource</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QDataSource</primary></indexterm>typeinfo name for QDataSource</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QAsyncIO</primary></indexterm>typeinfo for QAsyncIO</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QProcess</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QProcess class
is described in the generic part of this specification.
</PARA>
<PARA>
The Run Time Type Information for the QProcess  class
is described by <XREF LINKEND="rtti-56781">
</PARA>
<!--classdata-->
<TABLE ID="rtti-56781">
<TITLE>typeinfo for QProcess</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QProcess</primary></indexterm>typeinfo name for QProcess</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QObject</primary></indexterm>typeinfo for QObject</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QDataPump</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QDataPump class
is described in the generic part of this specification.
</PARA>
<PARA>
The Run Time Type Information for the QDataPump  class
is described by <XREF LINKEND="rtti-55503">
</PARA>
<!--classdata-->
<TABLE ID="rtti-55503">
<TITLE>typeinfo for QDataPump</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QDataPump</primary></indexterm>typeinfo name for QDataPump</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QObject</primary></indexterm>typeinfo for QObject</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QFile</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QFile class
is described in the generic part of this specification.
</PARA>
<PARA>
The Run Time Type Information for the QFile  class
is described by <XREF LINKEND="rtti-55229">
</PARA>
<!--classdata-->
<TABLE ID="rtti-55229">
<TITLE>typeinfo for QFile</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QFile</primary></indexterm>typeinfo name for QFile</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QIODevice</primary></indexterm>typeinfo for QIODevice</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QBuffer</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QBuffer class
is described in the generic part of this specification.
</PARA>
<PARA>
The Run Time Type Information for the QBuffer  class
is described by <XREF LINKEND="rtti-51775">
</PARA>
<!--classdata-->
<TABLE ID="rtti-51775">
<TITLE>typeinfo for QBuffer</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QBuffer</primary></indexterm>typeinfo name for QBuffer</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QIODevice</primary></indexterm>typeinfo for QIODevice</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QClipboard</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QClipboard class
is described in the generic part of this specification.
</PARA>
<PARA>
The Run Time Type Information for the QClipboard  class
is described by <XREF LINKEND="rtti-50512">
</PARA>
<!--classdata-->
<TABLE ID="rtti-50512">
<TITLE>typeinfo for QClipboard</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QClipboard</primary></indexterm>typeinfo name for QClipboard</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QObject</primary></indexterm>typeinfo for QObject</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QAsyncIO</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QAsyncIO class
is described in the generic part of this specification.
</PARA>
<PARA>
The Run Time Type Information for the QAsyncIO  class
is described by <XREF LINKEND="rtti-52205">
</PARA>
<!--classdata-->
<TABLE ID="rtti-52205">
<TITLE>typeinfo for QAsyncIO</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__class_type_info</primary></indexterm>vtable for __cxxabiv1::__class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QAsyncIO</primary></indexterm>typeinfo name for QAsyncIO</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QSignal</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QSignal class
is described in the generic part of this specification.
</PARA>
<PARA>
The Run Time Type Information for the QSignal  class
is described by <XREF LINKEND="rtti-53038">
</PARA>
<!--classdata-->
<TABLE ID="rtti-53038">
<TITLE>typeinfo for QSignal</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QSignal</primary></indexterm>typeinfo name for QSignal</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QObject</primary></indexterm>typeinfo for QObject</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QDataSink</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QDataSink class
is described in the generic part of this specification.
</PARA>
<PARA>
The Run Time Type Information for the QDataSink  class
is described by <XREF LINKEND="rtti-50213">
</PARA>
<!--classdata-->
<TABLE ID="rtti-50213">
<TITLE>typeinfo for QDataSink</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QDataSink</primary></indexterm>typeinfo name for QDataSink</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QAsyncIO</primary></indexterm>typeinfo for QAsyncIO</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QDir</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QDir class
is described in the generic part of this specification.
</PARA>
<PARA>
The Run Time Type Information for the QDir  class
is described by <XREF LINKEND="rtti-55721">
</PARA>
<!--classdata-->
<TABLE ID="rtti-55721">
<TITLE>typeinfo for QDir</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__class_type_info</primary></indexterm>vtable for __cxxabiv1::__class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QDir</primary></indexterm>typeinfo name for QDir</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QTextOStream</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QTextOStream class
is described in the generic part of this specification.
</PARA>
<PARA>
The Run Time Type Information for the QTextOStream  class
is described by <XREF LINKEND="rtti-54873">
</PARA>
<!--classdata-->
<TABLE ID="rtti-54873">
<TITLE>typeinfo for QTextOStream</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QTextOStream</primary></indexterm>typeinfo name for QTextOStream</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QTextStream</primary></indexterm>typeinfo for QTextStream</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QTextStream</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QTextStream class
is described in the generic part of this specification.
</PARA>
<PARA>
The Run Time Type Information for the QTextStream  class
is described by <XREF LINKEND="rtti-52013">
</PARA>
<!--classdata-->
<TABLE ID="rtti-52013">
<TITLE>typeinfo for QTextStream</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__class_type_info</primary></indexterm>vtable for __cxxabiv1::__class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QTextStream</primary></indexterm>typeinfo name for QTextStream</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QSignalMapper</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QSignalMapper class
is described in the generic part of this specification.
</PARA>
<PARA>
The Run Time Type Information for the QSignalMapper  class
is described by <XREF LINKEND="rtti-59584">
</PARA>
<!--classdata-->
<TABLE ID="rtti-59584">
<TITLE>typeinfo for QSignalMapper</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QSignalMapper</primary></indexterm>typeinfo name for QSignalMapper</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QObject</primary></indexterm>typeinfo for QObject</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QIODeviceSource</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QIODeviceSource class
is described in the generic part of this specification.
</PARA>
<PARA>
The Run Time Type Information for the QIODeviceSource  class
is described by <XREF LINKEND="rtti-52402">
</PARA>
<!--classdata-->
<TABLE ID="rtti-52402">
<TITLE>typeinfo for QIODeviceSource</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QIODeviceSource</primary></indexterm>typeinfo name for QIODeviceSource</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QDataSource</primary></indexterm>typeinfo for QDataSource</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QIODevice</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QIODevice class
is described in the generic part of this specification.
</PARA>
<PARA>
The Run Time Type Information for the QIODevice  class
is described by <XREF LINKEND="rtti-56316">
</PARA>
<!--classdata-->
<TABLE ID="rtti-56316">
<TITLE>typeinfo for QIODevice</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__class_type_info</primary></indexterm>vtable for __cxxabiv1::__class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QIODevice</primary></indexterm>typeinfo name for QIODevice</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QDataStream</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QDataStream class
is described in the generic part of this specification.
</PARA>
<PARA>
The Run Time Type Information for the QDataStream  class
is described by <XREF LINKEND="rtti-48659">
</PARA>
<!--classdata-->
<TABLE ID="rtti-48659">
<TITLE>typeinfo for QDataStream</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__class_type_info</primary></indexterm>vtable for __cxxabiv1::__class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QDataStream</primary></indexterm>typeinfo name for QDataStream</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Interfaces for Qt3 Input/Output</TITLE>
<PARA>
No external functions are defined for libqt-mt - Qt3 Input/Output
in this part of the specification. See also the generic specification.
</PARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Qt3 Multimedia -->
<SECT2>
<!--libgroup-->
<TITLE>Qt3 Multimedia</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Class data for QImageFormat</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QImageFormat class
is described in the generic part of this specification.
</PARA>
<PARA>
The Run Time Type Information for the QImageFormat  class
is described by <XREF LINKEND="rtti-59159">
</PARA>
<!--classdata-->
<TABLE ID="rtti-59159">
<TITLE>typeinfo for QImageFormat</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__class_type_info</primary></indexterm>vtable for __cxxabiv1::__class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QImageFormat</primary></indexterm>typeinfo name for QImageFormat</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QSound</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QSound class
is described in the generic part of this specification.
</PARA>
<PARA>
The Run Time Type Information for the QSound  class
is described by <XREF LINKEND="rtti-52340">
</PARA>
<!--classdata-->
<TABLE ID="rtti-52340">
<TITLE>typeinfo for QSound</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QSound</primary></indexterm>typeinfo name for QSound</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QObject</primary></indexterm>typeinfo for QObject</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QImageConsumer</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QImageConsumer class
is described in the generic part of this specification.
</PARA>
<PARA>
The Run Time Type Information for the QImageConsumer  class
is described by <XREF LINKEND="rtti-52910">
</PARA>
<!--classdata-->
<TABLE ID="rtti-52910">
<TITLE>typeinfo for QImageConsumer</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__class_type_info</primary></indexterm>vtable for __cxxabiv1::__class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QImageConsumer</primary></indexterm>typeinfo name for QImageConsumer</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QImageFormatType</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QImageFormatType class
is described in the generic part of this specification.
</PARA>
<PARA>
The Run Time Type Information for the QImageFormatType  class
is described by <XREF LINKEND="rtti-48813">
</PARA>
<!--classdata-->
<TABLE ID="rtti-48813">
<TITLE>typeinfo for QImageFormatType</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__class_type_info</primary></indexterm>vtable for __cxxabiv1::__class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QImageFormatType</primary></indexterm>typeinfo name for QImageFormatType</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Interfaces for Qt3 Multimedia</TITLE>
<PARA>
No external functions are defined for libqt-mt - Qt3 Multimedia
in this part of the specification. See also the generic specification.
</PARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Qt3 Network -->
<SECT2>
<!--libgroup-->
<TITLE>Qt3 Network</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Class data for QMimeSourceFactory</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QMimeSourceFactory class
is described in the generic part of this specification.
</PARA>
<PARA>
The Run Time Type Information for the QMimeSourceFactory  class
is described by <XREF LINKEND="rtti-56981">
</PARA>
<!--classdata-->
<TABLE ID="rtti-56981">
<TITLE>typeinfo for QMimeSourceFactory</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__class_type_info</primary></indexterm>vtable for __cxxabiv1::__class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QMimeSourceFactory</primary></indexterm>typeinfo name for QMimeSourceFactory</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QUrlOperator</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QUrlOperator class
is described by <XREF LINKEND="cls-52818-0">
</PARA>
<!--classdata-->
<TABLE id="cls-52818-0">
<TITLE>Primary vtable for QUrlOperator</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QUrlOperator</primary></indexterm>typeinfo for QUrlOperator</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QUrlOperator::metaObject() const</primary></indexterm>NULL or QUrlOperator::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QUrlOperator::className() const</primary></indexterm>QUrlOperator::className() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QUrlOperator::qt_cast(char const*)</primary></indexterm>QUrlOperator::qt_cast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QUrlOperator::qt_invoke(int, QUObject*)</primary></indexterm>QUrlOperator::qt_invoke(int, QUObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QUrlOperator::qt_emit(int, QUObject*)</primary></indexterm>QUrlOperator::qt_emit(int, QUObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QUrlOperator::qt_property(int, int, QVariant*)</primary></indexterm>QUrlOperator::qt_property(int, int, QVariant*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QUrlOperator::~QUrlOperator()</primary></indexterm>QUrlOperator::~QUrlOperator()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QUrlOperator::~QUrlOperator()</primary></indexterm>QUrlOperator::~QUrlOperator()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::event(QEvent*)</primary></indexterm>QObject::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::eventFilter(QObject*, QEvent*)</primary></indexterm>QObject::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::setName(char const*)</primary></indexterm>QObject::setName(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::insertChild(QObject*)</primary></indexterm>QObject::insertChild(QObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::removeChild(QObject*)</primary></indexterm>QObject::removeChild(QObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::setProperty(char const*, QVariant const&)</primary></indexterm>QObject::setProperty(char const*, QVariant const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::property(char const*) const</primary></indexterm>QObject::property(char const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QCustomEvent*)</primary></indexterm>QObject::customEvent(QCustomEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::checkConnectArgs(char const*, QObject const*, char const*)</primary></indexterm>QObject::checkConnectArgs(char const*, QObject const*, char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QUrlOperator::setPath(QString const&)</primary></indexterm>QUrlOperator::setPath(QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QUrlOperator::cdUp()</primary></indexterm>QUrlOperator::cdUp()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QUrlOperator::listChildren()</primary></indexterm>QUrlOperator::listChildren()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QUrlOperator::mkdir(QString const&)</primary></indexterm>QUrlOperator::mkdir(QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QUrlOperator::remove(QString const&)</primary></indexterm>QUrlOperator::remove(QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QUrlOperator::rename(QString const&, QString const&)</primary></indexterm>QUrlOperator::rename(QString const&, QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QUrlOperator::get(QString const&)</primary></indexterm>QUrlOperator::get(QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QUrlOperator::put(QMemArray&lt;char&gt; const&, QString const&)</primary></indexterm>QUrlOperator::put(QMemArray&lt;char&gt; const&, QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QUrlOperator::copy(QString const&, QString const&, bool, bool)</primary></indexterm>QUrlOperator::copy(QString const&, QString const&, bool, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QUrlOperator::copy(QStringList const&, QString const&, bool)</primary></indexterm>QUrlOperator::copy(QStringList const&, QString const&, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QUrlOperator::isDir(bool*)</primary></indexterm>QUrlOperator::isDir(bool*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QUrlOperator::setNameFilter(QString const&)</primary></indexterm>QUrlOperator::setNameFilter(QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;33&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QUrlOperator::info(QString const&) const</primary></indexterm>QUrlOperator::info(QString const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;34&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QUrlOperator::stop()</primary></indexterm>QUrlOperator::stop()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;35&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QUrlOperator::reset()</primary></indexterm>QUrlOperator::reset()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;36&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QUrlOperator::parse(QString const&)</primary></indexterm>QUrlOperator::parse(QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;37&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QUrlOperator::checkValid()</primary></indexterm>QUrlOperator::checkValid()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;38&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QUrlOperator::clearEntries()</primary></indexterm>QUrlOperator::clearEntries()</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--classdata-->
<TABLE id="cls-52818-1">
<TITLE>Secondary vtable for QUrlOperator</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>-80</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QUrlOperator</primary></indexterm>typeinfo for QUrlOperator</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QUrlOperator::~QUrlOperator()</primary></indexterm>non-virtual thunk to QUrlOperator::~QUrlOperator()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QUrlOperator::~QUrlOperator()</primary></indexterm>non-virtual thunk to QUrlOperator::~QUrlOperator()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QUrl::setProtocol(QString const&)</primary></indexterm>QUrl::setProtocol(QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QUrl::setUser(QString const&)</primary></indexterm>QUrl::setUser(QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QUrl::setPassword(QString const&)</primary></indexterm>QUrl::setPassword(QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QUrl::setHost(QString const&)</primary></indexterm>QUrl::setHost(QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QUrl::setPort(int)</primary></indexterm>QUrl::setPort(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QUrlOperator::setPath(QString const&)</primary></indexterm>non-virtual thunk to QUrlOperator::setPath(QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QUrl::setEncodedPathAndQuery(QString const&)</primary></indexterm>QUrl::setEncodedPathAndQuery(QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QUrl::setQuery(QString const&)</primary></indexterm>QUrl::setQuery(QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QUrl::setRef(QString const&)</primary></indexterm>QUrl::setRef(QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QUrl::addPath(QString const&)</primary></indexterm>QUrl::addPath(QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QUrl::setFileName(QString const&)</primary></indexterm>QUrl::setFileName(QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QUrl::toString(bool, bool) const</primary></indexterm>QUrl::toString(bool, bool) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QUrlOperator::cdUp()</primary></indexterm>non-virtual thunk to QUrlOperator::cdUp()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QUrlOperator::reset()</primary></indexterm>non-virtual thunk to QUrlOperator::reset()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QUrlOperator::parse(QString const&)</primary></indexterm>non-virtual thunk to QUrlOperator::parse(QString const&)</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QUrlOperator  class
is described by <XREF LINKEND="rtti-55077">
</PARA>
<!--classdata-->
<TABLE ID="rtti-55077">
<TITLE>typeinfo for QUrlOperator</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__vmi_class_type_info</primary></indexterm>vtable for __cxxabiv1::__vmi_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QUrlOperator</primary></indexterm>typeinfo name for QUrlOperator</ENTRY>
</ROW>
<ROW>
<ENTRY>flags:</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QObject</primary></indexterm>typeinfo for QObject</ENTRY>
<ENTRY>2</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QUrl</primary></indexterm>typeinfo for QUrl</ENTRY>
<ENTRY>10242</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QSocket</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QSocket class
is described by <XREF LINKEND="cls-52591-0">
</PARA>
<!--classdata-->
<TABLE id="cls-52591-0">
<TITLE>Primary vtable for QSocket</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QSocket</primary></indexterm>typeinfo for QSocket</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSocket::metaObject() const</primary></indexterm>NULL or QSocket::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSocket::className() const</primary></indexterm>QSocket::className() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSocket::qt_cast(char const*)</primary></indexterm>QSocket::qt_cast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSocket::qt_invoke(int, QUObject*)</primary></indexterm>QSocket::qt_invoke(int, QUObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSocket::qt_emit(int, QUObject*)</primary></indexterm>QSocket::qt_emit(int, QUObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSocket::qt_property(int, int, QVariant*)</primary></indexterm>QSocket::qt_property(int, int, QVariant*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSocket::~QSocket()</primary></indexterm>QSocket::~QSocket()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSocket::~QSocket()</primary></indexterm>QSocket::~QSocket()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::event(QEvent*)</primary></indexterm>QObject::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::eventFilter(QObject*, QEvent*)</primary></indexterm>QObject::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::setName(char const*)</primary></indexterm>QObject::setName(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::insertChild(QObject*)</primary></indexterm>QObject::insertChild(QObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::removeChild(QObject*)</primary></indexterm>QObject::removeChild(QObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::setProperty(char const*, QVariant const&)</primary></indexterm>QObject::setProperty(char const*, QVariant const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::property(char const*) const</primary></indexterm>QObject::property(char const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QCustomEvent*)</primary></indexterm>QObject::customEvent(QCustomEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::checkConnectArgs(char const*, QObject const*, char const*)</primary></indexterm>QObject::checkConnectArgs(char const*, QObject const*, char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSocket::setSocket(int)</primary></indexterm>QSocket::setSocket(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSocket::setSocketDevice(QSocketDevice*)</primary></indexterm>QSocket::setSocketDevice(QSocketDevice*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSocket::connectToHost(QString const&, unsigned short)</primary></indexterm>QSocket::connectToHost(QString const&, unsigned short)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSocket::open(int)</primary></indexterm>QSocket::open(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSocket::close()</primary></indexterm>QSocket::close()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSocket::flush()</primary></indexterm>QSocket::flush()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSocket::size() const</primary></indexterm>QSocket::size() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSocket::at() const</primary></indexterm>QSocket::at() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSocket::at(unsigned long)</primary></indexterm>QSocket::at(unsigned long)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSocket::atEnd() const</primary></indexterm>QSocket::atEnd() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSocket::readBlock(char*, unsigned long)</primary></indexterm>QSocket::readBlock(char*, unsigned long)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSocket::writeBlock(char const*, unsigned long)</primary></indexterm>QSocket::writeBlock(char const*, unsigned long)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;33&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSocket::readLine(char*, unsigned long)</primary></indexterm>QSocket::readLine(char*, unsigned long)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;34&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSocket::getch()</primary></indexterm>QSocket::getch()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;35&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSocket::putch(int)</primary></indexterm>QSocket::putch(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;36&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSocket::ungetch(int)</primary></indexterm>QSocket::ungetch(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;37&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSocket::readLine()</primary></indexterm>QSocket::readLine()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;38&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSocket::sn_read(bool)</primary></indexterm>QSocket::sn_read(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;39&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSocket::sn_write()</primary></indexterm>QSocket::sn_write()</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--classdata-->
<TABLE id="cls-52591-1">
<TITLE>Secondary vtable for QSocket</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>-80</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QSocket</primary></indexterm>typeinfo for QSocket</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QSocket::~QSocket()</primary></indexterm>non-virtual thunk to QSocket::~QSocket()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QSocket::~QSocket()</primary></indexterm>non-virtual thunk to QSocket::~QSocket()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QSocket::open(int)</primary></indexterm>non-virtual thunk to QSocket::open(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QSocket::close()</primary></indexterm>non-virtual thunk to QSocket::close()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QSocket::flush()</primary></indexterm>non-virtual thunk to QSocket::flush()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QSocket::size() const</primary></indexterm>non-virtual thunk to QSocket::size() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QSocket::at() const</primary></indexterm>non-virtual thunk to QSocket::at() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QSocket::at(unsigned long)</primary></indexterm>non-virtual thunk to QSocket::at(unsigned long)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QSocket::atEnd() const</primary></indexterm>non-virtual thunk to QSocket::atEnd() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QSocket::readBlock(char*, unsigned long)</primary></indexterm>non-virtual thunk to QSocket::readBlock(char*, unsigned long)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QSocket::writeBlock(char const*, unsigned long)</primary></indexterm>non-virtual thunk to QSocket::writeBlock(char const*, unsigned long)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QSocket::readLine(char*, unsigned long)</primary></indexterm>non-virtual thunk to QSocket::readLine(char*, unsigned long)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QIODevice::readAll()</primary></indexterm>QIODevice::readAll()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QSocket::getch()</primary></indexterm>non-virtual thunk to QSocket::getch()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QSocket::putch(int)</primary></indexterm>non-virtual thunk to QSocket::putch(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QSocket::ungetch(int)</primary></indexterm>non-virtual thunk to QSocket::ungetch(int)</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QSocket  class
is described by <XREF LINKEND="rtti-59775">
</PARA>
<!--classdata-->
<TABLE ID="rtti-59775">
<TITLE>typeinfo for QSocket</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__vmi_class_type_info</primary></indexterm>vtable for __cxxabiv1::__vmi_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QSocket</primary></indexterm>typeinfo name for QSocket</ENTRY>
</ROW>
<ROW>
<ENTRY>flags:</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QObject</primary></indexterm>typeinfo for QObject</ENTRY>
<ENTRY>2</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QIODevice</primary></indexterm>typeinfo for QIODevice</ENTRY>
<ENTRY>10242</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QSocketNotifier</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QSocketNotifier class
is described in the generic part of this specification.
</PARA>
<PARA>
The Run Time Type Information for the QSocketNotifier  class
is described by <XREF LINKEND="rtti-50530">
</PARA>
<!--classdata-->
<TABLE ID="rtti-50530">
<TITLE>typeinfo for QSocketNotifier</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QSocketNotifier</primary></indexterm>typeinfo name for QSocketNotifier</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QObject</primary></indexterm>typeinfo for QObject</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QNetworkProtocol</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QNetworkProtocol class
is described in the generic part of this specification.
</PARA>
<PARA>
The Run Time Type Information for the QNetworkProtocol  class
is described by <XREF LINKEND="rtti-59199">
</PARA>
<!--classdata-->
<TABLE ID="rtti-59199">
<TITLE>typeinfo for QNetworkProtocol</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QNetworkProtocol</primary></indexterm>typeinfo name for QNetworkProtocol</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QObject</primary></indexterm>typeinfo for QObject</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QUrl</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QUrl class
is described in the generic part of this specification.
</PARA>
<PARA>
The Run Time Type Information for the QUrl  class
is described by <XREF LINKEND="rtti-59229">
</PARA>
<!--classdata-->
<TABLE ID="rtti-59229">
<TITLE>typeinfo for QUrl</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__class_type_info</primary></indexterm>vtable for __cxxabiv1::__class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QUrl</primary></indexterm>typeinfo name for QUrl</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QSocketDevice</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QSocketDevice class
is described in the generic part of this specification.
</PARA>
<PARA>
The Run Time Type Information for the QSocketDevice  class
is described by <XREF LINKEND="rtti-57452">
</PARA>
<!--classdata-->
<TABLE ID="rtti-57452">
<TITLE>typeinfo for QSocketDevice</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QSocketDevice</primary></indexterm>typeinfo name for QSocketDevice</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QIODevice</primary></indexterm>typeinfo for QIODevice</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QHttpResponseHeader</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QHttpResponseHeader class
is described in the generic part of this specification.
</PARA>
<PARA>
The Run Time Type Information for the QHttpResponseHeader  class
is described by <XREF LINKEND="rtti-51512">
</PARA>
<!--classdata-->
<TABLE ID="rtti-51512">
<TITLE>typeinfo for QHttpResponseHeader</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QHttpResponseHeader</primary></indexterm>typeinfo name for QHttpResponseHeader</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QHttpHeader</primary></indexterm>typeinfo for QHttpHeader</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QServerSocket</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QServerSocket class
is described in the generic part of this specification.
</PARA>
<PARA>
The Run Time Type Information for the QServerSocket  class
is described by <XREF LINKEND="rtti-52611">
</PARA>
<!--classdata-->
<TABLE ID="rtti-52611">
<TITLE>typeinfo for QServerSocket</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QServerSocket</primary></indexterm>typeinfo name for QServerSocket</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QObject</primary></indexterm>typeinfo for QObject</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QUrlInfo</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QUrlInfo class
is described in the generic part of this specification.
</PARA>
<PARA>
The Run Time Type Information for the QUrlInfo  class
is described by <XREF LINKEND="rtti-49743">
</PARA>
<!--classdata-->
<TABLE ID="rtti-49743">
<TITLE>typeinfo for QUrlInfo</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__class_type_info</primary></indexterm>vtable for __cxxabiv1::__class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QUrlInfo</primary></indexterm>typeinfo name for QUrlInfo</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QNetworkOperation</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QNetworkOperation class
is described in the generic part of this specification.
</PARA>
<PARA>
The Run Time Type Information for the QNetworkOperation  class
is described by <XREF LINKEND="rtti-57703">
</PARA>
<!--classdata-->
<TABLE ID="rtti-57703">
<TITLE>typeinfo for QNetworkOperation</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QNetworkOperation</primary></indexterm>typeinfo name for QNetworkOperation</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QObject</primary></indexterm>typeinfo for QObject</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QHttp</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QHttp class
is described in the generic part of this specification.
</PARA>
<PARA>
The Run Time Type Information for the QHttp  class
is described by <XREF LINKEND="rtti-58538">
</PARA>
<!--classdata-->
<TABLE ID="rtti-58538">
<TITLE>typeinfo for QHttp</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QHttp</primary></indexterm>typeinfo name for QHttp</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QNetworkProtocol</primary></indexterm>typeinfo for QNetworkProtocol</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QMimeSource</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QMimeSource class
is described in the generic part of this specification.
</PARA>
<PARA>
The Run Time Type Information for the QMimeSource  class
is described by <XREF LINKEND="rtti-54532">
</PARA>
<!--classdata-->
<TABLE ID="rtti-54532">
<TITLE>typeinfo for QMimeSource</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__class_type_info</primary></indexterm>vtable for __cxxabiv1::__class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QMimeSource</primary></indexterm>typeinfo name for QMimeSource</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QDns</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QDns class
is described in the generic part of this specification.
</PARA>
<PARA>
The Run Time Type Information for the QDns  class
is described by <XREF LINKEND="rtti-55679">
</PARA>
<!--classdata-->
<TABLE ID="rtti-55679">
<TITLE>typeinfo for QDns</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QDns</primary></indexterm>typeinfo name for QDns</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QObject</primary></indexterm>typeinfo for QObject</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QHttpRequestHeader</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QHttpRequestHeader class
is described in the generic part of this specification.
</PARA>
<PARA>
The Run Time Type Information for the QHttpRequestHeader  class
is described by <XREF LINKEND="rtti-56172">
</PARA>
<!--classdata-->
<TABLE ID="rtti-56172">
<TITLE>typeinfo for QHttpRequestHeader</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QHttpRequestHeader</primary></indexterm>typeinfo name for QHttpRequestHeader</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QHttpHeader</primary></indexterm>typeinfo for QHttpHeader</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QHttpHeader</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QHttpHeader class
is described in the generic part of this specification.
</PARA>
<PARA>
The Run Time Type Information for the QHttpHeader  class
is described by <XREF LINKEND="rtti-52935">
</PARA>
<!--classdata-->
<TABLE ID="rtti-52935">
<TITLE>typeinfo for QHttpHeader</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__class_type_info</primary></indexterm>vtable for __cxxabiv1::__class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QHttpHeader</primary></indexterm>typeinfo name for QHttpHeader</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QLocalFs</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QLocalFs class
is described in the generic part of this specification.
</PARA>
<PARA>
The Run Time Type Information for the QLocalFs  class
is described by <XREF LINKEND="rtti-58307">
</PARA>
<!--classdata-->
<TABLE ID="rtti-58307">
<TITLE>typeinfo for QLocalFs</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QLocalFs</primary></indexterm>typeinfo name for QLocalFs</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QNetworkProtocol</primary></indexterm>typeinfo for QNetworkProtocol</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QConnectionList</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QConnectionList class
is described in the generic part of this specification.
</PARA>
<PARA>
The Run Time Type Information for the QConnectionList  class
is described by <XREF LINKEND="rtti-54202">
</PARA>
<!--classdata-->
<TABLE ID="rtti-54202">
<TITLE>typeinfo for QConnectionList</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QConnectionList</primary></indexterm>typeinfo name for QConnectionList</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QPtrList&lt;QConnection&gt;</primary></indexterm>typeinfo for QPtrList&lt;QConnection&gt;</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QHostAddress</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QHostAddress class
is described in the generic part of this specification.
</PARA>
<PARA>
The Run Time Type Information for the QHostAddress  class
is described by <XREF LINKEND="rtti-53129">
</PARA>
<!--classdata-->
<TABLE ID="rtti-53129">
<TITLE>typeinfo for QHostAddress</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__class_type_info</primary></indexterm>vtable for __cxxabiv1::__class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QHostAddress</primary></indexterm>typeinfo name for QHostAddress</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QFtp</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QFtp class
is described in the generic part of this specification.
</PARA>
<PARA>
The Run Time Type Information for the QFtp  class
is described by <XREF LINKEND="rtti-55971">
</PARA>
<!--classdata-->
<TABLE ID="rtti-55971">
<TITLE>typeinfo for QFtp</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QFtp</primary></indexterm>typeinfo name for QFtp</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QNetworkProtocol</primary></indexterm>typeinfo for QNetworkProtocol</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Interfaces for Qt3 Network</TITLE>
<PARA>
An LSB conforming implementation shall provide the architecture specific functions
for Qt3 Network specified in <XREF linkend="tbl-libqt-mt-qt3-n-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<TABLE id="tbl-libqt-mt-qt3-n-ints">
<TITLE>libqt-mt - Qt3 Network Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>_ZThn80_N12QUrlOperator4cdUpEv</primary></indexterm>_ZThn80_N12QUrlOperator4cdUpEv <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn80_N12QUrlOperator5parseERK7QString</primary></indexterm>_ZThn80_N12QUrlOperator5parseERK7QString <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn80_N12QUrlOperator5resetEv</primary></indexterm>_ZThn80_N12QUrlOperator5resetEv <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn80_N12QUrlOperator7setPathERK7QString</primary></indexterm>_ZThn80_N12QUrlOperator7setPathERK7QString <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn80_N12QUrlOperatorD0Ev</primary></indexterm>_ZThn80_N12QUrlOperatorD0Ev <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn80_N12QUrlOperatorD1Ev</primary></indexterm>_ZThn80_N12QUrlOperatorD1Ev <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn80_N7QSocket10writeBlockEPKcm</primary></indexterm>_ZThn80_N7QSocket10writeBlockEPKcm <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn80_N7QSocket2atEm</primary></indexterm>_ZThn80_N7QSocket2atEm <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn80_N7QSocket4openEi</primary></indexterm>_ZThn80_N7QSocket4openEi <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn80_N7QSocket5closeEv</primary></indexterm>_ZThn80_N7QSocket5closeEv <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn80_N7QSocket5flushEv</primary></indexterm>_ZThn80_N7QSocket5flushEv <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn80_N7QSocket5getchEv</primary></indexterm>_ZThn80_N7QSocket5getchEv <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn80_N7QSocket5putchEi</primary></indexterm>_ZThn80_N7QSocket5putchEi <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn80_N7QSocket7ungetchEi</primary></indexterm>_ZThn80_N7QSocket7ungetchEi <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn80_N7QSocket8readLineEPcm</primary></indexterm>_ZThn80_N7QSocket8readLineEPcm <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn80_N7QSocket9readBlockEPcm</primary></indexterm>_ZThn80_N7QSocket9readBlockEPcm <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn80_N7QSocketD0Ev</primary></indexterm>_ZThn80_N7QSocketD0Ev <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn80_N7QSocketD1Ev</primary></indexterm>_ZThn80_N7QSocketD1Ev <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn80_NK7QSocket2atEv</primary></indexterm>_ZThn80_NK7QSocket2atEv <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn80_NK7QSocket4sizeEv</primary></indexterm>_ZThn80_NK7QSocket4sizeEv <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn80_NK7QSocket5atEndEv</primary></indexterm>_ZThn80_NK7QSocket5atEndEv <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
<ENTRY></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>
</SECT2>
<!-- debug: database interface name Qt3 Object Model -->
<SECT2>
<!--libgroup-->
<TITLE>Qt3 Object Model</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Class data for QObjectCleanupHandler</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QObjectCleanupHandler class
is described in the generic part of this specification.
</PARA>
<PARA>
The Run Time Type Information for the QObjectCleanupHandler  class
is described by <XREF LINKEND="rtti-60166">
</PARA>
<!--classdata-->
<TABLE ID="rtti-60166">
<TITLE>typeinfo for QObjectCleanupHandler</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QObjectCleanupHandler</primary></indexterm>typeinfo name for QObjectCleanupHandler</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QObject</primary></indexterm>typeinfo for QObject</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QObjectUserData</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QObjectUserData class
is described in the generic part of this specification.
</PARA>
<PARA>
The Run Time Type Information for the QObjectUserData  class
is described by <XREF LINKEND="rtti-53916">
</PARA>
<!--classdata-->
<TABLE ID="rtti-53916">
<TITLE>typeinfo for QObjectUserData</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__class_type_info</primary></indexterm>vtable for __cxxabiv1::__class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QObjectUserData</primary></indexterm>typeinfo name for QObjectUserData</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QObject</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QObject class
is described in the generic part of this specification.
</PARA>
<PARA>
The Run Time Type Information for the QObject  class
is described by <XREF LINKEND="rtti-54399">
</PARA>
<!--classdata-->
<TABLE ID="rtti-54399">
<TITLE>typeinfo for QObject</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QObject</primary></indexterm>typeinfo name for QObject</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for Qt</primary></indexterm>typeinfo for Qt</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QMetaObject</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QMetaObject class
is described in the generic part of this specification.
</PARA>
<PARA>
The Run Time Type Information for the QMetaObject  class
is described by <XREF LINKEND="rtti-58768">
</PARA>
<!--classdata-->
<TABLE ID="rtti-58768">
<TITLE>typeinfo for QMetaObject</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__class_type_info</primary></indexterm>vtable for __cxxabiv1::__class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QMetaObject</primary></indexterm>typeinfo name for QMetaObject</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QGuardedPtrPrivate</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QGuardedPtrPrivate class
is described in the generic part of this specification.
</PARA>
<PARA>
The Run Time Type Information for the QGuardedPtrPrivate  class
is described by <XREF LINKEND="rtti-58110">
</PARA>
<!--classdata-->
<TABLE ID="rtti-58110">
<TITLE>typeinfo for QGuardedPtrPrivate</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__vmi_class_type_info</primary></indexterm>vtable for __cxxabiv1::__vmi_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QGuardedPtrPrivate</primary></indexterm>typeinfo name for QGuardedPtrPrivate</ENTRY>
</ROW>
<ROW>
<ENTRY>flags:</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QObject</primary></indexterm>typeinfo for QObject</ENTRY>
<ENTRY>2</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QShared</primary></indexterm>typeinfo for QShared</ENTRY>
<ENTRY>10242</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Interfaces for Qt3 Object Model</TITLE>
<PARA>
No external functions are defined for libqt-mt - Qt3 Object Model
in this part of the specification. See also the generic specification.
</PARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Qt3 OpenGL -->
<SECT2>
<!--libgroup-->
<TITLE>Qt3 OpenGL</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Interfaces for Qt3 OpenGL</TITLE>
<PARA>
An LSB conforming implementation shall provide the architecture specific functions
for Qt3 OpenGL specified in <XREF linkend="tbl-libqt-mt-qt3-o-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<TABLE id="tbl-libqt-mt-qt3-o-ints">
<TITLE>libqt-mt - Qt3 OpenGL Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>_ZThn80_N9QGLWidgetD0Ev</primary></indexterm>_ZThn80_N9QGLWidgetD0Ev <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn80_N9QGLWidgetD1Ev</primary></indexterm>_ZThn80_N9QGLWidgetD1Ev <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>
</SECT2>
<!-- debug: database interface name Qt3 Paint Device -->
<SECT2>
<!--libgroup-->
<TITLE>Qt3 Paint Device</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Class data for QPaintDevice</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QPaintDevice class
is described in the generic part of this specification.
</PARA>
<PARA>
The Run Time Type Information for the QPaintDevice  class
is described by <XREF LINKEND="rtti-54620">
</PARA>
<!--classdata-->
<TABLE ID="rtti-54620">
<TITLE>typeinfo for QPaintDevice</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__class_type_info</primary></indexterm>vtable for __cxxabiv1::__class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QPaintDevice</primary></indexterm>typeinfo name for QPaintDevice</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QBitmap</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QBitmap class
is described in the generic part of this specification.
</PARA>
<PARA>
The Run Time Type Information for the QBitmap  class
is described by <XREF LINKEND="rtti-54937">
</PARA>
<!--classdata-->
<TABLE ID="rtti-54937">
<TITLE>typeinfo for QBitmap</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QBitmap</primary></indexterm>typeinfo name for QBitmap</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QPixmap</primary></indexterm>typeinfo for QPixmap</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QPicture</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QPicture class
is described in the generic part of this specification.
</PARA>
<PARA>
The Run Time Type Information for the QPicture  class
is described by <XREF LINKEND="rtti-50414">
</PARA>
<!--classdata-->
<TABLE ID="rtti-50414">
<TITLE>typeinfo for QPicture</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QPicture</primary></indexterm>typeinfo name for QPicture</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QPaintDevice</primary></indexterm>typeinfo for QPaintDevice</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QPixmap</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QPixmap class
is described in the generic part of this specification.
</PARA>
<PARA>
The Run Time Type Information for the QPixmap  class
is described by <XREF LINKEND="rtti-55789">
</PARA>
<!--classdata-->
<TABLE ID="rtti-55789">
<TITLE>typeinfo for QPixmap</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__vmi_class_type_info</primary></indexterm>vtable for __cxxabiv1::__vmi_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QPixmap</primary></indexterm>typeinfo name for QPixmap</ENTRY>
</ROW>
<ROW>
<ENTRY>flags:</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QPaintDevice</primary></indexterm>typeinfo for QPaintDevice</ENTRY>
<ENTRY>2</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for Qt</primary></indexterm>typeinfo for Qt</ENTRY>
<ENTRY>2</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QPrinter</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QPrinter class
is described in the generic part of this specification.
</PARA>
<PARA>
The Run Time Type Information for the QPrinter  class
is described by <XREF LINKEND="rtti-53397">
</PARA>
<!--classdata-->
<TABLE ID="rtti-53397">
<TITLE>typeinfo for QPrinter</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QPrinter</primary></indexterm>typeinfo name for QPrinter</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QPaintDevice</primary></indexterm>typeinfo for QPaintDevice</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Interfaces for Qt3 Paint Device</TITLE>
<PARA>
No external functions are defined for libqt-mt - Qt3 Paint Device
in this part of the specification. See also the generic specification.
</PARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Qt3 SQL -->
<SECT2>
<!--libgroup-->
<TITLE>Qt3 SQL</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Class data for QSqlResult</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QSqlResult class
is described in the generic part of this specification.
</PARA>
<PARA>
The Run Time Type Information for the QSqlResult  class
is described by <XREF LINKEND="rtti-58515">
</PARA>
<!--classdata-->
<TABLE ID="rtti-58515">
<TITLE>typeinfo for QSqlResult</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__class_type_info</primary></indexterm>vtable for __cxxabiv1::__class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QSqlResult</primary></indexterm>typeinfo name for QSqlResult</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QSqlSelectCursor</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QSqlSelectCursor class
is described by <XREF LINKEND="cls-58443-0">
</PARA>
<!--classdata-->
<TABLE id="cls-58443-0">
<TITLE>Primary vtable for QSqlSelectCursor</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QSqlSelectCursor</primary></indexterm>typeinfo for QSqlSelectCursor</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSqlSelectCursor::~QSqlSelectCursor()</primary></indexterm>QSqlSelectCursor::~QSqlSelectCursor()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSqlSelectCursor::~QSqlSelectCursor()</primary></indexterm>QSqlSelectCursor::~QSqlSelectCursor()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSqlCursor::value(int) const</primary></indexterm>QSqlCursor::value(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSqlCursor::value(QString const&) const</primary></indexterm>QSqlCursor::value(QString const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSqlCursor::setValue(int, QVariant const&)</primary></indexterm>QSqlCursor::setValue(int, QVariant const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSqlCursor::setValue(QString const&, QVariant const&)</primary></indexterm>QSqlCursor::setValue(QString const&, QVariant const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSqlSelectCursor::setGenerated(QString const&, bool)</primary></indexterm>NULL or QSqlSelectCursor::setGenerated(QString const&, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSqlSelectCursor::setGenerated(int, bool)</primary></indexterm>NULL or QSqlSelectCursor::setGenerated(int, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSqlRecord::setNull(int)</primary></indexterm>QSqlRecord::setNull(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSqlRecord::setNull(QString const&)</primary></indexterm>QSqlRecord::setNull(QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSqlCursor::append(QSqlField const&)</primary></indexterm>QSqlCursor::append(QSqlField const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSqlCursor::insert(int, QSqlField const&)</primary></indexterm>QSqlCursor::insert(int, QSqlField const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSqlSelectCursor::remove(int)</primary></indexterm>NULL or QSqlSelectCursor::remove(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSqlSelectCursor::clear()</primary></indexterm>NULL or QSqlSelectCursor::clear()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSqlRecord::clearValues(bool)</primary></indexterm>QSqlRecord::clearValues(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSqlSelectCursor::toString(QString const&, QString const&) const</primary></indexterm>NULL or QSqlSelectCursor::toString(QString const&, QString const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSqlRecord::toStringList(QString const&) const</primary></indexterm>QSqlRecord::toStringList(QString const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSqlSelectCursor::primaryIndex(bool) const</primary></indexterm>NULL or QSqlSelectCursor::primaryIndex(bool) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSqlSelectCursor::index(QStringList const&) const</primary></indexterm>NULL or QSqlSelectCursor::index(QStringList const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSqlSelectCursor::setPrimaryIndex(QSqlIndex const&)</primary></indexterm>NULL or QSqlSelectCursor::setPrimaryIndex(QSqlIndex const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSqlSelectCursor::append(QSqlFieldInfo const&)</primary></indexterm>NULL or QSqlSelectCursor::append(QSqlFieldInfo const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSqlSelectCursor::insert(int, QSqlFieldInfo const&)</primary></indexterm>NULL or QSqlSelectCursor::insert(int, QSqlFieldInfo const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSqlSelectCursor::editBuffer(bool)</primary></indexterm>NULL or QSqlSelectCursor::editBuffer(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSqlSelectCursor::primeInsert()</primary></indexterm>NULL or QSqlSelectCursor::primeInsert()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSqlSelectCursor::primeUpdate()</primary></indexterm>NULL or QSqlSelectCursor::primeUpdate()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSqlSelectCursor::primeDelete()</primary></indexterm>NULL or QSqlSelectCursor::primeDelete()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSqlSelectCursor::insert(bool)</primary></indexterm>NULL or QSqlSelectCursor::insert(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSqlSelectCursor::update(bool)</primary></indexterm>NULL or QSqlSelectCursor::update(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSqlSelectCursor::del(bool)</primary></indexterm>NULL or QSqlSelectCursor::del(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSqlSelectCursor::setMode(int)</primary></indexterm>NULL or QSqlSelectCursor::setMode(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSqlCursor::setCalculated(QString const&, bool)</primary></indexterm>QSqlCursor::setCalculated(QString const&, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSqlCursor::setTrimmed(QString const&, bool)</primary></indexterm>QSqlCursor::setTrimmed(QString const&, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSqlSelectCursor::select(QString const&, QSqlIndex const&)</primary></indexterm>QSqlSelectCursor::select(QString const&, QSqlIndex const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;33&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSqlSelectCursor::setSort(QSqlIndex const&)</primary></indexterm>NULL or QSqlSelectCursor::setSort(QSqlIndex const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;34&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSqlSelectCursor::setFilter(QString const&)</primary></indexterm>NULL or QSqlSelectCursor::setFilter(QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;35&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSqlSelectCursor::setName(QString const&, bool)</primary></indexterm>NULL or QSqlSelectCursor::setName(QString const&, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;36&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSqlCursor::afterSeek()</primary></indexterm>QSqlCursor::afterSeek()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;37&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSqlSelectCursor::exec(QString const&)</primary></indexterm>QSqlSelectCursor::exec(QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;38&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSqlCursor::calculateField(QString const&)</primary></indexterm>QSqlCursor::calculateField(QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;39&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSqlCursor::update(QString const&, bool)</primary></indexterm>QSqlCursor::update(QString const&, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;40&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSqlCursor::del(QString const&, bool)</primary></indexterm>QSqlCursor::del(QString const&, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;41&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSqlCursor::toString(QString const&, QSqlField*, QString const&) const</primary></indexterm>QSqlCursor::toString(QString const&, QSqlField*, QString const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;42&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSqlCursor::toString(QSqlRecord*, QString const&, QString const&, QString const&) const</primary></indexterm>QSqlCursor::toString(QSqlRecord*, QString const&, QString const&, QString const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;43&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSqlCursor::toString(QSqlIndex const&, QSqlRecord*, QString const&, QString const&, QString const&) const</primary></indexterm>QSqlCursor::toString(QSqlIndex const&, QSqlRecord*, QString const&, QString const&, QString const&) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--classdata-->
<TABLE id="cls-58443-1">
<TITLE>Secondary vtable for QSqlSelectCursor</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>-16</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QSqlSelectCursor</primary></indexterm>typeinfo for QSqlSelectCursor</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QSqlSelectCursor::~QSqlSelectCursor()</primary></indexterm>non-virtual thunk to QSqlSelectCursor::~QSqlSelectCursor()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QSqlSelectCursor::~QSqlSelectCursor()</primary></indexterm>non-virtual thunk to QSqlSelectCursor::~QSqlSelectCursor()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QSqlSelectCursor::exec(QString const&)</primary></indexterm>non-virtual thunk to QSqlSelectCursor::exec(QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QSqlCursor::value(int) const</primary></indexterm>non-virtual thunk to QSqlCursor::value(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSqlQuery::seek(int, bool)</primary></indexterm>QSqlQuery::seek(int, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSqlQuery::next()</primary></indexterm>QSqlQuery::next()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSqlQuery::prev()</primary></indexterm>QSqlQuery::prev()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSqlQuery::first()</primary></indexterm>QSqlQuery::first()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSqlQuery::last()</primary></indexterm>QSqlQuery::last()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSqlQuery::beforeSeek()</primary></indexterm>QSqlQuery::beforeSeek()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QSqlCursor::afterSeek()</primary></indexterm>non-virtual thunk to QSqlCursor::afterSeek()</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QSqlSelectCursor  class
is described by <XREF LINKEND="rtti-48857">
</PARA>
<!--classdata-->
<TABLE ID="rtti-48857">
<TITLE>typeinfo for QSqlSelectCursor</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QSqlSelectCursor</primary></indexterm>typeinfo name for QSqlSelectCursor</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QSqlCursor</primary></indexterm>typeinfo for QSqlCursor</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QSqlDriver</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QSqlDriver class
is described in the generic part of this specification.
</PARA>
<PARA>
The Run Time Type Information for the QSqlDriver  class
is described by <XREF LINKEND="rtti-59298">
</PARA>
<!--classdata-->
<TABLE ID="rtti-59298">
<TITLE>typeinfo for QSqlDriver</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QSqlDriver</primary></indexterm>typeinfo name for QSqlDriver</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QObject</primary></indexterm>typeinfo for QObject</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QSqlPropertyMap</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QSqlPropertyMap class
is described in the generic part of this specification.
</PARA>
<PARA>
The Run Time Type Information for the QSqlPropertyMap  class
is described by <XREF LINKEND="rtti-53181">
</PARA>
<!--classdata-->
<TABLE ID="rtti-53181">
<TITLE>typeinfo for QSqlPropertyMap</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__class_type_info</primary></indexterm>vtable for __cxxabiv1::__class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QSqlPropertyMap</primary></indexterm>typeinfo name for QSqlPropertyMap</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QSqlQuery</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QSqlQuery class
is described in the generic part of this specification.
</PARA>
<PARA>
The Run Time Type Information for the QSqlQuery  class
is described by <XREF LINKEND="rtti-54334">
</PARA>
<!--classdata-->
<TABLE ID="rtti-54334">
<TITLE>typeinfo for QSqlQuery</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__class_type_info</primary></indexterm>vtable for __cxxabiv1::__class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QSqlQuery</primary></indexterm>typeinfo name for QSqlQuery</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QSqlRecord</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QSqlRecord class
is described in the generic part of this specification.
</PARA>
<PARA>
The Run Time Type Information for the QSqlRecord  class
is described by <XREF LINKEND="rtti-48824">
</PARA>
<!--classdata-->
<TABLE ID="rtti-48824">
<TITLE>typeinfo for QSqlRecord</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__class_type_info</primary></indexterm>vtable for __cxxabiv1::__class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QSqlRecord</primary></indexterm>typeinfo name for QSqlRecord</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QSqlDatabase</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QSqlDatabase class
is described in the generic part of this specification.
</PARA>
<PARA>
The Run Time Type Information for the QSqlDatabase  class
is described by <XREF LINKEND="rtti-48795">
</PARA>
<!--classdata-->
<TABLE ID="rtti-48795">
<TITLE>typeinfo for QSqlDatabase</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QSqlDatabase</primary></indexterm>typeinfo name for QSqlDatabase</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QObject</primary></indexterm>typeinfo for QObject</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QEditorFactory</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QEditorFactory class
is described in the generic part of this specification.
</PARA>
<PARA>
The Run Time Type Information for the QEditorFactory  class
is described by <XREF LINKEND="rtti-50364">
</PARA>
<!--classdata-->
<TABLE ID="rtti-50364">
<TITLE>typeinfo for QEditorFactory</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QEditorFactory</primary></indexterm>typeinfo name for QEditorFactory</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QObject</primary></indexterm>typeinfo for QObject</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QSqlDriverPlugin</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QSqlDriverPlugin class
is described in the generic part of this specification.
</PARA>
<PARA>
The Run Time Type Information for the QSqlDriverPlugin  class
is described by <XREF LINKEND="rtti-56846">
</PARA>
<!--classdata-->
<TABLE ID="rtti-56846">
<TITLE>typeinfo for QSqlDriverPlugin</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QSqlDriverPlugin</primary></indexterm>typeinfo name for QSqlDriverPlugin</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QGPlugin</primary></indexterm>typeinfo for QGPlugin</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QSqlResultShared</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QSqlResultShared class
is described in the generic part of this specification.
</PARA>
<PARA>
The Run Time Type Information for the QSqlResultShared  class
is described by <XREF LINKEND="rtti-50304">
</PARA>
<!--classdata-->
<TABLE ID="rtti-50304">
<TITLE>typeinfo for QSqlResultShared</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__vmi_class_type_info</primary></indexterm>vtable for __cxxabiv1::__vmi_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QSqlResultShared</primary></indexterm>typeinfo name for QSqlResultShared</ENTRY>
</ROW>
<ROW>
<ENTRY>flags:</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QObject</primary></indexterm>typeinfo for QObject</ENTRY>
<ENTRY>2</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QShared</primary></indexterm>typeinfo for QShared</ENTRY>
<ENTRY>10242</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QSqlError</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QSqlError class
is described in the generic part of this specification.
</PARA>
<PARA>
The Run Time Type Information for the QSqlError  class
is described by <XREF LINKEND="rtti-59682">
</PARA>
<!--classdata-->
<TABLE ID="rtti-59682">
<TITLE>typeinfo for QSqlError</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__class_type_info</primary></indexterm>vtable for __cxxabiv1::__class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QSqlError</primary></indexterm>typeinfo name for QSqlError</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QSqlForm</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QSqlForm class
is described in the generic part of this specification.
</PARA>
<PARA>
The Run Time Type Information for the QSqlForm  class
is described by <XREF LINKEND="rtti-54159">
</PARA>
<!--classdata-->
<TABLE ID="rtti-54159">
<TITLE>typeinfo for QSqlForm</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QSqlForm</primary></indexterm>typeinfo name for QSqlForm</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QObject</primary></indexterm>typeinfo for QObject</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QSqlEditorFactory</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QSqlEditorFactory class
is described in the generic part of this specification.
</PARA>
<PARA>
The Run Time Type Information for the QSqlEditorFactory  class
is described by <XREF LINKEND="rtti-55222">
</PARA>
<!--classdata-->
<TABLE ID="rtti-55222">
<TITLE>typeinfo for QSqlEditorFactory</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QSqlEditorFactory</primary></indexterm>typeinfo name for QSqlEditorFactory</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QEditorFactory</primary></indexterm>typeinfo for QEditorFactory</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QSqlCursor</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QSqlCursor class
is described by <XREF LINKEND="cls-52434-0">
</PARA>
<!--classdata-->
<TABLE id="cls-52434-0">
<TITLE>Primary vtable for QSqlCursor</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QSqlCursor</primary></indexterm>typeinfo for QSqlCursor</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSqlCursor::~QSqlCursor()</primary></indexterm>QSqlCursor::~QSqlCursor()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSqlCursor::~QSqlCursor()</primary></indexterm>QSqlCursor::~QSqlCursor()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSqlCursor::value(int) const</primary></indexterm>QSqlCursor::value(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSqlCursor::value(QString const&) const</primary></indexterm>QSqlCursor::value(QString const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSqlCursor::setValue(int, QVariant const&)</primary></indexterm>QSqlCursor::setValue(int, QVariant const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSqlCursor::setValue(QString const&, QVariant const&)</primary></indexterm>QSqlCursor::setValue(QString const&, QVariant const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSqlCursor::setGenerated(QString const&, bool)</primary></indexterm>QSqlCursor::setGenerated(QString const&, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSqlCursor::setGenerated(int, bool)</primary></indexterm>QSqlCursor::setGenerated(int, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSqlRecord::setNull(int)</primary></indexterm>QSqlRecord::setNull(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSqlRecord::setNull(QString const&)</primary></indexterm>QSqlRecord::setNull(QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSqlCursor::append(QSqlField const&)</primary></indexterm>QSqlCursor::append(QSqlField const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSqlCursor::insert(int, QSqlField const&)</primary></indexterm>QSqlCursor::insert(int, QSqlField const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSqlCursor::remove(int)</primary></indexterm>QSqlCursor::remove(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSqlCursor::clear()</primary></indexterm>QSqlCursor::clear()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSqlRecord::clearValues(bool)</primary></indexterm>QSqlRecord::clearValues(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSqlCursor::toString(QString const&, QString const&) const</primary></indexterm>QSqlCursor::toString(QString const&, QString const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSqlRecord::toStringList(QString const&) const</primary></indexterm>QSqlRecord::toStringList(QString const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSqlCursor::primaryIndex(bool) const</primary></indexterm>QSqlCursor::primaryIndex(bool) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSqlCursor::index(QStringList const&) const</primary></indexterm>QSqlCursor::index(QStringList const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSqlCursor::setPrimaryIndex(QSqlIndex const&)</primary></indexterm>QSqlCursor::setPrimaryIndex(QSqlIndex const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSqlCursor::append(QSqlFieldInfo const&)</primary></indexterm>QSqlCursor::append(QSqlFieldInfo const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSqlCursor::insert(int, QSqlFieldInfo const&)</primary></indexterm>QSqlCursor::insert(int, QSqlFieldInfo const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSqlCursor::editBuffer(bool)</primary></indexterm>QSqlCursor::editBuffer(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSqlCursor::primeInsert()</primary></indexterm>QSqlCursor::primeInsert()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSqlCursor::primeUpdate()</primary></indexterm>QSqlCursor::primeUpdate()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSqlCursor::primeDelete()</primary></indexterm>QSqlCursor::primeDelete()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSqlCursor::insert(bool)</primary></indexterm>QSqlCursor::insert(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSqlCursor::update(bool)</primary></indexterm>QSqlCursor::update(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSqlCursor::del(bool)</primary></indexterm>QSqlCursor::del(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSqlCursor::setMode(int)</primary></indexterm>QSqlCursor::setMode(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSqlCursor::setCalculated(QString const&, bool)</primary></indexterm>QSqlCursor::setCalculated(QString const&, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSqlCursor::setTrimmed(QString const&, bool)</primary></indexterm>QSqlCursor::setTrimmed(QString const&, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSqlCursor::select(QString const&, QSqlIndex const&)</primary></indexterm>QSqlCursor::select(QString const&, QSqlIndex const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;33&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSqlCursor::setSort(QSqlIndex const&)</primary></indexterm>QSqlCursor::setSort(QSqlIndex const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;34&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSqlCursor::setFilter(QString const&)</primary></indexterm>QSqlCursor::setFilter(QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;35&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSqlCursor::setName(QString const&, bool)</primary></indexterm>QSqlCursor::setName(QString const&, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;36&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSqlCursor::afterSeek()</primary></indexterm>QSqlCursor::afterSeek()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;37&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSqlCursor::exec(QString const&)</primary></indexterm>QSqlCursor::exec(QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;38&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSqlCursor::calculateField(QString const&)</primary></indexterm>QSqlCursor::calculateField(QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;39&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSqlCursor::update(QString const&, bool)</primary></indexterm>QSqlCursor::update(QString const&, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;40&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSqlCursor::del(QString const&, bool)</primary></indexterm>QSqlCursor::del(QString const&, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;41&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSqlCursor::toString(QString const&, QSqlField*, QString const&) const</primary></indexterm>QSqlCursor::toString(QString const&, QSqlField*, QString const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;42&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSqlCursor::toString(QSqlRecord*, QString const&, QString const&, QString const&) const</primary></indexterm>QSqlCursor::toString(QSqlRecord*, QString const&, QString const&, QString const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;43&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSqlCursor::toString(QSqlIndex const&, QSqlRecord*, QString const&, QString const&, QString const&) const</primary></indexterm>QSqlCursor::toString(QSqlIndex const&, QSqlRecord*, QString const&, QString const&, QString const&) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--classdata-->
<TABLE id="cls-52434-1">
<TITLE>Secondary vtable for QSqlCursor</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>-16</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QSqlCursor</primary></indexterm>typeinfo for QSqlCursor</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QSqlCursor::~QSqlCursor()</primary></indexterm>non-virtual thunk to QSqlCursor::~QSqlCursor()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QSqlCursor::~QSqlCursor()</primary></indexterm>non-virtual thunk to QSqlCursor::~QSqlCursor()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QSqlCursor::exec(QString const&)</primary></indexterm>non-virtual thunk to QSqlCursor::exec(QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QSqlCursor::value(int) const</primary></indexterm>non-virtual thunk to QSqlCursor::value(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSqlQuery::seek(int, bool)</primary></indexterm>QSqlQuery::seek(int, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSqlQuery::next()</primary></indexterm>QSqlQuery::next()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSqlQuery::prev()</primary></indexterm>QSqlQuery::prev()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSqlQuery::first()</primary></indexterm>QSqlQuery::first()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSqlQuery::last()</primary></indexterm>QSqlQuery::last()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSqlQuery::beforeSeek()</primary></indexterm>QSqlQuery::beforeSeek()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QSqlCursor::afterSeek()</primary></indexterm>non-virtual thunk to QSqlCursor::afterSeek()</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QSqlCursor  class
is described by <XREF LINKEND="rtti-60271">
</PARA>
<!--classdata-->
<TABLE ID="rtti-60271">
<TITLE>typeinfo for QSqlCursor</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__vmi_class_type_info</primary></indexterm>vtable for __cxxabiv1::__vmi_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QSqlCursor</primary></indexterm>typeinfo name for QSqlCursor</ENTRY>
</ROW>
<ROW>
<ENTRY>flags:</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QSqlRecord</primary></indexterm>typeinfo for QSqlRecord</ENTRY>
<ENTRY>2</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QSqlQuery</primary></indexterm>typeinfo for QSqlQuery</ENTRY>
<ENTRY>2050</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QSqlFieldInfo</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QSqlFieldInfo class
is described in the generic part of this specification.
</PARA>
<PARA>
The Run Time Type Information for the QSqlFieldInfo  class
is described by <XREF LINKEND="rtti-59252">
</PARA>
<!--classdata-->
<TABLE ID="rtti-59252">
<TITLE>typeinfo for QSqlFieldInfo</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__class_type_info</primary></indexterm>vtable for __cxxabiv1::__class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QSqlFieldInfo</primary></indexterm>typeinfo name for QSqlFieldInfo</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QSqlIndex</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QSqlIndex class
is described in the generic part of this specification.
</PARA>
<PARA>
The Run Time Type Information for the QSqlIndex  class
is described by <XREF LINKEND="rtti-50549">
</PARA>
<!--classdata-->
<TABLE ID="rtti-50549">
<TITLE>typeinfo for QSqlIndex</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QSqlIndex</primary></indexterm>typeinfo name for QSqlIndex</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QSqlRecord</primary></indexterm>typeinfo for QSqlRecord</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QSqlField</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QSqlField class
is described in the generic part of this specification.
</PARA>
<PARA>
The Run Time Type Information for the QSqlField  class
is described by <XREF LINKEND="rtti-54266">
</PARA>
<!--classdata-->
<TABLE ID="rtti-54266">
<TITLE>typeinfo for QSqlField</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__class_type_info</primary></indexterm>vtable for __cxxabiv1::__class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QSqlField</primary></indexterm>typeinfo name for QSqlField</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Interfaces for Qt3 SQL</TITLE>
<PARA>
An LSB conforming implementation shall provide the architecture specific functions
for Qt3 SQL specified in <XREF linkend="tbl-libqt-mt-qt3-s-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<TABLE id="tbl-libqt-mt-qt3-s-ints">
<TITLE>libqt-mt - Qt3 SQL Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>_ZThn16_N10QSqlCursor4execERK7QString</primary></indexterm>_ZThn16_N10QSqlCursor4execERK7QString <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn16_N10QSqlCursor9afterSeekEv</primary></indexterm>_ZThn16_N10QSqlCursor9afterSeekEv <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn16_N10QSqlCursorD0Ev</primary></indexterm>_ZThn16_N10QSqlCursorD0Ev <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn16_N10QSqlCursorD1Ev</primary></indexterm>_ZThn16_N10QSqlCursorD1Ev <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn16_N16QSqlSelectCursor4execERK7QString</primary></indexterm>_ZThn16_N16QSqlSelectCursor4execERK7QString <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn16_N16QSqlSelectCursorD0Ev</primary></indexterm>_ZThn16_N16QSqlSelectCursorD0Ev <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn16_N16QSqlSelectCursorD1Ev</primary></indexterm>_ZThn16_N16QSqlSelectCursorD1Ev <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn16_NK10QSqlCursor5valueEi</primary></indexterm>_ZThn16_NK10QSqlCursor5valueEi <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>
</SECT2>
<!-- debug: database interface name Qt3 Style -->
<SECT2>
<!--libgroup-->
<TITLE>Qt3 Style</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Class data for QCommonStyle</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QCommonStyle class
is described in the generic part of this specification.
</PARA>
<PARA>
The Run Time Type Information for the QCommonStyle  class
is described by <XREF LINKEND="rtti-52552">
</PARA>
<!--classdata-->
<TABLE ID="rtti-52552">
<TITLE>typeinfo for QCommonStyle</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QCommonStyle</primary></indexterm>typeinfo name for QCommonStyle</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QStyle</primary></indexterm>typeinfo for QStyle</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QStyle</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QStyle class
is described in the generic part of this specification.
</PARA>
<PARA>
The Run Time Type Information for the QStyle  class
is described by <XREF LINKEND="rtti-50033">
</PARA>
<!--classdata-->
<TABLE ID="rtti-50033">
<TITLE>typeinfo for QStyle</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QStyle</primary></indexterm>typeinfo name for QStyle</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QObject</primary></indexterm>typeinfo for QObject</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Interfaces for Qt3 Style</TITLE>
<PARA>
No external functions are defined for libqt-mt - Qt3 Style
in this part of the specification. See also the generic specification.
</PARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Qt3 Text -->
<SECT2>
<!--libgroup-->
<TITLE>Qt3 Text</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Class data for QSyntaxHighlighter</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QSyntaxHighlighter class
is described in the generic part of this specification.
</PARA>
<PARA>
The Run Time Type Information for the QSyntaxHighlighter  class
is described by <XREF LINKEND="rtti-54347">
</PARA>
<!--classdata-->
<TABLE ID="rtti-54347">
<TITLE>typeinfo for QSyntaxHighlighter</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QSyntaxHighlighter</primary></indexterm>typeinfo name for QSyntaxHighlighter</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for Qt</primary></indexterm>typeinfo for Qt</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QStyleSheet</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QStyleSheet class
is described in the generic part of this specification.
</PARA>
<PARA>
The Run Time Type Information for the QStyleSheet  class
is described by <XREF LINKEND="rtti-58455">
</PARA>
<!--classdata-->
<TABLE ID="rtti-58455">
<TITLE>typeinfo for QStyleSheet</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QStyleSheet</primary></indexterm>typeinfo name for QStyleSheet</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QObject</primary></indexterm>typeinfo for QObject</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QStrList</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QStrList class
is described in the generic part of this specification.
</PARA>
<PARA>
The Run Time Type Information for the QStrList  class
is described by <XREF LINKEND="rtti-55572">
</PARA>
<!--classdata-->
<TABLE ID="rtti-55572">
<TITLE>typeinfo for QStrList</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QStrList</primary></indexterm>typeinfo name for QStrList</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QPtrList&lt;char&gt;</primary></indexterm>typeinfo for QPtrList&lt;char&gt;</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QCString</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QCString class
is described in the generic part of this specification.
</PARA>
<PARA>
The Run Time Type Information for the QCString  class
is described by <XREF LINKEND="rtti-51708">
</PARA>
<!--classdata-->
<TABLE ID="rtti-51708">
<TITLE>typeinfo for QCString</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QCString</primary></indexterm>typeinfo name for QCString</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QMemArray&lt;char&gt;</primary></indexterm>typeinfo for QMemArray&lt;char&gt;</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Interfaces for Qt3 Text</TITLE>
<PARA>
No external functions are defined for libqt-mt - Qt3 Text
in this part of the specification. See also the generic specification.
</PARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Qt3 Threading -->
<SECT2>
<!--libgroup-->
<TITLE>Qt3 Threading</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Class data for QWaitCondition</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QWaitCondition class
is described in the generic part of this specification.
</PARA>
<PARA>
The Run Time Type Information for the QWaitCondition  class
is described by <XREF LINKEND="rtti-51987">
</PARA>
<!--classdata-->
<TABLE ID="rtti-51987">
<TITLE>typeinfo for QWaitCondition</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__class_type_info</primary></indexterm>vtable for __cxxabiv1::__class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QWaitCondition</primary></indexterm>typeinfo name for QWaitCondition</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QMutex</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QMutex class
is described in the generic part of this specification.
</PARA>
<PARA>
The Run Time Type Information for the QMutex  class
is described by <XREF LINKEND="rtti-57249">
</PARA>
<!--classdata-->
<TABLE ID="rtti-57249">
<TITLE>typeinfo for QMutex</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__class_type_info</primary></indexterm>vtable for __cxxabiv1::__class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QMutex</primary></indexterm>typeinfo name for QMutex</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QThread</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QThread class
is described in the generic part of this specification.
</PARA>
<PARA>
The Run Time Type Information for the QThread  class
is described by <XREF LINKEND="rtti-53486">
</PARA>
<!--classdata-->
<TABLE ID="rtti-53486">
<TITLE>typeinfo for QThread</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QThread</primary></indexterm>typeinfo name for QThread</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for Qt</primary></indexterm>typeinfo for Qt</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QSemaphore</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QSemaphore class
is described in the generic part of this specification.
</PARA>
<PARA>
The Run Time Type Information for the QSemaphore  class
is described by <XREF LINKEND="rtti-50209">
</PARA>
<!--classdata-->
<TABLE ID="rtti-50209">
<TITLE>typeinfo for QSemaphore</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__class_type_info</primary></indexterm>vtable for __cxxabiv1::__class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QSemaphore</primary></indexterm>typeinfo name for QSemaphore</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Interfaces for Qt3 Threading</TITLE>
<PARA>
No external functions are defined for libqt-mt - Qt3 Threading
in this part of the specification. See also the generic specification.
</PARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Qt3 Main Window and Application -->
<SECT2>
<!--libgroup-->
<TITLE>Qt3 Main Window and Application</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Class data for QToolBar</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QToolBar class
is described by <XREF LINKEND="cls-53090-0">
</PARA>
<!--classdata-->
<TABLE id="cls-53090-0">
<TITLE>Primary vtable for QToolBar</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QToolBar</primary></indexterm>typeinfo for QToolBar</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QToolBar::metaObject() const</primary></indexterm>NULL or QToolBar::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QToolBar::className() const</primary></indexterm>QToolBar::className() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QToolBar::qt_cast(char const*)</primary></indexterm>QToolBar::qt_cast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QToolBar::qt_invoke(int, QUObject*)</primary></indexterm>QToolBar::qt_invoke(int, QUObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QToolBar::qt_emit(int, QUObject*)</primary></indexterm>QToolBar::qt_emit(int, QUObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QToolBar::qt_property(int, int, QVariant*)</primary></indexterm>QToolBar::qt_property(int, int, QVariant*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QToolBar::~QToolBar()</primary></indexterm>QToolBar::~QToolBar()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QToolBar::~QToolBar()</primary></indexterm>QToolBar::~QToolBar()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QToolBar::event(QEvent*)</primary></indexterm>QToolBar::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDockWindow::eventFilter(QObject*, QEvent*)</primary></indexterm>QDockWindow::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setName(char const*)</primary></indexterm>QWidget::setName(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::insertChild(QObject*)</primary></indexterm>QObject::insertChild(QObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::removeChild(QObject*)</primary></indexterm>QObject::removeChild(QObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::setProperty(char const*, QVariant const&)</primary></indexterm>QObject::setProperty(char const*, QVariant const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::property(char const*) const</primary></indexterm>QObject::property(char const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QCustomEvent*)</primary></indexterm>QObject::customEvent(QCustomEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::checkConnectArgs(char const*, QObject const*, char const*)</primary></indexterm>QObject::checkConnectArgs(char const*, QObject const*, char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setEnabled(bool)</primary></indexterm>QWidget::setEnabled(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QToolBar::setMinimumSize(int, int)</primary></indexterm>QToolBar::setMinimumSize(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMaximumSize(int, int)</primary></indexterm>QWidget::setMaximumSize(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setSizeIncrement(int, int)</primary></indexterm>QWidget::setSizeIncrement(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundMode(Qt::BackgroundMode)</primary></indexterm>QWidget::setBackgroundMode(Qt::BackgroundMode)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setEraseColor(QColor const&)</primary></indexterm>QWidget::setEraseColor(QColor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setErasePixmap(QPixmap const&)</primary></indexterm>QWidget::setErasePixmap(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setPalette(QPalette const&)</primary></indexterm>QWidget::setPalette(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setPaletteBackgroundColor(QColor const&)</primary></indexterm>QWidget::setPaletteBackgroundColor(QColor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setPaletteBackgroundPixmap(QPixmap const&)</primary></indexterm>QWidget::setPaletteBackgroundPixmap(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFont(QFont const&)</primary></indexterm>QWidget::setFont(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setCursor(QCursor const&)</primary></indexterm>QWidget::setCursor(QCursor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;33&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::unsetCursor()</primary></indexterm>QWidget::unsetCursor()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;34&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMask(QBitmap const&)</primary></indexterm>QWidget::setMask(QBitmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;35&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMask(QRegion const&)</primary></indexterm>QWidget::setMask(QRegion const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;36&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundColor(QColor const&)</primary></indexterm>QWidget::setBackgroundColor(QColor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;37&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundPixmap(QPixmap const&)</primary></indexterm>QWidget::setBackgroundPixmap(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;38&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDockWindow::setCaption(QString const&)</primary></indexterm>QDockWindow::setCaption(QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;39&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setIcon(QPixmap const&)</primary></indexterm>QWidget::setIcon(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;40&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setIconText(QString const&)</primary></indexterm>QWidget::setIconText(QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;41&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMouseTracking(bool)</primary></indexterm>QWidget::setMouseTracking(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;42&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFocus()</primary></indexterm>QWidget::setFocus()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;43&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setActiveWindow()</primary></indexterm>QWidget::setActiveWindow()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;44&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFocusPolicy(QWidget::FocusPolicy)</primary></indexterm>QWidget::setFocusPolicy(QWidget::FocusPolicy)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;45&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFocusProxy(QWidget*)</primary></indexterm>QWidget::setFocusProxy(QWidget*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;46&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setUpdatesEnabled(bool)</primary></indexterm>QWidget::setUpdatesEnabled(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;47&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QToolBar::show()</primary></indexterm>QToolBar::show()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;48&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QToolBar::hide()</primary></indexterm>QToolBar::hide()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;49&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showMinimized()</primary></indexterm>QWidget::showMinimized()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;50&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showMaximized()</primary></indexterm>QWidget::showMaximized()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;51&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showNormal()</primary></indexterm>QWidget::showNormal()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;52&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::polish()</primary></indexterm>QWidget::polish()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;53&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::move(int, int)</primary></indexterm>QWidget::move(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;54&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::resize(int, int)</primary></indexterm>QWidget::resize(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;55&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setGeometry(int, int, int, int)</primary></indexterm>QWidget::setGeometry(int, int, int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;56&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setGeometry(QRect const&)</primary></indexterm>NULL or QWidget::setGeometry(QRect const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;57&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::close(bool)</primary></indexterm>QWidget::close(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;58&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDockWindow::sizeHint() const</primary></indexterm>QDockWindow::sizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;59&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QToolBar::minimumSizeHint() const</primary></indexterm>QToolBar::minimumSizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;60&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::sizePolicy() const</primary></indexterm>QWidget::sizePolicy() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;61&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setSizePolicy(QSizePolicy)</primary></indexterm>QWidget::setSizePolicy(QSizePolicy)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;62&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::heightForWidth(int) const</primary></indexterm>QWidget::heightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;63&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::adjustSize()</primary></indexterm>QWidget::adjustSize()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;64&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::reparent(QWidget*, unsigned int, QPoint const&, bool)</primary></indexterm>QWidget::reparent(QWidget*, unsigned int, QPoint const&, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;65&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setAcceptDrops(bool)</primary></indexterm>QWidget::setAcceptDrops(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;66&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setAutoMask(bool)</primary></indexterm>QWidget::setAutoMask(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;67&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundOrigin(QWidget::BackgroundOrigin)</primary></indexterm>QWidget::setBackgroundOrigin(QWidget::BackgroundOrigin)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;68&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::customWhatsThis() const</primary></indexterm>QWidget::customWhatsThis() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;69&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mousePressEvent(QMouseEvent*)</primary></indexterm>QWidget::mousePressEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;70&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseReleaseEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseReleaseEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;71&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseDoubleClickEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseDoubleClickEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;72&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseMoveEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseMoveEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;73&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::wheelEvent(QWheelEvent*)</primary></indexterm>QWidget::wheelEvent(QWheelEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;74&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyPressEvent(QKeyEvent*)</primary></indexterm>QWidget::keyPressEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;75&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyReleaseEvent(QKeyEvent*)</primary></indexterm>QWidget::keyReleaseEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;76&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusInEvent(QFocusEvent*)</primary></indexterm>QWidget::focusInEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;77&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusOutEvent(QFocusEvent*)</primary></indexterm>QWidget::focusOutEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;78&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enterEvent(QEvent*)</primary></indexterm>QWidget::enterEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;79&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::leaveEvent(QEvent*)</primary></indexterm>QWidget::leaveEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;80&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::paintEvent(QPaintEvent*)</primary></indexterm>QFrame::paintEvent(QPaintEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;81&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::moveEvent(QMoveEvent*)</primary></indexterm>QWidget::moveEvent(QMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;82&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QToolBar::resizeEvent(QResizeEvent*)</primary></indexterm>QToolBar::resizeEvent(QResizeEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;83&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::closeEvent(QCloseEvent*)</primary></indexterm>QWidget::closeEvent(QCloseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;84&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDockWindow::contextMenuEvent(QContextMenuEvent*)</primary></indexterm>QDockWindow::contextMenuEvent(QContextMenuEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;85&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::imStartEvent(QIMEvent*)</primary></indexterm>QWidget::imStartEvent(QIMEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;86&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::imComposeEvent(QIMEvent*)</primary></indexterm>QWidget::imComposeEvent(QIMEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;87&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::imEndEvent(QIMEvent*)</primary></indexterm>QWidget::imEndEvent(QIMEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;88&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::tabletEvent(QTabletEvent*)</primary></indexterm>QWidget::tabletEvent(QTabletEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;89&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragEnterEvent(QDragEnterEvent*)</primary></indexterm>QWidget::dragEnterEvent(QDragEnterEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;90&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragMoveEvent(QDragMoveEvent*)</primary></indexterm>QWidget::dragMoveEvent(QDragMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;91&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragLeaveEvent(QDragLeaveEvent*)</primary></indexterm>QWidget::dragLeaveEvent(QDragLeaveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;92&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dropEvent(QDropEvent*)</primary></indexterm>QWidget::dropEvent(QDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;93&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDockWindow::showEvent(QShowEvent*)</primary></indexterm>QDockWindow::showEvent(QShowEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;94&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDockWindow::hideEvent(QHideEvent*)</primary></indexterm>QDockWindow::hideEvent(QHideEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;95&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::x11Event(_XEvent*)</primary></indexterm>QWidget::x11Event(_XEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;96&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::updateMask()</primary></indexterm>QWidget::updateMask()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;97&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QToolBar::styleChange(QStyle&)</primary></indexterm>QToolBar::styleChange(QStyle&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;98&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enabledChange(bool)</primary></indexterm>QWidget::enabledChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;99&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paletteChange(QPalette const&)</primary></indexterm>QWidget::paletteChange(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;100&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::fontChange(QFont const&)</primary></indexterm>QWidget::fontChange(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;101&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::windowActivationChange(bool)</primary></indexterm>QWidget::windowActivationChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;102&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::metric(int) const</primary></indexterm>QWidget::metric(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;103&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::create(unsigned long, bool, bool)</primary></indexterm>QWidget::create(unsigned long, bool, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;104&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::destroy(bool, bool)</primary></indexterm>QWidget::destroy(bool, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;105&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setWState(unsigned int)</primary></indexterm>NULL or QWidget::setWState(unsigned int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;106&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setWFlags(unsigned int)</primary></indexterm>NULL or QWidget::setWFlags(unsigned int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;107&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusNextPrevChild(bool)</primary></indexterm>QWidget::focusNextPrevChild(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;108&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setKeyCompression(bool)</primary></indexterm>QWidget::setKeyCompression(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;109&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMicroFocusHint(int, int, int, int, bool, QFont*)</primary></indexterm>QWidget::setMicroFocusHint(int, int, int, int, bool, QFont*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;110&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::setFrameStyle(int)</primary></indexterm>QFrame::setFrameStyle(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;111&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::setLineWidth(int)</primary></indexterm>QFrame::setLineWidth(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;112&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::setMargin(int)</primary></indexterm>QFrame::setMargin(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;113&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::setMidLineWidth(int)</primary></indexterm>QFrame::setMidLineWidth(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;114&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::setFrameRect(QRect const&)</primary></indexterm>QFrame::setFrameRect(QRect const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;115&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDockWindow::drawFrame(QPainter*)</primary></indexterm>QDockWindow::drawFrame(QPainter*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;116&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDockWindow::drawContents(QPainter*)</primary></indexterm>QDockWindow::drawContents(QPainter*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;117&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::frameChanged()</primary></indexterm>QFrame::frameChanged()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;118&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDockWindow::setWidget(QWidget*)</primary></indexterm>QDockWindow::setWidget(QWidget*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;119&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDockWindow::setCloseMode(int)</primary></indexterm>QDockWindow::setCloseMode(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;120&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDockWindow::setResizeEnabled(bool)</primary></indexterm>QDockWindow::setResizeEnabled(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;121&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDockWindow::setMovingEnabled(bool)</primary></indexterm>QDockWindow::setMovingEnabled(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;122&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDockWindow::setHorizontallyStretchable(bool)</primary></indexterm>QDockWindow::setHorizontallyStretchable(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;123&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDockWindow::setVerticallyStretchable(bool)</primary></indexterm>QDockWindow::setVerticallyStretchable(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;124&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDockWindow::setOffset(int)</primary></indexterm>QDockWindow::setOffset(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;125&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDockWindow::setFixedExtentWidth(int)</primary></indexterm>QDockWindow::setFixedExtentWidth(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;126&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDockWindow::setFixedExtentHeight(int)</primary></indexterm>QDockWindow::setFixedExtentHeight(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;127&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDockWindow::setNewLine(bool)</primary></indexterm>QDockWindow::setNewLine(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;128&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDockWindow::setOpaqueMoving(bool)</primary></indexterm>QDockWindow::setOpaqueMoving(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;129&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDockWindow::undock(QWidget*)</primary></indexterm>QDockWindow::undock(QWidget*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;130&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDockWindow::undock()</primary></indexterm>NULL or QDockWindow::undock()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;131&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDockWindow::dock()</primary></indexterm>QDockWindow::dock()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;132&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QToolBar::setOrientation(Qt::Orientation)</primary></indexterm>QToolBar::setOrientation(Qt::Orientation)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;133&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QToolBar::setStretchableWidget(QWidget*)</primary></indexterm>QToolBar::setStretchableWidget(QWidget*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;134&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QToolBar::setLabel(QString const&)</primary></indexterm>QToolBar::setLabel(QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;135&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QToolBar::clear()</primary></indexterm>QToolBar::clear()</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--classdata-->
<TABLE id="cls-53090-1">
<TITLE>Secondary vtable for QToolBar</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>-80</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QToolBar</primary></indexterm>typeinfo for QToolBar</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QToolBar::~QToolBar()</primary></indexterm>non-virtual thunk to QToolBar::~QToolBar()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QToolBar::~QToolBar()</primary></indexterm>non-virtual thunk to QToolBar::~QToolBar()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::setResolution(int)</primary></indexterm>QPaintDevice::setResolution(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::resolution() const</primary></indexterm>QPaintDevice::resolution() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::handle() const</primary></indexterm>QPaintDevice::handle() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::x11RenderHandle() const</primary></indexterm>QPaintDevice::x11RenderHandle() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::setX11Data(QPaintDeviceX11Data const*)</primary></indexterm>QPaintDevice::setX11Data(QPaintDeviceX11Data const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::cmd(int, QPainter*, QPDevCmdParam*)</primary></indexterm>QPaintDevice::cmd(int, QPainter*, QPDevCmdParam*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::metric(int) const</primary></indexterm>non-virtual thunk to QWidget::metric(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::fontMet(QFont*, int, char const*, int) const</primary></indexterm>QPaintDevice::fontMet(QFont*, int, char const*, int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::fontInf(QFont*, int) const</primary></indexterm>QPaintDevice::fontInf(QFont*, int) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QToolBar  class
is described by <XREF LINKEND="rtti-59225">
</PARA>
<!--classdata-->
<TABLE ID="rtti-59225">
<TITLE>typeinfo for QToolBar</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QToolBar</primary></indexterm>typeinfo name for QToolBar</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QDockWindow</primary></indexterm>typeinfo for QDockWindow</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QActionGroup</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QActionGroup class
is described in the generic part of this specification.
</PARA>
<PARA>
The Run Time Type Information for the QActionGroup  class
is described by <XREF LINKEND="rtti-58794">
</PARA>
<!--classdata-->
<TABLE ID="rtti-58794">
<TITLE>typeinfo for QActionGroup</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QActionGroup</primary></indexterm>typeinfo name for QActionGroup</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QAction</primary></indexterm>typeinfo for QAction</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QStatusBar</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QStatusBar class
is described by <XREF LINKEND="cls-53693-0">
</PARA>
<!--classdata-->
<TABLE id="cls-53693-0">
<TITLE>Primary vtable for QStatusBar</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QStatusBar</primary></indexterm>typeinfo for QStatusBar</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStatusBar::metaObject() const</primary></indexterm>NULL or QStatusBar::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStatusBar::className() const</primary></indexterm>QStatusBar::className() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStatusBar::qt_cast(char const*)</primary></indexterm>QStatusBar::qt_cast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStatusBar::qt_invoke(int, QUObject*)</primary></indexterm>QStatusBar::qt_invoke(int, QUObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStatusBar::qt_emit(int, QUObject*)</primary></indexterm>QStatusBar::qt_emit(int, QUObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStatusBar::qt_property(int, int, QVariant*)</primary></indexterm>QStatusBar::qt_property(int, int, QVariant*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStatusBar::~QStatusBar()</primary></indexterm>QStatusBar::~QStatusBar()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStatusBar::~QStatusBar()</primary></indexterm>QStatusBar::~QStatusBar()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStatusBar::event(QEvent*)</primary></indexterm>QStatusBar::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::eventFilter(QObject*, QEvent*)</primary></indexterm>QObject::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setName(char const*)</primary></indexterm>QWidget::setName(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::insertChild(QObject*)</primary></indexterm>QObject::insertChild(QObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::removeChild(QObject*)</primary></indexterm>QObject::removeChild(QObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::setProperty(char const*, QVariant const&)</primary></indexterm>QObject::setProperty(char const*, QVariant const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::property(char const*) const</primary></indexterm>QObject::property(char const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QCustomEvent*)</primary></indexterm>QObject::customEvent(QCustomEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::checkConnectArgs(char const*, QObject const*, char const*)</primary></indexterm>QObject::checkConnectArgs(char const*, QObject const*, char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setEnabled(bool)</primary></indexterm>QWidget::setEnabled(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMinimumSize(int, int)</primary></indexterm>QWidget::setMinimumSize(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMaximumSize(int, int)</primary></indexterm>QWidget::setMaximumSize(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setSizeIncrement(int, int)</primary></indexterm>QWidget::setSizeIncrement(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundMode(Qt::BackgroundMode)</primary></indexterm>QWidget::setBackgroundMode(Qt::BackgroundMode)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setEraseColor(QColor const&)</primary></indexterm>QWidget::setEraseColor(QColor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setErasePixmap(QPixmap const&)</primary></indexterm>QWidget::setErasePixmap(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setPalette(QPalette const&)</primary></indexterm>QWidget::setPalette(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setPaletteBackgroundColor(QColor const&)</primary></indexterm>QWidget::setPaletteBackgroundColor(QColor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setPaletteBackgroundPixmap(QPixmap const&)</primary></indexterm>QWidget::setPaletteBackgroundPixmap(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFont(QFont const&)</primary></indexterm>QWidget::setFont(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setCursor(QCursor const&)</primary></indexterm>QWidget::setCursor(QCursor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;33&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::unsetCursor()</primary></indexterm>QWidget::unsetCursor()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;34&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMask(QBitmap const&)</primary></indexterm>QWidget::setMask(QBitmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;35&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMask(QRegion const&)</primary></indexterm>QWidget::setMask(QRegion const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;36&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundColor(QColor const&)</primary></indexterm>QWidget::setBackgroundColor(QColor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;37&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundPixmap(QPixmap const&)</primary></indexterm>QWidget::setBackgroundPixmap(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;38&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setCaption(QString const&)</primary></indexterm>QWidget::setCaption(QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;39&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setIcon(QPixmap const&)</primary></indexterm>QWidget::setIcon(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;40&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setIconText(QString const&)</primary></indexterm>QWidget::setIconText(QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;41&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMouseTracking(bool)</primary></indexterm>QWidget::setMouseTracking(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;42&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFocus()</primary></indexterm>QWidget::setFocus()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;43&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setActiveWindow()</primary></indexterm>QWidget::setActiveWindow()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;44&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFocusPolicy(QWidget::FocusPolicy)</primary></indexterm>QWidget::setFocusPolicy(QWidget::FocusPolicy)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;45&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFocusProxy(QWidget*)</primary></indexterm>QWidget::setFocusProxy(QWidget*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;46&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setUpdatesEnabled(bool)</primary></indexterm>QWidget::setUpdatesEnabled(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;47&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::show()</primary></indexterm>QWidget::show()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;48&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::hide()</primary></indexterm>QWidget::hide()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;49&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showMinimized()</primary></indexterm>QWidget::showMinimized()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;50&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showMaximized()</primary></indexterm>QWidget::showMaximized()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;51&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showNormal()</primary></indexterm>QWidget::showNormal()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;52&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::polish()</primary></indexterm>QWidget::polish()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;53&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::move(int, int)</primary></indexterm>QWidget::move(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;54&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::resize(int, int)</primary></indexterm>QWidget::resize(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;55&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setGeometry(int, int, int, int)</primary></indexterm>QWidget::setGeometry(int, int, int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;56&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setGeometry(QRect const&)</primary></indexterm>NULL or QWidget::setGeometry(QRect const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;57&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::close(bool)</primary></indexterm>QWidget::close(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;58&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::sizeHint() const</primary></indexterm>QWidget::sizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;59&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::minimumSizeHint() const</primary></indexterm>QWidget::minimumSizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;60&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::sizePolicy() const</primary></indexterm>QWidget::sizePolicy() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;61&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setSizePolicy(QSizePolicy)</primary></indexterm>QWidget::setSizePolicy(QSizePolicy)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;62&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::heightForWidth(int) const</primary></indexterm>QWidget::heightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;63&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::adjustSize()</primary></indexterm>QWidget::adjustSize()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;64&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::reparent(QWidget*, unsigned int, QPoint const&, bool)</primary></indexterm>QWidget::reparent(QWidget*, unsigned int, QPoint const&, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;65&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setAcceptDrops(bool)</primary></indexterm>QWidget::setAcceptDrops(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;66&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setAutoMask(bool)</primary></indexterm>QWidget::setAutoMask(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;67&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundOrigin(QWidget::BackgroundOrigin)</primary></indexterm>QWidget::setBackgroundOrigin(QWidget::BackgroundOrigin)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;68&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::customWhatsThis() const</primary></indexterm>QWidget::customWhatsThis() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;69&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mousePressEvent(QMouseEvent*)</primary></indexterm>QWidget::mousePressEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;70&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseReleaseEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseReleaseEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;71&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseDoubleClickEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseDoubleClickEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;72&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseMoveEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseMoveEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;73&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::wheelEvent(QWheelEvent*)</primary></indexterm>QWidget::wheelEvent(QWheelEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;74&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyPressEvent(QKeyEvent*)</primary></indexterm>QWidget::keyPressEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;75&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyReleaseEvent(QKeyEvent*)</primary></indexterm>QWidget::keyReleaseEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;76&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusInEvent(QFocusEvent*)</primary></indexterm>QWidget::focusInEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;77&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusOutEvent(QFocusEvent*)</primary></indexterm>QWidget::focusOutEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;78&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enterEvent(QEvent*)</primary></indexterm>QWidget::enterEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;79&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::leaveEvent(QEvent*)</primary></indexterm>QWidget::leaveEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;80&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStatusBar::paintEvent(QPaintEvent*)</primary></indexterm>QStatusBar::paintEvent(QPaintEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;81&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::moveEvent(QMoveEvent*)</primary></indexterm>QWidget::moveEvent(QMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;82&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStatusBar::resizeEvent(QResizeEvent*)</primary></indexterm>QStatusBar::resizeEvent(QResizeEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;83&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::closeEvent(QCloseEvent*)</primary></indexterm>QWidget::closeEvent(QCloseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;84&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::contextMenuEvent(QContextMenuEvent*)</primary></indexterm>QWidget::contextMenuEvent(QContextMenuEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;85&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::imStartEvent(QIMEvent*)</primary></indexterm>QWidget::imStartEvent(QIMEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;86&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::imComposeEvent(QIMEvent*)</primary></indexterm>QWidget::imComposeEvent(QIMEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;87&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::imEndEvent(QIMEvent*)</primary></indexterm>QWidget::imEndEvent(QIMEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;88&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::tabletEvent(QTabletEvent*)</primary></indexterm>QWidget::tabletEvent(QTabletEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;89&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragEnterEvent(QDragEnterEvent*)</primary></indexterm>QWidget::dragEnterEvent(QDragEnterEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;90&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragMoveEvent(QDragMoveEvent*)</primary></indexterm>QWidget::dragMoveEvent(QDragMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;91&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragLeaveEvent(QDragLeaveEvent*)</primary></indexterm>QWidget::dragLeaveEvent(QDragLeaveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;92&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dropEvent(QDropEvent*)</primary></indexterm>QWidget::dropEvent(QDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;93&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showEvent(QShowEvent*)</primary></indexterm>QWidget::showEvent(QShowEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;94&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::hideEvent(QHideEvent*)</primary></indexterm>QWidget::hideEvent(QHideEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;95&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::x11Event(_XEvent*)</primary></indexterm>QWidget::x11Event(_XEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;96&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::updateMask()</primary></indexterm>QWidget::updateMask()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;97&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::styleChange(QStyle&)</primary></indexterm>QWidget::styleChange(QStyle&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;98&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enabledChange(bool)</primary></indexterm>QWidget::enabledChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;99&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paletteChange(QPalette const&)</primary></indexterm>QWidget::paletteChange(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;100&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::fontChange(QFont const&)</primary></indexterm>QWidget::fontChange(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;101&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::windowActivationChange(bool)</primary></indexterm>QWidget::windowActivationChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;102&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::metric(int) const</primary></indexterm>QWidget::metric(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;103&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::create(unsigned long, bool, bool)</primary></indexterm>QWidget::create(unsigned long, bool, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;104&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::destroy(bool, bool)</primary></indexterm>QWidget::destroy(bool, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;105&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setWState(unsigned int)</primary></indexterm>NULL or QWidget::setWState(unsigned int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;106&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setWFlags(unsigned int)</primary></indexterm>NULL or QWidget::setWFlags(unsigned int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;107&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusNextPrevChild(bool)</primary></indexterm>QWidget::focusNextPrevChild(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;108&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setKeyCompression(bool)</primary></indexterm>QWidget::setKeyCompression(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;109&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMicroFocusHint(int, int, int, int, bool, QFont*)</primary></indexterm>QWidget::setMicroFocusHint(int, int, int, int, bool, QFont*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;110&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStatusBar::addWidget(QWidget*, int, bool)</primary></indexterm>QStatusBar::addWidget(QWidget*, int, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;111&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStatusBar::removeWidget(QWidget*)</primary></indexterm>QStatusBar::removeWidget(QWidget*)</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--classdata-->
<TABLE id="cls-53693-1">
<TITLE>Secondary vtable for QStatusBar</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>-80</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QStatusBar</primary></indexterm>typeinfo for QStatusBar</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QStatusBar::~QStatusBar()</primary></indexterm>non-virtual thunk to QStatusBar::~QStatusBar()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QStatusBar::~QStatusBar()</primary></indexterm>non-virtual thunk to QStatusBar::~QStatusBar()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::setResolution(int)</primary></indexterm>QPaintDevice::setResolution(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::resolution() const</primary></indexterm>QPaintDevice::resolution() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::handle() const</primary></indexterm>QPaintDevice::handle() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::x11RenderHandle() const</primary></indexterm>QPaintDevice::x11RenderHandle() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::setX11Data(QPaintDeviceX11Data const*)</primary></indexterm>QPaintDevice::setX11Data(QPaintDeviceX11Data const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::cmd(int, QPainter*, QPDevCmdParam*)</primary></indexterm>QPaintDevice::cmd(int, QPainter*, QPDevCmdParam*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::metric(int) const</primary></indexterm>non-virtual thunk to QWidget::metric(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::fontMet(QFont*, int, char const*, int) const</primary></indexterm>QPaintDevice::fontMet(QFont*, int, char const*, int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::fontInf(QFont*, int) const</primary></indexterm>QPaintDevice::fontInf(QFont*, int) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QStatusBar  class
is described by <XREF LINKEND="rtti-48799">
</PARA>
<!--classdata-->
<TABLE ID="rtti-48799">
<TITLE>typeinfo for QStatusBar</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QStatusBar</primary></indexterm>typeinfo name for QStatusBar</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QWidget</primary></indexterm>typeinfo for QWidget</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QSizeGrip</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QSizeGrip class
is described by <XREF LINKEND="cls-57878-0">
</PARA>
<!--classdata-->
<TABLE id="cls-57878-0">
<TITLE>Primary vtable for QSizeGrip</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QSizeGrip</primary></indexterm>typeinfo for QSizeGrip</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSizeGrip::metaObject() const</primary></indexterm>NULL or QSizeGrip::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSizeGrip::className() const</primary></indexterm>QSizeGrip::className() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSizeGrip::qt_cast(char const*)</primary></indexterm>QSizeGrip::qt_cast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSizeGrip::qt_invoke(int, QUObject*)</primary></indexterm>QSizeGrip::qt_invoke(int, QUObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSizeGrip::qt_emit(int, QUObject*)</primary></indexterm>QSizeGrip::qt_emit(int, QUObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSizeGrip::qt_property(int, int, QVariant*)</primary></indexterm>QSizeGrip::qt_property(int, int, QVariant*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSizeGrip::~QSizeGrip()</primary></indexterm>QSizeGrip::~QSizeGrip()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSizeGrip::~QSizeGrip()</primary></indexterm>QSizeGrip::~QSizeGrip()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::event(QEvent*)</primary></indexterm>QWidget::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSizeGrip::eventFilter(QObject*, QEvent*)</primary></indexterm>QSizeGrip::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setName(char const*)</primary></indexterm>QWidget::setName(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::insertChild(QObject*)</primary></indexterm>QObject::insertChild(QObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::removeChild(QObject*)</primary></indexterm>QObject::removeChild(QObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::setProperty(char const*, QVariant const&)</primary></indexterm>QObject::setProperty(char const*, QVariant const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::property(char const*) const</primary></indexterm>QObject::property(char const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QCustomEvent*)</primary></indexterm>QObject::customEvent(QCustomEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::checkConnectArgs(char const*, QObject const*, char const*)</primary></indexterm>QObject::checkConnectArgs(char const*, QObject const*, char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setEnabled(bool)</primary></indexterm>QWidget::setEnabled(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMinimumSize(int, int)</primary></indexterm>QWidget::setMinimumSize(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMaximumSize(int, int)</primary></indexterm>QWidget::setMaximumSize(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setSizeIncrement(int, int)</primary></indexterm>QWidget::setSizeIncrement(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundMode(Qt::BackgroundMode)</primary></indexterm>QWidget::setBackgroundMode(Qt::BackgroundMode)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setEraseColor(QColor const&)</primary></indexterm>QWidget::setEraseColor(QColor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setErasePixmap(QPixmap const&)</primary></indexterm>QWidget::setErasePixmap(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setPalette(QPalette const&)</primary></indexterm>QWidget::setPalette(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setPaletteBackgroundColor(QColor const&)</primary></indexterm>QWidget::setPaletteBackgroundColor(QColor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setPaletteBackgroundPixmap(QPixmap const&)</primary></indexterm>QWidget::setPaletteBackgroundPixmap(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFont(QFont const&)</primary></indexterm>QWidget::setFont(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setCursor(QCursor const&)</primary></indexterm>QWidget::setCursor(QCursor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;33&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::unsetCursor()</primary></indexterm>QWidget::unsetCursor()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;34&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMask(QBitmap const&)</primary></indexterm>QWidget::setMask(QBitmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;35&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMask(QRegion const&)</primary></indexterm>QWidget::setMask(QRegion const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;36&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundColor(QColor const&)</primary></indexterm>QWidget::setBackgroundColor(QColor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;37&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundPixmap(QPixmap const&)</primary></indexterm>QWidget::setBackgroundPixmap(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;38&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setCaption(QString const&)</primary></indexterm>QWidget::setCaption(QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;39&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setIcon(QPixmap const&)</primary></indexterm>QWidget::setIcon(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;40&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setIconText(QString const&)</primary></indexterm>QWidget::setIconText(QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;41&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMouseTracking(bool)</primary></indexterm>QWidget::setMouseTracking(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;42&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFocus()</primary></indexterm>QWidget::setFocus()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;43&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setActiveWindow()</primary></indexterm>QWidget::setActiveWindow()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;44&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFocusPolicy(QWidget::FocusPolicy)</primary></indexterm>QWidget::setFocusPolicy(QWidget::FocusPolicy)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;45&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFocusProxy(QWidget*)</primary></indexterm>QWidget::setFocusProxy(QWidget*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;46&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setUpdatesEnabled(bool)</primary></indexterm>QWidget::setUpdatesEnabled(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;47&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::show()</primary></indexterm>QWidget::show()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;48&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::hide()</primary></indexterm>QWidget::hide()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;49&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showMinimized()</primary></indexterm>QWidget::showMinimized()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;50&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showMaximized()</primary></indexterm>QWidget::showMaximized()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;51&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showNormal()</primary></indexterm>QWidget::showNormal()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;52&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::polish()</primary></indexterm>QWidget::polish()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;53&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::move(int, int)</primary></indexterm>QWidget::move(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;54&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::resize(int, int)</primary></indexterm>QWidget::resize(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;55&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setGeometry(int, int, int, int)</primary></indexterm>QWidget::setGeometry(int, int, int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;56&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setGeometry(QRect const&)</primary></indexterm>NULL or QWidget::setGeometry(QRect const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;57&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::close(bool)</primary></indexterm>QWidget::close(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;58&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSizeGrip::sizeHint() const</primary></indexterm>QSizeGrip::sizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;59&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::minimumSizeHint() const</primary></indexterm>QWidget::minimumSizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;60&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::sizePolicy() const</primary></indexterm>QWidget::sizePolicy() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;61&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setSizePolicy(QSizePolicy)</primary></indexterm>QWidget::setSizePolicy(QSizePolicy)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;62&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::heightForWidth(int) const</primary></indexterm>QWidget::heightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;63&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::adjustSize()</primary></indexterm>QWidget::adjustSize()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;64&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::reparent(QWidget*, unsigned int, QPoint const&, bool)</primary></indexterm>QWidget::reparent(QWidget*, unsigned int, QPoint const&, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;65&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setAcceptDrops(bool)</primary></indexterm>QWidget::setAcceptDrops(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;66&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setAutoMask(bool)</primary></indexterm>QWidget::setAutoMask(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;67&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundOrigin(QWidget::BackgroundOrigin)</primary></indexterm>QWidget::setBackgroundOrigin(QWidget::BackgroundOrigin)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;68&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::customWhatsThis() const</primary></indexterm>QWidget::customWhatsThis() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;69&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSizeGrip::mousePressEvent(QMouseEvent*)</primary></indexterm>QSizeGrip::mousePressEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;70&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseReleaseEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseReleaseEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;71&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseDoubleClickEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseDoubleClickEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;72&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSizeGrip::mouseMoveEvent(QMouseEvent*)</primary></indexterm>QSizeGrip::mouseMoveEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;73&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::wheelEvent(QWheelEvent*)</primary></indexterm>QWidget::wheelEvent(QWheelEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;74&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyPressEvent(QKeyEvent*)</primary></indexterm>QWidget::keyPressEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;75&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyReleaseEvent(QKeyEvent*)</primary></indexterm>QWidget::keyReleaseEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;76&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusInEvent(QFocusEvent*)</primary></indexterm>QWidget::focusInEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;77&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusOutEvent(QFocusEvent*)</primary></indexterm>QWidget::focusOutEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;78&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enterEvent(QEvent*)</primary></indexterm>QWidget::enterEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;79&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::leaveEvent(QEvent*)</primary></indexterm>QWidget::leaveEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;80&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSizeGrip::paintEvent(QPaintEvent*)</primary></indexterm>QSizeGrip::paintEvent(QPaintEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;81&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::moveEvent(QMoveEvent*)</primary></indexterm>QWidget::moveEvent(QMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;82&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::resizeEvent(QResizeEvent*)</primary></indexterm>QWidget::resizeEvent(QResizeEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;83&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::closeEvent(QCloseEvent*)</primary></indexterm>QWidget::closeEvent(QCloseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;84&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::contextMenuEvent(QContextMenuEvent*)</primary></indexterm>QWidget::contextMenuEvent(QContextMenuEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;85&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::imStartEvent(QIMEvent*)</primary></indexterm>QWidget::imStartEvent(QIMEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;86&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::imComposeEvent(QIMEvent*)</primary></indexterm>QWidget::imComposeEvent(QIMEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;87&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::imEndEvent(QIMEvent*)</primary></indexterm>QWidget::imEndEvent(QIMEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;88&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::tabletEvent(QTabletEvent*)</primary></indexterm>QWidget::tabletEvent(QTabletEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;89&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragEnterEvent(QDragEnterEvent*)</primary></indexterm>QWidget::dragEnterEvent(QDragEnterEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;90&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragMoveEvent(QDragMoveEvent*)</primary></indexterm>QWidget::dragMoveEvent(QDragMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;91&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragLeaveEvent(QDragLeaveEvent*)</primary></indexterm>QWidget::dragLeaveEvent(QDragLeaveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;92&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dropEvent(QDropEvent*)</primary></indexterm>QWidget::dropEvent(QDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;93&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showEvent(QShowEvent*)</primary></indexterm>QWidget::showEvent(QShowEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;94&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::hideEvent(QHideEvent*)</primary></indexterm>QWidget::hideEvent(QHideEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;95&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::x11Event(_XEvent*)</primary></indexterm>QWidget::x11Event(_XEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;96&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::updateMask()</primary></indexterm>QWidget::updateMask()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;97&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::styleChange(QStyle&)</primary></indexterm>QWidget::styleChange(QStyle&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;98&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enabledChange(bool)</primary></indexterm>QWidget::enabledChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;99&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paletteChange(QPalette const&)</primary></indexterm>QWidget::paletteChange(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;100&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::fontChange(QFont const&)</primary></indexterm>QWidget::fontChange(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;101&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::windowActivationChange(bool)</primary></indexterm>QWidget::windowActivationChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;102&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::metric(int) const</primary></indexterm>QWidget::metric(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;103&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::create(unsigned long, bool, bool)</primary></indexterm>QWidget::create(unsigned long, bool, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;104&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::destroy(bool, bool)</primary></indexterm>QWidget::destroy(bool, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;105&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setWState(unsigned int)</primary></indexterm>NULL or QWidget::setWState(unsigned int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;106&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setWFlags(unsigned int)</primary></indexterm>NULL or QWidget::setWFlags(unsigned int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;107&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusNextPrevChild(bool)</primary></indexterm>QWidget::focusNextPrevChild(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;108&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setKeyCompression(bool)</primary></indexterm>QWidget::setKeyCompression(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;109&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMicroFocusHint(int, int, int, int, bool, QFont*)</primary></indexterm>QWidget::setMicroFocusHint(int, int, int, int, bool, QFont*)</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--classdata-->
<TABLE id="cls-57878-1">
<TITLE>Secondary vtable for QSizeGrip</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>-80</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QSizeGrip</primary></indexterm>typeinfo for QSizeGrip</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QSizeGrip::~QSizeGrip()</primary></indexterm>non-virtual thunk to QSizeGrip::~QSizeGrip()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QSizeGrip::~QSizeGrip()</primary></indexterm>non-virtual thunk to QSizeGrip::~QSizeGrip()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::setResolution(int)</primary></indexterm>QPaintDevice::setResolution(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::resolution() const</primary></indexterm>QPaintDevice::resolution() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::handle() const</primary></indexterm>QPaintDevice::handle() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::x11RenderHandle() const</primary></indexterm>QPaintDevice::x11RenderHandle() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::setX11Data(QPaintDeviceX11Data const*)</primary></indexterm>QPaintDevice::setX11Data(QPaintDeviceX11Data const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::cmd(int, QPainter*, QPDevCmdParam*)</primary></indexterm>QPaintDevice::cmd(int, QPainter*, QPDevCmdParam*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::metric(int) const</primary></indexterm>non-virtual thunk to QWidget::metric(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::fontMet(QFont*, int, char const*, int) const</primary></indexterm>QPaintDevice::fontMet(QFont*, int, char const*, int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::fontInf(QFont*, int) const</primary></indexterm>QPaintDevice::fontInf(QFont*, int) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QSizeGrip  class
is described by <XREF LINKEND="rtti-48765">
</PARA>
<!--classdata-->
<TABLE ID="rtti-48765">
<TITLE>typeinfo for QSizeGrip</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QSizeGrip</primary></indexterm>typeinfo name for QSizeGrip</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QWidget</primary></indexterm>typeinfo for QWidget</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QSessionManager</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QSessionManager class
is described in the generic part of this specification.
</PARA>
<PARA>
The Run Time Type Information for the QSessionManager  class
is described by <XREF LINKEND="rtti-55759">
</PARA>
<!--classdata-->
<TABLE ID="rtti-55759">
<TITLE>typeinfo for QSessionManager</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QSessionManager</primary></indexterm>typeinfo name for QSessionManager</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QObject</primary></indexterm>typeinfo for QObject</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QApplication</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QApplication class
is described in the generic part of this specification.
</PARA>
<PARA>
The Run Time Type Information for the QApplication  class
is described by <XREF LINKEND="rtti-50815">
</PARA>
<!--classdata-->
<TABLE ID="rtti-50815">
<TITLE>typeinfo for QApplication</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QApplication</primary></indexterm>typeinfo name for QApplication</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QObject</primary></indexterm>typeinfo for QObject</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QWorkspace</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QWorkspace class
is described by <XREF LINKEND="cls-59711-0">
</PARA>
<!--classdata-->
<TABLE id="cls-59711-0">
<TITLE>Primary vtable for QWorkspace</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QWorkspace</primary></indexterm>typeinfo for QWorkspace</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWorkspace::metaObject() const</primary></indexterm>NULL or QWorkspace::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWorkspace::className() const</primary></indexterm>QWorkspace::className() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWorkspace::qt_cast(char const*)</primary></indexterm>QWorkspace::qt_cast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWorkspace::qt_invoke(int, QUObject*)</primary></indexterm>QWorkspace::qt_invoke(int, QUObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWorkspace::qt_emit(int, QUObject*)</primary></indexterm>QWorkspace::qt_emit(int, QUObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWorkspace::qt_property(int, int, QVariant*)</primary></indexterm>QWorkspace::qt_property(int, int, QVariant*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWorkspace::~QWorkspace()</primary></indexterm>QWorkspace::~QWorkspace()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWorkspace::~QWorkspace()</primary></indexterm>QWorkspace::~QWorkspace()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::event(QEvent*)</primary></indexterm>QWidget::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWorkspace::eventFilter(QObject*, QEvent*)</primary></indexterm>QWorkspace::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setName(char const*)</primary></indexterm>QWidget::setName(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::insertChild(QObject*)</primary></indexterm>QObject::insertChild(QObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::removeChild(QObject*)</primary></indexterm>QObject::removeChild(QObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::setProperty(char const*, QVariant const&)</primary></indexterm>QObject::setProperty(char const*, QVariant const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::property(char const*) const</primary></indexterm>QObject::property(char const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWorkspace::childEvent(QChildEvent*)</primary></indexterm>QWorkspace::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QCustomEvent*)</primary></indexterm>QObject::customEvent(QCustomEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::checkConnectArgs(char const*, QObject const*, char const*)</primary></indexterm>QObject::checkConnectArgs(char const*, QObject const*, char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setEnabled(bool)</primary></indexterm>QWidget::setEnabled(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMinimumSize(int, int)</primary></indexterm>QWidget::setMinimumSize(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMaximumSize(int, int)</primary></indexterm>QWidget::setMaximumSize(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setSizeIncrement(int, int)</primary></indexterm>QWidget::setSizeIncrement(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundMode(Qt::BackgroundMode)</primary></indexterm>QWidget::setBackgroundMode(Qt::BackgroundMode)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setEraseColor(QColor const&)</primary></indexterm>QWidget::setEraseColor(QColor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setErasePixmap(QPixmap const&)</primary></indexterm>QWidget::setErasePixmap(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setPalette(QPalette const&)</primary></indexterm>QWidget::setPalette(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWorkspace::setPaletteBackgroundColor(QColor const&)</primary></indexterm>QWorkspace::setPaletteBackgroundColor(QColor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWorkspace::setPaletteBackgroundPixmap(QPixmap const&)</primary></indexterm>QWorkspace::setPaletteBackgroundPixmap(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFont(QFont const&)</primary></indexterm>QWidget::setFont(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setCursor(QCursor const&)</primary></indexterm>QWidget::setCursor(QCursor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;33&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::unsetCursor()</primary></indexterm>QWidget::unsetCursor()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;34&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMask(QBitmap const&)</primary></indexterm>QWidget::setMask(QBitmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;35&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMask(QRegion const&)</primary></indexterm>QWidget::setMask(QRegion const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;36&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundColor(QColor const&)</primary></indexterm>QWidget::setBackgroundColor(QColor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;37&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundPixmap(QPixmap const&)</primary></indexterm>QWidget::setBackgroundPixmap(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;38&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setCaption(QString const&)</primary></indexterm>QWidget::setCaption(QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;39&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setIcon(QPixmap const&)</primary></indexterm>QWidget::setIcon(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;40&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setIconText(QString const&)</primary></indexterm>QWidget::setIconText(QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;41&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMouseTracking(bool)</primary></indexterm>QWidget::setMouseTracking(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;42&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFocus()</primary></indexterm>QWidget::setFocus()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;43&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setActiveWindow()</primary></indexterm>QWidget::setActiveWindow()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;44&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFocusPolicy(QWidget::FocusPolicy)</primary></indexterm>QWidget::setFocusPolicy(QWidget::FocusPolicy)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;45&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFocusProxy(QWidget*)</primary></indexterm>QWidget::setFocusProxy(QWidget*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;46&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setUpdatesEnabled(bool)</primary></indexterm>QWidget::setUpdatesEnabled(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;47&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::show()</primary></indexterm>QWidget::show()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;48&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::hide()</primary></indexterm>QWidget::hide()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;49&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showMinimized()</primary></indexterm>QWidget::showMinimized()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;50&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showMaximized()</primary></indexterm>QWidget::showMaximized()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;51&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showNormal()</primary></indexterm>QWidget::showNormal()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;52&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::polish()</primary></indexterm>QWidget::polish()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;53&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::move(int, int)</primary></indexterm>QWidget::move(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;54&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::resize(int, int)</primary></indexterm>QWidget::resize(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;55&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setGeometry(int, int, int, int)</primary></indexterm>QWidget::setGeometry(int, int, int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;56&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setGeometry(QRect const&)</primary></indexterm>NULL or QWidget::setGeometry(QRect const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;57&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::close(bool)</primary></indexterm>QWidget::close(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;58&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWorkspace::sizeHint() const</primary></indexterm>QWorkspace::sizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;59&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::minimumSizeHint() const</primary></indexterm>QWidget::minimumSizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;60&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::sizePolicy() const</primary></indexterm>QWidget::sizePolicy() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;61&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setSizePolicy(QSizePolicy)</primary></indexterm>QWidget::setSizePolicy(QSizePolicy)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;62&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::heightForWidth(int) const</primary></indexterm>QWidget::heightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;63&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::adjustSize()</primary></indexterm>QWidget::adjustSize()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;64&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::reparent(QWidget*, unsigned int, QPoint const&, bool)</primary></indexterm>QWidget::reparent(QWidget*, unsigned int, QPoint const&, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;65&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setAcceptDrops(bool)</primary></indexterm>QWidget::setAcceptDrops(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;66&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setAutoMask(bool)</primary></indexterm>QWidget::setAutoMask(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;67&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundOrigin(QWidget::BackgroundOrigin)</primary></indexterm>QWidget::setBackgroundOrigin(QWidget::BackgroundOrigin)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;68&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::customWhatsThis() const</primary></indexterm>QWidget::customWhatsThis() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;69&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mousePressEvent(QMouseEvent*)</primary></indexterm>QWidget::mousePressEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;70&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseReleaseEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseReleaseEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;71&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseDoubleClickEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseDoubleClickEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;72&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseMoveEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseMoveEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;73&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWorkspace::wheelEvent(QWheelEvent*)</primary></indexterm>QWorkspace::wheelEvent(QWheelEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;74&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyPressEvent(QKeyEvent*)</primary></indexterm>QWidget::keyPressEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;75&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyReleaseEvent(QKeyEvent*)</primary></indexterm>QWidget::keyReleaseEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;76&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusInEvent(QFocusEvent*)</primary></indexterm>QWidget::focusInEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;77&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusOutEvent(QFocusEvent*)</primary></indexterm>QWidget::focusOutEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;78&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enterEvent(QEvent*)</primary></indexterm>QWidget::enterEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;79&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::leaveEvent(QEvent*)</primary></indexterm>QWidget::leaveEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;80&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paintEvent(QPaintEvent*)</primary></indexterm>QWidget::paintEvent(QPaintEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;81&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::moveEvent(QMoveEvent*)</primary></indexterm>QWidget::moveEvent(QMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;82&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWorkspace::resizeEvent(QResizeEvent*)</primary></indexterm>QWorkspace::resizeEvent(QResizeEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;83&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::closeEvent(QCloseEvent*)</primary></indexterm>QWidget::closeEvent(QCloseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;84&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::contextMenuEvent(QContextMenuEvent*)</primary></indexterm>QWidget::contextMenuEvent(QContextMenuEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;85&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::imStartEvent(QIMEvent*)</primary></indexterm>QWidget::imStartEvent(QIMEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;86&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::imComposeEvent(QIMEvent*)</primary></indexterm>QWidget::imComposeEvent(QIMEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;87&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::imEndEvent(QIMEvent*)</primary></indexterm>QWidget::imEndEvent(QIMEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;88&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::tabletEvent(QTabletEvent*)</primary></indexterm>QWidget::tabletEvent(QTabletEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;89&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragEnterEvent(QDragEnterEvent*)</primary></indexterm>QWidget::dragEnterEvent(QDragEnterEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;90&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragMoveEvent(QDragMoveEvent*)</primary></indexterm>QWidget::dragMoveEvent(QDragMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;91&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragLeaveEvent(QDragLeaveEvent*)</primary></indexterm>QWidget::dragLeaveEvent(QDragLeaveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;92&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dropEvent(QDropEvent*)</primary></indexterm>QWidget::dropEvent(QDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;93&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWorkspace::showEvent(QShowEvent*)</primary></indexterm>QWorkspace::showEvent(QShowEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;94&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWorkspace::hideEvent(QHideEvent*)</primary></indexterm>QWorkspace::hideEvent(QHideEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;95&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::x11Event(_XEvent*)</primary></indexterm>QWidget::x11Event(_XEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;96&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::updateMask()</primary></indexterm>QWidget::updateMask()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;97&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWorkspace::styleChange(QStyle&)</primary></indexterm>QWorkspace::styleChange(QStyle&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;98&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enabledChange(bool)</primary></indexterm>QWidget::enabledChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;99&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paletteChange(QPalette const&)</primary></indexterm>QWidget::paletteChange(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;100&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::fontChange(QFont const&)</primary></indexterm>QWidget::fontChange(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;101&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::windowActivationChange(bool)</primary></indexterm>QWidget::windowActivationChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;102&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::metric(int) const</primary></indexterm>QWidget::metric(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;103&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::create(unsigned long, bool, bool)</primary></indexterm>QWidget::create(unsigned long, bool, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;104&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::destroy(bool, bool)</primary></indexterm>QWidget::destroy(bool, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;105&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setWState(unsigned int)</primary></indexterm>NULL or QWidget::setWState(unsigned int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;106&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setWFlags(unsigned int)</primary></indexterm>NULL or QWidget::setWFlags(unsigned int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;107&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusNextPrevChild(bool)</primary></indexterm>QWidget::focusNextPrevChild(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;108&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setKeyCompression(bool)</primary></indexterm>QWidget::setKeyCompression(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;109&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMicroFocusHint(int, int, int, int, bool, QFont*)</primary></indexterm>QWidget::setMicroFocusHint(int, int, int, int, bool, QFont*)</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--classdata-->
<TABLE id="cls-59711-1">
<TITLE>Secondary vtable for QWorkspace</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>-80</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QWorkspace</primary></indexterm>typeinfo for QWorkspace</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWorkspace::~QWorkspace()</primary></indexterm>non-virtual thunk to QWorkspace::~QWorkspace()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWorkspace::~QWorkspace()</primary></indexterm>non-virtual thunk to QWorkspace::~QWorkspace()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::setResolution(int)</primary></indexterm>QPaintDevice::setResolution(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::resolution() const</primary></indexterm>QPaintDevice::resolution() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::handle() const</primary></indexterm>QPaintDevice::handle() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::x11RenderHandle() const</primary></indexterm>QPaintDevice::x11RenderHandle() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::setX11Data(QPaintDeviceX11Data const*)</primary></indexterm>QPaintDevice::setX11Data(QPaintDeviceX11Data const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::cmd(int, QPainter*, QPDevCmdParam*)</primary></indexterm>QPaintDevice::cmd(int, QPainter*, QPDevCmdParam*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::metric(int) const</primary></indexterm>non-virtual thunk to QWidget::metric(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::fontMet(QFont*, int, char const*, int) const</primary></indexterm>QPaintDevice::fontMet(QFont*, int, char const*, int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::fontInf(QFont*, int) const</primary></indexterm>QPaintDevice::fontInf(QFont*, int) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QWorkspace  class
is described by <XREF LINKEND="rtti-54929">
</PARA>
<!--classdata-->
<TABLE ID="rtti-54929">
<TITLE>typeinfo for QWorkspace</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QWorkspace</primary></indexterm>typeinfo name for QWorkspace</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QWidget</primary></indexterm>typeinfo for QWidget</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QAction</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QAction class
is described in the generic part of this specification.
</PARA>
<PARA>
The Run Time Type Information for the QAction  class
is described by <XREF LINKEND="rtti-54254">
</PARA>
<!--classdata-->
<TABLE ID="rtti-54254">
<TITLE>typeinfo for QAction</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QAction</primary></indexterm>typeinfo name for QAction</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QObject</primary></indexterm>typeinfo for QObject</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Interfaces for Qt3 Main Window and Application</TITLE>
<PARA>
An LSB conforming implementation shall provide the architecture specific functions
for Qt3 Main Window and Application specified in <XREF linkend="tbl-libqt-mt-qt3-m-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<TABLE id="tbl-libqt-mt-qt3-m-ints">
<TITLE>libqt-mt - Qt3 Main Window and Application Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>_ZThn80_N10QStatusBarD0Ev</primary></indexterm>_ZThn80_N10QStatusBarD0Ev <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn80_N10QStatusBarD1Ev</primary></indexterm>_ZThn80_N10QStatusBarD1Ev <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn80_N10QWorkspaceD0Ev</primary></indexterm>_ZThn80_N10QWorkspaceD0Ev <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn80_N10QWorkspaceD1Ev</primary></indexterm>_ZThn80_N10QWorkspaceD1Ev <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn80_N8QToolBarD0Ev</primary></indexterm>_ZThn80_N8QToolBarD0Ev <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn80_N8QToolBarD1Ev</primary></indexterm>_ZThn80_N8QToolBarD1Ev <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn80_N9QSizeGripD0Ev</primary></indexterm>_ZThn80_N9QSizeGripD0Ev <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn80_N9QSizeGripD1Ev</primary></indexterm>_ZThn80_N9QSizeGripD1Ev <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn80_N9QTitleBarD0Ev</primary></indexterm>_ZThn80_N9QTitleBarD0Ev <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn80_N9QTitleBarD1Ev</primary></indexterm>_ZThn80_N9QTitleBarD1Ev <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>
</SECT2>
<!-- debug: database interface name Qt3 Widgets -->
<SECT2>
<!--libgroup-->
<TITLE>Qt3 Widgets</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Class data for QFrame</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QFrame class
is described by <XREF LINKEND="cls-58266-0">
</PARA>
<!--classdata-->
<TABLE id="cls-58266-0">
<TITLE>Primary vtable for QFrame</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QFrame</primary></indexterm>typeinfo for QFrame</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::metaObject() const</primary></indexterm>NULL or QFrame::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::className() const</primary></indexterm>QFrame::className() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::qt_cast(char const*)</primary></indexterm>QFrame::qt_cast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::qt_invoke(int, QUObject*)</primary></indexterm>QFrame::qt_invoke(int, QUObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::qt_emit(int, QUObject*)</primary></indexterm>QFrame::qt_emit(int, QUObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::qt_property(int, int, QVariant*)</primary></indexterm>QFrame::qt_property(int, int, QVariant*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::~QFrame()</primary></indexterm>NULL or QFrame::~QFrame()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::~QFrame()</primary></indexterm>NULL or QFrame::~QFrame()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::event(QEvent*)</primary></indexterm>QWidget::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::eventFilter(QObject*, QEvent*)</primary></indexterm>QObject::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setName(char const*)</primary></indexterm>QWidget::setName(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::insertChild(QObject*)</primary></indexterm>QObject::insertChild(QObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::removeChild(QObject*)</primary></indexterm>QObject::removeChild(QObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::setProperty(char const*, QVariant const&)</primary></indexterm>QObject::setProperty(char const*, QVariant const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::property(char const*) const</primary></indexterm>QObject::property(char const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QCustomEvent*)</primary></indexterm>QObject::customEvent(QCustomEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::checkConnectArgs(char const*, QObject const*, char const*)</primary></indexterm>QObject::checkConnectArgs(char const*, QObject const*, char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setEnabled(bool)</primary></indexterm>QWidget::setEnabled(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMinimumSize(int, int)</primary></indexterm>QWidget::setMinimumSize(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMaximumSize(int, int)</primary></indexterm>QWidget::setMaximumSize(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setSizeIncrement(int, int)</primary></indexterm>QWidget::setSizeIncrement(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundMode(Qt::BackgroundMode)</primary></indexterm>QWidget::setBackgroundMode(Qt::BackgroundMode)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setEraseColor(QColor const&)</primary></indexterm>QWidget::setEraseColor(QColor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setErasePixmap(QPixmap const&)</primary></indexterm>QWidget::setErasePixmap(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setPalette(QPalette const&)</primary></indexterm>QWidget::setPalette(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setPaletteBackgroundColor(QColor const&)</primary></indexterm>QWidget::setPaletteBackgroundColor(QColor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setPaletteBackgroundPixmap(QPixmap const&)</primary></indexterm>QWidget::setPaletteBackgroundPixmap(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFont(QFont const&)</primary></indexterm>QWidget::setFont(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setCursor(QCursor const&)</primary></indexterm>QWidget::setCursor(QCursor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;33&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::unsetCursor()</primary></indexterm>QWidget::unsetCursor()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;34&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMask(QBitmap const&)</primary></indexterm>QWidget::setMask(QBitmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;35&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMask(QRegion const&)</primary></indexterm>QWidget::setMask(QRegion const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;36&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundColor(QColor const&)</primary></indexterm>QWidget::setBackgroundColor(QColor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;37&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundPixmap(QPixmap const&)</primary></indexterm>QWidget::setBackgroundPixmap(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;38&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setCaption(QString const&)</primary></indexterm>QWidget::setCaption(QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;39&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setIcon(QPixmap const&)</primary></indexterm>QWidget::setIcon(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;40&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setIconText(QString const&)</primary></indexterm>QWidget::setIconText(QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;41&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMouseTracking(bool)</primary></indexterm>QWidget::setMouseTracking(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;42&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFocus()</primary></indexterm>QWidget::setFocus()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;43&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setActiveWindow()</primary></indexterm>QWidget::setActiveWindow()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;44&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFocusPolicy(QWidget::FocusPolicy)</primary></indexterm>QWidget::setFocusPolicy(QWidget::FocusPolicy)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;45&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFocusProxy(QWidget*)</primary></indexterm>QWidget::setFocusProxy(QWidget*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;46&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setUpdatesEnabled(bool)</primary></indexterm>QWidget::setUpdatesEnabled(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;47&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::show()</primary></indexterm>QWidget::show()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;48&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::hide()</primary></indexterm>QWidget::hide()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;49&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showMinimized()</primary></indexterm>QWidget::showMinimized()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;50&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showMaximized()</primary></indexterm>QWidget::showMaximized()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;51&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showNormal()</primary></indexterm>QWidget::showNormal()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;52&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::polish()</primary></indexterm>QWidget::polish()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;53&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::move(int, int)</primary></indexterm>QWidget::move(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;54&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::resize(int, int)</primary></indexterm>QWidget::resize(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;55&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setGeometry(int, int, int, int)</primary></indexterm>QWidget::setGeometry(int, int, int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;56&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setGeometry(QRect const&)</primary></indexterm>NULL or QWidget::setGeometry(QRect const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;57&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::close(bool)</primary></indexterm>QWidget::close(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;58&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::sizeHint() const</primary></indexterm>QFrame::sizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;59&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::minimumSizeHint() const</primary></indexterm>QWidget::minimumSizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;60&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::sizePolicy() const</primary></indexterm>QWidget::sizePolicy() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;61&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setSizePolicy(QSizePolicy)</primary></indexterm>QWidget::setSizePolicy(QSizePolicy)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;62&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::heightForWidth(int) const</primary></indexterm>QWidget::heightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;63&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::adjustSize()</primary></indexterm>QWidget::adjustSize()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;64&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::reparent(QWidget*, unsigned int, QPoint const&, bool)</primary></indexterm>QWidget::reparent(QWidget*, unsigned int, QPoint const&, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;65&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setAcceptDrops(bool)</primary></indexterm>QWidget::setAcceptDrops(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;66&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setAutoMask(bool)</primary></indexterm>QWidget::setAutoMask(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;67&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundOrigin(QWidget::BackgroundOrigin)</primary></indexterm>QWidget::setBackgroundOrigin(QWidget::BackgroundOrigin)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;68&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::customWhatsThis() const</primary></indexterm>QWidget::customWhatsThis() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;69&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mousePressEvent(QMouseEvent*)</primary></indexterm>QWidget::mousePressEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;70&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseReleaseEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseReleaseEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;71&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseDoubleClickEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseDoubleClickEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;72&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseMoveEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseMoveEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;73&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::wheelEvent(QWheelEvent*)</primary></indexterm>QWidget::wheelEvent(QWheelEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;74&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyPressEvent(QKeyEvent*)</primary></indexterm>QWidget::keyPressEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;75&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyReleaseEvent(QKeyEvent*)</primary></indexterm>QWidget::keyReleaseEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;76&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusInEvent(QFocusEvent*)</primary></indexterm>QWidget::focusInEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;77&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusOutEvent(QFocusEvent*)</primary></indexterm>QWidget::focusOutEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;78&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enterEvent(QEvent*)</primary></indexterm>QWidget::enterEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;79&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::leaveEvent(QEvent*)</primary></indexterm>QWidget::leaveEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;80&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::paintEvent(QPaintEvent*)</primary></indexterm>QFrame::paintEvent(QPaintEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;81&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::moveEvent(QMoveEvent*)</primary></indexterm>QWidget::moveEvent(QMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;82&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::resizeEvent(QResizeEvent*)</primary></indexterm>QFrame::resizeEvent(QResizeEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;83&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::closeEvent(QCloseEvent*)</primary></indexterm>QWidget::closeEvent(QCloseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;84&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::contextMenuEvent(QContextMenuEvent*)</primary></indexterm>QWidget::contextMenuEvent(QContextMenuEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;85&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::imStartEvent(QIMEvent*)</primary></indexterm>QWidget::imStartEvent(QIMEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;86&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::imComposeEvent(QIMEvent*)</primary></indexterm>QWidget::imComposeEvent(QIMEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;87&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::imEndEvent(QIMEvent*)</primary></indexterm>QWidget::imEndEvent(QIMEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;88&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::tabletEvent(QTabletEvent*)</primary></indexterm>QWidget::tabletEvent(QTabletEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;89&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragEnterEvent(QDragEnterEvent*)</primary></indexterm>QWidget::dragEnterEvent(QDragEnterEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;90&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragMoveEvent(QDragMoveEvent*)</primary></indexterm>QWidget::dragMoveEvent(QDragMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;91&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragLeaveEvent(QDragLeaveEvent*)</primary></indexterm>QWidget::dragLeaveEvent(QDragLeaveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;92&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dropEvent(QDropEvent*)</primary></indexterm>QWidget::dropEvent(QDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;93&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showEvent(QShowEvent*)</primary></indexterm>QWidget::showEvent(QShowEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;94&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::hideEvent(QHideEvent*)</primary></indexterm>QWidget::hideEvent(QHideEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;95&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::x11Event(_XEvent*)</primary></indexterm>QWidget::x11Event(_XEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;96&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::updateMask()</primary></indexterm>QWidget::updateMask()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;97&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::styleChange(QStyle&)</primary></indexterm>QFrame::styleChange(QStyle&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;98&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enabledChange(bool)</primary></indexterm>QWidget::enabledChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;99&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paletteChange(QPalette const&)</primary></indexterm>QWidget::paletteChange(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;100&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::fontChange(QFont const&)</primary></indexterm>QWidget::fontChange(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;101&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::windowActivationChange(bool)</primary></indexterm>QWidget::windowActivationChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;102&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::metric(int) const</primary></indexterm>QWidget::metric(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;103&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::create(unsigned long, bool, bool)</primary></indexterm>QWidget::create(unsigned long, bool, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;104&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::destroy(bool, bool)</primary></indexterm>QWidget::destroy(bool, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;105&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setWState(unsigned int)</primary></indexterm>NULL or QWidget::setWState(unsigned int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;106&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setWFlags(unsigned int)</primary></indexterm>NULL or QWidget::setWFlags(unsigned int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;107&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusNextPrevChild(bool)</primary></indexterm>QWidget::focusNextPrevChild(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;108&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setKeyCompression(bool)</primary></indexterm>QWidget::setKeyCompression(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;109&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMicroFocusHint(int, int, int, int, bool, QFont*)</primary></indexterm>QWidget::setMicroFocusHint(int, int, int, int, bool, QFont*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;110&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::setFrameStyle(int)</primary></indexterm>QFrame::setFrameStyle(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;111&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::setLineWidth(int)</primary></indexterm>QFrame::setLineWidth(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;112&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::setMargin(int)</primary></indexterm>QFrame::setMargin(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;113&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::setMidLineWidth(int)</primary></indexterm>QFrame::setMidLineWidth(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;114&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::setFrameRect(QRect const&)</primary></indexterm>QFrame::setFrameRect(QRect const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;115&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::drawFrame(QPainter*)</primary></indexterm>QFrame::drawFrame(QPainter*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;116&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::drawContents(QPainter*)</primary></indexterm>QFrame::drawContents(QPainter*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;117&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::frameChanged()</primary></indexterm>QFrame::frameChanged()</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--classdata-->
<TABLE id="cls-58266-1">
<TITLE>Secondary vtable for QFrame</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>-80</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QFrame</primary></indexterm>typeinfo for QFrame</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QFrame::~QFrame()</primary></indexterm>non-virtual thunk to QFrame::~QFrame()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QFrame::~QFrame()</primary></indexterm>non-virtual thunk to QFrame::~QFrame()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::setResolution(int)</primary></indexterm>QPaintDevice::setResolution(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::resolution() const</primary></indexterm>QPaintDevice::resolution() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::handle() const</primary></indexterm>QPaintDevice::handle() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::x11RenderHandle() const</primary></indexterm>QPaintDevice::x11RenderHandle() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::setX11Data(QPaintDeviceX11Data const*)</primary></indexterm>QPaintDevice::setX11Data(QPaintDeviceX11Data const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::cmd(int, QPainter*, QPDevCmdParam*)</primary></indexterm>QPaintDevice::cmd(int, QPainter*, QPDevCmdParam*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::metric(int) const</primary></indexterm>non-virtual thunk to QWidget::metric(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::fontMet(QFont*, int, char const*, int) const</primary></indexterm>QPaintDevice::fontMet(QFont*, int, char const*, int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::fontInf(QFont*, int) const</primary></indexterm>QPaintDevice::fontInf(QFont*, int) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QFrame  class
is described by <XREF LINKEND="rtti-58740">
</PARA>
<!--classdata-->
<TABLE ID="rtti-58740">
<TITLE>typeinfo for QFrame</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QFrame</primary></indexterm>typeinfo name for QFrame</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QWidget</primary></indexterm>typeinfo for QWidget</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QScrollView</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QScrollView class
is described by <XREF LINKEND="cls-53139-0">
</PARA>
<!--classdata-->
<TABLE id="cls-53139-0">
<TITLE>Primary vtable for QScrollView</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QScrollView</primary></indexterm>typeinfo for QScrollView</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::metaObject() const</primary></indexterm>NULL or QScrollView::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::className() const</primary></indexterm>QScrollView::className() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::qt_cast(char const*)</primary></indexterm>QScrollView::qt_cast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::qt_invoke(int, QUObject*)</primary></indexterm>QScrollView::qt_invoke(int, QUObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::qt_emit(int, QUObject*)</primary></indexterm>QScrollView::qt_emit(int, QUObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::qt_property(int, int, QVariant*)</primary></indexterm>QScrollView::qt_property(int, int, QVariant*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::~QScrollView()</primary></indexterm>QScrollView::~QScrollView()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::~QScrollView()</primary></indexterm>QScrollView::~QScrollView()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::event(QEvent*)</primary></indexterm>QWidget::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::eventFilter(QObject*, QEvent*)</primary></indexterm>QScrollView::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setName(char const*)</primary></indexterm>QWidget::setName(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::insertChild(QObject*)</primary></indexterm>QObject::insertChild(QObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::removeChild(QObject*)</primary></indexterm>QScrollView::removeChild(QObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::setProperty(char const*, QVariant const&)</primary></indexterm>QObject::setProperty(char const*, QVariant const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::property(char const*) const</primary></indexterm>QObject::property(char const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QCustomEvent*)</primary></indexterm>QObject::customEvent(QCustomEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::checkConnectArgs(char const*, QObject const*, char const*)</primary></indexterm>QObject::checkConnectArgs(char const*, QObject const*, char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::setEnabled(bool)</primary></indexterm>QScrollView::setEnabled(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMinimumSize(int, int)</primary></indexterm>QWidget::setMinimumSize(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMaximumSize(int, int)</primary></indexterm>QWidget::setMaximumSize(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setSizeIncrement(int, int)</primary></indexterm>QWidget::setSizeIncrement(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundMode(Qt::BackgroundMode)</primary></indexterm>QWidget::setBackgroundMode(Qt::BackgroundMode)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setEraseColor(QColor const&)</primary></indexterm>QWidget::setEraseColor(QColor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setErasePixmap(QPixmap const&)</primary></indexterm>QWidget::setErasePixmap(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setPalette(QPalette const&)</primary></indexterm>QWidget::setPalette(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setPaletteBackgroundColor(QColor const&)</primary></indexterm>QWidget::setPaletteBackgroundColor(QColor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setPaletteBackgroundPixmap(QPixmap const&)</primary></indexterm>QWidget::setPaletteBackgroundPixmap(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFont(QFont const&)</primary></indexterm>QWidget::setFont(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setCursor(QCursor const&)</primary></indexterm>QWidget::setCursor(QCursor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;33&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::unsetCursor()</primary></indexterm>QWidget::unsetCursor()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;34&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMask(QBitmap const&)</primary></indexterm>QWidget::setMask(QBitmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;35&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMask(QRegion const&)</primary></indexterm>QWidget::setMask(QRegion const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;36&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundColor(QColor const&)</primary></indexterm>QWidget::setBackgroundColor(QColor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;37&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundPixmap(QPixmap const&)</primary></indexterm>QWidget::setBackgroundPixmap(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;38&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setCaption(QString const&)</primary></indexterm>QWidget::setCaption(QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;39&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setIcon(QPixmap const&)</primary></indexterm>QWidget::setIcon(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;40&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setIconText(QString const&)</primary></indexterm>QWidget::setIconText(QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;41&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMouseTracking(bool)</primary></indexterm>QWidget::setMouseTracking(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;42&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFocus()</primary></indexterm>QWidget::setFocus()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;43&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setActiveWindow()</primary></indexterm>QWidget::setActiveWindow()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;44&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFocusPolicy(QWidget::FocusPolicy)</primary></indexterm>QWidget::setFocusPolicy(QWidget::FocusPolicy)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;45&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFocusProxy(QWidget*)</primary></indexterm>QWidget::setFocusProxy(QWidget*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;46&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setUpdatesEnabled(bool)</primary></indexterm>QWidget::setUpdatesEnabled(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;47&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::show()</primary></indexterm>QScrollView::show()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;48&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::hide()</primary></indexterm>QWidget::hide()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;49&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showMinimized()</primary></indexterm>QWidget::showMinimized()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;50&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showMaximized()</primary></indexterm>QWidget::showMaximized()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;51&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showNormal()</primary></indexterm>QWidget::showNormal()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;52&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::polish()</primary></indexterm>QWidget::polish()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;53&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::move(int, int)</primary></indexterm>QWidget::move(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;54&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::resize(int, int)</primary></indexterm>QScrollView::resize(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;55&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setGeometry(int, int, int, int)</primary></indexterm>QWidget::setGeometry(int, int, int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;56&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setGeometry(QRect const&)</primary></indexterm>NULL or QWidget::setGeometry(QRect const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;57&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::close(bool)</primary></indexterm>QWidget::close(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;58&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::sizeHint() const</primary></indexterm>QScrollView::sizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;59&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::minimumSizeHint() const</primary></indexterm>QScrollView::minimumSizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;60&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::sizePolicy() const</primary></indexterm>QWidget::sizePolicy() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;61&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setSizePolicy(QSizePolicy)</primary></indexterm>QWidget::setSizePolicy(QSizePolicy)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;62&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::heightForWidth(int) const</primary></indexterm>QWidget::heightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;63&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::adjustSize()</primary></indexterm>QWidget::adjustSize()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;64&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::reparent(QWidget*, unsigned int, QPoint const&, bool)</primary></indexterm>QWidget::reparent(QWidget*, unsigned int, QPoint const&, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;65&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setAcceptDrops(bool)</primary></indexterm>QWidget::setAcceptDrops(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;66&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setAutoMask(bool)</primary></indexterm>QWidget::setAutoMask(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;67&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundOrigin(QWidget::BackgroundOrigin)</primary></indexterm>QWidget::setBackgroundOrigin(QWidget::BackgroundOrigin)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;68&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::customWhatsThis() const</primary></indexterm>QWidget::customWhatsThis() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;69&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::mousePressEvent(QMouseEvent*)</primary></indexterm>QScrollView::mousePressEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;70&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::mouseReleaseEvent(QMouseEvent*)</primary></indexterm>QScrollView::mouseReleaseEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;71&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::mouseDoubleClickEvent(QMouseEvent*)</primary></indexterm>QScrollView::mouseDoubleClickEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;72&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::mouseMoveEvent(QMouseEvent*)</primary></indexterm>QScrollView::mouseMoveEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;73&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::wheelEvent(QWheelEvent*)</primary></indexterm>QScrollView::wheelEvent(QWheelEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;74&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyPressEvent(QKeyEvent*)</primary></indexterm>QWidget::keyPressEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;75&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyReleaseEvent(QKeyEvent*)</primary></indexterm>QWidget::keyReleaseEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;76&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusInEvent(QFocusEvent*)</primary></indexterm>QWidget::focusInEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;77&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusOutEvent(QFocusEvent*)</primary></indexterm>QWidget::focusOutEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;78&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enterEvent(QEvent*)</primary></indexterm>QWidget::enterEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;79&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::leaveEvent(QEvent*)</primary></indexterm>QWidget::leaveEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;80&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::paintEvent(QPaintEvent*)</primary></indexterm>QFrame::paintEvent(QPaintEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;81&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::moveEvent(QMoveEvent*)</primary></indexterm>QWidget::moveEvent(QMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;82&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::resizeEvent(QResizeEvent*)</primary></indexterm>QScrollView::resizeEvent(QResizeEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;83&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::closeEvent(QCloseEvent*)</primary></indexterm>QWidget::closeEvent(QCloseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;84&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::contextMenuEvent(QContextMenuEvent*)</primary></indexterm>QScrollView::contextMenuEvent(QContextMenuEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;85&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::imStartEvent(QIMEvent*)</primary></indexterm>QWidget::imStartEvent(QIMEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;86&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::imComposeEvent(QIMEvent*)</primary></indexterm>QWidget::imComposeEvent(QIMEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;87&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::imEndEvent(QIMEvent*)</primary></indexterm>QWidget::imEndEvent(QIMEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;88&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::tabletEvent(QTabletEvent*)</primary></indexterm>QWidget::tabletEvent(QTabletEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;89&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragEnterEvent(QDragEnterEvent*)</primary></indexterm>QWidget::dragEnterEvent(QDragEnterEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;90&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragMoveEvent(QDragMoveEvent*)</primary></indexterm>QWidget::dragMoveEvent(QDragMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;91&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragLeaveEvent(QDragLeaveEvent*)</primary></indexterm>QWidget::dragLeaveEvent(QDragLeaveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;92&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dropEvent(QDropEvent*)</primary></indexterm>QWidget::dropEvent(QDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;93&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showEvent(QShowEvent*)</primary></indexterm>QWidget::showEvent(QShowEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;94&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::hideEvent(QHideEvent*)</primary></indexterm>QWidget::hideEvent(QHideEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;95&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::x11Event(_XEvent*)</primary></indexterm>QWidget::x11Event(_XEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;96&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::updateMask()</primary></indexterm>QWidget::updateMask()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;97&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::styleChange(QStyle&)</primary></indexterm>QScrollView::styleChange(QStyle&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;98&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enabledChange(bool)</primary></indexterm>QWidget::enabledChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;99&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paletteChange(QPalette const&)</primary></indexterm>QWidget::paletteChange(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;100&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::fontChange(QFont const&)</primary></indexterm>QScrollView::fontChange(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;101&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::windowActivationChange(bool)</primary></indexterm>QWidget::windowActivationChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;102&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::metric(int) const</primary></indexterm>QWidget::metric(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;103&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::create(unsigned long, bool, bool)</primary></indexterm>QWidget::create(unsigned long, bool, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;104&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::destroy(bool, bool)</primary></indexterm>QWidget::destroy(bool, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;105&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setWState(unsigned int)</primary></indexterm>NULL or QWidget::setWState(unsigned int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;106&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setWFlags(unsigned int)</primary></indexterm>NULL or QWidget::setWFlags(unsigned int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;107&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::focusNextPrevChild(bool)</primary></indexterm>QScrollView::focusNextPrevChild(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;108&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setKeyCompression(bool)</primary></indexterm>QWidget::setKeyCompression(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;109&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMicroFocusHint(int, int, int, int, bool, QFont*)</primary></indexterm>QWidget::setMicroFocusHint(int, int, int, int, bool, QFont*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;110&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::setFrameStyle(int)</primary></indexterm>QFrame::setFrameStyle(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;111&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::setLineWidth(int)</primary></indexterm>QFrame::setLineWidth(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;112&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::setMargin(int)</primary></indexterm>QFrame::setMargin(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;113&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::setMidLineWidth(int)</primary></indexterm>QFrame::setMidLineWidth(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;114&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::setFrameRect(QRect const&)</primary></indexterm>QFrame::setFrameRect(QRect const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;115&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::drawFrame(QPainter*)</primary></indexterm>QFrame::drawFrame(QPainter*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;116&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::drawContents(QPainter*)</primary></indexterm>QScrollView::drawContents(QPainter*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;117&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::frameChanged()</primary></indexterm>QScrollView::frameChanged()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;118&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::setResizePolicy(QScrollView::ResizePolicy)</primary></indexterm>QScrollView::setResizePolicy(QScrollView::ResizePolicy)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;119&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::addChild(QWidget*, int, int)</primary></indexterm>QScrollView::addChild(QWidget*, int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;120&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::moveChild(QWidget*, int, int)</primary></indexterm>QScrollView::moveChild(QWidget*, int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;121&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::setVScrollBarMode(QScrollView::ScrollBarMode)</primary></indexterm>QScrollView::setVScrollBarMode(QScrollView::ScrollBarMode)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;122&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::setHScrollBarMode(QScrollView::ScrollBarMode)</primary></indexterm>QScrollView::setHScrollBarMode(QScrollView::ScrollBarMode)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;123&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::setCornerWidget(QWidget*)</primary></indexterm>QScrollView::setCornerWidget(QWidget*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;124&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::setDragAutoScroll(bool)</primary></indexterm>QScrollView::setDragAutoScroll(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;125&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::resizeContents(int, int)</primary></indexterm>QScrollView::resizeContents(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;126&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::setContentsPos(int, int)</primary></indexterm>QScrollView::setContentsPos(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;127&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::drawContents(QPainter*, int, int, int, int)</primary></indexterm>QScrollView::drawContents(QPainter*, int, int, int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;128&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::drawContentsOffset(QPainter*, int, int, int, int, int, int)</primary></indexterm>QScrollView::drawContentsOffset(QPainter*, int, int, int, int, int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;129&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::contentsMousePressEvent(QMouseEvent*)</primary></indexterm>QScrollView::contentsMousePressEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;130&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::contentsMouseReleaseEvent(QMouseEvent*)</primary></indexterm>QScrollView::contentsMouseReleaseEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;131&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::contentsMouseDoubleClickEvent(QMouseEvent*)</primary></indexterm>QScrollView::contentsMouseDoubleClickEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;132&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::contentsMouseMoveEvent(QMouseEvent*)</primary></indexterm>QScrollView::contentsMouseMoveEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;133&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::contentsDragEnterEvent(QDragEnterEvent*)</primary></indexterm>QScrollView::contentsDragEnterEvent(QDragEnterEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;134&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::contentsDragMoveEvent(QDragMoveEvent*)</primary></indexterm>QScrollView::contentsDragMoveEvent(QDragMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;135&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::contentsDragLeaveEvent(QDragLeaveEvent*)</primary></indexterm>QScrollView::contentsDragLeaveEvent(QDragLeaveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;136&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::contentsDropEvent(QDropEvent*)</primary></indexterm>QScrollView::contentsDropEvent(QDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;137&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::contentsWheelEvent(QWheelEvent*)</primary></indexterm>QScrollView::contentsWheelEvent(QWheelEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;138&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::contentsContextMenuEvent(QContextMenuEvent*)</primary></indexterm>QScrollView::contentsContextMenuEvent(QContextMenuEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;139&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::viewportPaintEvent(QPaintEvent*)</primary></indexterm>QScrollView::viewportPaintEvent(QPaintEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;140&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::viewportResizeEvent(QResizeEvent*)</primary></indexterm>QScrollView::viewportResizeEvent(QResizeEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;141&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::viewportMousePressEvent(QMouseEvent*)</primary></indexterm>QScrollView::viewportMousePressEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;142&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::viewportMouseReleaseEvent(QMouseEvent*)</primary></indexterm>QScrollView::viewportMouseReleaseEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;143&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::viewportMouseDoubleClickEvent(QMouseEvent*)</primary></indexterm>QScrollView::viewportMouseDoubleClickEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;144&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::viewportMouseMoveEvent(QMouseEvent*)</primary></indexterm>QScrollView::viewportMouseMoveEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;145&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::viewportDragEnterEvent(QDragEnterEvent*)</primary></indexterm>QScrollView::viewportDragEnterEvent(QDragEnterEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;146&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::viewportDragMoveEvent(QDragMoveEvent*)</primary></indexterm>QScrollView::viewportDragMoveEvent(QDragMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;147&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::viewportDragLeaveEvent(QDragLeaveEvent*)</primary></indexterm>QScrollView::viewportDragLeaveEvent(QDragLeaveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;148&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::viewportDropEvent(QDropEvent*)</primary></indexterm>QScrollView::viewportDropEvent(QDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;149&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::viewportWheelEvent(QWheelEvent*)</primary></indexterm>QScrollView::viewportWheelEvent(QWheelEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;150&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::viewportContextMenuEvent(QContextMenuEvent*)</primary></indexterm>QScrollView::viewportContextMenuEvent(QContextMenuEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;151&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::setMargins(int, int, int, int)</primary></indexterm>QScrollView::setMargins(int, int, int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;152&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::setHBarGeometry(QScrollBar&, int, int, int, int)</primary></indexterm>QScrollView::setHBarGeometry(QScrollBar&, int, int, int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;153&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::setVBarGeometry(QScrollBar&, int, int, int, int)</primary></indexterm>QScrollView::setVBarGeometry(QScrollBar&, int, int, int, int)</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--classdata-->
<TABLE id="cls-53139-1">
<TITLE>Secondary vtable for QScrollView</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>-80</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QScrollView</primary></indexterm>typeinfo for QScrollView</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QScrollView::~QScrollView()</primary></indexterm>non-virtual thunk to QScrollView::~QScrollView()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QScrollView::~QScrollView()</primary></indexterm>non-virtual thunk to QScrollView::~QScrollView()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::setResolution(int)</primary></indexterm>QPaintDevice::setResolution(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::resolution() const</primary></indexterm>QPaintDevice::resolution() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::handle() const</primary></indexterm>QPaintDevice::handle() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::x11RenderHandle() const</primary></indexterm>QPaintDevice::x11RenderHandle() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::setX11Data(QPaintDeviceX11Data const*)</primary></indexterm>QPaintDevice::setX11Data(QPaintDeviceX11Data const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::cmd(int, QPainter*, QPDevCmdParam*)</primary></indexterm>QPaintDevice::cmd(int, QPainter*, QPDevCmdParam*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::metric(int) const</primary></indexterm>non-virtual thunk to QWidget::metric(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::fontMet(QFont*, int, char const*, int) const</primary></indexterm>QPaintDevice::fontMet(QFont*, int, char const*, int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::fontInf(QFont*, int) const</primary></indexterm>QPaintDevice::fontInf(QFont*, int) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QScrollView  class
is described by <XREF LINKEND="rtti-52594">
</PARA>
<!--classdata-->
<TABLE ID="rtti-52594">
<TITLE>typeinfo for QScrollView</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QScrollView</primary></indexterm>typeinfo name for QScrollView</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QFrame</primary></indexterm>typeinfo for QFrame</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QTextBrowser</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QTextBrowser class
is described by <XREF LINKEND="cls-57227-0">
</PARA>
<!--classdata-->
<TABLE id="cls-57227-0">
<TITLE>Primary vtable for QTextBrowser</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QTextBrowser</primary></indexterm>typeinfo for QTextBrowser</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextBrowser::metaObject() const</primary></indexterm>NULL or QTextBrowser::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextBrowser::className() const</primary></indexterm>QTextBrowser::className() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextBrowser::qt_cast(char const*)</primary></indexterm>QTextBrowser::qt_cast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextBrowser::qt_invoke(int, QUObject*)</primary></indexterm>QTextBrowser::qt_invoke(int, QUObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextBrowser::qt_emit(int, QUObject*)</primary></indexterm>QTextBrowser::qt_emit(int, QUObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextBrowser::qt_property(int, int, QVariant*)</primary></indexterm>QTextBrowser::qt_property(int, int, QVariant*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextBrowser::~QTextBrowser()</primary></indexterm>QTextBrowser::~QTextBrowser()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextBrowser::~QTextBrowser()</primary></indexterm>QTextBrowser::~QTextBrowser()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::event(QEvent*)</primary></indexterm>QTextEdit::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::eventFilter(QObject*, QEvent*)</primary></indexterm>QTextEdit::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setName(char const*)</primary></indexterm>QWidget::setName(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::insertChild(QObject*)</primary></indexterm>QObject::insertChild(QObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::removeChild(QObject*)</primary></indexterm>QScrollView::removeChild(QObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::setProperty(char const*, QVariant const&)</primary></indexterm>QObject::setProperty(char const*, QVariant const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::property(char const*) const</primary></indexterm>QObject::property(char const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QCustomEvent*)</primary></indexterm>QObject::customEvent(QCustomEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::checkConnectArgs(char const*, QObject const*, char const*)</primary></indexterm>QObject::checkConnectArgs(char const*, QObject const*, char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::setEnabled(bool)</primary></indexterm>QTextEdit::setEnabled(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMinimumSize(int, int)</primary></indexterm>QWidget::setMinimumSize(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMaximumSize(int, int)</primary></indexterm>QWidget::setMaximumSize(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setSizeIncrement(int, int)</primary></indexterm>QWidget::setSizeIncrement(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundMode(Qt::BackgroundMode)</primary></indexterm>QWidget::setBackgroundMode(Qt::BackgroundMode)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setEraseColor(QColor const&)</primary></indexterm>QWidget::setEraseColor(QColor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setErasePixmap(QPixmap const&)</primary></indexterm>QWidget::setErasePixmap(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::setPalette(QPalette const&)</primary></indexterm>QTextEdit::setPalette(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setPaletteBackgroundColor(QColor const&)</primary></indexterm>QWidget::setPaletteBackgroundColor(QColor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setPaletteBackgroundPixmap(QPixmap const&)</primary></indexterm>QWidget::setPaletteBackgroundPixmap(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::setFont(QFont const&)</primary></indexterm>QTextEdit::setFont(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setCursor(QCursor const&)</primary></indexterm>QWidget::setCursor(QCursor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;33&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::unsetCursor()</primary></indexterm>QWidget::unsetCursor()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;34&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMask(QBitmap const&)</primary></indexterm>QWidget::setMask(QBitmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;35&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMask(QRegion const&)</primary></indexterm>QWidget::setMask(QRegion const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;36&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundColor(QColor const&)</primary></indexterm>QWidget::setBackgroundColor(QColor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;37&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundPixmap(QPixmap const&)</primary></indexterm>QWidget::setBackgroundPixmap(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;38&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setCaption(QString const&)</primary></indexterm>QWidget::setCaption(QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;39&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setIcon(QPixmap const&)</primary></indexterm>QWidget::setIcon(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;40&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setIconText(QString const&)</primary></indexterm>QWidget::setIconText(QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;41&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMouseTracking(bool)</primary></indexterm>QWidget::setMouseTracking(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;42&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFocus()</primary></indexterm>QWidget::setFocus()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;43&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setActiveWindow()</primary></indexterm>QWidget::setActiveWindow()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;44&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFocusPolicy(QWidget::FocusPolicy)</primary></indexterm>QWidget::setFocusPolicy(QWidget::FocusPolicy)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;45&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFocusProxy(QWidget*)</primary></indexterm>QWidget::setFocusProxy(QWidget*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;46&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setUpdatesEnabled(bool)</primary></indexterm>QWidget::setUpdatesEnabled(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;47&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::show()</primary></indexterm>QScrollView::show()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;48&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::hide()</primary></indexterm>QWidget::hide()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;49&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showMinimized()</primary></indexterm>QWidget::showMinimized()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;50&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showMaximized()</primary></indexterm>QWidget::showMaximized()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;51&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showNormal()</primary></indexterm>QWidget::showNormal()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;52&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::polish()</primary></indexterm>QTextEdit::polish()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;53&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::move(int, int)</primary></indexterm>QWidget::move(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;54&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::resize(int, int)</primary></indexterm>QScrollView::resize(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;55&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setGeometry(int, int, int, int)</primary></indexterm>QWidget::setGeometry(int, int, int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;56&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setGeometry(QRect const&)</primary></indexterm>NULL or QWidget::setGeometry(QRect const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;57&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::close(bool)</primary></indexterm>QWidget::close(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;58&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::sizeHint() const</primary></indexterm>QTextEdit::sizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;59&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::minimumSizeHint() const</primary></indexterm>QScrollView::minimumSizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;60&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::sizePolicy() const</primary></indexterm>QWidget::sizePolicy() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;61&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setSizePolicy(QSizePolicy)</primary></indexterm>QWidget::setSizePolicy(QSizePolicy)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;62&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::heightForWidth(int) const</primary></indexterm>QTextEdit::heightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;63&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::adjustSize()</primary></indexterm>QWidget::adjustSize()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;64&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::reparent(QWidget*, unsigned int, QPoint const&, bool)</primary></indexterm>QWidget::reparent(QWidget*, unsigned int, QPoint const&, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;65&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setAcceptDrops(bool)</primary></indexterm>QWidget::setAcceptDrops(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;66&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setAutoMask(bool)</primary></indexterm>QWidget::setAutoMask(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;67&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundOrigin(QWidget::BackgroundOrigin)</primary></indexterm>QWidget::setBackgroundOrigin(QWidget::BackgroundOrigin)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;68&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::customWhatsThis() const</primary></indexterm>QWidget::customWhatsThis() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;69&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::mousePressEvent(QMouseEvent*)</primary></indexterm>QScrollView::mousePressEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;70&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::mouseReleaseEvent(QMouseEvent*)</primary></indexterm>QScrollView::mouseReleaseEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;71&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::mouseDoubleClickEvent(QMouseEvent*)</primary></indexterm>QScrollView::mouseDoubleClickEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;72&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::mouseMoveEvent(QMouseEvent*)</primary></indexterm>QScrollView::mouseMoveEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;73&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::wheelEvent(QWheelEvent*)</primary></indexterm>QScrollView::wheelEvent(QWheelEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;74&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextBrowser::keyPressEvent(QKeyEvent*)</primary></indexterm>QTextBrowser::keyPressEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;75&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyReleaseEvent(QKeyEvent*)</primary></indexterm>QWidget::keyReleaseEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;76&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusInEvent(QFocusEvent*)</primary></indexterm>QWidget::focusInEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;77&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusOutEvent(QFocusEvent*)</primary></indexterm>QWidget::focusOutEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;78&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enterEvent(QEvent*)</primary></indexterm>QWidget::enterEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;79&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::leaveEvent(QEvent*)</primary></indexterm>QWidget::leaveEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;80&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::paintEvent(QPaintEvent*)</primary></indexterm>QFrame::paintEvent(QPaintEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;81&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::moveEvent(QMoveEvent*)</primary></indexterm>QWidget::moveEvent(QMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;82&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::resizeEvent(QResizeEvent*)</primary></indexterm>QTextEdit::resizeEvent(QResizeEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;83&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::closeEvent(QCloseEvent*)</primary></indexterm>QWidget::closeEvent(QCloseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;84&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::contextMenuEvent(QContextMenuEvent*)</primary></indexterm>QScrollView::contextMenuEvent(QContextMenuEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;85&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::imStartEvent(QIMEvent*)</primary></indexterm>QTextEdit::imStartEvent(QIMEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;86&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::imComposeEvent(QIMEvent*)</primary></indexterm>QTextEdit::imComposeEvent(QIMEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;87&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::imEndEvent(QIMEvent*)</primary></indexterm>QTextEdit::imEndEvent(QIMEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;88&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::tabletEvent(QTabletEvent*)</primary></indexterm>QWidget::tabletEvent(QTabletEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;89&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragEnterEvent(QDragEnterEvent*)</primary></indexterm>QWidget::dragEnterEvent(QDragEnterEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;90&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragMoveEvent(QDragMoveEvent*)</primary></indexterm>QWidget::dragMoveEvent(QDragMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;91&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragLeaveEvent(QDragLeaveEvent*)</primary></indexterm>QWidget::dragLeaveEvent(QDragLeaveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;92&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dropEvent(QDropEvent*)</primary></indexterm>QWidget::dropEvent(QDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;93&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showEvent(QShowEvent*)</primary></indexterm>QWidget::showEvent(QShowEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;94&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::hideEvent(QHideEvent*)</primary></indexterm>QWidget::hideEvent(QHideEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;95&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::x11Event(_XEvent*)</primary></indexterm>QWidget::x11Event(_XEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;96&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::updateMask()</primary></indexterm>QWidget::updateMask()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;97&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::styleChange(QStyle&)</primary></indexterm>QScrollView::styleChange(QStyle&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;98&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enabledChange(bool)</primary></indexterm>QWidget::enabledChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;99&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paletteChange(QPalette const&)</primary></indexterm>QWidget::paletteChange(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;100&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::fontChange(QFont const&)</primary></indexterm>QScrollView::fontChange(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;101&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::windowActivationChange(bool)</primary></indexterm>QTextEdit::windowActivationChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;102&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::metric(int) const</primary></indexterm>QWidget::metric(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;103&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::create(unsigned long, bool, bool)</primary></indexterm>QWidget::create(unsigned long, bool, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;104&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::destroy(bool, bool)</primary></indexterm>QWidget::destroy(bool, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;105&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setWState(unsigned int)</primary></indexterm>NULL or QWidget::setWState(unsigned int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;106&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setWFlags(unsigned int)</primary></indexterm>NULL or QWidget::setWFlags(unsigned int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;107&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::focusNextPrevChild(bool)</primary></indexterm>QTextEdit::focusNextPrevChild(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;108&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setKeyCompression(bool)</primary></indexterm>QWidget::setKeyCompression(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;109&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMicroFocusHint(int, int, int, int, bool, QFont*)</primary></indexterm>QWidget::setMicroFocusHint(int, int, int, int, bool, QFont*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;110&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::setFrameStyle(int)</primary></indexterm>QFrame::setFrameStyle(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;111&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::setLineWidth(int)</primary></indexterm>QFrame::setLineWidth(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;112&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::setMargin(int)</primary></indexterm>QFrame::setMargin(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;113&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::setMidLineWidth(int)</primary></indexterm>QFrame::setMidLineWidth(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;114&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::setFrameRect(QRect const&)</primary></indexterm>QFrame::setFrameRect(QRect const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;115&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::drawFrame(QPainter*)</primary></indexterm>QFrame::drawFrame(QPainter*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;116&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::drawContents(QPainter*)</primary></indexterm>QTextEdit::drawContents(QPainter*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;117&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::frameChanged()</primary></indexterm>QScrollView::frameChanged()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;118&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::setResizePolicy(QScrollView::ResizePolicy)</primary></indexterm>QScrollView::setResizePolicy(QScrollView::ResizePolicy)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;119&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::addChild(QWidget*, int, int)</primary></indexterm>QScrollView::addChild(QWidget*, int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;120&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::moveChild(QWidget*, int, int)</primary></indexterm>QScrollView::moveChild(QWidget*, int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;121&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::setVScrollBarMode(QScrollView::ScrollBarMode)</primary></indexterm>QScrollView::setVScrollBarMode(QScrollView::ScrollBarMode)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;122&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::setHScrollBarMode(QScrollView::ScrollBarMode)</primary></indexterm>QScrollView::setHScrollBarMode(QScrollView::ScrollBarMode)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;123&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::setCornerWidget(QWidget*)</primary></indexterm>QScrollView::setCornerWidget(QWidget*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;124&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::setDragAutoScroll(bool)</primary></indexterm>QScrollView::setDragAutoScroll(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;125&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::resizeContents(int, int)</primary></indexterm>QScrollView::resizeContents(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;126&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::setContentsPos(int, int)</primary></indexterm>QScrollView::setContentsPos(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;127&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::drawContents(QPainter*, int, int, int, int)</primary></indexterm>QTextEdit::drawContents(QPainter*, int, int, int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;128&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::drawContentsOffset(QPainter*, int, int, int, int, int, int)</primary></indexterm>QScrollView::drawContentsOffset(QPainter*, int, int, int, int, int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;129&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::contentsMousePressEvent(QMouseEvent*)</primary></indexterm>QTextEdit::contentsMousePressEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;130&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::contentsMouseReleaseEvent(QMouseEvent*)</primary></indexterm>QTextEdit::contentsMouseReleaseEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;131&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::contentsMouseDoubleClickEvent(QMouseEvent*)</primary></indexterm>QTextEdit::contentsMouseDoubleClickEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;132&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::contentsMouseMoveEvent(QMouseEvent*)</primary></indexterm>QTextEdit::contentsMouseMoveEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;133&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::contentsDragEnterEvent(QDragEnterEvent*)</primary></indexterm>QTextEdit::contentsDragEnterEvent(QDragEnterEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;134&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::contentsDragMoveEvent(QDragMoveEvent*)</primary></indexterm>QTextEdit::contentsDragMoveEvent(QDragMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;135&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::contentsDragLeaveEvent(QDragLeaveEvent*)</primary></indexterm>QTextEdit::contentsDragLeaveEvent(QDragLeaveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;136&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::contentsDropEvent(QDropEvent*)</primary></indexterm>QTextEdit::contentsDropEvent(QDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;137&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::contentsWheelEvent(QWheelEvent*)</primary></indexterm>QTextEdit::contentsWheelEvent(QWheelEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;138&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::contentsContextMenuEvent(QContextMenuEvent*)</primary></indexterm>QTextEdit::contentsContextMenuEvent(QContextMenuEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;139&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::viewportPaintEvent(QPaintEvent*)</primary></indexterm>QScrollView::viewportPaintEvent(QPaintEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;140&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::viewportResizeEvent(QResizeEvent*)</primary></indexterm>QTextEdit::viewportResizeEvent(QResizeEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;141&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::viewportMousePressEvent(QMouseEvent*)</primary></indexterm>QScrollView::viewportMousePressEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;142&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::viewportMouseReleaseEvent(QMouseEvent*)</primary></indexterm>QScrollView::viewportMouseReleaseEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;143&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::viewportMouseDoubleClickEvent(QMouseEvent*)</primary></indexterm>QScrollView::viewportMouseDoubleClickEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;144&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::viewportMouseMoveEvent(QMouseEvent*)</primary></indexterm>QScrollView::viewportMouseMoveEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;145&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::viewportDragEnterEvent(QDragEnterEvent*)</primary></indexterm>QScrollView::viewportDragEnterEvent(QDragEnterEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;146&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::viewportDragMoveEvent(QDragMoveEvent*)</primary></indexterm>QScrollView::viewportDragMoveEvent(QDragMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;147&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::viewportDragLeaveEvent(QDragLeaveEvent*)</primary></indexterm>QScrollView::viewportDragLeaveEvent(QDragLeaveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;148&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::viewportDropEvent(QDropEvent*)</primary></indexterm>QScrollView::viewportDropEvent(QDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;149&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::viewportWheelEvent(QWheelEvent*)</primary></indexterm>QScrollView::viewportWheelEvent(QWheelEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;150&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::viewportContextMenuEvent(QContextMenuEvent*)</primary></indexterm>QScrollView::viewportContextMenuEvent(QContextMenuEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;151&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::setMargins(int, int, int, int)</primary></indexterm>QScrollView::setMargins(int, int, int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;152&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::setHBarGeometry(QScrollBar&, int, int, int, int)</primary></indexterm>QScrollView::setHBarGeometry(QScrollBar&, int, int, int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;153&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::setVBarGeometry(QScrollBar&, int, int, int, int)</primary></indexterm>QScrollView::setVBarGeometry(QScrollBar&, int, int, int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;154&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::find(QString const&, bool, bool, bool, int*, int*)</primary></indexterm>QTextEdit::find(QString const&, bool, bool, bool, int*, int*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;155&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::getFormat(int, int, QFont*, QColor*, QTextEdit::VerticalAlignment*)</primary></indexterm>QTextEdit::getFormat(int, int, QFont*, QColor*, QTextEdit::VerticalAlignment*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;156&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::getParagraphFormat(int, QFont*, QColor*, QTextEdit::VerticalAlignment*, int*, QStyleSheetItem::DisplayMode*, QStyleSheetItem::ListStyle*, int*)</primary></indexterm>QTextEdit::getParagraphFormat(int, QFont*, QColor*, QTextEdit::VerticalAlignment*, int*, QStyleSheetItem::DisplayMode*, QStyleSheetItem::ListStyle*, int*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;157&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::setMimeSourceFactory(QMimeSourceFactory*)</primary></indexterm>QTextEdit::setMimeSourceFactory(QMimeSourceFactory*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;158&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::setStyleSheet(QStyleSheet*)</primary></indexterm>QTextEdit::setStyleSheet(QStyleSheet*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;159&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::scrollToAnchor(QString const&)</primary></indexterm>QTextEdit::scrollToAnchor(QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;160&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::setPaper(QBrush const&)</primary></indexterm>QTextEdit::setPaper(QBrush const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;161&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::setLinkUnderline(bool)</primary></indexterm>QTextEdit::setLinkUnderline(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;162&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::setWordWrap(QTextEdit::WordWrap)</primary></indexterm>QTextEdit::setWordWrap(QTextEdit::WordWrap)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;163&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::setWrapColumnOrWidth(int)</primary></indexterm>QTextEdit::setWrapColumnOrWidth(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;164&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::setWrapPolicy(QTextEdit::WrapPolicy)</primary></indexterm>QTextEdit::setWrapPolicy(QTextEdit::WrapPolicy)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;165&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::copy()</primary></indexterm>QTextEdit::copy()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;166&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::append(QString const&)</primary></indexterm>QTextEdit::append(QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;167&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextBrowser::setText(QString const&, QString const&)</primary></indexterm>QTextBrowser::setText(QString const&, QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;168&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::setTextFormat(Qt::TextFormat)</primary></indexterm>QTextEdit::setTextFormat(Qt::TextFormat)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;169&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::selectAll(bool)</primary></indexterm>QTextEdit::selectAll(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;170&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::setTabStopWidth(int)</primary></indexterm>QTextEdit::setTabStopWidth(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;171&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::zoomIn(int)</primary></indexterm>QTextEdit::zoomIn(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;172&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::zoomIn()</primary></indexterm>NULL or QTextEdit::zoomIn()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;173&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::zoomOut(int)</primary></indexterm>QTextEdit::zoomOut(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;174&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::zoomOut()</primary></indexterm>NULL or QTextEdit::zoomOut()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;175&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::zoomTo(int)</primary></indexterm>QTextEdit::zoomTo(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;176&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::sync()</primary></indexterm>QTextEdit::sync()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;177&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::setReadOnly(bool)</primary></indexterm>QTextEdit::setReadOnly(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;178&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::undo()</primary></indexterm>QTextEdit::undo()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;179&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::redo()</primary></indexterm>QTextEdit::redo()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;180&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::cut()</primary></indexterm>QTextEdit::cut()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;181&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::paste()</primary></indexterm>QTextEdit::paste()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;182&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::pasteSubType(QCString const&)</primary></indexterm>QTextEdit::pasteSubType(QCString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;183&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::clear()</primary></indexterm>QTextEdit::clear()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;184&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::del()</primary></indexterm>QTextEdit::del()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;185&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::indent()</primary></indexterm>QTextEdit::indent()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;186&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::setItalic(bool)</primary></indexterm>QTextEdit::setItalic(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;187&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::setBold(bool)</primary></indexterm>QTextEdit::setBold(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;188&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::setUnderline(bool)</primary></indexterm>QTextEdit::setUnderline(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;189&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::setFamily(QString const&)</primary></indexterm>QTextEdit::setFamily(QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;190&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::setPointSize(int)</primary></indexterm>QTextEdit::setPointSize(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;191&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::setColor(QColor const&)</primary></indexterm>QTextEdit::setColor(QColor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;192&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::setVerticalAlignment(QTextEdit::VerticalAlignment)</primary></indexterm>QTextEdit::setVerticalAlignment(QTextEdit::VerticalAlignment)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;193&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::setAlignment(int)</primary></indexterm>QTextEdit::setAlignment(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;194&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::setParagType(QStyleSheetItem::DisplayMode, QStyleSheetItem::ListStyle)</primary></indexterm>QTextEdit::setParagType(QStyleSheetItem::DisplayMode, QStyleSheetItem::ListStyle)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;195&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::setCursorPosition(int, int)</primary></indexterm>QTextEdit::setCursorPosition(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;196&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::setSelection(int, int, int, int, int)</primary></indexterm>QTextEdit::setSelection(int, int, int, int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;197&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::setSelectionAttributes(int, QColor const&, bool)</primary></indexterm>QTextEdit::setSelectionAttributes(int, QColor const&, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;198&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::setModified(bool)</primary></indexterm>QTextEdit::setModified(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;199&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::resetFormat()</primary></indexterm>QTextEdit::resetFormat()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;200&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::setUndoDepth(int)</primary></indexterm>QTextEdit::setUndoDepth(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;201&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::setFormat(QTextFormat*, int)</primary></indexterm>QTextEdit::setFormat(QTextFormat*, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;202&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::ensureCursorVisible()</primary></indexterm>QTextEdit::ensureCursorVisible()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;203&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::placeCursor(QPoint const&, QTextCursor*)</primary></indexterm>QTextEdit::placeCursor(QPoint const&, QTextCursor*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;204&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::moveCursor(QTextEdit::CursorAction, bool)</primary></indexterm>QTextEdit::moveCursor(QTextEdit::CursorAction, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;205&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::doKeyboardAction(QTextEdit::KeyboardAction)</primary></indexterm>QTextEdit::doKeyboardAction(QTextEdit::KeyboardAction)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;206&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::removeSelectedText(int)</primary></indexterm>QTextEdit::removeSelectedText(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;207&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::removeSelection(int)</primary></indexterm>QTextEdit::removeSelection(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;208&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::setCurrentFont(QFont const&)</primary></indexterm>NULL or QTextEdit::setCurrentFont(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;209&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::setOverwriteMode(bool)</primary></indexterm>NULL or QTextEdit::setOverwriteMode(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;210&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::scrollToBottom()</primary></indexterm>QTextEdit::scrollToBottom()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;211&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::insert(QString const&, bool, bool, bool)</primary></indexterm>QTextEdit::insert(QString const&, bool, bool, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;212&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::insertAt(QString const&, int, int)</primary></indexterm>QTextEdit::insertAt(QString const&, int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;213&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::removeParagraph(int)</primary></indexterm>QTextEdit::removeParagraph(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;214&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::insertParagraph(QString const&, int)</primary></indexterm>QTextEdit::insertParagraph(QString const&, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;215&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::setParagraphBackgroundColor(int, QColor const&)</primary></indexterm>QTextEdit::setParagraphBackgroundColor(int, QColor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;216&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::clearParagraphBackground(int)</primary></indexterm>QTextEdit::clearParagraphBackground(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;217&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::setUndoRedoEnabled(bool)</primary></indexterm>QTextEdit::setUndoRedoEnabled(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;218&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::createPopupMenu(QPoint const&)</primary></indexterm>QTextEdit::createPopupMenu(QPoint const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;219&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::createPopupMenu()</primary></indexterm>QTextEdit::createPopupMenu()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;220&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::doChangeInterval()</primary></indexterm>QTextEdit::doChangeInterval()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;221&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextBrowser::linksEnabled() const</primary></indexterm>NULL or QTextBrowser::linksEnabled() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;222&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextBrowser::emitHighlighted(QString const&)</primary></indexterm>QTextBrowser::emitHighlighted(QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;223&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextBrowser::emitLinkClicked(QString const&)</primary></indexterm>QTextBrowser::emitLinkClicked(QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;224&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextBrowser::setSource(QString const&)</primary></indexterm>QTextBrowser::setSource(QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;225&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextBrowser::backward()</primary></indexterm>QTextBrowser::backward()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;226&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextBrowser::forward()</primary></indexterm>QTextBrowser::forward()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;227&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextBrowser::home()</primary></indexterm>QTextBrowser::home()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;228&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextBrowser::reload()</primary></indexterm>QTextBrowser::reload()</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--classdata-->
<TABLE id="cls-57227-1">
<TITLE>Secondary vtable for QTextBrowser</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>-80</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QTextBrowser</primary></indexterm>typeinfo for QTextBrowser</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QTextBrowser::~QTextBrowser()</primary></indexterm>non-virtual thunk to QTextBrowser::~QTextBrowser()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QTextBrowser::~QTextBrowser()</primary></indexterm>non-virtual thunk to QTextBrowser::~QTextBrowser()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::setResolution(int)</primary></indexterm>QPaintDevice::setResolution(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::resolution() const</primary></indexterm>QPaintDevice::resolution() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::handle() const</primary></indexterm>QPaintDevice::handle() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::x11RenderHandle() const</primary></indexterm>QPaintDevice::x11RenderHandle() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::setX11Data(QPaintDeviceX11Data const*)</primary></indexterm>QPaintDevice::setX11Data(QPaintDeviceX11Data const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::cmd(int, QPainter*, QPDevCmdParam*)</primary></indexterm>QPaintDevice::cmd(int, QPainter*, QPDevCmdParam*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::metric(int) const</primary></indexterm>non-virtual thunk to QWidget::metric(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::fontMet(QFont*, int, char const*, int) const</primary></indexterm>QPaintDevice::fontMet(QFont*, int, char const*, int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::fontInf(QFont*, int) const</primary></indexterm>QPaintDevice::fontInf(QFont*, int) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QTextBrowser  class
is described by <XREF LINKEND="rtti-54911">
</PARA>
<!--classdata-->
<TABLE ID="rtti-54911">
<TITLE>typeinfo for QTextBrowser</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QTextBrowser</primary></indexterm>typeinfo name for QTextBrowser</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QTextEdit</primary></indexterm>typeinfo for QTextEdit</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QLineEdit</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QLineEdit class
is described by <XREF LINKEND="cls-52235-0">
</PARA>
<!--classdata-->
<TABLE id="cls-52235-0">
<TITLE>Primary vtable for QLineEdit</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QLineEdit</primary></indexterm>typeinfo for QLineEdit</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLineEdit::metaObject() const</primary></indexterm>NULL or QLineEdit::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLineEdit::className() const</primary></indexterm>QLineEdit::className() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLineEdit::qt_cast(char const*)</primary></indexterm>QLineEdit::qt_cast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLineEdit::qt_invoke(int, QUObject*)</primary></indexterm>QLineEdit::qt_invoke(int, QUObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLineEdit::qt_emit(int, QUObject*)</primary></indexterm>QLineEdit::qt_emit(int, QUObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLineEdit::qt_property(int, int, QVariant*)</primary></indexterm>QLineEdit::qt_property(int, int, QVariant*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLineEdit::~QLineEdit()</primary></indexterm>QLineEdit::~QLineEdit()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLineEdit::~QLineEdit()</primary></indexterm>QLineEdit::~QLineEdit()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLineEdit::event(QEvent*)</primary></indexterm>QLineEdit::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::eventFilter(QObject*, QEvent*)</primary></indexterm>QObject::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setName(char const*)</primary></indexterm>QWidget::setName(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::insertChild(QObject*)</primary></indexterm>QObject::insertChild(QObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::removeChild(QObject*)</primary></indexterm>QObject::removeChild(QObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::setProperty(char const*, QVariant const&)</primary></indexterm>QObject::setProperty(char const*, QVariant const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::property(char const*) const</primary></indexterm>QObject::property(char const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QCustomEvent*)</primary></indexterm>QObject::customEvent(QCustomEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::checkConnectArgs(char const*, QObject const*, char const*)</primary></indexterm>QObject::checkConnectArgs(char const*, QObject const*, char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setEnabled(bool)</primary></indexterm>QWidget::setEnabled(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMinimumSize(int, int)</primary></indexterm>QWidget::setMinimumSize(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMaximumSize(int, int)</primary></indexterm>QWidget::setMaximumSize(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setSizeIncrement(int, int)</primary></indexterm>QWidget::setSizeIncrement(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundMode(Qt::BackgroundMode)</primary></indexterm>QWidget::setBackgroundMode(Qt::BackgroundMode)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setEraseColor(QColor const&)</primary></indexterm>QWidget::setEraseColor(QColor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setErasePixmap(QPixmap const&)</primary></indexterm>QWidget::setErasePixmap(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLineEdit::setPalette(QPalette const&)</primary></indexterm>QLineEdit::setPalette(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setPaletteBackgroundColor(QColor const&)</primary></indexterm>QWidget::setPaletteBackgroundColor(QColor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setPaletteBackgroundPixmap(QPixmap const&)</primary></indexterm>QWidget::setPaletteBackgroundPixmap(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLineEdit::setFont(QFont const&)</primary></indexterm>QLineEdit::setFont(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setCursor(QCursor const&)</primary></indexterm>QWidget::setCursor(QCursor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;33&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::unsetCursor()</primary></indexterm>QWidget::unsetCursor()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;34&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMask(QBitmap const&)</primary></indexterm>QWidget::setMask(QBitmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;35&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMask(QRegion const&)</primary></indexterm>QWidget::setMask(QRegion const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;36&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundColor(QColor const&)</primary></indexterm>QWidget::setBackgroundColor(QColor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;37&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundPixmap(QPixmap const&)</primary></indexterm>QWidget::setBackgroundPixmap(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;38&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setCaption(QString const&)</primary></indexterm>QWidget::setCaption(QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;39&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setIcon(QPixmap const&)</primary></indexterm>QWidget::setIcon(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;40&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setIconText(QString const&)</primary></indexterm>QWidget::setIconText(QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;41&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMouseTracking(bool)</primary></indexterm>QWidget::setMouseTracking(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;42&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFocus()</primary></indexterm>QWidget::setFocus()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;43&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setActiveWindow()</primary></indexterm>QWidget::setActiveWindow()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;44&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFocusPolicy(QWidget::FocusPolicy)</primary></indexterm>QWidget::setFocusPolicy(QWidget::FocusPolicy)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;45&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFocusProxy(QWidget*)</primary></indexterm>QWidget::setFocusProxy(QWidget*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;46&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setUpdatesEnabled(bool)</primary></indexterm>QWidget::setUpdatesEnabled(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;47&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::show()</primary></indexterm>QWidget::show()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;48&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::hide()</primary></indexterm>QWidget::hide()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;49&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showMinimized()</primary></indexterm>QWidget::showMinimized()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;50&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showMaximized()</primary></indexterm>QWidget::showMaximized()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;51&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showNormal()</primary></indexterm>QWidget::showNormal()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;52&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::polish()</primary></indexterm>QWidget::polish()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;53&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::move(int, int)</primary></indexterm>QWidget::move(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;54&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::resize(int, int)</primary></indexterm>QWidget::resize(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;55&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setGeometry(int, int, int, int)</primary></indexterm>QWidget::setGeometry(int, int, int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;56&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setGeometry(QRect const&)</primary></indexterm>NULL or QWidget::setGeometry(QRect const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;57&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::close(bool)</primary></indexterm>QWidget::close(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;58&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLineEdit::sizeHint() const</primary></indexterm>QLineEdit::sizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;59&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLineEdit::minimumSizeHint() const</primary></indexterm>QLineEdit::minimumSizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;60&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::sizePolicy() const</primary></indexterm>QWidget::sizePolicy() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;61&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setSizePolicy(QSizePolicy)</primary></indexterm>QWidget::setSizePolicy(QSizePolicy)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;62&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::heightForWidth(int) const</primary></indexterm>QWidget::heightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;63&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::adjustSize()</primary></indexterm>QWidget::adjustSize()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;64&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::reparent(QWidget*, unsigned int, QPoint const&, bool)</primary></indexterm>QWidget::reparent(QWidget*, unsigned int, QPoint const&, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;65&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setAcceptDrops(bool)</primary></indexterm>QWidget::setAcceptDrops(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;66&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setAutoMask(bool)</primary></indexterm>QWidget::setAutoMask(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;67&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundOrigin(QWidget::BackgroundOrigin)</primary></indexterm>QWidget::setBackgroundOrigin(QWidget::BackgroundOrigin)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;68&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::customWhatsThis() const</primary></indexterm>QWidget::customWhatsThis() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;69&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLineEdit::mousePressEvent(QMouseEvent*)</primary></indexterm>QLineEdit::mousePressEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;70&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLineEdit::mouseReleaseEvent(QMouseEvent*)</primary></indexterm>QLineEdit::mouseReleaseEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;71&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLineEdit::mouseDoubleClickEvent(QMouseEvent*)</primary></indexterm>QLineEdit::mouseDoubleClickEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;72&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLineEdit::mouseMoveEvent(QMouseEvent*)</primary></indexterm>QLineEdit::mouseMoveEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;73&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::wheelEvent(QWheelEvent*)</primary></indexterm>QWidget::wheelEvent(QWheelEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;74&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLineEdit::keyPressEvent(QKeyEvent*)</primary></indexterm>QLineEdit::keyPressEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;75&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyReleaseEvent(QKeyEvent*)</primary></indexterm>QWidget::keyReleaseEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;76&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLineEdit::focusInEvent(QFocusEvent*)</primary></indexterm>QLineEdit::focusInEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;77&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLineEdit::focusOutEvent(QFocusEvent*)</primary></indexterm>QLineEdit::focusOutEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;78&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enterEvent(QEvent*)</primary></indexterm>QWidget::enterEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;79&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::leaveEvent(QEvent*)</primary></indexterm>QWidget::leaveEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;80&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::paintEvent(QPaintEvent*)</primary></indexterm>QFrame::paintEvent(QPaintEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;81&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::moveEvent(QMoveEvent*)</primary></indexterm>QWidget::moveEvent(QMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;82&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLineEdit::resizeEvent(QResizeEvent*)</primary></indexterm>QLineEdit::resizeEvent(QResizeEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;83&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::closeEvent(QCloseEvent*)</primary></indexterm>QWidget::closeEvent(QCloseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;84&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLineEdit::contextMenuEvent(QContextMenuEvent*)</primary></indexterm>QLineEdit::contextMenuEvent(QContextMenuEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;85&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLineEdit::imStartEvent(QIMEvent*)</primary></indexterm>QLineEdit::imStartEvent(QIMEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;86&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLineEdit::imComposeEvent(QIMEvent*)</primary></indexterm>QLineEdit::imComposeEvent(QIMEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;87&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLineEdit::imEndEvent(QIMEvent*)</primary></indexterm>QLineEdit::imEndEvent(QIMEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;88&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::tabletEvent(QTabletEvent*)</primary></indexterm>QWidget::tabletEvent(QTabletEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;89&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLineEdit::dragEnterEvent(QDragEnterEvent*)</primary></indexterm>QLineEdit::dragEnterEvent(QDragEnterEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;90&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLineEdit::dragMoveEvent(QDragMoveEvent*)</primary></indexterm>QLineEdit::dragMoveEvent(QDragMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;91&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLineEdit::dragLeaveEvent(QDragLeaveEvent*)</primary></indexterm>QLineEdit::dragLeaveEvent(QDragLeaveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;92&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLineEdit::dropEvent(QDropEvent*)</primary></indexterm>QLineEdit::dropEvent(QDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;93&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showEvent(QShowEvent*)</primary></indexterm>QWidget::showEvent(QShowEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;94&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::hideEvent(QHideEvent*)</primary></indexterm>QWidget::hideEvent(QHideEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;95&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::x11Event(_XEvent*)</primary></indexterm>QWidget::x11Event(_XEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;96&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::updateMask()</primary></indexterm>QWidget::updateMask()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;97&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::styleChange(QStyle&)</primary></indexterm>QFrame::styleChange(QStyle&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;98&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enabledChange(bool)</primary></indexterm>QWidget::enabledChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;99&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paletteChange(QPalette const&)</primary></indexterm>QWidget::paletteChange(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;100&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::fontChange(QFont const&)</primary></indexterm>QWidget::fontChange(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;101&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLineEdit::windowActivationChange(bool)</primary></indexterm>QLineEdit::windowActivationChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;102&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::metric(int) const</primary></indexterm>QWidget::metric(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;103&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::create(unsigned long, bool, bool)</primary></indexterm>QWidget::create(unsigned long, bool, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;104&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::destroy(bool, bool)</primary></indexterm>QWidget::destroy(bool, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;105&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setWState(unsigned int)</primary></indexterm>NULL or QWidget::setWState(unsigned int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;106&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setWFlags(unsigned int)</primary></indexterm>NULL or QWidget::setWFlags(unsigned int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;107&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusNextPrevChild(bool)</primary></indexterm>QWidget::focusNextPrevChild(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;108&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setKeyCompression(bool)</primary></indexterm>QWidget::setKeyCompression(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;109&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMicroFocusHint(int, int, int, int, bool, QFont*)</primary></indexterm>QWidget::setMicroFocusHint(int, int, int, int, bool, QFont*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;110&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::setFrameStyle(int)</primary></indexterm>QFrame::setFrameStyle(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;111&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::setLineWidth(int)</primary></indexterm>QFrame::setLineWidth(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;112&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::setMargin(int)</primary></indexterm>QFrame::setMargin(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;113&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::setMidLineWidth(int)</primary></indexterm>QFrame::setMidLineWidth(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;114&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::setFrameRect(QRect const&)</primary></indexterm>QFrame::setFrameRect(QRect const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;115&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::drawFrame(QPainter*)</primary></indexterm>QFrame::drawFrame(QPainter*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;116&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLineEdit::drawContents(QPainter*)</primary></indexterm>QLineEdit::drawContents(QPainter*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;117&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::frameChanged()</primary></indexterm>QFrame::frameChanged()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;118&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLineEdit::setText(QString const&)</primary></indexterm>QLineEdit::setText(QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;119&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLineEdit::selectAll()</primary></indexterm>QLineEdit::selectAll()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;120&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLineEdit::deselect()</primary></indexterm>QLineEdit::deselect()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;121&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLineEdit::clearValidator()</primary></indexterm>QLineEdit::clearValidator()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;122&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLineEdit::insert(QString const&)</primary></indexterm>QLineEdit::insert(QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;123&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLineEdit::clear()</primary></indexterm>QLineEdit::clear()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;124&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLineEdit::undo()</primary></indexterm>QLineEdit::undo()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;125&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLineEdit::redo()</primary></indexterm>QLineEdit::redo()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;126&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLineEdit::setMaxLength(int)</primary></indexterm>QLineEdit::setMaxLength(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;127&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLineEdit::setFrame(bool)</primary></indexterm>QLineEdit::setFrame(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;128&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLineEdit::setEchoMode(QLineEdit::EchoMode)</primary></indexterm>QLineEdit::setEchoMode(QLineEdit::EchoMode)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;129&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLineEdit::setReadOnly(bool)</primary></indexterm>QLineEdit::setReadOnly(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;130&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLineEdit::setValidator(QValidator const*)</primary></indexterm>QLineEdit::setValidator(QValidator const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;131&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLineEdit::setSelection(int, int)</primary></indexterm>QLineEdit::setSelection(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;132&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLineEdit::setCursorPosition(int)</primary></indexterm>QLineEdit::setCursorPosition(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;133&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLineEdit::setAlignment(int)</primary></indexterm>QLineEdit::setAlignment(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;134&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLineEdit::cut()</primary></indexterm>QLineEdit::cut()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;135&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLineEdit::copy() const</primary></indexterm>QLineEdit::copy() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;136&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLineEdit::paste()</primary></indexterm>QLineEdit::paste()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;137&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLineEdit::setDragEnabled(bool)</primary></indexterm>QLineEdit::setDragEnabled(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;138&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLineEdit::createPopupMenu()</primary></indexterm>QLineEdit::createPopupMenu()</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--classdata-->
<TABLE id="cls-52235-1">
<TITLE>Secondary vtable for QLineEdit</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>-80</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QLineEdit</primary></indexterm>typeinfo for QLineEdit</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QLineEdit::~QLineEdit()</primary></indexterm>non-virtual thunk to QLineEdit::~QLineEdit()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QLineEdit::~QLineEdit()</primary></indexterm>non-virtual thunk to QLineEdit::~QLineEdit()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::setResolution(int)</primary></indexterm>QPaintDevice::setResolution(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::resolution() const</primary></indexterm>QPaintDevice::resolution() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::handle() const</primary></indexterm>QPaintDevice::handle() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::x11RenderHandle() const</primary></indexterm>QPaintDevice::x11RenderHandle() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::setX11Data(QPaintDeviceX11Data const*)</primary></indexterm>QPaintDevice::setX11Data(QPaintDeviceX11Data const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::cmd(int, QPainter*, QPDevCmdParam*)</primary></indexterm>QPaintDevice::cmd(int, QPainter*, QPDevCmdParam*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::metric(int) const</primary></indexterm>non-virtual thunk to QWidget::metric(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::fontMet(QFont*, int, char const*, int) const</primary></indexterm>QPaintDevice::fontMet(QFont*, int, char const*, int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::fontInf(QFont*, int) const</primary></indexterm>QPaintDevice::fontInf(QFont*, int) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QLineEdit  class
is described by <XREF LINKEND="rtti-55330">
</PARA>
<!--classdata-->
<TABLE ID="rtti-55330">
<TITLE>typeinfo for QLineEdit</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QLineEdit</primary></indexterm>typeinfo name for QLineEdit</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QFrame</primary></indexterm>typeinfo for QFrame</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QListBoxText</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QListBoxText class
is described in the generic part of this specification.
</PARA>
<PARA>
The Run Time Type Information for the QListBoxText  class
is described by <XREF LINKEND="rtti-53326">
</PARA>
<!--classdata-->
<TABLE ID="rtti-53326">
<TITLE>typeinfo for QListBoxText</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QListBoxText</primary></indexterm>typeinfo name for QListBoxText</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QListBoxItem</primary></indexterm>typeinfo for QListBoxItem</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QLCDNumber</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QLCDNumber class
is described by <XREF LINKEND="cls-57094-0">
</PARA>
<!--classdata-->
<TABLE id="cls-57094-0">
<TITLE>Primary vtable for QLCDNumber</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QLCDNumber</primary></indexterm>typeinfo for QLCDNumber</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLCDNumber::metaObject() const</primary></indexterm>NULL or QLCDNumber::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLCDNumber::className() const</primary></indexterm>QLCDNumber::className() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLCDNumber::qt_cast(char const*)</primary></indexterm>QLCDNumber::qt_cast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLCDNumber::qt_invoke(int, QUObject*)</primary></indexterm>QLCDNumber::qt_invoke(int, QUObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLCDNumber::qt_emit(int, QUObject*)</primary></indexterm>QLCDNumber::qt_emit(int, QUObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLCDNumber::qt_property(int, int, QVariant*)</primary></indexterm>QLCDNumber::qt_property(int, int, QVariant*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLCDNumber::~QLCDNumber()</primary></indexterm>QLCDNumber::~QLCDNumber()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLCDNumber::~QLCDNumber()</primary></indexterm>QLCDNumber::~QLCDNumber()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::event(QEvent*)</primary></indexterm>QWidget::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::eventFilter(QObject*, QEvent*)</primary></indexterm>QObject::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setName(char const*)</primary></indexterm>QWidget::setName(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::insertChild(QObject*)</primary></indexterm>QObject::insertChild(QObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::removeChild(QObject*)</primary></indexterm>QObject::removeChild(QObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::setProperty(char const*, QVariant const&)</primary></indexterm>QObject::setProperty(char const*, QVariant const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::property(char const*) const</primary></indexterm>QObject::property(char const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QCustomEvent*)</primary></indexterm>QObject::customEvent(QCustomEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::checkConnectArgs(char const*, QObject const*, char const*)</primary></indexterm>QObject::checkConnectArgs(char const*, QObject const*, char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setEnabled(bool)</primary></indexterm>QWidget::setEnabled(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMinimumSize(int, int)</primary></indexterm>QWidget::setMinimumSize(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMaximumSize(int, int)</primary></indexterm>QWidget::setMaximumSize(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setSizeIncrement(int, int)</primary></indexterm>QWidget::setSizeIncrement(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundMode(Qt::BackgroundMode)</primary></indexterm>QWidget::setBackgroundMode(Qt::BackgroundMode)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setEraseColor(QColor const&)</primary></indexterm>QWidget::setEraseColor(QColor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setErasePixmap(QPixmap const&)</primary></indexterm>QWidget::setErasePixmap(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setPalette(QPalette const&)</primary></indexterm>QWidget::setPalette(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setPaletteBackgroundColor(QColor const&)</primary></indexterm>QWidget::setPaletteBackgroundColor(QColor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setPaletteBackgroundPixmap(QPixmap const&)</primary></indexterm>QWidget::setPaletteBackgroundPixmap(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFont(QFont const&)</primary></indexterm>QWidget::setFont(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setCursor(QCursor const&)</primary></indexterm>QWidget::setCursor(QCursor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;33&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::unsetCursor()</primary></indexterm>QWidget::unsetCursor()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;34&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMask(QBitmap const&)</primary></indexterm>QWidget::setMask(QBitmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;35&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMask(QRegion const&)</primary></indexterm>QWidget::setMask(QRegion const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;36&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundColor(QColor const&)</primary></indexterm>QWidget::setBackgroundColor(QColor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;37&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundPixmap(QPixmap const&)</primary></indexterm>QWidget::setBackgroundPixmap(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;38&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setCaption(QString const&)</primary></indexterm>QWidget::setCaption(QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;39&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setIcon(QPixmap const&)</primary></indexterm>QWidget::setIcon(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;40&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setIconText(QString const&)</primary></indexterm>QWidget::setIconText(QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;41&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMouseTracking(bool)</primary></indexterm>QWidget::setMouseTracking(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;42&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFocus()</primary></indexterm>QWidget::setFocus()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;43&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setActiveWindow()</primary></indexterm>QWidget::setActiveWindow()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;44&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFocusPolicy(QWidget::FocusPolicy)</primary></indexterm>QWidget::setFocusPolicy(QWidget::FocusPolicy)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;45&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFocusProxy(QWidget*)</primary></indexterm>QWidget::setFocusProxy(QWidget*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;46&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setUpdatesEnabled(bool)</primary></indexterm>QWidget::setUpdatesEnabled(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;47&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::show()</primary></indexterm>QWidget::show()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;48&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::hide()</primary></indexterm>QWidget::hide()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;49&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showMinimized()</primary></indexterm>QWidget::showMinimized()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;50&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showMaximized()</primary></indexterm>QWidget::showMaximized()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;51&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showNormal()</primary></indexterm>QWidget::showNormal()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;52&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::polish()</primary></indexterm>QWidget::polish()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;53&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::move(int, int)</primary></indexterm>QWidget::move(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;54&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::resize(int, int)</primary></indexterm>QWidget::resize(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;55&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setGeometry(int, int, int, int)</primary></indexterm>QWidget::setGeometry(int, int, int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;56&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setGeometry(QRect const&)</primary></indexterm>NULL or QWidget::setGeometry(QRect const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;57&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::close(bool)</primary></indexterm>QWidget::close(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;58&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLCDNumber::sizeHint() const</primary></indexterm>QLCDNumber::sizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;59&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::minimumSizeHint() const</primary></indexterm>QWidget::minimumSizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;60&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::sizePolicy() const</primary></indexterm>QWidget::sizePolicy() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;61&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setSizePolicy(QSizePolicy)</primary></indexterm>QWidget::setSizePolicy(QSizePolicy)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;62&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::heightForWidth(int) const</primary></indexterm>QWidget::heightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;63&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::adjustSize()</primary></indexterm>QWidget::adjustSize()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;64&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::reparent(QWidget*, unsigned int, QPoint const&, bool)</primary></indexterm>QWidget::reparent(QWidget*, unsigned int, QPoint const&, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;65&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setAcceptDrops(bool)</primary></indexterm>QWidget::setAcceptDrops(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;66&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setAutoMask(bool)</primary></indexterm>QWidget::setAutoMask(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;67&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundOrigin(QWidget::BackgroundOrigin)</primary></indexterm>QWidget::setBackgroundOrigin(QWidget::BackgroundOrigin)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;68&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::customWhatsThis() const</primary></indexterm>QWidget::customWhatsThis() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;69&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mousePressEvent(QMouseEvent*)</primary></indexterm>QWidget::mousePressEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;70&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseReleaseEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseReleaseEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;71&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseDoubleClickEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseDoubleClickEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;72&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseMoveEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseMoveEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;73&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::wheelEvent(QWheelEvent*)</primary></indexterm>QWidget::wheelEvent(QWheelEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;74&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyPressEvent(QKeyEvent*)</primary></indexterm>QWidget::keyPressEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;75&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyReleaseEvent(QKeyEvent*)</primary></indexterm>QWidget::keyReleaseEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;76&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusInEvent(QFocusEvent*)</primary></indexterm>QWidget::focusInEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;77&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusOutEvent(QFocusEvent*)</primary></indexterm>QWidget::focusOutEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;78&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enterEvent(QEvent*)</primary></indexterm>QWidget::enterEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;79&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::leaveEvent(QEvent*)</primary></indexterm>QWidget::leaveEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;80&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::paintEvent(QPaintEvent*)</primary></indexterm>QFrame::paintEvent(QPaintEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;81&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::moveEvent(QMoveEvent*)</primary></indexterm>QWidget::moveEvent(QMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;82&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::resizeEvent(QResizeEvent*)</primary></indexterm>QFrame::resizeEvent(QResizeEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;83&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::closeEvent(QCloseEvent*)</primary></indexterm>QWidget::closeEvent(QCloseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;84&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::contextMenuEvent(QContextMenuEvent*)</primary></indexterm>QWidget::contextMenuEvent(QContextMenuEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;85&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::imStartEvent(QIMEvent*)</primary></indexterm>QWidget::imStartEvent(QIMEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;86&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::imComposeEvent(QIMEvent*)</primary></indexterm>QWidget::imComposeEvent(QIMEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;87&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::imEndEvent(QIMEvent*)</primary></indexterm>QWidget::imEndEvent(QIMEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;88&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::tabletEvent(QTabletEvent*)</primary></indexterm>QWidget::tabletEvent(QTabletEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;89&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragEnterEvent(QDragEnterEvent*)</primary></indexterm>QWidget::dragEnterEvent(QDragEnterEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;90&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragMoveEvent(QDragMoveEvent*)</primary></indexterm>QWidget::dragMoveEvent(QDragMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;91&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragLeaveEvent(QDragLeaveEvent*)</primary></indexterm>QWidget::dragLeaveEvent(QDragLeaveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;92&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dropEvent(QDropEvent*)</primary></indexterm>QWidget::dropEvent(QDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;93&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showEvent(QShowEvent*)</primary></indexterm>QWidget::showEvent(QShowEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;94&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::hideEvent(QHideEvent*)</primary></indexterm>QWidget::hideEvent(QHideEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;95&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::x11Event(_XEvent*)</primary></indexterm>QWidget::x11Event(_XEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;96&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::updateMask()</primary></indexterm>QWidget::updateMask()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;97&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::styleChange(QStyle&)</primary></indexterm>QFrame::styleChange(QStyle&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;98&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enabledChange(bool)</primary></indexterm>QWidget::enabledChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;99&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paletteChange(QPalette const&)</primary></indexterm>QWidget::paletteChange(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;100&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::fontChange(QFont const&)</primary></indexterm>QWidget::fontChange(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;101&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::windowActivationChange(bool)</primary></indexterm>QWidget::windowActivationChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;102&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::metric(int) const</primary></indexterm>QWidget::metric(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;103&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::create(unsigned long, bool, bool)</primary></indexterm>QWidget::create(unsigned long, bool, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;104&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::destroy(bool, bool)</primary></indexterm>QWidget::destroy(bool, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;105&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setWState(unsigned int)</primary></indexterm>NULL or QWidget::setWState(unsigned int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;106&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setWFlags(unsigned int)</primary></indexterm>NULL or QWidget::setWFlags(unsigned int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;107&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusNextPrevChild(bool)</primary></indexterm>QWidget::focusNextPrevChild(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;108&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setKeyCompression(bool)</primary></indexterm>QWidget::setKeyCompression(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;109&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMicroFocusHint(int, int, int, int, bool, QFont*)</primary></indexterm>QWidget::setMicroFocusHint(int, int, int, int, bool, QFont*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;110&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::setFrameStyle(int)</primary></indexterm>QFrame::setFrameStyle(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;111&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::setLineWidth(int)</primary></indexterm>QFrame::setLineWidth(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;112&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::setMargin(int)</primary></indexterm>QFrame::setMargin(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;113&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::setMidLineWidth(int)</primary></indexterm>QFrame::setMidLineWidth(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;114&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::setFrameRect(QRect const&)</primary></indexterm>QFrame::setFrameRect(QRect const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;115&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::drawFrame(QPainter*)</primary></indexterm>QFrame::drawFrame(QPainter*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;116&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLCDNumber::drawContents(QPainter*)</primary></indexterm>QLCDNumber::drawContents(QPainter*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;117&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::frameChanged()</primary></indexterm>QFrame::frameChanged()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;118&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLCDNumber::setNumDigits(int)</primary></indexterm>QLCDNumber::setNumDigits(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;119&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLCDNumber::setMode(QLCDNumber::Mode)</primary></indexterm>QLCDNumber::setMode(QLCDNumber::Mode)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;120&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLCDNumber::setSegmentStyle(QLCDNumber::SegmentStyle)</primary></indexterm>QLCDNumber::setSegmentStyle(QLCDNumber::SegmentStyle)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;121&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLCDNumber::setHexMode()</primary></indexterm>QLCDNumber::setHexMode()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;122&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLCDNumber::setDecMode()</primary></indexterm>QLCDNumber::setDecMode()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;123&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLCDNumber::setOctMode()</primary></indexterm>QLCDNumber::setOctMode()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;124&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLCDNumber::setBinMode()</primary></indexterm>QLCDNumber::setBinMode()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;125&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLCDNumber::setSmallDecimalPoint(bool)</primary></indexterm>QLCDNumber::setSmallDecimalPoint(bool)</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--classdata-->
<TABLE id="cls-57094-1">
<TITLE>Secondary vtable for QLCDNumber</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>-80</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QLCDNumber</primary></indexterm>typeinfo for QLCDNumber</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QLCDNumber::~QLCDNumber()</primary></indexterm>non-virtual thunk to QLCDNumber::~QLCDNumber()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QLCDNumber::~QLCDNumber()</primary></indexterm>non-virtual thunk to QLCDNumber::~QLCDNumber()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::setResolution(int)</primary></indexterm>QPaintDevice::setResolution(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::resolution() const</primary></indexterm>QPaintDevice::resolution() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::handle() const</primary></indexterm>QPaintDevice::handle() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::x11RenderHandle() const</primary></indexterm>QPaintDevice::x11RenderHandle() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::setX11Data(QPaintDeviceX11Data const*)</primary></indexterm>QPaintDevice::setX11Data(QPaintDeviceX11Data const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::cmd(int, QPainter*, QPDevCmdParam*)</primary></indexterm>QPaintDevice::cmd(int, QPainter*, QPDevCmdParam*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::metric(int) const</primary></indexterm>non-virtual thunk to QWidget::metric(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::fontMet(QFont*, int, char const*, int) const</primary></indexterm>QPaintDevice::fontMet(QFont*, int, char const*, int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::fontInf(QFont*, int) const</primary></indexterm>QPaintDevice::fontInf(QFont*, int) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QLCDNumber  class
is described by <XREF LINKEND="rtti-52148">
</PARA>
<!--classdata-->
<TABLE ID="rtti-52148">
<TITLE>typeinfo for QLCDNumber</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QLCDNumber</primary></indexterm>typeinfo name for QLCDNumber</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QFrame</primary></indexterm>typeinfo for QFrame</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QGridView</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QGridView class
is described by <XREF LINKEND="cls-52292-0">
</PARA>
<!--classdata-->
<TABLE id="cls-52292-0">
<TITLE>Primary vtable for QGridView</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QGridView</primary></indexterm>typeinfo for QGridView</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGridView::metaObject() const</primary></indexterm>NULL or QGridView::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGridView::className() const</primary></indexterm>QGridView::className() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGridView::qt_cast(char const*)</primary></indexterm>QGridView::qt_cast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGridView::qt_invoke(int, QUObject*)</primary></indexterm>QGridView::qt_invoke(int, QUObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGridView::qt_emit(int, QUObject*)</primary></indexterm>QGridView::qt_emit(int, QUObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGridView::qt_property(int, int, QVariant*)</primary></indexterm>QGridView::qt_property(int, int, QVariant*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGridView::~QGridView()</primary></indexterm>QGridView::~QGridView()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGridView::~QGridView()</primary></indexterm>QGridView::~QGridView()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::event(QEvent*)</primary></indexterm>QWidget::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::eventFilter(QObject*, QEvent*)</primary></indexterm>QScrollView::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setName(char const*)</primary></indexterm>QWidget::setName(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::insertChild(QObject*)</primary></indexterm>QObject::insertChild(QObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::removeChild(QObject*)</primary></indexterm>QScrollView::removeChild(QObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::setProperty(char const*, QVariant const&)</primary></indexterm>QObject::setProperty(char const*, QVariant const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::property(char const*) const</primary></indexterm>QObject::property(char const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QCustomEvent*)</primary></indexterm>QObject::customEvent(QCustomEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::checkConnectArgs(char const*, QObject const*, char const*)</primary></indexterm>QObject::checkConnectArgs(char const*, QObject const*, char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::setEnabled(bool)</primary></indexterm>QScrollView::setEnabled(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMinimumSize(int, int)</primary></indexterm>QWidget::setMinimumSize(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMaximumSize(int, int)</primary></indexterm>QWidget::setMaximumSize(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setSizeIncrement(int, int)</primary></indexterm>QWidget::setSizeIncrement(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundMode(Qt::BackgroundMode)</primary></indexterm>QWidget::setBackgroundMode(Qt::BackgroundMode)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setEraseColor(QColor const&)</primary></indexterm>QWidget::setEraseColor(QColor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setErasePixmap(QPixmap const&)</primary></indexterm>QWidget::setErasePixmap(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setPalette(QPalette const&)</primary></indexterm>QWidget::setPalette(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setPaletteBackgroundColor(QColor const&)</primary></indexterm>QWidget::setPaletteBackgroundColor(QColor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setPaletteBackgroundPixmap(QPixmap const&)</primary></indexterm>QWidget::setPaletteBackgroundPixmap(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFont(QFont const&)</primary></indexterm>QWidget::setFont(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setCursor(QCursor const&)</primary></indexterm>QWidget::setCursor(QCursor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;33&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::unsetCursor()</primary></indexterm>QWidget::unsetCursor()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;34&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMask(QBitmap const&)</primary></indexterm>QWidget::setMask(QBitmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;35&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMask(QRegion const&)</primary></indexterm>QWidget::setMask(QRegion const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;36&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundColor(QColor const&)</primary></indexterm>QWidget::setBackgroundColor(QColor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;37&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundPixmap(QPixmap const&)</primary></indexterm>QWidget::setBackgroundPixmap(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;38&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setCaption(QString const&)</primary></indexterm>QWidget::setCaption(QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;39&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setIcon(QPixmap const&)</primary></indexterm>QWidget::setIcon(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;40&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setIconText(QString const&)</primary></indexterm>QWidget::setIconText(QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;41&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMouseTracking(bool)</primary></indexterm>QWidget::setMouseTracking(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;42&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFocus()</primary></indexterm>QWidget::setFocus()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;43&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setActiveWindow()</primary></indexterm>QWidget::setActiveWindow()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;44&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFocusPolicy(QWidget::FocusPolicy)</primary></indexterm>QWidget::setFocusPolicy(QWidget::FocusPolicy)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;45&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFocusProxy(QWidget*)</primary></indexterm>QWidget::setFocusProxy(QWidget*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;46&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setUpdatesEnabled(bool)</primary></indexterm>QWidget::setUpdatesEnabled(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;47&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::show()</primary></indexterm>QScrollView::show()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;48&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::hide()</primary></indexterm>QWidget::hide()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;49&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showMinimized()</primary></indexterm>QWidget::showMinimized()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;50&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showMaximized()</primary></indexterm>QWidget::showMaximized()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;51&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showNormal()</primary></indexterm>QWidget::showNormal()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;52&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::polish()</primary></indexterm>QWidget::polish()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;53&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::move(int, int)</primary></indexterm>QWidget::move(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;54&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::resize(int, int)</primary></indexterm>QScrollView::resize(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;55&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setGeometry(int, int, int, int)</primary></indexterm>QWidget::setGeometry(int, int, int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;56&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setGeometry(QRect const&)</primary></indexterm>NULL or QWidget::setGeometry(QRect const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;57&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::close(bool)</primary></indexterm>QWidget::close(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;58&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::sizeHint() const</primary></indexterm>QScrollView::sizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;59&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::minimumSizeHint() const</primary></indexterm>QScrollView::minimumSizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;60&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::sizePolicy() const</primary></indexterm>QWidget::sizePolicy() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;61&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setSizePolicy(QSizePolicy)</primary></indexterm>QWidget::setSizePolicy(QSizePolicy)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;62&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::heightForWidth(int) const</primary></indexterm>QWidget::heightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;63&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::adjustSize()</primary></indexterm>QWidget::adjustSize()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;64&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::reparent(QWidget*, unsigned int, QPoint const&, bool)</primary></indexterm>QWidget::reparent(QWidget*, unsigned int, QPoint const&, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;65&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setAcceptDrops(bool)</primary></indexterm>QWidget::setAcceptDrops(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;66&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setAutoMask(bool)</primary></indexterm>QWidget::setAutoMask(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;67&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundOrigin(QWidget::BackgroundOrigin)</primary></indexterm>QWidget::setBackgroundOrigin(QWidget::BackgroundOrigin)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;68&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::customWhatsThis() const</primary></indexterm>QWidget::customWhatsThis() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;69&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::mousePressEvent(QMouseEvent*)</primary></indexterm>QScrollView::mousePressEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;70&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::mouseReleaseEvent(QMouseEvent*)</primary></indexterm>QScrollView::mouseReleaseEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;71&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::mouseDoubleClickEvent(QMouseEvent*)</primary></indexterm>QScrollView::mouseDoubleClickEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;72&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::mouseMoveEvent(QMouseEvent*)</primary></indexterm>QScrollView::mouseMoveEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;73&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::wheelEvent(QWheelEvent*)</primary></indexterm>QScrollView::wheelEvent(QWheelEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;74&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyPressEvent(QKeyEvent*)</primary></indexterm>QWidget::keyPressEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;75&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyReleaseEvent(QKeyEvent*)</primary></indexterm>QWidget::keyReleaseEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;76&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusInEvent(QFocusEvent*)</primary></indexterm>QWidget::focusInEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;77&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusOutEvent(QFocusEvent*)</primary></indexterm>QWidget::focusOutEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;78&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enterEvent(QEvent*)</primary></indexterm>QWidget::enterEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;79&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::leaveEvent(QEvent*)</primary></indexterm>QWidget::leaveEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;80&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::paintEvent(QPaintEvent*)</primary></indexterm>QFrame::paintEvent(QPaintEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;81&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::moveEvent(QMoveEvent*)</primary></indexterm>QWidget::moveEvent(QMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;82&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::resizeEvent(QResizeEvent*)</primary></indexterm>QScrollView::resizeEvent(QResizeEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;83&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::closeEvent(QCloseEvent*)</primary></indexterm>QWidget::closeEvent(QCloseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;84&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::contextMenuEvent(QContextMenuEvent*)</primary></indexterm>QScrollView::contextMenuEvent(QContextMenuEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;85&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::imStartEvent(QIMEvent*)</primary></indexterm>QWidget::imStartEvent(QIMEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;86&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::imComposeEvent(QIMEvent*)</primary></indexterm>QWidget::imComposeEvent(QIMEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;87&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::imEndEvent(QIMEvent*)</primary></indexterm>QWidget::imEndEvent(QIMEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;88&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::tabletEvent(QTabletEvent*)</primary></indexterm>QWidget::tabletEvent(QTabletEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;89&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragEnterEvent(QDragEnterEvent*)</primary></indexterm>QWidget::dragEnterEvent(QDragEnterEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;90&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragMoveEvent(QDragMoveEvent*)</primary></indexterm>QWidget::dragMoveEvent(QDragMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;91&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragLeaveEvent(QDragLeaveEvent*)</primary></indexterm>QWidget::dragLeaveEvent(QDragLeaveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;92&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dropEvent(QDropEvent*)</primary></indexterm>QWidget::dropEvent(QDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;93&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showEvent(QShowEvent*)</primary></indexterm>QWidget::showEvent(QShowEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;94&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::hideEvent(QHideEvent*)</primary></indexterm>QWidget::hideEvent(QHideEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;95&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::x11Event(_XEvent*)</primary></indexterm>QWidget::x11Event(_XEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;96&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::updateMask()</primary></indexterm>QWidget::updateMask()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;97&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::styleChange(QStyle&)</primary></indexterm>QScrollView::styleChange(QStyle&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;98&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enabledChange(bool)</primary></indexterm>QWidget::enabledChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;99&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paletteChange(QPalette const&)</primary></indexterm>QWidget::paletteChange(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;100&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::fontChange(QFont const&)</primary></indexterm>QScrollView::fontChange(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;101&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::windowActivationChange(bool)</primary></indexterm>QWidget::windowActivationChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;102&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::metric(int) const</primary></indexterm>QWidget::metric(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;103&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::create(unsigned long, bool, bool)</primary></indexterm>QWidget::create(unsigned long, bool, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;104&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::destroy(bool, bool)</primary></indexterm>QWidget::destroy(bool, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;105&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setWState(unsigned int)</primary></indexterm>NULL or QWidget::setWState(unsigned int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;106&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setWFlags(unsigned int)</primary></indexterm>NULL or QWidget::setWFlags(unsigned int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;107&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::focusNextPrevChild(bool)</primary></indexterm>QScrollView::focusNextPrevChild(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;108&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setKeyCompression(bool)</primary></indexterm>QWidget::setKeyCompression(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;109&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMicroFocusHint(int, int, int, int, bool, QFont*)</primary></indexterm>QWidget::setMicroFocusHint(int, int, int, int, bool, QFont*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;110&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::setFrameStyle(int)</primary></indexterm>QFrame::setFrameStyle(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;111&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::setLineWidth(int)</primary></indexterm>QFrame::setLineWidth(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;112&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::setMargin(int)</primary></indexterm>QFrame::setMargin(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;113&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::setMidLineWidth(int)</primary></indexterm>QFrame::setMidLineWidth(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;114&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::setFrameRect(QRect const&)</primary></indexterm>QFrame::setFrameRect(QRect const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;115&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::drawFrame(QPainter*)</primary></indexterm>QFrame::drawFrame(QPainter*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;116&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGridView::drawContents(QPainter*)</primary></indexterm>QGridView::drawContents(QPainter*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;117&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::frameChanged()</primary></indexterm>QScrollView::frameChanged()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;118&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::setResizePolicy(QScrollView::ResizePolicy)</primary></indexterm>QScrollView::setResizePolicy(QScrollView::ResizePolicy)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;119&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::addChild(QWidget*, int, int)</primary></indexterm>QScrollView::addChild(QWidget*, int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;120&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::moveChild(QWidget*, int, int)</primary></indexterm>QScrollView::moveChild(QWidget*, int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;121&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::setVScrollBarMode(QScrollView::ScrollBarMode)</primary></indexterm>QScrollView::setVScrollBarMode(QScrollView::ScrollBarMode)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;122&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::setHScrollBarMode(QScrollView::ScrollBarMode)</primary></indexterm>QScrollView::setHScrollBarMode(QScrollView::ScrollBarMode)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;123&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::setCornerWidget(QWidget*)</primary></indexterm>QScrollView::setCornerWidget(QWidget*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;124&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::setDragAutoScroll(bool)</primary></indexterm>QScrollView::setDragAutoScroll(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;125&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::resizeContents(int, int)</primary></indexterm>QScrollView::resizeContents(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;126&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::setContentsPos(int, int)</primary></indexterm>QScrollView::setContentsPos(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;127&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGridView::drawContents(QPainter*, int, int, int, int)</primary></indexterm>QGridView::drawContents(QPainter*, int, int, int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;128&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::drawContentsOffset(QPainter*, int, int, int, int, int, int)</primary></indexterm>QScrollView::drawContentsOffset(QPainter*, int, int, int, int, int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;129&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::contentsMousePressEvent(QMouseEvent*)</primary></indexterm>QScrollView::contentsMousePressEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;130&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::contentsMouseReleaseEvent(QMouseEvent*)</primary></indexterm>QScrollView::contentsMouseReleaseEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;131&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::contentsMouseDoubleClickEvent(QMouseEvent*)</primary></indexterm>QScrollView::contentsMouseDoubleClickEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;132&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::contentsMouseMoveEvent(QMouseEvent*)</primary></indexterm>QScrollView::contentsMouseMoveEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;133&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::contentsDragEnterEvent(QDragEnterEvent*)</primary></indexterm>QScrollView::contentsDragEnterEvent(QDragEnterEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;134&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::contentsDragMoveEvent(QDragMoveEvent*)</primary></indexterm>QScrollView::contentsDragMoveEvent(QDragMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;135&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::contentsDragLeaveEvent(QDragLeaveEvent*)</primary></indexterm>QScrollView::contentsDragLeaveEvent(QDragLeaveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;136&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::contentsDropEvent(QDropEvent*)</primary></indexterm>QScrollView::contentsDropEvent(QDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;137&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::contentsWheelEvent(QWheelEvent*)</primary></indexterm>QScrollView::contentsWheelEvent(QWheelEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;138&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::contentsContextMenuEvent(QContextMenuEvent*)</primary></indexterm>QScrollView::contentsContextMenuEvent(QContextMenuEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;139&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::viewportPaintEvent(QPaintEvent*)</primary></indexterm>QScrollView::viewportPaintEvent(QPaintEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;140&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::viewportResizeEvent(QResizeEvent*)</primary></indexterm>QScrollView::viewportResizeEvent(QResizeEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;141&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::viewportMousePressEvent(QMouseEvent*)</primary></indexterm>QScrollView::viewportMousePressEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;142&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::viewportMouseReleaseEvent(QMouseEvent*)</primary></indexterm>QScrollView::viewportMouseReleaseEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;143&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::viewportMouseDoubleClickEvent(QMouseEvent*)</primary></indexterm>QScrollView::viewportMouseDoubleClickEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;144&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::viewportMouseMoveEvent(QMouseEvent*)</primary></indexterm>QScrollView::viewportMouseMoveEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;145&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::viewportDragEnterEvent(QDragEnterEvent*)</primary></indexterm>QScrollView::viewportDragEnterEvent(QDragEnterEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;146&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::viewportDragMoveEvent(QDragMoveEvent*)</primary></indexterm>QScrollView::viewportDragMoveEvent(QDragMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;147&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::viewportDragLeaveEvent(QDragLeaveEvent*)</primary></indexterm>QScrollView::viewportDragLeaveEvent(QDragLeaveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;148&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::viewportDropEvent(QDropEvent*)</primary></indexterm>QScrollView::viewportDropEvent(QDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;149&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::viewportWheelEvent(QWheelEvent*)</primary></indexterm>QScrollView::viewportWheelEvent(QWheelEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;150&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::viewportContextMenuEvent(QContextMenuEvent*)</primary></indexterm>QScrollView::viewportContextMenuEvent(QContextMenuEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;151&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::setMargins(int, int, int, int)</primary></indexterm>QScrollView::setMargins(int, int, int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;152&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::setHBarGeometry(QScrollBar&, int, int, int, int)</primary></indexterm>QScrollView::setHBarGeometry(QScrollBar&, int, int, int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;153&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::setVBarGeometry(QScrollBar&, int, int, int, int)</primary></indexterm>QScrollView::setVBarGeometry(QScrollBar&, int, int, int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;154&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGridView::setNumRows(int)</primary></indexterm>QGridView::setNumRows(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;155&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGridView::setNumCols(int)</primary></indexterm>QGridView::setNumCols(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;156&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGridView::setCellWidth(int)</primary></indexterm>QGridView::setCellWidth(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;157&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGridView::setCellHeight(int)</primary></indexterm>QGridView::setCellHeight(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;158&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;159&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGridView::paintEmptyArea(QPainter*, int, int, int, int)</primary></indexterm>QGridView::paintEmptyArea(QPainter*, int, int, int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;160&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGridView::dimensionChange(int, int)</primary></indexterm>QGridView::dimensionChange(int, int)</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--classdata-->
<TABLE id="cls-52292-1">
<TITLE>Secondary vtable for QGridView</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>-80</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QGridView</primary></indexterm>typeinfo for QGridView</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QGridView::~QGridView()</primary></indexterm>non-virtual thunk to QGridView::~QGridView()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QGridView::~QGridView()</primary></indexterm>non-virtual thunk to QGridView::~QGridView()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::setResolution(int)</primary></indexterm>QPaintDevice::setResolution(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::resolution() const</primary></indexterm>QPaintDevice::resolution() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::handle() const</primary></indexterm>QPaintDevice::handle() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::x11RenderHandle() const</primary></indexterm>QPaintDevice::x11RenderHandle() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::setX11Data(QPaintDeviceX11Data const*)</primary></indexterm>QPaintDevice::setX11Data(QPaintDeviceX11Data const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::cmd(int, QPainter*, QPDevCmdParam*)</primary></indexterm>QPaintDevice::cmd(int, QPainter*, QPDevCmdParam*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::metric(int) const</primary></indexterm>non-virtual thunk to QWidget::metric(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::fontMet(QFont*, int, char const*, int) const</primary></indexterm>QPaintDevice::fontMet(QFont*, int, char const*, int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::fontInf(QFont*, int) const</primary></indexterm>QPaintDevice::fontInf(QFont*, int) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QGridView  class
is described by <XREF LINKEND="rtti-50642">
</PARA>
<!--classdata-->
<TABLE ID="rtti-50642">
<TITLE>typeinfo for QGridView</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QGridView</primary></indexterm>typeinfo name for QGridView</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QScrollView</primary></indexterm>typeinfo for QScrollView</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QButton</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QButton class
is described by <XREF LINKEND="cls-49489-0">
</PARA>
<!--classdata-->
<TABLE id="cls-49489-0">
<TITLE>Primary vtable for QButton</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QButton</primary></indexterm>typeinfo for QButton</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QButton::metaObject() const</primary></indexterm>NULL or QButton::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QButton::className() const</primary></indexterm>QButton::className() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QButton::qt_cast(char const*)</primary></indexterm>QButton::qt_cast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QButton::qt_invoke(int, QUObject*)</primary></indexterm>QButton::qt_invoke(int, QUObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QButton::qt_emit(int, QUObject*)</primary></indexterm>QButton::qt_emit(int, QUObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QButton::qt_property(int, int, QVariant*)</primary></indexterm>QButton::qt_property(int, int, QVariant*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QButton::~QButton()</primary></indexterm>QButton::~QButton()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QButton::~QButton()</primary></indexterm>QButton::~QButton()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::event(QEvent*)</primary></indexterm>QWidget::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::eventFilter(QObject*, QEvent*)</primary></indexterm>QObject::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setName(char const*)</primary></indexterm>QWidget::setName(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::insertChild(QObject*)</primary></indexterm>QObject::insertChild(QObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::removeChild(QObject*)</primary></indexterm>QObject::removeChild(QObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::setProperty(char const*, QVariant const&)</primary></indexterm>QObject::setProperty(char const*, QVariant const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::property(char const*) const</primary></indexterm>QObject::property(char const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QCustomEvent*)</primary></indexterm>QObject::customEvent(QCustomEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::checkConnectArgs(char const*, QObject const*, char const*)</primary></indexterm>QObject::checkConnectArgs(char const*, QObject const*, char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setEnabled(bool)</primary></indexterm>QWidget::setEnabled(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMinimumSize(int, int)</primary></indexterm>QWidget::setMinimumSize(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMaximumSize(int, int)</primary></indexterm>QWidget::setMaximumSize(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setSizeIncrement(int, int)</primary></indexterm>QWidget::setSizeIncrement(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundMode(Qt::BackgroundMode)</primary></indexterm>QWidget::setBackgroundMode(Qt::BackgroundMode)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setEraseColor(QColor const&)</primary></indexterm>QWidget::setEraseColor(QColor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setErasePixmap(QPixmap const&)</primary></indexterm>QWidget::setErasePixmap(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setPalette(QPalette const&)</primary></indexterm>QWidget::setPalette(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setPaletteBackgroundColor(QColor const&)</primary></indexterm>QWidget::setPaletteBackgroundColor(QColor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setPaletteBackgroundPixmap(QPixmap const&)</primary></indexterm>QWidget::setPaletteBackgroundPixmap(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFont(QFont const&)</primary></indexterm>QWidget::setFont(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setCursor(QCursor const&)</primary></indexterm>QWidget::setCursor(QCursor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;33&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::unsetCursor()</primary></indexterm>QWidget::unsetCursor()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;34&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMask(QBitmap const&)</primary></indexterm>QWidget::setMask(QBitmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;35&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMask(QRegion const&)</primary></indexterm>QWidget::setMask(QRegion const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;36&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundColor(QColor const&)</primary></indexterm>QWidget::setBackgroundColor(QColor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;37&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundPixmap(QPixmap const&)</primary></indexterm>QWidget::setBackgroundPixmap(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;38&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setCaption(QString const&)</primary></indexterm>QWidget::setCaption(QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;39&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setIcon(QPixmap const&)</primary></indexterm>QWidget::setIcon(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;40&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setIconText(QString const&)</primary></indexterm>QWidget::setIconText(QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;41&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMouseTracking(bool)</primary></indexterm>QWidget::setMouseTracking(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;42&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFocus()</primary></indexterm>QWidget::setFocus()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;43&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setActiveWindow()</primary></indexterm>QWidget::setActiveWindow()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;44&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFocusPolicy(QWidget::FocusPolicy)</primary></indexterm>QWidget::setFocusPolicy(QWidget::FocusPolicy)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;45&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFocusProxy(QWidget*)</primary></indexterm>QWidget::setFocusProxy(QWidget*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;46&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setUpdatesEnabled(bool)</primary></indexterm>QWidget::setUpdatesEnabled(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;47&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::show()</primary></indexterm>QWidget::show()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;48&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::hide()</primary></indexterm>QWidget::hide()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;49&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showMinimized()</primary></indexterm>QWidget::showMinimized()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;50&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showMaximized()</primary></indexterm>QWidget::showMaximized()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;51&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showNormal()</primary></indexterm>QWidget::showNormal()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;52&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::polish()</primary></indexterm>QWidget::polish()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;53&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::move(int, int)</primary></indexterm>QWidget::move(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;54&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::resize(int, int)</primary></indexterm>QWidget::resize(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;55&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setGeometry(int, int, int, int)</primary></indexterm>QWidget::setGeometry(int, int, int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;56&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setGeometry(QRect const&)</primary></indexterm>NULL or QWidget::setGeometry(QRect const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;57&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::close(bool)</primary></indexterm>QWidget::close(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;58&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::sizeHint() const</primary></indexterm>QWidget::sizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;59&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::minimumSizeHint() const</primary></indexterm>QWidget::minimumSizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;60&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::sizePolicy() const</primary></indexterm>QWidget::sizePolicy() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;61&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setSizePolicy(QSizePolicy)</primary></indexterm>QWidget::setSizePolicy(QSizePolicy)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;62&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::heightForWidth(int) const</primary></indexterm>QWidget::heightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;63&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::adjustSize()</primary></indexterm>QWidget::adjustSize()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;64&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::reparent(QWidget*, unsigned int, QPoint const&, bool)</primary></indexterm>QWidget::reparent(QWidget*, unsigned int, QPoint const&, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;65&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setAcceptDrops(bool)</primary></indexterm>QWidget::setAcceptDrops(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;66&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setAutoMask(bool)</primary></indexterm>QWidget::setAutoMask(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;67&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundOrigin(QWidget::BackgroundOrigin)</primary></indexterm>QWidget::setBackgroundOrigin(QWidget::BackgroundOrigin)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;68&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::customWhatsThis() const</primary></indexterm>QWidget::customWhatsThis() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;69&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QButton::mousePressEvent(QMouseEvent*)</primary></indexterm>QButton::mousePressEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;70&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QButton::mouseReleaseEvent(QMouseEvent*)</primary></indexterm>QButton::mouseReleaseEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;71&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseDoubleClickEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseDoubleClickEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;72&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QButton::mouseMoveEvent(QMouseEvent*)</primary></indexterm>QButton::mouseMoveEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;73&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::wheelEvent(QWheelEvent*)</primary></indexterm>QWidget::wheelEvent(QWheelEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;74&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QButton::keyPressEvent(QKeyEvent*)</primary></indexterm>QButton::keyPressEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;75&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QButton::keyReleaseEvent(QKeyEvent*)</primary></indexterm>QButton::keyReleaseEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;76&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QButton::focusInEvent(QFocusEvent*)</primary></indexterm>QButton::focusInEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;77&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QButton::focusOutEvent(QFocusEvent*)</primary></indexterm>QButton::focusOutEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;78&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enterEvent(QEvent*)</primary></indexterm>QWidget::enterEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;79&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::leaveEvent(QEvent*)</primary></indexterm>QWidget::leaveEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;80&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QButton::paintEvent(QPaintEvent*)</primary></indexterm>QButton::paintEvent(QPaintEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;81&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::moveEvent(QMoveEvent*)</primary></indexterm>QWidget::moveEvent(QMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;82&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::resizeEvent(QResizeEvent*)</primary></indexterm>QWidget::resizeEvent(QResizeEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;83&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::closeEvent(QCloseEvent*)</primary></indexterm>QWidget::closeEvent(QCloseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;84&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::contextMenuEvent(QContextMenuEvent*)</primary></indexterm>QWidget::contextMenuEvent(QContextMenuEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;85&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::imStartEvent(QIMEvent*)</primary></indexterm>QWidget::imStartEvent(QIMEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;86&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::imComposeEvent(QIMEvent*)</primary></indexterm>QWidget::imComposeEvent(QIMEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;87&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::imEndEvent(QIMEvent*)</primary></indexterm>QWidget::imEndEvent(QIMEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;88&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::tabletEvent(QTabletEvent*)</primary></indexterm>QWidget::tabletEvent(QTabletEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;89&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragEnterEvent(QDragEnterEvent*)</primary></indexterm>QWidget::dragEnterEvent(QDragEnterEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;90&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragMoveEvent(QDragMoveEvent*)</primary></indexterm>QWidget::dragMoveEvent(QDragMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;91&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragLeaveEvent(QDragLeaveEvent*)</primary></indexterm>QWidget::dragLeaveEvent(QDragLeaveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;92&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dropEvent(QDropEvent*)</primary></indexterm>QWidget::dropEvent(QDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;93&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showEvent(QShowEvent*)</primary></indexterm>QWidget::showEvent(QShowEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;94&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::hideEvent(QHideEvent*)</primary></indexterm>QWidget::hideEvent(QHideEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;95&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::x11Event(_XEvent*)</primary></indexterm>QWidget::x11Event(_XEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;96&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::updateMask()</primary></indexterm>QWidget::updateMask()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;97&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::styleChange(QStyle&)</primary></indexterm>QWidget::styleChange(QStyle&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;98&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QButton::enabledChange(bool)</primary></indexterm>QButton::enabledChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;99&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paletteChange(QPalette const&)</primary></indexterm>QWidget::paletteChange(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;100&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::fontChange(QFont const&)</primary></indexterm>QWidget::fontChange(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;101&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::windowActivationChange(bool)</primary></indexterm>QWidget::windowActivationChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;102&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::metric(int) const</primary></indexterm>QWidget::metric(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;103&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::create(unsigned long, bool, bool)</primary></indexterm>QWidget::create(unsigned long, bool, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;104&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::destroy(bool, bool)</primary></indexterm>QWidget::destroy(bool, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;105&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setWState(unsigned int)</primary></indexterm>NULL or QWidget::setWState(unsigned int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;106&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setWFlags(unsigned int)</primary></indexterm>NULL or QWidget::setWFlags(unsigned int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;107&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusNextPrevChild(bool)</primary></indexterm>QWidget::focusNextPrevChild(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;108&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setKeyCompression(bool)</primary></indexterm>QWidget::setKeyCompression(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;109&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMicroFocusHint(int, int, int, int, bool, QFont*)</primary></indexterm>QWidget::setMicroFocusHint(int, int, int, int, bool, QFont*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;110&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QButton::setText(QString const&)</primary></indexterm>QButton::setText(QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;111&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QButton::setPixmap(QPixmap const&)</primary></indexterm>QButton::setPixmap(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;112&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QButton::setAccel(QKeySequence const&)</primary></indexterm>QButton::setAccel(QKeySequence const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;113&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QButton::setDown(bool)</primary></indexterm>QButton::setDown(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;114&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QButton::setAutoRepeat(bool)</primary></indexterm>QButton::setAutoRepeat(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;115&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QButton::setToggleType(QButton::ToggleType)</primary></indexterm>QButton::setToggleType(QButton::ToggleType)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;116&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QButton::setState(QButton::ToggleState)</primary></indexterm>QButton::setState(QButton::ToggleState)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;117&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QButton::hitButton(QPoint const&) const</primary></indexterm>QButton::hitButton(QPoint const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;118&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QButton::drawButton(QPainter*)</primary></indexterm>QButton::drawButton(QPainter*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;119&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QButton::drawButtonLabel(QPainter*)</primary></indexterm>QButton::drawButtonLabel(QPainter*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;120&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QButton::setGroup(QButtonGroup*)</primary></indexterm>QButton::setGroup(QButtonGroup*)</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--classdata-->
<TABLE id="cls-49489-1">
<TITLE>Secondary vtable for QButton</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>-80</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QButton</primary></indexterm>typeinfo for QButton</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QButton::~QButton()</primary></indexterm>non-virtual thunk to QButton::~QButton()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QButton::~QButton()</primary></indexterm>non-virtual thunk to QButton::~QButton()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::setResolution(int)</primary></indexterm>QPaintDevice::setResolution(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::resolution() const</primary></indexterm>QPaintDevice::resolution() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::handle() const</primary></indexterm>QPaintDevice::handle() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::x11RenderHandle() const</primary></indexterm>QPaintDevice::x11RenderHandle() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::setX11Data(QPaintDeviceX11Data const*)</primary></indexterm>QPaintDevice::setX11Data(QPaintDeviceX11Data const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::cmd(int, QPainter*, QPDevCmdParam*)</primary></indexterm>QPaintDevice::cmd(int, QPainter*, QPDevCmdParam*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::metric(int) const</primary></indexterm>non-virtual thunk to QWidget::metric(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::fontMet(QFont*, int, char const*, int) const</primary></indexterm>QPaintDevice::fontMet(QFont*, int, char const*, int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::fontInf(QFont*, int) const</primary></indexterm>QPaintDevice::fontInf(QFont*, int) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QButton  class
is described by <XREF LINKEND="rtti-54470">
</PARA>
<!--classdata-->
<TABLE ID="rtti-54470">
<TITLE>typeinfo for QButton</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QButton</primary></indexterm>typeinfo name for QButton</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QWidget</primary></indexterm>typeinfo for QWidget</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QTabWidget</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QTabWidget class
is described by <XREF LINKEND="cls-58899-0">
</PARA>
<!--classdata-->
<TABLE id="cls-58899-0">
<TITLE>Primary vtable for QTabWidget</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QTabWidget</primary></indexterm>typeinfo for QTabWidget</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTabWidget::metaObject() const</primary></indexterm>NULL or QTabWidget::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTabWidget::className() const</primary></indexterm>QTabWidget::className() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTabWidget::qt_cast(char const*)</primary></indexterm>QTabWidget::qt_cast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTabWidget::qt_invoke(int, QUObject*)</primary></indexterm>QTabWidget::qt_invoke(int, QUObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTabWidget::qt_emit(int, QUObject*)</primary></indexterm>QTabWidget::qt_emit(int, QUObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTabWidget::qt_property(int, int, QVariant*)</primary></indexterm>QTabWidget::qt_property(int, int, QVariant*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTabWidget::~QTabWidget()</primary></indexterm>QTabWidget::~QTabWidget()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTabWidget::~QTabWidget()</primary></indexterm>QTabWidget::~QTabWidget()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::event(QEvent*)</primary></indexterm>QWidget::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTabWidget::eventFilter(QObject*, QEvent*)</primary></indexterm>QTabWidget::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setName(char const*)</primary></indexterm>QWidget::setName(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::insertChild(QObject*)</primary></indexterm>QObject::insertChild(QObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::removeChild(QObject*)</primary></indexterm>QObject::removeChild(QObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::setProperty(char const*, QVariant const&)</primary></indexterm>QObject::setProperty(char const*, QVariant const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::property(char const*) const</primary></indexterm>QObject::property(char const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QCustomEvent*)</primary></indexterm>QObject::customEvent(QCustomEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::checkConnectArgs(char const*, QObject const*, char const*)</primary></indexterm>QObject::checkConnectArgs(char const*, QObject const*, char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setEnabled(bool)</primary></indexterm>QWidget::setEnabled(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMinimumSize(int, int)</primary></indexterm>QWidget::setMinimumSize(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMaximumSize(int, int)</primary></indexterm>QWidget::setMaximumSize(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setSizeIncrement(int, int)</primary></indexterm>QWidget::setSizeIncrement(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundMode(Qt::BackgroundMode)</primary></indexterm>QWidget::setBackgroundMode(Qt::BackgroundMode)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setEraseColor(QColor const&)</primary></indexterm>QWidget::setEraseColor(QColor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setErasePixmap(QPixmap const&)</primary></indexterm>QWidget::setErasePixmap(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setPalette(QPalette const&)</primary></indexterm>QWidget::setPalette(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setPaletteBackgroundColor(QColor const&)</primary></indexterm>QWidget::setPaletteBackgroundColor(QColor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setPaletteBackgroundPixmap(QPixmap const&)</primary></indexterm>QWidget::setPaletteBackgroundPixmap(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFont(QFont const&)</primary></indexterm>QWidget::setFont(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setCursor(QCursor const&)</primary></indexterm>QWidget::setCursor(QCursor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;33&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::unsetCursor()</primary></indexterm>QWidget::unsetCursor()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;34&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMask(QBitmap const&)</primary></indexterm>QWidget::setMask(QBitmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;35&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMask(QRegion const&)</primary></indexterm>QWidget::setMask(QRegion const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;36&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundColor(QColor const&)</primary></indexterm>QWidget::setBackgroundColor(QColor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;37&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundPixmap(QPixmap const&)</primary></indexterm>QWidget::setBackgroundPixmap(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;38&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setCaption(QString const&)</primary></indexterm>QWidget::setCaption(QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;39&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setIcon(QPixmap const&)</primary></indexterm>QWidget::setIcon(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;40&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setIconText(QString const&)</primary></indexterm>QWidget::setIconText(QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;41&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMouseTracking(bool)</primary></indexterm>QWidget::setMouseTracking(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;42&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFocus()</primary></indexterm>QWidget::setFocus()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;43&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setActiveWindow()</primary></indexterm>QWidget::setActiveWindow()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;44&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFocusPolicy(QWidget::FocusPolicy)</primary></indexterm>QWidget::setFocusPolicy(QWidget::FocusPolicy)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;45&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFocusProxy(QWidget*)</primary></indexterm>QWidget::setFocusProxy(QWidget*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;46&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setUpdatesEnabled(bool)</primary></indexterm>QWidget::setUpdatesEnabled(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;47&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::show()</primary></indexterm>QWidget::show()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;48&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::hide()</primary></indexterm>QWidget::hide()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;49&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showMinimized()</primary></indexterm>QWidget::showMinimized()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;50&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showMaximized()</primary></indexterm>QWidget::showMaximized()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;51&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showNormal()</primary></indexterm>QWidget::showNormal()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;52&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::polish()</primary></indexterm>QWidget::polish()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;53&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::move(int, int)</primary></indexterm>QWidget::move(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;54&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::resize(int, int)</primary></indexterm>QWidget::resize(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;55&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setGeometry(int, int, int, int)</primary></indexterm>QWidget::setGeometry(int, int, int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;56&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setGeometry(QRect const&)</primary></indexterm>NULL or QWidget::setGeometry(QRect const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;57&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::close(bool)</primary></indexterm>QWidget::close(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;58&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTabWidget::sizeHint() const</primary></indexterm>QTabWidget::sizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;59&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTabWidget::minimumSizeHint() const</primary></indexterm>QTabWidget::minimumSizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;60&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::sizePolicy() const</primary></indexterm>QWidget::sizePolicy() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;61&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setSizePolicy(QSizePolicy)</primary></indexterm>QWidget::setSizePolicy(QSizePolicy)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;62&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::heightForWidth(int) const</primary></indexterm>QWidget::heightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;63&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::adjustSize()</primary></indexterm>QWidget::adjustSize()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;64&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::reparent(QWidget*, unsigned int, QPoint const&, bool)</primary></indexterm>QWidget::reparent(QWidget*, unsigned int, QPoint const&, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;65&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setAcceptDrops(bool)</primary></indexterm>QWidget::setAcceptDrops(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;66&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setAutoMask(bool)</primary></indexterm>QWidget::setAutoMask(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;67&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundOrigin(QWidget::BackgroundOrigin)</primary></indexterm>QWidget::setBackgroundOrigin(QWidget::BackgroundOrigin)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;68&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::customWhatsThis() const</primary></indexterm>QWidget::customWhatsThis() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;69&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mousePressEvent(QMouseEvent*)</primary></indexterm>QWidget::mousePressEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;70&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseReleaseEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseReleaseEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;71&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseDoubleClickEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseDoubleClickEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;72&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseMoveEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseMoveEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;73&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::wheelEvent(QWheelEvent*)</primary></indexterm>QWidget::wheelEvent(QWheelEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;74&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyPressEvent(QKeyEvent*)</primary></indexterm>QWidget::keyPressEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;75&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyReleaseEvent(QKeyEvent*)</primary></indexterm>QWidget::keyReleaseEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;76&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusInEvent(QFocusEvent*)</primary></indexterm>QWidget::focusInEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;77&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusOutEvent(QFocusEvent*)</primary></indexterm>QWidget::focusOutEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;78&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enterEvent(QEvent*)</primary></indexterm>QWidget::enterEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;79&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::leaveEvent(QEvent*)</primary></indexterm>QWidget::leaveEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;80&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paintEvent(QPaintEvent*)</primary></indexterm>QWidget::paintEvent(QPaintEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;81&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::moveEvent(QMoveEvent*)</primary></indexterm>QWidget::moveEvent(QMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;82&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTabWidget::resizeEvent(QResizeEvent*)</primary></indexterm>QTabWidget::resizeEvent(QResizeEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;83&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::closeEvent(QCloseEvent*)</primary></indexterm>QWidget::closeEvent(QCloseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;84&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::contextMenuEvent(QContextMenuEvent*)</primary></indexterm>QWidget::contextMenuEvent(QContextMenuEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;85&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::imStartEvent(QIMEvent*)</primary></indexterm>QWidget::imStartEvent(QIMEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;86&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::imComposeEvent(QIMEvent*)</primary></indexterm>QWidget::imComposeEvent(QIMEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;87&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::imEndEvent(QIMEvent*)</primary></indexterm>QWidget::imEndEvent(QIMEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;88&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::tabletEvent(QTabletEvent*)</primary></indexterm>QWidget::tabletEvent(QTabletEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;89&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragEnterEvent(QDragEnterEvent*)</primary></indexterm>QWidget::dragEnterEvent(QDragEnterEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;90&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragMoveEvent(QDragMoveEvent*)</primary></indexterm>QWidget::dragMoveEvent(QDragMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;91&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragLeaveEvent(QDragLeaveEvent*)</primary></indexterm>QWidget::dragLeaveEvent(QDragLeaveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;92&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dropEvent(QDropEvent*)</primary></indexterm>QWidget::dropEvent(QDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;93&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTabWidget::showEvent(QShowEvent*)</primary></indexterm>QTabWidget::showEvent(QShowEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;94&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::hideEvent(QHideEvent*)</primary></indexterm>QWidget::hideEvent(QHideEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;95&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::x11Event(_XEvent*)</primary></indexterm>QWidget::x11Event(_XEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;96&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTabWidget::updateMask()</primary></indexterm>QTabWidget::updateMask()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;97&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTabWidget::styleChange(QStyle&)</primary></indexterm>QTabWidget::styleChange(QStyle&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;98&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enabledChange(bool)</primary></indexterm>QWidget::enabledChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;99&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paletteChange(QPalette const&)</primary></indexterm>QWidget::paletteChange(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;100&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::fontChange(QFont const&)</primary></indexterm>QWidget::fontChange(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;101&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::windowActivationChange(bool)</primary></indexterm>QWidget::windowActivationChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;102&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::metric(int) const</primary></indexterm>QWidget::metric(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;103&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::create(unsigned long, bool, bool)</primary></indexterm>QWidget::create(unsigned long, bool, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;104&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::destroy(bool, bool)</primary></indexterm>QWidget::destroy(bool, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;105&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setWState(unsigned int)</primary></indexterm>NULL or QWidget::setWState(unsigned int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;106&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setWFlags(unsigned int)</primary></indexterm>NULL or QWidget::setWFlags(unsigned int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;107&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusNextPrevChild(bool)</primary></indexterm>QWidget::focusNextPrevChild(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;108&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setKeyCompression(bool)</primary></indexterm>QWidget::setKeyCompression(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;109&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMicroFocusHint(int, int, int, int, bool, QFont*)</primary></indexterm>QWidget::setMicroFocusHint(int, int, int, int, bool, QFont*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;110&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTabWidget::addTab(QWidget*, QString const&)</primary></indexterm>QTabWidget::addTab(QWidget*, QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;111&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTabWidget::addTab(QWidget*, QIconSet const&, QString const&)</primary></indexterm>QTabWidget::addTab(QWidget*, QIconSet const&, QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;112&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTabWidget::addTab(QWidget*, QTab*)</primary></indexterm>QTabWidget::addTab(QWidget*, QTab*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;113&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTabWidget::insertTab(QWidget*, QString const&, int)</primary></indexterm>QTabWidget::insertTab(QWidget*, QString const&, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;114&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTabWidget::insertTab(QWidget*, QIconSet const&, QString const&, int)</primary></indexterm>QTabWidget::insertTab(QWidget*, QIconSet const&, QString const&, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;115&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTabWidget::insertTab(QWidget*, QTab*, int)</primary></indexterm>QTabWidget::insertTab(QWidget*, QTab*, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;116&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTabWidget::showPage(QWidget*)</primary></indexterm>QTabWidget::showPage(QWidget*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;117&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTabWidget::removePage(QWidget*)</primary></indexterm>QTabWidget::removePage(QWidget*)</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--classdata-->
<TABLE id="cls-58899-1">
<TITLE>Secondary vtable for QTabWidget</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>-80</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QTabWidget</primary></indexterm>typeinfo for QTabWidget</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QTabWidget::~QTabWidget()</primary></indexterm>non-virtual thunk to QTabWidget::~QTabWidget()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QTabWidget::~QTabWidget()</primary></indexterm>non-virtual thunk to QTabWidget::~QTabWidget()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::setResolution(int)</primary></indexterm>QPaintDevice::setResolution(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::resolution() const</primary></indexterm>QPaintDevice::resolution() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::handle() const</primary></indexterm>QPaintDevice::handle() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::x11RenderHandle() const</primary></indexterm>QPaintDevice::x11RenderHandle() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::setX11Data(QPaintDeviceX11Data const*)</primary></indexterm>QPaintDevice::setX11Data(QPaintDeviceX11Data const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::cmd(int, QPainter*, QPDevCmdParam*)</primary></indexterm>QPaintDevice::cmd(int, QPainter*, QPDevCmdParam*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::metric(int) const</primary></indexterm>non-virtual thunk to QWidget::metric(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::fontMet(QFont*, int, char const*, int) const</primary></indexterm>QPaintDevice::fontMet(QFont*, int, char const*, int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::fontInf(QFont*, int) const</primary></indexterm>QPaintDevice::fontInf(QFont*, int) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QTabWidget  class
is described by <XREF LINKEND="rtti-51563">
</PARA>
<!--classdata-->
<TABLE ID="rtti-51563">
<TITLE>typeinfo for QTabWidget</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QTabWidget</primary></indexterm>typeinfo name for QTabWidget</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QWidget</primary></indexterm>typeinfo for QWidget</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QTextView</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QTextView class
is described by <XREF LINKEND="cls-54943-0">
</PARA>
<!--classdata-->
<TABLE id="cls-54943-0">
<TITLE>Primary vtable for QTextView</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QTextView</primary></indexterm>typeinfo for QTextView</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextView::metaObject() const</primary></indexterm>NULL or QTextView::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextView::className() const</primary></indexterm>QTextView::className() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextView::qt_cast(char const*)</primary></indexterm>QTextView::qt_cast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextView::qt_invoke(int, QUObject*)</primary></indexterm>QTextView::qt_invoke(int, QUObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextView::qt_emit(int, QUObject*)</primary></indexterm>QTextView::qt_emit(int, QUObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextView::qt_property(int, int, QVariant*)</primary></indexterm>QTextView::qt_property(int, int, QVariant*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextView::~QTextView()</primary></indexterm>QTextView::~QTextView()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextView::~QTextView()</primary></indexterm>QTextView::~QTextView()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::event(QEvent*)</primary></indexterm>QTextEdit::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::eventFilter(QObject*, QEvent*)</primary></indexterm>QTextEdit::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setName(char const*)</primary></indexterm>QWidget::setName(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::insertChild(QObject*)</primary></indexterm>QObject::insertChild(QObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::removeChild(QObject*)</primary></indexterm>QScrollView::removeChild(QObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::setProperty(char const*, QVariant const&)</primary></indexterm>QObject::setProperty(char const*, QVariant const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::property(char const*) const</primary></indexterm>QObject::property(char const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QCustomEvent*)</primary></indexterm>QObject::customEvent(QCustomEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::checkConnectArgs(char const*, QObject const*, char const*)</primary></indexterm>QObject::checkConnectArgs(char const*, QObject const*, char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::setEnabled(bool)</primary></indexterm>QTextEdit::setEnabled(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMinimumSize(int, int)</primary></indexterm>QWidget::setMinimumSize(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMaximumSize(int, int)</primary></indexterm>QWidget::setMaximumSize(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setSizeIncrement(int, int)</primary></indexterm>QWidget::setSizeIncrement(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundMode(Qt::BackgroundMode)</primary></indexterm>QWidget::setBackgroundMode(Qt::BackgroundMode)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setEraseColor(QColor const&)</primary></indexterm>QWidget::setEraseColor(QColor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setErasePixmap(QPixmap const&)</primary></indexterm>QWidget::setErasePixmap(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::setPalette(QPalette const&)</primary></indexterm>QTextEdit::setPalette(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setPaletteBackgroundColor(QColor const&)</primary></indexterm>QWidget::setPaletteBackgroundColor(QColor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setPaletteBackgroundPixmap(QPixmap const&)</primary></indexterm>QWidget::setPaletteBackgroundPixmap(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::setFont(QFont const&)</primary></indexterm>QTextEdit::setFont(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setCursor(QCursor const&)</primary></indexterm>QWidget::setCursor(QCursor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;33&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::unsetCursor()</primary></indexterm>QWidget::unsetCursor()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;34&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMask(QBitmap const&)</primary></indexterm>QWidget::setMask(QBitmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;35&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMask(QRegion const&)</primary></indexterm>QWidget::setMask(QRegion const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;36&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundColor(QColor const&)</primary></indexterm>QWidget::setBackgroundColor(QColor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;37&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundPixmap(QPixmap const&)</primary></indexterm>QWidget::setBackgroundPixmap(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;38&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setCaption(QString const&)</primary></indexterm>QWidget::setCaption(QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;39&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setIcon(QPixmap const&)</primary></indexterm>QWidget::setIcon(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;40&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setIconText(QString const&)</primary></indexterm>QWidget::setIconText(QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;41&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMouseTracking(bool)</primary></indexterm>QWidget::setMouseTracking(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;42&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFocus()</primary></indexterm>QWidget::setFocus()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;43&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setActiveWindow()</primary></indexterm>QWidget::setActiveWindow()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;44&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFocusPolicy(QWidget::FocusPolicy)</primary></indexterm>QWidget::setFocusPolicy(QWidget::FocusPolicy)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;45&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFocusProxy(QWidget*)</primary></indexterm>QWidget::setFocusProxy(QWidget*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;46&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setUpdatesEnabled(bool)</primary></indexterm>QWidget::setUpdatesEnabled(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;47&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::show()</primary></indexterm>QScrollView::show()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;48&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::hide()</primary></indexterm>QWidget::hide()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;49&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showMinimized()</primary></indexterm>QWidget::showMinimized()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;50&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showMaximized()</primary></indexterm>QWidget::showMaximized()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;51&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showNormal()</primary></indexterm>QWidget::showNormal()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;52&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::polish()</primary></indexterm>QTextEdit::polish()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;53&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::move(int, int)</primary></indexterm>QWidget::move(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;54&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::resize(int, int)</primary></indexterm>QScrollView::resize(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;55&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setGeometry(int, int, int, int)</primary></indexterm>QWidget::setGeometry(int, int, int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;56&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setGeometry(QRect const&)</primary></indexterm>NULL or QWidget::setGeometry(QRect const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;57&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::close(bool)</primary></indexterm>QWidget::close(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;58&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::sizeHint() const</primary></indexterm>QTextEdit::sizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;59&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::minimumSizeHint() const</primary></indexterm>QScrollView::minimumSizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;60&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::sizePolicy() const</primary></indexterm>QWidget::sizePolicy() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;61&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setSizePolicy(QSizePolicy)</primary></indexterm>QWidget::setSizePolicy(QSizePolicy)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;62&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::heightForWidth(int) const</primary></indexterm>QTextEdit::heightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;63&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::adjustSize()</primary></indexterm>QWidget::adjustSize()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;64&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::reparent(QWidget*, unsigned int, QPoint const&, bool)</primary></indexterm>QWidget::reparent(QWidget*, unsigned int, QPoint const&, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;65&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setAcceptDrops(bool)</primary></indexterm>QWidget::setAcceptDrops(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;66&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setAutoMask(bool)</primary></indexterm>QWidget::setAutoMask(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;67&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundOrigin(QWidget::BackgroundOrigin)</primary></indexterm>QWidget::setBackgroundOrigin(QWidget::BackgroundOrigin)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;68&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::customWhatsThis() const</primary></indexterm>QWidget::customWhatsThis() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;69&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::mousePressEvent(QMouseEvent*)</primary></indexterm>QScrollView::mousePressEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;70&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::mouseReleaseEvent(QMouseEvent*)</primary></indexterm>QScrollView::mouseReleaseEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;71&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::mouseDoubleClickEvent(QMouseEvent*)</primary></indexterm>QScrollView::mouseDoubleClickEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;72&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::mouseMoveEvent(QMouseEvent*)</primary></indexterm>QScrollView::mouseMoveEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;73&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::wheelEvent(QWheelEvent*)</primary></indexterm>QScrollView::wheelEvent(QWheelEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;74&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::keyPressEvent(QKeyEvent*)</primary></indexterm>QTextEdit::keyPressEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;75&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyReleaseEvent(QKeyEvent*)</primary></indexterm>QWidget::keyReleaseEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;76&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusInEvent(QFocusEvent*)</primary></indexterm>QWidget::focusInEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;77&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusOutEvent(QFocusEvent*)</primary></indexterm>QWidget::focusOutEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;78&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enterEvent(QEvent*)</primary></indexterm>QWidget::enterEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;79&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::leaveEvent(QEvent*)</primary></indexterm>QWidget::leaveEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;80&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::paintEvent(QPaintEvent*)</primary></indexterm>QFrame::paintEvent(QPaintEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;81&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::moveEvent(QMoveEvent*)</primary></indexterm>QWidget::moveEvent(QMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;82&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::resizeEvent(QResizeEvent*)</primary></indexterm>QTextEdit::resizeEvent(QResizeEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;83&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::closeEvent(QCloseEvent*)</primary></indexterm>QWidget::closeEvent(QCloseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;84&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::contextMenuEvent(QContextMenuEvent*)</primary></indexterm>QScrollView::contextMenuEvent(QContextMenuEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;85&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::imStartEvent(QIMEvent*)</primary></indexterm>QTextEdit::imStartEvent(QIMEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;86&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::imComposeEvent(QIMEvent*)</primary></indexterm>QTextEdit::imComposeEvent(QIMEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;87&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::imEndEvent(QIMEvent*)</primary></indexterm>QTextEdit::imEndEvent(QIMEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;88&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::tabletEvent(QTabletEvent*)</primary></indexterm>QWidget::tabletEvent(QTabletEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;89&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragEnterEvent(QDragEnterEvent*)</primary></indexterm>QWidget::dragEnterEvent(QDragEnterEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;90&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragMoveEvent(QDragMoveEvent*)</primary></indexterm>QWidget::dragMoveEvent(QDragMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;91&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragLeaveEvent(QDragLeaveEvent*)</primary></indexterm>QWidget::dragLeaveEvent(QDragLeaveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;92&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dropEvent(QDropEvent*)</primary></indexterm>QWidget::dropEvent(QDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;93&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showEvent(QShowEvent*)</primary></indexterm>QWidget::showEvent(QShowEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;94&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::hideEvent(QHideEvent*)</primary></indexterm>QWidget::hideEvent(QHideEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;95&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::x11Event(_XEvent*)</primary></indexterm>QWidget::x11Event(_XEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;96&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::updateMask()</primary></indexterm>QWidget::updateMask()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;97&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::styleChange(QStyle&)</primary></indexterm>QScrollView::styleChange(QStyle&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;98&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enabledChange(bool)</primary></indexterm>QWidget::enabledChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;99&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paletteChange(QPalette const&)</primary></indexterm>QWidget::paletteChange(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;100&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::fontChange(QFont const&)</primary></indexterm>QScrollView::fontChange(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;101&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::windowActivationChange(bool)</primary></indexterm>QTextEdit::windowActivationChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;102&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::metric(int) const</primary></indexterm>QWidget::metric(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;103&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::create(unsigned long, bool, bool)</primary></indexterm>QWidget::create(unsigned long, bool, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;104&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::destroy(bool, bool)</primary></indexterm>QWidget::destroy(bool, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;105&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setWState(unsigned int)</primary></indexterm>NULL or QWidget::setWState(unsigned int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;106&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setWFlags(unsigned int)</primary></indexterm>NULL or QWidget::setWFlags(unsigned int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;107&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::focusNextPrevChild(bool)</primary></indexterm>QTextEdit::focusNextPrevChild(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;108&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setKeyCompression(bool)</primary></indexterm>QWidget::setKeyCompression(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;109&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMicroFocusHint(int, int, int, int, bool, QFont*)</primary></indexterm>QWidget::setMicroFocusHint(int, int, int, int, bool, QFont*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;110&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::setFrameStyle(int)</primary></indexterm>QFrame::setFrameStyle(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;111&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::setLineWidth(int)</primary></indexterm>QFrame::setLineWidth(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;112&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::setMargin(int)</primary></indexterm>QFrame::setMargin(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;113&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::setMidLineWidth(int)</primary></indexterm>QFrame::setMidLineWidth(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;114&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::setFrameRect(QRect const&)</primary></indexterm>QFrame::setFrameRect(QRect const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;115&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::drawFrame(QPainter*)</primary></indexterm>QFrame::drawFrame(QPainter*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;116&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::drawContents(QPainter*)</primary></indexterm>QTextEdit::drawContents(QPainter*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;117&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::frameChanged()</primary></indexterm>QScrollView::frameChanged()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;118&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::setResizePolicy(QScrollView::ResizePolicy)</primary></indexterm>QScrollView::setResizePolicy(QScrollView::ResizePolicy)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;119&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::addChild(QWidget*, int, int)</primary></indexterm>QScrollView::addChild(QWidget*, int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;120&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::moveChild(QWidget*, int, int)</primary></indexterm>QScrollView::moveChild(QWidget*, int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;121&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::setVScrollBarMode(QScrollView::ScrollBarMode)</primary></indexterm>QScrollView::setVScrollBarMode(QScrollView::ScrollBarMode)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;122&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::setHScrollBarMode(QScrollView::ScrollBarMode)</primary></indexterm>QScrollView::setHScrollBarMode(QScrollView::ScrollBarMode)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;123&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::setCornerWidget(QWidget*)</primary></indexterm>QScrollView::setCornerWidget(QWidget*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;124&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::setDragAutoScroll(bool)</primary></indexterm>QScrollView::setDragAutoScroll(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;125&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::resizeContents(int, int)</primary></indexterm>QScrollView::resizeContents(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;126&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::setContentsPos(int, int)</primary></indexterm>QScrollView::setContentsPos(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;127&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::drawContents(QPainter*, int, int, int, int)</primary></indexterm>QTextEdit::drawContents(QPainter*, int, int, int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;128&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::drawContentsOffset(QPainter*, int, int, int, int, int, int)</primary></indexterm>QScrollView::drawContentsOffset(QPainter*, int, int, int, int, int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;129&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::contentsMousePressEvent(QMouseEvent*)</primary></indexterm>QTextEdit::contentsMousePressEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;130&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::contentsMouseReleaseEvent(QMouseEvent*)</primary></indexterm>QTextEdit::contentsMouseReleaseEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;131&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::contentsMouseDoubleClickEvent(QMouseEvent*)</primary></indexterm>QTextEdit::contentsMouseDoubleClickEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;132&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::contentsMouseMoveEvent(QMouseEvent*)</primary></indexterm>QTextEdit::contentsMouseMoveEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;133&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::contentsDragEnterEvent(QDragEnterEvent*)</primary></indexterm>QTextEdit::contentsDragEnterEvent(QDragEnterEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;134&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::contentsDragMoveEvent(QDragMoveEvent*)</primary></indexterm>QTextEdit::contentsDragMoveEvent(QDragMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;135&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::contentsDragLeaveEvent(QDragLeaveEvent*)</primary></indexterm>QTextEdit::contentsDragLeaveEvent(QDragLeaveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;136&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::contentsDropEvent(QDropEvent*)</primary></indexterm>QTextEdit::contentsDropEvent(QDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;137&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::contentsWheelEvent(QWheelEvent*)</primary></indexterm>QTextEdit::contentsWheelEvent(QWheelEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;138&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::contentsContextMenuEvent(QContextMenuEvent*)</primary></indexterm>QTextEdit::contentsContextMenuEvent(QContextMenuEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;139&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::viewportPaintEvent(QPaintEvent*)</primary></indexterm>QScrollView::viewportPaintEvent(QPaintEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;140&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::viewportResizeEvent(QResizeEvent*)</primary></indexterm>QTextEdit::viewportResizeEvent(QResizeEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;141&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::viewportMousePressEvent(QMouseEvent*)</primary></indexterm>QScrollView::viewportMousePressEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;142&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::viewportMouseReleaseEvent(QMouseEvent*)</primary></indexterm>QScrollView::viewportMouseReleaseEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;143&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::viewportMouseDoubleClickEvent(QMouseEvent*)</primary></indexterm>QScrollView::viewportMouseDoubleClickEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;144&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::viewportMouseMoveEvent(QMouseEvent*)</primary></indexterm>QScrollView::viewportMouseMoveEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;145&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::viewportDragEnterEvent(QDragEnterEvent*)</primary></indexterm>QScrollView::viewportDragEnterEvent(QDragEnterEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;146&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::viewportDragMoveEvent(QDragMoveEvent*)</primary></indexterm>QScrollView::viewportDragMoveEvent(QDragMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;147&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::viewportDragLeaveEvent(QDragLeaveEvent*)</primary></indexterm>QScrollView::viewportDragLeaveEvent(QDragLeaveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;148&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::viewportDropEvent(QDropEvent*)</primary></indexterm>QScrollView::viewportDropEvent(QDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;149&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::viewportWheelEvent(QWheelEvent*)</primary></indexterm>QScrollView::viewportWheelEvent(QWheelEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;150&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::viewportContextMenuEvent(QContextMenuEvent*)</primary></indexterm>QScrollView::viewportContextMenuEvent(QContextMenuEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;151&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::setMargins(int, int, int, int)</primary></indexterm>QScrollView::setMargins(int, int, int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;152&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::setHBarGeometry(QScrollBar&, int, int, int, int)</primary></indexterm>QScrollView::setHBarGeometry(QScrollBar&, int, int, int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;153&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::setVBarGeometry(QScrollBar&, int, int, int, int)</primary></indexterm>QScrollView::setVBarGeometry(QScrollBar&, int, int, int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;154&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::find(QString const&, bool, bool, bool, int*, int*)</primary></indexterm>QTextEdit::find(QString const&, bool, bool, bool, int*, int*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;155&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::getFormat(int, int, QFont*, QColor*, QTextEdit::VerticalAlignment*)</primary></indexterm>QTextEdit::getFormat(int, int, QFont*, QColor*, QTextEdit::VerticalAlignment*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;156&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::getParagraphFormat(int, QFont*, QColor*, QTextEdit::VerticalAlignment*, int*, QStyleSheetItem::DisplayMode*, QStyleSheetItem::ListStyle*, int*)</primary></indexterm>QTextEdit::getParagraphFormat(int, QFont*, QColor*, QTextEdit::VerticalAlignment*, int*, QStyleSheetItem::DisplayMode*, QStyleSheetItem::ListStyle*, int*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;157&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::setMimeSourceFactory(QMimeSourceFactory*)</primary></indexterm>QTextEdit::setMimeSourceFactory(QMimeSourceFactory*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;158&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::setStyleSheet(QStyleSheet*)</primary></indexterm>QTextEdit::setStyleSheet(QStyleSheet*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;159&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::scrollToAnchor(QString const&)</primary></indexterm>QTextEdit::scrollToAnchor(QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;160&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::setPaper(QBrush const&)</primary></indexterm>QTextEdit::setPaper(QBrush const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;161&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::setLinkUnderline(bool)</primary></indexterm>QTextEdit::setLinkUnderline(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;162&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::setWordWrap(QTextEdit::WordWrap)</primary></indexterm>QTextEdit::setWordWrap(QTextEdit::WordWrap)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;163&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::setWrapColumnOrWidth(int)</primary></indexterm>QTextEdit::setWrapColumnOrWidth(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;164&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::setWrapPolicy(QTextEdit::WrapPolicy)</primary></indexterm>QTextEdit::setWrapPolicy(QTextEdit::WrapPolicy)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;165&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::copy()</primary></indexterm>QTextEdit::copy()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;166&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::append(QString const&)</primary></indexterm>QTextEdit::append(QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;167&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::setText(QString const&, QString const&)</primary></indexterm>QTextEdit::setText(QString const&, QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;168&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::setTextFormat(Qt::TextFormat)</primary></indexterm>QTextEdit::setTextFormat(Qt::TextFormat)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;169&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::selectAll(bool)</primary></indexterm>QTextEdit::selectAll(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;170&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::setTabStopWidth(int)</primary></indexterm>QTextEdit::setTabStopWidth(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;171&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::zoomIn(int)</primary></indexterm>QTextEdit::zoomIn(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;172&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::zoomIn()</primary></indexterm>NULL or QTextEdit::zoomIn()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;173&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::zoomOut(int)</primary></indexterm>QTextEdit::zoomOut(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;174&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::zoomOut()</primary></indexterm>NULL or QTextEdit::zoomOut()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;175&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::zoomTo(int)</primary></indexterm>QTextEdit::zoomTo(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;176&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::sync()</primary></indexterm>QTextEdit::sync()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;177&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::setReadOnly(bool)</primary></indexterm>QTextEdit::setReadOnly(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;178&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::undo()</primary></indexterm>QTextEdit::undo()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;179&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::redo()</primary></indexterm>QTextEdit::redo()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;180&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::cut()</primary></indexterm>QTextEdit::cut()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;181&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::paste()</primary></indexterm>QTextEdit::paste()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;182&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::pasteSubType(QCString const&)</primary></indexterm>QTextEdit::pasteSubType(QCString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;183&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::clear()</primary></indexterm>QTextEdit::clear()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;184&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::del()</primary></indexterm>QTextEdit::del()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;185&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::indent()</primary></indexterm>QTextEdit::indent()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;186&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::setItalic(bool)</primary></indexterm>QTextEdit::setItalic(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;187&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::setBold(bool)</primary></indexterm>QTextEdit::setBold(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;188&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::setUnderline(bool)</primary></indexterm>QTextEdit::setUnderline(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;189&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::setFamily(QString const&)</primary></indexterm>QTextEdit::setFamily(QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;190&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::setPointSize(int)</primary></indexterm>QTextEdit::setPointSize(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;191&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::setColor(QColor const&)</primary></indexterm>QTextEdit::setColor(QColor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;192&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::setVerticalAlignment(QTextEdit::VerticalAlignment)</primary></indexterm>QTextEdit::setVerticalAlignment(QTextEdit::VerticalAlignment)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;193&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::setAlignment(int)</primary></indexterm>QTextEdit::setAlignment(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;194&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::setParagType(QStyleSheetItem::DisplayMode, QStyleSheetItem::ListStyle)</primary></indexterm>QTextEdit::setParagType(QStyleSheetItem::DisplayMode, QStyleSheetItem::ListStyle)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;195&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::setCursorPosition(int, int)</primary></indexterm>QTextEdit::setCursorPosition(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;196&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::setSelection(int, int, int, int, int)</primary></indexterm>QTextEdit::setSelection(int, int, int, int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;197&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::setSelectionAttributes(int, QColor const&, bool)</primary></indexterm>QTextEdit::setSelectionAttributes(int, QColor const&, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;198&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::setModified(bool)</primary></indexterm>QTextEdit::setModified(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;199&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::resetFormat()</primary></indexterm>QTextEdit::resetFormat()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;200&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::setUndoDepth(int)</primary></indexterm>QTextEdit::setUndoDepth(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;201&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::setFormat(QTextFormat*, int)</primary></indexterm>QTextEdit::setFormat(QTextFormat*, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;202&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::ensureCursorVisible()</primary></indexterm>QTextEdit::ensureCursorVisible()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;203&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::placeCursor(QPoint const&, QTextCursor*)</primary></indexterm>QTextEdit::placeCursor(QPoint const&, QTextCursor*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;204&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::moveCursor(QTextEdit::CursorAction, bool)</primary></indexterm>QTextEdit::moveCursor(QTextEdit::CursorAction, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;205&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::doKeyboardAction(QTextEdit::KeyboardAction)</primary></indexterm>QTextEdit::doKeyboardAction(QTextEdit::KeyboardAction)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;206&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::removeSelectedText(int)</primary></indexterm>QTextEdit::removeSelectedText(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;207&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::removeSelection(int)</primary></indexterm>QTextEdit::removeSelection(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;208&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::setCurrentFont(QFont const&)</primary></indexterm>NULL or QTextEdit::setCurrentFont(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;209&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::setOverwriteMode(bool)</primary></indexterm>NULL or QTextEdit::setOverwriteMode(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;210&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::scrollToBottom()</primary></indexterm>QTextEdit::scrollToBottom()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;211&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::insert(QString const&, bool, bool, bool)</primary></indexterm>QTextEdit::insert(QString const&, bool, bool, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;212&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::insertAt(QString const&, int, int)</primary></indexterm>QTextEdit::insertAt(QString const&, int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;213&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::removeParagraph(int)</primary></indexterm>QTextEdit::removeParagraph(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;214&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::insertParagraph(QString const&, int)</primary></indexterm>QTextEdit::insertParagraph(QString const&, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;215&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::setParagraphBackgroundColor(int, QColor const&)</primary></indexterm>QTextEdit::setParagraphBackgroundColor(int, QColor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;216&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::clearParagraphBackground(int)</primary></indexterm>QTextEdit::clearParagraphBackground(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;217&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::setUndoRedoEnabled(bool)</primary></indexterm>QTextEdit::setUndoRedoEnabled(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;218&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::createPopupMenu(QPoint const&)</primary></indexterm>QTextEdit::createPopupMenu(QPoint const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;219&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::createPopupMenu()</primary></indexterm>QTextEdit::createPopupMenu()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;220&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::doChangeInterval()</primary></indexterm>QTextEdit::doChangeInterval()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;221&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::linksEnabled() const</primary></indexterm>NULL or QTextEdit::linksEnabled() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;222&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::emitHighlighted(QString const&)</primary></indexterm>NULL or QTextEdit::emitHighlighted(QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;223&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::emitLinkClicked(QString const&)</primary></indexterm>NULL or QTextEdit::emitLinkClicked(QString const&)</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--classdata-->
<TABLE id="cls-54943-1">
<TITLE>Secondary vtable for QTextView</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>-80</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QTextView</primary></indexterm>typeinfo for QTextView</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QTextView::~QTextView()</primary></indexterm>non-virtual thunk to QTextView::~QTextView()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QTextView::~QTextView()</primary></indexterm>non-virtual thunk to QTextView::~QTextView()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::setResolution(int)</primary></indexterm>QPaintDevice::setResolution(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::resolution() const</primary></indexterm>QPaintDevice::resolution() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::handle() const</primary></indexterm>QPaintDevice::handle() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::x11RenderHandle() const</primary></indexterm>QPaintDevice::x11RenderHandle() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::setX11Data(QPaintDeviceX11Data const*)</primary></indexterm>QPaintDevice::setX11Data(QPaintDeviceX11Data const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::cmd(int, QPainter*, QPDevCmdParam*)</primary></indexterm>QPaintDevice::cmd(int, QPainter*, QPDevCmdParam*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::metric(int) const</primary></indexterm>non-virtual thunk to QWidget::metric(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::fontMet(QFont*, int, char const*, int) const</primary></indexterm>QPaintDevice::fontMet(QFont*, int, char const*, int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::fontInf(QFont*, int) const</primary></indexterm>QPaintDevice::fontInf(QFont*, int) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QTextView  class
is described by <XREF LINKEND="rtti-53340">
</PARA>
<!--classdata-->
<TABLE ID="rtti-53340">
<TITLE>typeinfo for QTextView</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QTextView</primary></indexterm>typeinfo name for QTextView</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QTextEdit</primary></indexterm>typeinfo for QTextEdit</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QTab</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QTab class
is described in the generic part of this specification.
</PARA>
<PARA>
The Run Time Type Information for the QTab  class
is described by <XREF LINKEND="rtti-58872">
</PARA>
<!--classdata-->
<TABLE ID="rtti-58872">
<TITLE>typeinfo for QTab</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QTab</primary></indexterm>typeinfo name for QTab</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for Qt</primary></indexterm>typeinfo for Qt</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QDial</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QDial class
is described by <XREF LINKEND="cls-56943-0">
</PARA>
<!--classdata-->
<TABLE id="cls-56943-0">
<TITLE>Primary vtable for QDial</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QDial</primary></indexterm>typeinfo for QDial</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDial::metaObject() const</primary></indexterm>NULL or QDial::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDial::className() const</primary></indexterm>QDial::className() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDial::qt_cast(char const*)</primary></indexterm>QDial::qt_cast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDial::qt_invoke(int, QUObject*)</primary></indexterm>QDial::qt_invoke(int, QUObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDial::qt_emit(int, QUObject*)</primary></indexterm>QDial::qt_emit(int, QUObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDial::qt_property(int, int, QVariant*)</primary></indexterm>QDial::qt_property(int, int, QVariant*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDial::~QDial()</primary></indexterm>QDial::~QDial()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDial::~QDial()</primary></indexterm>QDial::~QDial()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::event(QEvent*)</primary></indexterm>QWidget::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::eventFilter(QObject*, QEvent*)</primary></indexterm>QObject::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setName(char const*)</primary></indexterm>QWidget::setName(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::insertChild(QObject*)</primary></indexterm>QObject::insertChild(QObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::removeChild(QObject*)</primary></indexterm>QObject::removeChild(QObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::setProperty(char const*, QVariant const&)</primary></indexterm>QObject::setProperty(char const*, QVariant const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::property(char const*) const</primary></indexterm>QObject::property(char const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QCustomEvent*)</primary></indexterm>QObject::customEvent(QCustomEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::checkConnectArgs(char const*, QObject const*, char const*)</primary></indexterm>QObject::checkConnectArgs(char const*, QObject const*, char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setEnabled(bool)</primary></indexterm>QWidget::setEnabled(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMinimumSize(int, int)</primary></indexterm>QWidget::setMinimumSize(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMaximumSize(int, int)</primary></indexterm>QWidget::setMaximumSize(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setSizeIncrement(int, int)</primary></indexterm>QWidget::setSizeIncrement(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundMode(Qt::BackgroundMode)</primary></indexterm>QWidget::setBackgroundMode(Qt::BackgroundMode)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setEraseColor(QColor const&)</primary></indexterm>QWidget::setEraseColor(QColor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setErasePixmap(QPixmap const&)</primary></indexterm>QWidget::setErasePixmap(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setPalette(QPalette const&)</primary></indexterm>QWidget::setPalette(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setPaletteBackgroundColor(QColor const&)</primary></indexterm>QWidget::setPaletteBackgroundColor(QColor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setPaletteBackgroundPixmap(QPixmap const&)</primary></indexterm>QWidget::setPaletteBackgroundPixmap(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFont(QFont const&)</primary></indexterm>QWidget::setFont(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setCursor(QCursor const&)</primary></indexterm>QWidget::setCursor(QCursor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;33&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::unsetCursor()</primary></indexterm>QWidget::unsetCursor()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;34&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMask(QBitmap const&)</primary></indexterm>QWidget::setMask(QBitmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;35&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMask(QRegion const&)</primary></indexterm>QWidget::setMask(QRegion const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;36&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundColor(QColor const&)</primary></indexterm>QWidget::setBackgroundColor(QColor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;37&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundPixmap(QPixmap const&)</primary></indexterm>QWidget::setBackgroundPixmap(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;38&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setCaption(QString const&)</primary></indexterm>QWidget::setCaption(QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;39&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setIcon(QPixmap const&)</primary></indexterm>QWidget::setIcon(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;40&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setIconText(QString const&)</primary></indexterm>QWidget::setIconText(QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;41&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMouseTracking(bool)</primary></indexterm>QWidget::setMouseTracking(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;42&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFocus()</primary></indexterm>QWidget::setFocus()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;43&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setActiveWindow()</primary></indexterm>QWidget::setActiveWindow()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;44&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFocusPolicy(QWidget::FocusPolicy)</primary></indexterm>QWidget::setFocusPolicy(QWidget::FocusPolicy)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;45&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFocusProxy(QWidget*)</primary></indexterm>QWidget::setFocusProxy(QWidget*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;46&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setUpdatesEnabled(bool)</primary></indexterm>QWidget::setUpdatesEnabled(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;47&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::show()</primary></indexterm>QWidget::show()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;48&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::hide()</primary></indexterm>QWidget::hide()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;49&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showMinimized()</primary></indexterm>QWidget::showMinimized()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;50&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showMaximized()</primary></indexterm>QWidget::showMaximized()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;51&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showNormal()</primary></indexterm>QWidget::showNormal()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;52&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::polish()</primary></indexterm>QWidget::polish()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;53&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::move(int, int)</primary></indexterm>QWidget::move(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;54&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::resize(int, int)</primary></indexterm>QWidget::resize(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;55&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setGeometry(int, int, int, int)</primary></indexterm>QWidget::setGeometry(int, int, int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;56&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setGeometry(QRect const&)</primary></indexterm>NULL or QWidget::setGeometry(QRect const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;57&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::close(bool)</primary></indexterm>QWidget::close(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;58&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDial::sizeHint() const</primary></indexterm>QDial::sizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;59&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDial::minimumSizeHint() const</primary></indexterm>QDial::minimumSizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;60&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::sizePolicy() const</primary></indexterm>QWidget::sizePolicy() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;61&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setSizePolicy(QSizePolicy)</primary></indexterm>QWidget::setSizePolicy(QSizePolicy)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;62&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::heightForWidth(int) const</primary></indexterm>QWidget::heightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;63&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::adjustSize()</primary></indexterm>QWidget::adjustSize()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;64&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::reparent(QWidget*, unsigned int, QPoint const&, bool)</primary></indexterm>QWidget::reparent(QWidget*, unsigned int, QPoint const&, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;65&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setAcceptDrops(bool)</primary></indexterm>QWidget::setAcceptDrops(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;66&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setAutoMask(bool)</primary></indexterm>QWidget::setAutoMask(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;67&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundOrigin(QWidget::BackgroundOrigin)</primary></indexterm>QWidget::setBackgroundOrigin(QWidget::BackgroundOrigin)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;68&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::customWhatsThis() const</primary></indexterm>QWidget::customWhatsThis() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;69&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDial::mousePressEvent(QMouseEvent*)</primary></indexterm>QDial::mousePressEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;70&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDial::mouseReleaseEvent(QMouseEvent*)</primary></indexterm>QDial::mouseReleaseEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;71&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseDoubleClickEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseDoubleClickEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;72&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDial::mouseMoveEvent(QMouseEvent*)</primary></indexterm>QDial::mouseMoveEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;73&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDial::wheelEvent(QWheelEvent*)</primary></indexterm>QDial::wheelEvent(QWheelEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;74&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDial::keyPressEvent(QKeyEvent*)</primary></indexterm>QDial::keyPressEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;75&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyReleaseEvent(QKeyEvent*)</primary></indexterm>QWidget::keyReleaseEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;76&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDial::focusInEvent(QFocusEvent*)</primary></indexterm>QDial::focusInEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;77&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDial::focusOutEvent(QFocusEvent*)</primary></indexterm>QDial::focusOutEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;78&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enterEvent(QEvent*)</primary></indexterm>QWidget::enterEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;79&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::leaveEvent(QEvent*)</primary></indexterm>QWidget::leaveEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;80&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDial::paintEvent(QPaintEvent*)</primary></indexterm>QDial::paintEvent(QPaintEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;81&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::moveEvent(QMoveEvent*)</primary></indexterm>QWidget::moveEvent(QMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;82&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDial::resizeEvent(QResizeEvent*)</primary></indexterm>QDial::resizeEvent(QResizeEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;83&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::closeEvent(QCloseEvent*)</primary></indexterm>QWidget::closeEvent(QCloseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;84&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::contextMenuEvent(QContextMenuEvent*)</primary></indexterm>QWidget::contextMenuEvent(QContextMenuEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;85&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::imStartEvent(QIMEvent*)</primary></indexterm>QWidget::imStartEvent(QIMEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;86&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::imComposeEvent(QIMEvent*)</primary></indexterm>QWidget::imComposeEvent(QIMEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;87&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::imEndEvent(QIMEvent*)</primary></indexterm>QWidget::imEndEvent(QIMEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;88&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::tabletEvent(QTabletEvent*)</primary></indexterm>QWidget::tabletEvent(QTabletEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;89&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragEnterEvent(QDragEnterEvent*)</primary></indexterm>QWidget::dragEnterEvent(QDragEnterEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;90&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragMoveEvent(QDragMoveEvent*)</primary></indexterm>QWidget::dragMoveEvent(QDragMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;91&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragLeaveEvent(QDragLeaveEvent*)</primary></indexterm>QWidget::dragLeaveEvent(QDragLeaveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;92&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dropEvent(QDropEvent*)</primary></indexterm>QWidget::dropEvent(QDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;93&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showEvent(QShowEvent*)</primary></indexterm>QWidget::showEvent(QShowEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;94&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::hideEvent(QHideEvent*)</primary></indexterm>QWidget::hideEvent(QHideEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;95&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::x11Event(_XEvent*)</primary></indexterm>QWidget::x11Event(_XEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;96&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::updateMask()</primary></indexterm>QWidget::updateMask()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;97&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::styleChange(QStyle&)</primary></indexterm>QWidget::styleChange(QStyle&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;98&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enabledChange(bool)</primary></indexterm>QWidget::enabledChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;99&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paletteChange(QPalette const&)</primary></indexterm>QWidget::paletteChange(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;100&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::fontChange(QFont const&)</primary></indexterm>QWidget::fontChange(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;101&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::windowActivationChange(bool)</primary></indexterm>QWidget::windowActivationChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;102&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::metric(int) const</primary></indexterm>QWidget::metric(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;103&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::create(unsigned long, bool, bool)</primary></indexterm>QWidget::create(unsigned long, bool, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;104&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::destroy(bool, bool)</primary></indexterm>QWidget::destroy(bool, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;105&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setWState(unsigned int)</primary></indexterm>NULL or QWidget::setWState(unsigned int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;106&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setWFlags(unsigned int)</primary></indexterm>NULL or QWidget::setWFlags(unsigned int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;107&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusNextPrevChild(bool)</primary></indexterm>QWidget::focusNextPrevChild(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;108&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setKeyCompression(bool)</primary></indexterm>QWidget::setKeyCompression(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;109&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMicroFocusHint(int, int, int, int, bool, QFont*)</primary></indexterm>QWidget::setMicroFocusHint(int, int, int, int, bool, QFont*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;110&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDial::setNotchTarget(double)</primary></indexterm>QDial::setNotchTarget(double)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;111&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDial::setValue(int)</primary></indexterm>QDial::setValue(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;112&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDial::setNotchesVisible(bool)</primary></indexterm>QDial::setNotchesVisible(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;113&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDial::setWrapping(bool)</primary></indexterm>QDial::setWrapping(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;114&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDial::setTracking(bool)</primary></indexterm>QDial::setTracking(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;115&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDial::valueChange()</primary></indexterm>QDial::valueChange()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;116&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDial::rangeChange()</primary></indexterm>QDial::rangeChange()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;117&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDial::repaintScreen(QRect const*)</primary></indexterm>QDial::repaintScreen(QRect const*)</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--classdata-->
<TABLE id="cls-56943-1">
<TITLE>Secondary vtable for QDial</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>-80</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QDial</primary></indexterm>typeinfo for QDial</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QDial::~QDial()</primary></indexterm>non-virtual thunk to QDial::~QDial()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QDial::~QDial()</primary></indexterm>non-virtual thunk to QDial::~QDial()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::setResolution(int)</primary></indexterm>QPaintDevice::setResolution(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::resolution() const</primary></indexterm>QPaintDevice::resolution() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::handle() const</primary></indexterm>QPaintDevice::handle() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::x11RenderHandle() const</primary></indexterm>QPaintDevice::x11RenderHandle() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::setX11Data(QPaintDeviceX11Data const*)</primary></indexterm>QPaintDevice::setX11Data(QPaintDeviceX11Data const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::cmd(int, QPainter*, QPDevCmdParam*)</primary></indexterm>QPaintDevice::cmd(int, QPainter*, QPDevCmdParam*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::metric(int) const</primary></indexterm>non-virtual thunk to QWidget::metric(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::fontMet(QFont*, int, char const*, int) const</primary></indexterm>QPaintDevice::fontMet(QFont*, int, char const*, int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::fontInf(QFont*, int) const</primary></indexterm>QPaintDevice::fontInf(QFont*, int) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--classdata-->
<TABLE id="cls-56943-2">
<TITLE>Secondary vtable for QDial</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>-200</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QDial</primary></indexterm>typeinfo for QDial</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QDial::~QDial()</primary></indexterm>non-virtual thunk to QDial::~QDial()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QDial::~QDial()</primary></indexterm>non-virtual thunk to QDial::~QDial()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QDial::valueChange()</primary></indexterm>non-virtual thunk to QDial::valueChange()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QDial::rangeChange()</primary></indexterm>non-virtual thunk to QDial::rangeChange()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QRangeControl::stepChange()</primary></indexterm>QRangeControl::stepChange()</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QDial  class
is described by <XREF LINKEND="rtti-48608">
</PARA>
<!--classdata-->
<TABLE ID="rtti-48608">
<TITLE>typeinfo for QDial</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__vmi_class_type_info</primary></indexterm>vtable for __cxxabiv1::__vmi_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QDial</primary></indexterm>typeinfo name for QDial</ENTRY>
</ROW>
<ROW>
<ENTRY>flags:</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QWidget</primary></indexterm>typeinfo for QWidget</ENTRY>
<ENTRY>2</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QRangeControl</primary></indexterm>typeinfo for QRangeControl</ENTRY>
<ENTRY>29698</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QListView</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QListView class
is described by <XREF LINKEND="cls-49461-0">
</PARA>
<!--classdata-->
<TABLE id="cls-49461-0">
<TITLE>Primary vtable for QListView</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QListView</primary></indexterm>typeinfo for QListView</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListView::metaObject() const</primary></indexterm>NULL or QListView::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListView::className() const</primary></indexterm>QListView::className() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListView::qt_cast(char const*)</primary></indexterm>QListView::qt_cast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListView::qt_invoke(int, QUObject*)</primary></indexterm>QListView::qt_invoke(int, QUObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListView::qt_emit(int, QUObject*)</primary></indexterm>QListView::qt_emit(int, QUObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListView::qt_property(int, int, QVariant*)</primary></indexterm>QListView::qt_property(int, int, QVariant*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListView::~QListView()</primary></indexterm>QListView::~QListView()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListView::~QListView()</primary></indexterm>QListView::~QListView()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::event(QEvent*)</primary></indexterm>QWidget::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListView::eventFilter(QObject*, QEvent*)</primary></indexterm>QListView::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setName(char const*)</primary></indexterm>QWidget::setName(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::insertChild(QObject*)</primary></indexterm>QObject::insertChild(QObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::removeChild(QObject*)</primary></indexterm>QScrollView::removeChild(QObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::setProperty(char const*, QVariant const&)</primary></indexterm>QObject::setProperty(char const*, QVariant const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::property(char const*) const</primary></indexterm>QObject::property(char const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QCustomEvent*)</primary></indexterm>QObject::customEvent(QCustomEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::checkConnectArgs(char const*, QObject const*, char const*)</primary></indexterm>QObject::checkConnectArgs(char const*, QObject const*, char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::setEnabled(bool)</primary></indexterm>QScrollView::setEnabled(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMinimumSize(int, int)</primary></indexterm>QWidget::setMinimumSize(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMaximumSize(int, int)</primary></indexterm>QWidget::setMaximumSize(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setSizeIncrement(int, int)</primary></indexterm>QWidget::setSizeIncrement(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundMode(Qt::BackgroundMode)</primary></indexterm>QWidget::setBackgroundMode(Qt::BackgroundMode)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setEraseColor(QColor const&)</primary></indexterm>QWidget::setEraseColor(QColor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setErasePixmap(QPixmap const&)</primary></indexterm>QWidget::setErasePixmap(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListView::setPalette(QPalette const&)</primary></indexterm>QListView::setPalette(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setPaletteBackgroundColor(QColor const&)</primary></indexterm>QWidget::setPaletteBackgroundColor(QColor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setPaletteBackgroundPixmap(QPixmap const&)</primary></indexterm>QWidget::setPaletteBackgroundPixmap(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListView::setFont(QFont const&)</primary></indexterm>QListView::setFont(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setCursor(QCursor const&)</primary></indexterm>QWidget::setCursor(QCursor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;33&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::unsetCursor()</primary></indexterm>QWidget::unsetCursor()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;34&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMask(QBitmap const&)</primary></indexterm>QWidget::setMask(QBitmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;35&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMask(QRegion const&)</primary></indexterm>QWidget::setMask(QRegion const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;36&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundColor(QColor const&)</primary></indexterm>QWidget::setBackgroundColor(QColor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;37&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundPixmap(QPixmap const&)</primary></indexterm>QWidget::setBackgroundPixmap(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;38&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setCaption(QString const&)</primary></indexterm>QWidget::setCaption(QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;39&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setIcon(QPixmap const&)</primary></indexterm>QWidget::setIcon(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;40&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setIconText(QString const&)</primary></indexterm>QWidget::setIconText(QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;41&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMouseTracking(bool)</primary></indexterm>QWidget::setMouseTracking(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;42&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFocus()</primary></indexterm>QWidget::setFocus()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;43&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setActiveWindow()</primary></indexterm>QWidget::setActiveWindow()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;44&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFocusPolicy(QWidget::FocusPolicy)</primary></indexterm>QWidget::setFocusPolicy(QWidget::FocusPolicy)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;45&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFocusProxy(QWidget*)</primary></indexterm>QWidget::setFocusProxy(QWidget*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;46&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setUpdatesEnabled(bool)</primary></indexterm>QWidget::setUpdatesEnabled(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;47&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListView::show()</primary></indexterm>QListView::show()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;48&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::hide()</primary></indexterm>QWidget::hide()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;49&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showMinimized()</primary></indexterm>QWidget::showMinimized()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;50&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showMaximized()</primary></indexterm>QWidget::showMaximized()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;51&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showNormal()</primary></indexterm>QWidget::showNormal()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;52&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::polish()</primary></indexterm>QWidget::polish()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;53&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::move(int, int)</primary></indexterm>QWidget::move(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;54&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::resize(int, int)</primary></indexterm>QScrollView::resize(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;55&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setGeometry(int, int, int, int)</primary></indexterm>QWidget::setGeometry(int, int, int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;56&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setGeometry(QRect const&)</primary></indexterm>NULL or QWidget::setGeometry(QRect const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;57&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::close(bool)</primary></indexterm>QWidget::close(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;58&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListView::sizeHint() const</primary></indexterm>QListView::sizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;59&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListView::minimumSizeHint() const</primary></indexterm>QListView::minimumSizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;60&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::sizePolicy() const</primary></indexterm>QWidget::sizePolicy() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;61&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setSizePolicy(QSizePolicy)</primary></indexterm>QWidget::setSizePolicy(QSizePolicy)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;62&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::heightForWidth(int) const</primary></indexterm>QWidget::heightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;63&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::adjustSize()</primary></indexterm>QWidget::adjustSize()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;64&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::reparent(QWidget*, unsigned int, QPoint const&, bool)</primary></indexterm>QWidget::reparent(QWidget*, unsigned int, QPoint const&, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;65&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setAcceptDrops(bool)</primary></indexterm>QWidget::setAcceptDrops(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;66&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setAutoMask(bool)</primary></indexterm>QWidget::setAutoMask(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;67&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundOrigin(QWidget::BackgroundOrigin)</primary></indexterm>QWidget::setBackgroundOrigin(QWidget::BackgroundOrigin)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;68&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::customWhatsThis() const</primary></indexterm>QWidget::customWhatsThis() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;69&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::mousePressEvent(QMouseEvent*)</primary></indexterm>QScrollView::mousePressEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;70&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::mouseReleaseEvent(QMouseEvent*)</primary></indexterm>QScrollView::mouseReleaseEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;71&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::mouseDoubleClickEvent(QMouseEvent*)</primary></indexterm>QScrollView::mouseDoubleClickEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;72&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::mouseMoveEvent(QMouseEvent*)</primary></indexterm>QScrollView::mouseMoveEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;73&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::wheelEvent(QWheelEvent*)</primary></indexterm>QScrollView::wheelEvent(QWheelEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;74&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListView::keyPressEvent(QKeyEvent*)</primary></indexterm>QListView::keyPressEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;75&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyReleaseEvent(QKeyEvent*)</primary></indexterm>QWidget::keyReleaseEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;76&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListView::focusInEvent(QFocusEvent*)</primary></indexterm>QListView::focusInEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;77&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListView::focusOutEvent(QFocusEvent*)</primary></indexterm>QListView::focusOutEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;78&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enterEvent(QEvent*)</primary></indexterm>QWidget::enterEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;79&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::leaveEvent(QEvent*)</primary></indexterm>QWidget::leaveEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;80&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::paintEvent(QPaintEvent*)</primary></indexterm>QFrame::paintEvent(QPaintEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;81&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::moveEvent(QMoveEvent*)</primary></indexterm>QWidget::moveEvent(QMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;82&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListView::resizeEvent(QResizeEvent*)</primary></indexterm>QListView::resizeEvent(QResizeEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;83&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::closeEvent(QCloseEvent*)</primary></indexterm>QWidget::closeEvent(QCloseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;84&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::contextMenuEvent(QContextMenuEvent*)</primary></indexterm>QScrollView::contextMenuEvent(QContextMenuEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;85&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::imStartEvent(QIMEvent*)</primary></indexterm>QWidget::imStartEvent(QIMEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;86&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::imComposeEvent(QIMEvent*)</primary></indexterm>QWidget::imComposeEvent(QIMEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;87&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::imEndEvent(QIMEvent*)</primary></indexterm>QWidget::imEndEvent(QIMEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;88&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::tabletEvent(QTabletEvent*)</primary></indexterm>QWidget::tabletEvent(QTabletEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;89&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragEnterEvent(QDragEnterEvent*)</primary></indexterm>QWidget::dragEnterEvent(QDragEnterEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;90&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragMoveEvent(QDragMoveEvent*)</primary></indexterm>QWidget::dragMoveEvent(QDragMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;91&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragLeaveEvent(QDragLeaveEvent*)</primary></indexterm>QWidget::dragLeaveEvent(QDragLeaveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;92&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dropEvent(QDropEvent*)</primary></indexterm>QWidget::dropEvent(QDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;93&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListView::showEvent(QShowEvent*)</primary></indexterm>QListView::showEvent(QShowEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;94&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::hideEvent(QHideEvent*)</primary></indexterm>QWidget::hideEvent(QHideEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;95&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::x11Event(_XEvent*)</primary></indexterm>QWidget::x11Event(_XEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;96&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::updateMask()</primary></indexterm>QWidget::updateMask()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;97&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListView::styleChange(QStyle&)</primary></indexterm>QListView::styleChange(QStyle&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;98&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enabledChange(bool)</primary></indexterm>QWidget::enabledChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;99&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paletteChange(QPalette const&)</primary></indexterm>QWidget::paletteChange(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;100&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::fontChange(QFont const&)</primary></indexterm>QScrollView::fontChange(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;101&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListView::windowActivationChange(bool)</primary></indexterm>QListView::windowActivationChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;102&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::metric(int) const</primary></indexterm>QWidget::metric(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;103&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::create(unsigned long, bool, bool)</primary></indexterm>QWidget::create(unsigned long, bool, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;104&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::destroy(bool, bool)</primary></indexterm>QWidget::destroy(bool, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;105&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setWState(unsigned int)</primary></indexterm>NULL or QWidget::setWState(unsigned int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;106&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setWFlags(unsigned int)</primary></indexterm>NULL or QWidget::setWFlags(unsigned int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;107&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::focusNextPrevChild(bool)</primary></indexterm>QScrollView::focusNextPrevChild(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;108&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setKeyCompression(bool)</primary></indexterm>QWidget::setKeyCompression(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;109&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMicroFocusHint(int, int, int, int, bool, QFont*)</primary></indexterm>QWidget::setMicroFocusHint(int, int, int, int, bool, QFont*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;110&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::setFrameStyle(int)</primary></indexterm>QFrame::setFrameStyle(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;111&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::setLineWidth(int)</primary></indexterm>QFrame::setLineWidth(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;112&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::setMargin(int)</primary></indexterm>QFrame::setMargin(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;113&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::setMidLineWidth(int)</primary></indexterm>QFrame::setMidLineWidth(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;114&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::setFrameRect(QRect const&)</primary></indexterm>QFrame::setFrameRect(QRect const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;115&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::drawFrame(QPainter*)</primary></indexterm>QFrame::drawFrame(QPainter*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;116&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::drawContents(QPainter*)</primary></indexterm>QScrollView::drawContents(QPainter*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;117&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::frameChanged()</primary></indexterm>QScrollView::frameChanged()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;118&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::setResizePolicy(QScrollView::ResizePolicy)</primary></indexterm>QScrollView::setResizePolicy(QScrollView::ResizePolicy)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;119&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::addChild(QWidget*, int, int)</primary></indexterm>QScrollView::addChild(QWidget*, int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;120&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::moveChild(QWidget*, int, int)</primary></indexterm>QScrollView::moveChild(QWidget*, int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;121&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::setVScrollBarMode(QScrollView::ScrollBarMode)</primary></indexterm>QScrollView::setVScrollBarMode(QScrollView::ScrollBarMode)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;122&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::setHScrollBarMode(QScrollView::ScrollBarMode)</primary></indexterm>QScrollView::setHScrollBarMode(QScrollView::ScrollBarMode)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;123&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::setCornerWidget(QWidget*)</primary></indexterm>QScrollView::setCornerWidget(QWidget*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;124&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::setDragAutoScroll(bool)</primary></indexterm>QScrollView::setDragAutoScroll(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;125&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::resizeContents(int, int)</primary></indexterm>QScrollView::resizeContents(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;126&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListView::setContentsPos(int, int)</primary></indexterm>QListView::setContentsPos(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;127&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::drawContents(QPainter*, int, int, int, int)</primary></indexterm>QScrollView::drawContents(QPainter*, int, int, int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;128&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListView::drawContentsOffset(QPainter*, int, int, int, int, int, int)</primary></indexterm>QListView::drawContentsOffset(QPainter*, int, int, int, int, int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;129&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListView::contentsMousePressEvent(QMouseEvent*)</primary></indexterm>QListView::contentsMousePressEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;130&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListView::contentsMouseReleaseEvent(QMouseEvent*)</primary></indexterm>QListView::contentsMouseReleaseEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;131&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListView::contentsMouseDoubleClickEvent(QMouseEvent*)</primary></indexterm>QListView::contentsMouseDoubleClickEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;132&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListView::contentsMouseMoveEvent(QMouseEvent*)</primary></indexterm>QListView::contentsMouseMoveEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;133&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListView::contentsDragEnterEvent(QDragEnterEvent*)</primary></indexterm>QListView::contentsDragEnterEvent(QDragEnterEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;134&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListView::contentsDragMoveEvent(QDragMoveEvent*)</primary></indexterm>QListView::contentsDragMoveEvent(QDragMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;135&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListView::contentsDragLeaveEvent(QDragLeaveEvent*)</primary></indexterm>QListView::contentsDragLeaveEvent(QDragLeaveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;136&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListView::contentsDropEvent(QDropEvent*)</primary></indexterm>QListView::contentsDropEvent(QDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;137&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::contentsWheelEvent(QWheelEvent*)</primary></indexterm>QScrollView::contentsWheelEvent(QWheelEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;138&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListView::contentsContextMenuEvent(QContextMenuEvent*)</primary></indexterm>QListView::contentsContextMenuEvent(QContextMenuEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;139&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::viewportPaintEvent(QPaintEvent*)</primary></indexterm>QScrollView::viewportPaintEvent(QPaintEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;140&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListView::viewportResizeEvent(QResizeEvent*)</primary></indexterm>QListView::viewportResizeEvent(QResizeEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;141&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::viewportMousePressEvent(QMouseEvent*)</primary></indexterm>QScrollView::viewportMousePressEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;142&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::viewportMouseReleaseEvent(QMouseEvent*)</primary></indexterm>QScrollView::viewportMouseReleaseEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;143&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::viewportMouseDoubleClickEvent(QMouseEvent*)</primary></indexterm>QScrollView::viewportMouseDoubleClickEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;144&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::viewportMouseMoveEvent(QMouseEvent*)</primary></indexterm>QScrollView::viewportMouseMoveEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;145&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::viewportDragEnterEvent(QDragEnterEvent*)</primary></indexterm>QScrollView::viewportDragEnterEvent(QDragEnterEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;146&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::viewportDragMoveEvent(QDragMoveEvent*)</primary></indexterm>QScrollView::viewportDragMoveEvent(QDragMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;147&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::viewportDragLeaveEvent(QDragLeaveEvent*)</primary></indexterm>QScrollView::viewportDragLeaveEvent(QDragLeaveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;148&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::viewportDropEvent(QDropEvent*)</primary></indexterm>QScrollView::viewportDropEvent(QDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;149&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::viewportWheelEvent(QWheelEvent*)</primary></indexterm>QScrollView::viewportWheelEvent(QWheelEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;150&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::viewportContextMenuEvent(QContextMenuEvent*)</primary></indexterm>QScrollView::viewportContextMenuEvent(QContextMenuEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;151&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::setMargins(int, int, int, int)</primary></indexterm>QScrollView::setMargins(int, int, int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;152&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::setHBarGeometry(QScrollBar&, int, int, int, int)</primary></indexterm>QScrollView::setHBarGeometry(QScrollBar&, int, int, int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;153&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::setVBarGeometry(QScrollBar&, int, int, int, int)</primary></indexterm>QScrollView::setVBarGeometry(QScrollBar&, int, int, int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;154&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListView::setTreeStepSize(int)</primary></indexterm>QListView::setTreeStepSize(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;155&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListView::insertItem(QListViewItem*)</primary></indexterm>QListView::insertItem(QListViewItem*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;156&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListView::takeItem(QListViewItem*)</primary></indexterm>QListView::takeItem(QListViewItem*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;157&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListView::removeItem(QListViewItem*)</primary></indexterm>NULL or QListView::removeItem(QListViewItem*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;158&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListView::addColumn(QString const&, int)</primary></indexterm>QListView::addColumn(QString const&, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;159&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListView::addColumn(QIconSet const&, QString const&, int)</primary></indexterm>QListView::addColumn(QIconSet const&, QString const&, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;160&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListView::removeColumn(int)</primary></indexterm>QListView::removeColumn(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;161&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListView::setColumnText(int, QString const&)</primary></indexterm>QListView::setColumnText(int, QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;162&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListView::setColumnText(int, QIconSet const&, QString const&)</primary></indexterm>QListView::setColumnText(int, QIconSet const&, QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;163&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListView::setColumnWidth(int, int)</primary></indexterm>QListView::setColumnWidth(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;164&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListView::setColumnWidthMode(int, QListView::WidthMode)</primary></indexterm>QListView::setColumnWidthMode(int, QListView::WidthMode)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;165&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListView::setColumnAlignment(int, int)</primary></indexterm>QListView::setColumnAlignment(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;166&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListView::setMultiSelection(bool)</primary></indexterm>QListView::setMultiSelection(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;167&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListView::clearSelection()</primary></indexterm>QListView::clearSelection()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;168&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListView::setSelected(QListViewItem*, bool)</primary></indexterm>QListView::setSelected(QListViewItem*, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;169&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListView::setOpen(QListViewItem*, bool)</primary></indexterm>QListView::setOpen(QListViewItem*, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;170&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListView::setCurrentItem(QListViewItem*)</primary></indexterm>QListView::setCurrentItem(QListViewItem*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;171&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListView::setAllColumnsShowFocus(bool)</primary></indexterm>QListView::setAllColumnsShowFocus(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;172&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListView::setItemMargin(int)</primary></indexterm>QListView::setItemMargin(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;173&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListView::setRootIsDecorated(bool)</primary></indexterm>QListView::setRootIsDecorated(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;174&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListView::setSorting(int, bool)</primary></indexterm>QListView::setSorting(int, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;175&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListView::sort()</primary></indexterm>QListView::sort()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;176&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListView::setShowSortIndicator(bool)</primary></indexterm>QListView::setShowSortIndicator(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;177&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListView::setShowToolTips(bool)</primary></indexterm>QListView::setShowToolTips(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;178&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListView::setResizeMode(QListView::ResizeMode)</primary></indexterm>QListView::setResizeMode(QListView::ResizeMode)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;179&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListView::setDefaultRenameAction(QListView::RenameAction)</primary></indexterm>QListView::setDefaultRenameAction(QListView::RenameAction)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;180&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListView::clear()</primary></indexterm>QListView::clear()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;181&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListView::invertSelection()</primary></indexterm>QListView::invertSelection()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;182&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListView::selectAll(bool)</primary></indexterm>QListView::selectAll(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;183&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListView::dragObject()</primary></indexterm>QListView::dragObject()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;184&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListView::startDrag()</primary></indexterm>QListView::startDrag()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;185&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListView::paintEmptyArea(QPainter*, QRect const&)</primary></indexterm>QListView::paintEmptyArea(QPainter*, QRect const&)</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--classdata-->
<TABLE id="cls-49461-1">
<TITLE>Secondary vtable for QListView</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>-80</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QListView</primary></indexterm>typeinfo for QListView</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QListView::~QListView()</primary></indexterm>non-virtual thunk to QListView::~QListView()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QListView::~QListView()</primary></indexterm>non-virtual thunk to QListView::~QListView()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::setResolution(int)</primary></indexterm>QPaintDevice::setResolution(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::resolution() const</primary></indexterm>QPaintDevice::resolution() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::handle() const</primary></indexterm>QPaintDevice::handle() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::x11RenderHandle() const</primary></indexterm>QPaintDevice::x11RenderHandle() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::setX11Data(QPaintDeviceX11Data const*)</primary></indexterm>QPaintDevice::setX11Data(QPaintDeviceX11Data const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::cmd(int, QPainter*, QPDevCmdParam*)</primary></indexterm>QPaintDevice::cmd(int, QPainter*, QPDevCmdParam*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::metric(int) const</primary></indexterm>non-virtual thunk to QWidget::metric(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::fontMet(QFont*, int, char const*, int) const</primary></indexterm>QPaintDevice::fontMet(QFont*, int, char const*, int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::fontInf(QFont*, int) const</primary></indexterm>QPaintDevice::fontInf(QFont*, int) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QListView  class
is described by <XREF LINKEND="rtti-59996">
</PARA>
<!--classdata-->
<TABLE ID="rtti-59996">
<TITLE>typeinfo for QListView</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QListView</primary></indexterm>typeinfo name for QListView</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QScrollView</primary></indexterm>typeinfo for QScrollView</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QDesktopWidget</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QDesktopWidget class
is described by <XREF LINKEND="cls-55983-0">
</PARA>
<!--classdata-->
<TABLE id="cls-55983-0">
<TITLE>Primary vtable for QDesktopWidget</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QDesktopWidget</primary></indexterm>typeinfo for QDesktopWidget</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDesktopWidget::metaObject() const</primary></indexterm>NULL or QDesktopWidget::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDesktopWidget::className() const</primary></indexterm>QDesktopWidget::className() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDesktopWidget::qt_cast(char const*)</primary></indexterm>QDesktopWidget::qt_cast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDesktopWidget::qt_invoke(int, QUObject*)</primary></indexterm>QDesktopWidget::qt_invoke(int, QUObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDesktopWidget::qt_emit(int, QUObject*)</primary></indexterm>QDesktopWidget::qt_emit(int, QUObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDesktopWidget::qt_property(int, int, QVariant*)</primary></indexterm>QDesktopWidget::qt_property(int, int, QVariant*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDesktopWidget::~QDesktopWidget()</primary></indexterm>QDesktopWidget::~QDesktopWidget()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDesktopWidget::~QDesktopWidget()</primary></indexterm>QDesktopWidget::~QDesktopWidget()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::event(QEvent*)</primary></indexterm>QWidget::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::eventFilter(QObject*, QEvent*)</primary></indexterm>QObject::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setName(char const*)</primary></indexterm>QWidget::setName(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDesktopWidget::insertChild(QObject*)</primary></indexterm>QDesktopWidget::insertChild(QObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::removeChild(QObject*)</primary></indexterm>QObject::removeChild(QObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::setProperty(char const*, QVariant const&)</primary></indexterm>QObject::setProperty(char const*, QVariant const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::property(char const*) const</primary></indexterm>QObject::property(char const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QCustomEvent*)</primary></indexterm>QObject::customEvent(QCustomEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::checkConnectArgs(char const*, QObject const*, char const*)</primary></indexterm>QObject::checkConnectArgs(char const*, QObject const*, char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setEnabled(bool)</primary></indexterm>QWidget::setEnabled(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMinimumSize(int, int)</primary></indexterm>QWidget::setMinimumSize(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMaximumSize(int, int)</primary></indexterm>QWidget::setMaximumSize(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setSizeIncrement(int, int)</primary></indexterm>QWidget::setSizeIncrement(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundMode(Qt::BackgroundMode)</primary></indexterm>QWidget::setBackgroundMode(Qt::BackgroundMode)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setEraseColor(QColor const&)</primary></indexterm>QWidget::setEraseColor(QColor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setErasePixmap(QPixmap const&)</primary></indexterm>QWidget::setErasePixmap(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setPalette(QPalette const&)</primary></indexterm>QWidget::setPalette(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setPaletteBackgroundColor(QColor const&)</primary></indexterm>QWidget::setPaletteBackgroundColor(QColor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setPaletteBackgroundPixmap(QPixmap const&)</primary></indexterm>QWidget::setPaletteBackgroundPixmap(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFont(QFont const&)</primary></indexterm>QWidget::setFont(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setCursor(QCursor const&)</primary></indexterm>QWidget::setCursor(QCursor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;33&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::unsetCursor()</primary></indexterm>QWidget::unsetCursor()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;34&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMask(QBitmap const&)</primary></indexterm>QWidget::setMask(QBitmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;35&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMask(QRegion const&)</primary></indexterm>QWidget::setMask(QRegion const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;36&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundColor(QColor const&)</primary></indexterm>QWidget::setBackgroundColor(QColor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;37&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundPixmap(QPixmap const&)</primary></indexterm>QWidget::setBackgroundPixmap(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;38&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setCaption(QString const&)</primary></indexterm>QWidget::setCaption(QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;39&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setIcon(QPixmap const&)</primary></indexterm>QWidget::setIcon(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;40&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setIconText(QString const&)</primary></indexterm>QWidget::setIconText(QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;41&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMouseTracking(bool)</primary></indexterm>QWidget::setMouseTracking(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;42&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFocus()</primary></indexterm>QWidget::setFocus()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;43&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setActiveWindow()</primary></indexterm>QWidget::setActiveWindow()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;44&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFocusPolicy(QWidget::FocusPolicy)</primary></indexterm>QWidget::setFocusPolicy(QWidget::FocusPolicy)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;45&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFocusProxy(QWidget*)</primary></indexterm>QWidget::setFocusProxy(QWidget*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;46&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setUpdatesEnabled(bool)</primary></indexterm>QWidget::setUpdatesEnabled(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;47&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::show()</primary></indexterm>QWidget::show()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;48&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::hide()</primary></indexterm>QWidget::hide()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;49&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showMinimized()</primary></indexterm>QWidget::showMinimized()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;50&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showMaximized()</primary></indexterm>QWidget::showMaximized()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;51&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showNormal()</primary></indexterm>QWidget::showNormal()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;52&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::polish()</primary></indexterm>QWidget::polish()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;53&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::move(int, int)</primary></indexterm>QWidget::move(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;54&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::resize(int, int)</primary></indexterm>QWidget::resize(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;55&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setGeometry(int, int, int, int)</primary></indexterm>QWidget::setGeometry(int, int, int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;56&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setGeometry(QRect const&)</primary></indexterm>NULL or QWidget::setGeometry(QRect const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;57&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::close(bool)</primary></indexterm>QWidget::close(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;58&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::sizeHint() const</primary></indexterm>QWidget::sizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;59&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::minimumSizeHint() const</primary></indexterm>QWidget::minimumSizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;60&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::sizePolicy() const</primary></indexterm>QWidget::sizePolicy() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;61&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setSizePolicy(QSizePolicy)</primary></indexterm>QWidget::setSizePolicy(QSizePolicy)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;62&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::heightForWidth(int) const</primary></indexterm>QWidget::heightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;63&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::adjustSize()</primary></indexterm>QWidget::adjustSize()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;64&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::reparent(QWidget*, unsigned int, QPoint const&, bool)</primary></indexterm>QWidget::reparent(QWidget*, unsigned int, QPoint const&, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;65&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setAcceptDrops(bool)</primary></indexterm>QWidget::setAcceptDrops(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;66&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setAutoMask(bool)</primary></indexterm>QWidget::setAutoMask(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;67&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundOrigin(QWidget::BackgroundOrigin)</primary></indexterm>QWidget::setBackgroundOrigin(QWidget::BackgroundOrigin)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;68&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::customWhatsThis() const</primary></indexterm>QWidget::customWhatsThis() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;69&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mousePressEvent(QMouseEvent*)</primary></indexterm>QWidget::mousePressEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;70&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseReleaseEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseReleaseEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;71&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseDoubleClickEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseDoubleClickEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;72&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseMoveEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseMoveEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;73&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::wheelEvent(QWheelEvent*)</primary></indexterm>QWidget::wheelEvent(QWheelEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;74&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyPressEvent(QKeyEvent*)</primary></indexterm>QWidget::keyPressEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;75&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyReleaseEvent(QKeyEvent*)</primary></indexterm>QWidget::keyReleaseEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;76&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusInEvent(QFocusEvent*)</primary></indexterm>QWidget::focusInEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;77&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusOutEvent(QFocusEvent*)</primary></indexterm>QWidget::focusOutEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;78&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enterEvent(QEvent*)</primary></indexterm>QWidget::enterEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;79&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::leaveEvent(QEvent*)</primary></indexterm>QWidget::leaveEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;80&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paintEvent(QPaintEvent*)</primary></indexterm>QWidget::paintEvent(QPaintEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;81&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::moveEvent(QMoveEvent*)</primary></indexterm>QWidget::moveEvent(QMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;82&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDesktopWidget::resizeEvent(QResizeEvent*)</primary></indexterm>QDesktopWidget::resizeEvent(QResizeEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;83&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::closeEvent(QCloseEvent*)</primary></indexterm>QWidget::closeEvent(QCloseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;84&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::contextMenuEvent(QContextMenuEvent*)</primary></indexterm>QWidget::contextMenuEvent(QContextMenuEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;85&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::imStartEvent(QIMEvent*)</primary></indexterm>QWidget::imStartEvent(QIMEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;86&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::imComposeEvent(QIMEvent*)</primary></indexterm>QWidget::imComposeEvent(QIMEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;87&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::imEndEvent(QIMEvent*)</primary></indexterm>QWidget::imEndEvent(QIMEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;88&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::tabletEvent(QTabletEvent*)</primary></indexterm>QWidget::tabletEvent(QTabletEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;89&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragEnterEvent(QDragEnterEvent*)</primary></indexterm>QWidget::dragEnterEvent(QDragEnterEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;90&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragMoveEvent(QDragMoveEvent*)</primary></indexterm>QWidget::dragMoveEvent(QDragMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;91&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragLeaveEvent(QDragLeaveEvent*)</primary></indexterm>QWidget::dragLeaveEvent(QDragLeaveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;92&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dropEvent(QDropEvent*)</primary></indexterm>QWidget::dropEvent(QDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;93&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showEvent(QShowEvent*)</primary></indexterm>QWidget::showEvent(QShowEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;94&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::hideEvent(QHideEvent*)</primary></indexterm>QWidget::hideEvent(QHideEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;95&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::x11Event(_XEvent*)</primary></indexterm>QWidget::x11Event(_XEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;96&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::updateMask()</primary></indexterm>QWidget::updateMask()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;97&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::styleChange(QStyle&)</primary></indexterm>QWidget::styleChange(QStyle&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;98&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enabledChange(bool)</primary></indexterm>QWidget::enabledChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;99&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paletteChange(QPalette const&)</primary></indexterm>QWidget::paletteChange(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;100&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::fontChange(QFont const&)</primary></indexterm>QWidget::fontChange(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;101&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::windowActivationChange(bool)</primary></indexterm>QWidget::windowActivationChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;102&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::metric(int) const</primary></indexterm>QWidget::metric(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;103&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::create(unsigned long, bool, bool)</primary></indexterm>QWidget::create(unsigned long, bool, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;104&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::destroy(bool, bool)</primary></indexterm>QWidget::destroy(bool, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;105&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setWState(unsigned int)</primary></indexterm>NULL or QWidget::setWState(unsigned int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;106&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setWFlags(unsigned int)</primary></indexterm>NULL or QWidget::setWFlags(unsigned int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;107&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusNextPrevChild(bool)</primary></indexterm>QWidget::focusNextPrevChild(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;108&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setKeyCompression(bool)</primary></indexterm>QWidget::setKeyCompression(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;109&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMicroFocusHint(int, int, int, int, bool, QFont*)</primary></indexterm>QWidget::setMicroFocusHint(int, int, int, int, bool, QFont*)</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--classdata-->
<TABLE id="cls-55983-1">
<TITLE>Secondary vtable for QDesktopWidget</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>-80</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QDesktopWidget</primary></indexterm>typeinfo for QDesktopWidget</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QDesktopWidget::~QDesktopWidget()</primary></indexterm>non-virtual thunk to QDesktopWidget::~QDesktopWidget()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QDesktopWidget::~QDesktopWidget()</primary></indexterm>non-virtual thunk to QDesktopWidget::~QDesktopWidget()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::setResolution(int)</primary></indexterm>QPaintDevice::setResolution(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::resolution() const</primary></indexterm>QPaintDevice::resolution() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::handle() const</primary></indexterm>QPaintDevice::handle() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::x11RenderHandle() const</primary></indexterm>QPaintDevice::x11RenderHandle() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::setX11Data(QPaintDeviceX11Data const*)</primary></indexterm>QPaintDevice::setX11Data(QPaintDeviceX11Data const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::cmd(int, QPainter*, QPDevCmdParam*)</primary></indexterm>QPaintDevice::cmd(int, QPainter*, QPDevCmdParam*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::metric(int) const</primary></indexterm>non-virtual thunk to QWidget::metric(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::fontMet(QFont*, int, char const*, int) const</primary></indexterm>QPaintDevice::fontMet(QFont*, int, char const*, int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::fontInf(QFont*, int) const</primary></indexterm>QPaintDevice::fontInf(QFont*, int) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QDesktopWidget  class
is described by <XREF LINKEND="rtti-49734">
</PARA>
<!--classdata-->
<TABLE ID="rtti-49734">
<TITLE>typeinfo for QDesktopWidget</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QDesktopWidget</primary></indexterm>typeinfo name for QDesktopWidget</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QWidget</primary></indexterm>typeinfo for QWidget</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QListBoxItem</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QListBoxItem class
is described in the generic part of this specification.
</PARA>
<PARA>
The Run Time Type Information for the QListBoxItem  class
is described by <XREF LINKEND="rtti-60438">
</PARA>
<!--classdata-->
<TABLE ID="rtti-60438">
<TITLE>typeinfo for QListBoxItem</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__class_type_info</primary></indexterm>vtable for __cxxabiv1::__class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QListBoxItem</primary></indexterm>typeinfo name for QListBoxItem</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QScrollBar</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QScrollBar class
is described by <XREF LINKEND="cls-60211-0">
</PARA>
<!--classdata-->
<TABLE id="cls-60211-0">
<TITLE>Primary vtable for QScrollBar</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QScrollBar</primary></indexterm>typeinfo for QScrollBar</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollBar::metaObject() const</primary></indexterm>NULL or QScrollBar::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollBar::className() const</primary></indexterm>QScrollBar::className() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollBar::qt_cast(char const*)</primary></indexterm>QScrollBar::qt_cast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollBar::qt_invoke(int, QUObject*)</primary></indexterm>QScrollBar::qt_invoke(int, QUObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollBar::qt_emit(int, QUObject*)</primary></indexterm>QScrollBar::qt_emit(int, QUObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollBar::qt_property(int, int, QVariant*)</primary></indexterm>QScrollBar::qt_property(int, int, QVariant*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollBar::~QScrollBar()</primary></indexterm>QScrollBar::~QScrollBar()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollBar::~QScrollBar()</primary></indexterm>QScrollBar::~QScrollBar()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::event(QEvent*)</primary></indexterm>QWidget::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::eventFilter(QObject*, QEvent*)</primary></indexterm>QObject::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setName(char const*)</primary></indexterm>QWidget::setName(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::insertChild(QObject*)</primary></indexterm>QObject::insertChild(QObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::removeChild(QObject*)</primary></indexterm>QObject::removeChild(QObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::setProperty(char const*, QVariant const&)</primary></indexterm>QObject::setProperty(char const*, QVariant const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::property(char const*) const</primary></indexterm>QObject::property(char const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QCustomEvent*)</primary></indexterm>QObject::customEvent(QCustomEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::checkConnectArgs(char const*, QObject const*, char const*)</primary></indexterm>QObject::checkConnectArgs(char const*, QObject const*, char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setEnabled(bool)</primary></indexterm>QWidget::setEnabled(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMinimumSize(int, int)</primary></indexterm>QWidget::setMinimumSize(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMaximumSize(int, int)</primary></indexterm>QWidget::setMaximumSize(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setSizeIncrement(int, int)</primary></indexterm>QWidget::setSizeIncrement(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundMode(Qt::BackgroundMode)</primary></indexterm>QWidget::setBackgroundMode(Qt::BackgroundMode)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setEraseColor(QColor const&)</primary></indexterm>QWidget::setEraseColor(QColor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setErasePixmap(QPixmap const&)</primary></indexterm>QWidget::setErasePixmap(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollBar::setPalette(QPalette const&)</primary></indexterm>QScrollBar::setPalette(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setPaletteBackgroundColor(QColor const&)</primary></indexterm>QWidget::setPaletteBackgroundColor(QColor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setPaletteBackgroundPixmap(QPixmap const&)</primary></indexterm>QWidget::setPaletteBackgroundPixmap(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFont(QFont const&)</primary></indexterm>QWidget::setFont(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setCursor(QCursor const&)</primary></indexterm>QWidget::setCursor(QCursor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;33&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::unsetCursor()</primary></indexterm>QWidget::unsetCursor()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;34&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMask(QBitmap const&)</primary></indexterm>QWidget::setMask(QBitmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;35&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMask(QRegion const&)</primary></indexterm>QWidget::setMask(QRegion const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;36&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundColor(QColor const&)</primary></indexterm>QWidget::setBackgroundColor(QColor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;37&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundPixmap(QPixmap const&)</primary></indexterm>QWidget::setBackgroundPixmap(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;38&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setCaption(QString const&)</primary></indexterm>QWidget::setCaption(QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;39&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setIcon(QPixmap const&)</primary></indexterm>QWidget::setIcon(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;40&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setIconText(QString const&)</primary></indexterm>QWidget::setIconText(QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;41&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMouseTracking(bool)</primary></indexterm>QWidget::setMouseTracking(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;42&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFocus()</primary></indexterm>QWidget::setFocus()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;43&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setActiveWindow()</primary></indexterm>QWidget::setActiveWindow()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;44&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFocusPolicy(QWidget::FocusPolicy)</primary></indexterm>QWidget::setFocusPolicy(QWidget::FocusPolicy)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;45&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFocusProxy(QWidget*)</primary></indexterm>QWidget::setFocusProxy(QWidget*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;46&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setUpdatesEnabled(bool)</primary></indexterm>QWidget::setUpdatesEnabled(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;47&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::show()</primary></indexterm>QWidget::show()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;48&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::hide()</primary></indexterm>QWidget::hide()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;49&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showMinimized()</primary></indexterm>QWidget::showMinimized()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;50&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showMaximized()</primary></indexterm>QWidget::showMaximized()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;51&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showNormal()</primary></indexterm>QWidget::showNormal()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;52&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::polish()</primary></indexterm>QWidget::polish()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;53&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::move(int, int)</primary></indexterm>QWidget::move(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;54&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::resize(int, int)</primary></indexterm>QWidget::resize(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;55&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setGeometry(int, int, int, int)</primary></indexterm>QWidget::setGeometry(int, int, int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;56&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setGeometry(QRect const&)</primary></indexterm>NULL or QWidget::setGeometry(QRect const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;57&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::close(bool)</primary></indexterm>QWidget::close(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;58&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollBar::sizeHint() const</primary></indexterm>QScrollBar::sizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;59&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::minimumSizeHint() const</primary></indexterm>QWidget::minimumSizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;60&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::sizePolicy() const</primary></indexterm>QWidget::sizePolicy() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;61&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollBar::setSizePolicy(QSizePolicy)</primary></indexterm>QScrollBar::setSizePolicy(QSizePolicy)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;62&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::heightForWidth(int) const</primary></indexterm>QWidget::heightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;63&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::adjustSize()</primary></indexterm>QWidget::adjustSize()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;64&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::reparent(QWidget*, unsigned int, QPoint const&, bool)</primary></indexterm>QWidget::reparent(QWidget*, unsigned int, QPoint const&, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;65&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setAcceptDrops(bool)</primary></indexterm>QWidget::setAcceptDrops(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;66&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setAutoMask(bool)</primary></indexterm>QWidget::setAutoMask(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;67&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundOrigin(QWidget::BackgroundOrigin)</primary></indexterm>QWidget::setBackgroundOrigin(QWidget::BackgroundOrigin)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;68&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::customWhatsThis() const</primary></indexterm>QWidget::customWhatsThis() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;69&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollBar::mousePressEvent(QMouseEvent*)</primary></indexterm>QScrollBar::mousePressEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;70&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollBar::mouseReleaseEvent(QMouseEvent*)</primary></indexterm>QScrollBar::mouseReleaseEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;71&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseDoubleClickEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseDoubleClickEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;72&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollBar::mouseMoveEvent(QMouseEvent*)</primary></indexterm>QScrollBar::mouseMoveEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;73&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollBar::wheelEvent(QWheelEvent*)</primary></indexterm>QScrollBar::wheelEvent(QWheelEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;74&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollBar::keyPressEvent(QKeyEvent*)</primary></indexterm>QScrollBar::keyPressEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;75&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyReleaseEvent(QKeyEvent*)</primary></indexterm>QWidget::keyReleaseEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;76&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusInEvent(QFocusEvent*)</primary></indexterm>QWidget::focusInEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;77&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusOutEvent(QFocusEvent*)</primary></indexterm>QWidget::focusOutEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;78&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enterEvent(QEvent*)</primary></indexterm>QWidget::enterEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;79&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::leaveEvent(QEvent*)</primary></indexterm>QWidget::leaveEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;80&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollBar::paintEvent(QPaintEvent*)</primary></indexterm>QScrollBar::paintEvent(QPaintEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;81&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::moveEvent(QMoveEvent*)</primary></indexterm>QWidget::moveEvent(QMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;82&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollBar::resizeEvent(QResizeEvent*)</primary></indexterm>QScrollBar::resizeEvent(QResizeEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;83&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::closeEvent(QCloseEvent*)</primary></indexterm>QWidget::closeEvent(QCloseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;84&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollBar::contextMenuEvent(QContextMenuEvent*)</primary></indexterm>QScrollBar::contextMenuEvent(QContextMenuEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;85&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::imStartEvent(QIMEvent*)</primary></indexterm>QWidget::imStartEvent(QIMEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;86&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::imComposeEvent(QIMEvent*)</primary></indexterm>QWidget::imComposeEvent(QIMEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;87&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::imEndEvent(QIMEvent*)</primary></indexterm>QWidget::imEndEvent(QIMEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;88&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::tabletEvent(QTabletEvent*)</primary></indexterm>QWidget::tabletEvent(QTabletEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;89&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragEnterEvent(QDragEnterEvent*)</primary></indexterm>QWidget::dragEnterEvent(QDragEnterEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;90&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragMoveEvent(QDragMoveEvent*)</primary></indexterm>QWidget::dragMoveEvent(QDragMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;91&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragLeaveEvent(QDragLeaveEvent*)</primary></indexterm>QWidget::dragLeaveEvent(QDragLeaveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;92&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dropEvent(QDropEvent*)</primary></indexterm>QWidget::dropEvent(QDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;93&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showEvent(QShowEvent*)</primary></indexterm>QWidget::showEvent(QShowEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;94&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollBar::hideEvent(QHideEvent*)</primary></indexterm>QScrollBar::hideEvent(QHideEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;95&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::x11Event(_XEvent*)</primary></indexterm>QWidget::x11Event(_XEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;96&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::updateMask()</primary></indexterm>QWidget::updateMask()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;97&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollBar::styleChange(QStyle&)</primary></indexterm>QScrollBar::styleChange(QStyle&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;98&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enabledChange(bool)</primary></indexterm>QWidget::enabledChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;99&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paletteChange(QPalette const&)</primary></indexterm>QWidget::paletteChange(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;100&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::fontChange(QFont const&)</primary></indexterm>QWidget::fontChange(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;101&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::windowActivationChange(bool)</primary></indexterm>QWidget::windowActivationChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;102&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::metric(int) const</primary></indexterm>QWidget::metric(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;103&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::create(unsigned long, bool, bool)</primary></indexterm>QWidget::create(unsigned long, bool, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;104&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::destroy(bool, bool)</primary></indexterm>QWidget::destroy(bool, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;105&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setWState(unsigned int)</primary></indexterm>NULL or QWidget::setWState(unsigned int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;106&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setWFlags(unsigned int)</primary></indexterm>NULL or QWidget::setWFlags(unsigned int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;107&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusNextPrevChild(bool)</primary></indexterm>QWidget::focusNextPrevChild(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;108&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setKeyCompression(bool)</primary></indexterm>QWidget::setKeyCompression(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;109&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMicroFocusHint(int, int, int, int, bool, QFont*)</primary></indexterm>QWidget::setMicroFocusHint(int, int, int, int, bool, QFont*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;110&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollBar::setOrientation(Qt::Orientation)</primary></indexterm>QScrollBar::setOrientation(Qt::Orientation)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;111&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollBar::setTracking(bool)</primary></indexterm>NULL or QScrollBar::setTracking(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;112&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollBar::valueChange()</primary></indexterm>QScrollBar::valueChange()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;113&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollBar::stepChange()</primary></indexterm>QScrollBar::stepChange()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;114&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollBar::rangeChange()</primary></indexterm>QScrollBar::rangeChange()</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--classdata-->
<TABLE id="cls-60211-1">
<TITLE>Secondary vtable for QScrollBar</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>-80</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QScrollBar</primary></indexterm>typeinfo for QScrollBar</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QScrollBar::~QScrollBar()</primary></indexterm>non-virtual thunk to QScrollBar::~QScrollBar()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QScrollBar::~QScrollBar()</primary></indexterm>non-virtual thunk to QScrollBar::~QScrollBar()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::setResolution(int)</primary></indexterm>QPaintDevice::setResolution(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::resolution() const</primary></indexterm>QPaintDevice::resolution() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::handle() const</primary></indexterm>QPaintDevice::handle() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::x11RenderHandle() const</primary></indexterm>QPaintDevice::x11RenderHandle() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::setX11Data(QPaintDeviceX11Data const*)</primary></indexterm>QPaintDevice::setX11Data(QPaintDeviceX11Data const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::cmd(int, QPainter*, QPDevCmdParam*)</primary></indexterm>QPaintDevice::cmd(int, QPainter*, QPDevCmdParam*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::metric(int) const</primary></indexterm>non-virtual thunk to QWidget::metric(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::fontMet(QFont*, int, char const*, int) const</primary></indexterm>QPaintDevice::fontMet(QFont*, int, char const*, int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::fontInf(QFont*, int) const</primary></indexterm>QPaintDevice::fontInf(QFont*, int) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--classdata-->
<TABLE id="cls-60211-2">
<TITLE>Secondary vtable for QScrollBar</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>-200</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QScrollBar</primary></indexterm>typeinfo for QScrollBar</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QScrollBar::~QScrollBar()</primary></indexterm>non-virtual thunk to QScrollBar::~QScrollBar()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QScrollBar::~QScrollBar()</primary></indexterm>non-virtual thunk to QScrollBar::~QScrollBar()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QScrollBar::valueChange()</primary></indexterm>non-virtual thunk to QScrollBar::valueChange()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QScrollBar::rangeChange()</primary></indexterm>non-virtual thunk to QScrollBar::rangeChange()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QScrollBar::stepChange()</primary></indexterm>non-virtual thunk to QScrollBar::stepChange()</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QScrollBar  class
is described by <XREF LINKEND="rtti-55428">
</PARA>
<!--classdata-->
<TABLE ID="rtti-55428">
<TITLE>typeinfo for QScrollBar</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__vmi_class_type_info</primary></indexterm>vtable for __cxxabiv1::__vmi_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QScrollBar</primary></indexterm>typeinfo name for QScrollBar</ENTRY>
</ROW>
<ROW>
<ENTRY>flags:</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QWidget</primary></indexterm>typeinfo for QWidget</ENTRY>
<ENTRY>2</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QRangeControl</primary></indexterm>typeinfo for QRangeControl</ENTRY>
<ENTRY>29698</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QIconFactory</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QIconFactory class
is described in the generic part of this specification.
</PARA>
<PARA>
The Run Time Type Information for the QIconFactory  class
is described by <XREF LINKEND="rtti-54590">
</PARA>
<!--classdata-->
<TABLE ID="rtti-54590">
<TITLE>typeinfo for QIconFactory</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__vmi_class_type_info</primary></indexterm>vtable for __cxxabiv1::__vmi_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QIconFactory</primary></indexterm>typeinfo name for QIconFactory</ENTRY>
</ROW>
<ROW>
<ENTRY>flags:</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QShared</primary></indexterm>typeinfo for QShared</ENTRY>
<ENTRY>1024</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QSpinBox</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QSpinBox class
is described by <XREF LINKEND="cls-56299-0">
</PARA>
<!--classdata-->
<TABLE id="cls-56299-0">
<TITLE>Primary vtable for QSpinBox</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QSpinBox</primary></indexterm>typeinfo for QSpinBox</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSpinBox::metaObject() const</primary></indexterm>NULL or QSpinBox::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSpinBox::className() const</primary></indexterm>QSpinBox::className() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSpinBox::qt_cast(char const*)</primary></indexterm>QSpinBox::qt_cast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSpinBox::qt_invoke(int, QUObject*)</primary></indexterm>QSpinBox::qt_invoke(int, QUObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSpinBox::qt_emit(int, QUObject*)</primary></indexterm>QSpinBox::qt_emit(int, QUObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSpinBox::qt_property(int, int, QVariant*)</primary></indexterm>QSpinBox::qt_property(int, int, QVariant*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSpinBox::~QSpinBox()</primary></indexterm>QSpinBox::~QSpinBox()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSpinBox::~QSpinBox()</primary></indexterm>QSpinBox::~QSpinBox()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::event(QEvent*)</primary></indexterm>QWidget::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSpinBox::eventFilter(QObject*, QEvent*)</primary></indexterm>QSpinBox::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setName(char const*)</primary></indexterm>QWidget::setName(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::insertChild(QObject*)</primary></indexterm>QObject::insertChild(QObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::removeChild(QObject*)</primary></indexterm>QObject::removeChild(QObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::setProperty(char const*, QVariant const&)</primary></indexterm>QObject::setProperty(char const*, QVariant const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::property(char const*) const</primary></indexterm>QObject::property(char const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QCustomEvent*)</primary></indexterm>QObject::customEvent(QCustomEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::checkConnectArgs(char const*, QObject const*, char const*)</primary></indexterm>QObject::checkConnectArgs(char const*, QObject const*, char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSpinBox::setEnabled(bool)</primary></indexterm>QSpinBox::setEnabled(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMinimumSize(int, int)</primary></indexterm>QWidget::setMinimumSize(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMaximumSize(int, int)</primary></indexterm>QWidget::setMaximumSize(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setSizeIncrement(int, int)</primary></indexterm>QWidget::setSizeIncrement(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundMode(Qt::BackgroundMode)</primary></indexterm>QWidget::setBackgroundMode(Qt::BackgroundMode)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setEraseColor(QColor const&)</primary></indexterm>QWidget::setEraseColor(QColor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setErasePixmap(QPixmap const&)</primary></indexterm>QWidget::setErasePixmap(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setPalette(QPalette const&)</primary></indexterm>QWidget::setPalette(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setPaletteBackgroundColor(QColor const&)</primary></indexterm>QWidget::setPaletteBackgroundColor(QColor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setPaletteBackgroundPixmap(QPixmap const&)</primary></indexterm>QWidget::setPaletteBackgroundPixmap(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFont(QFont const&)</primary></indexterm>QWidget::setFont(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setCursor(QCursor const&)</primary></indexterm>QWidget::setCursor(QCursor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;33&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::unsetCursor()</primary></indexterm>QWidget::unsetCursor()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;34&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMask(QBitmap const&)</primary></indexterm>QWidget::setMask(QBitmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;35&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMask(QRegion const&)</primary></indexterm>QWidget::setMask(QRegion const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;36&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundColor(QColor const&)</primary></indexterm>QWidget::setBackgroundColor(QColor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;37&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundPixmap(QPixmap const&)</primary></indexterm>QWidget::setBackgroundPixmap(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;38&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setCaption(QString const&)</primary></indexterm>QWidget::setCaption(QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;39&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setIcon(QPixmap const&)</primary></indexterm>QWidget::setIcon(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;40&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setIconText(QString const&)</primary></indexterm>QWidget::setIconText(QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;41&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMouseTracking(bool)</primary></indexterm>QWidget::setMouseTracking(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;42&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFocus()</primary></indexterm>QWidget::setFocus()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;43&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setActiveWindow()</primary></indexterm>QWidget::setActiveWindow()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;44&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFocusPolicy(QWidget::FocusPolicy)</primary></indexterm>QWidget::setFocusPolicy(QWidget::FocusPolicy)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;45&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFocusProxy(QWidget*)</primary></indexterm>QWidget::setFocusProxy(QWidget*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;46&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setUpdatesEnabled(bool)</primary></indexterm>QWidget::setUpdatesEnabled(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;47&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::show()</primary></indexterm>QWidget::show()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;48&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::hide()</primary></indexterm>QWidget::hide()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;49&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showMinimized()</primary></indexterm>QWidget::showMinimized()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;50&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showMaximized()</primary></indexterm>QWidget::showMaximized()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;51&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showNormal()</primary></indexterm>QWidget::showNormal()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;52&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::polish()</primary></indexterm>QWidget::polish()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;53&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::move(int, int)</primary></indexterm>QWidget::move(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;54&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::resize(int, int)</primary></indexterm>QWidget::resize(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;55&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setGeometry(int, int, int, int)</primary></indexterm>QWidget::setGeometry(int, int, int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;56&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setGeometry(QRect const&)</primary></indexterm>NULL or QWidget::setGeometry(QRect const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;57&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::close(bool)</primary></indexterm>QWidget::close(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;58&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSpinBox::sizeHint() const</primary></indexterm>QSpinBox::sizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;59&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSpinBox::minimumSizeHint() const</primary></indexterm>QSpinBox::minimumSizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;60&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::sizePolicy() const</primary></indexterm>QWidget::sizePolicy() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;61&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setSizePolicy(QSizePolicy)</primary></indexterm>QWidget::setSizePolicy(QSizePolicy)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;62&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::heightForWidth(int) const</primary></indexterm>QWidget::heightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;63&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::adjustSize()</primary></indexterm>QWidget::adjustSize()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;64&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::reparent(QWidget*, unsigned int, QPoint const&, bool)</primary></indexterm>QWidget::reparent(QWidget*, unsigned int, QPoint const&, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;65&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setAcceptDrops(bool)</primary></indexterm>QWidget::setAcceptDrops(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;66&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setAutoMask(bool)</primary></indexterm>QWidget::setAutoMask(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;67&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundOrigin(QWidget::BackgroundOrigin)</primary></indexterm>QWidget::setBackgroundOrigin(QWidget::BackgroundOrigin)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;68&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::customWhatsThis() const</primary></indexterm>QWidget::customWhatsThis() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;69&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mousePressEvent(QMouseEvent*)</primary></indexterm>QWidget::mousePressEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;70&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseReleaseEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseReleaseEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;71&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseDoubleClickEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseDoubleClickEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;72&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseMoveEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseMoveEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;73&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSpinBox::wheelEvent(QWheelEvent*)</primary></indexterm>QSpinBox::wheelEvent(QWheelEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;74&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyPressEvent(QKeyEvent*)</primary></indexterm>QWidget::keyPressEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;75&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyReleaseEvent(QKeyEvent*)</primary></indexterm>QWidget::keyReleaseEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;76&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusInEvent(QFocusEvent*)</primary></indexterm>QWidget::focusInEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;77&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusOutEvent(QFocusEvent*)</primary></indexterm>QWidget::focusOutEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;78&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enterEvent(QEvent*)</primary></indexterm>QWidget::enterEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;79&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSpinBox::leaveEvent(QEvent*)</primary></indexterm>QSpinBox::leaveEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;80&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paintEvent(QPaintEvent*)</primary></indexterm>QWidget::paintEvent(QPaintEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;81&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::moveEvent(QMoveEvent*)</primary></indexterm>QWidget::moveEvent(QMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;82&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSpinBox::resizeEvent(QResizeEvent*)</primary></indexterm>QSpinBox::resizeEvent(QResizeEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;83&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::closeEvent(QCloseEvent*)</primary></indexterm>QWidget::closeEvent(QCloseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;84&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::contextMenuEvent(QContextMenuEvent*)</primary></indexterm>QWidget::contextMenuEvent(QContextMenuEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;85&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::imStartEvent(QIMEvent*)</primary></indexterm>QWidget::imStartEvent(QIMEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;86&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::imComposeEvent(QIMEvent*)</primary></indexterm>QWidget::imComposeEvent(QIMEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;87&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::imEndEvent(QIMEvent*)</primary></indexterm>QWidget::imEndEvent(QIMEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;88&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::tabletEvent(QTabletEvent*)</primary></indexterm>QWidget::tabletEvent(QTabletEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;89&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragEnterEvent(QDragEnterEvent*)</primary></indexterm>QWidget::dragEnterEvent(QDragEnterEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;90&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragMoveEvent(QDragMoveEvent*)</primary></indexterm>QWidget::dragMoveEvent(QDragMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;91&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragLeaveEvent(QDragLeaveEvent*)</primary></indexterm>QWidget::dragLeaveEvent(QDragLeaveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;92&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dropEvent(QDropEvent*)</primary></indexterm>QWidget::dropEvent(QDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;93&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showEvent(QShowEvent*)</primary></indexterm>QWidget::showEvent(QShowEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;94&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::hideEvent(QHideEvent*)</primary></indexterm>QWidget::hideEvent(QHideEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;95&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::x11Event(_XEvent*)</primary></indexterm>QWidget::x11Event(_XEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;96&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::updateMask()</primary></indexterm>QWidget::updateMask()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;97&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSpinBox::styleChange(QStyle&)</primary></indexterm>QSpinBox::styleChange(QStyle&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;98&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enabledChange(bool)</primary></indexterm>QWidget::enabledChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;99&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paletteChange(QPalette const&)</primary></indexterm>QWidget::paletteChange(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;100&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::fontChange(QFont const&)</primary></indexterm>QWidget::fontChange(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;101&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::windowActivationChange(bool)</primary></indexterm>QWidget::windowActivationChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;102&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::metric(int) const</primary></indexterm>QWidget::metric(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;103&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::create(unsigned long, bool, bool)</primary></indexterm>QWidget::create(unsigned long, bool, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;104&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::destroy(bool, bool)</primary></indexterm>QWidget::destroy(bool, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;105&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setWState(unsigned int)</primary></indexterm>NULL or QWidget::setWState(unsigned int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;106&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setWFlags(unsigned int)</primary></indexterm>NULL or QWidget::setWFlags(unsigned int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;107&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusNextPrevChild(bool)</primary></indexterm>QWidget::focusNextPrevChild(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;108&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setKeyCompression(bool)</primary></indexterm>QWidget::setKeyCompression(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;109&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMicroFocusHint(int, int, int, int, bool, QFont*)</primary></indexterm>QWidget::setMicroFocusHint(int, int, int, int, bool, QFont*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;110&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSpinBox::prefix() const</primary></indexterm>QSpinBox::prefix() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;111&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSpinBox::suffix() const</primary></indexterm>QSpinBox::suffix() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;112&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSpinBox::cleanText() const</primary></indexterm>QSpinBox::cleanText() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;113&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSpinBox::setSpecialValueText(QString const&)</primary></indexterm>QSpinBox::setSpecialValueText(QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;114&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSpinBox::setWrapping(bool)</primary></indexterm>QSpinBox::setWrapping(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;115&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSpinBox::setButtonSymbols(QSpinBox::ButtonSymbols)</primary></indexterm>QSpinBox::setButtonSymbols(QSpinBox::ButtonSymbols)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;116&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSpinBox::setValidator(QValidator const*)</primary></indexterm>QSpinBox::setValidator(QValidator const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;117&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSpinBox::setValue(int)</primary></indexterm>QSpinBox::setValue(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;118&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSpinBox::setPrefix(QString const&)</primary></indexterm>QSpinBox::setPrefix(QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;119&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSpinBox::setSuffix(QString const&)</primary></indexterm>QSpinBox::setSuffix(QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;120&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSpinBox::stepUp()</primary></indexterm>QSpinBox::stepUp()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;121&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSpinBox::stepDown()</primary></indexterm>QSpinBox::stepDown()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;122&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSpinBox::selectAll()</primary></indexterm>QSpinBox::selectAll()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;123&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSpinBox::mapValueToText(int)</primary></indexterm>QSpinBox::mapValueToText(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;124&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSpinBox::mapTextToValue(bool*)</primary></indexterm>QSpinBox::mapTextToValue(bool*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;125&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSpinBox::updateDisplay()</primary></indexterm>QSpinBox::updateDisplay()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;126&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSpinBox::interpretText()</primary></indexterm>QSpinBox::interpretText()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;127&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSpinBox::valueChange()</primary></indexterm>QSpinBox::valueChange()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;128&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSpinBox::rangeChange()</primary></indexterm>QSpinBox::rangeChange()</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--classdata-->
<TABLE id="cls-56299-1">
<TITLE>Secondary vtable for QSpinBox</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>-80</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QSpinBox</primary></indexterm>typeinfo for QSpinBox</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QSpinBox::~QSpinBox()</primary></indexterm>non-virtual thunk to QSpinBox::~QSpinBox()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QSpinBox::~QSpinBox()</primary></indexterm>non-virtual thunk to QSpinBox::~QSpinBox()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::setResolution(int)</primary></indexterm>QPaintDevice::setResolution(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::resolution() const</primary></indexterm>QPaintDevice::resolution() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::handle() const</primary></indexterm>QPaintDevice::handle() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::x11RenderHandle() const</primary></indexterm>QPaintDevice::x11RenderHandle() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::setX11Data(QPaintDeviceX11Data const*)</primary></indexterm>QPaintDevice::setX11Data(QPaintDeviceX11Data const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::cmd(int, QPainter*, QPDevCmdParam*)</primary></indexterm>QPaintDevice::cmd(int, QPainter*, QPDevCmdParam*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::metric(int) const</primary></indexterm>non-virtual thunk to QWidget::metric(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::fontMet(QFont*, int, char const*, int) const</primary></indexterm>QPaintDevice::fontMet(QFont*, int, char const*, int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::fontInf(QFont*, int) const</primary></indexterm>QPaintDevice::fontInf(QFont*, int) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--classdata-->
<TABLE id="cls-56299-2">
<TITLE>Secondary vtable for QSpinBox</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>-200</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QSpinBox</primary></indexterm>typeinfo for QSpinBox</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QSpinBox::~QSpinBox()</primary></indexterm>non-virtual thunk to QSpinBox::~QSpinBox()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QSpinBox::~QSpinBox()</primary></indexterm>non-virtual thunk to QSpinBox::~QSpinBox()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QSpinBox::valueChange()</primary></indexterm>non-virtual thunk to QSpinBox::valueChange()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QSpinBox::rangeChange()</primary></indexterm>non-virtual thunk to QSpinBox::rangeChange()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QRangeControl::stepChange()</primary></indexterm>QRangeControl::stepChange()</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QSpinBox  class
is described by <XREF LINKEND="rtti-50017">
</PARA>
<!--classdata-->
<TABLE ID="rtti-50017">
<TITLE>typeinfo for QSpinBox</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__vmi_class_type_info</primary></indexterm>vtable for __cxxabiv1::__vmi_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QSpinBox</primary></indexterm>typeinfo name for QSpinBox</ENTRY>
</ROW>
<ROW>
<ENTRY>flags:</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QWidget</primary></indexterm>typeinfo for QWidget</ENTRY>
<ENTRY>2</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QRangeControl</primary></indexterm>typeinfo for QRangeControl</ENTRY>
<ENTRY>29698</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QLabel</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QLabel class
is described by <XREF LINKEND="cls-60399-0">
</PARA>
<!--classdata-->
<TABLE id="cls-60399-0">
<TITLE>Primary vtable for QLabel</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QLabel</primary></indexterm>typeinfo for QLabel</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLabel::metaObject() const</primary></indexterm>NULL or QLabel::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLabel::className() const</primary></indexterm>QLabel::className() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLabel::qt_cast(char const*)</primary></indexterm>QLabel::qt_cast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLabel::qt_invoke(int, QUObject*)</primary></indexterm>QLabel::qt_invoke(int, QUObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLabel::qt_emit(int, QUObject*)</primary></indexterm>QLabel::qt_emit(int, QUObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLabel::qt_property(int, int, QVariant*)</primary></indexterm>QLabel::qt_property(int, int, QVariant*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLabel::~QLabel()</primary></indexterm>QLabel::~QLabel()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLabel::~QLabel()</primary></indexterm>QLabel::~QLabel()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::event(QEvent*)</primary></indexterm>QWidget::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::eventFilter(QObject*, QEvent*)</primary></indexterm>QObject::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setName(char const*)</primary></indexterm>QWidget::setName(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::insertChild(QObject*)</primary></indexterm>QObject::insertChild(QObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::removeChild(QObject*)</primary></indexterm>QObject::removeChild(QObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::setProperty(char const*, QVariant const&)</primary></indexterm>QObject::setProperty(char const*, QVariant const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::property(char const*) const</primary></indexterm>QObject::property(char const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QCustomEvent*)</primary></indexterm>QObject::customEvent(QCustomEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::checkConnectArgs(char const*, QObject const*, char const*)</primary></indexterm>QObject::checkConnectArgs(char const*, QObject const*, char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setEnabled(bool)</primary></indexterm>QWidget::setEnabled(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMinimumSize(int, int)</primary></indexterm>QWidget::setMinimumSize(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMaximumSize(int, int)</primary></indexterm>QWidget::setMaximumSize(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setSizeIncrement(int, int)</primary></indexterm>QWidget::setSizeIncrement(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundMode(Qt::BackgroundMode)</primary></indexterm>QWidget::setBackgroundMode(Qt::BackgroundMode)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setEraseColor(QColor const&)</primary></indexterm>QWidget::setEraseColor(QColor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setErasePixmap(QPixmap const&)</primary></indexterm>QWidget::setErasePixmap(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setPalette(QPalette const&)</primary></indexterm>QWidget::setPalette(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setPaletteBackgroundColor(QColor const&)</primary></indexterm>QWidget::setPaletteBackgroundColor(QColor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setPaletteBackgroundPixmap(QPixmap const&)</primary></indexterm>QWidget::setPaletteBackgroundPixmap(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLabel::setFont(QFont const&)</primary></indexterm>QLabel::setFont(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setCursor(QCursor const&)</primary></indexterm>QWidget::setCursor(QCursor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;33&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::unsetCursor()</primary></indexterm>QWidget::unsetCursor()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;34&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMask(QBitmap const&)</primary></indexterm>QWidget::setMask(QBitmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;35&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMask(QRegion const&)</primary></indexterm>QWidget::setMask(QRegion const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;36&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundColor(QColor const&)</primary></indexterm>QWidget::setBackgroundColor(QColor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;37&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundPixmap(QPixmap const&)</primary></indexterm>QWidget::setBackgroundPixmap(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;38&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setCaption(QString const&)</primary></indexterm>QWidget::setCaption(QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;39&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setIcon(QPixmap const&)</primary></indexterm>QWidget::setIcon(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;40&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setIconText(QString const&)</primary></indexterm>QWidget::setIconText(QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;41&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMouseTracking(bool)</primary></indexterm>QWidget::setMouseTracking(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;42&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFocus()</primary></indexterm>QWidget::setFocus()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;43&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setActiveWindow()</primary></indexterm>QWidget::setActiveWindow()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;44&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFocusPolicy(QWidget::FocusPolicy)</primary></indexterm>QWidget::setFocusPolicy(QWidget::FocusPolicy)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;45&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFocusProxy(QWidget*)</primary></indexterm>QWidget::setFocusProxy(QWidget*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;46&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setUpdatesEnabled(bool)</primary></indexterm>QWidget::setUpdatesEnabled(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;47&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::show()</primary></indexterm>QWidget::show()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;48&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::hide()</primary></indexterm>QWidget::hide()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;49&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showMinimized()</primary></indexterm>QWidget::showMinimized()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;50&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showMaximized()</primary></indexterm>QWidget::showMaximized()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;51&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showNormal()</primary></indexterm>QWidget::showNormal()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;52&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::polish()</primary></indexterm>QWidget::polish()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;53&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::move(int, int)</primary></indexterm>QWidget::move(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;54&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::resize(int, int)</primary></indexterm>QWidget::resize(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;55&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setGeometry(int, int, int, int)</primary></indexterm>QWidget::setGeometry(int, int, int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;56&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setGeometry(QRect const&)</primary></indexterm>NULL or QWidget::setGeometry(QRect const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;57&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::close(bool)</primary></indexterm>QWidget::close(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;58&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLabel::sizeHint() const</primary></indexterm>QLabel::sizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;59&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLabel::minimumSizeHint() const</primary></indexterm>QLabel::minimumSizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;60&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::sizePolicy() const</primary></indexterm>QWidget::sizePolicy() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;61&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setSizePolicy(QSizePolicy)</primary></indexterm>QWidget::setSizePolicy(QSizePolicy)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;62&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLabel::heightForWidth(int) const</primary></indexterm>QLabel::heightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;63&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::adjustSize()</primary></indexterm>QWidget::adjustSize()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;64&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::reparent(QWidget*, unsigned int, QPoint const&, bool)</primary></indexterm>QWidget::reparent(QWidget*, unsigned int, QPoint const&, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;65&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setAcceptDrops(bool)</primary></indexterm>QWidget::setAcceptDrops(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;66&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setAutoMask(bool)</primary></indexterm>QWidget::setAutoMask(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;67&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundOrigin(QWidget::BackgroundOrigin)</primary></indexterm>QWidget::setBackgroundOrigin(QWidget::BackgroundOrigin)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;68&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::customWhatsThis() const</primary></indexterm>QWidget::customWhatsThis() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;69&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mousePressEvent(QMouseEvent*)</primary></indexterm>QWidget::mousePressEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;70&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseReleaseEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseReleaseEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;71&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseDoubleClickEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseDoubleClickEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;72&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseMoveEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseMoveEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;73&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::wheelEvent(QWheelEvent*)</primary></indexterm>QWidget::wheelEvent(QWheelEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;74&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyPressEvent(QKeyEvent*)</primary></indexterm>QWidget::keyPressEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;75&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyReleaseEvent(QKeyEvent*)</primary></indexterm>QWidget::keyReleaseEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;76&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusInEvent(QFocusEvent*)</primary></indexterm>QWidget::focusInEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;77&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusOutEvent(QFocusEvent*)</primary></indexterm>QWidget::focusOutEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;78&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enterEvent(QEvent*)</primary></indexterm>QWidget::enterEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;79&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::leaveEvent(QEvent*)</primary></indexterm>QWidget::leaveEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;80&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::paintEvent(QPaintEvent*)</primary></indexterm>QFrame::paintEvent(QPaintEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;81&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::moveEvent(QMoveEvent*)</primary></indexterm>QWidget::moveEvent(QMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;82&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLabel::resizeEvent(QResizeEvent*)</primary></indexterm>QLabel::resizeEvent(QResizeEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;83&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::closeEvent(QCloseEvent*)</primary></indexterm>QWidget::closeEvent(QCloseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;84&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::contextMenuEvent(QContextMenuEvent*)</primary></indexterm>QWidget::contextMenuEvent(QContextMenuEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;85&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::imStartEvent(QIMEvent*)</primary></indexterm>QWidget::imStartEvent(QIMEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;86&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::imComposeEvent(QIMEvent*)</primary></indexterm>QWidget::imComposeEvent(QIMEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;87&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::imEndEvent(QIMEvent*)</primary></indexterm>QWidget::imEndEvent(QIMEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;88&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::tabletEvent(QTabletEvent*)</primary></indexterm>QWidget::tabletEvent(QTabletEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;89&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragEnterEvent(QDragEnterEvent*)</primary></indexterm>QWidget::dragEnterEvent(QDragEnterEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;90&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragMoveEvent(QDragMoveEvent*)</primary></indexterm>QWidget::dragMoveEvent(QDragMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;91&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragLeaveEvent(QDragLeaveEvent*)</primary></indexterm>QWidget::dragLeaveEvent(QDragLeaveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;92&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dropEvent(QDropEvent*)</primary></indexterm>QWidget::dropEvent(QDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;93&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showEvent(QShowEvent*)</primary></indexterm>QWidget::showEvent(QShowEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;94&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::hideEvent(QHideEvent*)</primary></indexterm>QWidget::hideEvent(QHideEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;95&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::x11Event(_XEvent*)</primary></indexterm>QWidget::x11Event(_XEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;96&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::updateMask()</primary></indexterm>QWidget::updateMask()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;97&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::styleChange(QStyle&)</primary></indexterm>QFrame::styleChange(QStyle&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;98&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enabledChange(bool)</primary></indexterm>QWidget::enabledChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;99&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paletteChange(QPalette const&)</primary></indexterm>QWidget::paletteChange(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;100&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLabel::fontChange(QFont const&)</primary></indexterm>QLabel::fontChange(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;101&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::windowActivationChange(bool)</primary></indexterm>QWidget::windowActivationChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;102&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::metric(int) const</primary></indexterm>QWidget::metric(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;103&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::create(unsigned long, bool, bool)</primary></indexterm>QWidget::create(unsigned long, bool, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;104&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::destroy(bool, bool)</primary></indexterm>QWidget::destroy(bool, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;105&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setWState(unsigned int)</primary></indexterm>NULL or QWidget::setWState(unsigned int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;106&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setWFlags(unsigned int)</primary></indexterm>NULL or QWidget::setWFlags(unsigned int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;107&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusNextPrevChild(bool)</primary></indexterm>QWidget::focusNextPrevChild(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;108&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setKeyCompression(bool)</primary></indexterm>QWidget::setKeyCompression(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;109&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMicroFocusHint(int, int, int, int, bool, QFont*)</primary></indexterm>QWidget::setMicroFocusHint(int, int, int, int, bool, QFont*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;110&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::setFrameStyle(int)</primary></indexterm>QFrame::setFrameStyle(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;111&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::setLineWidth(int)</primary></indexterm>QFrame::setLineWidth(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;112&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::setMargin(int)</primary></indexterm>QFrame::setMargin(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;113&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::setMidLineWidth(int)</primary></indexterm>QFrame::setMidLineWidth(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;114&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::setFrameRect(QRect const&)</primary></indexterm>QFrame::setFrameRect(QRect const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;115&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::drawFrame(QPainter*)</primary></indexterm>QFrame::drawFrame(QPainter*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;116&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLabel::drawContents(QPainter*)</primary></indexterm>QLabel::drawContents(QPainter*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;117&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::frameChanged()</primary></indexterm>QFrame::frameChanged()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;118&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLabel::setAlignment(int)</primary></indexterm>QLabel::setAlignment(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;119&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLabel::setAutoResize(bool)</primary></indexterm>QLabel::setAutoResize(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;120&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLabel::setBuddy(QWidget*)</primary></indexterm>QLabel::setBuddy(QWidget*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;121&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLabel::setText(QString const&)</primary></indexterm>QLabel::setText(QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;122&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLabel::setPixmap(QPixmap const&)</primary></indexterm>QLabel::setPixmap(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;123&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLabel::setPicture(QPicture const&)</primary></indexterm>QLabel::setPicture(QPicture const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;124&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLabel::setMovie(QMovie const&)</primary></indexterm>QLabel::setMovie(QMovie const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;125&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLabel::setNum(int)</primary></indexterm>QLabel::setNum(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;126&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLabel::setNum(double)</primary></indexterm>QLabel::setNum(double)</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--classdata-->
<TABLE id="cls-60399-1">
<TITLE>Secondary vtable for QLabel</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>-80</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QLabel</primary></indexterm>typeinfo for QLabel</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QLabel::~QLabel()</primary></indexterm>non-virtual thunk to QLabel::~QLabel()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QLabel::~QLabel()</primary></indexterm>non-virtual thunk to QLabel::~QLabel()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::setResolution(int)</primary></indexterm>QPaintDevice::setResolution(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::resolution() const</primary></indexterm>QPaintDevice::resolution() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::handle() const</primary></indexterm>QPaintDevice::handle() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::x11RenderHandle() const</primary></indexterm>QPaintDevice::x11RenderHandle() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::setX11Data(QPaintDeviceX11Data const*)</primary></indexterm>QPaintDevice::setX11Data(QPaintDeviceX11Data const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::cmd(int, QPainter*, QPDevCmdParam*)</primary></indexterm>QPaintDevice::cmd(int, QPainter*, QPDevCmdParam*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::metric(int) const</primary></indexterm>non-virtual thunk to QWidget::metric(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::fontMet(QFont*, int, char const*, int) const</primary></indexterm>QPaintDevice::fontMet(QFont*, int, char const*, int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::fontInf(QFont*, int) const</primary></indexterm>QPaintDevice::fontInf(QFont*, int) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QLabel  class
is described by <XREF LINKEND="rtti-59973">
</PARA>
<!--classdata-->
<TABLE ID="rtti-59973">
<TITLE>typeinfo for QLabel</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QLabel</primary></indexterm>typeinfo name for QLabel</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QFrame</primary></indexterm>typeinfo for QFrame</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QListBoxPixmap</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QListBoxPixmap class
is described in the generic part of this specification.
</PARA>
<PARA>
The Run Time Type Information for the QListBoxPixmap  class
is described by <XREF LINKEND="rtti-55109">
</PARA>
<!--classdata-->
<TABLE ID="rtti-55109">
<TITLE>typeinfo for QListBoxPixmap</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QListBoxPixmap</primary></indexterm>typeinfo name for QListBoxPixmap</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QListBoxItem</primary></indexterm>typeinfo for QListBoxItem</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QWhatsThis</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QWhatsThis class
is described in the generic part of this specification.
</PARA>
<PARA>
The Run Time Type Information for the QWhatsThis  class
is described by <XREF LINKEND="rtti-59595">
</PARA>
<!--classdata-->
<TABLE ID="rtti-59595">
<TITLE>typeinfo for QWhatsThis</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QWhatsThis</primary></indexterm>typeinfo name for QWhatsThis</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for Qt</primary></indexterm>typeinfo for Qt</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QMultiLineEdit</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QMultiLineEdit class
is described by <XREF LINKEND="cls-51111-0">
</PARA>
<!--classdata-->
<TABLE id="cls-51111-0">
<TITLE>Primary vtable for QMultiLineEdit</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QMultiLineEdit</primary></indexterm>typeinfo for QMultiLineEdit</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMultiLineEdit::metaObject() const</primary></indexterm>NULL or QMultiLineEdit::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMultiLineEdit::className() const</primary></indexterm>QMultiLineEdit::className() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMultiLineEdit::qt_cast(char const*)</primary></indexterm>QMultiLineEdit::qt_cast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMultiLineEdit::qt_invoke(int, QUObject*)</primary></indexterm>QMultiLineEdit::qt_invoke(int, QUObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMultiLineEdit::qt_emit(int, QUObject*)</primary></indexterm>QMultiLineEdit::qt_emit(int, QUObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMultiLineEdit::qt_property(int, int, QVariant*)</primary></indexterm>QMultiLineEdit::qt_property(int, int, QVariant*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMultiLineEdit::~QMultiLineEdit()</primary></indexterm>QMultiLineEdit::~QMultiLineEdit()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMultiLineEdit::~QMultiLineEdit()</primary></indexterm>QMultiLineEdit::~QMultiLineEdit()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::event(QEvent*)</primary></indexterm>QTextEdit::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::eventFilter(QObject*, QEvent*)</primary></indexterm>QTextEdit::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setName(char const*)</primary></indexterm>QWidget::setName(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::insertChild(QObject*)</primary></indexterm>QObject::insertChild(QObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::removeChild(QObject*)</primary></indexterm>QScrollView::removeChild(QObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::setProperty(char const*, QVariant const&)</primary></indexterm>QObject::setProperty(char const*, QVariant const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::property(char const*) const</primary></indexterm>QObject::property(char const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QCustomEvent*)</primary></indexterm>QObject::customEvent(QCustomEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::checkConnectArgs(char const*, QObject const*, char const*)</primary></indexterm>QObject::checkConnectArgs(char const*, QObject const*, char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::setEnabled(bool)</primary></indexterm>QTextEdit::setEnabled(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMinimumSize(int, int)</primary></indexterm>QWidget::setMinimumSize(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMaximumSize(int, int)</primary></indexterm>QWidget::setMaximumSize(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setSizeIncrement(int, int)</primary></indexterm>QWidget::setSizeIncrement(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundMode(Qt::BackgroundMode)</primary></indexterm>QWidget::setBackgroundMode(Qt::BackgroundMode)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setEraseColor(QColor const&)</primary></indexterm>QWidget::setEraseColor(QColor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setErasePixmap(QPixmap const&)</primary></indexterm>QWidget::setErasePixmap(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::setPalette(QPalette const&)</primary></indexterm>QTextEdit::setPalette(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setPaletteBackgroundColor(QColor const&)</primary></indexterm>QWidget::setPaletteBackgroundColor(QColor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setPaletteBackgroundPixmap(QPixmap const&)</primary></indexterm>QWidget::setPaletteBackgroundPixmap(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::setFont(QFont const&)</primary></indexterm>QTextEdit::setFont(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setCursor(QCursor const&)</primary></indexterm>QWidget::setCursor(QCursor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;33&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::unsetCursor()</primary></indexterm>QWidget::unsetCursor()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;34&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMask(QBitmap const&)</primary></indexterm>QWidget::setMask(QBitmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;35&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMask(QRegion const&)</primary></indexterm>QWidget::setMask(QRegion const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;36&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundColor(QColor const&)</primary></indexterm>QWidget::setBackgroundColor(QColor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;37&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundPixmap(QPixmap const&)</primary></indexterm>QWidget::setBackgroundPixmap(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;38&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setCaption(QString const&)</primary></indexterm>QWidget::setCaption(QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;39&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setIcon(QPixmap const&)</primary></indexterm>QWidget::setIcon(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;40&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setIconText(QString const&)</primary></indexterm>QWidget::setIconText(QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;41&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMouseTracking(bool)</primary></indexterm>QWidget::setMouseTracking(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;42&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFocus()</primary></indexterm>QWidget::setFocus()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;43&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setActiveWindow()</primary></indexterm>QWidget::setActiveWindow()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;44&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFocusPolicy(QWidget::FocusPolicy)</primary></indexterm>QWidget::setFocusPolicy(QWidget::FocusPolicy)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;45&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFocusProxy(QWidget*)</primary></indexterm>QWidget::setFocusProxy(QWidget*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;46&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setUpdatesEnabled(bool)</primary></indexterm>QWidget::setUpdatesEnabled(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;47&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::show()</primary></indexterm>QScrollView::show()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;48&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::hide()</primary></indexterm>QWidget::hide()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;49&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showMinimized()</primary></indexterm>QWidget::showMinimized()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;50&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showMaximized()</primary></indexterm>QWidget::showMaximized()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;51&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showNormal()</primary></indexterm>QWidget::showNormal()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;52&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::polish()</primary></indexterm>QTextEdit::polish()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;53&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::move(int, int)</primary></indexterm>QWidget::move(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;54&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::resize(int, int)</primary></indexterm>QScrollView::resize(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;55&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setGeometry(int, int, int, int)</primary></indexterm>QWidget::setGeometry(int, int, int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;56&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setGeometry(QRect const&)</primary></indexterm>NULL or QWidget::setGeometry(QRect const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;57&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::close(bool)</primary></indexterm>QWidget::close(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;58&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::sizeHint() const</primary></indexterm>QTextEdit::sizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;59&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::minimumSizeHint() const</primary></indexterm>QScrollView::minimumSizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;60&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::sizePolicy() const</primary></indexterm>QWidget::sizePolicy() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;61&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setSizePolicy(QSizePolicy)</primary></indexterm>QWidget::setSizePolicy(QSizePolicy)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;62&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::heightForWidth(int) const</primary></indexterm>QTextEdit::heightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;63&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::adjustSize()</primary></indexterm>QWidget::adjustSize()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;64&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::reparent(QWidget*, unsigned int, QPoint const&, bool)</primary></indexterm>QWidget::reparent(QWidget*, unsigned int, QPoint const&, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;65&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setAcceptDrops(bool)</primary></indexterm>QWidget::setAcceptDrops(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;66&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setAutoMask(bool)</primary></indexterm>QWidget::setAutoMask(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;67&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundOrigin(QWidget::BackgroundOrigin)</primary></indexterm>QWidget::setBackgroundOrigin(QWidget::BackgroundOrigin)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;68&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::customWhatsThis() const</primary></indexterm>QWidget::customWhatsThis() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;69&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::mousePressEvent(QMouseEvent*)</primary></indexterm>QScrollView::mousePressEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;70&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::mouseReleaseEvent(QMouseEvent*)</primary></indexterm>QScrollView::mouseReleaseEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;71&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::mouseDoubleClickEvent(QMouseEvent*)</primary></indexterm>QScrollView::mouseDoubleClickEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;72&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::mouseMoveEvent(QMouseEvent*)</primary></indexterm>QScrollView::mouseMoveEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;73&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::wheelEvent(QWheelEvent*)</primary></indexterm>QScrollView::wheelEvent(QWheelEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;74&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::keyPressEvent(QKeyEvent*)</primary></indexterm>QTextEdit::keyPressEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;75&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyReleaseEvent(QKeyEvent*)</primary></indexterm>QWidget::keyReleaseEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;76&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusInEvent(QFocusEvent*)</primary></indexterm>QWidget::focusInEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;77&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusOutEvent(QFocusEvent*)</primary></indexterm>QWidget::focusOutEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;78&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enterEvent(QEvent*)</primary></indexterm>QWidget::enterEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;79&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::leaveEvent(QEvent*)</primary></indexterm>QWidget::leaveEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;80&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::paintEvent(QPaintEvent*)</primary></indexterm>QFrame::paintEvent(QPaintEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;81&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::moveEvent(QMoveEvent*)</primary></indexterm>QWidget::moveEvent(QMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;82&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::resizeEvent(QResizeEvent*)</primary></indexterm>QTextEdit::resizeEvent(QResizeEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;83&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::closeEvent(QCloseEvent*)</primary></indexterm>QWidget::closeEvent(QCloseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;84&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::contextMenuEvent(QContextMenuEvent*)</primary></indexterm>QScrollView::contextMenuEvent(QContextMenuEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;85&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::imStartEvent(QIMEvent*)</primary></indexterm>QTextEdit::imStartEvent(QIMEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;86&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::imComposeEvent(QIMEvent*)</primary></indexterm>QTextEdit::imComposeEvent(QIMEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;87&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::imEndEvent(QIMEvent*)</primary></indexterm>QTextEdit::imEndEvent(QIMEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;88&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::tabletEvent(QTabletEvent*)</primary></indexterm>QWidget::tabletEvent(QTabletEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;89&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragEnterEvent(QDragEnterEvent*)</primary></indexterm>QWidget::dragEnterEvent(QDragEnterEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;90&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragMoveEvent(QDragMoveEvent*)</primary></indexterm>QWidget::dragMoveEvent(QDragMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;91&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragLeaveEvent(QDragLeaveEvent*)</primary></indexterm>QWidget::dragLeaveEvent(QDragLeaveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;92&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dropEvent(QDropEvent*)</primary></indexterm>QWidget::dropEvent(QDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;93&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showEvent(QShowEvent*)</primary></indexterm>QWidget::showEvent(QShowEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;94&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::hideEvent(QHideEvent*)</primary></indexterm>QWidget::hideEvent(QHideEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;95&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::x11Event(_XEvent*)</primary></indexterm>QWidget::x11Event(_XEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;96&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::updateMask()</primary></indexterm>QWidget::updateMask()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;97&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::styleChange(QStyle&)</primary></indexterm>QScrollView::styleChange(QStyle&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;98&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enabledChange(bool)</primary></indexterm>QWidget::enabledChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;99&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paletteChange(QPalette const&)</primary></indexterm>QWidget::paletteChange(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;100&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::fontChange(QFont const&)</primary></indexterm>QScrollView::fontChange(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;101&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::windowActivationChange(bool)</primary></indexterm>QTextEdit::windowActivationChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;102&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::metric(int) const</primary></indexterm>QWidget::metric(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;103&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::create(unsigned long, bool, bool)</primary></indexterm>QWidget::create(unsigned long, bool, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;104&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::destroy(bool, bool)</primary></indexterm>QWidget::destroy(bool, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;105&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setWState(unsigned int)</primary></indexterm>NULL or QWidget::setWState(unsigned int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;106&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setWFlags(unsigned int)</primary></indexterm>NULL or QWidget::setWFlags(unsigned int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;107&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::focusNextPrevChild(bool)</primary></indexterm>QTextEdit::focusNextPrevChild(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;108&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setKeyCompression(bool)</primary></indexterm>QWidget::setKeyCompression(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;109&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMicroFocusHint(int, int, int, int, bool, QFont*)</primary></indexterm>QWidget::setMicroFocusHint(int, int, int, int, bool, QFont*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;110&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::setFrameStyle(int)</primary></indexterm>QFrame::setFrameStyle(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;111&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::setLineWidth(int)</primary></indexterm>QFrame::setLineWidth(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;112&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::setMargin(int)</primary></indexterm>QFrame::setMargin(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;113&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::setMidLineWidth(int)</primary></indexterm>QFrame::setMidLineWidth(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;114&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::setFrameRect(QRect const&)</primary></indexterm>QFrame::setFrameRect(QRect const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;115&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::drawFrame(QPainter*)</primary></indexterm>QFrame::drawFrame(QPainter*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;116&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::drawContents(QPainter*)</primary></indexterm>QTextEdit::drawContents(QPainter*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;117&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::frameChanged()</primary></indexterm>QScrollView::frameChanged()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;118&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::setResizePolicy(QScrollView::ResizePolicy)</primary></indexterm>QScrollView::setResizePolicy(QScrollView::ResizePolicy)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;119&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::addChild(QWidget*, int, int)</primary></indexterm>QScrollView::addChild(QWidget*, int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;120&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::moveChild(QWidget*, int, int)</primary></indexterm>QScrollView::moveChild(QWidget*, int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;121&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::setVScrollBarMode(QScrollView::ScrollBarMode)</primary></indexterm>QScrollView::setVScrollBarMode(QScrollView::ScrollBarMode)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;122&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::setHScrollBarMode(QScrollView::ScrollBarMode)</primary></indexterm>QScrollView::setHScrollBarMode(QScrollView::ScrollBarMode)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;123&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::setCornerWidget(QWidget*)</primary></indexterm>QScrollView::setCornerWidget(QWidget*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;124&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::setDragAutoScroll(bool)</primary></indexterm>QScrollView::setDragAutoScroll(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;125&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::resizeContents(int, int)</primary></indexterm>QScrollView::resizeContents(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;126&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::setContentsPos(int, int)</primary></indexterm>QScrollView::setContentsPos(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;127&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::drawContents(QPainter*, int, int, int, int)</primary></indexterm>QTextEdit::drawContents(QPainter*, int, int, int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;128&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::drawContentsOffset(QPainter*, int, int, int, int, int, int)</primary></indexterm>QScrollView::drawContentsOffset(QPainter*, int, int, int, int, int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;129&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::contentsMousePressEvent(QMouseEvent*)</primary></indexterm>QTextEdit::contentsMousePressEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;130&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::contentsMouseReleaseEvent(QMouseEvent*)</primary></indexterm>QTextEdit::contentsMouseReleaseEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;131&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::contentsMouseDoubleClickEvent(QMouseEvent*)</primary></indexterm>QTextEdit::contentsMouseDoubleClickEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;132&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::contentsMouseMoveEvent(QMouseEvent*)</primary></indexterm>QTextEdit::contentsMouseMoveEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;133&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::contentsDragEnterEvent(QDragEnterEvent*)</primary></indexterm>QTextEdit::contentsDragEnterEvent(QDragEnterEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;134&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::contentsDragMoveEvent(QDragMoveEvent*)</primary></indexterm>QTextEdit::contentsDragMoveEvent(QDragMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;135&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::contentsDragLeaveEvent(QDragLeaveEvent*)</primary></indexterm>QTextEdit::contentsDragLeaveEvent(QDragLeaveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;136&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::contentsDropEvent(QDropEvent*)</primary></indexterm>QTextEdit::contentsDropEvent(QDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;137&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::contentsWheelEvent(QWheelEvent*)</primary></indexterm>QTextEdit::contentsWheelEvent(QWheelEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;138&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::contentsContextMenuEvent(QContextMenuEvent*)</primary></indexterm>QTextEdit::contentsContextMenuEvent(QContextMenuEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;139&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::viewportPaintEvent(QPaintEvent*)</primary></indexterm>QScrollView::viewportPaintEvent(QPaintEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;140&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::viewportResizeEvent(QResizeEvent*)</primary></indexterm>QTextEdit::viewportResizeEvent(QResizeEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;141&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::viewportMousePressEvent(QMouseEvent*)</primary></indexterm>QScrollView::viewportMousePressEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;142&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::viewportMouseReleaseEvent(QMouseEvent*)</primary></indexterm>QScrollView::viewportMouseReleaseEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;143&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::viewportMouseDoubleClickEvent(QMouseEvent*)</primary></indexterm>QScrollView::viewportMouseDoubleClickEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;144&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::viewportMouseMoveEvent(QMouseEvent*)</primary></indexterm>QScrollView::viewportMouseMoveEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;145&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::viewportDragEnterEvent(QDragEnterEvent*)</primary></indexterm>QScrollView::viewportDragEnterEvent(QDragEnterEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;146&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::viewportDragMoveEvent(QDragMoveEvent*)</primary></indexterm>QScrollView::viewportDragMoveEvent(QDragMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;147&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::viewportDragLeaveEvent(QDragLeaveEvent*)</primary></indexterm>QScrollView::viewportDragLeaveEvent(QDragLeaveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;148&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::viewportDropEvent(QDropEvent*)</primary></indexterm>QScrollView::viewportDropEvent(QDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;149&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::viewportWheelEvent(QWheelEvent*)</primary></indexterm>QScrollView::viewportWheelEvent(QWheelEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;150&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::viewportContextMenuEvent(QContextMenuEvent*)</primary></indexterm>QScrollView::viewportContextMenuEvent(QContextMenuEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;151&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::setMargins(int, int, int, int)</primary></indexterm>QScrollView::setMargins(int, int, int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;152&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::setHBarGeometry(QScrollBar&, int, int, int, int)</primary></indexterm>QScrollView::setHBarGeometry(QScrollBar&, int, int, int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;153&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::setVBarGeometry(QScrollBar&, int, int, int, int)</primary></indexterm>QScrollView::setVBarGeometry(QScrollBar&, int, int, int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;154&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::find(QString const&, bool, bool, bool, int*, int*)</primary></indexterm>QTextEdit::find(QString const&, bool, bool, bool, int*, int*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;155&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::getFormat(int, int, QFont*, QColor*, QTextEdit::VerticalAlignment*)</primary></indexterm>QTextEdit::getFormat(int, int, QFont*, QColor*, QTextEdit::VerticalAlignment*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;156&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::getParagraphFormat(int, QFont*, QColor*, QTextEdit::VerticalAlignment*, int*, QStyleSheetItem::DisplayMode*, QStyleSheetItem::ListStyle*, int*)</primary></indexterm>QTextEdit::getParagraphFormat(int, QFont*, QColor*, QTextEdit::VerticalAlignment*, int*, QStyleSheetItem::DisplayMode*, QStyleSheetItem::ListStyle*, int*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;157&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::setMimeSourceFactory(QMimeSourceFactory*)</primary></indexterm>QTextEdit::setMimeSourceFactory(QMimeSourceFactory*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;158&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::setStyleSheet(QStyleSheet*)</primary></indexterm>QTextEdit::setStyleSheet(QStyleSheet*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;159&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::scrollToAnchor(QString const&)</primary></indexterm>QTextEdit::scrollToAnchor(QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;160&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::setPaper(QBrush const&)</primary></indexterm>QTextEdit::setPaper(QBrush const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;161&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::setLinkUnderline(bool)</primary></indexterm>QTextEdit::setLinkUnderline(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;162&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::setWordWrap(QTextEdit::WordWrap)</primary></indexterm>QTextEdit::setWordWrap(QTextEdit::WordWrap)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;163&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::setWrapColumnOrWidth(int)</primary></indexterm>QTextEdit::setWrapColumnOrWidth(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;164&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::setWrapPolicy(QTextEdit::WrapPolicy)</primary></indexterm>QTextEdit::setWrapPolicy(QTextEdit::WrapPolicy)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;165&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::copy()</primary></indexterm>QTextEdit::copy()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;166&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::append(QString const&)</primary></indexterm>QTextEdit::append(QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;167&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::setText(QString const&, QString const&)</primary></indexterm>QTextEdit::setText(QString const&, QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;168&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::setTextFormat(Qt::TextFormat)</primary></indexterm>QTextEdit::setTextFormat(Qt::TextFormat)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;169&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::selectAll(bool)</primary></indexterm>QTextEdit::selectAll(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;170&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::setTabStopWidth(int)</primary></indexterm>QTextEdit::setTabStopWidth(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;171&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::zoomIn(int)</primary></indexterm>QTextEdit::zoomIn(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;172&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::zoomIn()</primary></indexterm>NULL or QTextEdit::zoomIn()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;173&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::zoomOut(int)</primary></indexterm>QTextEdit::zoomOut(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;174&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::zoomOut()</primary></indexterm>NULL or QTextEdit::zoomOut()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;175&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::zoomTo(int)</primary></indexterm>QTextEdit::zoomTo(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;176&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::sync()</primary></indexterm>QTextEdit::sync()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;177&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::setReadOnly(bool)</primary></indexterm>QTextEdit::setReadOnly(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;178&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::undo()</primary></indexterm>QTextEdit::undo()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;179&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::redo()</primary></indexterm>QTextEdit::redo()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;180&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::cut()</primary></indexterm>QTextEdit::cut()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;181&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::paste()</primary></indexterm>QTextEdit::paste()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;182&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::pasteSubType(QCString const&)</primary></indexterm>QTextEdit::pasteSubType(QCString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;183&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::clear()</primary></indexterm>QTextEdit::clear()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;184&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::del()</primary></indexterm>QTextEdit::del()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;185&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::indent()</primary></indexterm>QTextEdit::indent()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;186&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::setItalic(bool)</primary></indexterm>QTextEdit::setItalic(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;187&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::setBold(bool)</primary></indexterm>QTextEdit::setBold(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;188&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::setUnderline(bool)</primary></indexterm>QTextEdit::setUnderline(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;189&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::setFamily(QString const&)</primary></indexterm>QTextEdit::setFamily(QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;190&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::setPointSize(int)</primary></indexterm>QTextEdit::setPointSize(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;191&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::setColor(QColor const&)</primary></indexterm>QTextEdit::setColor(QColor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;192&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::setVerticalAlignment(QTextEdit::VerticalAlignment)</primary></indexterm>QTextEdit::setVerticalAlignment(QTextEdit::VerticalAlignment)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;193&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMultiLineEdit::setAlignment(int)</primary></indexterm>QMultiLineEdit::setAlignment(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;194&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::setParagType(QStyleSheetItem::DisplayMode, QStyleSheetItem::ListStyle)</primary></indexterm>QTextEdit::setParagType(QStyleSheetItem::DisplayMode, QStyleSheetItem::ListStyle)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;195&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMultiLineEdit::setCursorPosition(int, int)</primary></indexterm>NULL or QMultiLineEdit::setCursorPosition(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;196&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::setSelection(int, int, int, int, int)</primary></indexterm>QTextEdit::setSelection(int, int, int, int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;197&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::setSelectionAttributes(int, QColor const&, bool)</primary></indexterm>QTextEdit::setSelectionAttributes(int, QColor const&, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;198&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::setModified(bool)</primary></indexterm>QTextEdit::setModified(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;199&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::resetFormat()</primary></indexterm>QTextEdit::resetFormat()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;200&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::setUndoDepth(int)</primary></indexterm>QTextEdit::setUndoDepth(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;201&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::setFormat(QTextFormat*, int)</primary></indexterm>QTextEdit::setFormat(QTextFormat*, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;202&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::ensureCursorVisible()</primary></indexterm>QTextEdit::ensureCursorVisible()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;203&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::placeCursor(QPoint const&, QTextCursor*)</primary></indexterm>QTextEdit::placeCursor(QPoint const&, QTextCursor*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;204&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::moveCursor(QTextEdit::CursorAction, bool)</primary></indexterm>QTextEdit::moveCursor(QTextEdit::CursorAction, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;205&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::doKeyboardAction(QTextEdit::KeyboardAction)</primary></indexterm>QTextEdit::doKeyboardAction(QTextEdit::KeyboardAction)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;206&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::removeSelectedText(int)</primary></indexterm>QTextEdit::removeSelectedText(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;207&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::removeSelection(int)</primary></indexterm>QTextEdit::removeSelection(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;208&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::setCurrentFont(QFont const&)</primary></indexterm>NULL or QTextEdit::setCurrentFont(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;209&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::setOverwriteMode(bool)</primary></indexterm>NULL or QTextEdit::setOverwriteMode(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;210&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::scrollToBottom()</primary></indexterm>QTextEdit::scrollToBottom()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;211&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::insert(QString const&, bool, bool, bool)</primary></indexterm>QTextEdit::insert(QString const&, bool, bool, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;212&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMultiLineEdit::insertAt(QString const&, int, int)</primary></indexterm>NULL or QMultiLineEdit::insertAt(QString const&, int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;213&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::removeParagraph(int)</primary></indexterm>QTextEdit::removeParagraph(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;214&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::insertParagraph(QString const&, int)</primary></indexterm>QTextEdit::insertParagraph(QString const&, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;215&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::setParagraphBackgroundColor(int, QColor const&)</primary></indexterm>QTextEdit::setParagraphBackgroundColor(int, QColor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;216&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::clearParagraphBackground(int)</primary></indexterm>QTextEdit::clearParagraphBackground(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;217&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::setUndoRedoEnabled(bool)</primary></indexterm>QTextEdit::setUndoRedoEnabled(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;218&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::createPopupMenu(QPoint const&)</primary></indexterm>QTextEdit::createPopupMenu(QPoint const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;219&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::createPopupMenu()</primary></indexterm>QTextEdit::createPopupMenu()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;220&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::doChangeInterval()</primary></indexterm>QTextEdit::doChangeInterval()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;221&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::linksEnabled() const</primary></indexterm>NULL or QTextEdit::linksEnabled() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;222&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::emitHighlighted(QString const&)</primary></indexterm>NULL or QTextEdit::emitHighlighted(QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;223&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::emitLinkClicked(QString const&)</primary></indexterm>NULL or QTextEdit::emitLinkClicked(QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;224&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMultiLineEdit::insertLine(QString const&, int)</primary></indexterm>QMultiLineEdit::insertLine(QString const&, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;225&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMultiLineEdit::insertAt(QString const&, int, int, bool)</primary></indexterm>QMultiLineEdit::insertAt(QString const&, int, int, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;226&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMultiLineEdit::removeLine(int)</primary></indexterm>QMultiLineEdit::removeLine(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;227&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMultiLineEdit::setCursorPosition(int, int, bool)</primary></indexterm>QMultiLineEdit::setCursorPosition(int, int, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;228&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMultiLineEdit::setAutoUpdate(bool)</primary></indexterm>NULL or QMultiLineEdit::setAutoUpdate(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;229&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMultiLineEdit::insertAndMark(QString const&, bool)</primary></indexterm>QMultiLineEdit::insertAndMark(QString const&, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;230&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMultiLineEdit::newLine()</primary></indexterm>QMultiLineEdit::newLine()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;231&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMultiLineEdit::killLine()</primary></indexterm>QMultiLineEdit::killLine()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;232&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMultiLineEdit::pageUp(bool)</primary></indexterm>QMultiLineEdit::pageUp(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;233&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMultiLineEdit::pageDown(bool)</primary></indexterm>QMultiLineEdit::pageDown(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;234&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMultiLineEdit::cursorLeft(bool, bool)</primary></indexterm>QMultiLineEdit::cursorLeft(bool, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;235&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMultiLineEdit::cursorRight(bool, bool)</primary></indexterm>QMultiLineEdit::cursorRight(bool, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;236&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMultiLineEdit::cursorUp(bool)</primary></indexterm>QMultiLineEdit::cursorUp(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;237&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMultiLineEdit::cursorDown(bool)</primary></indexterm>QMultiLineEdit::cursorDown(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;238&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMultiLineEdit::backspace()</primary></indexterm>QMultiLineEdit::backspace()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;239&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMultiLineEdit::home(bool)</primary></indexterm>QMultiLineEdit::home(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;240&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMultiLineEdit::end(bool)</primary></indexterm>QMultiLineEdit::end(bool)</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--classdata-->
<TABLE id="cls-51111-1">
<TITLE>Secondary vtable for QMultiLineEdit</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>-80</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QMultiLineEdit</primary></indexterm>typeinfo for QMultiLineEdit</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QMultiLineEdit::~QMultiLineEdit()</primary></indexterm>non-virtual thunk to QMultiLineEdit::~QMultiLineEdit()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QMultiLineEdit::~QMultiLineEdit()</primary></indexterm>non-virtual thunk to QMultiLineEdit::~QMultiLineEdit()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::setResolution(int)</primary></indexterm>QPaintDevice::setResolution(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::resolution() const</primary></indexterm>QPaintDevice::resolution() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::handle() const</primary></indexterm>QPaintDevice::handle() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::x11RenderHandle() const</primary></indexterm>QPaintDevice::x11RenderHandle() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::setX11Data(QPaintDeviceX11Data const*)</primary></indexterm>QPaintDevice::setX11Data(QPaintDeviceX11Data const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::cmd(int, QPainter*, QPDevCmdParam*)</primary></indexterm>QPaintDevice::cmd(int, QPainter*, QPDevCmdParam*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::metric(int) const</primary></indexterm>non-virtual thunk to QWidget::metric(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::fontMet(QFont*, int, char const*, int) const</primary></indexterm>QPaintDevice::fontMet(QFont*, int, char const*, int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::fontInf(QFont*, int) const</primary></indexterm>QPaintDevice::fontInf(QFont*, int) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QMultiLineEdit  class
is described by <XREF LINKEND="rtti-59710">
</PARA>
<!--classdata-->
<TABLE ID="rtti-59710">
<TITLE>typeinfo for QMultiLineEdit</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QMultiLineEdit</primary></indexterm>typeinfo name for QMultiLineEdit</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QTextEdit</primary></indexterm>typeinfo for QTextEdit</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QListBox</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QListBox class
is described by <XREF LINKEND="cls-56655-0">
</PARA>
<!--classdata-->
<TABLE id="cls-56655-0">
<TITLE>Primary vtable for QListBox</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QListBox</primary></indexterm>typeinfo for QListBox</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListBox::metaObject() const</primary></indexterm>NULL or QListBox::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListBox::className() const</primary></indexterm>QListBox::className() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListBox::qt_cast(char const*)</primary></indexterm>QListBox::qt_cast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListBox::qt_invoke(int, QUObject*)</primary></indexterm>QListBox::qt_invoke(int, QUObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListBox::qt_emit(int, QUObject*)</primary></indexterm>QListBox::qt_emit(int, QUObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListBox::qt_property(int, int, QVariant*)</primary></indexterm>QListBox::qt_property(int, int, QVariant*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListBox::~QListBox()</primary></indexterm>QListBox::~QListBox()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListBox::~QListBox()</primary></indexterm>QListBox::~QListBox()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::event(QEvent*)</primary></indexterm>QWidget::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListBox::eventFilter(QObject*, QEvent*)</primary></indexterm>QListBox::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setName(char const*)</primary></indexterm>QWidget::setName(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::insertChild(QObject*)</primary></indexterm>QObject::insertChild(QObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::removeChild(QObject*)</primary></indexterm>QScrollView::removeChild(QObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::setProperty(char const*, QVariant const&)</primary></indexterm>QObject::setProperty(char const*, QVariant const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::property(char const*) const</primary></indexterm>QObject::property(char const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QCustomEvent*)</primary></indexterm>QObject::customEvent(QCustomEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::checkConnectArgs(char const*, QObject const*, char const*)</primary></indexterm>QObject::checkConnectArgs(char const*, QObject const*, char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::setEnabled(bool)</primary></indexterm>QScrollView::setEnabled(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMinimumSize(int, int)</primary></indexterm>QWidget::setMinimumSize(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMaximumSize(int, int)</primary></indexterm>QWidget::setMaximumSize(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setSizeIncrement(int, int)</primary></indexterm>QWidget::setSizeIncrement(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundMode(Qt::BackgroundMode)</primary></indexterm>QWidget::setBackgroundMode(Qt::BackgroundMode)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setEraseColor(QColor const&)</primary></indexterm>QWidget::setEraseColor(QColor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setErasePixmap(QPixmap const&)</primary></indexterm>QWidget::setErasePixmap(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setPalette(QPalette const&)</primary></indexterm>QWidget::setPalette(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setPaletteBackgroundColor(QColor const&)</primary></indexterm>QWidget::setPaletteBackgroundColor(QColor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setPaletteBackgroundPixmap(QPixmap const&)</primary></indexterm>QWidget::setPaletteBackgroundPixmap(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListBox::setFont(QFont const&)</primary></indexterm>QListBox::setFont(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setCursor(QCursor const&)</primary></indexterm>QWidget::setCursor(QCursor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;33&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::unsetCursor()</primary></indexterm>QWidget::unsetCursor()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;34&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMask(QBitmap const&)</primary></indexterm>QWidget::setMask(QBitmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;35&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMask(QRegion const&)</primary></indexterm>QWidget::setMask(QRegion const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;36&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundColor(QColor const&)</primary></indexterm>QWidget::setBackgroundColor(QColor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;37&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundPixmap(QPixmap const&)</primary></indexterm>QWidget::setBackgroundPixmap(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;38&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setCaption(QString const&)</primary></indexterm>QWidget::setCaption(QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;39&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setIcon(QPixmap const&)</primary></indexterm>QWidget::setIcon(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;40&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setIconText(QString const&)</primary></indexterm>QWidget::setIconText(QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;41&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMouseTracking(bool)</primary></indexterm>QWidget::setMouseTracking(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;42&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFocus()</primary></indexterm>QWidget::setFocus()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;43&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setActiveWindow()</primary></indexterm>QWidget::setActiveWindow()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;44&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFocusPolicy(QWidget::FocusPolicy)</primary></indexterm>QWidget::setFocusPolicy(QWidget::FocusPolicy)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;45&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFocusProxy(QWidget*)</primary></indexterm>QWidget::setFocusProxy(QWidget*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;46&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setUpdatesEnabled(bool)</primary></indexterm>QWidget::setUpdatesEnabled(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;47&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::show()</primary></indexterm>QScrollView::show()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;48&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::hide()</primary></indexterm>QWidget::hide()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;49&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showMinimized()</primary></indexterm>QWidget::showMinimized()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;50&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showMaximized()</primary></indexterm>QWidget::showMaximized()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;51&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showNormal()</primary></indexterm>QWidget::showNormal()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;52&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::polish()</primary></indexterm>QWidget::polish()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;53&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::move(int, int)</primary></indexterm>QWidget::move(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;54&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::resize(int, int)</primary></indexterm>QScrollView::resize(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;55&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setGeometry(int, int, int, int)</primary></indexterm>QWidget::setGeometry(int, int, int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;56&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setGeometry(QRect const&)</primary></indexterm>NULL or QWidget::setGeometry(QRect const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;57&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::close(bool)</primary></indexterm>QWidget::close(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;58&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListBox::sizeHint() const</primary></indexterm>QListBox::sizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;59&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListBox::minimumSizeHint() const</primary></indexterm>QListBox::minimumSizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;60&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::sizePolicy() const</primary></indexterm>QWidget::sizePolicy() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;61&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setSizePolicy(QSizePolicy)</primary></indexterm>QWidget::setSizePolicy(QSizePolicy)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;62&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::heightForWidth(int) const</primary></indexterm>QWidget::heightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;63&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::adjustSize()</primary></indexterm>QWidget::adjustSize()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;64&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::reparent(QWidget*, unsigned int, QPoint const&, bool)</primary></indexterm>QWidget::reparent(QWidget*, unsigned int, QPoint const&, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;65&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setAcceptDrops(bool)</primary></indexterm>QWidget::setAcceptDrops(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;66&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setAutoMask(bool)</primary></indexterm>QWidget::setAutoMask(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;67&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundOrigin(QWidget::BackgroundOrigin)</primary></indexterm>QWidget::setBackgroundOrigin(QWidget::BackgroundOrigin)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;68&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::customWhatsThis() const</primary></indexterm>QWidget::customWhatsThis() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;69&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListBox::mousePressEvent(QMouseEvent*)</primary></indexterm>QListBox::mousePressEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;70&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListBox::mouseReleaseEvent(QMouseEvent*)</primary></indexterm>QListBox::mouseReleaseEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;71&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListBox::mouseDoubleClickEvent(QMouseEvent*)</primary></indexterm>QListBox::mouseDoubleClickEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;72&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListBox::mouseMoveEvent(QMouseEvent*)</primary></indexterm>QListBox::mouseMoveEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;73&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::wheelEvent(QWheelEvent*)</primary></indexterm>QScrollView::wheelEvent(QWheelEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;74&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListBox::keyPressEvent(QKeyEvent*)</primary></indexterm>QListBox::keyPressEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;75&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyReleaseEvent(QKeyEvent*)</primary></indexterm>QWidget::keyReleaseEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;76&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListBox::focusInEvent(QFocusEvent*)</primary></indexterm>QListBox::focusInEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;77&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListBox::focusOutEvent(QFocusEvent*)</primary></indexterm>QListBox::focusOutEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;78&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enterEvent(QEvent*)</primary></indexterm>QWidget::enterEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;79&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::leaveEvent(QEvent*)</primary></indexterm>QWidget::leaveEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;80&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::paintEvent(QPaintEvent*)</primary></indexterm>QFrame::paintEvent(QPaintEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;81&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::moveEvent(QMoveEvent*)</primary></indexterm>QWidget::moveEvent(QMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;82&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListBox::resizeEvent(QResizeEvent*)</primary></indexterm>QListBox::resizeEvent(QResizeEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;83&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::closeEvent(QCloseEvent*)</primary></indexterm>QWidget::closeEvent(QCloseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;84&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::contextMenuEvent(QContextMenuEvent*)</primary></indexterm>QScrollView::contextMenuEvent(QContextMenuEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;85&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::imStartEvent(QIMEvent*)</primary></indexterm>QWidget::imStartEvent(QIMEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;86&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::imComposeEvent(QIMEvent*)</primary></indexterm>QWidget::imComposeEvent(QIMEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;87&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::imEndEvent(QIMEvent*)</primary></indexterm>QWidget::imEndEvent(QIMEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;88&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::tabletEvent(QTabletEvent*)</primary></indexterm>QWidget::tabletEvent(QTabletEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;89&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragEnterEvent(QDragEnterEvent*)</primary></indexterm>QWidget::dragEnterEvent(QDragEnterEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;90&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragMoveEvent(QDragMoveEvent*)</primary></indexterm>QWidget::dragMoveEvent(QDragMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;91&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragLeaveEvent(QDragLeaveEvent*)</primary></indexterm>QWidget::dragLeaveEvent(QDragLeaveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;92&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dropEvent(QDropEvent*)</primary></indexterm>QWidget::dropEvent(QDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;93&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListBox::showEvent(QShowEvent*)</primary></indexterm>QListBox::showEvent(QShowEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;94&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::hideEvent(QHideEvent*)</primary></indexterm>QWidget::hideEvent(QHideEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;95&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::x11Event(_XEvent*)</primary></indexterm>QWidget::x11Event(_XEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;96&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::updateMask()</primary></indexterm>QWidget::updateMask()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;97&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::styleChange(QStyle&)</primary></indexterm>QScrollView::styleChange(QStyle&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;98&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enabledChange(bool)</primary></indexterm>QWidget::enabledChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;99&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paletteChange(QPalette const&)</primary></indexterm>QWidget::paletteChange(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;100&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::fontChange(QFont const&)</primary></indexterm>QScrollView::fontChange(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;101&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListBox::windowActivationChange(bool)</primary></indexterm>QListBox::windowActivationChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;102&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::metric(int) const</primary></indexterm>QWidget::metric(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;103&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::create(unsigned long, bool, bool)</primary></indexterm>QWidget::create(unsigned long, bool, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;104&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::destroy(bool, bool)</primary></indexterm>QWidget::destroy(bool, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;105&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setWState(unsigned int)</primary></indexterm>NULL or QWidget::setWState(unsigned int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;106&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setWFlags(unsigned int)</primary></indexterm>NULL or QWidget::setWFlags(unsigned int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;107&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::focusNextPrevChild(bool)</primary></indexterm>QScrollView::focusNextPrevChild(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;108&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setKeyCompression(bool)</primary></indexterm>QWidget::setKeyCompression(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;109&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMicroFocusHint(int, int, int, int, bool, QFont*)</primary></indexterm>QWidget::setMicroFocusHint(int, int, int, int, bool, QFont*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;110&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::setFrameStyle(int)</primary></indexterm>QFrame::setFrameStyle(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;111&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::setLineWidth(int)</primary></indexterm>QFrame::setLineWidth(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;112&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::setMargin(int)</primary></indexterm>QFrame::setMargin(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;113&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::setMidLineWidth(int)</primary></indexterm>QFrame::setMidLineWidth(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;114&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::setFrameRect(QRect const&)</primary></indexterm>QFrame::setFrameRect(QRect const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;115&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::drawFrame(QPainter*)</primary></indexterm>QFrame::drawFrame(QPainter*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;116&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::drawContents(QPainter*)</primary></indexterm>QScrollView::drawContents(QPainter*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;117&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::frameChanged()</primary></indexterm>QScrollView::frameChanged()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;118&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::setResizePolicy(QScrollView::ResizePolicy)</primary></indexterm>QScrollView::setResizePolicy(QScrollView::ResizePolicy)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;119&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::addChild(QWidget*, int, int)</primary></indexterm>QScrollView::addChild(QWidget*, int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;120&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::moveChild(QWidget*, int, int)</primary></indexterm>QScrollView::moveChild(QWidget*, int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;121&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::setVScrollBarMode(QScrollView::ScrollBarMode)</primary></indexterm>QScrollView::setVScrollBarMode(QScrollView::ScrollBarMode)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;122&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::setHScrollBarMode(QScrollView::ScrollBarMode)</primary></indexterm>QScrollView::setHScrollBarMode(QScrollView::ScrollBarMode)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;123&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::setCornerWidget(QWidget*)</primary></indexterm>QScrollView::setCornerWidget(QWidget*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;124&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::setDragAutoScroll(bool)</primary></indexterm>QScrollView::setDragAutoScroll(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;125&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::resizeContents(int, int)</primary></indexterm>QScrollView::resizeContents(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;126&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::setContentsPos(int, int)</primary></indexterm>QScrollView::setContentsPos(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;127&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::drawContents(QPainter*, int, int, int, int)</primary></indexterm>QScrollView::drawContents(QPainter*, int, int, int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;128&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::drawContentsOffset(QPainter*, int, int, int, int, int, int)</primary></indexterm>QScrollView::drawContentsOffset(QPainter*, int, int, int, int, int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;129&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::contentsMousePressEvent(QMouseEvent*)</primary></indexterm>QScrollView::contentsMousePressEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;130&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::contentsMouseReleaseEvent(QMouseEvent*)</primary></indexterm>QScrollView::contentsMouseReleaseEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;131&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::contentsMouseDoubleClickEvent(QMouseEvent*)</primary></indexterm>QScrollView::contentsMouseDoubleClickEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;132&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::contentsMouseMoveEvent(QMouseEvent*)</primary></indexterm>QScrollView::contentsMouseMoveEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;133&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::contentsDragEnterEvent(QDragEnterEvent*)</primary></indexterm>QScrollView::contentsDragEnterEvent(QDragEnterEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;134&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::contentsDragMoveEvent(QDragMoveEvent*)</primary></indexterm>QScrollView::contentsDragMoveEvent(QDragMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;135&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::contentsDragLeaveEvent(QDragLeaveEvent*)</primary></indexterm>QScrollView::contentsDragLeaveEvent(QDragLeaveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;136&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::contentsDropEvent(QDropEvent*)</primary></indexterm>QScrollView::contentsDropEvent(QDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;137&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::contentsWheelEvent(QWheelEvent*)</primary></indexterm>QScrollView::contentsWheelEvent(QWheelEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;138&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListBox::contentsContextMenuEvent(QContextMenuEvent*)</primary></indexterm>QListBox::contentsContextMenuEvent(QContextMenuEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;139&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListBox::viewportPaintEvent(QPaintEvent*)</primary></indexterm>QListBox::viewportPaintEvent(QPaintEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;140&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::viewportResizeEvent(QResizeEvent*)</primary></indexterm>QScrollView::viewportResizeEvent(QResizeEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;141&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::viewportMousePressEvent(QMouseEvent*)</primary></indexterm>QScrollView::viewportMousePressEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;142&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::viewportMouseReleaseEvent(QMouseEvent*)</primary></indexterm>QScrollView::viewportMouseReleaseEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;143&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::viewportMouseDoubleClickEvent(QMouseEvent*)</primary></indexterm>QScrollView::viewportMouseDoubleClickEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;144&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::viewportMouseMoveEvent(QMouseEvent*)</primary></indexterm>QScrollView::viewportMouseMoveEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;145&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::viewportDragEnterEvent(QDragEnterEvent*)</primary></indexterm>QScrollView::viewportDragEnterEvent(QDragEnterEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;146&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::viewportDragMoveEvent(QDragMoveEvent*)</primary></indexterm>QScrollView::viewportDragMoveEvent(QDragMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;147&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::viewportDragLeaveEvent(QDragLeaveEvent*)</primary></indexterm>QScrollView::viewportDragLeaveEvent(QDragLeaveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;148&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::viewportDropEvent(QDropEvent*)</primary></indexterm>QScrollView::viewportDropEvent(QDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;149&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::viewportWheelEvent(QWheelEvent*)</primary></indexterm>QScrollView::viewportWheelEvent(QWheelEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;150&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::viewportContextMenuEvent(QContextMenuEvent*)</primary></indexterm>QScrollView::viewportContextMenuEvent(QContextMenuEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;151&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::setMargins(int, int, int, int)</primary></indexterm>QScrollView::setMargins(int, int, int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;152&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::setHBarGeometry(QScrollBar&, int, int, int, int)</primary></indexterm>QScrollView::setHBarGeometry(QScrollBar&, int, int, int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;153&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::setVBarGeometry(QScrollBar&, int, int, int, int)</primary></indexterm>QScrollView::setVBarGeometry(QScrollBar&, int, int, int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;154&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListBox::setCurrentItem(int)</primary></indexterm>QListBox::setCurrentItem(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;155&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListBox::setCurrentItem(QListBoxItem*)</primary></indexterm>QListBox::setCurrentItem(QListBoxItem*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;156&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListBox::setTopItem(int)</primary></indexterm>QListBox::setTopItem(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;157&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListBox::setBottomItem(int)</primary></indexterm>QListBox::setBottomItem(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;158&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListBox::setSelectionMode(QListBox::SelectionMode)</primary></indexterm>QListBox::setSelectionMode(QListBox::SelectionMode)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;159&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListBox::setSelected(QListBoxItem*, bool)</primary></indexterm>QListBox::setSelected(QListBoxItem*, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;160&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListBox::setColumnMode(QListBox::LayoutMode)</primary></indexterm>QListBox::setColumnMode(QListBox::LayoutMode)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;161&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListBox::setColumnMode(int)</primary></indexterm>QListBox::setColumnMode(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;162&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListBox::setRowMode(QListBox::LayoutMode)</primary></indexterm>QListBox::setRowMode(QListBox::LayoutMode)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;163&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListBox::setRowMode(int)</primary></indexterm>QListBox::setRowMode(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;164&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListBox::setVariableWidth(bool)</primary></indexterm>QListBox::setVariableWidth(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;165&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListBox::setVariableHeight(bool)</primary></indexterm>QListBox::setVariableHeight(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;166&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListBox::ensureCurrentVisible()</primary></indexterm>QListBox::ensureCurrentVisible()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;167&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListBox::clearSelection()</primary></indexterm>QListBox::clearSelection()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;168&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListBox::selectAll(bool)</primary></indexterm>QListBox::selectAll(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;169&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListBox::invertSelection()</primary></indexterm>QListBox::invertSelection()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;170&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListBox::paintCell(QPainter*, int, int)</primary></indexterm>QListBox::paintCell(QPainter*, int, int)</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--classdata-->
<TABLE id="cls-56655-1">
<TITLE>Secondary vtable for QListBox</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>-80</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QListBox</primary></indexterm>typeinfo for QListBox</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QListBox::~QListBox()</primary></indexterm>non-virtual thunk to QListBox::~QListBox()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QListBox::~QListBox()</primary></indexterm>non-virtual thunk to QListBox::~QListBox()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::setResolution(int)</primary></indexterm>QPaintDevice::setResolution(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::resolution() const</primary></indexterm>QPaintDevice::resolution() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::handle() const</primary></indexterm>QPaintDevice::handle() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::x11RenderHandle() const</primary></indexterm>QPaintDevice::x11RenderHandle() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::setX11Data(QPaintDeviceX11Data const*)</primary></indexterm>QPaintDevice::setX11Data(QPaintDeviceX11Data const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::cmd(int, QPainter*, QPDevCmdParam*)</primary></indexterm>QPaintDevice::cmd(int, QPainter*, QPDevCmdParam*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::metric(int) const</primary></indexterm>non-virtual thunk to QWidget::metric(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::fontMet(QFont*, int, char const*, int) const</primary></indexterm>QPaintDevice::fontMet(QFont*, int, char const*, int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::fontInf(QFont*, int) const</primary></indexterm>QPaintDevice::fontInf(QFont*, int) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QListBox  class
is described by <XREF LINKEND="rtti-50420">
</PARA>
<!--classdata-->
<TABLE ID="rtti-50420">
<TITLE>typeinfo for QListBox</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QListBox</primary></indexterm>typeinfo name for QListBox</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QScrollView</primary></indexterm>typeinfo for QScrollView</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QComboBox</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QComboBox class
is described by <XREF LINKEND="cls-52572-0">
</PARA>
<!--classdata-->
<TABLE id="cls-52572-0">
<TITLE>Primary vtable for QComboBox</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QComboBox</primary></indexterm>typeinfo for QComboBox</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QComboBox::metaObject() const</primary></indexterm>NULL or QComboBox::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QComboBox::className() const</primary></indexterm>QComboBox::className() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QComboBox::qt_cast(char const*)</primary></indexterm>QComboBox::qt_cast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QComboBox::qt_invoke(int, QUObject*)</primary></indexterm>QComboBox::qt_invoke(int, QUObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QComboBox::qt_emit(int, QUObject*)</primary></indexterm>QComboBox::qt_emit(int, QUObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QComboBox::qt_property(int, int, QVariant*)</primary></indexterm>QComboBox::qt_property(int, int, QVariant*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QComboBox::~QComboBox()</primary></indexterm>QComboBox::~QComboBox()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QComboBox::~QComboBox()</primary></indexterm>QComboBox::~QComboBox()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::event(QEvent*)</primary></indexterm>QWidget::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QComboBox::eventFilter(QObject*, QEvent*)</primary></indexterm>QComboBox::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setName(char const*)</primary></indexterm>QWidget::setName(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::insertChild(QObject*)</primary></indexterm>QObject::insertChild(QObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::removeChild(QObject*)</primary></indexterm>QObject::removeChild(QObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::setProperty(char const*, QVariant const&)</primary></indexterm>QObject::setProperty(char const*, QVariant const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::property(char const*) const</primary></indexterm>QObject::property(char const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QCustomEvent*)</primary></indexterm>QObject::customEvent(QCustomEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::checkConnectArgs(char const*, QObject const*, char const*)</primary></indexterm>QObject::checkConnectArgs(char const*, QObject const*, char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QComboBox::setEnabled(bool)</primary></indexterm>QComboBox::setEnabled(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMinimumSize(int, int)</primary></indexterm>QWidget::setMinimumSize(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMaximumSize(int, int)</primary></indexterm>QWidget::setMaximumSize(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setSizeIncrement(int, int)</primary></indexterm>QWidget::setSizeIncrement(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundMode(Qt::BackgroundMode)</primary></indexterm>QWidget::setBackgroundMode(Qt::BackgroundMode)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setEraseColor(QColor const&)</primary></indexterm>QWidget::setEraseColor(QColor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setErasePixmap(QPixmap const&)</primary></indexterm>QWidget::setErasePixmap(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QComboBox::setPalette(QPalette const&)</primary></indexterm>QComboBox::setPalette(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setPaletteBackgroundColor(QColor const&)</primary></indexterm>QWidget::setPaletteBackgroundColor(QColor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setPaletteBackgroundPixmap(QPixmap const&)</primary></indexterm>QWidget::setPaletteBackgroundPixmap(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QComboBox::setFont(QFont const&)</primary></indexterm>QComboBox::setFont(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setCursor(QCursor const&)</primary></indexterm>QWidget::setCursor(QCursor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;33&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::unsetCursor()</primary></indexterm>QWidget::unsetCursor()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;34&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMask(QBitmap const&)</primary></indexterm>QWidget::setMask(QBitmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;35&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMask(QRegion const&)</primary></indexterm>QWidget::setMask(QRegion const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;36&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundColor(QColor const&)</primary></indexterm>QWidget::setBackgroundColor(QColor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;37&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundPixmap(QPixmap const&)</primary></indexterm>QWidget::setBackgroundPixmap(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;38&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setCaption(QString const&)</primary></indexterm>QWidget::setCaption(QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;39&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setIcon(QPixmap const&)</primary></indexterm>QWidget::setIcon(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;40&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setIconText(QString const&)</primary></indexterm>QWidget::setIconText(QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;41&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMouseTracking(bool)</primary></indexterm>QWidget::setMouseTracking(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;42&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFocus()</primary></indexterm>QWidget::setFocus()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;43&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setActiveWindow()</primary></indexterm>QWidget::setActiveWindow()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;44&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFocusPolicy(QWidget::FocusPolicy)</primary></indexterm>QWidget::setFocusPolicy(QWidget::FocusPolicy)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;45&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFocusProxy(QWidget*)</primary></indexterm>QWidget::setFocusProxy(QWidget*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;46&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setUpdatesEnabled(bool)</primary></indexterm>QWidget::setUpdatesEnabled(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;47&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::show()</primary></indexterm>QWidget::show()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;48&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QComboBox::hide()</primary></indexterm>QComboBox::hide()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;49&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showMinimized()</primary></indexterm>QWidget::showMinimized()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;50&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showMaximized()</primary></indexterm>QWidget::showMaximized()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;51&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showNormal()</primary></indexterm>QWidget::showNormal()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;52&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::polish()</primary></indexterm>QWidget::polish()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;53&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::move(int, int)</primary></indexterm>QWidget::move(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;54&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::resize(int, int)</primary></indexterm>QWidget::resize(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;55&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setGeometry(int, int, int, int)</primary></indexterm>QWidget::setGeometry(int, int, int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;56&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setGeometry(QRect const&)</primary></indexterm>NULL or QWidget::setGeometry(QRect const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;57&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::close(bool)</primary></indexterm>QWidget::close(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;58&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QComboBox::sizeHint() const</primary></indexterm>QComboBox::sizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;59&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::minimumSizeHint() const</primary></indexterm>QWidget::minimumSizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;60&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::sizePolicy() const</primary></indexterm>QWidget::sizePolicy() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;61&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setSizePolicy(QSizePolicy)</primary></indexterm>QWidget::setSizePolicy(QSizePolicy)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;62&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::heightForWidth(int) const</primary></indexterm>QWidget::heightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;63&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::adjustSize()</primary></indexterm>QWidget::adjustSize()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;64&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::reparent(QWidget*, unsigned int, QPoint const&, bool)</primary></indexterm>QWidget::reparent(QWidget*, unsigned int, QPoint const&, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;65&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setAcceptDrops(bool)</primary></indexterm>QWidget::setAcceptDrops(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;66&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setAutoMask(bool)</primary></indexterm>QWidget::setAutoMask(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;67&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundOrigin(QWidget::BackgroundOrigin)</primary></indexterm>QWidget::setBackgroundOrigin(QWidget::BackgroundOrigin)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;68&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::customWhatsThis() const</primary></indexterm>QWidget::customWhatsThis() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;69&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QComboBox::mousePressEvent(QMouseEvent*)</primary></indexterm>QComboBox::mousePressEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;70&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QComboBox::mouseReleaseEvent(QMouseEvent*)</primary></indexterm>QComboBox::mouseReleaseEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;71&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QComboBox::mouseDoubleClickEvent(QMouseEvent*)</primary></indexterm>QComboBox::mouseDoubleClickEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;72&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QComboBox::mouseMoveEvent(QMouseEvent*)</primary></indexterm>QComboBox::mouseMoveEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;73&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QComboBox::wheelEvent(QWheelEvent*)</primary></indexterm>QComboBox::wheelEvent(QWheelEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;74&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QComboBox::keyPressEvent(QKeyEvent*)</primary></indexterm>QComboBox::keyPressEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;75&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyReleaseEvent(QKeyEvent*)</primary></indexterm>QWidget::keyReleaseEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;76&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QComboBox::focusInEvent(QFocusEvent*)</primary></indexterm>QComboBox::focusInEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;77&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QComboBox::focusOutEvent(QFocusEvent*)</primary></indexterm>QComboBox::focusOutEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;78&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enterEvent(QEvent*)</primary></indexterm>QWidget::enterEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;79&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::leaveEvent(QEvent*)</primary></indexterm>QWidget::leaveEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;80&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QComboBox::paintEvent(QPaintEvent*)</primary></indexterm>QComboBox::paintEvent(QPaintEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;81&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::moveEvent(QMoveEvent*)</primary></indexterm>QWidget::moveEvent(QMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;82&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QComboBox::resizeEvent(QResizeEvent*)</primary></indexterm>QComboBox::resizeEvent(QResizeEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;83&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::closeEvent(QCloseEvent*)</primary></indexterm>QWidget::closeEvent(QCloseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;84&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::contextMenuEvent(QContextMenuEvent*)</primary></indexterm>QWidget::contextMenuEvent(QContextMenuEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;85&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::imStartEvent(QIMEvent*)</primary></indexterm>QWidget::imStartEvent(QIMEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;86&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::imComposeEvent(QIMEvent*)</primary></indexterm>QWidget::imComposeEvent(QIMEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;87&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::imEndEvent(QIMEvent*)</primary></indexterm>QWidget::imEndEvent(QIMEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;88&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::tabletEvent(QTabletEvent*)</primary></indexterm>QWidget::tabletEvent(QTabletEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;89&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragEnterEvent(QDragEnterEvent*)</primary></indexterm>QWidget::dragEnterEvent(QDragEnterEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;90&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragMoveEvent(QDragMoveEvent*)</primary></indexterm>QWidget::dragMoveEvent(QDragMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;91&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragLeaveEvent(QDragLeaveEvent*)</primary></indexterm>QWidget::dragLeaveEvent(QDragLeaveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;92&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dropEvent(QDropEvent*)</primary></indexterm>QWidget::dropEvent(QDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;93&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showEvent(QShowEvent*)</primary></indexterm>QWidget::showEvent(QShowEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;94&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::hideEvent(QHideEvent*)</primary></indexterm>QWidget::hideEvent(QHideEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;95&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::x11Event(_XEvent*)</primary></indexterm>QWidget::x11Event(_XEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;96&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QComboBox::updateMask()</primary></indexterm>QComboBox::updateMask()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;97&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QComboBox::styleChange(QStyle&)</primary></indexterm>QComboBox::styleChange(QStyle&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;98&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enabledChange(bool)</primary></indexterm>QWidget::enabledChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;99&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paletteChange(QPalette const&)</primary></indexterm>QWidget::paletteChange(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;100&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::fontChange(QFont const&)</primary></indexterm>QWidget::fontChange(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;101&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::windowActivationChange(bool)</primary></indexterm>QWidget::windowActivationChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;102&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::metric(int) const</primary></indexterm>QWidget::metric(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;103&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::create(unsigned long, bool, bool)</primary></indexterm>QWidget::create(unsigned long, bool, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;104&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::destroy(bool, bool)</primary></indexterm>QWidget::destroy(bool, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;105&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setWState(unsigned int)</primary></indexterm>NULL or QWidget::setWState(unsigned int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;106&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setWFlags(unsigned int)</primary></indexterm>NULL or QWidget::setWFlags(unsigned int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;107&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusNextPrevChild(bool)</primary></indexterm>QWidget::focusNextPrevChild(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;108&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setKeyCompression(bool)</primary></indexterm>QWidget::setKeyCompression(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;109&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMicroFocusHint(int, int, int, int, bool, QFont*)</primary></indexterm>QWidget::setMicroFocusHint(int, int, int, int, bool, QFont*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;110&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QComboBox::setCurrentItem(int)</primary></indexterm>QComboBox::setCurrentItem(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;111&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QComboBox::setCurrentText(QString const&)</primary></indexterm>QComboBox::setCurrentText(QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;112&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QComboBox::setAutoResize(bool)</primary></indexterm>QComboBox::setAutoResize(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;113&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QComboBox::setSizeLimit(int)</primary></indexterm>QComboBox::setSizeLimit(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;114&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QComboBox::setMaxCount(int)</primary></indexterm>QComboBox::setMaxCount(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;115&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QComboBox::setInsertionPolicy(QComboBox::Policy)</primary></indexterm>QComboBox::setInsertionPolicy(QComboBox::Policy)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;116&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QComboBox::setValidator(QValidator const*)</primary></indexterm>QComboBox::setValidator(QValidator const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;117&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QComboBox::setListBox(QListBox*)</primary></indexterm>QComboBox::setListBox(QListBox*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;118&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QComboBox::setLineEdit(QLineEdit*)</primary></indexterm>QComboBox::setLineEdit(QLineEdit*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;119&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QComboBox::setAutoCompletion(bool)</primary></indexterm>QComboBox::setAutoCompletion(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;120&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QComboBox::popup()</primary></indexterm>QComboBox::popup()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;121&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QComboBox::setEditText(QString const&)</primary></indexterm>QComboBox::setEditText(QString const&)</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--classdata-->
<TABLE id="cls-52572-1">
<TITLE>Secondary vtable for QComboBox</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>-80</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QComboBox</primary></indexterm>typeinfo for QComboBox</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QComboBox::~QComboBox()</primary></indexterm>non-virtual thunk to QComboBox::~QComboBox()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QComboBox::~QComboBox()</primary></indexterm>non-virtual thunk to QComboBox::~QComboBox()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::setResolution(int)</primary></indexterm>QPaintDevice::setResolution(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::resolution() const</primary></indexterm>QPaintDevice::resolution() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::handle() const</primary></indexterm>QPaintDevice::handle() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::x11RenderHandle() const</primary></indexterm>QPaintDevice::x11RenderHandle() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::setX11Data(QPaintDeviceX11Data const*)</primary></indexterm>QPaintDevice::setX11Data(QPaintDeviceX11Data const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::cmd(int, QPainter*, QPDevCmdParam*)</primary></indexterm>QPaintDevice::cmd(int, QPainter*, QPDevCmdParam*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::metric(int) const</primary></indexterm>non-virtual thunk to QWidget::metric(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::fontMet(QFont*, int, char const*, int) const</primary></indexterm>QPaintDevice::fontMet(QFont*, int, char const*, int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::fontInf(QFont*, int) const</primary></indexterm>QPaintDevice::fontInf(QFont*, int) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QComboBox  class
is described by <XREF LINKEND="rtti-50899">
</PARA>
<!--classdata-->
<TABLE ID="rtti-50899">
<TITLE>typeinfo for QComboBox</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QComboBox</primary></indexterm>typeinfo name for QComboBox</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QWidget</primary></indexterm>typeinfo for QWidget</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QRadioButton</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QRadioButton class
is described by <XREF LINKEND="cls-57458-0">
</PARA>
<!--classdata-->
<TABLE id="cls-57458-0">
<TITLE>Primary vtable for QRadioButton</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QRadioButton</primary></indexterm>typeinfo for QRadioButton</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QRadioButton::metaObject() const</primary></indexterm>NULL or QRadioButton::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QRadioButton::className() const</primary></indexterm>QRadioButton::className() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QRadioButton::qt_cast(char const*)</primary></indexterm>QRadioButton::qt_cast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QRadioButton::qt_invoke(int, QUObject*)</primary></indexterm>QRadioButton::qt_invoke(int, QUObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QRadioButton::qt_emit(int, QUObject*)</primary></indexterm>QRadioButton::qt_emit(int, QUObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QRadioButton::qt_property(int, int, QVariant*)</primary></indexterm>QRadioButton::qt_property(int, int, QVariant*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QRadioButton::~QRadioButton()</primary></indexterm>NULL or QRadioButton::~QRadioButton()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QRadioButton::~QRadioButton()</primary></indexterm>NULL or QRadioButton::~QRadioButton()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::event(QEvent*)</primary></indexterm>QWidget::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::eventFilter(QObject*, QEvent*)</primary></indexterm>QObject::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setName(char const*)</primary></indexterm>QWidget::setName(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::insertChild(QObject*)</primary></indexterm>QObject::insertChild(QObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::removeChild(QObject*)</primary></indexterm>QObject::removeChild(QObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::setProperty(char const*, QVariant const&)</primary></indexterm>QObject::setProperty(char const*, QVariant const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::property(char const*) const</primary></indexterm>QObject::property(char const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QCustomEvent*)</primary></indexterm>QObject::customEvent(QCustomEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::checkConnectArgs(char const*, QObject const*, char const*)</primary></indexterm>QObject::checkConnectArgs(char const*, QObject const*, char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setEnabled(bool)</primary></indexterm>QWidget::setEnabled(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMinimumSize(int, int)</primary></indexterm>QWidget::setMinimumSize(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMaximumSize(int, int)</primary></indexterm>QWidget::setMaximumSize(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setSizeIncrement(int, int)</primary></indexterm>QWidget::setSizeIncrement(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundMode(Qt::BackgroundMode)</primary></indexterm>QWidget::setBackgroundMode(Qt::BackgroundMode)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setEraseColor(QColor const&)</primary></indexterm>QWidget::setEraseColor(QColor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setErasePixmap(QPixmap const&)</primary></indexterm>QWidget::setErasePixmap(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setPalette(QPalette const&)</primary></indexterm>QWidget::setPalette(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setPaletteBackgroundColor(QColor const&)</primary></indexterm>QWidget::setPaletteBackgroundColor(QColor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setPaletteBackgroundPixmap(QPixmap const&)</primary></indexterm>QWidget::setPaletteBackgroundPixmap(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFont(QFont const&)</primary></indexterm>QWidget::setFont(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setCursor(QCursor const&)</primary></indexterm>QWidget::setCursor(QCursor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;33&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::unsetCursor()</primary></indexterm>QWidget::unsetCursor()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;34&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMask(QBitmap const&)</primary></indexterm>QWidget::setMask(QBitmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;35&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMask(QRegion const&)</primary></indexterm>QWidget::setMask(QRegion const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;36&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundColor(QColor const&)</primary></indexterm>QWidget::setBackgroundColor(QColor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;37&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundPixmap(QPixmap const&)</primary></indexterm>QWidget::setBackgroundPixmap(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;38&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setCaption(QString const&)</primary></indexterm>QWidget::setCaption(QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;39&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setIcon(QPixmap const&)</primary></indexterm>QWidget::setIcon(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;40&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setIconText(QString const&)</primary></indexterm>QWidget::setIconText(QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;41&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMouseTracking(bool)</primary></indexterm>QWidget::setMouseTracking(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;42&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFocus()</primary></indexterm>QWidget::setFocus()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;43&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setActiveWindow()</primary></indexterm>QWidget::setActiveWindow()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;44&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFocusPolicy(QWidget::FocusPolicy)</primary></indexterm>QWidget::setFocusPolicy(QWidget::FocusPolicy)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;45&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFocusProxy(QWidget*)</primary></indexterm>QWidget::setFocusProxy(QWidget*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;46&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setUpdatesEnabled(bool)</primary></indexterm>QWidget::setUpdatesEnabled(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;47&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::show()</primary></indexterm>QWidget::show()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;48&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::hide()</primary></indexterm>QWidget::hide()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;49&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showMinimized()</primary></indexterm>QWidget::showMinimized()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;50&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showMaximized()</primary></indexterm>QWidget::showMaximized()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;51&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showNormal()</primary></indexterm>QWidget::showNormal()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;52&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::polish()</primary></indexterm>QWidget::polish()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;53&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::move(int, int)</primary></indexterm>QWidget::move(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;54&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::resize(int, int)</primary></indexterm>QWidget::resize(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;55&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setGeometry(int, int, int, int)</primary></indexterm>QWidget::setGeometry(int, int, int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;56&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setGeometry(QRect const&)</primary></indexterm>NULL or QWidget::setGeometry(QRect const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;57&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::close(bool)</primary></indexterm>QWidget::close(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;58&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QRadioButton::sizeHint() const</primary></indexterm>QRadioButton::sizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;59&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::minimumSizeHint() const</primary></indexterm>QWidget::minimumSizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;60&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::sizePolicy() const</primary></indexterm>QWidget::sizePolicy() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;61&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setSizePolicy(QSizePolicy)</primary></indexterm>QWidget::setSizePolicy(QSizePolicy)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;62&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::heightForWidth(int) const</primary></indexterm>QWidget::heightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;63&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::adjustSize()</primary></indexterm>QWidget::adjustSize()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;64&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::reparent(QWidget*, unsigned int, QPoint const&, bool)</primary></indexterm>QWidget::reparent(QWidget*, unsigned int, QPoint const&, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;65&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setAcceptDrops(bool)</primary></indexterm>QWidget::setAcceptDrops(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;66&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setAutoMask(bool)</primary></indexterm>QWidget::setAutoMask(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;67&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundOrigin(QWidget::BackgroundOrigin)</primary></indexterm>QWidget::setBackgroundOrigin(QWidget::BackgroundOrigin)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;68&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::customWhatsThis() const</primary></indexterm>QWidget::customWhatsThis() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;69&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QButton::mousePressEvent(QMouseEvent*)</primary></indexterm>QButton::mousePressEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;70&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QButton::mouseReleaseEvent(QMouseEvent*)</primary></indexterm>QButton::mouseReleaseEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;71&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseDoubleClickEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseDoubleClickEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;72&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QButton::mouseMoveEvent(QMouseEvent*)</primary></indexterm>QButton::mouseMoveEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;73&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::wheelEvent(QWheelEvent*)</primary></indexterm>QWidget::wheelEvent(QWheelEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;74&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QButton::keyPressEvent(QKeyEvent*)</primary></indexterm>QButton::keyPressEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;75&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QButton::keyReleaseEvent(QKeyEvent*)</primary></indexterm>QButton::keyReleaseEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;76&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QButton::focusInEvent(QFocusEvent*)</primary></indexterm>QButton::focusInEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;77&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QButton::focusOutEvent(QFocusEvent*)</primary></indexterm>QButton::focusOutEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;78&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enterEvent(QEvent*)</primary></indexterm>QWidget::enterEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;79&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::leaveEvent(QEvent*)</primary></indexterm>QWidget::leaveEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;80&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QButton::paintEvent(QPaintEvent*)</primary></indexterm>QButton::paintEvent(QPaintEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;81&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::moveEvent(QMoveEvent*)</primary></indexterm>QWidget::moveEvent(QMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;82&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QRadioButton::resizeEvent(QResizeEvent*)</primary></indexterm>QRadioButton::resizeEvent(QResizeEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;83&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::closeEvent(QCloseEvent*)</primary></indexterm>QWidget::closeEvent(QCloseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;84&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::contextMenuEvent(QContextMenuEvent*)</primary></indexterm>QWidget::contextMenuEvent(QContextMenuEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;85&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::imStartEvent(QIMEvent*)</primary></indexterm>QWidget::imStartEvent(QIMEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;86&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::imComposeEvent(QIMEvent*)</primary></indexterm>QWidget::imComposeEvent(QIMEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;87&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::imEndEvent(QIMEvent*)</primary></indexterm>QWidget::imEndEvent(QIMEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;88&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::tabletEvent(QTabletEvent*)</primary></indexterm>QWidget::tabletEvent(QTabletEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;89&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragEnterEvent(QDragEnterEvent*)</primary></indexterm>QWidget::dragEnterEvent(QDragEnterEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;90&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragMoveEvent(QDragMoveEvent*)</primary></indexterm>QWidget::dragMoveEvent(QDragMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;91&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragLeaveEvent(QDragLeaveEvent*)</primary></indexterm>QWidget::dragLeaveEvent(QDragLeaveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;92&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dropEvent(QDropEvent*)</primary></indexterm>QWidget::dropEvent(QDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;93&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showEvent(QShowEvent*)</primary></indexterm>QWidget::showEvent(QShowEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;94&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::hideEvent(QHideEvent*)</primary></indexterm>QWidget::hideEvent(QHideEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;95&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::x11Event(_XEvent*)</primary></indexterm>QWidget::x11Event(_XEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;96&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QRadioButton::updateMask()</primary></indexterm>QRadioButton::updateMask()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;97&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::styleChange(QStyle&)</primary></indexterm>QWidget::styleChange(QStyle&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;98&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QButton::enabledChange(bool)</primary></indexterm>QButton::enabledChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;99&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paletteChange(QPalette const&)</primary></indexterm>QWidget::paletteChange(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;100&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::fontChange(QFont const&)</primary></indexterm>QWidget::fontChange(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;101&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::windowActivationChange(bool)</primary></indexterm>QWidget::windowActivationChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;102&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::metric(int) const</primary></indexterm>QWidget::metric(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;103&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::create(unsigned long, bool, bool)</primary></indexterm>QWidget::create(unsigned long, bool, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;104&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::destroy(bool, bool)</primary></indexterm>QWidget::destroy(bool, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;105&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setWState(unsigned int)</primary></indexterm>NULL or QWidget::setWState(unsigned int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;106&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setWFlags(unsigned int)</primary></indexterm>NULL or QWidget::setWFlags(unsigned int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;107&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusNextPrevChild(bool)</primary></indexterm>QWidget::focusNextPrevChild(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;108&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setKeyCompression(bool)</primary></indexterm>QWidget::setKeyCompression(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;109&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMicroFocusHint(int, int, int, int, bool, QFont*)</primary></indexterm>QWidget::setMicroFocusHint(int, int, int, int, bool, QFont*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;110&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QButton::setText(QString const&)</primary></indexterm>QButton::setText(QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;111&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QButton::setPixmap(QPixmap const&)</primary></indexterm>QButton::setPixmap(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;112&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QButton::setAccel(QKeySequence const&)</primary></indexterm>QButton::setAccel(QKeySequence const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;113&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QButton::setDown(bool)</primary></indexterm>QButton::setDown(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;114&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QButton::setAutoRepeat(bool)</primary></indexterm>QButton::setAutoRepeat(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;115&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QButton::setToggleType(QButton::ToggleType)</primary></indexterm>QButton::setToggleType(QButton::ToggleType)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;116&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QButton::setState(QButton::ToggleState)</primary></indexterm>QButton::setState(QButton::ToggleState)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;117&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QRadioButton::hitButton(QPoint const&) const</primary></indexterm>QRadioButton::hitButton(QPoint const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;118&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QRadioButton::drawButton(QPainter*)</primary></indexterm>QRadioButton::drawButton(QPainter*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;119&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QRadioButton::drawButtonLabel(QPainter*)</primary></indexterm>QRadioButton::drawButtonLabel(QPainter*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;120&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QButton::setGroup(QButtonGroup*)</primary></indexterm>QButton::setGroup(QButtonGroup*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;121&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QRadioButton::setChecked(bool)</primary></indexterm>QRadioButton::setChecked(bool)</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--classdata-->
<TABLE id="cls-57458-1">
<TITLE>Secondary vtable for QRadioButton</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>-80</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QRadioButton</primary></indexterm>typeinfo for QRadioButton</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QRadioButton::~QRadioButton()</primary></indexterm>non-virtual thunk to QRadioButton::~QRadioButton()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QRadioButton::~QRadioButton()</primary></indexterm>non-virtual thunk to QRadioButton::~QRadioButton()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::setResolution(int)</primary></indexterm>QPaintDevice::setResolution(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::resolution() const</primary></indexterm>QPaintDevice::resolution() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::handle() const</primary></indexterm>QPaintDevice::handle() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::x11RenderHandle() const</primary></indexterm>QPaintDevice::x11RenderHandle() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::setX11Data(QPaintDeviceX11Data const*)</primary></indexterm>QPaintDevice::setX11Data(QPaintDeviceX11Data const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::cmd(int, QPainter*, QPDevCmdParam*)</primary></indexterm>QPaintDevice::cmd(int, QPainter*, QPDevCmdParam*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::metric(int) const</primary></indexterm>non-virtual thunk to QWidget::metric(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::fontMet(QFont*, int, char const*, int) const</primary></indexterm>QPaintDevice::fontMet(QFont*, int, char const*, int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::fontInf(QFont*, int) const</primary></indexterm>QPaintDevice::fontInf(QFont*, int) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QRadioButton  class
is described by <XREF LINKEND="rtti-49012">
</PARA>
<!--classdata-->
<TABLE ID="rtti-49012">
<TITLE>typeinfo for QRadioButton</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QRadioButton</primary></indexterm>typeinfo name for QRadioButton</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QButton</primary></indexterm>typeinfo for QButton</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QSlider</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QSlider class
is described by <XREF LINKEND="cls-50618-0">
</PARA>
<!--classdata-->
<TABLE id="cls-50618-0">
<TITLE>Primary vtable for QSlider</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QSlider</primary></indexterm>typeinfo for QSlider</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSlider::metaObject() const</primary></indexterm>NULL or QSlider::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSlider::className() const</primary></indexterm>QSlider::className() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSlider::qt_cast(char const*)</primary></indexterm>QSlider::qt_cast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSlider::qt_invoke(int, QUObject*)</primary></indexterm>QSlider::qt_invoke(int, QUObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSlider::qt_emit(int, QUObject*)</primary></indexterm>QSlider::qt_emit(int, QUObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSlider::qt_property(int, int, QVariant*)</primary></indexterm>QSlider::qt_property(int, int, QVariant*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSlider::~QSlider()</primary></indexterm>QSlider::~QSlider()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSlider::~QSlider()</primary></indexterm>QSlider::~QSlider()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::event(QEvent*)</primary></indexterm>QWidget::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::eventFilter(QObject*, QEvent*)</primary></indexterm>QObject::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setName(char const*)</primary></indexterm>QWidget::setName(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::insertChild(QObject*)</primary></indexterm>QObject::insertChild(QObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::removeChild(QObject*)</primary></indexterm>QObject::removeChild(QObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::setProperty(char const*, QVariant const&)</primary></indexterm>QObject::setProperty(char const*, QVariant const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::property(char const*) const</primary></indexterm>QObject::property(char const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QCustomEvent*)</primary></indexterm>QObject::customEvent(QCustomEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::checkConnectArgs(char const*, QObject const*, char const*)</primary></indexterm>QObject::checkConnectArgs(char const*, QObject const*, char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setEnabled(bool)</primary></indexterm>QWidget::setEnabled(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMinimumSize(int, int)</primary></indexterm>QWidget::setMinimumSize(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMaximumSize(int, int)</primary></indexterm>QWidget::setMaximumSize(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setSizeIncrement(int, int)</primary></indexterm>QWidget::setSizeIncrement(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundMode(Qt::BackgroundMode)</primary></indexterm>QWidget::setBackgroundMode(Qt::BackgroundMode)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setEraseColor(QColor const&)</primary></indexterm>QWidget::setEraseColor(QColor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setErasePixmap(QPixmap const&)</primary></indexterm>QWidget::setErasePixmap(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSlider::setPalette(QPalette const&)</primary></indexterm>QSlider::setPalette(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setPaletteBackgroundColor(QColor const&)</primary></indexterm>QWidget::setPaletteBackgroundColor(QColor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setPaletteBackgroundPixmap(QPixmap const&)</primary></indexterm>QWidget::setPaletteBackgroundPixmap(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFont(QFont const&)</primary></indexterm>QWidget::setFont(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setCursor(QCursor const&)</primary></indexterm>QWidget::setCursor(QCursor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;33&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::unsetCursor()</primary></indexterm>QWidget::unsetCursor()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;34&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMask(QBitmap const&)</primary></indexterm>QWidget::setMask(QBitmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;35&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMask(QRegion const&)</primary></indexterm>QWidget::setMask(QRegion const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;36&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundColor(QColor const&)</primary></indexterm>QWidget::setBackgroundColor(QColor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;37&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundPixmap(QPixmap const&)</primary></indexterm>QWidget::setBackgroundPixmap(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;38&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setCaption(QString const&)</primary></indexterm>QWidget::setCaption(QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;39&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setIcon(QPixmap const&)</primary></indexterm>QWidget::setIcon(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;40&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setIconText(QString const&)</primary></indexterm>QWidget::setIconText(QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;41&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMouseTracking(bool)</primary></indexterm>QWidget::setMouseTracking(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;42&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFocus()</primary></indexterm>QWidget::setFocus()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;43&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setActiveWindow()</primary></indexterm>QWidget::setActiveWindow()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;44&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFocusPolicy(QWidget::FocusPolicy)</primary></indexterm>QWidget::setFocusPolicy(QWidget::FocusPolicy)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;45&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFocusProxy(QWidget*)</primary></indexterm>QWidget::setFocusProxy(QWidget*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;46&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setUpdatesEnabled(bool)</primary></indexterm>QWidget::setUpdatesEnabled(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;47&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::show()</primary></indexterm>QWidget::show()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;48&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::hide()</primary></indexterm>QWidget::hide()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;49&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showMinimized()</primary></indexterm>QWidget::showMinimized()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;50&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showMaximized()</primary></indexterm>QWidget::showMaximized()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;51&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showNormal()</primary></indexterm>QWidget::showNormal()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;52&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::polish()</primary></indexterm>QWidget::polish()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;53&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::move(int, int)</primary></indexterm>QWidget::move(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;54&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::resize(int, int)</primary></indexterm>QWidget::resize(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;55&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setGeometry(int, int, int, int)</primary></indexterm>QWidget::setGeometry(int, int, int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;56&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setGeometry(QRect const&)</primary></indexterm>NULL or QWidget::setGeometry(QRect const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;57&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::close(bool)</primary></indexterm>QWidget::close(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;58&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSlider::sizeHint() const</primary></indexterm>QSlider::sizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;59&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSlider::minimumSizeHint() const</primary></indexterm>QSlider::minimumSizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;60&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSlider::sizePolicy() const</primary></indexterm>QSlider::sizePolicy() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;61&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSlider::setSizePolicy(QSizePolicy)</primary></indexterm>QSlider::setSizePolicy(QSizePolicy)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;62&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::heightForWidth(int) const</primary></indexterm>QWidget::heightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;63&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::adjustSize()</primary></indexterm>QWidget::adjustSize()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;64&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::reparent(QWidget*, unsigned int, QPoint const&, bool)</primary></indexterm>QWidget::reparent(QWidget*, unsigned int, QPoint const&, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;65&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setAcceptDrops(bool)</primary></indexterm>QWidget::setAcceptDrops(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;66&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setAutoMask(bool)</primary></indexterm>QWidget::setAutoMask(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;67&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundOrigin(QWidget::BackgroundOrigin)</primary></indexterm>QWidget::setBackgroundOrigin(QWidget::BackgroundOrigin)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;68&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::customWhatsThis() const</primary></indexterm>QWidget::customWhatsThis() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;69&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSlider::mousePressEvent(QMouseEvent*)</primary></indexterm>QSlider::mousePressEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;70&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSlider::mouseReleaseEvent(QMouseEvent*)</primary></indexterm>QSlider::mouseReleaseEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;71&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseDoubleClickEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseDoubleClickEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;72&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSlider::mouseMoveEvent(QMouseEvent*)</primary></indexterm>QSlider::mouseMoveEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;73&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSlider::wheelEvent(QWheelEvent*)</primary></indexterm>QSlider::wheelEvent(QWheelEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;74&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSlider::keyPressEvent(QKeyEvent*)</primary></indexterm>QSlider::keyPressEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;75&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyReleaseEvent(QKeyEvent*)</primary></indexterm>QWidget::keyReleaseEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;76&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSlider::focusInEvent(QFocusEvent*)</primary></indexterm>QSlider::focusInEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;77&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSlider::focusOutEvent(QFocusEvent*)</primary></indexterm>QSlider::focusOutEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;78&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enterEvent(QEvent*)</primary></indexterm>QWidget::enterEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;79&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::leaveEvent(QEvent*)</primary></indexterm>QWidget::leaveEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;80&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSlider::paintEvent(QPaintEvent*)</primary></indexterm>QSlider::paintEvent(QPaintEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;81&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::moveEvent(QMoveEvent*)</primary></indexterm>QWidget::moveEvent(QMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;82&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSlider::resizeEvent(QResizeEvent*)</primary></indexterm>QSlider::resizeEvent(QResizeEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;83&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::closeEvent(QCloseEvent*)</primary></indexterm>QWidget::closeEvent(QCloseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;84&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::contextMenuEvent(QContextMenuEvent*)</primary></indexterm>QWidget::contextMenuEvent(QContextMenuEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;85&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::imStartEvent(QIMEvent*)</primary></indexterm>QWidget::imStartEvent(QIMEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;86&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::imComposeEvent(QIMEvent*)</primary></indexterm>QWidget::imComposeEvent(QIMEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;87&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::imEndEvent(QIMEvent*)</primary></indexterm>QWidget::imEndEvent(QIMEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;88&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::tabletEvent(QTabletEvent*)</primary></indexterm>QWidget::tabletEvent(QTabletEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;89&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragEnterEvent(QDragEnterEvent*)</primary></indexterm>QWidget::dragEnterEvent(QDragEnterEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;90&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragMoveEvent(QDragMoveEvent*)</primary></indexterm>QWidget::dragMoveEvent(QDragMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;91&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragLeaveEvent(QDragLeaveEvent*)</primary></indexterm>QWidget::dragLeaveEvent(QDragLeaveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;92&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dropEvent(QDropEvent*)</primary></indexterm>QWidget::dropEvent(QDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;93&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showEvent(QShowEvent*)</primary></indexterm>QWidget::showEvent(QShowEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;94&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::hideEvent(QHideEvent*)</primary></indexterm>QWidget::hideEvent(QHideEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;95&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::x11Event(_XEvent*)</primary></indexterm>QWidget::x11Event(_XEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;96&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::updateMask()</primary></indexterm>QWidget::updateMask()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;97&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSlider::styleChange(QStyle&)</primary></indexterm>QSlider::styleChange(QStyle&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;98&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enabledChange(bool)</primary></indexterm>QWidget::enabledChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;99&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paletteChange(QPalette const&)</primary></indexterm>QWidget::paletteChange(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;100&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::fontChange(QFont const&)</primary></indexterm>QWidget::fontChange(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;101&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::windowActivationChange(bool)</primary></indexterm>QWidget::windowActivationChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;102&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::metric(int) const</primary></indexterm>QWidget::metric(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;103&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::create(unsigned long, bool, bool)</primary></indexterm>QWidget::create(unsigned long, bool, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;104&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::destroy(bool, bool)</primary></indexterm>QWidget::destroy(bool, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;105&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setWState(unsigned int)</primary></indexterm>NULL or QWidget::setWState(unsigned int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;106&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setWFlags(unsigned int)</primary></indexterm>NULL or QWidget::setWFlags(unsigned int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;107&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusNextPrevChild(bool)</primary></indexterm>QWidget::focusNextPrevChild(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;108&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setKeyCompression(bool)</primary></indexterm>QWidget::setKeyCompression(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;109&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMicroFocusHint(int, int, int, int, bool, QFont*)</primary></indexterm>QWidget::setMicroFocusHint(int, int, int, int, bool, QFont*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;110&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSlider::setOrientation(Qt::Orientation)</primary></indexterm>QSlider::setOrientation(Qt::Orientation)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;111&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSlider::setTracking(bool)</primary></indexterm>QSlider::setTracking(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;112&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSlider::setTickmarks(QSlider::TickSetting)</primary></indexterm>QSlider::setTickmarks(QSlider::TickSetting)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;113&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSlider::setTickInterval(int)</primary></indexterm>QSlider::setTickInterval(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;114&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSlider::setValue(int)</primary></indexterm>QSlider::setValue(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;115&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSlider::valueChange()</primary></indexterm>QSlider::valueChange()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;116&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSlider::rangeChange()</primary></indexterm>QSlider::rangeChange()</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--classdata-->
<TABLE id="cls-50618-1">
<TITLE>Secondary vtable for QSlider</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>-80</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QSlider</primary></indexterm>typeinfo for QSlider</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QSlider::~QSlider()</primary></indexterm>non-virtual thunk to QSlider::~QSlider()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QSlider::~QSlider()</primary></indexterm>non-virtual thunk to QSlider::~QSlider()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::setResolution(int)</primary></indexterm>QPaintDevice::setResolution(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::resolution() const</primary></indexterm>QPaintDevice::resolution() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::handle() const</primary></indexterm>QPaintDevice::handle() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::x11RenderHandle() const</primary></indexterm>QPaintDevice::x11RenderHandle() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::setX11Data(QPaintDeviceX11Data const*)</primary></indexterm>QPaintDevice::setX11Data(QPaintDeviceX11Data const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::cmd(int, QPainter*, QPDevCmdParam*)</primary></indexterm>QPaintDevice::cmd(int, QPainter*, QPDevCmdParam*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::metric(int) const</primary></indexterm>non-virtual thunk to QWidget::metric(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::fontMet(QFont*, int, char const*, int) const</primary></indexterm>QPaintDevice::fontMet(QFont*, int, char const*, int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::fontInf(QFont*, int) const</primary></indexterm>QPaintDevice::fontInf(QFont*, int) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--classdata-->
<TABLE id="cls-50618-2">
<TITLE>Secondary vtable for QSlider</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>-200</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QSlider</primary></indexterm>typeinfo for QSlider</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QSlider::~QSlider()</primary></indexterm>non-virtual thunk to QSlider::~QSlider()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QSlider::~QSlider()</primary></indexterm>non-virtual thunk to QSlider::~QSlider()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QSlider::valueChange()</primary></indexterm>non-virtual thunk to QSlider::valueChange()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QSlider::rangeChange()</primary></indexterm>non-virtual thunk to QSlider::rangeChange()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QRangeControl::stepChange()</primary></indexterm>QRangeControl::stepChange()</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QSlider  class
is described by <XREF LINKEND="rtti-55543">
</PARA>
<!--classdata-->
<TABLE ID="rtti-55543">
<TITLE>typeinfo for QSlider</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__vmi_class_type_info</primary></indexterm>vtable for __cxxabiv1::__vmi_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QSlider</primary></indexterm>typeinfo name for QSlider</ENTRY>
</ROW>
<ROW>
<ENTRY>flags:</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QWidget</primary></indexterm>typeinfo for QWidget</ENTRY>
<ENTRY>2</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QRangeControl</primary></indexterm>typeinfo for QRangeControl</ENTRY>
<ENTRY>29698</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QMainWindow</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QMainWindow class
is described by <XREF LINKEND="cls-56340-0">
</PARA>
<!--classdata-->
<TABLE id="cls-56340-0">
<TITLE>Primary vtable for QMainWindow</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QMainWindow</primary></indexterm>typeinfo for QMainWindow</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMainWindow::metaObject() const</primary></indexterm>NULL or QMainWindow::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMainWindow::className() const</primary></indexterm>QMainWindow::className() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMainWindow::qt_cast(char const*)</primary></indexterm>QMainWindow::qt_cast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMainWindow::qt_invoke(int, QUObject*)</primary></indexterm>QMainWindow::qt_invoke(int, QUObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMainWindow::qt_emit(int, QUObject*)</primary></indexterm>QMainWindow::qt_emit(int, QUObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMainWindow::qt_property(int, int, QVariant*)</primary></indexterm>QMainWindow::qt_property(int, int, QVariant*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMainWindow::~QMainWindow()</primary></indexterm>QMainWindow::~QMainWindow()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMainWindow::~QMainWindow()</primary></indexterm>QMainWindow::~QMainWindow()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMainWindow::event(QEvent*)</primary></indexterm>QMainWindow::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMainWindow::eventFilter(QObject*, QEvent*)</primary></indexterm>QMainWindow::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setName(char const*)</primary></indexterm>QWidget::setName(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::insertChild(QObject*)</primary></indexterm>QObject::insertChild(QObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::removeChild(QObject*)</primary></indexterm>QObject::removeChild(QObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::setProperty(char const*, QVariant const&)</primary></indexterm>QObject::setProperty(char const*, QVariant const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::property(char const*) const</primary></indexterm>QObject::property(char const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMainWindow::childEvent(QChildEvent*)</primary></indexterm>QMainWindow::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QCustomEvent*)</primary></indexterm>QObject::customEvent(QCustomEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::checkConnectArgs(char const*, QObject const*, char const*)</primary></indexterm>QObject::checkConnectArgs(char const*, QObject const*, char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setEnabled(bool)</primary></indexterm>QWidget::setEnabled(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMinimumSize(int, int)</primary></indexterm>QWidget::setMinimumSize(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMaximumSize(int, int)</primary></indexterm>QWidget::setMaximumSize(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setSizeIncrement(int, int)</primary></indexterm>QWidget::setSizeIncrement(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundMode(Qt::BackgroundMode)</primary></indexterm>QWidget::setBackgroundMode(Qt::BackgroundMode)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setEraseColor(QColor const&)</primary></indexterm>QWidget::setEraseColor(QColor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setErasePixmap(QPixmap const&)</primary></indexterm>QWidget::setErasePixmap(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setPalette(QPalette const&)</primary></indexterm>QWidget::setPalette(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setPaletteBackgroundColor(QColor const&)</primary></indexterm>QWidget::setPaletteBackgroundColor(QColor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setPaletteBackgroundPixmap(QPixmap const&)</primary></indexterm>QWidget::setPaletteBackgroundPixmap(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFont(QFont const&)</primary></indexterm>QWidget::setFont(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setCursor(QCursor const&)</primary></indexterm>QWidget::setCursor(QCursor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;33&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::unsetCursor()</primary></indexterm>QWidget::unsetCursor()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;34&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMask(QBitmap const&)</primary></indexterm>QWidget::setMask(QBitmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;35&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMask(QRegion const&)</primary></indexterm>QWidget::setMask(QRegion const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;36&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundColor(QColor const&)</primary></indexterm>QWidget::setBackgroundColor(QColor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;37&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundPixmap(QPixmap const&)</primary></indexterm>QWidget::setBackgroundPixmap(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;38&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setCaption(QString const&)</primary></indexterm>QWidget::setCaption(QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;39&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setIcon(QPixmap const&)</primary></indexterm>QWidget::setIcon(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;40&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setIconText(QString const&)</primary></indexterm>QWidget::setIconText(QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;41&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMouseTracking(bool)</primary></indexterm>QWidget::setMouseTracking(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;42&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFocus()</primary></indexterm>QWidget::setFocus()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;43&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setActiveWindow()</primary></indexterm>QWidget::setActiveWindow()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;44&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFocusPolicy(QWidget::FocusPolicy)</primary></indexterm>QWidget::setFocusPolicy(QWidget::FocusPolicy)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;45&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFocusProxy(QWidget*)</primary></indexterm>QWidget::setFocusProxy(QWidget*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;46&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setUpdatesEnabled(bool)</primary></indexterm>QWidget::setUpdatesEnabled(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;47&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMainWindow::show()</primary></indexterm>QMainWindow::show()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;48&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMainWindow::hide()</primary></indexterm>QMainWindow::hide()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;49&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showMinimized()</primary></indexterm>QWidget::showMinimized()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;50&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showMaximized()</primary></indexterm>QWidget::showMaximized()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;51&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showNormal()</primary></indexterm>QWidget::showNormal()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;52&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::polish()</primary></indexterm>QWidget::polish()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;53&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::move(int, int)</primary></indexterm>QWidget::move(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;54&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::resize(int, int)</primary></indexterm>QWidget::resize(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;55&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setGeometry(int, int, int, int)</primary></indexterm>QWidget::setGeometry(int, int, int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;56&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setGeometry(QRect const&)</primary></indexterm>NULL or QWidget::setGeometry(QRect const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;57&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::close(bool)</primary></indexterm>QWidget::close(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;58&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMainWindow::sizeHint() const</primary></indexterm>QMainWindow::sizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;59&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMainWindow::minimumSizeHint() const</primary></indexterm>QMainWindow::minimumSizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;60&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::sizePolicy() const</primary></indexterm>QWidget::sizePolicy() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;61&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setSizePolicy(QSizePolicy)</primary></indexterm>QWidget::setSizePolicy(QSizePolicy)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;62&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::heightForWidth(int) const</primary></indexterm>QWidget::heightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;63&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::adjustSize()</primary></indexterm>QWidget::adjustSize()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;64&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::reparent(QWidget*, unsigned int, QPoint const&, bool)</primary></indexterm>QWidget::reparent(QWidget*, unsigned int, QPoint const&, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;65&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setAcceptDrops(bool)</primary></indexterm>QWidget::setAcceptDrops(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;66&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setAutoMask(bool)</primary></indexterm>QWidget::setAutoMask(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;67&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundOrigin(QWidget::BackgroundOrigin)</primary></indexterm>QWidget::setBackgroundOrigin(QWidget::BackgroundOrigin)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;68&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::customWhatsThis() const</primary></indexterm>QWidget::customWhatsThis() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;69&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mousePressEvent(QMouseEvent*)</primary></indexterm>QWidget::mousePressEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;70&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseReleaseEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseReleaseEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;71&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseDoubleClickEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseDoubleClickEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;72&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseMoveEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseMoveEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;73&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::wheelEvent(QWheelEvent*)</primary></indexterm>QWidget::wheelEvent(QWheelEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;74&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyPressEvent(QKeyEvent*)</primary></indexterm>QWidget::keyPressEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;75&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyReleaseEvent(QKeyEvent*)</primary></indexterm>QWidget::keyReleaseEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;76&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusInEvent(QFocusEvent*)</primary></indexterm>QWidget::focusInEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;77&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusOutEvent(QFocusEvent*)</primary></indexterm>QWidget::focusOutEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;78&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enterEvent(QEvent*)</primary></indexterm>QWidget::enterEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;79&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::leaveEvent(QEvent*)</primary></indexterm>QWidget::leaveEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;80&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMainWindow::paintEvent(QPaintEvent*)</primary></indexterm>QMainWindow::paintEvent(QPaintEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;81&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::moveEvent(QMoveEvent*)</primary></indexterm>QWidget::moveEvent(QMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;82&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::resizeEvent(QResizeEvent*)</primary></indexterm>QWidget::resizeEvent(QResizeEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;83&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::closeEvent(QCloseEvent*)</primary></indexterm>QWidget::closeEvent(QCloseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;84&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::contextMenuEvent(QContextMenuEvent*)</primary></indexterm>QWidget::contextMenuEvent(QContextMenuEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;85&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::imStartEvent(QIMEvent*)</primary></indexterm>QWidget::imStartEvent(QIMEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;86&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::imComposeEvent(QIMEvent*)</primary></indexterm>QWidget::imComposeEvent(QIMEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;87&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::imEndEvent(QIMEvent*)</primary></indexterm>QWidget::imEndEvent(QIMEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;88&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::tabletEvent(QTabletEvent*)</primary></indexterm>QWidget::tabletEvent(QTabletEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;89&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragEnterEvent(QDragEnterEvent*)</primary></indexterm>QWidget::dragEnterEvent(QDragEnterEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;90&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragMoveEvent(QDragMoveEvent*)</primary></indexterm>QWidget::dragMoveEvent(QDragMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;91&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragLeaveEvent(QDragLeaveEvent*)</primary></indexterm>QWidget::dragLeaveEvent(QDragLeaveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;92&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dropEvent(QDropEvent*)</primary></indexterm>QWidget::dropEvent(QDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;93&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showEvent(QShowEvent*)</primary></indexterm>QWidget::showEvent(QShowEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;94&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::hideEvent(QHideEvent*)</primary></indexterm>QWidget::hideEvent(QHideEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;95&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::x11Event(_XEvent*)</primary></indexterm>QWidget::x11Event(_XEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;96&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::updateMask()</primary></indexterm>QWidget::updateMask()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;97&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMainWindow::styleChange(QStyle&)</primary></indexterm>QMainWindow::styleChange(QStyle&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;98&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enabledChange(bool)</primary></indexterm>QWidget::enabledChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;99&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paletteChange(QPalette const&)</primary></indexterm>QWidget::paletteChange(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;100&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::fontChange(QFont const&)</primary></indexterm>QWidget::fontChange(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;101&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::windowActivationChange(bool)</primary></indexterm>QWidget::windowActivationChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;102&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::metric(int) const</primary></indexterm>QWidget::metric(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;103&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::create(unsigned long, bool, bool)</primary></indexterm>QWidget::create(unsigned long, bool, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;104&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::destroy(bool, bool)</primary></indexterm>QWidget::destroy(bool, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;105&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setWState(unsigned int)</primary></indexterm>NULL or QWidget::setWState(unsigned int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;106&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setWFlags(unsigned int)</primary></indexterm>NULL or QWidget::setWFlags(unsigned int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;107&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusNextPrevChild(bool)</primary></indexterm>QWidget::focusNextPrevChild(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;108&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setKeyCompression(bool)</primary></indexterm>QWidget::setKeyCompression(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;109&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMicroFocusHint(int, int, int, int, bool, QFont*)</primary></indexterm>QWidget::setMicroFocusHint(int, int, int, int, bool, QFont*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;110&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMainWindow::setCentralWidget(QWidget*)</primary></indexterm>QMainWindow::setCentralWidget(QWidget*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;111&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMainWindow::setDockEnabled(Qt::Dock, bool)</primary></indexterm>QMainWindow::setDockEnabled(Qt::Dock, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;112&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMainWindow::setDockEnabled(QDockWindow*, Qt::Dock, bool)</primary></indexterm>QMainWindow::setDockEnabled(QDockWindow*, Qt::Dock, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;113&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMainWindow::addDockWindow(QDockWindow*, Qt::Dock, bool)</primary></indexterm>QMainWindow::addDockWindow(QDockWindow*, Qt::Dock, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;114&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMainWindow::addDockWindow(QDockWindow*, QString const&, Qt::Dock, bool)</primary></indexterm>QMainWindow::addDockWindow(QDockWindow*, QString const&, Qt::Dock, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;115&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMainWindow::moveDockWindow(QDockWindow*, Qt::Dock)</primary></indexterm>QMainWindow::moveDockWindow(QDockWindow*, Qt::Dock)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;116&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMainWindow::moveDockWindow(QDockWindow*, Qt::Dock, bool, int, int)</primary></indexterm>QMainWindow::moveDockWindow(QDockWindow*, Qt::Dock, bool, int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;117&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMainWindow::removeDockWindow(QDockWindow*)</primary></indexterm>QMainWindow::removeDockWindow(QDockWindow*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;118&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMainWindow::dockingArea(QPoint const&)</primary></indexterm>QMainWindow::dockingArea(QPoint const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;119&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMainWindow::isCustomizable() const</primary></indexterm>QMainWindow::isCustomizable() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;120&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMainWindow::setRightJustification(bool)</primary></indexterm>QMainWindow::setRightJustification(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;121&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMainWindow::setUsesBigPixmaps(bool)</primary></indexterm>QMainWindow::setUsesBigPixmaps(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;122&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMainWindow::setUsesTextLabel(bool)</primary></indexterm>QMainWindow::setUsesTextLabel(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;123&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMainWindow::setDockWindowsMovable(bool)</primary></indexterm>QMainWindow::setDockWindowsMovable(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;124&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMainWindow::setOpaqueMoving(bool)</primary></indexterm>QMainWindow::setOpaqueMoving(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;125&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMainWindow::setDockMenuEnabled(bool)</primary></indexterm>QMainWindow::setDockMenuEnabled(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;126&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMainWindow::whatsThis()</primary></indexterm>QMainWindow::whatsThis()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;127&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMainWindow::setAppropriate(QDockWindow*, bool)</primary></indexterm>QMainWindow::setAppropriate(QDockWindow*, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;128&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMainWindow::customize()</primary></indexterm>QMainWindow::customize()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;129&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMainWindow::setUpLayout()</primary></indexterm>QMainWindow::setUpLayout()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;130&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMainWindow::showDockMenu(QPoint const&)</primary></indexterm>QMainWindow::showDockMenu(QPoint const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;131&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMainWindow::setMenuBar(QMenuBar*)</primary></indexterm>QMainWindow::setMenuBar(QMenuBar*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;132&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMainWindow::setStatusBar(QStatusBar*)</primary></indexterm>QMainWindow::setStatusBar(QStatusBar*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;133&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMainWindow::setToolTipGroup(QToolTipGroup*)</primary></indexterm>QMainWindow::setToolTipGroup(QToolTipGroup*)</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--classdata-->
<TABLE id="cls-56340-1">
<TITLE>Secondary vtable for QMainWindow</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>-80</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QMainWindow</primary></indexterm>typeinfo for QMainWindow</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QMainWindow::~QMainWindow()</primary></indexterm>non-virtual thunk to QMainWindow::~QMainWindow()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QMainWindow::~QMainWindow()</primary></indexterm>non-virtual thunk to QMainWindow::~QMainWindow()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::setResolution(int)</primary></indexterm>QPaintDevice::setResolution(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::resolution() const</primary></indexterm>QPaintDevice::resolution() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::handle() const</primary></indexterm>QPaintDevice::handle() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::x11RenderHandle() const</primary></indexterm>QPaintDevice::x11RenderHandle() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::setX11Data(QPaintDeviceX11Data const*)</primary></indexterm>QPaintDevice::setX11Data(QPaintDeviceX11Data const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::cmd(int, QPainter*, QPDevCmdParam*)</primary></indexterm>QPaintDevice::cmd(int, QPainter*, QPDevCmdParam*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::metric(int) const</primary></indexterm>non-virtual thunk to QWidget::metric(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::fontMet(QFont*, int, char const*, int) const</primary></indexterm>QPaintDevice::fontMet(QFont*, int, char const*, int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::fontInf(QFont*, int) const</primary></indexterm>QPaintDevice::fontInf(QFont*, int) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QMainWindow  class
is described by <XREF LINKEND="rtti-57106">
</PARA>
<!--classdata-->
<TABLE ID="rtti-57106">
<TITLE>typeinfo for QMainWindow</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QMainWindow</primary></indexterm>typeinfo name for QMainWindow</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QWidget</primary></indexterm>typeinfo for QWidget</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QToolButton</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QToolButton class
is described by <XREF LINKEND="cls-53589-0">
</PARA>
<!--classdata-->
<TABLE id="cls-53589-0">
<TITLE>Primary vtable for QToolButton</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QToolButton</primary></indexterm>typeinfo for QToolButton</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QToolButton::metaObject() const</primary></indexterm>NULL or QToolButton::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QToolButton::className() const</primary></indexterm>QToolButton::className() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QToolButton::qt_cast(char const*)</primary></indexterm>QToolButton::qt_cast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QToolButton::qt_invoke(int, QUObject*)</primary></indexterm>QToolButton::qt_invoke(int, QUObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QToolButton::qt_emit(int, QUObject*)</primary></indexterm>QToolButton::qt_emit(int, QUObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QToolButton::qt_property(int, int, QVariant*)</primary></indexterm>QToolButton::qt_property(int, int, QVariant*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QToolButton::~QToolButton()</primary></indexterm>QToolButton::~QToolButton()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QToolButton::~QToolButton()</primary></indexterm>QToolButton::~QToolButton()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::event(QEvent*)</primary></indexterm>QWidget::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QToolButton::eventFilter(QObject*, QEvent*)</primary></indexterm>QToolButton::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setName(char const*)</primary></indexterm>QWidget::setName(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::insertChild(QObject*)</primary></indexterm>QObject::insertChild(QObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::removeChild(QObject*)</primary></indexterm>QObject::removeChild(QObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::setProperty(char const*, QVariant const&)</primary></indexterm>QObject::setProperty(char const*, QVariant const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::property(char const*) const</primary></indexterm>QObject::property(char const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QCustomEvent*)</primary></indexterm>QObject::customEvent(QCustomEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::checkConnectArgs(char const*, QObject const*, char const*)</primary></indexterm>QObject::checkConnectArgs(char const*, QObject const*, char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setEnabled(bool)</primary></indexterm>QWidget::setEnabled(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMinimumSize(int, int)</primary></indexterm>QWidget::setMinimumSize(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMaximumSize(int, int)</primary></indexterm>QWidget::setMaximumSize(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setSizeIncrement(int, int)</primary></indexterm>QWidget::setSizeIncrement(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundMode(Qt::BackgroundMode)</primary></indexterm>QWidget::setBackgroundMode(Qt::BackgroundMode)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setEraseColor(QColor const&)</primary></indexterm>QWidget::setEraseColor(QColor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setErasePixmap(QPixmap const&)</primary></indexterm>QWidget::setErasePixmap(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setPalette(QPalette const&)</primary></indexterm>QWidget::setPalette(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setPaletteBackgroundColor(QColor const&)</primary></indexterm>QWidget::setPaletteBackgroundColor(QColor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setPaletteBackgroundPixmap(QPixmap const&)</primary></indexterm>QWidget::setPaletteBackgroundPixmap(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFont(QFont const&)</primary></indexterm>QWidget::setFont(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setCursor(QCursor const&)</primary></indexterm>QWidget::setCursor(QCursor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;33&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::unsetCursor()</primary></indexterm>QWidget::unsetCursor()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;34&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMask(QBitmap const&)</primary></indexterm>QWidget::setMask(QBitmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;35&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMask(QRegion const&)</primary></indexterm>QWidget::setMask(QRegion const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;36&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundColor(QColor const&)</primary></indexterm>QWidget::setBackgroundColor(QColor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;37&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundPixmap(QPixmap const&)</primary></indexterm>QWidget::setBackgroundPixmap(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;38&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setCaption(QString const&)</primary></indexterm>QWidget::setCaption(QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;39&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setIcon(QPixmap const&)</primary></indexterm>QWidget::setIcon(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;40&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setIconText(QString const&)</primary></indexterm>QWidget::setIconText(QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;41&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMouseTracking(bool)</primary></indexterm>QWidget::setMouseTracking(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;42&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFocus()</primary></indexterm>QWidget::setFocus()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;43&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setActiveWindow()</primary></indexterm>QWidget::setActiveWindow()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;44&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFocusPolicy(QWidget::FocusPolicy)</primary></indexterm>QWidget::setFocusPolicy(QWidget::FocusPolicy)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;45&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFocusProxy(QWidget*)</primary></indexterm>QWidget::setFocusProxy(QWidget*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;46&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setUpdatesEnabled(bool)</primary></indexterm>QWidget::setUpdatesEnabled(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;47&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::show()</primary></indexterm>QWidget::show()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;48&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::hide()</primary></indexterm>QWidget::hide()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;49&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showMinimized()</primary></indexterm>QWidget::showMinimized()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;50&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showMaximized()</primary></indexterm>QWidget::showMaximized()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;51&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showNormal()</primary></indexterm>QWidget::showNormal()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;52&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::polish()</primary></indexterm>QWidget::polish()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;53&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::move(int, int)</primary></indexterm>QWidget::move(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;54&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::resize(int, int)</primary></indexterm>QWidget::resize(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;55&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setGeometry(int, int, int, int)</primary></indexterm>QWidget::setGeometry(int, int, int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;56&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setGeometry(QRect const&)</primary></indexterm>NULL or QWidget::setGeometry(QRect const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;57&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::close(bool)</primary></indexterm>QWidget::close(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;58&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QToolButton::sizeHint() const</primary></indexterm>QToolButton::sizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;59&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QToolButton::minimumSizeHint() const</primary></indexterm>QToolButton::minimumSizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;60&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::sizePolicy() const</primary></indexterm>QWidget::sizePolicy() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;61&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setSizePolicy(QSizePolicy)</primary></indexterm>QWidget::setSizePolicy(QSizePolicy)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;62&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::heightForWidth(int) const</primary></indexterm>QWidget::heightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;63&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::adjustSize()</primary></indexterm>QWidget::adjustSize()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;64&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::reparent(QWidget*, unsigned int, QPoint const&, bool)</primary></indexterm>QWidget::reparent(QWidget*, unsigned int, QPoint const&, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;65&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setAcceptDrops(bool)</primary></indexterm>QWidget::setAcceptDrops(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;66&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setAutoMask(bool)</primary></indexterm>QWidget::setAutoMask(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;67&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundOrigin(QWidget::BackgroundOrigin)</primary></indexterm>QWidget::setBackgroundOrigin(QWidget::BackgroundOrigin)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;68&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::customWhatsThis() const</primary></indexterm>QWidget::customWhatsThis() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;69&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QToolButton::mousePressEvent(QMouseEvent*)</primary></indexterm>QToolButton::mousePressEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;70&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QButton::mouseReleaseEvent(QMouseEvent*)</primary></indexterm>QButton::mouseReleaseEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;71&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseDoubleClickEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseDoubleClickEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;72&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QButton::mouseMoveEvent(QMouseEvent*)</primary></indexterm>QButton::mouseMoveEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;73&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::wheelEvent(QWheelEvent*)</primary></indexterm>QWidget::wheelEvent(QWheelEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;74&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QButton::keyPressEvent(QKeyEvent*)</primary></indexterm>QButton::keyPressEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;75&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QButton::keyReleaseEvent(QKeyEvent*)</primary></indexterm>QButton::keyReleaseEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;76&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QButton::focusInEvent(QFocusEvent*)</primary></indexterm>QButton::focusInEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;77&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QButton::focusOutEvent(QFocusEvent*)</primary></indexterm>QButton::focusOutEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;78&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QToolButton::enterEvent(QEvent*)</primary></indexterm>QToolButton::enterEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;79&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QToolButton::leaveEvent(QEvent*)</primary></indexterm>QToolButton::leaveEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;80&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QButton::paintEvent(QPaintEvent*)</primary></indexterm>QButton::paintEvent(QPaintEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;81&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QToolButton::moveEvent(QMoveEvent*)</primary></indexterm>QToolButton::moveEvent(QMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;82&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::resizeEvent(QResizeEvent*)</primary></indexterm>QWidget::resizeEvent(QResizeEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;83&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::closeEvent(QCloseEvent*)</primary></indexterm>QWidget::closeEvent(QCloseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;84&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::contextMenuEvent(QContextMenuEvent*)</primary></indexterm>QWidget::contextMenuEvent(QContextMenuEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;85&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::imStartEvent(QIMEvent*)</primary></indexterm>QWidget::imStartEvent(QIMEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;86&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::imComposeEvent(QIMEvent*)</primary></indexterm>QWidget::imComposeEvent(QIMEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;87&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::imEndEvent(QIMEvent*)</primary></indexterm>QWidget::imEndEvent(QIMEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;88&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::tabletEvent(QTabletEvent*)</primary></indexterm>QWidget::tabletEvent(QTabletEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;89&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragEnterEvent(QDragEnterEvent*)</primary></indexterm>QWidget::dragEnterEvent(QDragEnterEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;90&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragMoveEvent(QDragMoveEvent*)</primary></indexterm>QWidget::dragMoveEvent(QDragMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;91&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragLeaveEvent(QDragLeaveEvent*)</primary></indexterm>QWidget::dragLeaveEvent(QDragLeaveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;92&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dropEvent(QDropEvent*)</primary></indexterm>QWidget::dropEvent(QDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;93&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showEvent(QShowEvent*)</primary></indexterm>QWidget::showEvent(QShowEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;94&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::hideEvent(QHideEvent*)</primary></indexterm>QWidget::hideEvent(QHideEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;95&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::x11Event(_XEvent*)</primary></indexterm>QWidget::x11Event(_XEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;96&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::updateMask()</primary></indexterm>QWidget::updateMask()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;97&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::styleChange(QStyle&)</primary></indexterm>QWidget::styleChange(QStyle&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;98&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QButton::enabledChange(bool)</primary></indexterm>QButton::enabledChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;99&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QToolButton::paletteChange(QPalette const&)</primary></indexterm>QToolButton::paletteChange(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;100&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::fontChange(QFont const&)</primary></indexterm>QWidget::fontChange(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;101&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::windowActivationChange(bool)</primary></indexterm>QWidget::windowActivationChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;102&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::metric(int) const</primary></indexterm>QWidget::metric(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;103&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::create(unsigned long, bool, bool)</primary></indexterm>QWidget::create(unsigned long, bool, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;104&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::destroy(bool, bool)</primary></indexterm>QWidget::destroy(bool, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;105&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setWState(unsigned int)</primary></indexterm>NULL or QWidget::setWState(unsigned int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;106&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setWFlags(unsigned int)</primary></indexterm>NULL or QWidget::setWFlags(unsigned int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;107&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusNextPrevChild(bool)</primary></indexterm>QWidget::focusNextPrevChild(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;108&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setKeyCompression(bool)</primary></indexterm>QWidget::setKeyCompression(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;109&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMicroFocusHint(int, int, int, int, bool, QFont*)</primary></indexterm>QWidget::setMicroFocusHint(int, int, int, int, bool, QFont*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;110&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QToolButton::setText(QString const&)</primary></indexterm>QToolButton::setText(QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;111&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QButton::setPixmap(QPixmap const&)</primary></indexterm>QButton::setPixmap(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;112&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QButton::setAccel(QKeySequence const&)</primary></indexterm>QButton::setAccel(QKeySequence const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;113&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QButton::setDown(bool)</primary></indexterm>QButton::setDown(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;114&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QButton::setAutoRepeat(bool)</primary></indexterm>QButton::setAutoRepeat(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;115&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QButton::setToggleType(QButton::ToggleType)</primary></indexterm>QButton::setToggleType(QButton::ToggleType)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;116&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QButton::setState(QButton::ToggleState)</primary></indexterm>QButton::setState(QButton::ToggleState)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;117&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QButton::hitButton(QPoint const&) const</primary></indexterm>QButton::hitButton(QPoint const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;118&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QToolButton::drawButton(QPainter*)</primary></indexterm>QToolButton::drawButton(QPainter*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;119&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QToolButton::drawButtonLabel(QPainter*)</primary></indexterm>QToolButton::drawButtonLabel(QPainter*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;120&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QButton::setGroup(QButtonGroup*)</primary></indexterm>QButton::setGroup(QButtonGroup*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;121&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QToolButton::setIconSet(QIconSet const&)</primary></indexterm>QToolButton::setIconSet(QIconSet const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;122&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QToolButton::setUsesBigPixmap(bool)</primary></indexterm>QToolButton::setUsesBigPixmap(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;123&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QToolButton::setUsesTextLabel(bool)</primary></indexterm>QToolButton::setUsesTextLabel(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;124&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QToolButton::setTextLabel(QString const&, bool)</primary></indexterm>QToolButton::setTextLabel(QString const&, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;125&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QToolButton::setToggleButton(bool)</primary></indexterm>QToolButton::setToggleButton(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;126&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QToolButton::setOn(bool)</primary></indexterm>QToolButton::setOn(bool)</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--classdata-->
<TABLE id="cls-53589-1">
<TITLE>Secondary vtable for QToolButton</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>-80</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QToolButton</primary></indexterm>typeinfo for QToolButton</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QToolButton::~QToolButton()</primary></indexterm>non-virtual thunk to QToolButton::~QToolButton()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QToolButton::~QToolButton()</primary></indexterm>non-virtual thunk to QToolButton::~QToolButton()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::setResolution(int)</primary></indexterm>QPaintDevice::setResolution(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::resolution() const</primary></indexterm>QPaintDevice::resolution() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::handle() const</primary></indexterm>QPaintDevice::handle() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::x11RenderHandle() const</primary></indexterm>QPaintDevice::x11RenderHandle() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::setX11Data(QPaintDeviceX11Data const*)</primary></indexterm>QPaintDevice::setX11Data(QPaintDeviceX11Data const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::cmd(int, QPainter*, QPDevCmdParam*)</primary></indexterm>QPaintDevice::cmd(int, QPainter*, QPDevCmdParam*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::metric(int) const</primary></indexterm>non-virtual thunk to QWidget::metric(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::fontMet(QFont*, int, char const*, int) const</primary></indexterm>QPaintDevice::fontMet(QFont*, int, char const*, int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::fontInf(QFont*, int) const</primary></indexterm>QPaintDevice::fontInf(QFont*, int) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QToolButton  class
is described by <XREF LINKEND="rtti-55848">
</PARA>
<!--classdata-->
<TABLE ID="rtti-55848">
<TITLE>typeinfo for QToolButton</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QToolButton</primary></indexterm>typeinfo name for QToolButton</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QButton</primary></indexterm>typeinfo for QButton</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QWidgetIntDict</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QWidgetIntDict class
is described in the generic part of this specification.
</PARA>
<PARA>
The Run Time Type Information for the QWidgetIntDict  class
is described by <XREF LINKEND="rtti-58211">
</PARA>
<!--classdata-->
<TABLE ID="rtti-58211">
<TITLE>typeinfo for QWidgetIntDict</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QWidgetIntDict</primary></indexterm>typeinfo name for QWidgetIntDict</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QIntDict&lt;QWidget&gt;</primary></indexterm>typeinfo for QIntDict&lt;QWidget&gt;</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QTabBar</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QTabBar class
is described by <XREF LINKEND="cls-54417-0">
</PARA>
<!--classdata-->
<TABLE id="cls-54417-0">
<TITLE>Primary vtable for QTabBar</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QTabBar</primary></indexterm>typeinfo for QTabBar</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTabBar::metaObject() const</primary></indexterm>NULL or QTabBar::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTabBar::className() const</primary></indexterm>QTabBar::className() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTabBar::qt_cast(char const*)</primary></indexterm>QTabBar::qt_cast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTabBar::qt_invoke(int, QUObject*)</primary></indexterm>QTabBar::qt_invoke(int, QUObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTabBar::qt_emit(int, QUObject*)</primary></indexterm>QTabBar::qt_emit(int, QUObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTabBar::qt_property(int, int, QVariant*)</primary></indexterm>QTabBar::qt_property(int, int, QVariant*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTabBar::~QTabBar()</primary></indexterm>QTabBar::~QTabBar()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTabBar::~QTabBar()</primary></indexterm>QTabBar::~QTabBar()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTabBar::event(QEvent*)</primary></indexterm>QTabBar::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::eventFilter(QObject*, QEvent*)</primary></indexterm>QObject::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setName(char const*)</primary></indexterm>QWidget::setName(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::insertChild(QObject*)</primary></indexterm>QObject::insertChild(QObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::removeChild(QObject*)</primary></indexterm>QObject::removeChild(QObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::setProperty(char const*, QVariant const&)</primary></indexterm>QObject::setProperty(char const*, QVariant const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::property(char const*) const</primary></indexterm>QObject::property(char const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QCustomEvent*)</primary></indexterm>QObject::customEvent(QCustomEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::checkConnectArgs(char const*, QObject const*, char const*)</primary></indexterm>QObject::checkConnectArgs(char const*, QObject const*, char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setEnabled(bool)</primary></indexterm>QWidget::setEnabled(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMinimumSize(int, int)</primary></indexterm>QWidget::setMinimumSize(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMaximumSize(int, int)</primary></indexterm>QWidget::setMaximumSize(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setSizeIncrement(int, int)</primary></indexterm>QWidget::setSizeIncrement(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundMode(Qt::BackgroundMode)</primary></indexterm>QWidget::setBackgroundMode(Qt::BackgroundMode)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setEraseColor(QColor const&)</primary></indexterm>QWidget::setEraseColor(QColor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setErasePixmap(QPixmap const&)</primary></indexterm>QWidget::setErasePixmap(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setPalette(QPalette const&)</primary></indexterm>QWidget::setPalette(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setPaletteBackgroundColor(QColor const&)</primary></indexterm>QWidget::setPaletteBackgroundColor(QColor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setPaletteBackgroundPixmap(QPixmap const&)</primary></indexterm>QWidget::setPaletteBackgroundPixmap(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFont(QFont const&)</primary></indexterm>QWidget::setFont(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setCursor(QCursor const&)</primary></indexterm>QWidget::setCursor(QCursor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;33&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::unsetCursor()</primary></indexterm>QWidget::unsetCursor()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;34&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMask(QBitmap const&)</primary></indexterm>QWidget::setMask(QBitmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;35&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMask(QRegion const&)</primary></indexterm>QWidget::setMask(QRegion const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;36&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundColor(QColor const&)</primary></indexterm>QWidget::setBackgroundColor(QColor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;37&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundPixmap(QPixmap const&)</primary></indexterm>QWidget::setBackgroundPixmap(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;38&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setCaption(QString const&)</primary></indexterm>QWidget::setCaption(QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;39&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setIcon(QPixmap const&)</primary></indexterm>QWidget::setIcon(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;40&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setIconText(QString const&)</primary></indexterm>QWidget::setIconText(QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;41&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMouseTracking(bool)</primary></indexterm>QWidget::setMouseTracking(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;42&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFocus()</primary></indexterm>QWidget::setFocus()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;43&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setActiveWindow()</primary></indexterm>QWidget::setActiveWindow()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;44&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFocusPolicy(QWidget::FocusPolicy)</primary></indexterm>QWidget::setFocusPolicy(QWidget::FocusPolicy)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;45&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFocusProxy(QWidget*)</primary></indexterm>QWidget::setFocusProxy(QWidget*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;46&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setUpdatesEnabled(bool)</primary></indexterm>QWidget::setUpdatesEnabled(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;47&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTabBar::show()</primary></indexterm>QTabBar::show()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;48&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::hide()</primary></indexterm>QWidget::hide()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;49&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showMinimized()</primary></indexterm>QWidget::showMinimized()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;50&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showMaximized()</primary></indexterm>QWidget::showMaximized()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;51&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showNormal()</primary></indexterm>QWidget::showNormal()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;52&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::polish()</primary></indexterm>QWidget::polish()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;53&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::move(int, int)</primary></indexterm>QWidget::move(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;54&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::resize(int, int)</primary></indexterm>QWidget::resize(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;55&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setGeometry(int, int, int, int)</primary></indexterm>QWidget::setGeometry(int, int, int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;56&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setGeometry(QRect const&)</primary></indexterm>NULL or QWidget::setGeometry(QRect const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;57&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::close(bool)</primary></indexterm>QWidget::close(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;58&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTabBar::sizeHint() const</primary></indexterm>QTabBar::sizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;59&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTabBar::minimumSizeHint() const</primary></indexterm>QTabBar::minimumSizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;60&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::sizePolicy() const</primary></indexterm>QWidget::sizePolicy() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;61&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setSizePolicy(QSizePolicy)</primary></indexterm>QWidget::setSizePolicy(QSizePolicy)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;62&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::heightForWidth(int) const</primary></indexterm>QWidget::heightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;63&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::adjustSize()</primary></indexterm>QWidget::adjustSize()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;64&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::reparent(QWidget*, unsigned int, QPoint const&, bool)</primary></indexterm>QWidget::reparent(QWidget*, unsigned int, QPoint const&, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;65&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setAcceptDrops(bool)</primary></indexterm>QWidget::setAcceptDrops(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;66&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setAutoMask(bool)</primary></indexterm>QWidget::setAutoMask(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;67&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundOrigin(QWidget::BackgroundOrigin)</primary></indexterm>QWidget::setBackgroundOrigin(QWidget::BackgroundOrigin)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;68&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::customWhatsThis() const</primary></indexterm>QWidget::customWhatsThis() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;69&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTabBar::mousePressEvent(QMouseEvent*)</primary></indexterm>QTabBar::mousePressEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;70&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTabBar::mouseReleaseEvent(QMouseEvent*)</primary></indexterm>QTabBar::mouseReleaseEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;71&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseDoubleClickEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseDoubleClickEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;72&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTabBar::mouseMoveEvent(QMouseEvent*)</primary></indexterm>QTabBar::mouseMoveEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;73&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::wheelEvent(QWheelEvent*)</primary></indexterm>QWidget::wheelEvent(QWheelEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;74&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTabBar::keyPressEvent(QKeyEvent*)</primary></indexterm>QTabBar::keyPressEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;75&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyReleaseEvent(QKeyEvent*)</primary></indexterm>QWidget::keyReleaseEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;76&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTabBar::focusInEvent(QFocusEvent*)</primary></indexterm>QTabBar::focusInEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;77&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTabBar::focusOutEvent(QFocusEvent*)</primary></indexterm>QTabBar::focusOutEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;78&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enterEvent(QEvent*)</primary></indexterm>QWidget::enterEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;79&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::leaveEvent(QEvent*)</primary></indexterm>QWidget::leaveEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;80&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTabBar::paintEvent(QPaintEvent*)</primary></indexterm>QTabBar::paintEvent(QPaintEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;81&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::moveEvent(QMoveEvent*)</primary></indexterm>QWidget::moveEvent(QMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;82&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTabBar::resizeEvent(QResizeEvent*)</primary></indexterm>QTabBar::resizeEvent(QResizeEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;83&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::closeEvent(QCloseEvent*)</primary></indexterm>QWidget::closeEvent(QCloseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;84&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::contextMenuEvent(QContextMenuEvent*)</primary></indexterm>QWidget::contextMenuEvent(QContextMenuEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;85&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::imStartEvent(QIMEvent*)</primary></indexterm>QWidget::imStartEvent(QIMEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;86&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::imComposeEvent(QIMEvent*)</primary></indexterm>QWidget::imComposeEvent(QIMEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;87&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::imEndEvent(QIMEvent*)</primary></indexterm>QWidget::imEndEvent(QIMEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;88&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::tabletEvent(QTabletEvent*)</primary></indexterm>QWidget::tabletEvent(QTabletEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;89&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragEnterEvent(QDragEnterEvent*)</primary></indexterm>QWidget::dragEnterEvent(QDragEnterEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;90&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragMoveEvent(QDragMoveEvent*)</primary></indexterm>QWidget::dragMoveEvent(QDragMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;91&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragLeaveEvent(QDragLeaveEvent*)</primary></indexterm>QWidget::dragLeaveEvent(QDragLeaveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;92&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dropEvent(QDropEvent*)</primary></indexterm>QWidget::dropEvent(QDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;93&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showEvent(QShowEvent*)</primary></indexterm>QWidget::showEvent(QShowEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;94&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::hideEvent(QHideEvent*)</primary></indexterm>QWidget::hideEvent(QHideEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;95&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::x11Event(_XEvent*)</primary></indexterm>QWidget::x11Event(_XEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;96&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::updateMask()</primary></indexterm>QWidget::updateMask()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;97&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTabBar::styleChange(QStyle&)</primary></indexterm>QTabBar::styleChange(QStyle&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;98&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enabledChange(bool)</primary></indexterm>QWidget::enabledChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;99&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paletteChange(QPalette const&)</primary></indexterm>QWidget::paletteChange(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;100&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTabBar::fontChange(QFont const&)</primary></indexterm>QTabBar::fontChange(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;101&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::windowActivationChange(bool)</primary></indexterm>QWidget::windowActivationChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;102&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::metric(int) const</primary></indexterm>QWidget::metric(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;103&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::create(unsigned long, bool, bool)</primary></indexterm>QWidget::create(unsigned long, bool, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;104&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::destroy(bool, bool)</primary></indexterm>QWidget::destroy(bool, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;105&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setWState(unsigned int)</primary></indexterm>NULL or QWidget::setWState(unsigned int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;106&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setWFlags(unsigned int)</primary></indexterm>NULL or QWidget::setWFlags(unsigned int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;107&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusNextPrevChild(bool)</primary></indexterm>QWidget::focusNextPrevChild(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;108&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setKeyCompression(bool)</primary></indexterm>QWidget::setKeyCompression(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;109&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMicroFocusHint(int, int, int, int, bool, QFont*)</primary></indexterm>QWidget::setMicroFocusHint(int, int, int, int, bool, QFont*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;110&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTabBar::setShape(QTabBar::Shape)</primary></indexterm>QTabBar::setShape(QTabBar::Shape)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;111&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTabBar::addTab(QTab*)</primary></indexterm>QTabBar::addTab(QTab*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;112&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTabBar::insertTab(QTab*, int)</primary></indexterm>QTabBar::insertTab(QTab*, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;113&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTabBar::removeTab(QTab*)</primary></indexterm>QTabBar::removeTab(QTab*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;114&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTabBar::setTabEnabled(int, bool)</primary></indexterm>QTabBar::setTabEnabled(int, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;115&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTabBar::layoutTabs()</primary></indexterm>QTabBar::layoutTabs()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;116&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTabBar::selectTab(QPoint const&) const</primary></indexterm>QTabBar::selectTab(QPoint const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;117&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTabBar::setCurrentTab(int)</primary></indexterm>QTabBar::setCurrentTab(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;118&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTabBar::setCurrentTab(QTab*)</primary></indexterm>QTabBar::setCurrentTab(QTab*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;119&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTabBar::paint(QPainter*, QTab*, bool) const</primary></indexterm>QTabBar::paint(QPainter*, QTab*, bool) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;120&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTabBar::paintLabel(QPainter*, QRect const&, QTab*, bool) const</primary></indexterm>QTabBar::paintLabel(QPainter*, QRect const&, QTab*, bool) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--classdata-->
<TABLE id="cls-54417-1">
<TITLE>Secondary vtable for QTabBar</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>-80</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QTabBar</primary></indexterm>typeinfo for QTabBar</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QTabBar::~QTabBar()</primary></indexterm>non-virtual thunk to QTabBar::~QTabBar()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QTabBar::~QTabBar()</primary></indexterm>non-virtual thunk to QTabBar::~QTabBar()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::setResolution(int)</primary></indexterm>QPaintDevice::setResolution(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::resolution() const</primary></indexterm>QPaintDevice::resolution() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::handle() const</primary></indexterm>QPaintDevice::handle() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::x11RenderHandle() const</primary></indexterm>QPaintDevice::x11RenderHandle() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::setX11Data(QPaintDeviceX11Data const*)</primary></indexterm>QPaintDevice::setX11Data(QPaintDeviceX11Data const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::cmd(int, QPainter*, QPDevCmdParam*)</primary></indexterm>QPaintDevice::cmd(int, QPainter*, QPDevCmdParam*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::metric(int) const</primary></indexterm>non-virtual thunk to QWidget::metric(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::fontMet(QFont*, int, char const*, int) const</primary></indexterm>QPaintDevice::fontMet(QFont*, int, char const*, int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::fontInf(QFont*, int) const</primary></indexterm>QPaintDevice::fontInf(QFont*, int) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QTabBar  class
is described by <XREF LINKEND="rtti-58554">
</PARA>
<!--classdata-->
<TABLE ID="rtti-58554">
<TITLE>typeinfo for QTabBar</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QTabBar</primary></indexterm>typeinfo name for QTabBar</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QWidget</primary></indexterm>typeinfo for QWidget</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QToolTip</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QToolTip class
is described in the generic part of this specification.
</PARA>
<PARA>
The Run Time Type Information for the QToolTip  class
is described by <XREF LINKEND="rtti-55515">
</PARA>
<!--classdata-->
<TABLE ID="rtti-55515">
<TITLE>typeinfo for QToolTip</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QToolTip</primary></indexterm>typeinfo name for QToolTip</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for Qt</primary></indexterm>typeinfo for Qt</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QCheckBox</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QCheckBox class
is described by <XREF LINKEND="cls-51950-0">
</PARA>
<!--classdata-->
<TABLE id="cls-51950-0">
<TITLE>Primary vtable for QCheckBox</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QCheckBox</primary></indexterm>typeinfo for QCheckBox</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QCheckBox::metaObject() const</primary></indexterm>NULL or QCheckBox::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QCheckBox::className() const</primary></indexterm>QCheckBox::className() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QCheckBox::qt_cast(char const*)</primary></indexterm>QCheckBox::qt_cast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QCheckBox::qt_invoke(int, QUObject*)</primary></indexterm>QCheckBox::qt_invoke(int, QUObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QCheckBox::qt_emit(int, QUObject*)</primary></indexterm>QCheckBox::qt_emit(int, QUObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QCheckBox::qt_property(int, int, QVariant*)</primary></indexterm>QCheckBox::qt_property(int, int, QVariant*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QCheckBox::~QCheckBox()</primary></indexterm>NULL or QCheckBox::~QCheckBox()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QCheckBox::~QCheckBox()</primary></indexterm>NULL or QCheckBox::~QCheckBox()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::event(QEvent*)</primary></indexterm>QWidget::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::eventFilter(QObject*, QEvent*)</primary></indexterm>QObject::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setName(char const*)</primary></indexterm>QWidget::setName(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::insertChild(QObject*)</primary></indexterm>QObject::insertChild(QObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::removeChild(QObject*)</primary></indexterm>QObject::removeChild(QObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::setProperty(char const*, QVariant const&)</primary></indexterm>QObject::setProperty(char const*, QVariant const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::property(char const*) const</primary></indexterm>QObject::property(char const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QCustomEvent*)</primary></indexterm>QObject::customEvent(QCustomEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::checkConnectArgs(char const*, QObject const*, char const*)</primary></indexterm>QObject::checkConnectArgs(char const*, QObject const*, char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setEnabled(bool)</primary></indexterm>QWidget::setEnabled(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMinimumSize(int, int)</primary></indexterm>QWidget::setMinimumSize(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMaximumSize(int, int)</primary></indexterm>QWidget::setMaximumSize(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setSizeIncrement(int, int)</primary></indexterm>QWidget::setSizeIncrement(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundMode(Qt::BackgroundMode)</primary></indexterm>QWidget::setBackgroundMode(Qt::BackgroundMode)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setEraseColor(QColor const&)</primary></indexterm>QWidget::setEraseColor(QColor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setErasePixmap(QPixmap const&)</primary></indexterm>QWidget::setErasePixmap(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setPalette(QPalette const&)</primary></indexterm>QWidget::setPalette(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setPaletteBackgroundColor(QColor const&)</primary></indexterm>QWidget::setPaletteBackgroundColor(QColor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setPaletteBackgroundPixmap(QPixmap const&)</primary></indexterm>QWidget::setPaletteBackgroundPixmap(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFont(QFont const&)</primary></indexterm>QWidget::setFont(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setCursor(QCursor const&)</primary></indexterm>QWidget::setCursor(QCursor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;33&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::unsetCursor()</primary></indexterm>QWidget::unsetCursor()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;34&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMask(QBitmap const&)</primary></indexterm>QWidget::setMask(QBitmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;35&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMask(QRegion const&)</primary></indexterm>QWidget::setMask(QRegion const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;36&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundColor(QColor const&)</primary></indexterm>QWidget::setBackgroundColor(QColor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;37&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundPixmap(QPixmap const&)</primary></indexterm>QWidget::setBackgroundPixmap(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;38&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setCaption(QString const&)</primary></indexterm>QWidget::setCaption(QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;39&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setIcon(QPixmap const&)</primary></indexterm>QWidget::setIcon(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;40&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setIconText(QString const&)</primary></indexterm>QWidget::setIconText(QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;41&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMouseTracking(bool)</primary></indexterm>QWidget::setMouseTracking(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;42&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFocus()</primary></indexterm>QWidget::setFocus()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;43&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setActiveWindow()</primary></indexterm>QWidget::setActiveWindow()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;44&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFocusPolicy(QWidget::FocusPolicy)</primary></indexterm>QWidget::setFocusPolicy(QWidget::FocusPolicy)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;45&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFocusProxy(QWidget*)</primary></indexterm>QWidget::setFocusProxy(QWidget*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;46&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setUpdatesEnabled(bool)</primary></indexterm>QWidget::setUpdatesEnabled(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;47&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::show()</primary></indexterm>QWidget::show()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;48&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::hide()</primary></indexterm>QWidget::hide()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;49&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showMinimized()</primary></indexterm>QWidget::showMinimized()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;50&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showMaximized()</primary></indexterm>QWidget::showMaximized()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;51&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showNormal()</primary></indexterm>QWidget::showNormal()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;52&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::polish()</primary></indexterm>QWidget::polish()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;53&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::move(int, int)</primary></indexterm>QWidget::move(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;54&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::resize(int, int)</primary></indexterm>QWidget::resize(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;55&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setGeometry(int, int, int, int)</primary></indexterm>QWidget::setGeometry(int, int, int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;56&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setGeometry(QRect const&)</primary></indexterm>NULL or QWidget::setGeometry(QRect const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;57&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::close(bool)</primary></indexterm>QWidget::close(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;58&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QCheckBox::sizeHint() const</primary></indexterm>QCheckBox::sizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;59&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::minimumSizeHint() const</primary></indexterm>QWidget::minimumSizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;60&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::sizePolicy() const</primary></indexterm>QWidget::sizePolicy() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;61&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setSizePolicy(QSizePolicy)</primary></indexterm>QWidget::setSizePolicy(QSizePolicy)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;62&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::heightForWidth(int) const</primary></indexterm>QWidget::heightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;63&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::adjustSize()</primary></indexterm>QWidget::adjustSize()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;64&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::reparent(QWidget*, unsigned int, QPoint const&, bool)</primary></indexterm>QWidget::reparent(QWidget*, unsigned int, QPoint const&, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;65&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setAcceptDrops(bool)</primary></indexterm>QWidget::setAcceptDrops(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;66&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setAutoMask(bool)</primary></indexterm>QWidget::setAutoMask(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;67&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundOrigin(QWidget::BackgroundOrigin)</primary></indexterm>QWidget::setBackgroundOrigin(QWidget::BackgroundOrigin)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;68&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::customWhatsThis() const</primary></indexterm>QWidget::customWhatsThis() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;69&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QButton::mousePressEvent(QMouseEvent*)</primary></indexterm>QButton::mousePressEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;70&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QButton::mouseReleaseEvent(QMouseEvent*)</primary></indexterm>QButton::mouseReleaseEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;71&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseDoubleClickEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseDoubleClickEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;72&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QButton::mouseMoveEvent(QMouseEvent*)</primary></indexterm>QButton::mouseMoveEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;73&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::wheelEvent(QWheelEvent*)</primary></indexterm>QWidget::wheelEvent(QWheelEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;74&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QButton::keyPressEvent(QKeyEvent*)</primary></indexterm>QButton::keyPressEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;75&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QButton::keyReleaseEvent(QKeyEvent*)</primary></indexterm>QButton::keyReleaseEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;76&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QButton::focusInEvent(QFocusEvent*)</primary></indexterm>QButton::focusInEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;77&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QButton::focusOutEvent(QFocusEvent*)</primary></indexterm>QButton::focusOutEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;78&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enterEvent(QEvent*)</primary></indexterm>QWidget::enterEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;79&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::leaveEvent(QEvent*)</primary></indexterm>QWidget::leaveEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;80&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QButton::paintEvent(QPaintEvent*)</primary></indexterm>QButton::paintEvent(QPaintEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;81&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::moveEvent(QMoveEvent*)</primary></indexterm>QWidget::moveEvent(QMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;82&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QCheckBox::resizeEvent(QResizeEvent*)</primary></indexterm>QCheckBox::resizeEvent(QResizeEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;83&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::closeEvent(QCloseEvent*)</primary></indexterm>QWidget::closeEvent(QCloseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;84&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::contextMenuEvent(QContextMenuEvent*)</primary></indexterm>QWidget::contextMenuEvent(QContextMenuEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;85&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::imStartEvent(QIMEvent*)</primary></indexterm>QWidget::imStartEvent(QIMEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;86&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::imComposeEvent(QIMEvent*)</primary></indexterm>QWidget::imComposeEvent(QIMEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;87&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::imEndEvent(QIMEvent*)</primary></indexterm>QWidget::imEndEvent(QIMEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;88&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::tabletEvent(QTabletEvent*)</primary></indexterm>QWidget::tabletEvent(QTabletEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;89&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragEnterEvent(QDragEnterEvent*)</primary></indexterm>QWidget::dragEnterEvent(QDragEnterEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;90&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragMoveEvent(QDragMoveEvent*)</primary></indexterm>QWidget::dragMoveEvent(QDragMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;91&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragLeaveEvent(QDragLeaveEvent*)</primary></indexterm>QWidget::dragLeaveEvent(QDragLeaveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;92&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dropEvent(QDropEvent*)</primary></indexterm>QWidget::dropEvent(QDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;93&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showEvent(QShowEvent*)</primary></indexterm>QWidget::showEvent(QShowEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;94&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::hideEvent(QHideEvent*)</primary></indexterm>QWidget::hideEvent(QHideEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;95&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::x11Event(_XEvent*)</primary></indexterm>QWidget::x11Event(_XEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;96&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QCheckBox::updateMask()</primary></indexterm>QCheckBox::updateMask()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;97&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::styleChange(QStyle&)</primary></indexterm>QWidget::styleChange(QStyle&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;98&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QButton::enabledChange(bool)</primary></indexterm>QButton::enabledChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;99&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paletteChange(QPalette const&)</primary></indexterm>QWidget::paletteChange(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;100&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::fontChange(QFont const&)</primary></indexterm>QWidget::fontChange(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;101&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::windowActivationChange(bool)</primary></indexterm>QWidget::windowActivationChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;102&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::metric(int) const</primary></indexterm>QWidget::metric(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;103&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::create(unsigned long, bool, bool)</primary></indexterm>QWidget::create(unsigned long, bool, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;104&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::destroy(bool, bool)</primary></indexterm>QWidget::destroy(bool, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;105&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setWState(unsigned int)</primary></indexterm>NULL or QWidget::setWState(unsigned int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;106&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setWFlags(unsigned int)</primary></indexterm>NULL or QWidget::setWFlags(unsigned int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;107&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusNextPrevChild(bool)</primary></indexterm>QWidget::focusNextPrevChild(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;108&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setKeyCompression(bool)</primary></indexterm>QWidget::setKeyCompression(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;109&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMicroFocusHint(int, int, int, int, bool, QFont*)</primary></indexterm>QWidget::setMicroFocusHint(int, int, int, int, bool, QFont*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;110&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QButton::setText(QString const&)</primary></indexterm>QButton::setText(QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;111&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QButton::setPixmap(QPixmap const&)</primary></indexterm>QButton::setPixmap(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;112&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QButton::setAccel(QKeySequence const&)</primary></indexterm>QButton::setAccel(QKeySequence const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;113&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QButton::setDown(bool)</primary></indexterm>QButton::setDown(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;114&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QButton::setAutoRepeat(bool)</primary></indexterm>QButton::setAutoRepeat(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;115&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QButton::setToggleType(QButton::ToggleType)</primary></indexterm>QButton::setToggleType(QButton::ToggleType)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;116&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QButton::setState(QButton::ToggleState)</primary></indexterm>QButton::setState(QButton::ToggleState)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;117&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QCheckBox::hitButton(QPoint const&) const</primary></indexterm>QCheckBox::hitButton(QPoint const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;118&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QCheckBox::drawButton(QPainter*)</primary></indexterm>QCheckBox::drawButton(QPainter*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;119&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QCheckBox::drawButtonLabel(QPainter*)</primary></indexterm>QCheckBox::drawButtonLabel(QPainter*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;120&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QButton::setGroup(QButtonGroup*)</primary></indexterm>QButton::setGroup(QButtonGroup*)</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--classdata-->
<TABLE id="cls-51950-1">
<TITLE>Secondary vtable for QCheckBox</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>-80</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QCheckBox</primary></indexterm>typeinfo for QCheckBox</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QCheckBox::~QCheckBox()</primary></indexterm>non-virtual thunk to QCheckBox::~QCheckBox()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QCheckBox::~QCheckBox()</primary></indexterm>non-virtual thunk to QCheckBox::~QCheckBox()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::setResolution(int)</primary></indexterm>QPaintDevice::setResolution(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::resolution() const</primary></indexterm>QPaintDevice::resolution() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::handle() const</primary></indexterm>QPaintDevice::handle() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::x11RenderHandle() const</primary></indexterm>QPaintDevice::x11RenderHandle() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::setX11Data(QPaintDeviceX11Data const*)</primary></indexterm>QPaintDevice::setX11Data(QPaintDeviceX11Data const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::cmd(int, QPainter*, QPDevCmdParam*)</primary></indexterm>QPaintDevice::cmd(int, QPainter*, QPDevCmdParam*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::metric(int) const</primary></indexterm>non-virtual thunk to QWidget::metric(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::fontMet(QFont*, int, char const*, int) const</primary></indexterm>QPaintDevice::fontMet(QFont*, int, char const*, int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::fontInf(QFont*, int) const</primary></indexterm>QPaintDevice::fontInf(QFont*, int) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QCheckBox  class
is described by <XREF LINKEND="rtti-50309">
</PARA>
<!--classdata-->
<TABLE ID="rtti-50309">
<TITLE>typeinfo for QCheckBox</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QCheckBox</primary></indexterm>typeinfo name for QCheckBox</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QButton</primary></indexterm>typeinfo for QButton</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QDockWindow</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QDockWindow class
is described by <XREF LINKEND="cls-51434-0">
</PARA>
<!--classdata-->
<TABLE id="cls-51434-0">
<TITLE>Primary vtable for QDockWindow</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QDockWindow</primary></indexterm>typeinfo for QDockWindow</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDockWindow::metaObject() const</primary></indexterm>NULL or QDockWindow::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDockWindow::className() const</primary></indexterm>QDockWindow::className() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDockWindow::qt_cast(char const*)</primary></indexterm>QDockWindow::qt_cast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDockWindow::qt_invoke(int, QUObject*)</primary></indexterm>QDockWindow::qt_invoke(int, QUObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDockWindow::qt_emit(int, QUObject*)</primary></indexterm>QDockWindow::qt_emit(int, QUObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDockWindow::qt_property(int, int, QVariant*)</primary></indexterm>QDockWindow::qt_property(int, int, QVariant*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDockWindow::~QDockWindow()</primary></indexterm>QDockWindow::~QDockWindow()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDockWindow::~QDockWindow()</primary></indexterm>QDockWindow::~QDockWindow()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDockWindow::event(QEvent*)</primary></indexterm>QDockWindow::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDockWindow::eventFilter(QObject*, QEvent*)</primary></indexterm>QDockWindow::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setName(char const*)</primary></indexterm>QWidget::setName(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::insertChild(QObject*)</primary></indexterm>QObject::insertChild(QObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::removeChild(QObject*)</primary></indexterm>QObject::removeChild(QObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::setProperty(char const*, QVariant const&)</primary></indexterm>QObject::setProperty(char const*, QVariant const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::property(char const*) const</primary></indexterm>QObject::property(char const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QCustomEvent*)</primary></indexterm>QObject::customEvent(QCustomEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::checkConnectArgs(char const*, QObject const*, char const*)</primary></indexterm>QObject::checkConnectArgs(char const*, QObject const*, char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setEnabled(bool)</primary></indexterm>QWidget::setEnabled(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMinimumSize(int, int)</primary></indexterm>QWidget::setMinimumSize(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMaximumSize(int, int)</primary></indexterm>QWidget::setMaximumSize(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setSizeIncrement(int, int)</primary></indexterm>QWidget::setSizeIncrement(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundMode(Qt::BackgroundMode)</primary></indexterm>QWidget::setBackgroundMode(Qt::BackgroundMode)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setEraseColor(QColor const&)</primary></indexterm>QWidget::setEraseColor(QColor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setErasePixmap(QPixmap const&)</primary></indexterm>QWidget::setErasePixmap(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setPalette(QPalette const&)</primary></indexterm>QWidget::setPalette(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setPaletteBackgroundColor(QColor const&)</primary></indexterm>QWidget::setPaletteBackgroundColor(QColor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setPaletteBackgroundPixmap(QPixmap const&)</primary></indexterm>QWidget::setPaletteBackgroundPixmap(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFont(QFont const&)</primary></indexterm>QWidget::setFont(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setCursor(QCursor const&)</primary></indexterm>QWidget::setCursor(QCursor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;33&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::unsetCursor()</primary></indexterm>QWidget::unsetCursor()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;34&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMask(QBitmap const&)</primary></indexterm>QWidget::setMask(QBitmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;35&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMask(QRegion const&)</primary></indexterm>QWidget::setMask(QRegion const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;36&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundColor(QColor const&)</primary></indexterm>QWidget::setBackgroundColor(QColor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;37&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundPixmap(QPixmap const&)</primary></indexterm>QWidget::setBackgroundPixmap(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;38&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDockWindow::setCaption(QString const&)</primary></indexterm>QDockWindow::setCaption(QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;39&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setIcon(QPixmap const&)</primary></indexterm>QWidget::setIcon(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;40&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setIconText(QString const&)</primary></indexterm>QWidget::setIconText(QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;41&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMouseTracking(bool)</primary></indexterm>QWidget::setMouseTracking(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;42&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFocus()</primary></indexterm>QWidget::setFocus()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;43&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setActiveWindow()</primary></indexterm>QWidget::setActiveWindow()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;44&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFocusPolicy(QWidget::FocusPolicy)</primary></indexterm>QWidget::setFocusPolicy(QWidget::FocusPolicy)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;45&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFocusProxy(QWidget*)</primary></indexterm>QWidget::setFocusProxy(QWidget*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;46&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setUpdatesEnabled(bool)</primary></indexterm>QWidget::setUpdatesEnabled(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;47&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::show()</primary></indexterm>QWidget::show()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;48&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::hide()</primary></indexterm>QWidget::hide()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;49&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showMinimized()</primary></indexterm>QWidget::showMinimized()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;50&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showMaximized()</primary></indexterm>QWidget::showMaximized()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;51&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showNormal()</primary></indexterm>QWidget::showNormal()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;52&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::polish()</primary></indexterm>QWidget::polish()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;53&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::move(int, int)</primary></indexterm>QWidget::move(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;54&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::resize(int, int)</primary></indexterm>QWidget::resize(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;55&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setGeometry(int, int, int, int)</primary></indexterm>QWidget::setGeometry(int, int, int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;56&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setGeometry(QRect const&)</primary></indexterm>NULL or QWidget::setGeometry(QRect const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;57&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::close(bool)</primary></indexterm>QWidget::close(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;58&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDockWindow::sizeHint() const</primary></indexterm>QDockWindow::sizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;59&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDockWindow::minimumSizeHint() const</primary></indexterm>QDockWindow::minimumSizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;60&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::sizePolicy() const</primary></indexterm>QWidget::sizePolicy() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;61&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setSizePolicy(QSizePolicy)</primary></indexterm>QWidget::setSizePolicy(QSizePolicy)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;62&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::heightForWidth(int) const</primary></indexterm>QWidget::heightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;63&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::adjustSize()</primary></indexterm>QWidget::adjustSize()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;64&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::reparent(QWidget*, unsigned int, QPoint const&, bool)</primary></indexterm>QWidget::reparent(QWidget*, unsigned int, QPoint const&, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;65&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setAcceptDrops(bool)</primary></indexterm>QWidget::setAcceptDrops(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;66&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setAutoMask(bool)</primary></indexterm>QWidget::setAutoMask(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;67&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundOrigin(QWidget::BackgroundOrigin)</primary></indexterm>QWidget::setBackgroundOrigin(QWidget::BackgroundOrigin)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;68&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::customWhatsThis() const</primary></indexterm>QWidget::customWhatsThis() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;69&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mousePressEvent(QMouseEvent*)</primary></indexterm>QWidget::mousePressEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;70&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseReleaseEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseReleaseEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;71&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseDoubleClickEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseDoubleClickEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;72&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseMoveEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseMoveEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;73&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::wheelEvent(QWheelEvent*)</primary></indexterm>QWidget::wheelEvent(QWheelEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;74&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyPressEvent(QKeyEvent*)</primary></indexterm>QWidget::keyPressEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;75&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyReleaseEvent(QKeyEvent*)</primary></indexterm>QWidget::keyReleaseEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;76&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusInEvent(QFocusEvent*)</primary></indexterm>QWidget::focusInEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;77&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusOutEvent(QFocusEvent*)</primary></indexterm>QWidget::focusOutEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;78&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enterEvent(QEvent*)</primary></indexterm>QWidget::enterEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;79&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::leaveEvent(QEvent*)</primary></indexterm>QWidget::leaveEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;80&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::paintEvent(QPaintEvent*)</primary></indexterm>QFrame::paintEvent(QPaintEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;81&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::moveEvent(QMoveEvent*)</primary></indexterm>QWidget::moveEvent(QMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;82&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDockWindow::resizeEvent(QResizeEvent*)</primary></indexterm>QDockWindow::resizeEvent(QResizeEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;83&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::closeEvent(QCloseEvent*)</primary></indexterm>QWidget::closeEvent(QCloseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;84&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDockWindow::contextMenuEvent(QContextMenuEvent*)</primary></indexterm>QDockWindow::contextMenuEvent(QContextMenuEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;85&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::imStartEvent(QIMEvent*)</primary></indexterm>QWidget::imStartEvent(QIMEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;86&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::imComposeEvent(QIMEvent*)</primary></indexterm>QWidget::imComposeEvent(QIMEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;87&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::imEndEvent(QIMEvent*)</primary></indexterm>QWidget::imEndEvent(QIMEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;88&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::tabletEvent(QTabletEvent*)</primary></indexterm>QWidget::tabletEvent(QTabletEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;89&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragEnterEvent(QDragEnterEvent*)</primary></indexterm>QWidget::dragEnterEvent(QDragEnterEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;90&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragMoveEvent(QDragMoveEvent*)</primary></indexterm>QWidget::dragMoveEvent(QDragMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;91&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragLeaveEvent(QDragLeaveEvent*)</primary></indexterm>QWidget::dragLeaveEvent(QDragLeaveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;92&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dropEvent(QDropEvent*)</primary></indexterm>QWidget::dropEvent(QDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;93&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDockWindow::showEvent(QShowEvent*)</primary></indexterm>QDockWindow::showEvent(QShowEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;94&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDockWindow::hideEvent(QHideEvent*)</primary></indexterm>QDockWindow::hideEvent(QHideEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;95&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::x11Event(_XEvent*)</primary></indexterm>QWidget::x11Event(_XEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;96&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::updateMask()</primary></indexterm>QWidget::updateMask()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;97&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::styleChange(QStyle&)</primary></indexterm>QFrame::styleChange(QStyle&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;98&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enabledChange(bool)</primary></indexterm>QWidget::enabledChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;99&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paletteChange(QPalette const&)</primary></indexterm>QWidget::paletteChange(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;100&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::fontChange(QFont const&)</primary></indexterm>QWidget::fontChange(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;101&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::windowActivationChange(bool)</primary></indexterm>QWidget::windowActivationChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;102&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::metric(int) const</primary></indexterm>QWidget::metric(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;103&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::create(unsigned long, bool, bool)</primary></indexterm>QWidget::create(unsigned long, bool, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;104&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::destroy(bool, bool)</primary></indexterm>QWidget::destroy(bool, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;105&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setWState(unsigned int)</primary></indexterm>NULL or QWidget::setWState(unsigned int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;106&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setWFlags(unsigned int)</primary></indexterm>NULL or QWidget::setWFlags(unsigned int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;107&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusNextPrevChild(bool)</primary></indexterm>QWidget::focusNextPrevChild(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;108&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setKeyCompression(bool)</primary></indexterm>QWidget::setKeyCompression(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;109&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMicroFocusHint(int, int, int, int, bool, QFont*)</primary></indexterm>QWidget::setMicroFocusHint(int, int, int, int, bool, QFont*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;110&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::setFrameStyle(int)</primary></indexterm>QFrame::setFrameStyle(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;111&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::setLineWidth(int)</primary></indexterm>QFrame::setLineWidth(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;112&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::setMargin(int)</primary></indexterm>QFrame::setMargin(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;113&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::setMidLineWidth(int)</primary></indexterm>QFrame::setMidLineWidth(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;114&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::setFrameRect(QRect const&)</primary></indexterm>QFrame::setFrameRect(QRect const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;115&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDockWindow::drawFrame(QPainter*)</primary></indexterm>QDockWindow::drawFrame(QPainter*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;116&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDockWindow::drawContents(QPainter*)</primary></indexterm>QDockWindow::drawContents(QPainter*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;117&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::frameChanged()</primary></indexterm>QFrame::frameChanged()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;118&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDockWindow::setWidget(QWidget*)</primary></indexterm>QDockWindow::setWidget(QWidget*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;119&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDockWindow::setCloseMode(int)</primary></indexterm>QDockWindow::setCloseMode(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;120&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDockWindow::setResizeEnabled(bool)</primary></indexterm>QDockWindow::setResizeEnabled(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;121&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDockWindow::setMovingEnabled(bool)</primary></indexterm>QDockWindow::setMovingEnabled(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;122&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDockWindow::setHorizontallyStretchable(bool)</primary></indexterm>QDockWindow::setHorizontallyStretchable(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;123&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDockWindow::setVerticallyStretchable(bool)</primary></indexterm>QDockWindow::setVerticallyStretchable(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;124&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDockWindow::setOffset(int)</primary></indexterm>QDockWindow::setOffset(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;125&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDockWindow::setFixedExtentWidth(int)</primary></indexterm>QDockWindow::setFixedExtentWidth(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;126&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDockWindow::setFixedExtentHeight(int)</primary></indexterm>QDockWindow::setFixedExtentHeight(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;127&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDockWindow::setNewLine(bool)</primary></indexterm>QDockWindow::setNewLine(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;128&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDockWindow::setOpaqueMoving(bool)</primary></indexterm>QDockWindow::setOpaqueMoving(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;129&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDockWindow::undock(QWidget*)</primary></indexterm>QDockWindow::undock(QWidget*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;130&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDockWindow::undock()</primary></indexterm>NULL or QDockWindow::undock()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;131&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDockWindow::dock()</primary></indexterm>QDockWindow::dock()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;132&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDockWindow::setOrientation(Qt::Orientation)</primary></indexterm>QDockWindow::setOrientation(Qt::Orientation)</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--classdata-->
<TABLE id="cls-51434-1">
<TITLE>Secondary vtable for QDockWindow</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>-80</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QDockWindow</primary></indexterm>typeinfo for QDockWindow</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QDockWindow::~QDockWindow()</primary></indexterm>non-virtual thunk to QDockWindow::~QDockWindow()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QDockWindow::~QDockWindow()</primary></indexterm>non-virtual thunk to QDockWindow::~QDockWindow()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::setResolution(int)</primary></indexterm>QPaintDevice::setResolution(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::resolution() const</primary></indexterm>QPaintDevice::resolution() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::handle() const</primary></indexterm>QPaintDevice::handle() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::x11RenderHandle() const</primary></indexterm>QPaintDevice::x11RenderHandle() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::setX11Data(QPaintDeviceX11Data const*)</primary></indexterm>QPaintDevice::setX11Data(QPaintDeviceX11Data const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::cmd(int, QPainter*, QPDevCmdParam*)</primary></indexterm>QPaintDevice::cmd(int, QPainter*, QPDevCmdParam*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::metric(int) const</primary></indexterm>non-virtual thunk to QWidget::metric(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::fontMet(QFont*, int, char const*, int) const</primary></indexterm>QPaintDevice::fontMet(QFont*, int, char const*, int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::fontInf(QFont*, int) const</primary></indexterm>QPaintDevice::fontInf(QFont*, int) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QDockWindow  class
is described by <XREF LINKEND="rtti-50723">
</PARA>
<!--classdata-->
<TABLE ID="rtti-50723">
<TITLE>typeinfo for QDockWindow</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QDockWindow</primary></indexterm>typeinfo name for QDockWindow</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QFrame</primary></indexterm>typeinfo for QFrame</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QSpinWidget</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QSpinWidget class
is described by <XREF LINKEND="cls-57224-0">
</PARA>
<!--classdata-->
<TABLE id="cls-57224-0">
<TITLE>Primary vtable for QSpinWidget</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QSpinWidget</primary></indexterm>typeinfo for QSpinWidget</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSpinWidget::metaObject() const</primary></indexterm>NULL or QSpinWidget::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSpinWidget::className() const</primary></indexterm>QSpinWidget::className() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSpinWidget::qt_cast(char const*)</primary></indexterm>QSpinWidget::qt_cast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSpinWidget::qt_invoke(int, QUObject*)</primary></indexterm>QSpinWidget::qt_invoke(int, QUObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSpinWidget::qt_emit(int, QUObject*)</primary></indexterm>QSpinWidget::qt_emit(int, QUObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSpinWidget::qt_property(int, int, QVariant*)</primary></indexterm>QSpinWidget::qt_property(int, int, QVariant*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSpinWidget::~QSpinWidget()</primary></indexterm>QSpinWidget::~QSpinWidget()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSpinWidget::~QSpinWidget()</primary></indexterm>QSpinWidget::~QSpinWidget()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::event(QEvent*)</primary></indexterm>QWidget::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::eventFilter(QObject*, QEvent*)</primary></indexterm>QObject::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setName(char const*)</primary></indexterm>QWidget::setName(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::insertChild(QObject*)</primary></indexterm>QObject::insertChild(QObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::removeChild(QObject*)</primary></indexterm>QObject::removeChild(QObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::setProperty(char const*, QVariant const&)</primary></indexterm>QObject::setProperty(char const*, QVariant const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::property(char const*) const</primary></indexterm>QObject::property(char const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QCustomEvent*)</primary></indexterm>QObject::customEvent(QCustomEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::checkConnectArgs(char const*, QObject const*, char const*)</primary></indexterm>QObject::checkConnectArgs(char const*, QObject const*, char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setEnabled(bool)</primary></indexterm>QWidget::setEnabled(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMinimumSize(int, int)</primary></indexterm>QWidget::setMinimumSize(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMaximumSize(int, int)</primary></indexterm>QWidget::setMaximumSize(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setSizeIncrement(int, int)</primary></indexterm>QWidget::setSizeIncrement(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundMode(Qt::BackgroundMode)</primary></indexterm>QWidget::setBackgroundMode(Qt::BackgroundMode)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setEraseColor(QColor const&)</primary></indexterm>QWidget::setEraseColor(QColor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setErasePixmap(QPixmap const&)</primary></indexterm>QWidget::setErasePixmap(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setPalette(QPalette const&)</primary></indexterm>QWidget::setPalette(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setPaletteBackgroundColor(QColor const&)</primary></indexterm>QWidget::setPaletteBackgroundColor(QColor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setPaletteBackgroundPixmap(QPixmap const&)</primary></indexterm>QWidget::setPaletteBackgroundPixmap(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFont(QFont const&)</primary></indexterm>QWidget::setFont(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setCursor(QCursor const&)</primary></indexterm>QWidget::setCursor(QCursor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;33&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::unsetCursor()</primary></indexterm>QWidget::unsetCursor()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;34&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMask(QBitmap const&)</primary></indexterm>QWidget::setMask(QBitmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;35&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMask(QRegion const&)</primary></indexterm>QWidget::setMask(QRegion const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;36&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundColor(QColor const&)</primary></indexterm>QWidget::setBackgroundColor(QColor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;37&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundPixmap(QPixmap const&)</primary></indexterm>QWidget::setBackgroundPixmap(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;38&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setCaption(QString const&)</primary></indexterm>QWidget::setCaption(QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;39&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setIcon(QPixmap const&)</primary></indexterm>QWidget::setIcon(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;40&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setIconText(QString const&)</primary></indexterm>QWidget::setIconText(QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;41&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMouseTracking(bool)</primary></indexterm>QWidget::setMouseTracking(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;42&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFocus()</primary></indexterm>QWidget::setFocus()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;43&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setActiveWindow()</primary></indexterm>QWidget::setActiveWindow()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;44&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFocusPolicy(QWidget::FocusPolicy)</primary></indexterm>QWidget::setFocusPolicy(QWidget::FocusPolicy)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;45&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFocusProxy(QWidget*)</primary></indexterm>QWidget::setFocusProxy(QWidget*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;46&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setUpdatesEnabled(bool)</primary></indexterm>QWidget::setUpdatesEnabled(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;47&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::show()</primary></indexterm>QWidget::show()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;48&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::hide()</primary></indexterm>QWidget::hide()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;49&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showMinimized()</primary></indexterm>QWidget::showMinimized()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;50&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showMaximized()</primary></indexterm>QWidget::showMaximized()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;51&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showNormal()</primary></indexterm>QWidget::showNormal()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;52&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::polish()</primary></indexterm>QWidget::polish()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;53&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::move(int, int)</primary></indexterm>QWidget::move(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;54&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::resize(int, int)</primary></indexterm>QWidget::resize(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;55&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setGeometry(int, int, int, int)</primary></indexterm>QWidget::setGeometry(int, int, int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;56&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setGeometry(QRect const&)</primary></indexterm>NULL or QWidget::setGeometry(QRect const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;57&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::close(bool)</primary></indexterm>QWidget::close(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;58&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::sizeHint() const</primary></indexterm>QWidget::sizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;59&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::minimumSizeHint() const</primary></indexterm>QWidget::minimumSizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;60&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::sizePolicy() const</primary></indexterm>QWidget::sizePolicy() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;61&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setSizePolicy(QSizePolicy)</primary></indexterm>QWidget::setSizePolicy(QSizePolicy)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;62&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::heightForWidth(int) const</primary></indexterm>QWidget::heightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;63&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::adjustSize()</primary></indexterm>QWidget::adjustSize()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;64&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::reparent(QWidget*, unsigned int, QPoint const&, bool)</primary></indexterm>QWidget::reparent(QWidget*, unsigned int, QPoint const&, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;65&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setAcceptDrops(bool)</primary></indexterm>QWidget::setAcceptDrops(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;66&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setAutoMask(bool)</primary></indexterm>QWidget::setAutoMask(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;67&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundOrigin(QWidget::BackgroundOrigin)</primary></indexterm>QWidget::setBackgroundOrigin(QWidget::BackgroundOrigin)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;68&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::customWhatsThis() const</primary></indexterm>QWidget::customWhatsThis() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;69&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSpinWidget::mousePressEvent(QMouseEvent*)</primary></indexterm>QSpinWidget::mousePressEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;70&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSpinWidget::mouseReleaseEvent(QMouseEvent*)</primary></indexterm>QSpinWidget::mouseReleaseEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;71&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseDoubleClickEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseDoubleClickEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;72&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSpinWidget::mouseMoveEvent(QMouseEvent*)</primary></indexterm>QSpinWidget::mouseMoveEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;73&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSpinWidget::wheelEvent(QWheelEvent*)</primary></indexterm>QSpinWidget::wheelEvent(QWheelEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;74&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyPressEvent(QKeyEvent*)</primary></indexterm>QWidget::keyPressEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;75&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyReleaseEvent(QKeyEvent*)</primary></indexterm>QWidget::keyReleaseEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;76&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusInEvent(QFocusEvent*)</primary></indexterm>QWidget::focusInEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;77&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusOutEvent(QFocusEvent*)</primary></indexterm>QWidget::focusOutEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;78&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enterEvent(QEvent*)</primary></indexterm>QWidget::enterEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;79&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::leaveEvent(QEvent*)</primary></indexterm>QWidget::leaveEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;80&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSpinWidget::paintEvent(QPaintEvent*)</primary></indexterm>QSpinWidget::paintEvent(QPaintEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;81&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::moveEvent(QMoveEvent*)</primary></indexterm>QWidget::moveEvent(QMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;82&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSpinWidget::resizeEvent(QResizeEvent*)</primary></indexterm>QSpinWidget::resizeEvent(QResizeEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;83&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::closeEvent(QCloseEvent*)</primary></indexterm>QWidget::closeEvent(QCloseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;84&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::contextMenuEvent(QContextMenuEvent*)</primary></indexterm>QWidget::contextMenuEvent(QContextMenuEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;85&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::imStartEvent(QIMEvent*)</primary></indexterm>QWidget::imStartEvent(QIMEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;86&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::imComposeEvent(QIMEvent*)</primary></indexterm>QWidget::imComposeEvent(QIMEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;87&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::imEndEvent(QIMEvent*)</primary></indexterm>QWidget::imEndEvent(QIMEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;88&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::tabletEvent(QTabletEvent*)</primary></indexterm>QWidget::tabletEvent(QTabletEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;89&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragEnterEvent(QDragEnterEvent*)</primary></indexterm>QWidget::dragEnterEvent(QDragEnterEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;90&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragMoveEvent(QDragMoveEvent*)</primary></indexterm>QWidget::dragMoveEvent(QDragMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;91&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragLeaveEvent(QDragLeaveEvent*)</primary></indexterm>QWidget::dragLeaveEvent(QDragLeaveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;92&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dropEvent(QDropEvent*)</primary></indexterm>QWidget::dropEvent(QDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;93&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showEvent(QShowEvent*)</primary></indexterm>QWidget::showEvent(QShowEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;94&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::hideEvent(QHideEvent*)</primary></indexterm>QWidget::hideEvent(QHideEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;95&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::x11Event(_XEvent*)</primary></indexterm>QWidget::x11Event(_XEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;96&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::updateMask()</primary></indexterm>QWidget::updateMask()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;97&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSpinWidget::styleChange(QStyle&)</primary></indexterm>QSpinWidget::styleChange(QStyle&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;98&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enabledChange(bool)</primary></indexterm>QWidget::enabledChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;99&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paletteChange(QPalette const&)</primary></indexterm>QWidget::paletteChange(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;100&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::fontChange(QFont const&)</primary></indexterm>QWidget::fontChange(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;101&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSpinWidget::windowActivationChange(bool)</primary></indexterm>QSpinWidget::windowActivationChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;102&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::metric(int) const</primary></indexterm>QWidget::metric(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;103&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::create(unsigned long, bool, bool)</primary></indexterm>QWidget::create(unsigned long, bool, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;104&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::destroy(bool, bool)</primary></indexterm>QWidget::destroy(bool, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;105&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setWState(unsigned int)</primary></indexterm>NULL or QWidget::setWState(unsigned int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;106&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setWFlags(unsigned int)</primary></indexterm>NULL or QWidget::setWFlags(unsigned int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;107&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusNextPrevChild(bool)</primary></indexterm>QWidget::focusNextPrevChild(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;108&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setKeyCompression(bool)</primary></indexterm>QWidget::setKeyCompression(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;109&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMicroFocusHint(int, int, int, int, bool, QFont*)</primary></indexterm>QWidget::setMicroFocusHint(int, int, int, int, bool, QFont*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;110&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSpinWidget::setButtonSymbols(QSpinWidget::ButtonSymbols)</primary></indexterm>QSpinWidget::setButtonSymbols(QSpinWidget::ButtonSymbols)</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--classdata-->
<TABLE id="cls-57224-1">
<TITLE>Secondary vtable for QSpinWidget</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>-80</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QSpinWidget</primary></indexterm>typeinfo for QSpinWidget</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QSpinWidget::~QSpinWidget()</primary></indexterm>non-virtual thunk to QSpinWidget::~QSpinWidget()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QSpinWidget::~QSpinWidget()</primary></indexterm>non-virtual thunk to QSpinWidget::~QSpinWidget()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::setResolution(int)</primary></indexterm>QPaintDevice::setResolution(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::resolution() const</primary></indexterm>QPaintDevice::resolution() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::handle() const</primary></indexterm>QPaintDevice::handle() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::x11RenderHandle() const</primary></indexterm>QPaintDevice::x11RenderHandle() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::setX11Data(QPaintDeviceX11Data const*)</primary></indexterm>QPaintDevice::setX11Data(QPaintDeviceX11Data const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::cmd(int, QPainter*, QPDevCmdParam*)</primary></indexterm>QPaintDevice::cmd(int, QPainter*, QPDevCmdParam*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::metric(int) const</primary></indexterm>non-virtual thunk to QWidget::metric(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::fontMet(QFont*, int, char const*, int) const</primary></indexterm>QPaintDevice::fontMet(QFont*, int, char const*, int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::fontInf(QFont*, int) const</primary></indexterm>QPaintDevice::fontInf(QFont*, int) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QSpinWidget  class
is described by <XREF LINKEND="rtti-56589">
</PARA>
<!--classdata-->
<TABLE ID="rtti-56589">
<TITLE>typeinfo for QSpinWidget</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QSpinWidget</primary></indexterm>typeinfo name for QSpinWidget</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QWidget</primary></indexterm>typeinfo for QWidget</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QToolBox</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QToolBox class
is described by <XREF LINKEND="cls-52758-0">
</PARA>
<!--classdata-->
<TABLE id="cls-52758-0">
<TITLE>Primary vtable for QToolBox</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QToolBox</primary></indexterm>typeinfo for QToolBox</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QToolBox::metaObject() const</primary></indexterm>NULL or QToolBox::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QToolBox::className() const</primary></indexterm>QToolBox::className() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QToolBox::qt_cast(char const*)</primary></indexterm>QToolBox::qt_cast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QToolBox::qt_invoke(int, QUObject*)</primary></indexterm>QToolBox::qt_invoke(int, QUObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QToolBox::qt_emit(int, QUObject*)</primary></indexterm>QToolBox::qt_emit(int, QUObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QToolBox::qt_property(int, int, QVariant*)</primary></indexterm>QToolBox::qt_property(int, int, QVariant*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QToolBox::~QToolBox()</primary></indexterm>QToolBox::~QToolBox()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QToolBox::~QToolBox()</primary></indexterm>QToolBox::~QToolBox()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::event(QEvent*)</primary></indexterm>QWidget::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::eventFilter(QObject*, QEvent*)</primary></indexterm>QObject::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setName(char const*)</primary></indexterm>QWidget::setName(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::insertChild(QObject*)</primary></indexterm>QObject::insertChild(QObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::removeChild(QObject*)</primary></indexterm>QObject::removeChild(QObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::setProperty(char const*, QVariant const&)</primary></indexterm>QObject::setProperty(char const*, QVariant const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::property(char const*) const</primary></indexterm>QObject::property(char const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QCustomEvent*)</primary></indexterm>QObject::customEvent(QCustomEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::checkConnectArgs(char const*, QObject const*, char const*)</primary></indexterm>QObject::checkConnectArgs(char const*, QObject const*, char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setEnabled(bool)</primary></indexterm>QWidget::setEnabled(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMinimumSize(int, int)</primary></indexterm>QWidget::setMinimumSize(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMaximumSize(int, int)</primary></indexterm>QWidget::setMaximumSize(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setSizeIncrement(int, int)</primary></indexterm>QWidget::setSizeIncrement(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundMode(Qt::BackgroundMode)</primary></indexterm>QWidget::setBackgroundMode(Qt::BackgroundMode)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setEraseColor(QColor const&)</primary></indexterm>QWidget::setEraseColor(QColor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setErasePixmap(QPixmap const&)</primary></indexterm>QWidget::setErasePixmap(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setPalette(QPalette const&)</primary></indexterm>QWidget::setPalette(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setPaletteBackgroundColor(QColor const&)</primary></indexterm>QWidget::setPaletteBackgroundColor(QColor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setPaletteBackgroundPixmap(QPixmap const&)</primary></indexterm>QWidget::setPaletteBackgroundPixmap(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFont(QFont const&)</primary></indexterm>QWidget::setFont(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setCursor(QCursor const&)</primary></indexterm>QWidget::setCursor(QCursor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;33&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::unsetCursor()</primary></indexterm>QWidget::unsetCursor()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;34&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMask(QBitmap const&)</primary></indexterm>QWidget::setMask(QBitmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;35&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMask(QRegion const&)</primary></indexterm>QWidget::setMask(QRegion const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;36&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundColor(QColor const&)</primary></indexterm>QWidget::setBackgroundColor(QColor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;37&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundPixmap(QPixmap const&)</primary></indexterm>QWidget::setBackgroundPixmap(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;38&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setCaption(QString const&)</primary></indexterm>QWidget::setCaption(QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;39&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setIcon(QPixmap const&)</primary></indexterm>QWidget::setIcon(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;40&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setIconText(QString const&)</primary></indexterm>QWidget::setIconText(QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;41&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMouseTracking(bool)</primary></indexterm>QWidget::setMouseTracking(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;42&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFocus()</primary></indexterm>QWidget::setFocus()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;43&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setActiveWindow()</primary></indexterm>QWidget::setActiveWindow()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;44&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFocusPolicy(QWidget::FocusPolicy)</primary></indexterm>QWidget::setFocusPolicy(QWidget::FocusPolicy)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;45&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFocusProxy(QWidget*)</primary></indexterm>QWidget::setFocusProxy(QWidget*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;46&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setUpdatesEnabled(bool)</primary></indexterm>QWidget::setUpdatesEnabled(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;47&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::show()</primary></indexterm>QWidget::show()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;48&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::hide()</primary></indexterm>QWidget::hide()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;49&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showMinimized()</primary></indexterm>QWidget::showMinimized()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;50&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showMaximized()</primary></indexterm>QWidget::showMaximized()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;51&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showNormal()</primary></indexterm>QWidget::showNormal()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;52&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::polish()</primary></indexterm>QWidget::polish()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;53&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::move(int, int)</primary></indexterm>QWidget::move(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;54&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::resize(int, int)</primary></indexterm>QWidget::resize(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;55&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setGeometry(int, int, int, int)</primary></indexterm>QWidget::setGeometry(int, int, int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;56&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setGeometry(QRect const&)</primary></indexterm>NULL or QWidget::setGeometry(QRect const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;57&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::close(bool)</primary></indexterm>QWidget::close(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;58&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::sizeHint() const</primary></indexterm>QFrame::sizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;59&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::minimumSizeHint() const</primary></indexterm>QWidget::minimumSizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;60&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::sizePolicy() const</primary></indexterm>QWidget::sizePolicy() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;61&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setSizePolicy(QSizePolicy)</primary></indexterm>QWidget::setSizePolicy(QSizePolicy)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;62&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::heightForWidth(int) const</primary></indexterm>QWidget::heightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;63&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::adjustSize()</primary></indexterm>QWidget::adjustSize()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;64&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::reparent(QWidget*, unsigned int, QPoint const&, bool)</primary></indexterm>QWidget::reparent(QWidget*, unsigned int, QPoint const&, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;65&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setAcceptDrops(bool)</primary></indexterm>QWidget::setAcceptDrops(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;66&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setAutoMask(bool)</primary></indexterm>QWidget::setAutoMask(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;67&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundOrigin(QWidget::BackgroundOrigin)</primary></indexterm>QWidget::setBackgroundOrigin(QWidget::BackgroundOrigin)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;68&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::customWhatsThis() const</primary></indexterm>QWidget::customWhatsThis() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;69&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mousePressEvent(QMouseEvent*)</primary></indexterm>QWidget::mousePressEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;70&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseReleaseEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseReleaseEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;71&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseDoubleClickEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseDoubleClickEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;72&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseMoveEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseMoveEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;73&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::wheelEvent(QWheelEvent*)</primary></indexterm>QWidget::wheelEvent(QWheelEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;74&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyPressEvent(QKeyEvent*)</primary></indexterm>QWidget::keyPressEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;75&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyReleaseEvent(QKeyEvent*)</primary></indexterm>QWidget::keyReleaseEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;76&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusInEvent(QFocusEvent*)</primary></indexterm>QWidget::focusInEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;77&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusOutEvent(QFocusEvent*)</primary></indexterm>QWidget::focusOutEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;78&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enterEvent(QEvent*)</primary></indexterm>QWidget::enterEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;79&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::leaveEvent(QEvent*)</primary></indexterm>QWidget::leaveEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;80&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::paintEvent(QPaintEvent*)</primary></indexterm>QFrame::paintEvent(QPaintEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;81&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::moveEvent(QMoveEvent*)</primary></indexterm>QWidget::moveEvent(QMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;82&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::resizeEvent(QResizeEvent*)</primary></indexterm>QFrame::resizeEvent(QResizeEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;83&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::closeEvent(QCloseEvent*)</primary></indexterm>QWidget::closeEvent(QCloseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;84&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::contextMenuEvent(QContextMenuEvent*)</primary></indexterm>QWidget::contextMenuEvent(QContextMenuEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;85&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::imStartEvent(QIMEvent*)</primary></indexterm>QWidget::imStartEvent(QIMEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;86&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::imComposeEvent(QIMEvent*)</primary></indexterm>QWidget::imComposeEvent(QIMEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;87&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::imEndEvent(QIMEvent*)</primary></indexterm>QWidget::imEndEvent(QIMEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;88&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::tabletEvent(QTabletEvent*)</primary></indexterm>QWidget::tabletEvent(QTabletEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;89&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragEnterEvent(QDragEnterEvent*)</primary></indexterm>QWidget::dragEnterEvent(QDragEnterEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;90&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragMoveEvent(QDragMoveEvent*)</primary></indexterm>QWidget::dragMoveEvent(QDragMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;91&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragLeaveEvent(QDragLeaveEvent*)</primary></indexterm>QWidget::dragLeaveEvent(QDragLeaveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;92&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dropEvent(QDropEvent*)</primary></indexterm>QWidget::dropEvent(QDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;93&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QToolBox::showEvent(QShowEvent*)</primary></indexterm>QToolBox::showEvent(QShowEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;94&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::hideEvent(QHideEvent*)</primary></indexterm>QWidget::hideEvent(QHideEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;95&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::x11Event(_XEvent*)</primary></indexterm>QWidget::x11Event(_XEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;96&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::updateMask()</primary></indexterm>QWidget::updateMask()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;97&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QToolBox::styleChange(QStyle&)</primary></indexterm>QToolBox::styleChange(QStyle&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;98&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enabledChange(bool)</primary></indexterm>QWidget::enabledChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;99&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paletteChange(QPalette const&)</primary></indexterm>QWidget::paletteChange(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;100&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::fontChange(QFont const&)</primary></indexterm>QWidget::fontChange(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;101&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::windowActivationChange(bool)</primary></indexterm>QWidget::windowActivationChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;102&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::metric(int) const</primary></indexterm>QWidget::metric(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;103&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::create(unsigned long, bool, bool)</primary></indexterm>QWidget::create(unsigned long, bool, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;104&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::destroy(bool, bool)</primary></indexterm>QWidget::destroy(bool, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;105&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setWState(unsigned int)</primary></indexterm>NULL or QWidget::setWState(unsigned int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;106&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setWFlags(unsigned int)</primary></indexterm>NULL or QWidget::setWFlags(unsigned int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;107&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusNextPrevChild(bool)</primary></indexterm>QWidget::focusNextPrevChild(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;108&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setKeyCompression(bool)</primary></indexterm>QWidget::setKeyCompression(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;109&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMicroFocusHint(int, int, int, int, bool, QFont*)</primary></indexterm>QWidget::setMicroFocusHint(int, int, int, int, bool, QFont*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;110&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::setFrameStyle(int)</primary></indexterm>QFrame::setFrameStyle(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;111&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::setLineWidth(int)</primary></indexterm>QFrame::setLineWidth(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;112&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::setMargin(int)</primary></indexterm>QFrame::setMargin(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;113&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::setMidLineWidth(int)</primary></indexterm>QFrame::setMidLineWidth(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;114&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::setFrameRect(QRect const&)</primary></indexterm>QFrame::setFrameRect(QRect const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;115&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::drawFrame(QPainter*)</primary></indexterm>QFrame::drawFrame(QPainter*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;116&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::drawContents(QPainter*)</primary></indexterm>QFrame::drawContents(QPainter*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;117&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QToolBox::frameChanged()</primary></indexterm>QToolBox::frameChanged()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;118&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QToolBox::itemInserted(int)</primary></indexterm>QToolBox::itemInserted(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;119&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QToolBox::itemRemoved(int)</primary></indexterm>QToolBox::itemRemoved(int)</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--classdata-->
<TABLE id="cls-52758-1">
<TITLE>Secondary vtable for QToolBox</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>-80</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QToolBox</primary></indexterm>typeinfo for QToolBox</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QToolBox::~QToolBox()</primary></indexterm>non-virtual thunk to QToolBox::~QToolBox()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QToolBox::~QToolBox()</primary></indexterm>non-virtual thunk to QToolBox::~QToolBox()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::setResolution(int)</primary></indexterm>QPaintDevice::setResolution(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::resolution() const</primary></indexterm>QPaintDevice::resolution() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::handle() const</primary></indexterm>QPaintDevice::handle() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::x11RenderHandle() const</primary></indexterm>QPaintDevice::x11RenderHandle() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::setX11Data(QPaintDeviceX11Data const*)</primary></indexterm>QPaintDevice::setX11Data(QPaintDeviceX11Data const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::cmd(int, QPainter*, QPDevCmdParam*)</primary></indexterm>QPaintDevice::cmd(int, QPainter*, QPDevCmdParam*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::metric(int) const</primary></indexterm>non-virtual thunk to QWidget::metric(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::fontMet(QFont*, int, char const*, int) const</primary></indexterm>QPaintDevice::fontMet(QFont*, int, char const*, int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::fontInf(QFont*, int) const</primary></indexterm>QPaintDevice::fontInf(QFont*, int) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QToolBox  class
is described by <XREF LINKEND="rtti-58919">
</PARA>
<!--classdata-->
<TABLE ID="rtti-58919">
<TITLE>typeinfo for QToolBox</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QToolBox</primary></indexterm>typeinfo name for QToolBox</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QFrame</primary></indexterm>typeinfo for QFrame</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QProgressBar</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QProgressBar class
is described by <XREF LINKEND="cls-49612-0">
</PARA>
<!--classdata-->
<TABLE id="cls-49612-0">
<TITLE>Primary vtable for QProgressBar</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QProgressBar</primary></indexterm>typeinfo for QProgressBar</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QProgressBar::metaObject() const</primary></indexterm>NULL or QProgressBar::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QProgressBar::className() const</primary></indexterm>QProgressBar::className() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QProgressBar::qt_cast(char const*)</primary></indexterm>QProgressBar::qt_cast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QProgressBar::qt_invoke(int, QUObject*)</primary></indexterm>QProgressBar::qt_invoke(int, QUObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QProgressBar::qt_emit(int, QUObject*)</primary></indexterm>QProgressBar::qt_emit(int, QUObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QProgressBar::qt_property(int, int, QVariant*)</primary></indexterm>QProgressBar::qt_property(int, int, QVariant*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QProgressBar::~QProgressBar()</primary></indexterm>NULL or QProgressBar::~QProgressBar()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QProgressBar::~QProgressBar()</primary></indexterm>NULL or QProgressBar::~QProgressBar()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::event(QEvent*)</primary></indexterm>QWidget::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::eventFilter(QObject*, QEvent*)</primary></indexterm>QObject::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setName(char const*)</primary></indexterm>QWidget::setName(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::insertChild(QObject*)</primary></indexterm>QObject::insertChild(QObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::removeChild(QObject*)</primary></indexterm>QObject::removeChild(QObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::setProperty(char const*, QVariant const&)</primary></indexterm>QObject::setProperty(char const*, QVariant const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::property(char const*) const</primary></indexterm>QObject::property(char const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QCustomEvent*)</primary></indexterm>QObject::customEvent(QCustomEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::checkConnectArgs(char const*, QObject const*, char const*)</primary></indexterm>QObject::checkConnectArgs(char const*, QObject const*, char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setEnabled(bool)</primary></indexterm>QWidget::setEnabled(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMinimumSize(int, int)</primary></indexterm>QWidget::setMinimumSize(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMaximumSize(int, int)</primary></indexterm>QWidget::setMaximumSize(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setSizeIncrement(int, int)</primary></indexterm>QWidget::setSizeIncrement(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundMode(Qt::BackgroundMode)</primary></indexterm>QWidget::setBackgroundMode(Qt::BackgroundMode)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setEraseColor(QColor const&)</primary></indexterm>QWidget::setEraseColor(QColor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setErasePixmap(QPixmap const&)</primary></indexterm>QWidget::setErasePixmap(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setPalette(QPalette const&)</primary></indexterm>QWidget::setPalette(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setPaletteBackgroundColor(QColor const&)</primary></indexterm>QWidget::setPaletteBackgroundColor(QColor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setPaletteBackgroundPixmap(QPixmap const&)</primary></indexterm>QWidget::setPaletteBackgroundPixmap(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFont(QFont const&)</primary></indexterm>QWidget::setFont(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setCursor(QCursor const&)</primary></indexterm>QWidget::setCursor(QCursor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;33&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::unsetCursor()</primary></indexterm>QWidget::unsetCursor()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;34&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMask(QBitmap const&)</primary></indexterm>QWidget::setMask(QBitmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;35&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMask(QRegion const&)</primary></indexterm>QWidget::setMask(QRegion const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;36&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundColor(QColor const&)</primary></indexterm>QWidget::setBackgroundColor(QColor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;37&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundPixmap(QPixmap const&)</primary></indexterm>QWidget::setBackgroundPixmap(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;38&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setCaption(QString const&)</primary></indexterm>QWidget::setCaption(QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;39&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setIcon(QPixmap const&)</primary></indexterm>QWidget::setIcon(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;40&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setIconText(QString const&)</primary></indexterm>QWidget::setIconText(QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;41&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMouseTracking(bool)</primary></indexterm>QWidget::setMouseTracking(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;42&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFocus()</primary></indexterm>QWidget::setFocus()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;43&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setActiveWindow()</primary></indexterm>QWidget::setActiveWindow()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;44&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFocusPolicy(QWidget::FocusPolicy)</primary></indexterm>QWidget::setFocusPolicy(QWidget::FocusPolicy)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;45&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFocusProxy(QWidget*)</primary></indexterm>QWidget::setFocusProxy(QWidget*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;46&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setUpdatesEnabled(bool)</primary></indexterm>QWidget::setUpdatesEnabled(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;47&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QProgressBar::show()</primary></indexterm>QProgressBar::show()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;48&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::hide()</primary></indexterm>QWidget::hide()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;49&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showMinimized()</primary></indexterm>QWidget::showMinimized()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;50&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showMaximized()</primary></indexterm>QWidget::showMaximized()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;51&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showNormal()</primary></indexterm>QWidget::showNormal()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;52&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::polish()</primary></indexterm>QWidget::polish()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;53&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::move(int, int)</primary></indexterm>QWidget::move(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;54&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::resize(int, int)</primary></indexterm>QWidget::resize(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;55&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setGeometry(int, int, int, int)</primary></indexterm>QWidget::setGeometry(int, int, int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;56&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setGeometry(QRect const&)</primary></indexterm>NULL or QWidget::setGeometry(QRect const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;57&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::close(bool)</primary></indexterm>QWidget::close(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;58&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QProgressBar::sizeHint() const</primary></indexterm>QProgressBar::sizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;59&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QProgressBar::minimumSizeHint() const</primary></indexterm>QProgressBar::minimumSizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;60&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::sizePolicy() const</primary></indexterm>QWidget::sizePolicy() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;61&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setSizePolicy(QSizePolicy)</primary></indexterm>QWidget::setSizePolicy(QSizePolicy)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;62&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::heightForWidth(int) const</primary></indexterm>QWidget::heightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;63&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::adjustSize()</primary></indexterm>QWidget::adjustSize()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;64&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::reparent(QWidget*, unsigned int, QPoint const&, bool)</primary></indexterm>QWidget::reparent(QWidget*, unsigned int, QPoint const&, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;65&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setAcceptDrops(bool)</primary></indexterm>QWidget::setAcceptDrops(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;66&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setAutoMask(bool)</primary></indexterm>QWidget::setAutoMask(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;67&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundOrigin(QWidget::BackgroundOrigin)</primary></indexterm>QWidget::setBackgroundOrigin(QWidget::BackgroundOrigin)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;68&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::customWhatsThis() const</primary></indexterm>QWidget::customWhatsThis() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;69&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mousePressEvent(QMouseEvent*)</primary></indexterm>QWidget::mousePressEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;70&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseReleaseEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseReleaseEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;71&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseDoubleClickEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseDoubleClickEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;72&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseMoveEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseMoveEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;73&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::wheelEvent(QWheelEvent*)</primary></indexterm>QWidget::wheelEvent(QWheelEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;74&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyPressEvent(QKeyEvent*)</primary></indexterm>QWidget::keyPressEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;75&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyReleaseEvent(QKeyEvent*)</primary></indexterm>QWidget::keyReleaseEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;76&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusInEvent(QFocusEvent*)</primary></indexterm>QWidget::focusInEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;77&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusOutEvent(QFocusEvent*)</primary></indexterm>QWidget::focusOutEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;78&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enterEvent(QEvent*)</primary></indexterm>QWidget::enterEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;79&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::leaveEvent(QEvent*)</primary></indexterm>QWidget::leaveEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;80&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::paintEvent(QPaintEvent*)</primary></indexterm>QFrame::paintEvent(QPaintEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;81&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::moveEvent(QMoveEvent*)</primary></indexterm>QWidget::moveEvent(QMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;82&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::resizeEvent(QResizeEvent*)</primary></indexterm>QFrame::resizeEvent(QResizeEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;83&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::closeEvent(QCloseEvent*)</primary></indexterm>QWidget::closeEvent(QCloseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;84&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::contextMenuEvent(QContextMenuEvent*)</primary></indexterm>QWidget::contextMenuEvent(QContextMenuEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;85&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::imStartEvent(QIMEvent*)</primary></indexterm>QWidget::imStartEvent(QIMEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;86&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::imComposeEvent(QIMEvent*)</primary></indexterm>QWidget::imComposeEvent(QIMEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;87&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::imEndEvent(QIMEvent*)</primary></indexterm>QWidget::imEndEvent(QIMEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;88&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::tabletEvent(QTabletEvent*)</primary></indexterm>QWidget::tabletEvent(QTabletEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;89&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragEnterEvent(QDragEnterEvent*)</primary></indexterm>QWidget::dragEnterEvent(QDragEnterEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;90&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragMoveEvent(QDragMoveEvent*)</primary></indexterm>QWidget::dragMoveEvent(QDragMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;91&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragLeaveEvent(QDragLeaveEvent*)</primary></indexterm>QWidget::dragLeaveEvent(QDragLeaveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;92&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dropEvent(QDropEvent*)</primary></indexterm>QWidget::dropEvent(QDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;93&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showEvent(QShowEvent*)</primary></indexterm>QWidget::showEvent(QShowEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;94&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::hideEvent(QHideEvent*)</primary></indexterm>QWidget::hideEvent(QHideEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;95&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::x11Event(_XEvent*)</primary></indexterm>QWidget::x11Event(_XEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;96&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::updateMask()</primary></indexterm>QWidget::updateMask()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;97&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QProgressBar::styleChange(QStyle&)</primary></indexterm>QProgressBar::styleChange(QStyle&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;98&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enabledChange(bool)</primary></indexterm>QWidget::enabledChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;99&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paletteChange(QPalette const&)</primary></indexterm>QWidget::paletteChange(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;100&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::fontChange(QFont const&)</primary></indexterm>QWidget::fontChange(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;101&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::windowActivationChange(bool)</primary></indexterm>QWidget::windowActivationChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;102&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::metric(int) const</primary></indexterm>QWidget::metric(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;103&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::create(unsigned long, bool, bool)</primary></indexterm>QWidget::create(unsigned long, bool, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;104&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::destroy(bool, bool)</primary></indexterm>QWidget::destroy(bool, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;105&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setWState(unsigned int)</primary></indexterm>NULL or QWidget::setWState(unsigned int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;106&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setWFlags(unsigned int)</primary></indexterm>NULL or QWidget::setWFlags(unsigned int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;107&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusNextPrevChild(bool)</primary></indexterm>QWidget::focusNextPrevChild(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;108&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setKeyCompression(bool)</primary></indexterm>QWidget::setKeyCompression(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;109&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMicroFocusHint(int, int, int, int, bool, QFont*)</primary></indexterm>QWidget::setMicroFocusHint(int, int, int, int, bool, QFont*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;110&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::setFrameStyle(int)</primary></indexterm>QFrame::setFrameStyle(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;111&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::setLineWidth(int)</primary></indexterm>QFrame::setLineWidth(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;112&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::setMargin(int)</primary></indexterm>QFrame::setMargin(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;113&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::setMidLineWidth(int)</primary></indexterm>QFrame::setMidLineWidth(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;114&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::setFrameRect(QRect const&)</primary></indexterm>QFrame::setFrameRect(QRect const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;115&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::drawFrame(QPainter*)</primary></indexterm>QFrame::drawFrame(QPainter*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;116&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QProgressBar::drawContents(QPainter*)</primary></indexterm>QProgressBar::drawContents(QPainter*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;117&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::frameChanged()</primary></indexterm>QFrame::frameChanged()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;118&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QProgressBar::setTotalSteps(int)</primary></indexterm>QProgressBar::setTotalSteps(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;119&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QProgressBar::setProgress(int)</primary></indexterm>QProgressBar::setProgress(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;120&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QProgressBar::setIndicator(QString&, int, int)</primary></indexterm>QProgressBar::setIndicator(QString&, int, int)</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--classdata-->
<TABLE id="cls-49612-1">
<TITLE>Secondary vtable for QProgressBar</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>-80</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QProgressBar</primary></indexterm>typeinfo for QProgressBar</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QProgressBar::~QProgressBar()</primary></indexterm>non-virtual thunk to QProgressBar::~QProgressBar()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QProgressBar::~QProgressBar()</primary></indexterm>non-virtual thunk to QProgressBar::~QProgressBar()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::setResolution(int)</primary></indexterm>QPaintDevice::setResolution(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::resolution() const</primary></indexterm>QPaintDevice::resolution() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::handle() const</primary></indexterm>QPaintDevice::handle() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::x11RenderHandle() const</primary></indexterm>QPaintDevice::x11RenderHandle() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::setX11Data(QPaintDeviceX11Data const*)</primary></indexterm>QPaintDevice::setX11Data(QPaintDeviceX11Data const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::cmd(int, QPainter*, QPDevCmdParam*)</primary></indexterm>QPaintDevice::cmd(int, QPainter*, QPDevCmdParam*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::metric(int) const</primary></indexterm>non-virtual thunk to QWidget::metric(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::fontMet(QFont*, int, char const*, int) const</primary></indexterm>QPaintDevice::fontMet(QFont*, int, char const*, int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::fontInf(QFont*, int) const</primary></indexterm>QPaintDevice::fontInf(QFont*, int) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QProgressBar  class
is described by <XREF LINKEND="rtti-58022">
</PARA>
<!--classdata-->
<TABLE ID="rtti-58022">
<TITLE>typeinfo for QProgressBar</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QProgressBar</primary></indexterm>typeinfo name for QProgressBar</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QFrame</primary></indexterm>typeinfo for QFrame</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QIconViewItem</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QIconViewItem class
is described in the generic part of this specification.
</PARA>
<PARA>
The Run Time Type Information for the QIconViewItem  class
is described by <XREF LINKEND="rtti-50445">
</PARA>
<!--classdata-->
<TABLE ID="rtti-50445">
<TITLE>typeinfo for QIconViewItem</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QIconViewItem</primary></indexterm>typeinfo name for QIconViewItem</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for Qt</primary></indexterm>typeinfo for Qt</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QCheckListItem</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QCheckListItem class
is described in the generic part of this specification.
</PARA>
<PARA>
The Run Time Type Information for the QCheckListItem  class
is described by <XREF LINKEND="rtti-58646">
</PARA>
<!--classdata-->
<TABLE ID="rtti-58646">
<TITLE>typeinfo for QCheckListItem</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QCheckListItem</primary></indexterm>typeinfo name for QCheckListItem</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QListViewItem</primary></indexterm>typeinfo for QListViewItem</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QDockArea</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QDockArea class
is described by <XREF LINKEND="cls-57970-0">
</PARA>
<!--classdata-->
<TABLE id="cls-57970-0">
<TITLE>Primary vtable for QDockArea</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QDockArea</primary></indexterm>typeinfo for QDockArea</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDockArea::metaObject() const</primary></indexterm>NULL or QDockArea::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDockArea::className() const</primary></indexterm>QDockArea::className() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDockArea::qt_cast(char const*)</primary></indexterm>QDockArea::qt_cast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDockArea::qt_invoke(int, QUObject*)</primary></indexterm>QDockArea::qt_invoke(int, QUObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDockArea::qt_emit(int, QUObject*)</primary></indexterm>QDockArea::qt_emit(int, QUObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDockArea::qt_property(int, int, QVariant*)</primary></indexterm>QDockArea::qt_property(int, int, QVariant*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDockArea::~QDockArea()</primary></indexterm>QDockArea::~QDockArea()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDockArea::~QDockArea()</primary></indexterm>QDockArea::~QDockArea()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::event(QEvent*)</primary></indexterm>QWidget::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDockArea::eventFilter(QObject*, QEvent*)</primary></indexterm>QDockArea::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setName(char const*)</primary></indexterm>QWidget::setName(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::insertChild(QObject*)</primary></indexterm>QObject::insertChild(QObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::removeChild(QObject*)</primary></indexterm>QObject::removeChild(QObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::setProperty(char const*, QVariant const&)</primary></indexterm>QObject::setProperty(char const*, QVariant const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::property(char const*) const</primary></indexterm>QObject::property(char const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QCustomEvent*)</primary></indexterm>QObject::customEvent(QCustomEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::checkConnectArgs(char const*, QObject const*, char const*)</primary></indexterm>QObject::checkConnectArgs(char const*, QObject const*, char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setEnabled(bool)</primary></indexterm>QWidget::setEnabled(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMinimumSize(int, int)</primary></indexterm>QWidget::setMinimumSize(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMaximumSize(int, int)</primary></indexterm>QWidget::setMaximumSize(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setSizeIncrement(int, int)</primary></indexterm>QWidget::setSizeIncrement(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundMode(Qt::BackgroundMode)</primary></indexterm>QWidget::setBackgroundMode(Qt::BackgroundMode)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setEraseColor(QColor const&)</primary></indexterm>QWidget::setEraseColor(QColor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setErasePixmap(QPixmap const&)</primary></indexterm>QWidget::setErasePixmap(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setPalette(QPalette const&)</primary></indexterm>QWidget::setPalette(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setPaletteBackgroundColor(QColor const&)</primary></indexterm>QWidget::setPaletteBackgroundColor(QColor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setPaletteBackgroundPixmap(QPixmap const&)</primary></indexterm>QWidget::setPaletteBackgroundPixmap(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFont(QFont const&)</primary></indexterm>QWidget::setFont(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setCursor(QCursor const&)</primary></indexterm>QWidget::setCursor(QCursor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;33&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::unsetCursor()</primary></indexterm>QWidget::unsetCursor()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;34&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMask(QBitmap const&)</primary></indexterm>QWidget::setMask(QBitmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;35&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMask(QRegion const&)</primary></indexterm>QWidget::setMask(QRegion const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;36&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundColor(QColor const&)</primary></indexterm>QWidget::setBackgroundColor(QColor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;37&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundPixmap(QPixmap const&)</primary></indexterm>QWidget::setBackgroundPixmap(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;38&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setCaption(QString const&)</primary></indexterm>QWidget::setCaption(QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;39&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setIcon(QPixmap const&)</primary></indexterm>QWidget::setIcon(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;40&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setIconText(QString const&)</primary></indexterm>QWidget::setIconText(QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;41&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMouseTracking(bool)</primary></indexterm>QWidget::setMouseTracking(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;42&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFocus()</primary></indexterm>QWidget::setFocus()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;43&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setActiveWindow()</primary></indexterm>QWidget::setActiveWindow()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;44&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFocusPolicy(QWidget::FocusPolicy)</primary></indexterm>QWidget::setFocusPolicy(QWidget::FocusPolicy)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;45&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFocusProxy(QWidget*)</primary></indexterm>QWidget::setFocusProxy(QWidget*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;46&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setUpdatesEnabled(bool)</primary></indexterm>QWidget::setUpdatesEnabled(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;47&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::show()</primary></indexterm>QWidget::show()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;48&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::hide()</primary></indexterm>QWidget::hide()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;49&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showMinimized()</primary></indexterm>QWidget::showMinimized()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;50&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showMaximized()</primary></indexterm>QWidget::showMaximized()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;51&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showNormal()</primary></indexterm>QWidget::showNormal()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;52&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::polish()</primary></indexterm>QWidget::polish()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;53&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::move(int, int)</primary></indexterm>QWidget::move(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;54&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::resize(int, int)</primary></indexterm>QWidget::resize(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;55&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setGeometry(int, int, int, int)</primary></indexterm>QWidget::setGeometry(int, int, int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;56&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setGeometry(QRect const&)</primary></indexterm>NULL or QWidget::setGeometry(QRect const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;57&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::close(bool)</primary></indexterm>QWidget::close(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;58&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::sizeHint() const</primary></indexterm>QWidget::sizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;59&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::minimumSizeHint() const</primary></indexterm>QWidget::minimumSizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;60&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::sizePolicy() const</primary></indexterm>QWidget::sizePolicy() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;61&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setSizePolicy(QSizePolicy)</primary></indexterm>QWidget::setSizePolicy(QSizePolicy)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;62&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::heightForWidth(int) const</primary></indexterm>QWidget::heightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;63&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::adjustSize()</primary></indexterm>QWidget::adjustSize()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;64&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::reparent(QWidget*, unsigned int, QPoint const&, bool)</primary></indexterm>QWidget::reparent(QWidget*, unsigned int, QPoint const&, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;65&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setAcceptDrops(bool)</primary></indexterm>QWidget::setAcceptDrops(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;66&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setAutoMask(bool)</primary></indexterm>QWidget::setAutoMask(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;67&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundOrigin(QWidget::BackgroundOrigin)</primary></indexterm>QWidget::setBackgroundOrigin(QWidget::BackgroundOrigin)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;68&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::customWhatsThis() const</primary></indexterm>QWidget::customWhatsThis() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;69&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mousePressEvent(QMouseEvent*)</primary></indexterm>QWidget::mousePressEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;70&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseReleaseEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseReleaseEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;71&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseDoubleClickEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseDoubleClickEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;72&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseMoveEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseMoveEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;73&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::wheelEvent(QWheelEvent*)</primary></indexterm>QWidget::wheelEvent(QWheelEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;74&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyPressEvent(QKeyEvent*)</primary></indexterm>QWidget::keyPressEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;75&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyReleaseEvent(QKeyEvent*)</primary></indexterm>QWidget::keyReleaseEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;76&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusInEvent(QFocusEvent*)</primary></indexterm>QWidget::focusInEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;77&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusOutEvent(QFocusEvent*)</primary></indexterm>QWidget::focusOutEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;78&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enterEvent(QEvent*)</primary></indexterm>QWidget::enterEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;79&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::leaveEvent(QEvent*)</primary></indexterm>QWidget::leaveEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;80&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paintEvent(QPaintEvent*)</primary></indexterm>QWidget::paintEvent(QPaintEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;81&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::moveEvent(QMoveEvent*)</primary></indexterm>QWidget::moveEvent(QMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;82&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::resizeEvent(QResizeEvent*)</primary></indexterm>QWidget::resizeEvent(QResizeEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;83&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::closeEvent(QCloseEvent*)</primary></indexterm>QWidget::closeEvent(QCloseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;84&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::contextMenuEvent(QContextMenuEvent*)</primary></indexterm>QWidget::contextMenuEvent(QContextMenuEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;85&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::imStartEvent(QIMEvent*)</primary></indexterm>QWidget::imStartEvent(QIMEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;86&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::imComposeEvent(QIMEvent*)</primary></indexterm>QWidget::imComposeEvent(QIMEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;87&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::imEndEvent(QIMEvent*)</primary></indexterm>QWidget::imEndEvent(QIMEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;88&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::tabletEvent(QTabletEvent*)</primary></indexterm>QWidget::tabletEvent(QTabletEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;89&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragEnterEvent(QDragEnterEvent*)</primary></indexterm>QWidget::dragEnterEvent(QDragEnterEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;90&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragMoveEvent(QDragMoveEvent*)</primary></indexterm>QWidget::dragMoveEvent(QDragMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;91&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragLeaveEvent(QDragLeaveEvent*)</primary></indexterm>QWidget::dragLeaveEvent(QDragLeaveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;92&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dropEvent(QDropEvent*)</primary></indexterm>QWidget::dropEvent(QDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;93&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showEvent(QShowEvent*)</primary></indexterm>QWidget::showEvent(QShowEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;94&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::hideEvent(QHideEvent*)</primary></indexterm>QWidget::hideEvent(QHideEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;95&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::x11Event(_XEvent*)</primary></indexterm>QWidget::x11Event(_XEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;96&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::updateMask()</primary></indexterm>QWidget::updateMask()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;97&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::styleChange(QStyle&)</primary></indexterm>QWidget::styleChange(QStyle&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;98&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enabledChange(bool)</primary></indexterm>QWidget::enabledChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;99&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paletteChange(QPalette const&)</primary></indexterm>QWidget::paletteChange(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;100&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::fontChange(QFont const&)</primary></indexterm>QWidget::fontChange(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;101&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::windowActivationChange(bool)</primary></indexterm>QWidget::windowActivationChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;102&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::metric(int) const</primary></indexterm>QWidget::metric(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;103&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::create(unsigned long, bool, bool)</primary></indexterm>QWidget::create(unsigned long, bool, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;104&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::destroy(bool, bool)</primary></indexterm>QWidget::destroy(bool, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;105&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setWState(unsigned int)</primary></indexterm>NULL or QWidget::setWState(unsigned int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;106&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setWFlags(unsigned int)</primary></indexterm>NULL or QWidget::setWFlags(unsigned int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;107&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusNextPrevChild(bool)</primary></indexterm>QWidget::focusNextPrevChild(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;108&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setKeyCompression(bool)</primary></indexterm>QWidget::setKeyCompression(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;109&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMicroFocusHint(int, int, int, int, bool, QFont*)</primary></indexterm>QWidget::setMicroFocusHint(int, int, int, int, bool, QFont*)</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--classdata-->
<TABLE id="cls-57970-1">
<TITLE>Secondary vtable for QDockArea</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>-80</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QDockArea</primary></indexterm>typeinfo for QDockArea</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QDockArea::~QDockArea()</primary></indexterm>non-virtual thunk to QDockArea::~QDockArea()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QDockArea::~QDockArea()</primary></indexterm>non-virtual thunk to QDockArea::~QDockArea()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::setResolution(int)</primary></indexterm>QPaintDevice::setResolution(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::resolution() const</primary></indexterm>QPaintDevice::resolution() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::handle() const</primary></indexterm>QPaintDevice::handle() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::x11RenderHandle() const</primary></indexterm>QPaintDevice::x11RenderHandle() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::setX11Data(QPaintDeviceX11Data const*)</primary></indexterm>QPaintDevice::setX11Data(QPaintDeviceX11Data const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::cmd(int, QPainter*, QPDevCmdParam*)</primary></indexterm>QPaintDevice::cmd(int, QPainter*, QPDevCmdParam*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::metric(int) const</primary></indexterm>non-virtual thunk to QWidget::metric(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::fontMet(QFont*, int, char const*, int) const</primary></indexterm>QPaintDevice::fontMet(QFont*, int, char const*, int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::fontInf(QFont*, int) const</primary></indexterm>QPaintDevice::fontInf(QFont*, int) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QDockArea  class
is described by <XREF LINKEND="rtti-48561">
</PARA>
<!--classdata-->
<TABLE ID="rtti-48561">
<TITLE>typeinfo for QDockArea</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QDockArea</primary></indexterm>typeinfo name for QDockArea</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QWidget</primary></indexterm>typeinfo for QWidget</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QListViewItem</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QListViewItem class
is described in the generic part of this specification.
</PARA>
<PARA>
The Run Time Type Information for the QListViewItem  class
is described by <XREF LINKEND="rtti-56805">
</PARA>
<!--classdata-->
<TABLE ID="rtti-56805">
<TITLE>typeinfo for QListViewItem</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QListViewItem</primary></indexterm>typeinfo name for QListViewItem</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for Qt</primary></indexterm>typeinfo for Qt</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QIconView</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QIconView class
is described by <XREF LINKEND="cls-55095-0">
</PARA>
<!--classdata-->
<TABLE id="cls-55095-0">
<TITLE>Primary vtable for QIconView</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QIconView</primary></indexterm>typeinfo for QIconView</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QIconView::metaObject() const</primary></indexterm>NULL or QIconView::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QIconView::className() const</primary></indexterm>QIconView::className() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QIconView::qt_cast(char const*)</primary></indexterm>QIconView::qt_cast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QIconView::qt_invoke(int, QUObject*)</primary></indexterm>QIconView::qt_invoke(int, QUObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QIconView::qt_emit(int, QUObject*)</primary></indexterm>QIconView::qt_emit(int, QUObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QIconView::qt_property(int, int, QVariant*)</primary></indexterm>QIconView::qt_property(int, int, QVariant*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QIconView::~QIconView()</primary></indexterm>QIconView::~QIconView()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QIconView::~QIconView()</primary></indexterm>QIconView::~QIconView()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::event(QEvent*)</primary></indexterm>QWidget::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QIconView::eventFilter(QObject*, QEvent*)</primary></indexterm>QIconView::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setName(char const*)</primary></indexterm>QWidget::setName(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::insertChild(QObject*)</primary></indexterm>QObject::insertChild(QObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::removeChild(QObject*)</primary></indexterm>QScrollView::removeChild(QObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::setProperty(char const*, QVariant const&)</primary></indexterm>QObject::setProperty(char const*, QVariant const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::property(char const*) const</primary></indexterm>QObject::property(char const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QCustomEvent*)</primary></indexterm>QObject::customEvent(QCustomEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::checkConnectArgs(char const*, QObject const*, char const*)</primary></indexterm>QObject::checkConnectArgs(char const*, QObject const*, char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::setEnabled(bool)</primary></indexterm>QScrollView::setEnabled(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMinimumSize(int, int)</primary></indexterm>QWidget::setMinimumSize(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMaximumSize(int, int)</primary></indexterm>QWidget::setMaximumSize(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setSizeIncrement(int, int)</primary></indexterm>QWidget::setSizeIncrement(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundMode(Qt::BackgroundMode)</primary></indexterm>QWidget::setBackgroundMode(Qt::BackgroundMode)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setEraseColor(QColor const&)</primary></indexterm>QWidget::setEraseColor(QColor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setErasePixmap(QPixmap const&)</primary></indexterm>QWidget::setErasePixmap(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QIconView::setPalette(QPalette const&)</primary></indexterm>QIconView::setPalette(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setPaletteBackgroundColor(QColor const&)</primary></indexterm>QWidget::setPaletteBackgroundColor(QColor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setPaletteBackgroundPixmap(QPixmap const&)</primary></indexterm>QWidget::setPaletteBackgroundPixmap(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QIconView::setFont(QFont const&)</primary></indexterm>QIconView::setFont(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setCursor(QCursor const&)</primary></indexterm>QWidget::setCursor(QCursor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;33&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::unsetCursor()</primary></indexterm>QWidget::unsetCursor()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;34&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMask(QBitmap const&)</primary></indexterm>QWidget::setMask(QBitmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;35&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMask(QRegion const&)</primary></indexterm>QWidget::setMask(QRegion const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;36&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundColor(QColor const&)</primary></indexterm>QWidget::setBackgroundColor(QColor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;37&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundPixmap(QPixmap const&)</primary></indexterm>QWidget::setBackgroundPixmap(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;38&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setCaption(QString const&)</primary></indexterm>QWidget::setCaption(QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;39&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setIcon(QPixmap const&)</primary></indexterm>QWidget::setIcon(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;40&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setIconText(QString const&)</primary></indexterm>QWidget::setIconText(QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;41&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMouseTracking(bool)</primary></indexterm>QWidget::setMouseTracking(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;42&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFocus()</primary></indexterm>QWidget::setFocus()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;43&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setActiveWindow()</primary></indexterm>QWidget::setActiveWindow()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;44&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFocusPolicy(QWidget::FocusPolicy)</primary></indexterm>QWidget::setFocusPolicy(QWidget::FocusPolicy)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;45&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFocusProxy(QWidget*)</primary></indexterm>QWidget::setFocusProxy(QWidget*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;46&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setUpdatesEnabled(bool)</primary></indexterm>QWidget::setUpdatesEnabled(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;47&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::show()</primary></indexterm>QScrollView::show()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;48&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::hide()</primary></indexterm>QWidget::hide()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;49&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showMinimized()</primary></indexterm>QWidget::showMinimized()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;50&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showMaximized()</primary></indexterm>QWidget::showMaximized()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;51&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showNormal()</primary></indexterm>QWidget::showNormal()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;52&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::polish()</primary></indexterm>QWidget::polish()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;53&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::move(int, int)</primary></indexterm>QWidget::move(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;54&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::resize(int, int)</primary></indexterm>QScrollView::resize(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;55&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setGeometry(int, int, int, int)</primary></indexterm>QWidget::setGeometry(int, int, int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;56&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setGeometry(QRect const&)</primary></indexterm>NULL or QWidget::setGeometry(QRect const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;57&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::close(bool)</primary></indexterm>QWidget::close(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;58&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QIconView::sizeHint() const</primary></indexterm>QIconView::sizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;59&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QIconView::minimumSizeHint() const</primary></indexterm>QIconView::minimumSizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;60&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::sizePolicy() const</primary></indexterm>QWidget::sizePolicy() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;61&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setSizePolicy(QSizePolicy)</primary></indexterm>QWidget::setSizePolicy(QSizePolicy)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;62&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::heightForWidth(int) const</primary></indexterm>QWidget::heightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;63&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::adjustSize()</primary></indexterm>QWidget::adjustSize()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;64&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::reparent(QWidget*, unsigned int, QPoint const&, bool)</primary></indexterm>QWidget::reparent(QWidget*, unsigned int, QPoint const&, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;65&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setAcceptDrops(bool)</primary></indexterm>QWidget::setAcceptDrops(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;66&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setAutoMask(bool)</primary></indexterm>QWidget::setAutoMask(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;67&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundOrigin(QWidget::BackgroundOrigin)</primary></indexterm>QWidget::setBackgroundOrigin(QWidget::BackgroundOrigin)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;68&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::customWhatsThis() const</primary></indexterm>QWidget::customWhatsThis() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;69&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::mousePressEvent(QMouseEvent*)</primary></indexterm>QScrollView::mousePressEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;70&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::mouseReleaseEvent(QMouseEvent*)</primary></indexterm>QScrollView::mouseReleaseEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;71&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::mouseDoubleClickEvent(QMouseEvent*)</primary></indexterm>QScrollView::mouseDoubleClickEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;72&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::mouseMoveEvent(QMouseEvent*)</primary></indexterm>QScrollView::mouseMoveEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;73&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::wheelEvent(QWheelEvent*)</primary></indexterm>QScrollView::wheelEvent(QWheelEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;74&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QIconView::keyPressEvent(QKeyEvent*)</primary></indexterm>QIconView::keyPressEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;75&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyReleaseEvent(QKeyEvent*)</primary></indexterm>QWidget::keyReleaseEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;76&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QIconView::focusInEvent(QFocusEvent*)</primary></indexterm>QIconView::focusInEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;77&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QIconView::focusOutEvent(QFocusEvent*)</primary></indexterm>QIconView::focusOutEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;78&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QIconView::enterEvent(QEvent*)</primary></indexterm>QIconView::enterEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;79&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::leaveEvent(QEvent*)</primary></indexterm>QWidget::leaveEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;80&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::paintEvent(QPaintEvent*)</primary></indexterm>QFrame::paintEvent(QPaintEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;81&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::moveEvent(QMoveEvent*)</primary></indexterm>QWidget::moveEvent(QMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;82&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QIconView::resizeEvent(QResizeEvent*)</primary></indexterm>QIconView::resizeEvent(QResizeEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;83&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::closeEvent(QCloseEvent*)</primary></indexterm>QWidget::closeEvent(QCloseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;84&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::contextMenuEvent(QContextMenuEvent*)</primary></indexterm>QScrollView::contextMenuEvent(QContextMenuEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;85&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::imStartEvent(QIMEvent*)</primary></indexterm>QWidget::imStartEvent(QIMEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;86&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::imComposeEvent(QIMEvent*)</primary></indexterm>QWidget::imComposeEvent(QIMEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;87&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::imEndEvent(QIMEvent*)</primary></indexterm>QWidget::imEndEvent(QIMEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;88&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::tabletEvent(QTabletEvent*)</primary></indexterm>QWidget::tabletEvent(QTabletEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;89&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragEnterEvent(QDragEnterEvent*)</primary></indexterm>QWidget::dragEnterEvent(QDragEnterEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;90&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragMoveEvent(QDragMoveEvent*)</primary></indexterm>QWidget::dragMoveEvent(QDragMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;91&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragLeaveEvent(QDragLeaveEvent*)</primary></indexterm>QWidget::dragLeaveEvent(QDragLeaveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;92&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dropEvent(QDropEvent*)</primary></indexterm>QWidget::dropEvent(QDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;93&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QIconView::showEvent(QShowEvent*)</primary></indexterm>QIconView::showEvent(QShowEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;94&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::hideEvent(QHideEvent*)</primary></indexterm>QWidget::hideEvent(QHideEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;95&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::x11Event(_XEvent*)</primary></indexterm>QWidget::x11Event(_XEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;96&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::updateMask()</primary></indexterm>QWidget::updateMask()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;97&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QIconView::styleChange(QStyle&)</primary></indexterm>QIconView::styleChange(QStyle&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;98&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enabledChange(bool)</primary></indexterm>QWidget::enabledChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;99&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paletteChange(QPalette const&)</primary></indexterm>QWidget::paletteChange(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;100&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::fontChange(QFont const&)</primary></indexterm>QScrollView::fontChange(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;101&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QIconView::windowActivationChange(bool)</primary></indexterm>QIconView::windowActivationChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;102&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::metric(int) const</primary></indexterm>QWidget::metric(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;103&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::create(unsigned long, bool, bool)</primary></indexterm>QWidget::create(unsigned long, bool, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;104&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::destroy(bool, bool)</primary></indexterm>QWidget::destroy(bool, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;105&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setWState(unsigned int)</primary></indexterm>NULL or QWidget::setWState(unsigned int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;106&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setWFlags(unsigned int)</primary></indexterm>NULL or QWidget::setWFlags(unsigned int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;107&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::focusNextPrevChild(bool)</primary></indexterm>QScrollView::focusNextPrevChild(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;108&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setKeyCompression(bool)</primary></indexterm>QWidget::setKeyCompression(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;109&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMicroFocusHint(int, int, int, int, bool, QFont*)</primary></indexterm>QWidget::setMicroFocusHint(int, int, int, int, bool, QFont*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;110&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::setFrameStyle(int)</primary></indexterm>QFrame::setFrameStyle(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;111&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::setLineWidth(int)</primary></indexterm>QFrame::setLineWidth(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;112&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::setMargin(int)</primary></indexterm>QFrame::setMargin(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;113&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::setMidLineWidth(int)</primary></indexterm>QFrame::setMidLineWidth(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;114&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::setFrameRect(QRect const&)</primary></indexterm>QFrame::setFrameRect(QRect const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;115&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::drawFrame(QPainter*)</primary></indexterm>QFrame::drawFrame(QPainter*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;116&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QIconView::drawContents(QPainter*)</primary></indexterm>QIconView::drawContents(QPainter*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;117&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::frameChanged()</primary></indexterm>QScrollView::frameChanged()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;118&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::setResizePolicy(QScrollView::ResizePolicy)</primary></indexterm>QScrollView::setResizePolicy(QScrollView::ResizePolicy)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;119&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::addChild(QWidget*, int, int)</primary></indexterm>QScrollView::addChild(QWidget*, int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;120&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::moveChild(QWidget*, int, int)</primary></indexterm>QScrollView::moveChild(QWidget*, int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;121&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::setVScrollBarMode(QScrollView::ScrollBarMode)</primary></indexterm>QScrollView::setVScrollBarMode(QScrollView::ScrollBarMode)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;122&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::setHScrollBarMode(QScrollView::ScrollBarMode)</primary></indexterm>QScrollView::setHScrollBarMode(QScrollView::ScrollBarMode)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;123&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::setCornerWidget(QWidget*)</primary></indexterm>QScrollView::setCornerWidget(QWidget*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;124&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::setDragAutoScroll(bool)</primary></indexterm>QScrollView::setDragAutoScroll(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;125&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::resizeContents(int, int)</primary></indexterm>QScrollView::resizeContents(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;126&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QIconView::setContentsPos(int, int)</primary></indexterm>QIconView::setContentsPos(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;127&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QIconView::drawContents(QPainter*, int, int, int, int)</primary></indexterm>QIconView::drawContents(QPainter*, int, int, int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;128&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::drawContentsOffset(QPainter*, int, int, int, int, int, int)</primary></indexterm>QScrollView::drawContentsOffset(QPainter*, int, int, int, int, int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;129&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QIconView::contentsMousePressEvent(QMouseEvent*)</primary></indexterm>QIconView::contentsMousePressEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;130&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QIconView::contentsMouseReleaseEvent(QMouseEvent*)</primary></indexterm>QIconView::contentsMouseReleaseEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;131&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QIconView::contentsMouseDoubleClickEvent(QMouseEvent*)</primary></indexterm>QIconView::contentsMouseDoubleClickEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;132&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QIconView::contentsMouseMoveEvent(QMouseEvent*)</primary></indexterm>QIconView::contentsMouseMoveEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;133&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QIconView::contentsDragEnterEvent(QDragEnterEvent*)</primary></indexterm>QIconView::contentsDragEnterEvent(QDragEnterEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;134&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QIconView::contentsDragMoveEvent(QDragMoveEvent*)</primary></indexterm>QIconView::contentsDragMoveEvent(QDragMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;135&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QIconView::contentsDragLeaveEvent(QDragLeaveEvent*)</primary></indexterm>QIconView::contentsDragLeaveEvent(QDragLeaveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;136&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QIconView::contentsDropEvent(QDropEvent*)</primary></indexterm>QIconView::contentsDropEvent(QDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;137&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::contentsWheelEvent(QWheelEvent*)</primary></indexterm>QScrollView::contentsWheelEvent(QWheelEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;138&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QIconView::contentsContextMenuEvent(QContextMenuEvent*)</primary></indexterm>QIconView::contentsContextMenuEvent(QContextMenuEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;139&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::viewportPaintEvent(QPaintEvent*)</primary></indexterm>QScrollView::viewportPaintEvent(QPaintEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;140&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::viewportResizeEvent(QResizeEvent*)</primary></indexterm>QScrollView::viewportResizeEvent(QResizeEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;141&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::viewportMousePressEvent(QMouseEvent*)</primary></indexterm>QScrollView::viewportMousePressEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;142&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::viewportMouseReleaseEvent(QMouseEvent*)</primary></indexterm>QScrollView::viewportMouseReleaseEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;143&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::viewportMouseDoubleClickEvent(QMouseEvent*)</primary></indexterm>QScrollView::viewportMouseDoubleClickEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;144&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::viewportMouseMoveEvent(QMouseEvent*)</primary></indexterm>QScrollView::viewportMouseMoveEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;145&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::viewportDragEnterEvent(QDragEnterEvent*)</primary></indexterm>QScrollView::viewportDragEnterEvent(QDragEnterEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;146&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::viewportDragMoveEvent(QDragMoveEvent*)</primary></indexterm>QScrollView::viewportDragMoveEvent(QDragMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;147&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::viewportDragLeaveEvent(QDragLeaveEvent*)</primary></indexterm>QScrollView::viewportDragLeaveEvent(QDragLeaveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;148&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::viewportDropEvent(QDropEvent*)</primary></indexterm>QScrollView::viewportDropEvent(QDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;149&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::viewportWheelEvent(QWheelEvent*)</primary></indexterm>QScrollView::viewportWheelEvent(QWheelEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;150&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::viewportContextMenuEvent(QContextMenuEvent*)</primary></indexterm>QScrollView::viewportContextMenuEvent(QContextMenuEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;151&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::setMargins(int, int, int, int)</primary></indexterm>QScrollView::setMargins(int, int, int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;152&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::setHBarGeometry(QScrollBar&, int, int, int, int)</primary></indexterm>QScrollView::setHBarGeometry(QScrollBar&, int, int, int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;153&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::setVBarGeometry(QScrollBar&, int, int, int, int)</primary></indexterm>QScrollView::setVBarGeometry(QScrollBar&, int, int, int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;154&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QIconView::insertItem(QIconViewItem*, QIconViewItem*)</primary></indexterm>QIconView::insertItem(QIconViewItem*, QIconViewItem*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;155&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QIconView::takeItem(QIconViewItem*)</primary></indexterm>QIconView::takeItem(QIconViewItem*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;156&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QIconView::setCurrentItem(QIconViewItem*)</primary></indexterm>QIconView::setCurrentItem(QIconViewItem*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;157&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QIconView::setSelected(QIconViewItem*, bool, bool)</primary></indexterm>QIconView::setSelected(QIconViewItem*, bool, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;158&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QIconView::setSelectionMode(QIconView::SelectionMode)</primary></indexterm>QIconView::setSelectionMode(QIconView::SelectionMode)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;159&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QIconView::selectAll(bool)</primary></indexterm>QIconView::selectAll(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;160&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QIconView::clearSelection()</primary></indexterm>QIconView::clearSelection()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;161&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QIconView::invertSelection()</primary></indexterm>QIconView::invertSelection()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;162&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QIconView::repaintItem(QIconViewItem*)</primary></indexterm>QIconView::repaintItem(QIconViewItem*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;163&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QIconView::clear()</primary></indexterm>QIconView::clear()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;164&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QIconView::setGridX(int)</primary></indexterm>QIconView::setGridX(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;165&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QIconView::setGridY(int)</primary></indexterm>QIconView::setGridY(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;166&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QIconView::setSpacing(int)</primary></indexterm>QIconView::setSpacing(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;167&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QIconView::setItemTextPos(QIconView::ItemTextPos)</primary></indexterm>QIconView::setItemTextPos(QIconView::ItemTextPos)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;168&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QIconView::setItemTextBackground(QBrush const&)</primary></indexterm>QIconView::setItemTextBackground(QBrush const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;169&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QIconView::setArrangement(QIconView::Arrangement)</primary></indexterm>QIconView::setArrangement(QIconView::Arrangement)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;170&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QIconView::setResizeMode(QIconView::ResizeMode)</primary></indexterm>QIconView::setResizeMode(QIconView::ResizeMode)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;171&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QIconView::setMaxItemWidth(int)</primary></indexterm>QIconView::setMaxItemWidth(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;172&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QIconView::setMaxItemTextLength(int)</primary></indexterm>QIconView::setMaxItemTextLength(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;173&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QIconView::setAutoArrange(bool)</primary></indexterm>QIconView::setAutoArrange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;174&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QIconView::setShowToolTips(bool)</primary></indexterm>QIconView::setShowToolTips(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;175&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QIconView::setItemsMovable(bool)</primary></indexterm>QIconView::setItemsMovable(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;176&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QIconView::setWordWrapIconText(bool)</primary></indexterm>QIconView::setWordWrapIconText(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;177&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QIconView::sort(bool)</primary></indexterm>QIconView::sort(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;178&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QIconView::arrangeItemsInGrid(QSize const&, bool)</primary></indexterm>QIconView::arrangeItemsInGrid(QSize const&, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;179&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QIconView::arrangeItemsInGrid(bool)</primary></indexterm>QIconView::arrangeItemsInGrid(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;180&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QIconView::updateContents()</primary></indexterm>QIconView::updateContents()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;181&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QIconView::doAutoScroll()</primary></indexterm>QIconView::doAutoScroll()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;182&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QIconView::adjustItems()</primary></indexterm>QIconView::adjustItems()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;183&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QIconView::slotUpdate()</primary></indexterm>QIconView::slotUpdate()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;184&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QIconView::drawRubber(QPainter*)</primary></indexterm>QIconView::drawRubber(QPainter*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;185&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QIconView::dragObject()</primary></indexterm>QIconView::dragObject()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;186&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QIconView::startDrag()</primary></indexterm>QIconView::startDrag()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;187&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QIconView::insertInGrid(QIconViewItem*)</primary></indexterm>QIconView::insertInGrid(QIconViewItem*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;188&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QIconView::drawBackground(QPainter*, QRect const&)</primary></indexterm>QIconView::drawBackground(QPainter*, QRect const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;189&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QIconView::drawDragShapes(QPoint const&)</primary></indexterm>QIconView::drawDragShapes(QPoint const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;190&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QIconView::initDragEnter(QDropEvent*)</primary></indexterm>QIconView::initDragEnter(QDropEvent*)</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--classdata-->
<TABLE id="cls-55095-1">
<TITLE>Secondary vtable for QIconView</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>-80</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QIconView</primary></indexterm>typeinfo for QIconView</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QIconView::~QIconView()</primary></indexterm>non-virtual thunk to QIconView::~QIconView()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QIconView::~QIconView()</primary></indexterm>non-virtual thunk to QIconView::~QIconView()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::setResolution(int)</primary></indexterm>QPaintDevice::setResolution(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::resolution() const</primary></indexterm>QPaintDevice::resolution() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::handle() const</primary></indexterm>QPaintDevice::handle() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::x11RenderHandle() const</primary></indexterm>QPaintDevice::x11RenderHandle() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::setX11Data(QPaintDeviceX11Data const*)</primary></indexterm>QPaintDevice::setX11Data(QPaintDeviceX11Data const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::cmd(int, QPainter*, QPDevCmdParam*)</primary></indexterm>QPaintDevice::cmd(int, QPainter*, QPDevCmdParam*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::metric(int) const</primary></indexterm>non-virtual thunk to QWidget::metric(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::fontMet(QFont*, int, char const*, int) const</primary></indexterm>QPaintDevice::fontMet(QFont*, int, char const*, int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::fontInf(QFont*, int) const</primary></indexterm>QPaintDevice::fontInf(QFont*, int) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QIconView  class
is described by <XREF LINKEND="rtti-56742">
</PARA>
<!--classdata-->
<TABLE ID="rtti-56742">
<TITLE>typeinfo for QIconView</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QIconView</primary></indexterm>typeinfo name for QIconView</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QScrollView</primary></indexterm>typeinfo for QScrollView</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QWidget</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QWidget class
is described by <XREF LINKEND="cls-54430-0">
</PARA>
<!--classdata-->
<TABLE id="cls-54430-0">
<TITLE>Primary vtable for QWidget</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QWidget</primary></indexterm>typeinfo for QWidget</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::metaObject() const</primary></indexterm>NULL or QWidget::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::className() const</primary></indexterm>QWidget::className() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::qt_cast(char const*)</primary></indexterm>QWidget::qt_cast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::qt_invoke(int, QUObject*)</primary></indexterm>QWidget::qt_invoke(int, QUObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::qt_emit(int, QUObject*)</primary></indexterm>QWidget::qt_emit(int, QUObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::qt_property(int, int, QVariant*)</primary></indexterm>QWidget::qt_property(int, int, QVariant*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::~QWidget()</primary></indexterm>QWidget::~QWidget()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::~QWidget()</primary></indexterm>QWidget::~QWidget()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::event(QEvent*)</primary></indexterm>QWidget::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::eventFilter(QObject*, QEvent*)</primary></indexterm>QObject::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setName(char const*)</primary></indexterm>QWidget::setName(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::insertChild(QObject*)</primary></indexterm>QObject::insertChild(QObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::removeChild(QObject*)</primary></indexterm>QObject::removeChild(QObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::setProperty(char const*, QVariant const&)</primary></indexterm>QObject::setProperty(char const*, QVariant const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::property(char const*) const</primary></indexterm>QObject::property(char const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QCustomEvent*)</primary></indexterm>QObject::customEvent(QCustomEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::checkConnectArgs(char const*, QObject const*, char const*)</primary></indexterm>QObject::checkConnectArgs(char const*, QObject const*, char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setEnabled(bool)</primary></indexterm>QWidget::setEnabled(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMinimumSize(int, int)</primary></indexterm>QWidget::setMinimumSize(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMaximumSize(int, int)</primary></indexterm>QWidget::setMaximumSize(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setSizeIncrement(int, int)</primary></indexterm>QWidget::setSizeIncrement(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundMode(Qt::BackgroundMode)</primary></indexterm>QWidget::setBackgroundMode(Qt::BackgroundMode)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setEraseColor(QColor const&)</primary></indexterm>QWidget::setEraseColor(QColor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setErasePixmap(QPixmap const&)</primary></indexterm>QWidget::setErasePixmap(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setPalette(QPalette const&)</primary></indexterm>QWidget::setPalette(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setPaletteBackgroundColor(QColor const&)</primary></indexterm>QWidget::setPaletteBackgroundColor(QColor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setPaletteBackgroundPixmap(QPixmap const&)</primary></indexterm>QWidget::setPaletteBackgroundPixmap(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFont(QFont const&)</primary></indexterm>QWidget::setFont(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setCursor(QCursor const&)</primary></indexterm>QWidget::setCursor(QCursor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;33&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::unsetCursor()</primary></indexterm>QWidget::unsetCursor()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;34&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMask(QBitmap const&)</primary></indexterm>QWidget::setMask(QBitmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;35&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMask(QRegion const&)</primary></indexterm>QWidget::setMask(QRegion const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;36&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundColor(QColor const&)</primary></indexterm>QWidget::setBackgroundColor(QColor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;37&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundPixmap(QPixmap const&)</primary></indexterm>QWidget::setBackgroundPixmap(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;38&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setCaption(QString const&)</primary></indexterm>QWidget::setCaption(QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;39&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setIcon(QPixmap const&)</primary></indexterm>QWidget::setIcon(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;40&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setIconText(QString const&)</primary></indexterm>QWidget::setIconText(QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;41&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMouseTracking(bool)</primary></indexterm>QWidget::setMouseTracking(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;42&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFocus()</primary></indexterm>QWidget::setFocus()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;43&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setActiveWindow()</primary></indexterm>QWidget::setActiveWindow()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;44&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFocusPolicy(QWidget::FocusPolicy)</primary></indexterm>QWidget::setFocusPolicy(QWidget::FocusPolicy)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;45&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFocusProxy(QWidget*)</primary></indexterm>QWidget::setFocusProxy(QWidget*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;46&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setUpdatesEnabled(bool)</primary></indexterm>QWidget::setUpdatesEnabled(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;47&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::show()</primary></indexterm>QWidget::show()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;48&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::hide()</primary></indexterm>QWidget::hide()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;49&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showMinimized()</primary></indexterm>QWidget::showMinimized()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;50&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showMaximized()</primary></indexterm>QWidget::showMaximized()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;51&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showNormal()</primary></indexterm>QWidget::showNormal()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;52&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::polish()</primary></indexterm>QWidget::polish()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;53&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::move(int, int)</primary></indexterm>QWidget::move(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;54&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::resize(int, int)</primary></indexterm>QWidget::resize(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;55&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setGeometry(int, int, int, int)</primary></indexterm>QWidget::setGeometry(int, int, int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;56&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setGeometry(QRect const&)</primary></indexterm>NULL or QWidget::setGeometry(QRect const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;57&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::close(bool)</primary></indexterm>QWidget::close(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;58&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::sizeHint() const</primary></indexterm>QWidget::sizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;59&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::minimumSizeHint() const</primary></indexterm>QWidget::minimumSizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;60&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::sizePolicy() const</primary></indexterm>QWidget::sizePolicy() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;61&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setSizePolicy(QSizePolicy)</primary></indexterm>QWidget::setSizePolicy(QSizePolicy)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;62&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::heightForWidth(int) const</primary></indexterm>QWidget::heightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;63&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::adjustSize()</primary></indexterm>QWidget::adjustSize()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;64&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::reparent(QWidget*, unsigned int, QPoint const&, bool)</primary></indexterm>QWidget::reparent(QWidget*, unsigned int, QPoint const&, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;65&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setAcceptDrops(bool)</primary></indexterm>QWidget::setAcceptDrops(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;66&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setAutoMask(bool)</primary></indexterm>QWidget::setAutoMask(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;67&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundOrigin(QWidget::BackgroundOrigin)</primary></indexterm>QWidget::setBackgroundOrigin(QWidget::BackgroundOrigin)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;68&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::customWhatsThis() const</primary></indexterm>QWidget::customWhatsThis() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;69&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mousePressEvent(QMouseEvent*)</primary></indexterm>QWidget::mousePressEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;70&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseReleaseEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseReleaseEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;71&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseDoubleClickEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseDoubleClickEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;72&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseMoveEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseMoveEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;73&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::wheelEvent(QWheelEvent*)</primary></indexterm>QWidget::wheelEvent(QWheelEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;74&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyPressEvent(QKeyEvent*)</primary></indexterm>QWidget::keyPressEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;75&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyReleaseEvent(QKeyEvent*)</primary></indexterm>QWidget::keyReleaseEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;76&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusInEvent(QFocusEvent*)</primary></indexterm>QWidget::focusInEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;77&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusOutEvent(QFocusEvent*)</primary></indexterm>QWidget::focusOutEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;78&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enterEvent(QEvent*)</primary></indexterm>QWidget::enterEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;79&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::leaveEvent(QEvent*)</primary></indexterm>QWidget::leaveEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;80&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paintEvent(QPaintEvent*)</primary></indexterm>QWidget::paintEvent(QPaintEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;81&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::moveEvent(QMoveEvent*)</primary></indexterm>QWidget::moveEvent(QMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;82&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::resizeEvent(QResizeEvent*)</primary></indexterm>QWidget::resizeEvent(QResizeEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;83&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::closeEvent(QCloseEvent*)</primary></indexterm>QWidget::closeEvent(QCloseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;84&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::contextMenuEvent(QContextMenuEvent*)</primary></indexterm>QWidget::contextMenuEvent(QContextMenuEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;85&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::imStartEvent(QIMEvent*)</primary></indexterm>QWidget::imStartEvent(QIMEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;86&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::imComposeEvent(QIMEvent*)</primary></indexterm>QWidget::imComposeEvent(QIMEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;87&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::imEndEvent(QIMEvent*)</primary></indexterm>QWidget::imEndEvent(QIMEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;88&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::tabletEvent(QTabletEvent*)</primary></indexterm>QWidget::tabletEvent(QTabletEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;89&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragEnterEvent(QDragEnterEvent*)</primary></indexterm>QWidget::dragEnterEvent(QDragEnterEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;90&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragMoveEvent(QDragMoveEvent*)</primary></indexterm>QWidget::dragMoveEvent(QDragMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;91&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragLeaveEvent(QDragLeaveEvent*)</primary></indexterm>QWidget::dragLeaveEvent(QDragLeaveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;92&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dropEvent(QDropEvent*)</primary></indexterm>QWidget::dropEvent(QDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;93&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showEvent(QShowEvent*)</primary></indexterm>QWidget::showEvent(QShowEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;94&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::hideEvent(QHideEvent*)</primary></indexterm>QWidget::hideEvent(QHideEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;95&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::x11Event(_XEvent*)</primary></indexterm>QWidget::x11Event(_XEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;96&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::updateMask()</primary></indexterm>QWidget::updateMask()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;97&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::styleChange(QStyle&)</primary></indexterm>QWidget::styleChange(QStyle&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;98&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enabledChange(bool)</primary></indexterm>QWidget::enabledChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;99&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paletteChange(QPalette const&)</primary></indexterm>QWidget::paletteChange(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;100&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::fontChange(QFont const&)</primary></indexterm>QWidget::fontChange(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;101&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::windowActivationChange(bool)</primary></indexterm>QWidget::windowActivationChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;102&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::metric(int) const</primary></indexterm>QWidget::metric(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;103&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::create(unsigned long, bool, bool)</primary></indexterm>QWidget::create(unsigned long, bool, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;104&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::destroy(bool, bool)</primary></indexterm>QWidget::destroy(bool, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;105&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setWState(unsigned int)</primary></indexterm>NULL or QWidget::setWState(unsigned int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;106&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setWFlags(unsigned int)</primary></indexterm>NULL or QWidget::setWFlags(unsigned int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;107&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusNextPrevChild(bool)</primary></indexterm>QWidget::focusNextPrevChild(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;108&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setKeyCompression(bool)</primary></indexterm>QWidget::setKeyCompression(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;109&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMicroFocusHint(int, int, int, int, bool, QFont*)</primary></indexterm>QWidget::setMicroFocusHint(int, int, int, int, bool, QFont*)</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--classdata-->
<TABLE id="cls-54430-1">
<TITLE>Secondary vtable for QWidget</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>-80</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QWidget</primary></indexterm>typeinfo for QWidget</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::~QWidget()</primary></indexterm>non-virtual thunk to QWidget::~QWidget()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::~QWidget()</primary></indexterm>non-virtual thunk to QWidget::~QWidget()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::setResolution(int)</primary></indexterm>QPaintDevice::setResolution(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::resolution() const</primary></indexterm>QPaintDevice::resolution() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::handle() const</primary></indexterm>QPaintDevice::handle() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::x11RenderHandle() const</primary></indexterm>QPaintDevice::x11RenderHandle() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::setX11Data(QPaintDeviceX11Data const*)</primary></indexterm>QPaintDevice::setX11Data(QPaintDeviceX11Data const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::cmd(int, QPainter*, QPDevCmdParam*)</primary></indexterm>QPaintDevice::cmd(int, QPainter*, QPDevCmdParam*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::metric(int) const</primary></indexterm>non-virtual thunk to QWidget::metric(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::fontMet(QFont*, int, char const*, int) const</primary></indexterm>QPaintDevice::fontMet(QFont*, int, char const*, int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::fontInf(QFont*, int) const</primary></indexterm>QPaintDevice::fontInf(QFont*, int) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QWidget  class
is described by <XREF LINKEND="rtti-58563">
</PARA>
<!--classdata-->
<TABLE ID="rtti-58563">
<TITLE>typeinfo for QWidget</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__vmi_class_type_info</primary></indexterm>vtable for __cxxabiv1::__vmi_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QWidget</primary></indexterm>typeinfo name for QWidget</ENTRY>
</ROW>
<ROW>
<ENTRY>flags:</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QObject</primary></indexterm>typeinfo for QObject</ENTRY>
<ENTRY>2</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QPaintDevice</primary></indexterm>typeinfo for QPaintDevice</ENTRY>
<ENTRY>10242</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QToolTipGroup</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QToolTipGroup class
is described in the generic part of this specification.
</PARA>
<PARA>
The Run Time Type Information for the QToolTipGroup  class
is described by <XREF LINKEND="rtti-49166">
</PARA>
<!--classdata-->
<TABLE ID="rtti-49166">
<TITLE>typeinfo for QToolTipGroup</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QToolTipGroup</primary></indexterm>typeinfo name for QToolTipGroup</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QObject</primary></indexterm>typeinfo for QObject</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QPushButton</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QPushButton class
is described by <XREF LINKEND="cls-55551-0">
</PARA>
<!--classdata-->
<TABLE id="cls-55551-0">
<TITLE>Primary vtable for QPushButton</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QPushButton</primary></indexterm>typeinfo for QPushButton</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPushButton::metaObject() const</primary></indexterm>NULL or QPushButton::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPushButton::className() const</primary></indexterm>QPushButton::className() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPushButton::qt_cast(char const*)</primary></indexterm>QPushButton::qt_cast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPushButton::qt_invoke(int, QUObject*)</primary></indexterm>QPushButton::qt_invoke(int, QUObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPushButton::qt_emit(int, QUObject*)</primary></indexterm>QPushButton::qt_emit(int, QUObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPushButton::qt_property(int, int, QVariant*)</primary></indexterm>QPushButton::qt_property(int, int, QVariant*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPushButton::~QPushButton()</primary></indexterm>QPushButton::~QPushButton()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPushButton::~QPushButton()</primary></indexterm>QPushButton::~QPushButton()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::event(QEvent*)</primary></indexterm>QWidget::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::eventFilter(QObject*, QEvent*)</primary></indexterm>QObject::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setName(char const*)</primary></indexterm>QWidget::setName(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::insertChild(QObject*)</primary></indexterm>QObject::insertChild(QObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::removeChild(QObject*)</primary></indexterm>QObject::removeChild(QObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::setProperty(char const*, QVariant const&)</primary></indexterm>QObject::setProperty(char const*, QVariant const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::property(char const*) const</primary></indexterm>QObject::property(char const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QCustomEvent*)</primary></indexterm>QObject::customEvent(QCustomEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::checkConnectArgs(char const*, QObject const*, char const*)</primary></indexterm>QObject::checkConnectArgs(char const*, QObject const*, char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setEnabled(bool)</primary></indexterm>QWidget::setEnabled(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMinimumSize(int, int)</primary></indexterm>QWidget::setMinimumSize(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMaximumSize(int, int)</primary></indexterm>QWidget::setMaximumSize(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setSizeIncrement(int, int)</primary></indexterm>QWidget::setSizeIncrement(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundMode(Qt::BackgroundMode)</primary></indexterm>QWidget::setBackgroundMode(Qt::BackgroundMode)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setEraseColor(QColor const&)</primary></indexterm>QWidget::setEraseColor(QColor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setErasePixmap(QPixmap const&)</primary></indexterm>QWidget::setErasePixmap(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setPalette(QPalette const&)</primary></indexterm>QWidget::setPalette(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setPaletteBackgroundColor(QColor const&)</primary></indexterm>QWidget::setPaletteBackgroundColor(QColor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setPaletteBackgroundPixmap(QPixmap const&)</primary></indexterm>QWidget::setPaletteBackgroundPixmap(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFont(QFont const&)</primary></indexterm>QWidget::setFont(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setCursor(QCursor const&)</primary></indexterm>QWidget::setCursor(QCursor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;33&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::unsetCursor()</primary></indexterm>QWidget::unsetCursor()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;34&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMask(QBitmap const&)</primary></indexterm>QWidget::setMask(QBitmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;35&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMask(QRegion const&)</primary></indexterm>QWidget::setMask(QRegion const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;36&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundColor(QColor const&)</primary></indexterm>QWidget::setBackgroundColor(QColor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;37&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundPixmap(QPixmap const&)</primary></indexterm>QWidget::setBackgroundPixmap(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;38&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setCaption(QString const&)</primary></indexterm>QWidget::setCaption(QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;39&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setIcon(QPixmap const&)</primary></indexterm>QWidget::setIcon(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;40&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setIconText(QString const&)</primary></indexterm>QWidget::setIconText(QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;41&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMouseTracking(bool)</primary></indexterm>QWidget::setMouseTracking(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;42&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFocus()</primary></indexterm>QWidget::setFocus()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;43&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setActiveWindow()</primary></indexterm>QWidget::setActiveWindow()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;44&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFocusPolicy(QWidget::FocusPolicy)</primary></indexterm>QWidget::setFocusPolicy(QWidget::FocusPolicy)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;45&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFocusProxy(QWidget*)</primary></indexterm>QWidget::setFocusProxy(QWidget*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;46&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setUpdatesEnabled(bool)</primary></indexterm>QWidget::setUpdatesEnabled(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;47&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::show()</primary></indexterm>QWidget::show()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;48&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::hide()</primary></indexterm>QWidget::hide()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;49&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showMinimized()</primary></indexterm>QWidget::showMinimized()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;50&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showMaximized()</primary></indexterm>QWidget::showMaximized()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;51&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showNormal()</primary></indexterm>QWidget::showNormal()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;52&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::polish()</primary></indexterm>QWidget::polish()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;53&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPushButton::move(int, int)</primary></indexterm>QPushButton::move(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;54&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPushButton::resize(int, int)</primary></indexterm>QPushButton::resize(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;55&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPushButton::setGeometry(int, int, int, int)</primary></indexterm>QPushButton::setGeometry(int, int, int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;56&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPushButton::setGeometry(QRect const&)</primary></indexterm>QPushButton::setGeometry(QRect const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;57&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::close(bool)</primary></indexterm>QWidget::close(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;58&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPushButton::sizeHint() const</primary></indexterm>QPushButton::sizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;59&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::minimumSizeHint() const</primary></indexterm>QWidget::minimumSizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;60&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::sizePolicy() const</primary></indexterm>QWidget::sizePolicy() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;61&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setSizePolicy(QSizePolicy)</primary></indexterm>QWidget::setSizePolicy(QSizePolicy)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;62&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::heightForWidth(int) const</primary></indexterm>QWidget::heightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;63&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::adjustSize()</primary></indexterm>QWidget::adjustSize()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;64&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::reparent(QWidget*, unsigned int, QPoint const&, bool)</primary></indexterm>QWidget::reparent(QWidget*, unsigned int, QPoint const&, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;65&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setAcceptDrops(bool)</primary></indexterm>QWidget::setAcceptDrops(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;66&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setAutoMask(bool)</primary></indexterm>QWidget::setAutoMask(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;67&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundOrigin(QWidget::BackgroundOrigin)</primary></indexterm>QWidget::setBackgroundOrigin(QWidget::BackgroundOrigin)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;68&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::customWhatsThis() const</primary></indexterm>QWidget::customWhatsThis() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;69&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QButton::mousePressEvent(QMouseEvent*)</primary></indexterm>QButton::mousePressEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;70&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QButton::mouseReleaseEvent(QMouseEvent*)</primary></indexterm>QButton::mouseReleaseEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;71&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseDoubleClickEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseDoubleClickEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;72&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QButton::mouseMoveEvent(QMouseEvent*)</primary></indexterm>QButton::mouseMoveEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;73&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::wheelEvent(QWheelEvent*)</primary></indexterm>QWidget::wheelEvent(QWheelEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;74&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QButton::keyPressEvent(QKeyEvent*)</primary></indexterm>QButton::keyPressEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;75&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QButton::keyReleaseEvent(QKeyEvent*)</primary></indexterm>QButton::keyReleaseEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;76&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPushButton::focusInEvent(QFocusEvent*)</primary></indexterm>QPushButton::focusInEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;77&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPushButton::focusOutEvent(QFocusEvent*)</primary></indexterm>QPushButton::focusOutEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;78&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enterEvent(QEvent*)</primary></indexterm>QWidget::enterEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;79&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::leaveEvent(QEvent*)</primary></indexterm>QWidget::leaveEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;80&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QButton::paintEvent(QPaintEvent*)</primary></indexterm>QButton::paintEvent(QPaintEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;81&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::moveEvent(QMoveEvent*)</primary></indexterm>QWidget::moveEvent(QMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;82&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPushButton::resizeEvent(QResizeEvent*)</primary></indexterm>QPushButton::resizeEvent(QResizeEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;83&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::closeEvent(QCloseEvent*)</primary></indexterm>QWidget::closeEvent(QCloseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;84&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::contextMenuEvent(QContextMenuEvent*)</primary></indexterm>QWidget::contextMenuEvent(QContextMenuEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;85&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::imStartEvent(QIMEvent*)</primary></indexterm>QWidget::imStartEvent(QIMEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;86&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::imComposeEvent(QIMEvent*)</primary></indexterm>QWidget::imComposeEvent(QIMEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;87&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::imEndEvent(QIMEvent*)</primary></indexterm>QWidget::imEndEvent(QIMEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;88&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::tabletEvent(QTabletEvent*)</primary></indexterm>QWidget::tabletEvent(QTabletEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;89&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragEnterEvent(QDragEnterEvent*)</primary></indexterm>QWidget::dragEnterEvent(QDragEnterEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;90&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragMoveEvent(QDragMoveEvent*)</primary></indexterm>QWidget::dragMoveEvent(QDragMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;91&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragLeaveEvent(QDragLeaveEvent*)</primary></indexterm>QWidget::dragLeaveEvent(QDragLeaveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;92&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dropEvent(QDropEvent*)</primary></indexterm>QWidget::dropEvent(QDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;93&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showEvent(QShowEvent*)</primary></indexterm>QWidget::showEvent(QShowEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;94&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::hideEvent(QHideEvent*)</primary></indexterm>QWidget::hideEvent(QHideEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;95&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::x11Event(_XEvent*)</primary></indexterm>QWidget::x11Event(_XEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;96&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPushButton::updateMask()</primary></indexterm>QPushButton::updateMask()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;97&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::styleChange(QStyle&)</primary></indexterm>QWidget::styleChange(QStyle&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;98&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QButton::enabledChange(bool)</primary></indexterm>QButton::enabledChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;99&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paletteChange(QPalette const&)</primary></indexterm>QWidget::paletteChange(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;100&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::fontChange(QFont const&)</primary></indexterm>QWidget::fontChange(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;101&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::windowActivationChange(bool)</primary></indexterm>QWidget::windowActivationChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;102&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::metric(int) const</primary></indexterm>QWidget::metric(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;103&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::create(unsigned long, bool, bool)</primary></indexterm>QWidget::create(unsigned long, bool, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;104&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::destroy(bool, bool)</primary></indexterm>QWidget::destroy(bool, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;105&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setWState(unsigned int)</primary></indexterm>NULL or QWidget::setWState(unsigned int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;106&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setWFlags(unsigned int)</primary></indexterm>NULL or QWidget::setWFlags(unsigned int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;107&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusNextPrevChild(bool)</primary></indexterm>QWidget::focusNextPrevChild(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;108&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setKeyCompression(bool)</primary></indexterm>QWidget::setKeyCompression(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;109&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMicroFocusHint(int, int, int, int, bool, QFont*)</primary></indexterm>QWidget::setMicroFocusHint(int, int, int, int, bool, QFont*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;110&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QButton::setText(QString const&)</primary></indexterm>QButton::setText(QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;111&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QButton::setPixmap(QPixmap const&)</primary></indexterm>QButton::setPixmap(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;112&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QButton::setAccel(QKeySequence const&)</primary></indexterm>QButton::setAccel(QKeySequence const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;113&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QButton::setDown(bool)</primary></indexterm>QButton::setDown(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;114&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QButton::setAutoRepeat(bool)</primary></indexterm>QButton::setAutoRepeat(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;115&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QButton::setToggleType(QButton::ToggleType)</primary></indexterm>QButton::setToggleType(QButton::ToggleType)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;116&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QButton::setState(QButton::ToggleState)</primary></indexterm>QButton::setState(QButton::ToggleState)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;117&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QButton::hitButton(QPoint const&) const</primary></indexterm>QButton::hitButton(QPoint const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;118&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPushButton::drawButton(QPainter*)</primary></indexterm>QPushButton::drawButton(QPainter*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;119&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPushButton::drawButtonLabel(QPainter*)</primary></indexterm>QPushButton::drawButtonLabel(QPainter*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;120&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QButton::setGroup(QButtonGroup*)</primary></indexterm>QButton::setGroup(QButtonGroup*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;121&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPushButton::setAutoDefault(bool)</primary></indexterm>QPushButton::setAutoDefault(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;122&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPushButton::setDefault(bool)</primary></indexterm>QPushButton::setDefault(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;123&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPushButton::setIsMenuButton(bool)</primary></indexterm>NULL or QPushButton::setIsMenuButton(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;124&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPushButton::setOn(bool)</primary></indexterm>QPushButton::setOn(bool)</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--classdata-->
<TABLE id="cls-55551-1">
<TITLE>Secondary vtable for QPushButton</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>-80</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QPushButton</primary></indexterm>typeinfo for QPushButton</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QPushButton::~QPushButton()</primary></indexterm>non-virtual thunk to QPushButton::~QPushButton()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QPushButton::~QPushButton()</primary></indexterm>non-virtual thunk to QPushButton::~QPushButton()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::setResolution(int)</primary></indexterm>QPaintDevice::setResolution(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::resolution() const</primary></indexterm>QPaintDevice::resolution() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::handle() const</primary></indexterm>QPaintDevice::handle() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::x11RenderHandle() const</primary></indexterm>QPaintDevice::x11RenderHandle() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::setX11Data(QPaintDeviceX11Data const*)</primary></indexterm>QPaintDevice::setX11Data(QPaintDeviceX11Data const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::cmd(int, QPainter*, QPDevCmdParam*)</primary></indexterm>QPaintDevice::cmd(int, QPainter*, QPDevCmdParam*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::metric(int) const</primary></indexterm>non-virtual thunk to QWidget::metric(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::fontMet(QFont*, int, char const*, int) const</primary></indexterm>QPaintDevice::fontMet(QFont*, int, char const*, int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::fontInf(QFont*, int) const</primary></indexterm>QPaintDevice::fontInf(QFont*, int) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QPushButton  class
is described by <XREF LINKEND="rtti-55056">
</PARA>
<!--classdata-->
<TABLE ID="rtti-55056">
<TITLE>typeinfo for QPushButton</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QPushButton</primary></indexterm>typeinfo name for QPushButton</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QButton</primary></indexterm>typeinfo for QButton</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QWidgetList</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QWidgetList class
is described in the generic part of this specification.
</PARA>
<PARA>
The Run Time Type Information for the QWidgetList  class
is described by <XREF LINKEND="rtti-55146">
</PARA>
<!--classdata-->
<TABLE ID="rtti-55146">
<TITLE>typeinfo for QWidgetList</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QWidgetList</primary></indexterm>typeinfo name for QWidgetList</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QPtrList&lt;QWidget&gt;</primary></indexterm>typeinfo for QPtrList&lt;QWidget&gt;</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QDataView</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QDataView class
is described by <XREF LINKEND="cls-56297-0">
</PARA>
<!--classdata-->
<TABLE id="cls-56297-0">
<TITLE>Primary vtable for QDataView</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QDataView</primary></indexterm>typeinfo for QDataView</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDataView::metaObject() const</primary></indexterm>NULL or QDataView::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDataView::className() const</primary></indexterm>QDataView::className() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDataView::qt_cast(char const*)</primary></indexterm>QDataView::qt_cast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDataView::qt_invoke(int, QUObject*)</primary></indexterm>QDataView::qt_invoke(int, QUObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDataView::qt_emit(int, QUObject*)</primary></indexterm>QDataView::qt_emit(int, QUObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDataView::qt_property(int, int, QVariant*)</primary></indexterm>QDataView::qt_property(int, int, QVariant*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDataView::~QDataView()</primary></indexterm>QDataView::~QDataView()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDataView::~QDataView()</primary></indexterm>QDataView::~QDataView()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::event(QEvent*)</primary></indexterm>QWidget::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::eventFilter(QObject*, QEvent*)</primary></indexterm>QObject::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setName(char const*)</primary></indexterm>QWidget::setName(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::insertChild(QObject*)</primary></indexterm>QObject::insertChild(QObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::removeChild(QObject*)</primary></indexterm>QObject::removeChild(QObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::setProperty(char const*, QVariant const&)</primary></indexterm>QObject::setProperty(char const*, QVariant const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::property(char const*) const</primary></indexterm>QObject::property(char const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QCustomEvent*)</primary></indexterm>QObject::customEvent(QCustomEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::checkConnectArgs(char const*, QObject const*, char const*)</primary></indexterm>QObject::checkConnectArgs(char const*, QObject const*, char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setEnabled(bool)</primary></indexterm>QWidget::setEnabled(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMinimumSize(int, int)</primary></indexterm>QWidget::setMinimumSize(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMaximumSize(int, int)</primary></indexterm>QWidget::setMaximumSize(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setSizeIncrement(int, int)</primary></indexterm>QWidget::setSizeIncrement(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundMode(Qt::BackgroundMode)</primary></indexterm>QWidget::setBackgroundMode(Qt::BackgroundMode)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setEraseColor(QColor const&)</primary></indexterm>QWidget::setEraseColor(QColor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setErasePixmap(QPixmap const&)</primary></indexterm>QWidget::setErasePixmap(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setPalette(QPalette const&)</primary></indexterm>QWidget::setPalette(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setPaletteBackgroundColor(QColor const&)</primary></indexterm>QWidget::setPaletteBackgroundColor(QColor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setPaletteBackgroundPixmap(QPixmap const&)</primary></indexterm>QWidget::setPaletteBackgroundPixmap(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFont(QFont const&)</primary></indexterm>QWidget::setFont(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setCursor(QCursor const&)</primary></indexterm>QWidget::setCursor(QCursor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;33&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::unsetCursor()</primary></indexterm>QWidget::unsetCursor()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;34&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMask(QBitmap const&)</primary></indexterm>QWidget::setMask(QBitmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;35&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMask(QRegion const&)</primary></indexterm>QWidget::setMask(QRegion const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;36&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundColor(QColor const&)</primary></indexterm>QWidget::setBackgroundColor(QColor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;37&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundPixmap(QPixmap const&)</primary></indexterm>QWidget::setBackgroundPixmap(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;38&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setCaption(QString const&)</primary></indexterm>QWidget::setCaption(QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;39&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setIcon(QPixmap const&)</primary></indexterm>QWidget::setIcon(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;40&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setIconText(QString const&)</primary></indexterm>QWidget::setIconText(QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;41&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMouseTracking(bool)</primary></indexterm>QWidget::setMouseTracking(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;42&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFocus()</primary></indexterm>QWidget::setFocus()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;43&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setActiveWindow()</primary></indexterm>QWidget::setActiveWindow()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;44&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFocusPolicy(QWidget::FocusPolicy)</primary></indexterm>QWidget::setFocusPolicy(QWidget::FocusPolicy)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;45&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFocusProxy(QWidget*)</primary></indexterm>QWidget::setFocusProxy(QWidget*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;46&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setUpdatesEnabled(bool)</primary></indexterm>QWidget::setUpdatesEnabled(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;47&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::show()</primary></indexterm>QWidget::show()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;48&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::hide()</primary></indexterm>QWidget::hide()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;49&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showMinimized()</primary></indexterm>QWidget::showMinimized()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;50&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showMaximized()</primary></indexterm>QWidget::showMaximized()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;51&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showNormal()</primary></indexterm>QWidget::showNormal()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;52&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::polish()</primary></indexterm>QWidget::polish()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;53&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::move(int, int)</primary></indexterm>QWidget::move(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;54&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::resize(int, int)</primary></indexterm>QWidget::resize(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;55&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setGeometry(int, int, int, int)</primary></indexterm>QWidget::setGeometry(int, int, int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;56&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setGeometry(QRect const&)</primary></indexterm>NULL or QWidget::setGeometry(QRect const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;57&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::close(bool)</primary></indexterm>QWidget::close(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;58&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::sizeHint() const</primary></indexterm>QWidget::sizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;59&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::minimumSizeHint() const</primary></indexterm>QWidget::minimumSizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;60&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::sizePolicy() const</primary></indexterm>QWidget::sizePolicy() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;61&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setSizePolicy(QSizePolicy)</primary></indexterm>QWidget::setSizePolicy(QSizePolicy)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;62&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::heightForWidth(int) const</primary></indexterm>QWidget::heightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;63&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::adjustSize()</primary></indexterm>QWidget::adjustSize()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;64&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::reparent(QWidget*, unsigned int, QPoint const&, bool)</primary></indexterm>QWidget::reparent(QWidget*, unsigned int, QPoint const&, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;65&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setAcceptDrops(bool)</primary></indexterm>QWidget::setAcceptDrops(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;66&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setAutoMask(bool)</primary></indexterm>QWidget::setAutoMask(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;67&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundOrigin(QWidget::BackgroundOrigin)</primary></indexterm>QWidget::setBackgroundOrigin(QWidget::BackgroundOrigin)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;68&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::customWhatsThis() const</primary></indexterm>QWidget::customWhatsThis() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;69&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mousePressEvent(QMouseEvent*)</primary></indexterm>QWidget::mousePressEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;70&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseReleaseEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseReleaseEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;71&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseDoubleClickEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseDoubleClickEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;72&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseMoveEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseMoveEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;73&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::wheelEvent(QWheelEvent*)</primary></indexterm>QWidget::wheelEvent(QWheelEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;74&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyPressEvent(QKeyEvent*)</primary></indexterm>QWidget::keyPressEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;75&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyReleaseEvent(QKeyEvent*)</primary></indexterm>QWidget::keyReleaseEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;76&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusInEvent(QFocusEvent*)</primary></indexterm>QWidget::focusInEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;77&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusOutEvent(QFocusEvent*)</primary></indexterm>QWidget::focusOutEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;78&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enterEvent(QEvent*)</primary></indexterm>QWidget::enterEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;79&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::leaveEvent(QEvent*)</primary></indexterm>QWidget::leaveEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;80&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paintEvent(QPaintEvent*)</primary></indexterm>QWidget::paintEvent(QPaintEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;81&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::moveEvent(QMoveEvent*)</primary></indexterm>QWidget::moveEvent(QMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;82&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::resizeEvent(QResizeEvent*)</primary></indexterm>QWidget::resizeEvent(QResizeEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;83&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::closeEvent(QCloseEvent*)</primary></indexterm>QWidget::closeEvent(QCloseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;84&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::contextMenuEvent(QContextMenuEvent*)</primary></indexterm>QWidget::contextMenuEvent(QContextMenuEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;85&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::imStartEvent(QIMEvent*)</primary></indexterm>QWidget::imStartEvent(QIMEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;86&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::imComposeEvent(QIMEvent*)</primary></indexterm>QWidget::imComposeEvent(QIMEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;87&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::imEndEvent(QIMEvent*)</primary></indexterm>QWidget::imEndEvent(QIMEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;88&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::tabletEvent(QTabletEvent*)</primary></indexterm>QWidget::tabletEvent(QTabletEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;89&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragEnterEvent(QDragEnterEvent*)</primary></indexterm>QWidget::dragEnterEvent(QDragEnterEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;90&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragMoveEvent(QDragMoveEvent*)</primary></indexterm>QWidget::dragMoveEvent(QDragMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;91&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragLeaveEvent(QDragLeaveEvent*)</primary></indexterm>QWidget::dragLeaveEvent(QDragLeaveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;92&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dropEvent(QDropEvent*)</primary></indexterm>QWidget::dropEvent(QDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;93&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showEvent(QShowEvent*)</primary></indexterm>QWidget::showEvent(QShowEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;94&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::hideEvent(QHideEvent*)</primary></indexterm>QWidget::hideEvent(QHideEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;95&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::x11Event(_XEvent*)</primary></indexterm>QWidget::x11Event(_XEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;96&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::updateMask()</primary></indexterm>QWidget::updateMask()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;97&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::styleChange(QStyle&)</primary></indexterm>QWidget::styleChange(QStyle&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;98&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enabledChange(bool)</primary></indexterm>QWidget::enabledChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;99&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paletteChange(QPalette const&)</primary></indexterm>QWidget::paletteChange(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;100&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::fontChange(QFont const&)</primary></indexterm>QWidget::fontChange(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;101&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::windowActivationChange(bool)</primary></indexterm>QWidget::windowActivationChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;102&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::metric(int) const</primary></indexterm>QWidget::metric(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;103&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::create(unsigned long, bool, bool)</primary></indexterm>QWidget::create(unsigned long, bool, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;104&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::destroy(bool, bool)</primary></indexterm>QWidget::destroy(bool, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;105&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setWState(unsigned int)</primary></indexterm>NULL or QWidget::setWState(unsigned int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;106&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setWFlags(unsigned int)</primary></indexterm>NULL or QWidget::setWFlags(unsigned int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;107&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusNextPrevChild(bool)</primary></indexterm>QWidget::focusNextPrevChild(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;108&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setKeyCompression(bool)</primary></indexterm>QWidget::setKeyCompression(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;109&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMicroFocusHint(int, int, int, int, bool, QFont*)</primary></indexterm>QWidget::setMicroFocusHint(int, int, int, int, bool, QFont*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;110&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDataView::setForm(QSqlForm*)</primary></indexterm>QDataView::setForm(QSqlForm*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;111&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDataView::setRecord(QSqlRecord*)</primary></indexterm>QDataView::setRecord(QSqlRecord*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;112&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDataView::refresh(QSqlRecord*)</primary></indexterm>QDataView::refresh(QSqlRecord*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;113&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDataView::readFields()</primary></indexterm>QDataView::readFields()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;114&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDataView::writeFields()</primary></indexterm>QDataView::writeFields()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;115&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDataView::clearValues()</primary></indexterm>QDataView::clearValues()</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--classdata-->
<TABLE id="cls-56297-1">
<TITLE>Secondary vtable for QDataView</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>-80</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QDataView</primary></indexterm>typeinfo for QDataView</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QDataView::~QDataView()</primary></indexterm>non-virtual thunk to QDataView::~QDataView()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QDataView::~QDataView()</primary></indexterm>non-virtual thunk to QDataView::~QDataView()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::setResolution(int)</primary></indexterm>QPaintDevice::setResolution(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::resolution() const</primary></indexterm>QPaintDevice::resolution() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::handle() const</primary></indexterm>QPaintDevice::handle() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::x11RenderHandle() const</primary></indexterm>QPaintDevice::x11RenderHandle() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::setX11Data(QPaintDeviceX11Data const*)</primary></indexterm>QPaintDevice::setX11Data(QPaintDeviceX11Data const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::cmd(int, QPainter*, QPDevCmdParam*)</primary></indexterm>QPaintDevice::cmd(int, QPainter*, QPDevCmdParam*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::metric(int) const</primary></indexterm>non-virtual thunk to QWidget::metric(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::fontMet(QFont*, int, char const*, int) const</primary></indexterm>QPaintDevice::fontMet(QFont*, int, char const*, int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::fontInf(QFont*, int) const</primary></indexterm>QPaintDevice::fontInf(QFont*, int) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QDataView  class
is described by <XREF LINKEND="rtti-53237">
</PARA>
<!--classdata-->
<TABLE ID="rtti-53237">
<TITLE>typeinfo for QDataView</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QDataView</primary></indexterm>typeinfo name for QDataView</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QWidget</primary></indexterm>typeinfo for QWidget</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QDataBrowser</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QDataBrowser class
is described by <XREF LINKEND="cls-52982-0">
</PARA>
<!--classdata-->
<TABLE id="cls-52982-0">
<TITLE>Primary vtable for QDataBrowser</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QDataBrowser</primary></indexterm>typeinfo for QDataBrowser</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDataBrowser::metaObject() const</primary></indexterm>NULL or QDataBrowser::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDataBrowser::className() const</primary></indexterm>QDataBrowser::className() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDataBrowser::qt_cast(char const*)</primary></indexterm>QDataBrowser::qt_cast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDataBrowser::qt_invoke(int, QUObject*)</primary></indexterm>QDataBrowser::qt_invoke(int, QUObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDataBrowser::qt_emit(int, QUObject*)</primary></indexterm>QDataBrowser::qt_emit(int, QUObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDataBrowser::qt_property(int, int, QVariant*)</primary></indexterm>QDataBrowser::qt_property(int, int, QVariant*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDataBrowser::~QDataBrowser()</primary></indexterm>QDataBrowser::~QDataBrowser()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDataBrowser::~QDataBrowser()</primary></indexterm>QDataBrowser::~QDataBrowser()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::event(QEvent*)</primary></indexterm>QWidget::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::eventFilter(QObject*, QEvent*)</primary></indexterm>QObject::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setName(char const*)</primary></indexterm>QWidget::setName(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::insertChild(QObject*)</primary></indexterm>QObject::insertChild(QObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::removeChild(QObject*)</primary></indexterm>QObject::removeChild(QObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::setProperty(char const*, QVariant const&)</primary></indexterm>QObject::setProperty(char const*, QVariant const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::property(char const*) const</primary></indexterm>QObject::property(char const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QCustomEvent*)</primary></indexterm>QObject::customEvent(QCustomEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::checkConnectArgs(char const*, QObject const*, char const*)</primary></indexterm>QObject::checkConnectArgs(char const*, QObject const*, char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setEnabled(bool)</primary></indexterm>QWidget::setEnabled(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMinimumSize(int, int)</primary></indexterm>QWidget::setMinimumSize(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMaximumSize(int, int)</primary></indexterm>QWidget::setMaximumSize(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setSizeIncrement(int, int)</primary></indexterm>QWidget::setSizeIncrement(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundMode(Qt::BackgroundMode)</primary></indexterm>QWidget::setBackgroundMode(Qt::BackgroundMode)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setEraseColor(QColor const&)</primary></indexterm>QWidget::setEraseColor(QColor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setErasePixmap(QPixmap const&)</primary></indexterm>QWidget::setErasePixmap(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setPalette(QPalette const&)</primary></indexterm>QWidget::setPalette(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setPaletteBackgroundColor(QColor const&)</primary></indexterm>QWidget::setPaletteBackgroundColor(QColor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setPaletteBackgroundPixmap(QPixmap const&)</primary></indexterm>QWidget::setPaletteBackgroundPixmap(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFont(QFont const&)</primary></indexterm>QWidget::setFont(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setCursor(QCursor const&)</primary></indexterm>QWidget::setCursor(QCursor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;33&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::unsetCursor()</primary></indexterm>QWidget::unsetCursor()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;34&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMask(QBitmap const&)</primary></indexterm>QWidget::setMask(QBitmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;35&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMask(QRegion const&)</primary></indexterm>QWidget::setMask(QRegion const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;36&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundColor(QColor const&)</primary></indexterm>QWidget::setBackgroundColor(QColor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;37&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundPixmap(QPixmap const&)</primary></indexterm>QWidget::setBackgroundPixmap(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;38&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setCaption(QString const&)</primary></indexterm>QWidget::setCaption(QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;39&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setIcon(QPixmap const&)</primary></indexterm>QWidget::setIcon(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;40&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setIconText(QString const&)</primary></indexterm>QWidget::setIconText(QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;41&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMouseTracking(bool)</primary></indexterm>QWidget::setMouseTracking(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;42&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFocus()</primary></indexterm>QWidget::setFocus()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;43&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setActiveWindow()</primary></indexterm>QWidget::setActiveWindow()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;44&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFocusPolicy(QWidget::FocusPolicy)</primary></indexterm>QWidget::setFocusPolicy(QWidget::FocusPolicy)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;45&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFocusProxy(QWidget*)</primary></indexterm>QWidget::setFocusProxy(QWidget*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;46&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setUpdatesEnabled(bool)</primary></indexterm>QWidget::setUpdatesEnabled(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;47&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::show()</primary></indexterm>QWidget::show()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;48&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::hide()</primary></indexterm>QWidget::hide()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;49&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showMinimized()</primary></indexterm>QWidget::showMinimized()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;50&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showMaximized()</primary></indexterm>QWidget::showMaximized()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;51&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showNormal()</primary></indexterm>QWidget::showNormal()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;52&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::polish()</primary></indexterm>QWidget::polish()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;53&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::move(int, int)</primary></indexterm>QWidget::move(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;54&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::resize(int, int)</primary></indexterm>QWidget::resize(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;55&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setGeometry(int, int, int, int)</primary></indexterm>QWidget::setGeometry(int, int, int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;56&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setGeometry(QRect const&)</primary></indexterm>NULL or QWidget::setGeometry(QRect const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;57&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::close(bool)</primary></indexterm>QWidget::close(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;58&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::sizeHint() const</primary></indexterm>QWidget::sizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;59&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::minimumSizeHint() const</primary></indexterm>QWidget::minimumSizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;60&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::sizePolicy() const</primary></indexterm>QWidget::sizePolicy() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;61&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setSizePolicy(QSizePolicy)</primary></indexterm>QWidget::setSizePolicy(QSizePolicy)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;62&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::heightForWidth(int) const</primary></indexterm>QWidget::heightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;63&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::adjustSize()</primary></indexterm>QWidget::adjustSize()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;64&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::reparent(QWidget*, unsigned int, QPoint const&, bool)</primary></indexterm>QWidget::reparent(QWidget*, unsigned int, QPoint const&, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;65&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setAcceptDrops(bool)</primary></indexterm>QWidget::setAcceptDrops(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;66&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setAutoMask(bool)</primary></indexterm>QWidget::setAutoMask(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;67&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundOrigin(QWidget::BackgroundOrigin)</primary></indexterm>QWidget::setBackgroundOrigin(QWidget::BackgroundOrigin)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;68&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::customWhatsThis() const</primary></indexterm>QWidget::customWhatsThis() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;69&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mousePressEvent(QMouseEvent*)</primary></indexterm>QWidget::mousePressEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;70&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseReleaseEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseReleaseEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;71&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseDoubleClickEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseDoubleClickEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;72&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseMoveEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseMoveEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;73&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::wheelEvent(QWheelEvent*)</primary></indexterm>QWidget::wheelEvent(QWheelEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;74&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyPressEvent(QKeyEvent*)</primary></indexterm>QWidget::keyPressEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;75&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyReleaseEvent(QKeyEvent*)</primary></indexterm>QWidget::keyReleaseEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;76&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusInEvent(QFocusEvent*)</primary></indexterm>QWidget::focusInEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;77&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusOutEvent(QFocusEvent*)</primary></indexterm>QWidget::focusOutEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;78&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enterEvent(QEvent*)</primary></indexterm>QWidget::enterEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;79&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::leaveEvent(QEvent*)</primary></indexterm>QWidget::leaveEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;80&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paintEvent(QPaintEvent*)</primary></indexterm>QWidget::paintEvent(QPaintEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;81&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::moveEvent(QMoveEvent*)</primary></indexterm>QWidget::moveEvent(QMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;82&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::resizeEvent(QResizeEvent*)</primary></indexterm>QWidget::resizeEvent(QResizeEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;83&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::closeEvent(QCloseEvent*)</primary></indexterm>QWidget::closeEvent(QCloseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;84&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::contextMenuEvent(QContextMenuEvent*)</primary></indexterm>QWidget::contextMenuEvent(QContextMenuEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;85&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::imStartEvent(QIMEvent*)</primary></indexterm>QWidget::imStartEvent(QIMEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;86&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::imComposeEvent(QIMEvent*)</primary></indexterm>QWidget::imComposeEvent(QIMEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;87&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::imEndEvent(QIMEvent*)</primary></indexterm>QWidget::imEndEvent(QIMEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;88&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::tabletEvent(QTabletEvent*)</primary></indexterm>QWidget::tabletEvent(QTabletEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;89&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragEnterEvent(QDragEnterEvent*)</primary></indexterm>QWidget::dragEnterEvent(QDragEnterEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;90&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragMoveEvent(QDragMoveEvent*)</primary></indexterm>QWidget::dragMoveEvent(QDragMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;91&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragLeaveEvent(QDragLeaveEvent*)</primary></indexterm>QWidget::dragLeaveEvent(QDragLeaveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;92&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dropEvent(QDropEvent*)</primary></indexterm>QWidget::dropEvent(QDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;93&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showEvent(QShowEvent*)</primary></indexterm>QWidget::showEvent(QShowEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;94&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::hideEvent(QHideEvent*)</primary></indexterm>QWidget::hideEvent(QHideEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;95&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::x11Event(_XEvent*)</primary></indexterm>QWidget::x11Event(_XEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;96&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::updateMask()</primary></indexterm>QWidget::updateMask()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;97&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::styleChange(QStyle&)</primary></indexterm>QWidget::styleChange(QStyle&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;98&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enabledChange(bool)</primary></indexterm>QWidget::enabledChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;99&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paletteChange(QPalette const&)</primary></indexterm>QWidget::paletteChange(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;100&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::fontChange(QFont const&)</primary></indexterm>QWidget::fontChange(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;101&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::windowActivationChange(bool)</primary></indexterm>QWidget::windowActivationChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;102&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::metric(int) const</primary></indexterm>QWidget::metric(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;103&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::create(unsigned long, bool, bool)</primary></indexterm>QWidget::create(unsigned long, bool, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;104&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::destroy(bool, bool)</primary></indexterm>QWidget::destroy(bool, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;105&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setWState(unsigned int)</primary></indexterm>NULL or QWidget::setWState(unsigned int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;106&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setWFlags(unsigned int)</primary></indexterm>NULL or QWidget::setWFlags(unsigned int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;107&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusNextPrevChild(bool)</primary></indexterm>QWidget::focusNextPrevChild(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;108&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setKeyCompression(bool)</primary></indexterm>QWidget::setKeyCompression(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;109&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMicroFocusHint(int, int, int, int, bool, QFont*)</primary></indexterm>QWidget::setMicroFocusHint(int, int, int, int, bool, QFont*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;110&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDataBrowser::setSqlCursor(QSqlCursor*, bool)</primary></indexterm>QDataBrowser::setSqlCursor(QSqlCursor*, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;111&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDataBrowser::setForm(QSqlForm*)</primary></indexterm>QDataBrowser::setForm(QSqlForm*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;112&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDataBrowser::setConfirmEdits(bool)</primary></indexterm>QDataBrowser::setConfirmEdits(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;113&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDataBrowser::setConfirmInsert(bool)</primary></indexterm>QDataBrowser::setConfirmInsert(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;114&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDataBrowser::setConfirmUpdate(bool)</primary></indexterm>QDataBrowser::setConfirmUpdate(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;115&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDataBrowser::setConfirmDelete(bool)</primary></indexterm>QDataBrowser::setConfirmDelete(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;116&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDataBrowser::setConfirmCancels(bool)</primary></indexterm>QDataBrowser::setConfirmCancels(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;117&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDataBrowser::setReadOnly(bool)</primary></indexterm>QDataBrowser::setReadOnly(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;118&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDataBrowser::setAutoEdit(bool)</primary></indexterm>QDataBrowser::setAutoEdit(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;119&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDataBrowser::seek(int, bool)</primary></indexterm>QDataBrowser::seek(int, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;120&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDataBrowser::refresh()</primary></indexterm>QDataBrowser::refresh()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;121&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDataBrowser::insert()</primary></indexterm>QDataBrowser::insert()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;122&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDataBrowser::update()</primary></indexterm>QDataBrowser::update()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;123&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDataBrowser::del()</primary></indexterm>QDataBrowser::del()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;124&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDataBrowser::first()</primary></indexterm>QDataBrowser::first()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;125&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDataBrowser::last()</primary></indexterm>QDataBrowser::last()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;126&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDataBrowser::next()</primary></indexterm>QDataBrowser::next()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;127&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDataBrowser::prev()</primary></indexterm>QDataBrowser::prev()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;128&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDataBrowser::readFields()</primary></indexterm>QDataBrowser::readFields()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;129&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDataBrowser::writeFields()</primary></indexterm>QDataBrowser::writeFields()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;130&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDataBrowser::clearValues()</primary></indexterm>QDataBrowser::clearValues()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;131&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDataBrowser::insertCurrent()</primary></indexterm>QDataBrowser::insertCurrent()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;132&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDataBrowser::updateCurrent()</primary></indexterm>QDataBrowser::updateCurrent()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;133&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDataBrowser::deleteCurrent()</primary></indexterm>QDataBrowser::deleteCurrent()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;134&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDataBrowser::currentEdited()</primary></indexterm>QDataBrowser::currentEdited()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;135&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDataBrowser::confirmEdit(QSql::Op)</primary></indexterm>QDataBrowser::confirmEdit(QSql::Op)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;136&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDataBrowser::confirmCancel(QSql::Op)</primary></indexterm>QDataBrowser::confirmCancel(QSql::Op)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;137&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDataBrowser::handleError(QSqlError const&)</primary></indexterm>QDataBrowser::handleError(QSqlError const&)</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--classdata-->
<TABLE id="cls-52982-1">
<TITLE>Secondary vtable for QDataBrowser</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>-80</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QDataBrowser</primary></indexterm>typeinfo for QDataBrowser</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QDataBrowser::~QDataBrowser()</primary></indexterm>non-virtual thunk to QDataBrowser::~QDataBrowser()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QDataBrowser::~QDataBrowser()</primary></indexterm>non-virtual thunk to QDataBrowser::~QDataBrowser()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::setResolution(int)</primary></indexterm>QPaintDevice::setResolution(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::resolution() const</primary></indexterm>QPaintDevice::resolution() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::handle() const</primary></indexterm>QPaintDevice::handle() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::x11RenderHandle() const</primary></indexterm>QPaintDevice::x11RenderHandle() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::setX11Data(QPaintDeviceX11Data const*)</primary></indexterm>QPaintDevice::setX11Data(QPaintDeviceX11Data const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::cmd(int, QPainter*, QPDevCmdParam*)</primary></indexterm>QPaintDevice::cmd(int, QPainter*, QPDevCmdParam*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::metric(int) const</primary></indexterm>non-virtual thunk to QWidget::metric(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::fontMet(QFont*, int, char const*, int) const</primary></indexterm>QPaintDevice::fontMet(QFont*, int, char const*, int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::fontInf(QFont*, int) const</primary></indexterm>QPaintDevice::fontInf(QFont*, int) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QDataBrowser  class
is described by <XREF LINKEND="rtti-50635">
</PARA>
<!--classdata-->
<TABLE ID="rtti-50635">
<TITLE>typeinfo for QDataBrowser</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QDataBrowser</primary></indexterm>typeinfo name for QDataBrowser</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QWidget</primary></indexterm>typeinfo for QWidget</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QTextEdit</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QTextEdit class
is described by <XREF LINKEND="cls-58547-0">
</PARA>
<!--classdata-->
<TABLE id="cls-58547-0">
<TITLE>Primary vtable for QTextEdit</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QTextEdit</primary></indexterm>typeinfo for QTextEdit</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::metaObject() const</primary></indexterm>NULL or QTextEdit::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::className() const</primary></indexterm>QTextEdit::className() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::qt_cast(char const*)</primary></indexterm>QTextEdit::qt_cast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::qt_invoke(int, QUObject*)</primary></indexterm>QTextEdit::qt_invoke(int, QUObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::qt_emit(int, QUObject*)</primary></indexterm>QTextEdit::qt_emit(int, QUObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::qt_property(int, int, QVariant*)</primary></indexterm>QTextEdit::qt_property(int, int, QVariant*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::~QTextEdit()</primary></indexterm>QTextEdit::~QTextEdit()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::~QTextEdit()</primary></indexterm>QTextEdit::~QTextEdit()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::event(QEvent*)</primary></indexterm>QTextEdit::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::eventFilter(QObject*, QEvent*)</primary></indexterm>QTextEdit::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setName(char const*)</primary></indexterm>QWidget::setName(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::insertChild(QObject*)</primary></indexterm>QObject::insertChild(QObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::removeChild(QObject*)</primary></indexterm>QScrollView::removeChild(QObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::setProperty(char const*, QVariant const&)</primary></indexterm>QObject::setProperty(char const*, QVariant const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::property(char const*) const</primary></indexterm>QObject::property(char const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QCustomEvent*)</primary></indexterm>QObject::customEvent(QCustomEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::checkConnectArgs(char const*, QObject const*, char const*)</primary></indexterm>QObject::checkConnectArgs(char const*, QObject const*, char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::setEnabled(bool)</primary></indexterm>QTextEdit::setEnabled(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMinimumSize(int, int)</primary></indexterm>QWidget::setMinimumSize(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMaximumSize(int, int)</primary></indexterm>QWidget::setMaximumSize(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setSizeIncrement(int, int)</primary></indexterm>QWidget::setSizeIncrement(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundMode(Qt::BackgroundMode)</primary></indexterm>QWidget::setBackgroundMode(Qt::BackgroundMode)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setEraseColor(QColor const&)</primary></indexterm>QWidget::setEraseColor(QColor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setErasePixmap(QPixmap const&)</primary></indexterm>QWidget::setErasePixmap(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::setPalette(QPalette const&)</primary></indexterm>QTextEdit::setPalette(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setPaletteBackgroundColor(QColor const&)</primary></indexterm>QWidget::setPaletteBackgroundColor(QColor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setPaletteBackgroundPixmap(QPixmap const&)</primary></indexterm>QWidget::setPaletteBackgroundPixmap(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::setFont(QFont const&)</primary></indexterm>QTextEdit::setFont(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setCursor(QCursor const&)</primary></indexterm>QWidget::setCursor(QCursor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;33&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::unsetCursor()</primary></indexterm>QWidget::unsetCursor()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;34&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMask(QBitmap const&)</primary></indexterm>QWidget::setMask(QBitmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;35&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMask(QRegion const&)</primary></indexterm>QWidget::setMask(QRegion const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;36&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundColor(QColor const&)</primary></indexterm>QWidget::setBackgroundColor(QColor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;37&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundPixmap(QPixmap const&)</primary></indexterm>QWidget::setBackgroundPixmap(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;38&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setCaption(QString const&)</primary></indexterm>QWidget::setCaption(QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;39&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setIcon(QPixmap const&)</primary></indexterm>QWidget::setIcon(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;40&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setIconText(QString const&)</primary></indexterm>QWidget::setIconText(QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;41&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMouseTracking(bool)</primary></indexterm>QWidget::setMouseTracking(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;42&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFocus()</primary></indexterm>QWidget::setFocus()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;43&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setActiveWindow()</primary></indexterm>QWidget::setActiveWindow()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;44&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFocusPolicy(QWidget::FocusPolicy)</primary></indexterm>QWidget::setFocusPolicy(QWidget::FocusPolicy)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;45&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFocusProxy(QWidget*)</primary></indexterm>QWidget::setFocusProxy(QWidget*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;46&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setUpdatesEnabled(bool)</primary></indexterm>QWidget::setUpdatesEnabled(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;47&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::show()</primary></indexterm>QScrollView::show()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;48&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::hide()</primary></indexterm>QWidget::hide()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;49&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showMinimized()</primary></indexterm>QWidget::showMinimized()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;50&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showMaximized()</primary></indexterm>QWidget::showMaximized()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;51&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showNormal()</primary></indexterm>QWidget::showNormal()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;52&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::polish()</primary></indexterm>QTextEdit::polish()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;53&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::move(int, int)</primary></indexterm>QWidget::move(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;54&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::resize(int, int)</primary></indexterm>QScrollView::resize(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;55&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setGeometry(int, int, int, int)</primary></indexterm>QWidget::setGeometry(int, int, int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;56&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setGeometry(QRect const&)</primary></indexterm>NULL or QWidget::setGeometry(QRect const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;57&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::close(bool)</primary></indexterm>QWidget::close(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;58&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::sizeHint() const</primary></indexterm>QTextEdit::sizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;59&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::minimumSizeHint() const</primary></indexterm>QScrollView::minimumSizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;60&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::sizePolicy() const</primary></indexterm>QWidget::sizePolicy() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;61&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setSizePolicy(QSizePolicy)</primary></indexterm>QWidget::setSizePolicy(QSizePolicy)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;62&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::heightForWidth(int) const</primary></indexterm>QTextEdit::heightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;63&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::adjustSize()</primary></indexterm>QWidget::adjustSize()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;64&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::reparent(QWidget*, unsigned int, QPoint const&, bool)</primary></indexterm>QWidget::reparent(QWidget*, unsigned int, QPoint const&, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;65&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setAcceptDrops(bool)</primary></indexterm>QWidget::setAcceptDrops(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;66&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setAutoMask(bool)</primary></indexterm>QWidget::setAutoMask(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;67&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundOrigin(QWidget::BackgroundOrigin)</primary></indexterm>QWidget::setBackgroundOrigin(QWidget::BackgroundOrigin)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;68&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::customWhatsThis() const</primary></indexterm>QWidget::customWhatsThis() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;69&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::mousePressEvent(QMouseEvent*)</primary></indexterm>QScrollView::mousePressEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;70&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::mouseReleaseEvent(QMouseEvent*)</primary></indexterm>QScrollView::mouseReleaseEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;71&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::mouseDoubleClickEvent(QMouseEvent*)</primary></indexterm>QScrollView::mouseDoubleClickEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;72&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::mouseMoveEvent(QMouseEvent*)</primary></indexterm>QScrollView::mouseMoveEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;73&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::wheelEvent(QWheelEvent*)</primary></indexterm>QScrollView::wheelEvent(QWheelEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;74&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::keyPressEvent(QKeyEvent*)</primary></indexterm>QTextEdit::keyPressEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;75&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyReleaseEvent(QKeyEvent*)</primary></indexterm>QWidget::keyReleaseEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;76&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusInEvent(QFocusEvent*)</primary></indexterm>QWidget::focusInEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;77&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusOutEvent(QFocusEvent*)</primary></indexterm>QWidget::focusOutEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;78&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enterEvent(QEvent*)</primary></indexterm>QWidget::enterEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;79&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::leaveEvent(QEvent*)</primary></indexterm>QWidget::leaveEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;80&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::paintEvent(QPaintEvent*)</primary></indexterm>QFrame::paintEvent(QPaintEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;81&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::moveEvent(QMoveEvent*)</primary></indexterm>QWidget::moveEvent(QMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;82&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::resizeEvent(QResizeEvent*)</primary></indexterm>QTextEdit::resizeEvent(QResizeEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;83&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::closeEvent(QCloseEvent*)</primary></indexterm>QWidget::closeEvent(QCloseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;84&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::contextMenuEvent(QContextMenuEvent*)</primary></indexterm>QScrollView::contextMenuEvent(QContextMenuEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;85&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::imStartEvent(QIMEvent*)</primary></indexterm>QTextEdit::imStartEvent(QIMEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;86&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::imComposeEvent(QIMEvent*)</primary></indexterm>QTextEdit::imComposeEvent(QIMEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;87&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::imEndEvent(QIMEvent*)</primary></indexterm>QTextEdit::imEndEvent(QIMEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;88&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::tabletEvent(QTabletEvent*)</primary></indexterm>QWidget::tabletEvent(QTabletEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;89&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragEnterEvent(QDragEnterEvent*)</primary></indexterm>QWidget::dragEnterEvent(QDragEnterEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;90&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragMoveEvent(QDragMoveEvent*)</primary></indexterm>QWidget::dragMoveEvent(QDragMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;91&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragLeaveEvent(QDragLeaveEvent*)</primary></indexterm>QWidget::dragLeaveEvent(QDragLeaveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;92&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dropEvent(QDropEvent*)</primary></indexterm>QWidget::dropEvent(QDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;93&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showEvent(QShowEvent*)</primary></indexterm>QWidget::showEvent(QShowEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;94&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::hideEvent(QHideEvent*)</primary></indexterm>QWidget::hideEvent(QHideEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;95&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::x11Event(_XEvent*)</primary></indexterm>QWidget::x11Event(_XEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;96&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::updateMask()</primary></indexterm>QWidget::updateMask()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;97&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::styleChange(QStyle&)</primary></indexterm>QScrollView::styleChange(QStyle&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;98&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enabledChange(bool)</primary></indexterm>QWidget::enabledChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;99&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paletteChange(QPalette const&)</primary></indexterm>QWidget::paletteChange(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;100&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::fontChange(QFont const&)</primary></indexterm>QScrollView::fontChange(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;101&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::windowActivationChange(bool)</primary></indexterm>QTextEdit::windowActivationChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;102&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::metric(int) const</primary></indexterm>QWidget::metric(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;103&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::create(unsigned long, bool, bool)</primary></indexterm>QWidget::create(unsigned long, bool, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;104&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::destroy(bool, bool)</primary></indexterm>QWidget::destroy(bool, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;105&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setWState(unsigned int)</primary></indexterm>NULL or QWidget::setWState(unsigned int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;106&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setWFlags(unsigned int)</primary></indexterm>NULL or QWidget::setWFlags(unsigned int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;107&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::focusNextPrevChild(bool)</primary></indexterm>QTextEdit::focusNextPrevChild(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;108&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setKeyCompression(bool)</primary></indexterm>QWidget::setKeyCompression(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;109&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMicroFocusHint(int, int, int, int, bool, QFont*)</primary></indexterm>QWidget::setMicroFocusHint(int, int, int, int, bool, QFont*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;110&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::setFrameStyle(int)</primary></indexterm>QFrame::setFrameStyle(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;111&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::setLineWidth(int)</primary></indexterm>QFrame::setLineWidth(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;112&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::setMargin(int)</primary></indexterm>QFrame::setMargin(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;113&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::setMidLineWidth(int)</primary></indexterm>QFrame::setMidLineWidth(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;114&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::setFrameRect(QRect const&)</primary></indexterm>QFrame::setFrameRect(QRect const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;115&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::drawFrame(QPainter*)</primary></indexterm>QFrame::drawFrame(QPainter*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;116&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::drawContents(QPainter*)</primary></indexterm>QTextEdit::drawContents(QPainter*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;117&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::frameChanged()</primary></indexterm>QScrollView::frameChanged()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;118&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::setResizePolicy(QScrollView::ResizePolicy)</primary></indexterm>QScrollView::setResizePolicy(QScrollView::ResizePolicy)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;119&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::addChild(QWidget*, int, int)</primary></indexterm>QScrollView::addChild(QWidget*, int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;120&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::moveChild(QWidget*, int, int)</primary></indexterm>QScrollView::moveChild(QWidget*, int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;121&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::setVScrollBarMode(QScrollView::ScrollBarMode)</primary></indexterm>QScrollView::setVScrollBarMode(QScrollView::ScrollBarMode)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;122&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::setHScrollBarMode(QScrollView::ScrollBarMode)</primary></indexterm>QScrollView::setHScrollBarMode(QScrollView::ScrollBarMode)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;123&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::setCornerWidget(QWidget*)</primary></indexterm>QScrollView::setCornerWidget(QWidget*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;124&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::setDragAutoScroll(bool)</primary></indexterm>QScrollView::setDragAutoScroll(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;125&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::resizeContents(int, int)</primary></indexterm>QScrollView::resizeContents(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;126&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::setContentsPos(int, int)</primary></indexterm>QScrollView::setContentsPos(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;127&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::drawContents(QPainter*, int, int, int, int)</primary></indexterm>QTextEdit::drawContents(QPainter*, int, int, int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;128&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::drawContentsOffset(QPainter*, int, int, int, int, int, int)</primary></indexterm>QScrollView::drawContentsOffset(QPainter*, int, int, int, int, int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;129&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::contentsMousePressEvent(QMouseEvent*)</primary></indexterm>QTextEdit::contentsMousePressEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;130&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::contentsMouseReleaseEvent(QMouseEvent*)</primary></indexterm>QTextEdit::contentsMouseReleaseEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;131&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::contentsMouseDoubleClickEvent(QMouseEvent*)</primary></indexterm>QTextEdit::contentsMouseDoubleClickEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;132&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::contentsMouseMoveEvent(QMouseEvent*)</primary></indexterm>QTextEdit::contentsMouseMoveEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;133&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::contentsDragEnterEvent(QDragEnterEvent*)</primary></indexterm>QTextEdit::contentsDragEnterEvent(QDragEnterEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;134&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::contentsDragMoveEvent(QDragMoveEvent*)</primary></indexterm>QTextEdit::contentsDragMoveEvent(QDragMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;135&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::contentsDragLeaveEvent(QDragLeaveEvent*)</primary></indexterm>QTextEdit::contentsDragLeaveEvent(QDragLeaveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;136&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::contentsDropEvent(QDropEvent*)</primary></indexterm>QTextEdit::contentsDropEvent(QDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;137&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::contentsWheelEvent(QWheelEvent*)</primary></indexterm>QTextEdit::contentsWheelEvent(QWheelEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;138&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::contentsContextMenuEvent(QContextMenuEvent*)</primary></indexterm>QTextEdit::contentsContextMenuEvent(QContextMenuEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;139&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::viewportPaintEvent(QPaintEvent*)</primary></indexterm>QScrollView::viewportPaintEvent(QPaintEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;140&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::viewportResizeEvent(QResizeEvent*)</primary></indexterm>QTextEdit::viewportResizeEvent(QResizeEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;141&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::viewportMousePressEvent(QMouseEvent*)</primary></indexterm>QScrollView::viewportMousePressEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;142&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::viewportMouseReleaseEvent(QMouseEvent*)</primary></indexterm>QScrollView::viewportMouseReleaseEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;143&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::viewportMouseDoubleClickEvent(QMouseEvent*)</primary></indexterm>QScrollView::viewportMouseDoubleClickEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;144&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::viewportMouseMoveEvent(QMouseEvent*)</primary></indexterm>QScrollView::viewportMouseMoveEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;145&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::viewportDragEnterEvent(QDragEnterEvent*)</primary></indexterm>QScrollView::viewportDragEnterEvent(QDragEnterEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;146&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::viewportDragMoveEvent(QDragMoveEvent*)</primary></indexterm>QScrollView::viewportDragMoveEvent(QDragMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;147&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::viewportDragLeaveEvent(QDragLeaveEvent*)</primary></indexterm>QScrollView::viewportDragLeaveEvent(QDragLeaveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;148&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::viewportDropEvent(QDropEvent*)</primary></indexterm>QScrollView::viewportDropEvent(QDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;149&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::viewportWheelEvent(QWheelEvent*)</primary></indexterm>QScrollView::viewportWheelEvent(QWheelEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;150&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::viewportContextMenuEvent(QContextMenuEvent*)</primary></indexterm>QScrollView::viewportContextMenuEvent(QContextMenuEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;151&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::setMargins(int, int, int, int)</primary></indexterm>QScrollView::setMargins(int, int, int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;152&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::setHBarGeometry(QScrollBar&, int, int, int, int)</primary></indexterm>QScrollView::setHBarGeometry(QScrollBar&, int, int, int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;153&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::setVBarGeometry(QScrollBar&, int, int, int, int)</primary></indexterm>QScrollView::setVBarGeometry(QScrollBar&, int, int, int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;154&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::find(QString const&, bool, bool, bool, int*, int*)</primary></indexterm>QTextEdit::find(QString const&, bool, bool, bool, int*, int*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;155&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::getFormat(int, int, QFont*, QColor*, QTextEdit::VerticalAlignment*)</primary></indexterm>QTextEdit::getFormat(int, int, QFont*, QColor*, QTextEdit::VerticalAlignment*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;156&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::getParagraphFormat(int, QFont*, QColor*, QTextEdit::VerticalAlignment*, int*, QStyleSheetItem::DisplayMode*, QStyleSheetItem::ListStyle*, int*)</primary></indexterm>QTextEdit::getParagraphFormat(int, QFont*, QColor*, QTextEdit::VerticalAlignment*, int*, QStyleSheetItem::DisplayMode*, QStyleSheetItem::ListStyle*, int*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;157&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::setMimeSourceFactory(QMimeSourceFactory*)</primary></indexterm>QTextEdit::setMimeSourceFactory(QMimeSourceFactory*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;158&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::setStyleSheet(QStyleSheet*)</primary></indexterm>QTextEdit::setStyleSheet(QStyleSheet*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;159&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::scrollToAnchor(QString const&)</primary></indexterm>QTextEdit::scrollToAnchor(QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;160&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::setPaper(QBrush const&)</primary></indexterm>QTextEdit::setPaper(QBrush const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;161&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::setLinkUnderline(bool)</primary></indexterm>QTextEdit::setLinkUnderline(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;162&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::setWordWrap(QTextEdit::WordWrap)</primary></indexterm>QTextEdit::setWordWrap(QTextEdit::WordWrap)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;163&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::setWrapColumnOrWidth(int)</primary></indexterm>QTextEdit::setWrapColumnOrWidth(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;164&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::setWrapPolicy(QTextEdit::WrapPolicy)</primary></indexterm>QTextEdit::setWrapPolicy(QTextEdit::WrapPolicy)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;165&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::copy()</primary></indexterm>QTextEdit::copy()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;166&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::append(QString const&)</primary></indexterm>QTextEdit::append(QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;167&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::setText(QString const&, QString const&)</primary></indexterm>QTextEdit::setText(QString const&, QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;168&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::setTextFormat(Qt::TextFormat)</primary></indexterm>QTextEdit::setTextFormat(Qt::TextFormat)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;169&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::selectAll(bool)</primary></indexterm>QTextEdit::selectAll(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;170&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::setTabStopWidth(int)</primary></indexterm>QTextEdit::setTabStopWidth(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;171&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::zoomIn(int)</primary></indexterm>QTextEdit::zoomIn(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;172&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::zoomIn()</primary></indexterm>NULL or QTextEdit::zoomIn()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;173&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::zoomOut(int)</primary></indexterm>QTextEdit::zoomOut(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;174&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::zoomOut()</primary></indexterm>NULL or QTextEdit::zoomOut()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;175&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::zoomTo(int)</primary></indexterm>QTextEdit::zoomTo(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;176&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::sync()</primary></indexterm>QTextEdit::sync()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;177&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::setReadOnly(bool)</primary></indexterm>QTextEdit::setReadOnly(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;178&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::undo()</primary></indexterm>QTextEdit::undo()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;179&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::redo()</primary></indexterm>QTextEdit::redo()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;180&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::cut()</primary></indexterm>QTextEdit::cut()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;181&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::paste()</primary></indexterm>QTextEdit::paste()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;182&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::pasteSubType(QCString const&)</primary></indexterm>QTextEdit::pasteSubType(QCString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;183&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::clear()</primary></indexterm>QTextEdit::clear()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;184&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::del()</primary></indexterm>QTextEdit::del()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;185&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::indent()</primary></indexterm>QTextEdit::indent()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;186&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::setItalic(bool)</primary></indexterm>QTextEdit::setItalic(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;187&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::setBold(bool)</primary></indexterm>QTextEdit::setBold(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;188&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::setUnderline(bool)</primary></indexterm>QTextEdit::setUnderline(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;189&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::setFamily(QString const&)</primary></indexterm>QTextEdit::setFamily(QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;190&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::setPointSize(int)</primary></indexterm>QTextEdit::setPointSize(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;191&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::setColor(QColor const&)</primary></indexterm>QTextEdit::setColor(QColor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;192&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::setVerticalAlignment(QTextEdit::VerticalAlignment)</primary></indexterm>QTextEdit::setVerticalAlignment(QTextEdit::VerticalAlignment)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;193&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::setAlignment(int)</primary></indexterm>QTextEdit::setAlignment(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;194&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::setParagType(QStyleSheetItem::DisplayMode, QStyleSheetItem::ListStyle)</primary></indexterm>QTextEdit::setParagType(QStyleSheetItem::DisplayMode, QStyleSheetItem::ListStyle)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;195&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::setCursorPosition(int, int)</primary></indexterm>QTextEdit::setCursorPosition(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;196&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::setSelection(int, int, int, int, int)</primary></indexterm>QTextEdit::setSelection(int, int, int, int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;197&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::setSelectionAttributes(int, QColor const&, bool)</primary></indexterm>QTextEdit::setSelectionAttributes(int, QColor const&, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;198&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::setModified(bool)</primary></indexterm>QTextEdit::setModified(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;199&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::resetFormat()</primary></indexterm>QTextEdit::resetFormat()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;200&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::setUndoDepth(int)</primary></indexterm>QTextEdit::setUndoDepth(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;201&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::setFormat(QTextFormat*, int)</primary></indexterm>QTextEdit::setFormat(QTextFormat*, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;202&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::ensureCursorVisible()</primary></indexterm>QTextEdit::ensureCursorVisible()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;203&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::placeCursor(QPoint const&, QTextCursor*)</primary></indexterm>QTextEdit::placeCursor(QPoint const&, QTextCursor*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;204&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::moveCursor(QTextEdit::CursorAction, bool)</primary></indexterm>QTextEdit::moveCursor(QTextEdit::CursorAction, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;205&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::doKeyboardAction(QTextEdit::KeyboardAction)</primary></indexterm>QTextEdit::doKeyboardAction(QTextEdit::KeyboardAction)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;206&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::removeSelectedText(int)</primary></indexterm>QTextEdit::removeSelectedText(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;207&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::removeSelection(int)</primary></indexterm>QTextEdit::removeSelection(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;208&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::setCurrentFont(QFont const&)</primary></indexterm>NULL or QTextEdit::setCurrentFont(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;209&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::setOverwriteMode(bool)</primary></indexterm>NULL or QTextEdit::setOverwriteMode(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;210&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::scrollToBottom()</primary></indexterm>QTextEdit::scrollToBottom()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;211&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::insert(QString const&, bool, bool, bool)</primary></indexterm>QTextEdit::insert(QString const&, bool, bool, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;212&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::insertAt(QString const&, int, int)</primary></indexterm>QTextEdit::insertAt(QString const&, int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;213&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::removeParagraph(int)</primary></indexterm>QTextEdit::removeParagraph(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;214&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::insertParagraph(QString const&, int)</primary></indexterm>QTextEdit::insertParagraph(QString const&, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;215&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::setParagraphBackgroundColor(int, QColor const&)</primary></indexterm>QTextEdit::setParagraphBackgroundColor(int, QColor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;216&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::clearParagraphBackground(int)</primary></indexterm>QTextEdit::clearParagraphBackground(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;217&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::setUndoRedoEnabled(bool)</primary></indexterm>QTextEdit::setUndoRedoEnabled(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;218&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::createPopupMenu(QPoint const&)</primary></indexterm>QTextEdit::createPopupMenu(QPoint const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;219&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::createPopupMenu()</primary></indexterm>QTextEdit::createPopupMenu()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;220&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::doChangeInterval()</primary></indexterm>QTextEdit::doChangeInterval()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;221&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::linksEnabled() const</primary></indexterm>NULL or QTextEdit::linksEnabled() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;222&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::emitHighlighted(QString const&)</primary></indexterm>NULL or QTextEdit::emitHighlighted(QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;223&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::emitLinkClicked(QString const&)</primary></indexterm>NULL or QTextEdit::emitLinkClicked(QString const&)</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--classdata-->
<TABLE id="cls-58547-1">
<TITLE>Secondary vtable for QTextEdit</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>-80</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QTextEdit</primary></indexterm>typeinfo for QTextEdit</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QTextEdit::~QTextEdit()</primary></indexterm>non-virtual thunk to QTextEdit::~QTextEdit()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QTextEdit::~QTextEdit()</primary></indexterm>non-virtual thunk to QTextEdit::~QTextEdit()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::setResolution(int)</primary></indexterm>QPaintDevice::setResolution(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::resolution() const</primary></indexterm>QPaintDevice::resolution() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::handle() const</primary></indexterm>QPaintDevice::handle() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::x11RenderHandle() const</primary></indexterm>QPaintDevice::x11RenderHandle() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::setX11Data(QPaintDeviceX11Data const*)</primary></indexterm>QPaintDevice::setX11Data(QPaintDeviceX11Data const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::cmd(int, QPainter*, QPDevCmdParam*)</primary></indexterm>QPaintDevice::cmd(int, QPainter*, QPDevCmdParam*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::metric(int) const</primary></indexterm>non-virtual thunk to QWidget::metric(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::fontMet(QFont*, int, char const*, int) const</primary></indexterm>QPaintDevice::fontMet(QFont*, int, char const*, int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::fontInf(QFont*, int) const</primary></indexterm>QPaintDevice::fontInf(QFont*, int) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QTextEdit  class
is described by <XREF LINKEND="rtti-56980">
</PARA>
<!--classdata-->
<TABLE ID="rtti-56980">
<TITLE>typeinfo for QTextEdit</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QTextEdit</primary></indexterm>typeinfo name for QTextEdit</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QScrollView</primary></indexterm>typeinfo for QScrollView</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Interfaces for Qt3 Widgets</TITLE>
<PARA>
An LSB conforming implementation shall provide the architecture specific functions
for Qt3 Widgets specified in <XREF linkend="tbl-libqt-mt-qt3-w-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<TABLE id="tbl-libqt-mt-qt3-w-ints">
<TITLE>libqt-mt - Qt3 Widgets Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>_ZThn200_N10QScrollBar10stepChangeEv</primary></indexterm>_ZThn200_N10QScrollBar10stepChangeEv <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn200_N10QScrollBar11rangeChangeEv</primary></indexterm>_ZThn200_N10QScrollBar11rangeChangeEv <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn200_N10QScrollBar11valueChangeEv</primary></indexterm>_ZThn200_N10QScrollBar11valueChangeEv <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn200_N10QScrollBarD0Ev</primary></indexterm>_ZThn200_N10QScrollBarD0Ev <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn200_N10QScrollBarD1Ev</primary></indexterm>_ZThn200_N10QScrollBarD1Ev <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn200_N5QDial11rangeChangeEv</primary></indexterm>_ZThn200_N5QDial11rangeChangeEv <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn200_N5QDial11valueChangeEv</primary></indexterm>_ZThn200_N5QDial11valueChangeEv <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn200_N5QDialD0Ev</primary></indexterm>_ZThn200_N5QDialD0Ev <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn200_N5QDialD1Ev</primary></indexterm>_ZThn200_N5QDialD1Ev <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn200_N7QSlider11rangeChangeEv</primary></indexterm>_ZThn200_N7QSlider11rangeChangeEv <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn200_N7QSlider11valueChangeEv</primary></indexterm>_ZThn200_N7QSlider11valueChangeEv <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn200_N7QSliderD0Ev</primary></indexterm>_ZThn200_N7QSliderD0Ev <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn200_N7QSliderD1Ev</primary></indexterm>_ZThn200_N7QSliderD1Ev <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn200_N8QSpinBox11rangeChangeEv</primary></indexterm>_ZThn200_N8QSpinBox11rangeChangeEv <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn200_N8QSpinBox11valueChangeEv</primary></indexterm>_ZThn200_N8QSpinBox11valueChangeEv <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn200_N8QSpinBoxD0Ev</primary></indexterm>_ZThn200_N8QSpinBoxD0Ev <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn200_N8QSpinBoxD1Ev</primary></indexterm>_ZThn200_N8QSpinBoxD1Ev <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn80_N10QLCDNumberD0Ev</primary></indexterm>_ZThn80_N10QLCDNumberD0Ev <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn80_N10QLCDNumberD1Ev</primary></indexterm>_ZThn80_N10QLCDNumberD1Ev <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn80_N10QScrollBarD0Ev</primary></indexterm>_ZThn80_N10QScrollBarD0Ev <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn80_N10QScrollBarD1Ev</primary></indexterm>_ZThn80_N10QScrollBarD1Ev <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn80_N10QTabWidgetD0Ev</primary></indexterm>_ZThn80_N10QTabWidgetD0Ev <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn80_N10QTabWidgetD1Ev</primary></indexterm>_ZThn80_N10QTabWidgetD1Ev <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn80_N11QDockWindowD0Ev</primary></indexterm>_ZThn80_N11QDockWindowD0Ev <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn80_N11QDockWindowD1Ev</primary></indexterm>_ZThn80_N11QDockWindowD1Ev <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn80_N11QMainWindowD0Ev</primary></indexterm>_ZThn80_N11QMainWindowD0Ev <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn80_N11QMainWindowD1Ev</primary></indexterm>_ZThn80_N11QMainWindowD1Ev <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn80_N11QPushButtonD0Ev</primary></indexterm>_ZThn80_N11QPushButtonD0Ev <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn80_N11QPushButtonD1Ev</primary></indexterm>_ZThn80_N11QPushButtonD1Ev <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn80_N11QScrollViewD0Ev</primary></indexterm>_ZThn80_N11QScrollViewD0Ev <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn80_N11QScrollViewD1Ev</primary></indexterm>_ZThn80_N11QScrollViewD1Ev <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn80_N11QSpinWidgetD0Ev</primary></indexterm>_ZThn80_N11QSpinWidgetD0Ev <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn80_N11QSpinWidgetD1Ev</primary></indexterm>_ZThn80_N11QSpinWidgetD1Ev <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn80_N11QToolButtonD0Ev</primary></indexterm>_ZThn80_N11QToolButtonD0Ev <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn80_N11QToolButtonD1Ev</primary></indexterm>_ZThn80_N11QToolButtonD1Ev <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn80_N12QDataBrowserD0Ev</primary></indexterm>_ZThn80_N12QDataBrowserD0Ev <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn80_N12QDataBrowserD1Ev</primary></indexterm>_ZThn80_N12QDataBrowserD1Ev <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn80_N12QTextBrowserD0Ev</primary></indexterm>_ZThn80_N12QTextBrowserD0Ev <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn80_N12QTextBrowserD1Ev</primary></indexterm>_ZThn80_N12QTextBrowserD1Ev <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn80_N14QDesktopWidgetD0Ev</primary></indexterm>_ZThn80_N14QDesktopWidgetD0Ev <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn80_N14QDesktopWidgetD1Ev</primary></indexterm>_ZThn80_N14QDesktopWidgetD1Ev <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn80_N14QMultiLineEditD0Ev</primary></indexterm>_ZThn80_N14QMultiLineEditD0Ev <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn80_N14QMultiLineEditD1Ev</primary></indexterm>_ZThn80_N14QMultiLineEditD1Ev <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn80_N5QDialD0Ev</primary></indexterm>_ZThn80_N5QDialD0Ev <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn80_N5QDialD1Ev</primary></indexterm>_ZThn80_N5QDialD1Ev <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn80_N6QLabelD0Ev</primary></indexterm>_ZThn80_N6QLabelD0Ev <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn80_N6QLabelD1Ev</primary></indexterm>_ZThn80_N6QLabelD1Ev <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn80_N7QButtonD0Ev</primary></indexterm>_ZThn80_N7QButtonD0Ev <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn80_N7QButtonD1Ev</primary></indexterm>_ZThn80_N7QButtonD1Ev <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn80_N7QSliderD0Ev</primary></indexterm>_ZThn80_N7QSliderD0Ev <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn80_N7QSliderD1Ev</primary></indexterm>_ZThn80_N7QSliderD1Ev <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn80_N7QTabBarD0Ev</primary></indexterm>_ZThn80_N7QTabBarD0Ev <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn80_N7QTabBarD1Ev</primary></indexterm>_ZThn80_N7QTabBarD1Ev <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn80_N7QWidgetD0Ev</primary></indexterm>_ZThn80_N7QWidgetD0Ev <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn80_N7QWidgetD1Ev</primary></indexterm>_ZThn80_N7QWidgetD1Ev <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn80_N8QListBoxD0Ev</primary></indexterm>_ZThn80_N8QListBoxD0Ev <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn80_N8QListBoxD1Ev</primary></indexterm>_ZThn80_N8QListBoxD1Ev <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn80_N8QSpinBoxD0Ev</primary></indexterm>_ZThn80_N8QSpinBoxD0Ev <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn80_N8QSpinBoxD1Ev</primary></indexterm>_ZThn80_N8QSpinBoxD1Ev <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn80_N8QToolBoxD0Ev</primary></indexterm>_ZThn80_N8QToolBoxD0Ev <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn80_N8QToolBoxD1Ev</primary></indexterm>_ZThn80_N8QToolBoxD1Ev <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn80_N9QComboBoxD0Ev</primary></indexterm>_ZThn80_N9QComboBoxD0Ev <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn80_N9QComboBoxD1Ev</primary></indexterm>_ZThn80_N9QComboBoxD1Ev <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn80_N9QDataViewD0Ev</primary></indexterm>_ZThn80_N9QDataViewD0Ev <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn80_N9QDataViewD1Ev</primary></indexterm>_ZThn80_N9QDataViewD1Ev <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn80_N9QDockAreaD0Ev</primary></indexterm>_ZThn80_N9QDockAreaD0Ev <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn80_N9QDockAreaD1Ev</primary></indexterm>_ZThn80_N9QDockAreaD1Ev <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn80_N9QGridViewD0Ev</primary></indexterm>_ZThn80_N9QGridViewD0Ev <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn80_N9QGridViewD1Ev</primary></indexterm>_ZThn80_N9QGridViewD1Ev <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn80_N9QIconViewD0Ev</primary></indexterm>_ZThn80_N9QIconViewD0Ev <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn80_N9QIconViewD1Ev</primary></indexterm>_ZThn80_N9QIconViewD1Ev <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn80_N9QLineEditD0Ev</primary></indexterm>_ZThn80_N9QLineEditD0Ev <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn80_N9QLineEditD1Ev</primary></indexterm>_ZThn80_N9QLineEditD1Ev <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn80_N9QListViewD0Ev</primary></indexterm>_ZThn80_N9QListViewD0Ev <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn80_N9QListViewD1Ev</primary></indexterm>_ZThn80_N9QListViewD1Ev <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn80_N9QTextEditD0Ev</primary></indexterm>_ZThn80_N9QTextEditD0Ev <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn80_N9QTextEditD1Ev</primary></indexterm>_ZThn80_N9QTextEditD1Ev <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn80_N9QTextViewD0Ev</primary></indexterm>_ZThn80_N9QTextViewD0Ev <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn80_N9QTextViewD1Ev</primary></indexterm>_ZThn80_N9QTextViewD1Ev <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn80_NK7QWidget6metricEi</primary></indexterm>_ZThn80_NK7QWidget6metricEi <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>
</SECT2>
<!-- debug: database interface name Qt3 Menus -->
<SECT2>
<!--libgroup-->
<TITLE>Qt3 Menus</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Class data for QPopupMenu</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QPopupMenu class
is described by <XREF LINKEND="cls-59198-0">
</PARA>
<!--classdata-->
<TABLE id="cls-59198-0">
<TITLE>Primary vtable for QPopupMenu</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QPopupMenu</primary></indexterm>typeinfo for QPopupMenu</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPopupMenu::metaObject() const</primary></indexterm>NULL or QPopupMenu::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPopupMenu::className() const</primary></indexterm>QPopupMenu::className() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPopupMenu::qt_cast(char const*)</primary></indexterm>QPopupMenu::qt_cast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPopupMenu::qt_invoke(int, QUObject*)</primary></indexterm>QPopupMenu::qt_invoke(int, QUObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPopupMenu::qt_emit(int, QUObject*)</primary></indexterm>QPopupMenu::qt_emit(int, QUObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPopupMenu::qt_property(int, int, QVariant*)</primary></indexterm>QPopupMenu::qt_property(int, int, QVariant*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPopupMenu::~QPopupMenu()</primary></indexterm>QPopupMenu::~QPopupMenu()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPopupMenu::~QPopupMenu()</primary></indexterm>QPopupMenu::~QPopupMenu()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::event(QEvent*)</primary></indexterm>QWidget::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::eventFilter(QObject*, QEvent*)</primary></indexterm>QObject::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setName(char const*)</primary></indexterm>QWidget::setName(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::insertChild(QObject*)</primary></indexterm>QObject::insertChild(QObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::removeChild(QObject*)</primary></indexterm>QObject::removeChild(QObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::setProperty(char const*, QVariant const&)</primary></indexterm>QObject::setProperty(char const*, QVariant const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::property(char const*) const</primary></indexterm>QObject::property(char const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPopupMenu::timerEvent(QTimerEvent*)</primary></indexterm>QPopupMenu::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QCustomEvent*)</primary></indexterm>QObject::customEvent(QCustomEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::checkConnectArgs(char const*, QObject const*, char const*)</primary></indexterm>QObject::checkConnectArgs(char const*, QObject const*, char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setEnabled(bool)</primary></indexterm>QWidget::setEnabled(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMinimumSize(int, int)</primary></indexterm>QWidget::setMinimumSize(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMaximumSize(int, int)</primary></indexterm>QWidget::setMaximumSize(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setSizeIncrement(int, int)</primary></indexterm>QWidget::setSizeIncrement(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundMode(Qt::BackgroundMode)</primary></indexterm>QWidget::setBackgroundMode(Qt::BackgroundMode)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setEraseColor(QColor const&)</primary></indexterm>QWidget::setEraseColor(QColor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setErasePixmap(QPixmap const&)</primary></indexterm>QWidget::setErasePixmap(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setPalette(QPalette const&)</primary></indexterm>QWidget::setPalette(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setPaletteBackgroundColor(QColor const&)</primary></indexterm>QWidget::setPaletteBackgroundColor(QColor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setPaletteBackgroundPixmap(QPixmap const&)</primary></indexterm>QWidget::setPaletteBackgroundPixmap(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPopupMenu::setFont(QFont const&)</primary></indexterm>QPopupMenu::setFont(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setCursor(QCursor const&)</primary></indexterm>QWidget::setCursor(QCursor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;33&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::unsetCursor()</primary></indexterm>QWidget::unsetCursor()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;34&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMask(QBitmap const&)</primary></indexterm>QWidget::setMask(QBitmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;35&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMask(QRegion const&)</primary></indexterm>QWidget::setMask(QRegion const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;36&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundColor(QColor const&)</primary></indexterm>QWidget::setBackgroundColor(QColor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;37&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundPixmap(QPixmap const&)</primary></indexterm>QWidget::setBackgroundPixmap(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;38&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setCaption(QString const&)</primary></indexterm>QWidget::setCaption(QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;39&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setIcon(QPixmap const&)</primary></indexterm>QWidget::setIcon(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;40&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setIconText(QString const&)</primary></indexterm>QWidget::setIconText(QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;41&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMouseTracking(bool)</primary></indexterm>QWidget::setMouseTracking(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;42&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFocus()</primary></indexterm>QWidget::setFocus()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;43&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setActiveWindow()</primary></indexterm>QWidget::setActiveWindow()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;44&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFocusPolicy(QWidget::FocusPolicy)</primary></indexterm>QWidget::setFocusPolicy(QWidget::FocusPolicy)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;45&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFocusProxy(QWidget*)</primary></indexterm>QWidget::setFocusProxy(QWidget*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;46&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setUpdatesEnabled(bool)</primary></indexterm>QWidget::setUpdatesEnabled(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;47&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPopupMenu::show()</primary></indexterm>QPopupMenu::show()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;48&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPopupMenu::hide()</primary></indexterm>QPopupMenu::hide()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;49&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showMinimized()</primary></indexterm>QWidget::showMinimized()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;50&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showMaximized()</primary></indexterm>QWidget::showMaximized()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;51&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showNormal()</primary></indexterm>QWidget::showNormal()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;52&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::polish()</primary></indexterm>QWidget::polish()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;53&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::move(int, int)</primary></indexterm>QWidget::move(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;54&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::resize(int, int)</primary></indexterm>QWidget::resize(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;55&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setGeometry(int, int, int, int)</primary></indexterm>QWidget::setGeometry(int, int, int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;56&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setGeometry(QRect const&)</primary></indexterm>NULL or QWidget::setGeometry(QRect const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;57&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::close(bool)</primary></indexterm>QWidget::close(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;58&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPopupMenu::sizeHint() const</primary></indexterm>QPopupMenu::sizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;59&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::minimumSizeHint() const</primary></indexterm>QWidget::minimumSizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;60&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::sizePolicy() const</primary></indexterm>QWidget::sizePolicy() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;61&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setSizePolicy(QSizePolicy)</primary></indexterm>QWidget::setSizePolicy(QSizePolicy)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;62&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::heightForWidth(int) const</primary></indexterm>QWidget::heightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;63&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::adjustSize()</primary></indexterm>QWidget::adjustSize()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;64&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::reparent(QWidget*, unsigned int, QPoint const&, bool)</primary></indexterm>QWidget::reparent(QWidget*, unsigned int, QPoint const&, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;65&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setAcceptDrops(bool)</primary></indexterm>QWidget::setAcceptDrops(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;66&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setAutoMask(bool)</primary></indexterm>QWidget::setAutoMask(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;67&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundOrigin(QWidget::BackgroundOrigin)</primary></indexterm>QWidget::setBackgroundOrigin(QWidget::BackgroundOrigin)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;68&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPopupMenu::customWhatsThis() const</primary></indexterm>QPopupMenu::customWhatsThis() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;69&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPopupMenu::mousePressEvent(QMouseEvent*)</primary></indexterm>QPopupMenu::mousePressEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;70&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPopupMenu::mouseReleaseEvent(QMouseEvent*)</primary></indexterm>QPopupMenu::mouseReleaseEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;71&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseDoubleClickEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseDoubleClickEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;72&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPopupMenu::mouseMoveEvent(QMouseEvent*)</primary></indexterm>QPopupMenu::mouseMoveEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;73&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::wheelEvent(QWheelEvent*)</primary></indexterm>QWidget::wheelEvent(QWheelEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;74&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPopupMenu::keyPressEvent(QKeyEvent*)</primary></indexterm>QPopupMenu::keyPressEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;75&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyReleaseEvent(QKeyEvent*)</primary></indexterm>QWidget::keyReleaseEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;76&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPopupMenu::focusInEvent(QFocusEvent*)</primary></indexterm>QPopupMenu::focusInEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;77&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPopupMenu::focusOutEvent(QFocusEvent*)</primary></indexterm>QPopupMenu::focusOutEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;78&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enterEvent(QEvent*)</primary></indexterm>QWidget::enterEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;79&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPopupMenu::leaveEvent(QEvent*)</primary></indexterm>QPopupMenu::leaveEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;80&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPopupMenu::paintEvent(QPaintEvent*)</primary></indexterm>QPopupMenu::paintEvent(QPaintEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;81&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::moveEvent(QMoveEvent*)</primary></indexterm>QWidget::moveEvent(QMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;82&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::resizeEvent(QResizeEvent*)</primary></indexterm>QFrame::resizeEvent(QResizeEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;83&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPopupMenu::closeEvent(QCloseEvent*)</primary></indexterm>QPopupMenu::closeEvent(QCloseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;84&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::contextMenuEvent(QContextMenuEvent*)</primary></indexterm>QWidget::contextMenuEvent(QContextMenuEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;85&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::imStartEvent(QIMEvent*)</primary></indexterm>QWidget::imStartEvent(QIMEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;86&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::imComposeEvent(QIMEvent*)</primary></indexterm>QWidget::imComposeEvent(QIMEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;87&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::imEndEvent(QIMEvent*)</primary></indexterm>QWidget::imEndEvent(QIMEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;88&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::tabletEvent(QTabletEvent*)</primary></indexterm>QWidget::tabletEvent(QTabletEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;89&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragEnterEvent(QDragEnterEvent*)</primary></indexterm>QWidget::dragEnterEvent(QDragEnterEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;90&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragMoveEvent(QDragMoveEvent*)</primary></indexterm>QWidget::dragMoveEvent(QDragMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;91&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragLeaveEvent(QDragLeaveEvent*)</primary></indexterm>QWidget::dragLeaveEvent(QDragLeaveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;92&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dropEvent(QDropEvent*)</primary></indexterm>QWidget::dropEvent(QDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;93&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showEvent(QShowEvent*)</primary></indexterm>QWidget::showEvent(QShowEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;94&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::hideEvent(QHideEvent*)</primary></indexterm>QWidget::hideEvent(QHideEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;95&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::x11Event(_XEvent*)</primary></indexterm>QWidget::x11Event(_XEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;96&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::updateMask()</primary></indexterm>QWidget::updateMask()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;97&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPopupMenu::styleChange(QStyle&)</primary></indexterm>QPopupMenu::styleChange(QStyle&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;98&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPopupMenu::enabledChange(bool)</primary></indexterm>QPopupMenu::enabledChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;99&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paletteChange(QPalette const&)</primary></indexterm>QWidget::paletteChange(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;100&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::fontChange(QFont const&)</primary></indexterm>QWidget::fontChange(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;101&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::windowActivationChange(bool)</primary></indexterm>QWidget::windowActivationChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;102&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::metric(int) const</primary></indexterm>QWidget::metric(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;103&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::create(unsigned long, bool, bool)</primary></indexterm>QWidget::create(unsigned long, bool, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;104&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::destroy(bool, bool)</primary></indexterm>QWidget::destroy(bool, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;105&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setWState(unsigned int)</primary></indexterm>NULL or QWidget::setWState(unsigned int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;106&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setWFlags(unsigned int)</primary></indexterm>NULL or QWidget::setWFlags(unsigned int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;107&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPopupMenu::focusNextPrevChild(bool)</primary></indexterm>QPopupMenu::focusNextPrevChild(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;108&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setKeyCompression(bool)</primary></indexterm>QWidget::setKeyCompression(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;109&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMicroFocusHint(int, int, int, int, bool, QFont*)</primary></indexterm>QWidget::setMicroFocusHint(int, int, int, int, bool, QFont*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;110&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::setFrameStyle(int)</primary></indexterm>QFrame::setFrameStyle(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;111&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::setLineWidth(int)</primary></indexterm>QFrame::setLineWidth(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;112&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::setMargin(int)</primary></indexterm>QFrame::setMargin(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;113&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::setMidLineWidth(int)</primary></indexterm>QFrame::setMidLineWidth(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;114&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::setFrameRect(QRect const&)</primary></indexterm>QFrame::setFrameRect(QRect const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;115&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::drawFrame(QPainter*)</primary></indexterm>QFrame::drawFrame(QPainter*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;116&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPopupMenu::drawContents(QPainter*)</primary></indexterm>QPopupMenu::drawContents(QPainter*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;117&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPopupMenu::frameChanged()</primary></indexterm>QPopupMenu::frameChanged()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;118&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPopupMenu::updateItem(int)</primary></indexterm>QPopupMenu::updateItem(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;119&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPopupMenu::setCheckable(bool)</primary></indexterm>QPopupMenu::setCheckable(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;120&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPopupMenu::setActiveItem(int)</primary></indexterm>QPopupMenu::setActiveItem(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;121&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPopupMenu::activateItemAt(int)</primary></indexterm>QPopupMenu::activateItemAt(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;122&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPopupMenu::menuContentsChanged()</primary></indexterm>QPopupMenu::menuContentsChanged()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;123&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPopupMenu::menuStateChanged()</primary></indexterm>QPopupMenu::menuStateChanged()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;124&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPopupMenu::menuInsPopup(QPopupMenu*)</primary></indexterm>QPopupMenu::menuInsPopup(QPopupMenu*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;125&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPopupMenu::menuDelPopup(QPopupMenu*)</primary></indexterm>QPopupMenu::menuDelPopup(QPopupMenu*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;126&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPopupMenu::setFirstItemActive()</primary></indexterm>QPopupMenu::setFirstItemActive()</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--classdata-->
<TABLE id="cls-59198-1">
<TITLE>Secondary vtable for QPopupMenu</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>-80</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QPopupMenu</primary></indexterm>typeinfo for QPopupMenu</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QPopupMenu::~QPopupMenu()</primary></indexterm>non-virtual thunk to QPopupMenu::~QPopupMenu()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QPopupMenu::~QPopupMenu()</primary></indexterm>non-virtual thunk to QPopupMenu::~QPopupMenu()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::setResolution(int)</primary></indexterm>QPaintDevice::setResolution(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::resolution() const</primary></indexterm>QPaintDevice::resolution() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::handle() const</primary></indexterm>QPaintDevice::handle() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::x11RenderHandle() const</primary></indexterm>QPaintDevice::x11RenderHandle() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::setX11Data(QPaintDeviceX11Data const*)</primary></indexterm>QPaintDevice::setX11Data(QPaintDeviceX11Data const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::cmd(int, QPainter*, QPDevCmdParam*)</primary></indexterm>QPaintDevice::cmd(int, QPainter*, QPDevCmdParam*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::metric(int) const</primary></indexterm>non-virtual thunk to QWidget::metric(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::fontMet(QFont*, int, char const*, int) const</primary></indexterm>QPaintDevice::fontMet(QFont*, int, char const*, int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::fontInf(QFont*, int) const</primary></indexterm>QPaintDevice::fontInf(QFont*, int) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--classdata-->
<TABLE id="cls-59198-2">
<TITLE>Secondary vtable for QPopupMenu</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>-240</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QPopupMenu</primary></indexterm>typeinfo for QPopupMenu</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QPopupMenu::~QPopupMenu()</primary></indexterm>non-virtual thunk to QPopupMenu::~QPopupMenu()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QPopupMenu::~QPopupMenu()</primary></indexterm>non-virtual thunk to QPopupMenu::~QPopupMenu()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QPopupMenu::updateItem(int)</primary></indexterm>non-virtual thunk to QPopupMenu::updateItem(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMenuData::setId(int, int)</primary></indexterm>QMenuData::setId(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QPopupMenu::activateItemAt(int)</primary></indexterm>non-virtual thunk to QPopupMenu::activateItemAt(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QPopupMenu::menuContentsChanged()</primary></indexterm>non-virtual thunk to QPopupMenu::menuContentsChanged()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QPopupMenu::menuStateChanged()</primary></indexterm>non-virtual thunk to QPopupMenu::menuStateChanged()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QPopupMenu::menuInsPopup(QPopupMenu*)</primary></indexterm>non-virtual thunk to QPopupMenu::menuInsPopup(QPopupMenu*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QPopupMenu::menuDelPopup(QPopupMenu*)</primary></indexterm>non-virtual thunk to QPopupMenu::menuDelPopup(QPopupMenu*)</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QPopupMenu  class
is described by <XREF LINKEND="rtti-51842">
</PARA>
<!--classdata-->
<TABLE ID="rtti-51842">
<TITLE>typeinfo for QPopupMenu</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__vmi_class_type_info</primary></indexterm>vtable for __cxxabiv1::__vmi_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QPopupMenu</primary></indexterm>typeinfo name for QPopupMenu</ENTRY>
</ROW>
<ROW>
<ENTRY>flags:</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QFrame</primary></indexterm>typeinfo for QFrame</ENTRY>
<ENTRY>2</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QMenuData</primary></indexterm>typeinfo for QMenuData</ENTRY>
<ENTRY>37890</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QMenuBar</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QMenuBar class
is described by <XREF LINKEND="cls-51449-0">
</PARA>
<!--classdata-->
<TABLE id="cls-51449-0">
<TITLE>Primary vtable for QMenuBar</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QMenuBar</primary></indexterm>typeinfo for QMenuBar</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMenuBar::metaObject() const</primary></indexterm>NULL or QMenuBar::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMenuBar::className() const</primary></indexterm>QMenuBar::className() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMenuBar::qt_cast(char const*)</primary></indexterm>QMenuBar::qt_cast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMenuBar::qt_invoke(int, QUObject*)</primary></indexterm>QMenuBar::qt_invoke(int, QUObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMenuBar::qt_emit(int, QUObject*)</primary></indexterm>QMenuBar::qt_emit(int, QUObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMenuBar::qt_property(int, int, QVariant*)</primary></indexterm>QMenuBar::qt_property(int, int, QVariant*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMenuBar::~QMenuBar()</primary></indexterm>QMenuBar::~QMenuBar()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMenuBar::~QMenuBar()</primary></indexterm>QMenuBar::~QMenuBar()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::event(QEvent*)</primary></indexterm>QWidget::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMenuBar::eventFilter(QObject*, QEvent*)</primary></indexterm>QMenuBar::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setName(char const*)</primary></indexterm>QWidget::setName(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::insertChild(QObject*)</primary></indexterm>QObject::insertChild(QObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::removeChild(QObject*)</primary></indexterm>QObject::removeChild(QObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::setProperty(char const*, QVariant const&)</primary></indexterm>QObject::setProperty(char const*, QVariant const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::property(char const*) const</primary></indexterm>QObject::property(char const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QCustomEvent*)</primary></indexterm>QObject::customEvent(QCustomEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::checkConnectArgs(char const*, QObject const*, char const*)</primary></indexterm>QObject::checkConnectArgs(char const*, QObject const*, char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setEnabled(bool)</primary></indexterm>QWidget::setEnabled(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMinimumSize(int, int)</primary></indexterm>QWidget::setMinimumSize(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMaximumSize(int, int)</primary></indexterm>QWidget::setMaximumSize(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setSizeIncrement(int, int)</primary></indexterm>QWidget::setSizeIncrement(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundMode(Qt::BackgroundMode)</primary></indexterm>QWidget::setBackgroundMode(Qt::BackgroundMode)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setEraseColor(QColor const&)</primary></indexterm>QWidget::setEraseColor(QColor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setErasePixmap(QPixmap const&)</primary></indexterm>QWidget::setErasePixmap(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setPalette(QPalette const&)</primary></indexterm>QWidget::setPalette(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setPaletteBackgroundColor(QColor const&)</primary></indexterm>QWidget::setPaletteBackgroundColor(QColor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setPaletteBackgroundPixmap(QPixmap const&)</primary></indexterm>QWidget::setPaletteBackgroundPixmap(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFont(QFont const&)</primary></indexterm>QWidget::setFont(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setCursor(QCursor const&)</primary></indexterm>QWidget::setCursor(QCursor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;33&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::unsetCursor()</primary></indexterm>QWidget::unsetCursor()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;34&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMask(QBitmap const&)</primary></indexterm>QWidget::setMask(QBitmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;35&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMask(QRegion const&)</primary></indexterm>QWidget::setMask(QRegion const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;36&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundColor(QColor const&)</primary></indexterm>QWidget::setBackgroundColor(QColor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;37&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundPixmap(QPixmap const&)</primary></indexterm>QWidget::setBackgroundPixmap(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;38&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setCaption(QString const&)</primary></indexterm>QWidget::setCaption(QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;39&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setIcon(QPixmap const&)</primary></indexterm>QWidget::setIcon(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;40&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setIconText(QString const&)</primary></indexterm>QWidget::setIconText(QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;41&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMouseTracking(bool)</primary></indexterm>QWidget::setMouseTracking(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;42&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFocus()</primary></indexterm>QWidget::setFocus()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;43&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setActiveWindow()</primary></indexterm>QWidget::setActiveWindow()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;44&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFocusPolicy(QWidget::FocusPolicy)</primary></indexterm>QWidget::setFocusPolicy(QWidget::FocusPolicy)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;45&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFocusProxy(QWidget*)</primary></indexterm>QWidget::setFocusProxy(QWidget*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;46&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setUpdatesEnabled(bool)</primary></indexterm>QWidget::setUpdatesEnabled(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;47&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMenuBar::show()</primary></indexterm>QMenuBar::show()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;48&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMenuBar::hide()</primary></indexterm>QMenuBar::hide()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;49&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showMinimized()</primary></indexterm>QWidget::showMinimized()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;50&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showMaximized()</primary></indexterm>QWidget::showMaximized()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;51&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showNormal()</primary></indexterm>QWidget::showNormal()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;52&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::polish()</primary></indexterm>QWidget::polish()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;53&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::move(int, int)</primary></indexterm>QWidget::move(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;54&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::resize(int, int)</primary></indexterm>QWidget::resize(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;55&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setGeometry(int, int, int, int)</primary></indexterm>QWidget::setGeometry(int, int, int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;56&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setGeometry(QRect const&)</primary></indexterm>NULL or QWidget::setGeometry(QRect const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;57&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::close(bool)</primary></indexterm>QWidget::close(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;58&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMenuBar::sizeHint() const</primary></indexterm>QMenuBar::sizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;59&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMenuBar::minimumSizeHint() const</primary></indexterm>QMenuBar::minimumSizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;60&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::sizePolicy() const</primary></indexterm>QWidget::sizePolicy() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;61&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setSizePolicy(QSizePolicy)</primary></indexterm>QWidget::setSizePolicy(QSizePolicy)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;62&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMenuBar::heightForWidth(int) const</primary></indexterm>QMenuBar::heightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;63&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::adjustSize()</primary></indexterm>QWidget::adjustSize()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;64&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::reparent(QWidget*, unsigned int, QPoint const&, bool)</primary></indexterm>QWidget::reparent(QWidget*, unsigned int, QPoint const&, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;65&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setAcceptDrops(bool)</primary></indexterm>QWidget::setAcceptDrops(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;66&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setAutoMask(bool)</primary></indexterm>QWidget::setAutoMask(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;67&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundOrigin(QWidget::BackgroundOrigin)</primary></indexterm>QWidget::setBackgroundOrigin(QWidget::BackgroundOrigin)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;68&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMenuBar::customWhatsThis() const</primary></indexterm>QMenuBar::customWhatsThis() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;69&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMenuBar::mousePressEvent(QMouseEvent*)</primary></indexterm>QMenuBar::mousePressEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;70&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMenuBar::mouseReleaseEvent(QMouseEvent*)</primary></indexterm>QMenuBar::mouseReleaseEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;71&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseDoubleClickEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseDoubleClickEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;72&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMenuBar::mouseMoveEvent(QMouseEvent*)</primary></indexterm>QMenuBar::mouseMoveEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;73&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::wheelEvent(QWheelEvent*)</primary></indexterm>QWidget::wheelEvent(QWheelEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;74&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMenuBar::keyPressEvent(QKeyEvent*)</primary></indexterm>QMenuBar::keyPressEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;75&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyReleaseEvent(QKeyEvent*)</primary></indexterm>QWidget::keyReleaseEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;76&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMenuBar::focusInEvent(QFocusEvent*)</primary></indexterm>QMenuBar::focusInEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;77&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMenuBar::focusOutEvent(QFocusEvent*)</primary></indexterm>QMenuBar::focusOutEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;78&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enterEvent(QEvent*)</primary></indexterm>QWidget::enterEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;79&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMenuBar::leaveEvent(QEvent*)</primary></indexterm>QMenuBar::leaveEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;80&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::paintEvent(QPaintEvent*)</primary></indexterm>QFrame::paintEvent(QPaintEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;81&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::moveEvent(QMoveEvent*)</primary></indexterm>QWidget::moveEvent(QMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;82&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMenuBar::resizeEvent(QResizeEvent*)</primary></indexterm>QMenuBar::resizeEvent(QResizeEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;83&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::closeEvent(QCloseEvent*)</primary></indexterm>QWidget::closeEvent(QCloseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;84&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::contextMenuEvent(QContextMenuEvent*)</primary></indexterm>QWidget::contextMenuEvent(QContextMenuEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;85&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::imStartEvent(QIMEvent*)</primary></indexterm>QWidget::imStartEvent(QIMEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;86&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::imComposeEvent(QIMEvent*)</primary></indexterm>QWidget::imComposeEvent(QIMEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;87&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::imEndEvent(QIMEvent*)</primary></indexterm>QWidget::imEndEvent(QIMEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;88&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::tabletEvent(QTabletEvent*)</primary></indexterm>QWidget::tabletEvent(QTabletEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;89&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragEnterEvent(QDragEnterEvent*)</primary></indexterm>QWidget::dragEnterEvent(QDragEnterEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;90&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragMoveEvent(QDragMoveEvent*)</primary></indexterm>QWidget::dragMoveEvent(QDragMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;91&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragLeaveEvent(QDragLeaveEvent*)</primary></indexterm>QWidget::dragLeaveEvent(QDragLeaveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;92&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dropEvent(QDropEvent*)</primary></indexterm>QWidget::dropEvent(QDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;93&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showEvent(QShowEvent*)</primary></indexterm>QWidget::showEvent(QShowEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;94&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::hideEvent(QHideEvent*)</primary></indexterm>QWidget::hideEvent(QHideEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;95&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::x11Event(_XEvent*)</primary></indexterm>QWidget::x11Event(_XEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;96&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::updateMask()</primary></indexterm>QWidget::updateMask()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;97&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMenuBar::styleChange(QStyle&)</primary></indexterm>QMenuBar::styleChange(QStyle&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;98&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enabledChange(bool)</primary></indexterm>QWidget::enabledChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;99&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paletteChange(QPalette const&)</primary></indexterm>QWidget::paletteChange(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;100&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMenuBar::fontChange(QFont const&)</primary></indexterm>QMenuBar::fontChange(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;101&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::windowActivationChange(bool)</primary></indexterm>QWidget::windowActivationChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;102&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::metric(int) const</primary></indexterm>QWidget::metric(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;103&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::create(unsigned long, bool, bool)</primary></indexterm>QWidget::create(unsigned long, bool, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;104&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::destroy(bool, bool)</primary></indexterm>QWidget::destroy(bool, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;105&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setWState(unsigned int)</primary></indexterm>NULL or QWidget::setWState(unsigned int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;106&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setWFlags(unsigned int)</primary></indexterm>NULL or QWidget::setWFlags(unsigned int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;107&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusNextPrevChild(bool)</primary></indexterm>QWidget::focusNextPrevChild(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;108&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setKeyCompression(bool)</primary></indexterm>QWidget::setKeyCompression(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;109&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMicroFocusHint(int, int, int, int, bool, QFont*)</primary></indexterm>QWidget::setMicroFocusHint(int, int, int, int, bool, QFont*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;110&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::setFrameStyle(int)</primary></indexterm>QFrame::setFrameStyle(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;111&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::setLineWidth(int)</primary></indexterm>QFrame::setLineWidth(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;112&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::setMargin(int)</primary></indexterm>QFrame::setMargin(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;113&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::setMidLineWidth(int)</primary></indexterm>QFrame::setMidLineWidth(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;114&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::setFrameRect(QRect const&)</primary></indexterm>QFrame::setFrameRect(QRect const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;115&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::drawFrame(QPainter*)</primary></indexterm>QFrame::drawFrame(QPainter*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;116&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMenuBar::drawContents(QPainter*)</primary></indexterm>QMenuBar::drawContents(QPainter*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;117&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMenuBar::frameChanged()</primary></indexterm>QMenuBar::frameChanged()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;118&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMenuBar::updateItem(int)</primary></indexterm>QMenuBar::updateItem(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;119&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMenuBar::setSeparator(QMenuBar::Separator)</primary></indexterm>QMenuBar::setSeparator(QMenuBar::Separator)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;120&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMenuBar::activateItemAt(int)</primary></indexterm>QMenuBar::activateItemAt(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;121&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMenuBar::menuContentsChanged()</primary></indexterm>QMenuBar::menuContentsChanged()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;122&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMenuBar::menuStateChanged()</primary></indexterm>QMenuBar::menuStateChanged()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;123&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMenuBar::menuInsPopup(QPopupMenu*)</primary></indexterm>QMenuBar::menuInsPopup(QPopupMenu*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;124&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMenuBar::menuDelPopup(QPopupMenu*)</primary></indexterm>QMenuBar::menuDelPopup(QPopupMenu*)</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--classdata-->
<TABLE id="cls-51449-1">
<TITLE>Secondary vtable for QMenuBar</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>-80</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QMenuBar</primary></indexterm>typeinfo for QMenuBar</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QMenuBar::~QMenuBar()</primary></indexterm>non-virtual thunk to QMenuBar::~QMenuBar()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QMenuBar::~QMenuBar()</primary></indexterm>non-virtual thunk to QMenuBar::~QMenuBar()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::setResolution(int)</primary></indexterm>QPaintDevice::setResolution(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::resolution() const</primary></indexterm>QPaintDevice::resolution() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::handle() const</primary></indexterm>QPaintDevice::handle() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::x11RenderHandle() const</primary></indexterm>QPaintDevice::x11RenderHandle() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::setX11Data(QPaintDeviceX11Data const*)</primary></indexterm>QPaintDevice::setX11Data(QPaintDeviceX11Data const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::cmd(int, QPainter*, QPDevCmdParam*)</primary></indexterm>QPaintDevice::cmd(int, QPainter*, QPDevCmdParam*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::metric(int) const</primary></indexterm>non-virtual thunk to QWidget::metric(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::fontMet(QFont*, int, char const*, int) const</primary></indexterm>QPaintDevice::fontMet(QFont*, int, char const*, int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::fontInf(QFont*, int) const</primary></indexterm>QPaintDevice::fontInf(QFont*, int) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--classdata-->
<TABLE id="cls-51449-2">
<TITLE>Secondary vtable for QMenuBar</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>-240</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QMenuBar</primary></indexterm>typeinfo for QMenuBar</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QMenuBar::~QMenuBar()</primary></indexterm>non-virtual thunk to QMenuBar::~QMenuBar()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QMenuBar::~QMenuBar()</primary></indexterm>non-virtual thunk to QMenuBar::~QMenuBar()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QMenuBar::updateItem(int)</primary></indexterm>non-virtual thunk to QMenuBar::updateItem(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMenuData::setId(int, int)</primary></indexterm>QMenuData::setId(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QMenuBar::activateItemAt(int)</primary></indexterm>non-virtual thunk to QMenuBar::activateItemAt(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QMenuBar::menuContentsChanged()</primary></indexterm>non-virtual thunk to QMenuBar::menuContentsChanged()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QMenuBar::menuStateChanged()</primary></indexterm>non-virtual thunk to QMenuBar::menuStateChanged()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QMenuBar::menuInsPopup(QPopupMenu*)</primary></indexterm>non-virtual thunk to QMenuBar::menuInsPopup(QPopupMenu*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QMenuBar::menuDelPopup(QPopupMenu*)</primary></indexterm>non-virtual thunk to QMenuBar::menuDelPopup(QPopupMenu*)</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QMenuBar  class
is described by <XREF LINKEND="rtti-57732">
</PARA>
<!--classdata-->
<TABLE ID="rtti-57732">
<TITLE>typeinfo for QMenuBar</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__vmi_class_type_info</primary></indexterm>vtable for __cxxabiv1::__vmi_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QMenuBar</primary></indexterm>typeinfo name for QMenuBar</ENTRY>
</ROW>
<ROW>
<ENTRY>flags:</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QFrame</primary></indexterm>typeinfo for QFrame</ENTRY>
<ENTRY>2</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QMenuData</primary></indexterm>typeinfo for QMenuData</ENTRY>
<ENTRY>37890</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QCustomMenuItem</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QCustomMenuItem class
is described in the generic part of this specification.
</PARA>
<PARA>
The Run Time Type Information for the QCustomMenuItem  class
is described by <XREF LINKEND="rtti-56776">
</PARA>
<!--classdata-->
<TABLE ID="rtti-56776">
<TITLE>typeinfo for QCustomMenuItem</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QCustomMenuItem</primary></indexterm>typeinfo name for QCustomMenuItem</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for Qt</primary></indexterm>typeinfo for Qt</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QMenuData</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QMenuData class
is described in the generic part of this specification.
</PARA>
<PARA>
The Run Time Type Information for the QMenuData  class
is described by <XREF LINKEND="rtti-56557">
</PARA>
<!--classdata-->
<TABLE ID="rtti-56557">
<TITLE>typeinfo for QMenuData</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__class_type_info</primary></indexterm>vtable for __cxxabiv1::__class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QMenuData</primary></indexterm>typeinfo name for QMenuData</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Interfaces for Qt3 Menus</TITLE>
<PARA>
An LSB conforming implementation shall provide the architecture specific functions
for Qt3 Menus specified in <XREF linkend="tbl-libqt-mt-2-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<TABLE id="tbl-libqt-mt-2-ints">
<TITLE>libqt-mt - Qt3 Menus Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>_ZThn240_N10QPopupMenu10updateItemEi</primary></indexterm>_ZThn240_N10QPopupMenu10updateItemEi <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn240_N10QPopupMenu12menuDelPopupEPS_</primary></indexterm>_ZThn240_N10QPopupMenu12menuDelPopupEPS_ <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn240_N10QPopupMenu12menuInsPopupEPS_</primary></indexterm>_ZThn240_N10QPopupMenu12menuInsPopupEPS_ <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn240_N10QPopupMenu14activateItemAtEi</primary></indexterm>_ZThn240_N10QPopupMenu14activateItemAtEi <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn240_N10QPopupMenu16menuStateChangedEv</primary></indexterm>_ZThn240_N10QPopupMenu16menuStateChangedEv <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn240_N10QPopupMenu19menuContentsChangedEv</primary></indexterm>_ZThn240_N10QPopupMenu19menuContentsChangedEv <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn240_N10QPopupMenuD0Ev</primary></indexterm>_ZThn240_N10QPopupMenuD0Ev <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn240_N10QPopupMenuD1Ev</primary></indexterm>_ZThn240_N10QPopupMenuD1Ev <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn240_N8QMenuBar10updateItemEi</primary></indexterm>_ZThn240_N8QMenuBar10updateItemEi <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn240_N8QMenuBar12menuDelPopupEP10QPopupMenu</primary></indexterm>_ZThn240_N8QMenuBar12menuDelPopupEP10QPopupMenu <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn240_N8QMenuBar12menuInsPopupEP10QPopupMenu</primary></indexterm>_ZThn240_N8QMenuBar12menuInsPopupEP10QPopupMenu <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn240_N8QMenuBar14activateItemAtEi</primary></indexterm>_ZThn240_N8QMenuBar14activateItemAtEi <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn240_N8QMenuBar16menuStateChangedEv</primary></indexterm>_ZThn240_N8QMenuBar16menuStateChangedEv <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn240_N8QMenuBar19menuContentsChangedEv</primary></indexterm>_ZThn240_N8QMenuBar19menuContentsChangedEv <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn240_N8QMenuBarD0Ev</primary></indexterm>_ZThn240_N8QMenuBarD0Ev <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn240_N8QMenuBarD1Ev</primary></indexterm>_ZThn240_N8QMenuBarD1Ev <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn80_N10QPopupMenuD0Ev</primary></indexterm>_ZThn80_N10QPopupMenuD0Ev <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn80_N10QPopupMenuD1Ev</primary></indexterm>_ZThn80_N10QPopupMenuD1Ev <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn80_N8QMenuBarD0Ev</primary></indexterm>_ZThn80_N8QMenuBarD0Ev <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn80_N8QMenuBarD1Ev</primary></indexterm>_ZThn80_N8QMenuBarD1Ev <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>
</SECT2>
<!-- debug: database interface name Qt3 Organizers -->
<SECT2>
<!--libgroup-->
<TITLE>Qt3 Organizers</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Class data for QHBox</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QHBox class
is described by <XREF LINKEND="cls-51933-0">
</PARA>
<!--classdata-->
<TABLE id="cls-51933-0">
<TITLE>Primary vtable for QHBox</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QHBox</primary></indexterm>typeinfo for QHBox</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QHBox::metaObject() const</primary></indexterm>NULL or QHBox::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QHBox::className() const</primary></indexterm>QHBox::className() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QHBox::qt_cast(char const*)</primary></indexterm>QHBox::qt_cast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QHBox::qt_invoke(int, QUObject*)</primary></indexterm>QHBox::qt_invoke(int, QUObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QHBox::qt_emit(int, QUObject*)</primary></indexterm>QHBox::qt_emit(int, QUObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QHBox::qt_property(int, int, QVariant*)</primary></indexterm>QHBox::qt_property(int, int, QVariant*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QHBox::~QHBox()</primary></indexterm>NULL or QHBox::~QHBox()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QHBox::~QHBox()</primary></indexterm>NULL or QHBox::~QHBox()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::event(QEvent*)</primary></indexterm>QWidget::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::eventFilter(QObject*, QEvent*)</primary></indexterm>QObject::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setName(char const*)</primary></indexterm>QWidget::setName(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::insertChild(QObject*)</primary></indexterm>QObject::insertChild(QObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::removeChild(QObject*)</primary></indexterm>QObject::removeChild(QObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::setProperty(char const*, QVariant const&)</primary></indexterm>QObject::setProperty(char const*, QVariant const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::property(char const*) const</primary></indexterm>QObject::property(char const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QCustomEvent*)</primary></indexterm>QObject::customEvent(QCustomEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::checkConnectArgs(char const*, QObject const*, char const*)</primary></indexterm>QObject::checkConnectArgs(char const*, QObject const*, char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setEnabled(bool)</primary></indexterm>QWidget::setEnabled(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMinimumSize(int, int)</primary></indexterm>QWidget::setMinimumSize(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMaximumSize(int, int)</primary></indexterm>QWidget::setMaximumSize(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setSizeIncrement(int, int)</primary></indexterm>QWidget::setSizeIncrement(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundMode(Qt::BackgroundMode)</primary></indexterm>QWidget::setBackgroundMode(Qt::BackgroundMode)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setEraseColor(QColor const&)</primary></indexterm>QWidget::setEraseColor(QColor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setErasePixmap(QPixmap const&)</primary></indexterm>QWidget::setErasePixmap(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setPalette(QPalette const&)</primary></indexterm>QWidget::setPalette(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setPaletteBackgroundColor(QColor const&)</primary></indexterm>QWidget::setPaletteBackgroundColor(QColor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setPaletteBackgroundPixmap(QPixmap const&)</primary></indexterm>QWidget::setPaletteBackgroundPixmap(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFont(QFont const&)</primary></indexterm>QWidget::setFont(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setCursor(QCursor const&)</primary></indexterm>QWidget::setCursor(QCursor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;33&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::unsetCursor()</primary></indexterm>QWidget::unsetCursor()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;34&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMask(QBitmap const&)</primary></indexterm>QWidget::setMask(QBitmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;35&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMask(QRegion const&)</primary></indexterm>QWidget::setMask(QRegion const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;36&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundColor(QColor const&)</primary></indexterm>QWidget::setBackgroundColor(QColor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;37&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundPixmap(QPixmap const&)</primary></indexterm>QWidget::setBackgroundPixmap(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;38&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setCaption(QString const&)</primary></indexterm>QWidget::setCaption(QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;39&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setIcon(QPixmap const&)</primary></indexterm>QWidget::setIcon(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;40&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setIconText(QString const&)</primary></indexterm>QWidget::setIconText(QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;41&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMouseTracking(bool)</primary></indexterm>QWidget::setMouseTracking(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;42&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFocus()</primary></indexterm>QWidget::setFocus()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;43&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setActiveWindow()</primary></indexterm>QWidget::setActiveWindow()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;44&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFocusPolicy(QWidget::FocusPolicy)</primary></indexterm>QWidget::setFocusPolicy(QWidget::FocusPolicy)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;45&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFocusProxy(QWidget*)</primary></indexterm>QWidget::setFocusProxy(QWidget*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;46&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setUpdatesEnabled(bool)</primary></indexterm>QWidget::setUpdatesEnabled(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;47&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::show()</primary></indexterm>QWidget::show()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;48&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::hide()</primary></indexterm>QWidget::hide()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;49&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showMinimized()</primary></indexterm>QWidget::showMinimized()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;50&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showMaximized()</primary></indexterm>QWidget::showMaximized()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;51&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showNormal()</primary></indexterm>QWidget::showNormal()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;52&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::polish()</primary></indexterm>QWidget::polish()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;53&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::move(int, int)</primary></indexterm>QWidget::move(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;54&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::resize(int, int)</primary></indexterm>QWidget::resize(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;55&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setGeometry(int, int, int, int)</primary></indexterm>QWidget::setGeometry(int, int, int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;56&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setGeometry(QRect const&)</primary></indexterm>NULL or QWidget::setGeometry(QRect const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;57&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::close(bool)</primary></indexterm>QWidget::close(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;58&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QHBox::sizeHint() const</primary></indexterm>QHBox::sizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;59&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::minimumSizeHint() const</primary></indexterm>QWidget::minimumSizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;60&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::sizePolicy() const</primary></indexterm>QWidget::sizePolicy() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;61&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setSizePolicy(QSizePolicy)</primary></indexterm>QWidget::setSizePolicy(QSizePolicy)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;62&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::heightForWidth(int) const</primary></indexterm>QWidget::heightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;63&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::adjustSize()</primary></indexterm>QWidget::adjustSize()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;64&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::reparent(QWidget*, unsigned int, QPoint const&, bool)</primary></indexterm>QWidget::reparent(QWidget*, unsigned int, QPoint const&, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;65&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setAcceptDrops(bool)</primary></indexterm>QWidget::setAcceptDrops(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;66&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setAutoMask(bool)</primary></indexterm>QWidget::setAutoMask(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;67&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundOrigin(QWidget::BackgroundOrigin)</primary></indexterm>QWidget::setBackgroundOrigin(QWidget::BackgroundOrigin)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;68&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::customWhatsThis() const</primary></indexterm>QWidget::customWhatsThis() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;69&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mousePressEvent(QMouseEvent*)</primary></indexterm>QWidget::mousePressEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;70&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseReleaseEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseReleaseEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;71&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseDoubleClickEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseDoubleClickEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;72&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseMoveEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseMoveEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;73&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::wheelEvent(QWheelEvent*)</primary></indexterm>QWidget::wheelEvent(QWheelEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;74&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyPressEvent(QKeyEvent*)</primary></indexterm>QWidget::keyPressEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;75&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyReleaseEvent(QKeyEvent*)</primary></indexterm>QWidget::keyReleaseEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;76&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusInEvent(QFocusEvent*)</primary></indexterm>QWidget::focusInEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;77&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusOutEvent(QFocusEvent*)</primary></indexterm>QWidget::focusOutEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;78&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enterEvent(QEvent*)</primary></indexterm>QWidget::enterEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;79&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::leaveEvent(QEvent*)</primary></indexterm>QWidget::leaveEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;80&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::paintEvent(QPaintEvent*)</primary></indexterm>QFrame::paintEvent(QPaintEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;81&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::moveEvent(QMoveEvent*)</primary></indexterm>QWidget::moveEvent(QMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;82&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::resizeEvent(QResizeEvent*)</primary></indexterm>QFrame::resizeEvent(QResizeEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;83&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::closeEvent(QCloseEvent*)</primary></indexterm>QWidget::closeEvent(QCloseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;84&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::contextMenuEvent(QContextMenuEvent*)</primary></indexterm>QWidget::contextMenuEvent(QContextMenuEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;85&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::imStartEvent(QIMEvent*)</primary></indexterm>QWidget::imStartEvent(QIMEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;86&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::imComposeEvent(QIMEvent*)</primary></indexterm>QWidget::imComposeEvent(QIMEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;87&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::imEndEvent(QIMEvent*)</primary></indexterm>QWidget::imEndEvent(QIMEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;88&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::tabletEvent(QTabletEvent*)</primary></indexterm>QWidget::tabletEvent(QTabletEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;89&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragEnterEvent(QDragEnterEvent*)</primary></indexterm>QWidget::dragEnterEvent(QDragEnterEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;90&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragMoveEvent(QDragMoveEvent*)</primary></indexterm>QWidget::dragMoveEvent(QDragMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;91&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragLeaveEvent(QDragLeaveEvent*)</primary></indexterm>QWidget::dragLeaveEvent(QDragLeaveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;92&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dropEvent(QDropEvent*)</primary></indexterm>QWidget::dropEvent(QDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;93&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showEvent(QShowEvent*)</primary></indexterm>QWidget::showEvent(QShowEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;94&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::hideEvent(QHideEvent*)</primary></indexterm>QWidget::hideEvent(QHideEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;95&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::x11Event(_XEvent*)</primary></indexterm>QWidget::x11Event(_XEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;96&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::updateMask()</primary></indexterm>QWidget::updateMask()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;97&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::styleChange(QStyle&)</primary></indexterm>QFrame::styleChange(QStyle&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;98&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enabledChange(bool)</primary></indexterm>QWidget::enabledChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;99&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paletteChange(QPalette const&)</primary></indexterm>QWidget::paletteChange(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;100&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::fontChange(QFont const&)</primary></indexterm>QWidget::fontChange(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;101&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::windowActivationChange(bool)</primary></indexterm>QWidget::windowActivationChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;102&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::metric(int) const</primary></indexterm>QWidget::metric(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;103&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::create(unsigned long, bool, bool)</primary></indexterm>QWidget::create(unsigned long, bool, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;104&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::destroy(bool, bool)</primary></indexterm>QWidget::destroy(bool, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;105&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setWState(unsigned int)</primary></indexterm>NULL or QWidget::setWState(unsigned int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;106&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setWFlags(unsigned int)</primary></indexterm>NULL or QWidget::setWFlags(unsigned int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;107&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusNextPrevChild(bool)</primary></indexterm>QWidget::focusNextPrevChild(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;108&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setKeyCompression(bool)</primary></indexterm>QWidget::setKeyCompression(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;109&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMicroFocusHint(int, int, int, int, bool, QFont*)</primary></indexterm>QWidget::setMicroFocusHint(int, int, int, int, bool, QFont*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;110&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::setFrameStyle(int)</primary></indexterm>QFrame::setFrameStyle(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;111&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::setLineWidth(int)</primary></indexterm>QFrame::setLineWidth(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;112&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::setMargin(int)</primary></indexterm>QFrame::setMargin(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;113&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::setMidLineWidth(int)</primary></indexterm>QFrame::setMidLineWidth(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;114&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::setFrameRect(QRect const&)</primary></indexterm>QFrame::setFrameRect(QRect const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;115&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::drawFrame(QPainter*)</primary></indexterm>QFrame::drawFrame(QPainter*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;116&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::drawContents(QPainter*)</primary></indexterm>QFrame::drawContents(QPainter*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;117&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QHBox::frameChanged()</primary></indexterm>QHBox::frameChanged()</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--classdata-->
<TABLE id="cls-51933-1">
<TITLE>Secondary vtable for QHBox</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>-80</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QHBox</primary></indexterm>typeinfo for QHBox</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QHBox::~QHBox()</primary></indexterm>non-virtual thunk to QHBox::~QHBox()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QHBox::~QHBox()</primary></indexterm>non-virtual thunk to QHBox::~QHBox()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::setResolution(int)</primary></indexterm>QPaintDevice::setResolution(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::resolution() const</primary></indexterm>QPaintDevice::resolution() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::handle() const</primary></indexterm>QPaintDevice::handle() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::x11RenderHandle() const</primary></indexterm>QPaintDevice::x11RenderHandle() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::setX11Data(QPaintDeviceX11Data const*)</primary></indexterm>QPaintDevice::setX11Data(QPaintDeviceX11Data const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::cmd(int, QPainter*, QPDevCmdParam*)</primary></indexterm>QPaintDevice::cmd(int, QPainter*, QPDevCmdParam*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::metric(int) const</primary></indexterm>non-virtual thunk to QWidget::metric(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::fontMet(QFont*, int, char const*, int) const</primary></indexterm>QPaintDevice::fontMet(QFont*, int, char const*, int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::fontInf(QFont*, int) const</primary></indexterm>QPaintDevice::fontInf(QFont*, int) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QHBox  class
is described by <XREF LINKEND="rtti-55837">
</PARA>
<!--classdata-->
<TABLE ID="rtti-55837">
<TITLE>typeinfo for QHBox</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QHBox</primary></indexterm>typeinfo name for QHBox</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QFrame</primary></indexterm>typeinfo for QFrame</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QSplitter</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QSplitter class
is described by <XREF LINKEND="cls-51355-0">
</PARA>
<!--classdata-->
<TABLE id="cls-51355-0">
<TITLE>Primary vtable for QSplitter</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QSplitter</primary></indexterm>typeinfo for QSplitter</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSplitter::metaObject() const</primary></indexterm>NULL or QSplitter::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSplitter::className() const</primary></indexterm>QSplitter::className() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSplitter::qt_cast(char const*)</primary></indexterm>QSplitter::qt_cast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSplitter::qt_invoke(int, QUObject*)</primary></indexterm>QSplitter::qt_invoke(int, QUObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSplitter::qt_emit(int, QUObject*)</primary></indexterm>QSplitter::qt_emit(int, QUObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSplitter::qt_property(int, int, QVariant*)</primary></indexterm>QSplitter::qt_property(int, int, QVariant*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSplitter::~QSplitter()</primary></indexterm>QSplitter::~QSplitter()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSplitter::~QSplitter()</primary></indexterm>QSplitter::~QSplitter()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSplitter::event(QEvent*)</primary></indexterm>QSplitter::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::eventFilter(QObject*, QEvent*)</primary></indexterm>QObject::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setName(char const*)</primary></indexterm>QWidget::setName(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::insertChild(QObject*)</primary></indexterm>QObject::insertChild(QObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::removeChild(QObject*)</primary></indexterm>QObject::removeChild(QObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::setProperty(char const*, QVariant const&)</primary></indexterm>QObject::setProperty(char const*, QVariant const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::property(char const*) const</primary></indexterm>QObject::property(char const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSplitter::childEvent(QChildEvent*)</primary></indexterm>QSplitter::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QCustomEvent*)</primary></indexterm>QObject::customEvent(QCustomEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::checkConnectArgs(char const*, QObject const*, char const*)</primary></indexterm>QObject::checkConnectArgs(char const*, QObject const*, char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setEnabled(bool)</primary></indexterm>QWidget::setEnabled(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMinimumSize(int, int)</primary></indexterm>QWidget::setMinimumSize(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMaximumSize(int, int)</primary></indexterm>QWidget::setMaximumSize(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setSizeIncrement(int, int)</primary></indexterm>QWidget::setSizeIncrement(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundMode(Qt::BackgroundMode)</primary></indexterm>QWidget::setBackgroundMode(Qt::BackgroundMode)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setEraseColor(QColor const&)</primary></indexterm>QWidget::setEraseColor(QColor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setErasePixmap(QPixmap const&)</primary></indexterm>QWidget::setErasePixmap(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setPalette(QPalette const&)</primary></indexterm>QWidget::setPalette(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setPaletteBackgroundColor(QColor const&)</primary></indexterm>QWidget::setPaletteBackgroundColor(QColor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setPaletteBackgroundPixmap(QPixmap const&)</primary></indexterm>QWidget::setPaletteBackgroundPixmap(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFont(QFont const&)</primary></indexterm>QWidget::setFont(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setCursor(QCursor const&)</primary></indexterm>QWidget::setCursor(QCursor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;33&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::unsetCursor()</primary></indexterm>QWidget::unsetCursor()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;34&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMask(QBitmap const&)</primary></indexterm>QWidget::setMask(QBitmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;35&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMask(QRegion const&)</primary></indexterm>QWidget::setMask(QRegion const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;36&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundColor(QColor const&)</primary></indexterm>QWidget::setBackgroundColor(QColor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;37&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundPixmap(QPixmap const&)</primary></indexterm>QWidget::setBackgroundPixmap(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;38&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setCaption(QString const&)</primary></indexterm>QWidget::setCaption(QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;39&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setIcon(QPixmap const&)</primary></indexterm>QWidget::setIcon(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;40&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setIconText(QString const&)</primary></indexterm>QWidget::setIconText(QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;41&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMouseTracking(bool)</primary></indexterm>QWidget::setMouseTracking(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;42&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFocus()</primary></indexterm>QWidget::setFocus()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;43&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setActiveWindow()</primary></indexterm>QWidget::setActiveWindow()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;44&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFocusPolicy(QWidget::FocusPolicy)</primary></indexterm>QWidget::setFocusPolicy(QWidget::FocusPolicy)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;45&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFocusProxy(QWidget*)</primary></indexterm>QWidget::setFocusProxy(QWidget*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;46&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setUpdatesEnabled(bool)</primary></indexterm>QWidget::setUpdatesEnabled(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;47&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::show()</primary></indexterm>QWidget::show()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;48&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::hide()</primary></indexterm>QWidget::hide()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;49&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showMinimized()</primary></indexterm>QWidget::showMinimized()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;50&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showMaximized()</primary></indexterm>QWidget::showMaximized()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;51&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showNormal()</primary></indexterm>QWidget::showNormal()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;52&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::polish()</primary></indexterm>QWidget::polish()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;53&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::move(int, int)</primary></indexterm>QWidget::move(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;54&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::resize(int, int)</primary></indexterm>QWidget::resize(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;55&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setGeometry(int, int, int, int)</primary></indexterm>QWidget::setGeometry(int, int, int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;56&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setGeometry(QRect const&)</primary></indexterm>NULL or QWidget::setGeometry(QRect const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;57&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::close(bool)</primary></indexterm>QWidget::close(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;58&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSplitter::sizeHint() const</primary></indexterm>QSplitter::sizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;59&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSplitter::minimumSizeHint() const</primary></indexterm>QSplitter::minimumSizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;60&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::sizePolicy() const</primary></indexterm>QWidget::sizePolicy() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;61&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setSizePolicy(QSizePolicy)</primary></indexterm>QWidget::setSizePolicy(QSizePolicy)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;62&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::heightForWidth(int) const</primary></indexterm>QWidget::heightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;63&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::adjustSize()</primary></indexterm>QWidget::adjustSize()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;64&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::reparent(QWidget*, unsigned int, QPoint const&, bool)</primary></indexterm>QWidget::reparent(QWidget*, unsigned int, QPoint const&, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;65&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setAcceptDrops(bool)</primary></indexterm>QWidget::setAcceptDrops(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;66&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setAutoMask(bool)</primary></indexterm>QWidget::setAutoMask(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;67&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundOrigin(QWidget::BackgroundOrigin)</primary></indexterm>QWidget::setBackgroundOrigin(QWidget::BackgroundOrigin)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;68&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::customWhatsThis() const</primary></indexterm>QWidget::customWhatsThis() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;69&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mousePressEvent(QMouseEvent*)</primary></indexterm>QWidget::mousePressEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;70&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseReleaseEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseReleaseEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;71&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseDoubleClickEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseDoubleClickEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;72&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseMoveEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseMoveEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;73&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::wheelEvent(QWheelEvent*)</primary></indexterm>QWidget::wheelEvent(QWheelEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;74&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyPressEvent(QKeyEvent*)</primary></indexterm>QWidget::keyPressEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;75&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyReleaseEvent(QKeyEvent*)</primary></indexterm>QWidget::keyReleaseEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;76&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusInEvent(QFocusEvent*)</primary></indexterm>QWidget::focusInEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;77&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusOutEvent(QFocusEvent*)</primary></indexterm>QWidget::focusOutEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;78&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enterEvent(QEvent*)</primary></indexterm>QWidget::enterEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;79&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::leaveEvent(QEvent*)</primary></indexterm>QWidget::leaveEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;80&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::paintEvent(QPaintEvent*)</primary></indexterm>QFrame::paintEvent(QPaintEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;81&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::moveEvent(QMoveEvent*)</primary></indexterm>QWidget::moveEvent(QMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;82&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSplitter::resizeEvent(QResizeEvent*)</primary></indexterm>QSplitter::resizeEvent(QResizeEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;83&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::closeEvent(QCloseEvent*)</primary></indexterm>QWidget::closeEvent(QCloseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;84&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::contextMenuEvent(QContextMenuEvent*)</primary></indexterm>QWidget::contextMenuEvent(QContextMenuEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;85&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::imStartEvent(QIMEvent*)</primary></indexterm>QWidget::imStartEvent(QIMEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;86&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::imComposeEvent(QIMEvent*)</primary></indexterm>QWidget::imComposeEvent(QIMEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;87&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::imEndEvent(QIMEvent*)</primary></indexterm>QWidget::imEndEvent(QIMEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;88&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::tabletEvent(QTabletEvent*)</primary></indexterm>QWidget::tabletEvent(QTabletEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;89&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragEnterEvent(QDragEnterEvent*)</primary></indexterm>QWidget::dragEnterEvent(QDragEnterEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;90&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragMoveEvent(QDragMoveEvent*)</primary></indexterm>QWidget::dragMoveEvent(QDragMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;91&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragLeaveEvent(QDragLeaveEvent*)</primary></indexterm>QWidget::dragLeaveEvent(QDragLeaveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;92&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dropEvent(QDropEvent*)</primary></indexterm>QWidget::dropEvent(QDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;93&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showEvent(QShowEvent*)</primary></indexterm>QWidget::showEvent(QShowEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;94&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::hideEvent(QHideEvent*)</primary></indexterm>QWidget::hideEvent(QHideEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;95&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::x11Event(_XEvent*)</primary></indexterm>QWidget::x11Event(_XEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;96&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::updateMask()</primary></indexterm>QWidget::updateMask()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;97&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSplitter::styleChange(QStyle&)</primary></indexterm>QSplitter::styleChange(QStyle&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;98&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enabledChange(bool)</primary></indexterm>QWidget::enabledChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;99&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paletteChange(QPalette const&)</primary></indexterm>QWidget::paletteChange(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;100&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::fontChange(QFont const&)</primary></indexterm>QWidget::fontChange(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;101&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::windowActivationChange(bool)</primary></indexterm>QWidget::windowActivationChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;102&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::metric(int) const</primary></indexterm>QWidget::metric(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;103&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::create(unsigned long, bool, bool)</primary></indexterm>QWidget::create(unsigned long, bool, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;104&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::destroy(bool, bool)</primary></indexterm>QWidget::destroy(bool, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;105&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setWState(unsigned int)</primary></indexterm>NULL or QWidget::setWState(unsigned int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;106&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setWFlags(unsigned int)</primary></indexterm>NULL or QWidget::setWFlags(unsigned int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;107&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusNextPrevChild(bool)</primary></indexterm>QWidget::focusNextPrevChild(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;108&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setKeyCompression(bool)</primary></indexterm>QWidget::setKeyCompression(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;109&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMicroFocusHint(int, int, int, int, bool, QFont*)</primary></indexterm>QWidget::setMicroFocusHint(int, int, int, int, bool, QFont*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;110&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::setFrameStyle(int)</primary></indexterm>QFrame::setFrameStyle(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;111&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::setLineWidth(int)</primary></indexterm>QFrame::setLineWidth(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;112&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::setMargin(int)</primary></indexterm>QFrame::setMargin(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;113&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::setMidLineWidth(int)</primary></indexterm>QFrame::setMidLineWidth(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;114&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::setFrameRect(QRect const&)</primary></indexterm>QFrame::setFrameRect(QRect const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;115&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::drawFrame(QPainter*)</primary></indexterm>QFrame::drawFrame(QPainter*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;116&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::drawContents(QPainter*)</primary></indexterm>QFrame::drawContents(QPainter*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;117&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::frameChanged()</primary></indexterm>QFrame::frameChanged()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;118&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSplitter::setOrientation(Qt::Orientation)</primary></indexterm>QSplitter::setOrientation(Qt::Orientation)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;119&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSplitter::setResizeMode(QWidget*, QSplitter::ResizeMode)</primary></indexterm>QSplitter::setResizeMode(QWidget*, QSplitter::ResizeMode)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;120&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSplitter::setOpaqueResize(bool)</primary></indexterm>QSplitter::setOpaqueResize(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;121&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSplitter::drawSplitter(QPainter*, int, int, int, int)</primary></indexterm>QSplitter::drawSplitter(QPainter*, int, int, int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;122&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSplitter::setRubberband(int)</primary></indexterm>QSplitter::setRubberband(int)</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--classdata-->
<TABLE id="cls-51355-1">
<TITLE>Secondary vtable for QSplitter</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>-80</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QSplitter</primary></indexterm>typeinfo for QSplitter</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QSplitter::~QSplitter()</primary></indexterm>non-virtual thunk to QSplitter::~QSplitter()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QSplitter::~QSplitter()</primary></indexterm>non-virtual thunk to QSplitter::~QSplitter()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::setResolution(int)</primary></indexterm>QPaintDevice::setResolution(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::resolution() const</primary></indexterm>QPaintDevice::resolution() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::handle() const</primary></indexterm>QPaintDevice::handle() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::x11RenderHandle() const</primary></indexterm>QPaintDevice::x11RenderHandle() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::setX11Data(QPaintDeviceX11Data const*)</primary></indexterm>QPaintDevice::setX11Data(QPaintDeviceX11Data const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::cmd(int, QPainter*, QPDevCmdParam*)</primary></indexterm>QPaintDevice::cmd(int, QPainter*, QPDevCmdParam*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::metric(int) const</primary></indexterm>non-virtual thunk to QWidget::metric(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::fontMet(QFont*, int, char const*, int) const</primary></indexterm>QPaintDevice::fontMet(QFont*, int, char const*, int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::fontInf(QFont*, int) const</primary></indexterm>QPaintDevice::fontInf(QFont*, int) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QSplitter  class
is described by <XREF LINKEND="rtti-60663">
</PARA>
<!--classdata-->
<TABLE ID="rtti-60663">
<TITLE>typeinfo for QSplitter</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QSplitter</primary></indexterm>typeinfo name for QSplitter</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QFrame</primary></indexterm>typeinfo for QFrame</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QVBox</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QVBox class
is described by <XREF LINKEND="cls-57974-0">
</PARA>
<!--classdata-->
<TABLE id="cls-57974-0">
<TITLE>Primary vtable for QVBox</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QVBox</primary></indexterm>typeinfo for QVBox</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QVBox::metaObject() const</primary></indexterm>NULL or QVBox::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QVBox::className() const</primary></indexterm>QVBox::className() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QVBox::qt_cast(char const*)</primary></indexterm>QVBox::qt_cast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QVBox::qt_invoke(int, QUObject*)</primary></indexterm>QVBox::qt_invoke(int, QUObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QVBox::qt_emit(int, QUObject*)</primary></indexterm>QVBox::qt_emit(int, QUObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QVBox::qt_property(int, int, QVariant*)</primary></indexterm>QVBox::qt_property(int, int, QVariant*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QVBox::~QVBox()</primary></indexterm>NULL or QVBox::~QVBox()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QVBox::~QVBox()</primary></indexterm>NULL or QVBox::~QVBox()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::event(QEvent*)</primary></indexterm>QWidget::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::eventFilter(QObject*, QEvent*)</primary></indexterm>QObject::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setName(char const*)</primary></indexterm>QWidget::setName(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::insertChild(QObject*)</primary></indexterm>QObject::insertChild(QObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::removeChild(QObject*)</primary></indexterm>QObject::removeChild(QObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::setProperty(char const*, QVariant const&)</primary></indexterm>QObject::setProperty(char const*, QVariant const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::property(char const*) const</primary></indexterm>QObject::property(char const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QCustomEvent*)</primary></indexterm>QObject::customEvent(QCustomEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::checkConnectArgs(char const*, QObject const*, char const*)</primary></indexterm>QObject::checkConnectArgs(char const*, QObject const*, char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setEnabled(bool)</primary></indexterm>QWidget::setEnabled(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMinimumSize(int, int)</primary></indexterm>QWidget::setMinimumSize(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMaximumSize(int, int)</primary></indexterm>QWidget::setMaximumSize(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setSizeIncrement(int, int)</primary></indexterm>QWidget::setSizeIncrement(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundMode(Qt::BackgroundMode)</primary></indexterm>QWidget::setBackgroundMode(Qt::BackgroundMode)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setEraseColor(QColor const&)</primary></indexterm>QWidget::setEraseColor(QColor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setErasePixmap(QPixmap const&)</primary></indexterm>QWidget::setErasePixmap(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setPalette(QPalette const&)</primary></indexterm>QWidget::setPalette(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setPaletteBackgroundColor(QColor const&)</primary></indexterm>QWidget::setPaletteBackgroundColor(QColor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setPaletteBackgroundPixmap(QPixmap const&)</primary></indexterm>QWidget::setPaletteBackgroundPixmap(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFont(QFont const&)</primary></indexterm>QWidget::setFont(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setCursor(QCursor const&)</primary></indexterm>QWidget::setCursor(QCursor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;33&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::unsetCursor()</primary></indexterm>QWidget::unsetCursor()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;34&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMask(QBitmap const&)</primary></indexterm>QWidget::setMask(QBitmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;35&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMask(QRegion const&)</primary></indexterm>QWidget::setMask(QRegion const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;36&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundColor(QColor const&)</primary></indexterm>QWidget::setBackgroundColor(QColor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;37&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundPixmap(QPixmap const&)</primary></indexterm>QWidget::setBackgroundPixmap(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;38&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setCaption(QString const&)</primary></indexterm>QWidget::setCaption(QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;39&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setIcon(QPixmap const&)</primary></indexterm>QWidget::setIcon(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;40&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setIconText(QString const&)</primary></indexterm>QWidget::setIconText(QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;41&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMouseTracking(bool)</primary></indexterm>QWidget::setMouseTracking(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;42&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFocus()</primary></indexterm>QWidget::setFocus()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;43&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setActiveWindow()</primary></indexterm>QWidget::setActiveWindow()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;44&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFocusPolicy(QWidget::FocusPolicy)</primary></indexterm>QWidget::setFocusPolicy(QWidget::FocusPolicy)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;45&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFocusProxy(QWidget*)</primary></indexterm>QWidget::setFocusProxy(QWidget*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;46&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setUpdatesEnabled(bool)</primary></indexterm>QWidget::setUpdatesEnabled(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;47&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::show()</primary></indexterm>QWidget::show()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;48&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::hide()</primary></indexterm>QWidget::hide()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;49&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showMinimized()</primary></indexterm>QWidget::showMinimized()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;50&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showMaximized()</primary></indexterm>QWidget::showMaximized()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;51&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showNormal()</primary></indexterm>QWidget::showNormal()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;52&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::polish()</primary></indexterm>QWidget::polish()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;53&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::move(int, int)</primary></indexterm>QWidget::move(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;54&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::resize(int, int)</primary></indexterm>QWidget::resize(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;55&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setGeometry(int, int, int, int)</primary></indexterm>QWidget::setGeometry(int, int, int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;56&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setGeometry(QRect const&)</primary></indexterm>NULL or QWidget::setGeometry(QRect const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;57&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::close(bool)</primary></indexterm>QWidget::close(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;58&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QHBox::sizeHint() const</primary></indexterm>QHBox::sizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;59&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::minimumSizeHint() const</primary></indexterm>QWidget::minimumSizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;60&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::sizePolicy() const</primary></indexterm>QWidget::sizePolicy() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;61&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setSizePolicy(QSizePolicy)</primary></indexterm>QWidget::setSizePolicy(QSizePolicy)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;62&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::heightForWidth(int) const</primary></indexterm>QWidget::heightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;63&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::adjustSize()</primary></indexterm>QWidget::adjustSize()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;64&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::reparent(QWidget*, unsigned int, QPoint const&, bool)</primary></indexterm>QWidget::reparent(QWidget*, unsigned int, QPoint const&, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;65&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setAcceptDrops(bool)</primary></indexterm>QWidget::setAcceptDrops(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;66&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setAutoMask(bool)</primary></indexterm>QWidget::setAutoMask(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;67&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundOrigin(QWidget::BackgroundOrigin)</primary></indexterm>QWidget::setBackgroundOrigin(QWidget::BackgroundOrigin)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;68&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::customWhatsThis() const</primary></indexterm>QWidget::customWhatsThis() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;69&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mousePressEvent(QMouseEvent*)</primary></indexterm>QWidget::mousePressEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;70&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseReleaseEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseReleaseEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;71&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseDoubleClickEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseDoubleClickEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;72&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseMoveEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseMoveEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;73&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::wheelEvent(QWheelEvent*)</primary></indexterm>QWidget::wheelEvent(QWheelEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;74&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyPressEvent(QKeyEvent*)</primary></indexterm>QWidget::keyPressEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;75&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyReleaseEvent(QKeyEvent*)</primary></indexterm>QWidget::keyReleaseEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;76&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusInEvent(QFocusEvent*)</primary></indexterm>QWidget::focusInEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;77&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusOutEvent(QFocusEvent*)</primary></indexterm>QWidget::focusOutEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;78&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enterEvent(QEvent*)</primary></indexterm>QWidget::enterEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;79&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::leaveEvent(QEvent*)</primary></indexterm>QWidget::leaveEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;80&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::paintEvent(QPaintEvent*)</primary></indexterm>QFrame::paintEvent(QPaintEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;81&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::moveEvent(QMoveEvent*)</primary></indexterm>QWidget::moveEvent(QMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;82&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::resizeEvent(QResizeEvent*)</primary></indexterm>QFrame::resizeEvent(QResizeEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;83&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::closeEvent(QCloseEvent*)</primary></indexterm>QWidget::closeEvent(QCloseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;84&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::contextMenuEvent(QContextMenuEvent*)</primary></indexterm>QWidget::contextMenuEvent(QContextMenuEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;85&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::imStartEvent(QIMEvent*)</primary></indexterm>QWidget::imStartEvent(QIMEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;86&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::imComposeEvent(QIMEvent*)</primary></indexterm>QWidget::imComposeEvent(QIMEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;87&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::imEndEvent(QIMEvent*)</primary></indexterm>QWidget::imEndEvent(QIMEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;88&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::tabletEvent(QTabletEvent*)</primary></indexterm>QWidget::tabletEvent(QTabletEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;89&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragEnterEvent(QDragEnterEvent*)</primary></indexterm>QWidget::dragEnterEvent(QDragEnterEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;90&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragMoveEvent(QDragMoveEvent*)</primary></indexterm>QWidget::dragMoveEvent(QDragMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;91&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragLeaveEvent(QDragLeaveEvent*)</primary></indexterm>QWidget::dragLeaveEvent(QDragLeaveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;92&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dropEvent(QDropEvent*)</primary></indexterm>QWidget::dropEvent(QDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;93&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showEvent(QShowEvent*)</primary></indexterm>QWidget::showEvent(QShowEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;94&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::hideEvent(QHideEvent*)</primary></indexterm>QWidget::hideEvent(QHideEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;95&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::x11Event(_XEvent*)</primary></indexterm>QWidget::x11Event(_XEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;96&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::updateMask()</primary></indexterm>QWidget::updateMask()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;97&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::styleChange(QStyle&)</primary></indexterm>QFrame::styleChange(QStyle&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;98&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enabledChange(bool)</primary></indexterm>QWidget::enabledChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;99&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paletteChange(QPalette const&)</primary></indexterm>QWidget::paletteChange(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;100&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::fontChange(QFont const&)</primary></indexterm>QWidget::fontChange(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;101&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::windowActivationChange(bool)</primary></indexterm>QWidget::windowActivationChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;102&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::metric(int) const</primary></indexterm>QWidget::metric(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;103&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::create(unsigned long, bool, bool)</primary></indexterm>QWidget::create(unsigned long, bool, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;104&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::destroy(bool, bool)</primary></indexterm>QWidget::destroy(bool, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;105&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setWState(unsigned int)</primary></indexterm>NULL or QWidget::setWState(unsigned int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;106&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setWFlags(unsigned int)</primary></indexterm>NULL or QWidget::setWFlags(unsigned int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;107&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusNextPrevChild(bool)</primary></indexterm>QWidget::focusNextPrevChild(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;108&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setKeyCompression(bool)</primary></indexterm>QWidget::setKeyCompression(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;109&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMicroFocusHint(int, int, int, int, bool, QFont*)</primary></indexterm>QWidget::setMicroFocusHint(int, int, int, int, bool, QFont*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;110&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::setFrameStyle(int)</primary></indexterm>QFrame::setFrameStyle(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;111&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::setLineWidth(int)</primary></indexterm>QFrame::setLineWidth(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;112&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::setMargin(int)</primary></indexterm>QFrame::setMargin(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;113&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::setMidLineWidth(int)</primary></indexterm>QFrame::setMidLineWidth(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;114&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::setFrameRect(QRect const&)</primary></indexterm>QFrame::setFrameRect(QRect const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;115&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::drawFrame(QPainter*)</primary></indexterm>QFrame::drawFrame(QPainter*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;116&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::drawContents(QPainter*)</primary></indexterm>QFrame::drawContents(QPainter*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;117&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QHBox::frameChanged()</primary></indexterm>QHBox::frameChanged()</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--classdata-->
<TABLE id="cls-57974-1">
<TITLE>Secondary vtable for QVBox</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>-80</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QVBox</primary></indexterm>typeinfo for QVBox</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QVBox::~QVBox()</primary></indexterm>non-virtual thunk to QVBox::~QVBox()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QVBox::~QVBox()</primary></indexterm>non-virtual thunk to QVBox::~QVBox()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::setResolution(int)</primary></indexterm>QPaintDevice::setResolution(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::resolution() const</primary></indexterm>QPaintDevice::resolution() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::handle() const</primary></indexterm>QPaintDevice::handle() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::x11RenderHandle() const</primary></indexterm>QPaintDevice::x11RenderHandle() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::setX11Data(QPaintDeviceX11Data const*)</primary></indexterm>QPaintDevice::setX11Data(QPaintDeviceX11Data const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::cmd(int, QPainter*, QPDevCmdParam*)</primary></indexterm>QPaintDevice::cmd(int, QPainter*, QPDevCmdParam*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::metric(int) const</primary></indexterm>non-virtual thunk to QWidget::metric(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::fontMet(QFont*, int, char const*, int) const</primary></indexterm>QPaintDevice::fontMet(QFont*, int, char const*, int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::fontInf(QFont*, int) const</primary></indexterm>QPaintDevice::fontInf(QFont*, int) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QVBox  class
is described by <XREF LINKEND="rtti-49682">
</PARA>
<!--classdata-->
<TABLE ID="rtti-49682">
<TITLE>typeinfo for QVBox</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QVBox</primary></indexterm>typeinfo name for QVBox</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QHBox</primary></indexterm>typeinfo for QHBox</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QGroupBox</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QGroupBox class
is described by <XREF LINKEND="cls-54537-0">
</PARA>
<!--classdata-->
<TABLE id="cls-54537-0">
<TITLE>Primary vtable for QGroupBox</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QGroupBox</primary></indexterm>typeinfo for QGroupBox</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGroupBox::metaObject() const</primary></indexterm>NULL or QGroupBox::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGroupBox::className() const</primary></indexterm>QGroupBox::className() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGroupBox::qt_cast(char const*)</primary></indexterm>QGroupBox::qt_cast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGroupBox::qt_invoke(int, QUObject*)</primary></indexterm>QGroupBox::qt_invoke(int, QUObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGroupBox::qt_emit(int, QUObject*)</primary></indexterm>QGroupBox::qt_emit(int, QUObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGroupBox::qt_property(int, int, QVariant*)</primary></indexterm>QGroupBox::qt_property(int, int, QVariant*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGroupBox::~QGroupBox()</primary></indexterm>QGroupBox::~QGroupBox()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGroupBox::~QGroupBox()</primary></indexterm>QGroupBox::~QGroupBox()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGroupBox::event(QEvent*)</primary></indexterm>QGroupBox::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::eventFilter(QObject*, QEvent*)</primary></indexterm>QObject::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setName(char const*)</primary></indexterm>QWidget::setName(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::insertChild(QObject*)</primary></indexterm>QObject::insertChild(QObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::removeChild(QObject*)</primary></indexterm>QObject::removeChild(QObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::setProperty(char const*, QVariant const&)</primary></indexterm>QObject::setProperty(char const*, QVariant const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::property(char const*) const</primary></indexterm>QObject::property(char const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGroupBox::childEvent(QChildEvent*)</primary></indexterm>QGroupBox::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QCustomEvent*)</primary></indexterm>QObject::customEvent(QCustomEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::checkConnectArgs(char const*, QObject const*, char const*)</primary></indexterm>QObject::checkConnectArgs(char const*, QObject const*, char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGroupBox::setEnabled(bool)</primary></indexterm>QGroupBox::setEnabled(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMinimumSize(int, int)</primary></indexterm>QWidget::setMinimumSize(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMaximumSize(int, int)</primary></indexterm>QWidget::setMaximumSize(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setSizeIncrement(int, int)</primary></indexterm>QWidget::setSizeIncrement(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundMode(Qt::BackgroundMode)</primary></indexterm>QWidget::setBackgroundMode(Qt::BackgroundMode)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setEraseColor(QColor const&)</primary></indexterm>QWidget::setEraseColor(QColor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setErasePixmap(QPixmap const&)</primary></indexterm>QWidget::setErasePixmap(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setPalette(QPalette const&)</primary></indexterm>QWidget::setPalette(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setPaletteBackgroundColor(QColor const&)</primary></indexterm>QWidget::setPaletteBackgroundColor(QColor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setPaletteBackgroundPixmap(QPixmap const&)</primary></indexterm>QWidget::setPaletteBackgroundPixmap(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFont(QFont const&)</primary></indexterm>QWidget::setFont(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setCursor(QCursor const&)</primary></indexterm>QWidget::setCursor(QCursor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;33&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::unsetCursor()</primary></indexterm>QWidget::unsetCursor()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;34&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMask(QBitmap const&)</primary></indexterm>QWidget::setMask(QBitmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;35&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMask(QRegion const&)</primary></indexterm>QWidget::setMask(QRegion const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;36&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundColor(QColor const&)</primary></indexterm>QWidget::setBackgroundColor(QColor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;37&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundPixmap(QPixmap const&)</primary></indexterm>QWidget::setBackgroundPixmap(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;38&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setCaption(QString const&)</primary></indexterm>QWidget::setCaption(QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;39&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setIcon(QPixmap const&)</primary></indexterm>QWidget::setIcon(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;40&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setIconText(QString const&)</primary></indexterm>QWidget::setIconText(QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;41&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMouseTracking(bool)</primary></indexterm>QWidget::setMouseTracking(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;42&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFocus()</primary></indexterm>QWidget::setFocus()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;43&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setActiveWindow()</primary></indexterm>QWidget::setActiveWindow()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;44&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFocusPolicy(QWidget::FocusPolicy)</primary></indexterm>QWidget::setFocusPolicy(QWidget::FocusPolicy)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;45&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFocusProxy(QWidget*)</primary></indexterm>QWidget::setFocusProxy(QWidget*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;46&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setUpdatesEnabled(bool)</primary></indexterm>QWidget::setUpdatesEnabled(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;47&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::show()</primary></indexterm>QWidget::show()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;48&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::hide()</primary></indexterm>QWidget::hide()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;49&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showMinimized()</primary></indexterm>QWidget::showMinimized()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;50&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showMaximized()</primary></indexterm>QWidget::showMaximized()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;51&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showNormal()</primary></indexterm>QWidget::showNormal()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;52&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::polish()</primary></indexterm>QWidget::polish()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;53&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::move(int, int)</primary></indexterm>QWidget::move(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;54&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::resize(int, int)</primary></indexterm>QWidget::resize(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;55&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setGeometry(int, int, int, int)</primary></indexterm>QWidget::setGeometry(int, int, int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;56&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setGeometry(QRect const&)</primary></indexterm>NULL or QWidget::setGeometry(QRect const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;57&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::close(bool)</primary></indexterm>QWidget::close(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;58&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGroupBox::sizeHint() const</primary></indexterm>QGroupBox::sizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;59&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::minimumSizeHint() const</primary></indexterm>QWidget::minimumSizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;60&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::sizePolicy() const</primary></indexterm>QWidget::sizePolicy() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;61&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setSizePolicy(QSizePolicy)</primary></indexterm>QWidget::setSizePolicy(QSizePolicy)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;62&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::heightForWidth(int) const</primary></indexterm>QWidget::heightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;63&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::adjustSize()</primary></indexterm>QWidget::adjustSize()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;64&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::reparent(QWidget*, unsigned int, QPoint const&, bool)</primary></indexterm>QWidget::reparent(QWidget*, unsigned int, QPoint const&, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;65&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setAcceptDrops(bool)</primary></indexterm>QWidget::setAcceptDrops(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;66&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setAutoMask(bool)</primary></indexterm>QWidget::setAutoMask(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;67&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundOrigin(QWidget::BackgroundOrigin)</primary></indexterm>QWidget::setBackgroundOrigin(QWidget::BackgroundOrigin)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;68&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::customWhatsThis() const</primary></indexterm>QWidget::customWhatsThis() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;69&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mousePressEvent(QMouseEvent*)</primary></indexterm>QWidget::mousePressEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;70&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseReleaseEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseReleaseEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;71&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseDoubleClickEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseDoubleClickEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;72&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseMoveEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseMoveEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;73&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::wheelEvent(QWheelEvent*)</primary></indexterm>QWidget::wheelEvent(QWheelEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;74&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyPressEvent(QKeyEvent*)</primary></indexterm>QWidget::keyPressEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;75&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyReleaseEvent(QKeyEvent*)</primary></indexterm>QWidget::keyReleaseEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;76&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGroupBox::focusInEvent(QFocusEvent*)</primary></indexterm>QGroupBox::focusInEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;77&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusOutEvent(QFocusEvent*)</primary></indexterm>QWidget::focusOutEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;78&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enterEvent(QEvent*)</primary></indexterm>QWidget::enterEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;79&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::leaveEvent(QEvent*)</primary></indexterm>QWidget::leaveEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;80&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGroupBox::paintEvent(QPaintEvent*)</primary></indexterm>QGroupBox::paintEvent(QPaintEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;81&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::moveEvent(QMoveEvent*)</primary></indexterm>QWidget::moveEvent(QMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;82&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGroupBox::resizeEvent(QResizeEvent*)</primary></indexterm>QGroupBox::resizeEvent(QResizeEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;83&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::closeEvent(QCloseEvent*)</primary></indexterm>QWidget::closeEvent(QCloseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;84&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::contextMenuEvent(QContextMenuEvent*)</primary></indexterm>QWidget::contextMenuEvent(QContextMenuEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;85&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::imStartEvent(QIMEvent*)</primary></indexterm>QWidget::imStartEvent(QIMEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;86&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::imComposeEvent(QIMEvent*)</primary></indexterm>QWidget::imComposeEvent(QIMEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;87&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::imEndEvent(QIMEvent*)</primary></indexterm>QWidget::imEndEvent(QIMEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;88&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::tabletEvent(QTabletEvent*)</primary></indexterm>QWidget::tabletEvent(QTabletEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;89&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragEnterEvent(QDragEnterEvent*)</primary></indexterm>QWidget::dragEnterEvent(QDragEnterEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;90&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragMoveEvent(QDragMoveEvent*)</primary></indexterm>QWidget::dragMoveEvent(QDragMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;91&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragLeaveEvent(QDragLeaveEvent*)</primary></indexterm>QWidget::dragLeaveEvent(QDragLeaveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;92&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dropEvent(QDropEvent*)</primary></indexterm>QWidget::dropEvent(QDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;93&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showEvent(QShowEvent*)</primary></indexterm>QWidget::showEvent(QShowEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;94&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::hideEvent(QHideEvent*)</primary></indexterm>QWidget::hideEvent(QHideEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;95&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::x11Event(_XEvent*)</primary></indexterm>QWidget::x11Event(_XEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;96&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::updateMask()</primary></indexterm>QWidget::updateMask()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;97&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::styleChange(QStyle&)</primary></indexterm>QFrame::styleChange(QStyle&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;98&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enabledChange(bool)</primary></indexterm>QWidget::enabledChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;99&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paletteChange(QPalette const&)</primary></indexterm>QWidget::paletteChange(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;100&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGroupBox::fontChange(QFont const&)</primary></indexterm>QGroupBox::fontChange(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;101&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::windowActivationChange(bool)</primary></indexterm>QWidget::windowActivationChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;102&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::metric(int) const</primary></indexterm>QWidget::metric(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;103&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::create(unsigned long, bool, bool)</primary></indexterm>QWidget::create(unsigned long, bool, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;104&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::destroy(bool, bool)</primary></indexterm>QWidget::destroy(bool, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;105&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setWState(unsigned int)</primary></indexterm>NULL or QWidget::setWState(unsigned int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;106&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setWFlags(unsigned int)</primary></indexterm>NULL or QWidget::setWFlags(unsigned int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;107&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusNextPrevChild(bool)</primary></indexterm>QWidget::focusNextPrevChild(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;108&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setKeyCompression(bool)</primary></indexterm>QWidget::setKeyCompression(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;109&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMicroFocusHint(int, int, int, int, bool, QFont*)</primary></indexterm>QWidget::setMicroFocusHint(int, int, int, int, bool, QFont*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;110&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::setFrameStyle(int)</primary></indexterm>QFrame::setFrameStyle(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;111&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::setLineWidth(int)</primary></indexterm>QFrame::setLineWidth(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;112&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::setMargin(int)</primary></indexterm>QFrame::setMargin(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;113&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::setMidLineWidth(int)</primary></indexterm>QFrame::setMidLineWidth(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;114&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::setFrameRect(QRect const&)</primary></indexterm>QFrame::setFrameRect(QRect const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;115&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::drawFrame(QPainter*)</primary></indexterm>QFrame::drawFrame(QPainter*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;116&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::drawContents(QPainter*)</primary></indexterm>QFrame::drawContents(QPainter*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;117&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::frameChanged()</primary></indexterm>QFrame::frameChanged()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;118&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGroupBox::setColumnLayout(int, Qt::Orientation)</primary></indexterm>QGroupBox::setColumnLayout(int, Qt::Orientation)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;119&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGroupBox::setTitle(QString const&)</primary></indexterm>QGroupBox::setTitle(QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;120&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGroupBox::setAlignment(int)</primary></indexterm>QGroupBox::setAlignment(int)</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--classdata-->
<TABLE id="cls-54537-1">
<TITLE>Secondary vtable for QGroupBox</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>-80</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QGroupBox</primary></indexterm>typeinfo for QGroupBox</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QGroupBox::~QGroupBox()</primary></indexterm>non-virtual thunk to QGroupBox::~QGroupBox()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QGroupBox::~QGroupBox()</primary></indexterm>non-virtual thunk to QGroupBox::~QGroupBox()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::setResolution(int)</primary></indexterm>QPaintDevice::setResolution(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::resolution() const</primary></indexterm>QPaintDevice::resolution() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::handle() const</primary></indexterm>QPaintDevice::handle() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::x11RenderHandle() const</primary></indexterm>QPaintDevice::x11RenderHandle() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::setX11Data(QPaintDeviceX11Data const*)</primary></indexterm>QPaintDevice::setX11Data(QPaintDeviceX11Data const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::cmd(int, QPainter*, QPDevCmdParam*)</primary></indexterm>QPaintDevice::cmd(int, QPainter*, QPDevCmdParam*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::metric(int) const</primary></indexterm>non-virtual thunk to QWidget::metric(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::fontMet(QFont*, int, char const*, int) const</primary></indexterm>QPaintDevice::fontMet(QFont*, int, char const*, int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::fontInf(QFont*, int) const</primary></indexterm>QPaintDevice::fontInf(QFont*, int) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QGroupBox  class
is described by <XREF LINKEND="rtti-52922">
</PARA>
<!--classdata-->
<TABLE ID="rtti-52922">
<TITLE>typeinfo for QGroupBox</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QGroupBox</primary></indexterm>typeinfo name for QGroupBox</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QFrame</primary></indexterm>typeinfo for QFrame</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QHGroupBox</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QHGroupBox class
is described by <XREF LINKEND="cls-54817-0">
</PARA>
<!--classdata-->
<TABLE id="cls-54817-0">
<TITLE>Primary vtable for QHGroupBox</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QHGroupBox</primary></indexterm>typeinfo for QHGroupBox</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QHGroupBox::metaObject() const</primary></indexterm>NULL or QHGroupBox::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QHGroupBox::className() const</primary></indexterm>QHGroupBox::className() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QHGroupBox::qt_cast(char const*)</primary></indexterm>QHGroupBox::qt_cast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QHGroupBox::qt_invoke(int, QUObject*)</primary></indexterm>QHGroupBox::qt_invoke(int, QUObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QHGroupBox::qt_emit(int, QUObject*)</primary></indexterm>QHGroupBox::qt_emit(int, QUObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QHGroupBox::qt_property(int, int, QVariant*)</primary></indexterm>QHGroupBox::qt_property(int, int, QVariant*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QHGroupBox::~QHGroupBox()</primary></indexterm>QHGroupBox::~QHGroupBox()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QHGroupBox::~QHGroupBox()</primary></indexterm>QHGroupBox::~QHGroupBox()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGroupBox::event(QEvent*)</primary></indexterm>QGroupBox::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::eventFilter(QObject*, QEvent*)</primary></indexterm>QObject::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setName(char const*)</primary></indexterm>QWidget::setName(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::insertChild(QObject*)</primary></indexterm>QObject::insertChild(QObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::removeChild(QObject*)</primary></indexterm>QObject::removeChild(QObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::setProperty(char const*, QVariant const&)</primary></indexterm>QObject::setProperty(char const*, QVariant const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::property(char const*) const</primary></indexterm>QObject::property(char const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGroupBox::childEvent(QChildEvent*)</primary></indexterm>QGroupBox::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QCustomEvent*)</primary></indexterm>QObject::customEvent(QCustomEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::checkConnectArgs(char const*, QObject const*, char const*)</primary></indexterm>QObject::checkConnectArgs(char const*, QObject const*, char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGroupBox::setEnabled(bool)</primary></indexterm>QGroupBox::setEnabled(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMinimumSize(int, int)</primary></indexterm>QWidget::setMinimumSize(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMaximumSize(int, int)</primary></indexterm>QWidget::setMaximumSize(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setSizeIncrement(int, int)</primary></indexterm>QWidget::setSizeIncrement(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundMode(Qt::BackgroundMode)</primary></indexterm>QWidget::setBackgroundMode(Qt::BackgroundMode)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setEraseColor(QColor const&)</primary></indexterm>QWidget::setEraseColor(QColor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setErasePixmap(QPixmap const&)</primary></indexterm>QWidget::setErasePixmap(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setPalette(QPalette const&)</primary></indexterm>QWidget::setPalette(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setPaletteBackgroundColor(QColor const&)</primary></indexterm>QWidget::setPaletteBackgroundColor(QColor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setPaletteBackgroundPixmap(QPixmap const&)</primary></indexterm>QWidget::setPaletteBackgroundPixmap(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFont(QFont const&)</primary></indexterm>QWidget::setFont(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setCursor(QCursor const&)</primary></indexterm>QWidget::setCursor(QCursor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;33&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::unsetCursor()</primary></indexterm>QWidget::unsetCursor()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;34&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMask(QBitmap const&)</primary></indexterm>QWidget::setMask(QBitmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;35&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMask(QRegion const&)</primary></indexterm>QWidget::setMask(QRegion const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;36&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundColor(QColor const&)</primary></indexterm>QWidget::setBackgroundColor(QColor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;37&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundPixmap(QPixmap const&)</primary></indexterm>QWidget::setBackgroundPixmap(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;38&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setCaption(QString const&)</primary></indexterm>QWidget::setCaption(QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;39&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setIcon(QPixmap const&)</primary></indexterm>QWidget::setIcon(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;40&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setIconText(QString const&)</primary></indexterm>QWidget::setIconText(QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;41&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMouseTracking(bool)</primary></indexterm>QWidget::setMouseTracking(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;42&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFocus()</primary></indexterm>QWidget::setFocus()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;43&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setActiveWindow()</primary></indexterm>QWidget::setActiveWindow()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;44&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFocusPolicy(QWidget::FocusPolicy)</primary></indexterm>QWidget::setFocusPolicy(QWidget::FocusPolicy)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;45&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFocusProxy(QWidget*)</primary></indexterm>QWidget::setFocusProxy(QWidget*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;46&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setUpdatesEnabled(bool)</primary></indexterm>QWidget::setUpdatesEnabled(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;47&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::show()</primary></indexterm>QWidget::show()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;48&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::hide()</primary></indexterm>QWidget::hide()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;49&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showMinimized()</primary></indexterm>QWidget::showMinimized()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;50&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showMaximized()</primary></indexterm>QWidget::showMaximized()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;51&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showNormal()</primary></indexterm>QWidget::showNormal()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;52&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::polish()</primary></indexterm>QWidget::polish()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;53&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::move(int, int)</primary></indexterm>QWidget::move(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;54&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::resize(int, int)</primary></indexterm>QWidget::resize(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;55&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setGeometry(int, int, int, int)</primary></indexterm>QWidget::setGeometry(int, int, int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;56&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setGeometry(QRect const&)</primary></indexterm>NULL or QWidget::setGeometry(QRect const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;57&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::close(bool)</primary></indexterm>QWidget::close(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;58&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGroupBox::sizeHint() const</primary></indexterm>QGroupBox::sizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;59&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::minimumSizeHint() const</primary></indexterm>QWidget::minimumSizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;60&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::sizePolicy() const</primary></indexterm>QWidget::sizePolicy() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;61&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setSizePolicy(QSizePolicy)</primary></indexterm>QWidget::setSizePolicy(QSizePolicy)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;62&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::heightForWidth(int) const</primary></indexterm>QWidget::heightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;63&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::adjustSize()</primary></indexterm>QWidget::adjustSize()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;64&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::reparent(QWidget*, unsigned int, QPoint const&, bool)</primary></indexterm>QWidget::reparent(QWidget*, unsigned int, QPoint const&, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;65&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setAcceptDrops(bool)</primary></indexterm>QWidget::setAcceptDrops(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;66&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setAutoMask(bool)</primary></indexterm>QWidget::setAutoMask(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;67&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundOrigin(QWidget::BackgroundOrigin)</primary></indexterm>QWidget::setBackgroundOrigin(QWidget::BackgroundOrigin)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;68&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::customWhatsThis() const</primary></indexterm>QWidget::customWhatsThis() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;69&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mousePressEvent(QMouseEvent*)</primary></indexterm>QWidget::mousePressEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;70&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseReleaseEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseReleaseEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;71&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseDoubleClickEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseDoubleClickEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;72&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseMoveEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseMoveEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;73&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::wheelEvent(QWheelEvent*)</primary></indexterm>QWidget::wheelEvent(QWheelEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;74&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyPressEvent(QKeyEvent*)</primary></indexterm>QWidget::keyPressEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;75&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyReleaseEvent(QKeyEvent*)</primary></indexterm>QWidget::keyReleaseEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;76&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGroupBox::focusInEvent(QFocusEvent*)</primary></indexterm>QGroupBox::focusInEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;77&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusOutEvent(QFocusEvent*)</primary></indexterm>QWidget::focusOutEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;78&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enterEvent(QEvent*)</primary></indexterm>QWidget::enterEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;79&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::leaveEvent(QEvent*)</primary></indexterm>QWidget::leaveEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;80&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGroupBox::paintEvent(QPaintEvent*)</primary></indexterm>QGroupBox::paintEvent(QPaintEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;81&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::moveEvent(QMoveEvent*)</primary></indexterm>QWidget::moveEvent(QMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;82&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGroupBox::resizeEvent(QResizeEvent*)</primary></indexterm>QGroupBox::resizeEvent(QResizeEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;83&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::closeEvent(QCloseEvent*)</primary></indexterm>QWidget::closeEvent(QCloseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;84&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::contextMenuEvent(QContextMenuEvent*)</primary></indexterm>QWidget::contextMenuEvent(QContextMenuEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;85&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::imStartEvent(QIMEvent*)</primary></indexterm>QWidget::imStartEvent(QIMEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;86&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::imComposeEvent(QIMEvent*)</primary></indexterm>QWidget::imComposeEvent(QIMEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;87&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::imEndEvent(QIMEvent*)</primary></indexterm>QWidget::imEndEvent(QIMEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;88&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::tabletEvent(QTabletEvent*)</primary></indexterm>QWidget::tabletEvent(QTabletEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;89&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragEnterEvent(QDragEnterEvent*)</primary></indexterm>QWidget::dragEnterEvent(QDragEnterEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;90&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragMoveEvent(QDragMoveEvent*)</primary></indexterm>QWidget::dragMoveEvent(QDragMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;91&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragLeaveEvent(QDragLeaveEvent*)</primary></indexterm>QWidget::dragLeaveEvent(QDragLeaveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;92&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dropEvent(QDropEvent*)</primary></indexterm>QWidget::dropEvent(QDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;93&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showEvent(QShowEvent*)</primary></indexterm>QWidget::showEvent(QShowEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;94&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::hideEvent(QHideEvent*)</primary></indexterm>QWidget::hideEvent(QHideEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;95&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::x11Event(_XEvent*)</primary></indexterm>QWidget::x11Event(_XEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;96&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::updateMask()</primary></indexterm>QWidget::updateMask()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;97&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::styleChange(QStyle&)</primary></indexterm>QFrame::styleChange(QStyle&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;98&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enabledChange(bool)</primary></indexterm>QWidget::enabledChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;99&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paletteChange(QPalette const&)</primary></indexterm>QWidget::paletteChange(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;100&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGroupBox::fontChange(QFont const&)</primary></indexterm>QGroupBox::fontChange(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;101&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::windowActivationChange(bool)</primary></indexterm>QWidget::windowActivationChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;102&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::metric(int) const</primary></indexterm>QWidget::metric(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;103&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::create(unsigned long, bool, bool)</primary></indexterm>QWidget::create(unsigned long, bool, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;104&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::destroy(bool, bool)</primary></indexterm>QWidget::destroy(bool, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;105&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setWState(unsigned int)</primary></indexterm>NULL or QWidget::setWState(unsigned int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;106&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setWFlags(unsigned int)</primary></indexterm>NULL or QWidget::setWFlags(unsigned int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;107&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusNextPrevChild(bool)</primary></indexterm>QWidget::focusNextPrevChild(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;108&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setKeyCompression(bool)</primary></indexterm>QWidget::setKeyCompression(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;109&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMicroFocusHint(int, int, int, int, bool, QFont*)</primary></indexterm>QWidget::setMicroFocusHint(int, int, int, int, bool, QFont*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;110&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::setFrameStyle(int)</primary></indexterm>QFrame::setFrameStyle(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;111&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::setLineWidth(int)</primary></indexterm>QFrame::setLineWidth(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;112&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::setMargin(int)</primary></indexterm>QFrame::setMargin(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;113&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::setMidLineWidth(int)</primary></indexterm>QFrame::setMidLineWidth(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;114&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::setFrameRect(QRect const&)</primary></indexterm>QFrame::setFrameRect(QRect const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;115&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::drawFrame(QPainter*)</primary></indexterm>QFrame::drawFrame(QPainter*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;116&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::drawContents(QPainter*)</primary></indexterm>QFrame::drawContents(QPainter*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;117&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::frameChanged()</primary></indexterm>QFrame::frameChanged()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;118&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGroupBox::setColumnLayout(int, Qt::Orientation)</primary></indexterm>QGroupBox::setColumnLayout(int, Qt::Orientation)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;119&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGroupBox::setTitle(QString const&)</primary></indexterm>QGroupBox::setTitle(QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;120&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGroupBox::setAlignment(int)</primary></indexterm>QGroupBox::setAlignment(int)</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--classdata-->
<TABLE id="cls-54817-1">
<TITLE>Secondary vtable for QHGroupBox</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>-80</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QHGroupBox</primary></indexterm>typeinfo for QHGroupBox</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QHGroupBox::~QHGroupBox()</primary></indexterm>non-virtual thunk to QHGroupBox::~QHGroupBox()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QHGroupBox::~QHGroupBox()</primary></indexterm>non-virtual thunk to QHGroupBox::~QHGroupBox()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::setResolution(int)</primary></indexterm>QPaintDevice::setResolution(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::resolution() const</primary></indexterm>QPaintDevice::resolution() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::handle() const</primary></indexterm>QPaintDevice::handle() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::x11RenderHandle() const</primary></indexterm>QPaintDevice::x11RenderHandle() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::setX11Data(QPaintDeviceX11Data const*)</primary></indexterm>QPaintDevice::setX11Data(QPaintDeviceX11Data const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::cmd(int, QPainter*, QPDevCmdParam*)</primary></indexterm>QPaintDevice::cmd(int, QPainter*, QPDevCmdParam*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::metric(int) const</primary></indexterm>non-virtual thunk to QWidget::metric(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::fontMet(QFont*, int, char const*, int) const</primary></indexterm>QPaintDevice::fontMet(QFont*, int, char const*, int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::fontInf(QFont*, int) const</primary></indexterm>QPaintDevice::fontInf(QFont*, int) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QHGroupBox  class
is described by <XREF LINKEND="rtti-49893">
</PARA>
<!--classdata-->
<TABLE ID="rtti-49893">
<TITLE>typeinfo for QHGroupBox</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QHGroupBox</primary></indexterm>typeinfo name for QHGroupBox</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QGroupBox</primary></indexterm>typeinfo for QGroupBox</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QHButtonGroup</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QHButtonGroup class
is described by <XREF LINKEND="cls-59039-0">
</PARA>
<!--classdata-->
<TABLE id="cls-59039-0">
<TITLE>Primary vtable for QHButtonGroup</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QHButtonGroup</primary></indexterm>typeinfo for QHButtonGroup</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QHButtonGroup::metaObject() const</primary></indexterm>NULL or QHButtonGroup::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QHButtonGroup::className() const</primary></indexterm>QHButtonGroup::className() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QHButtonGroup::qt_cast(char const*)</primary></indexterm>QHButtonGroup::qt_cast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QHButtonGroup::qt_invoke(int, QUObject*)</primary></indexterm>QHButtonGroup::qt_invoke(int, QUObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QHButtonGroup::qt_emit(int, QUObject*)</primary></indexterm>QHButtonGroup::qt_emit(int, QUObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QHButtonGroup::qt_property(int, int, QVariant*)</primary></indexterm>QHButtonGroup::qt_property(int, int, QVariant*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QHButtonGroup::~QHButtonGroup()</primary></indexterm>QHButtonGroup::~QHButtonGroup()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QHButtonGroup::~QHButtonGroup()</primary></indexterm>QHButtonGroup::~QHButtonGroup()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QButtonGroup::event(QEvent*)</primary></indexterm>QButtonGroup::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::eventFilter(QObject*, QEvent*)</primary></indexterm>QObject::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setName(char const*)</primary></indexterm>QWidget::setName(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::insertChild(QObject*)</primary></indexterm>QObject::insertChild(QObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::removeChild(QObject*)</primary></indexterm>QObject::removeChild(QObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::setProperty(char const*, QVariant const&)</primary></indexterm>QObject::setProperty(char const*, QVariant const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::property(char const*) const</primary></indexterm>QObject::property(char const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGroupBox::childEvent(QChildEvent*)</primary></indexterm>QGroupBox::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QCustomEvent*)</primary></indexterm>QObject::customEvent(QCustomEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::checkConnectArgs(char const*, QObject const*, char const*)</primary></indexterm>QObject::checkConnectArgs(char const*, QObject const*, char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGroupBox::setEnabled(bool)</primary></indexterm>QGroupBox::setEnabled(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMinimumSize(int, int)</primary></indexterm>QWidget::setMinimumSize(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMaximumSize(int, int)</primary></indexterm>QWidget::setMaximumSize(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setSizeIncrement(int, int)</primary></indexterm>QWidget::setSizeIncrement(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundMode(Qt::BackgroundMode)</primary></indexterm>QWidget::setBackgroundMode(Qt::BackgroundMode)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setEraseColor(QColor const&)</primary></indexterm>QWidget::setEraseColor(QColor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setErasePixmap(QPixmap const&)</primary></indexterm>QWidget::setErasePixmap(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setPalette(QPalette const&)</primary></indexterm>QWidget::setPalette(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setPaletteBackgroundColor(QColor const&)</primary></indexterm>QWidget::setPaletteBackgroundColor(QColor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setPaletteBackgroundPixmap(QPixmap const&)</primary></indexterm>QWidget::setPaletteBackgroundPixmap(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFont(QFont const&)</primary></indexterm>QWidget::setFont(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setCursor(QCursor const&)</primary></indexterm>QWidget::setCursor(QCursor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;33&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::unsetCursor()</primary></indexterm>QWidget::unsetCursor()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;34&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMask(QBitmap const&)</primary></indexterm>QWidget::setMask(QBitmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;35&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMask(QRegion const&)</primary></indexterm>QWidget::setMask(QRegion const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;36&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundColor(QColor const&)</primary></indexterm>QWidget::setBackgroundColor(QColor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;37&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundPixmap(QPixmap const&)</primary></indexterm>QWidget::setBackgroundPixmap(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;38&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setCaption(QString const&)</primary></indexterm>QWidget::setCaption(QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;39&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setIcon(QPixmap const&)</primary></indexterm>QWidget::setIcon(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;40&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setIconText(QString const&)</primary></indexterm>QWidget::setIconText(QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;41&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMouseTracking(bool)</primary></indexterm>QWidget::setMouseTracking(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;42&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFocus()</primary></indexterm>QWidget::setFocus()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;43&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setActiveWindow()</primary></indexterm>QWidget::setActiveWindow()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;44&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFocusPolicy(QWidget::FocusPolicy)</primary></indexterm>QWidget::setFocusPolicy(QWidget::FocusPolicy)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;45&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFocusProxy(QWidget*)</primary></indexterm>QWidget::setFocusProxy(QWidget*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;46&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setUpdatesEnabled(bool)</primary></indexterm>QWidget::setUpdatesEnabled(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;47&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::show()</primary></indexterm>QWidget::show()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;48&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::hide()</primary></indexterm>QWidget::hide()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;49&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showMinimized()</primary></indexterm>QWidget::showMinimized()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;50&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showMaximized()</primary></indexterm>QWidget::showMaximized()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;51&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showNormal()</primary></indexterm>QWidget::showNormal()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;52&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::polish()</primary></indexterm>QWidget::polish()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;53&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::move(int, int)</primary></indexterm>QWidget::move(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;54&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::resize(int, int)</primary></indexterm>QWidget::resize(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;55&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setGeometry(int, int, int, int)</primary></indexterm>QWidget::setGeometry(int, int, int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;56&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setGeometry(QRect const&)</primary></indexterm>NULL or QWidget::setGeometry(QRect const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;57&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::close(bool)</primary></indexterm>QWidget::close(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;58&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGroupBox::sizeHint() const</primary></indexterm>QGroupBox::sizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;59&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::minimumSizeHint() const</primary></indexterm>QWidget::minimumSizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;60&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::sizePolicy() const</primary></indexterm>QWidget::sizePolicy() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;61&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setSizePolicy(QSizePolicy)</primary></indexterm>QWidget::setSizePolicy(QSizePolicy)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;62&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::heightForWidth(int) const</primary></indexterm>QWidget::heightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;63&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::adjustSize()</primary></indexterm>QWidget::adjustSize()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;64&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::reparent(QWidget*, unsigned int, QPoint const&, bool)</primary></indexterm>QWidget::reparent(QWidget*, unsigned int, QPoint const&, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;65&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setAcceptDrops(bool)</primary></indexterm>QWidget::setAcceptDrops(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;66&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setAutoMask(bool)</primary></indexterm>QWidget::setAutoMask(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;67&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundOrigin(QWidget::BackgroundOrigin)</primary></indexterm>QWidget::setBackgroundOrigin(QWidget::BackgroundOrigin)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;68&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::customWhatsThis() const</primary></indexterm>QWidget::customWhatsThis() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;69&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mousePressEvent(QMouseEvent*)</primary></indexterm>QWidget::mousePressEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;70&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseReleaseEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseReleaseEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;71&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseDoubleClickEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseDoubleClickEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;72&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseMoveEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseMoveEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;73&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::wheelEvent(QWheelEvent*)</primary></indexterm>QWidget::wheelEvent(QWheelEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;74&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyPressEvent(QKeyEvent*)</primary></indexterm>QWidget::keyPressEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;75&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyReleaseEvent(QKeyEvent*)</primary></indexterm>QWidget::keyReleaseEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;76&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGroupBox::focusInEvent(QFocusEvent*)</primary></indexterm>QGroupBox::focusInEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;77&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusOutEvent(QFocusEvent*)</primary></indexterm>QWidget::focusOutEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;78&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enterEvent(QEvent*)</primary></indexterm>QWidget::enterEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;79&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::leaveEvent(QEvent*)</primary></indexterm>QWidget::leaveEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;80&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGroupBox::paintEvent(QPaintEvent*)</primary></indexterm>QGroupBox::paintEvent(QPaintEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;81&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::moveEvent(QMoveEvent*)</primary></indexterm>QWidget::moveEvent(QMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;82&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGroupBox::resizeEvent(QResizeEvent*)</primary></indexterm>QGroupBox::resizeEvent(QResizeEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;83&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::closeEvent(QCloseEvent*)</primary></indexterm>QWidget::closeEvent(QCloseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;84&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::contextMenuEvent(QContextMenuEvent*)</primary></indexterm>QWidget::contextMenuEvent(QContextMenuEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;85&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::imStartEvent(QIMEvent*)</primary></indexterm>QWidget::imStartEvent(QIMEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;86&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::imComposeEvent(QIMEvent*)</primary></indexterm>QWidget::imComposeEvent(QIMEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;87&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::imEndEvent(QIMEvent*)</primary></indexterm>QWidget::imEndEvent(QIMEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;88&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::tabletEvent(QTabletEvent*)</primary></indexterm>QWidget::tabletEvent(QTabletEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;89&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragEnterEvent(QDragEnterEvent*)</primary></indexterm>QWidget::dragEnterEvent(QDragEnterEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;90&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragMoveEvent(QDragMoveEvent*)</primary></indexterm>QWidget::dragMoveEvent(QDragMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;91&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragLeaveEvent(QDragLeaveEvent*)</primary></indexterm>QWidget::dragLeaveEvent(QDragLeaveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;92&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dropEvent(QDropEvent*)</primary></indexterm>QWidget::dropEvent(QDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;93&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showEvent(QShowEvent*)</primary></indexterm>QWidget::showEvent(QShowEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;94&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::hideEvent(QHideEvent*)</primary></indexterm>QWidget::hideEvent(QHideEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;95&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::x11Event(_XEvent*)</primary></indexterm>QWidget::x11Event(_XEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;96&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::updateMask()</primary></indexterm>QWidget::updateMask()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;97&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::styleChange(QStyle&)</primary></indexterm>QFrame::styleChange(QStyle&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;98&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enabledChange(bool)</primary></indexterm>QWidget::enabledChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;99&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paletteChange(QPalette const&)</primary></indexterm>QWidget::paletteChange(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;100&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGroupBox::fontChange(QFont const&)</primary></indexterm>QGroupBox::fontChange(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;101&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::windowActivationChange(bool)</primary></indexterm>QWidget::windowActivationChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;102&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::metric(int) const</primary></indexterm>QWidget::metric(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;103&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::create(unsigned long, bool, bool)</primary></indexterm>QWidget::create(unsigned long, bool, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;104&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::destroy(bool, bool)</primary></indexterm>QWidget::destroy(bool, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;105&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setWState(unsigned int)</primary></indexterm>NULL or QWidget::setWState(unsigned int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;106&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setWFlags(unsigned int)</primary></indexterm>NULL or QWidget::setWFlags(unsigned int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;107&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusNextPrevChild(bool)</primary></indexterm>QWidget::focusNextPrevChild(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;108&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setKeyCompression(bool)</primary></indexterm>QWidget::setKeyCompression(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;109&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMicroFocusHint(int, int, int, int, bool, QFont*)</primary></indexterm>QWidget::setMicroFocusHint(int, int, int, int, bool, QFont*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;110&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::setFrameStyle(int)</primary></indexterm>QFrame::setFrameStyle(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;111&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::setLineWidth(int)</primary></indexterm>QFrame::setLineWidth(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;112&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::setMargin(int)</primary></indexterm>QFrame::setMargin(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;113&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::setMidLineWidth(int)</primary></indexterm>QFrame::setMidLineWidth(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;114&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::setFrameRect(QRect const&)</primary></indexterm>QFrame::setFrameRect(QRect const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;115&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::drawFrame(QPainter*)</primary></indexterm>QFrame::drawFrame(QPainter*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;116&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::drawContents(QPainter*)</primary></indexterm>QFrame::drawContents(QPainter*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;117&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::frameChanged()</primary></indexterm>QFrame::frameChanged()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;118&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGroupBox::setColumnLayout(int, Qt::Orientation)</primary></indexterm>QGroupBox::setColumnLayout(int, Qt::Orientation)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;119&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGroupBox::setTitle(QString const&)</primary></indexterm>QGroupBox::setTitle(QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;120&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGroupBox::setAlignment(int)</primary></indexterm>QGroupBox::setAlignment(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;121&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QButtonGroup::setExclusive(bool)</primary></indexterm>QButtonGroup::setExclusive(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;122&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QButtonGroup::setRadioButtonExclusive(bool)</primary></indexterm>QButtonGroup::setRadioButtonExclusive(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;123&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QButtonGroup::setButton(int)</primary></indexterm>QButtonGroup::setButton(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;124&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QButtonGroup::moveFocus(int)</primary></indexterm>QButtonGroup::moveFocus(int)</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--classdata-->
<TABLE id="cls-59039-1">
<TITLE>Secondary vtable for QHButtonGroup</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>-80</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QHButtonGroup</primary></indexterm>typeinfo for QHButtonGroup</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QHButtonGroup::~QHButtonGroup()</primary></indexterm>non-virtual thunk to QHButtonGroup::~QHButtonGroup()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QHButtonGroup::~QHButtonGroup()</primary></indexterm>non-virtual thunk to QHButtonGroup::~QHButtonGroup()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::setResolution(int)</primary></indexterm>QPaintDevice::setResolution(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::resolution() const</primary></indexterm>QPaintDevice::resolution() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::handle() const</primary></indexterm>QPaintDevice::handle() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::x11RenderHandle() const</primary></indexterm>QPaintDevice::x11RenderHandle() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::setX11Data(QPaintDeviceX11Data const*)</primary></indexterm>QPaintDevice::setX11Data(QPaintDeviceX11Data const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::cmd(int, QPainter*, QPDevCmdParam*)</primary></indexterm>QPaintDevice::cmd(int, QPainter*, QPDevCmdParam*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::metric(int) const</primary></indexterm>non-virtual thunk to QWidget::metric(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::fontMet(QFont*, int, char const*, int) const</primary></indexterm>QPaintDevice::fontMet(QFont*, int, char const*, int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::fontInf(QFont*, int) const</primary></indexterm>QPaintDevice::fontInf(QFont*, int) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QHButtonGroup  class
is described by <XREF LINKEND="rtti-58830">
</PARA>
<!--classdata-->
<TABLE ID="rtti-58830">
<TITLE>typeinfo for QHButtonGroup</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QHButtonGroup</primary></indexterm>typeinfo name for QHButtonGroup</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QButtonGroup</primary></indexterm>typeinfo for QButtonGroup</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QWidgetStack</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QWidgetStack class
is described by <XREF LINKEND="cls-59825-0">
</PARA>
<!--classdata-->
<TABLE id="cls-59825-0">
<TITLE>Primary vtable for QWidgetStack</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QWidgetStack</primary></indexterm>typeinfo for QWidgetStack</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidgetStack::metaObject() const</primary></indexterm>NULL or QWidgetStack::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidgetStack::className() const</primary></indexterm>QWidgetStack::className() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidgetStack::qt_cast(char const*)</primary></indexterm>QWidgetStack::qt_cast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidgetStack::qt_invoke(int, QUObject*)</primary></indexterm>QWidgetStack::qt_invoke(int, QUObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidgetStack::qt_emit(int, QUObject*)</primary></indexterm>QWidgetStack::qt_emit(int, QUObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidgetStack::qt_property(int, int, QVariant*)</primary></indexterm>QWidgetStack::qt_property(int, int, QVariant*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidgetStack::~QWidgetStack()</primary></indexterm>QWidgetStack::~QWidgetStack()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidgetStack::~QWidgetStack()</primary></indexterm>QWidgetStack::~QWidgetStack()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::event(QEvent*)</primary></indexterm>QWidget::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::eventFilter(QObject*, QEvent*)</primary></indexterm>QObject::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setName(char const*)</primary></indexterm>QWidget::setName(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::insertChild(QObject*)</primary></indexterm>QObject::insertChild(QObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::removeChild(QObject*)</primary></indexterm>QObject::removeChild(QObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::setProperty(char const*, QVariant const&)</primary></indexterm>QObject::setProperty(char const*, QVariant const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::property(char const*) const</primary></indexterm>QObject::property(char const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidgetStack::childEvent(QChildEvent*)</primary></indexterm>QWidgetStack::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QCustomEvent*)</primary></indexterm>QObject::customEvent(QCustomEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::checkConnectArgs(char const*, QObject const*, char const*)</primary></indexterm>QObject::checkConnectArgs(char const*, QObject const*, char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setEnabled(bool)</primary></indexterm>QWidget::setEnabled(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMinimumSize(int, int)</primary></indexterm>QWidget::setMinimumSize(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMaximumSize(int, int)</primary></indexterm>QWidget::setMaximumSize(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setSizeIncrement(int, int)</primary></indexterm>QWidget::setSizeIncrement(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundMode(Qt::BackgroundMode)</primary></indexterm>QWidget::setBackgroundMode(Qt::BackgroundMode)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setEraseColor(QColor const&)</primary></indexterm>QWidget::setEraseColor(QColor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setErasePixmap(QPixmap const&)</primary></indexterm>QWidget::setErasePixmap(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setPalette(QPalette const&)</primary></indexterm>QWidget::setPalette(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setPaletteBackgroundColor(QColor const&)</primary></indexterm>QWidget::setPaletteBackgroundColor(QColor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setPaletteBackgroundPixmap(QPixmap const&)</primary></indexterm>QWidget::setPaletteBackgroundPixmap(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFont(QFont const&)</primary></indexterm>QWidget::setFont(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setCursor(QCursor const&)</primary></indexterm>QWidget::setCursor(QCursor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;33&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::unsetCursor()</primary></indexterm>QWidget::unsetCursor()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;34&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMask(QBitmap const&)</primary></indexterm>QWidget::setMask(QBitmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;35&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMask(QRegion const&)</primary></indexterm>QWidget::setMask(QRegion const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;36&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundColor(QColor const&)</primary></indexterm>QWidget::setBackgroundColor(QColor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;37&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundPixmap(QPixmap const&)</primary></indexterm>QWidget::setBackgroundPixmap(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;38&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setCaption(QString const&)</primary></indexterm>QWidget::setCaption(QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;39&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setIcon(QPixmap const&)</primary></indexterm>QWidget::setIcon(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;40&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setIconText(QString const&)</primary></indexterm>QWidget::setIconText(QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;41&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMouseTracking(bool)</primary></indexterm>QWidget::setMouseTracking(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;42&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFocus()</primary></indexterm>QWidget::setFocus()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;43&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setActiveWindow()</primary></indexterm>QWidget::setActiveWindow()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;44&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFocusPolicy(QWidget::FocusPolicy)</primary></indexterm>QWidget::setFocusPolicy(QWidget::FocusPolicy)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;45&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFocusProxy(QWidget*)</primary></indexterm>QWidget::setFocusProxy(QWidget*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;46&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setUpdatesEnabled(bool)</primary></indexterm>QWidget::setUpdatesEnabled(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;47&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidgetStack::show()</primary></indexterm>QWidgetStack::show()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;48&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::hide()</primary></indexterm>QWidget::hide()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;49&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showMinimized()</primary></indexterm>QWidget::showMinimized()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;50&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showMaximized()</primary></indexterm>QWidget::showMaximized()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;51&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showNormal()</primary></indexterm>QWidget::showNormal()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;52&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::polish()</primary></indexterm>QWidget::polish()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;53&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::move(int, int)</primary></indexterm>QWidget::move(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;54&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::resize(int, int)</primary></indexterm>QWidget::resize(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;55&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setGeometry(int, int, int, int)</primary></indexterm>QWidget::setGeometry(int, int, int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;56&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setGeometry(QRect const&)</primary></indexterm>NULL or QWidget::setGeometry(QRect const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;57&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::close(bool)</primary></indexterm>QWidget::close(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;58&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidgetStack::sizeHint() const</primary></indexterm>QWidgetStack::sizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;59&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidgetStack::minimumSizeHint() const</primary></indexterm>QWidgetStack::minimumSizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;60&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::sizePolicy() const</primary></indexterm>QWidget::sizePolicy() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;61&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setSizePolicy(QSizePolicy)</primary></indexterm>QWidget::setSizePolicy(QSizePolicy)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;62&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::heightForWidth(int) const</primary></indexterm>QWidget::heightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;63&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::adjustSize()</primary></indexterm>QWidget::adjustSize()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;64&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::reparent(QWidget*, unsigned int, QPoint const&, bool)</primary></indexterm>QWidget::reparent(QWidget*, unsigned int, QPoint const&, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;65&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setAcceptDrops(bool)</primary></indexterm>QWidget::setAcceptDrops(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;66&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setAutoMask(bool)</primary></indexterm>QWidget::setAutoMask(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;67&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundOrigin(QWidget::BackgroundOrigin)</primary></indexterm>QWidget::setBackgroundOrigin(QWidget::BackgroundOrigin)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;68&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::customWhatsThis() const</primary></indexterm>QWidget::customWhatsThis() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;69&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mousePressEvent(QMouseEvent*)</primary></indexterm>QWidget::mousePressEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;70&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseReleaseEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseReleaseEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;71&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseDoubleClickEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseDoubleClickEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;72&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseMoveEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseMoveEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;73&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::wheelEvent(QWheelEvent*)</primary></indexterm>QWidget::wheelEvent(QWheelEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;74&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyPressEvent(QKeyEvent*)</primary></indexterm>QWidget::keyPressEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;75&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyReleaseEvent(QKeyEvent*)</primary></indexterm>QWidget::keyReleaseEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;76&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusInEvent(QFocusEvent*)</primary></indexterm>QWidget::focusInEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;77&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusOutEvent(QFocusEvent*)</primary></indexterm>QWidget::focusOutEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;78&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enterEvent(QEvent*)</primary></indexterm>QWidget::enterEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;79&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::leaveEvent(QEvent*)</primary></indexterm>QWidget::leaveEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;80&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::paintEvent(QPaintEvent*)</primary></indexterm>QFrame::paintEvent(QPaintEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;81&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::moveEvent(QMoveEvent*)</primary></indexterm>QWidget::moveEvent(QMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;82&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidgetStack::resizeEvent(QResizeEvent*)</primary></indexterm>QWidgetStack::resizeEvent(QResizeEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;83&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::closeEvent(QCloseEvent*)</primary></indexterm>QWidget::closeEvent(QCloseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;84&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::contextMenuEvent(QContextMenuEvent*)</primary></indexterm>QWidget::contextMenuEvent(QContextMenuEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;85&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::imStartEvent(QIMEvent*)</primary></indexterm>QWidget::imStartEvent(QIMEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;86&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::imComposeEvent(QIMEvent*)</primary></indexterm>QWidget::imComposeEvent(QIMEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;87&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::imEndEvent(QIMEvent*)</primary></indexterm>QWidget::imEndEvent(QIMEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;88&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::tabletEvent(QTabletEvent*)</primary></indexterm>QWidget::tabletEvent(QTabletEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;89&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragEnterEvent(QDragEnterEvent*)</primary></indexterm>QWidget::dragEnterEvent(QDragEnterEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;90&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragMoveEvent(QDragMoveEvent*)</primary></indexterm>QWidget::dragMoveEvent(QDragMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;91&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragLeaveEvent(QDragLeaveEvent*)</primary></indexterm>QWidget::dragLeaveEvent(QDragLeaveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;92&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dropEvent(QDropEvent*)</primary></indexterm>QWidget::dropEvent(QDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;93&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showEvent(QShowEvent*)</primary></indexterm>QWidget::showEvent(QShowEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;94&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::hideEvent(QHideEvent*)</primary></indexterm>QWidget::hideEvent(QHideEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;95&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::x11Event(_XEvent*)</primary></indexterm>QWidget::x11Event(_XEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;96&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::updateMask()</primary></indexterm>QWidget::updateMask()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;97&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::styleChange(QStyle&)</primary></indexterm>QFrame::styleChange(QStyle&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;98&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enabledChange(bool)</primary></indexterm>QWidget::enabledChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;99&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paletteChange(QPalette const&)</primary></indexterm>QWidget::paletteChange(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;100&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::fontChange(QFont const&)</primary></indexterm>QWidget::fontChange(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;101&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::windowActivationChange(bool)</primary></indexterm>QWidget::windowActivationChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;102&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::metric(int) const</primary></indexterm>QWidget::metric(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;103&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::create(unsigned long, bool, bool)</primary></indexterm>QWidget::create(unsigned long, bool, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;104&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::destroy(bool, bool)</primary></indexterm>QWidget::destroy(bool, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;105&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setWState(unsigned int)</primary></indexterm>NULL or QWidget::setWState(unsigned int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;106&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setWFlags(unsigned int)</primary></indexterm>NULL or QWidget::setWFlags(unsigned int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;107&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusNextPrevChild(bool)</primary></indexterm>QWidget::focusNextPrevChild(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;108&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setKeyCompression(bool)</primary></indexterm>QWidget::setKeyCompression(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;109&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMicroFocusHint(int, int, int, int, bool, QFont*)</primary></indexterm>QWidget::setMicroFocusHint(int, int, int, int, bool, QFont*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;110&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::setFrameStyle(int)</primary></indexterm>QFrame::setFrameStyle(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;111&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::setLineWidth(int)</primary></indexterm>QFrame::setLineWidth(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;112&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::setMargin(int)</primary></indexterm>QFrame::setMargin(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;113&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::setMidLineWidth(int)</primary></indexterm>QFrame::setMidLineWidth(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;114&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidgetStack::setFrameRect(QRect const&)</primary></indexterm>QWidgetStack::setFrameRect(QRect const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;115&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::drawFrame(QPainter*)</primary></indexterm>QFrame::drawFrame(QPainter*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;116&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::drawContents(QPainter*)</primary></indexterm>QFrame::drawContents(QPainter*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;117&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidgetStack::frameChanged()</primary></indexterm>QWidgetStack::frameChanged()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;118&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidgetStack::setChildGeometries()</primary></indexterm>QWidgetStack::setChildGeometries()</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--classdata-->
<TABLE id="cls-59825-1">
<TITLE>Secondary vtable for QWidgetStack</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>-80</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QWidgetStack</primary></indexterm>typeinfo for QWidgetStack</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidgetStack::~QWidgetStack()</primary></indexterm>non-virtual thunk to QWidgetStack::~QWidgetStack()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidgetStack::~QWidgetStack()</primary></indexterm>non-virtual thunk to QWidgetStack::~QWidgetStack()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::setResolution(int)</primary></indexterm>QPaintDevice::setResolution(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::resolution() const</primary></indexterm>QPaintDevice::resolution() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::handle() const</primary></indexterm>QPaintDevice::handle() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::x11RenderHandle() const</primary></indexterm>QPaintDevice::x11RenderHandle() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::setX11Data(QPaintDeviceX11Data const*)</primary></indexterm>QPaintDevice::setX11Data(QPaintDeviceX11Data const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::cmd(int, QPainter*, QPDevCmdParam*)</primary></indexterm>QPaintDevice::cmd(int, QPainter*, QPDevCmdParam*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::metric(int) const</primary></indexterm>non-virtual thunk to QWidget::metric(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::fontMet(QFont*, int, char const*, int) const</primary></indexterm>QPaintDevice::fontMet(QFont*, int, char const*, int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::fontInf(QFont*, int) const</primary></indexterm>QPaintDevice::fontInf(QFont*, int) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QWidgetStack  class
is described by <XREF LINKEND="rtti-56007">
</PARA>
<!--classdata-->
<TABLE ID="rtti-56007">
<TITLE>typeinfo for QWidgetStack</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QWidgetStack</primary></indexterm>typeinfo name for QWidgetStack</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QFrame</primary></indexterm>typeinfo for QFrame</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QButtonGroup</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QButtonGroup class
is described by <XREF LINKEND="cls-58024-0">
</PARA>
<!--classdata-->
<TABLE id="cls-58024-0">
<TITLE>Primary vtable for QButtonGroup</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QButtonGroup</primary></indexterm>typeinfo for QButtonGroup</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QButtonGroup::metaObject() const</primary></indexterm>NULL or QButtonGroup::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QButtonGroup::className() const</primary></indexterm>QButtonGroup::className() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QButtonGroup::qt_cast(char const*)</primary></indexterm>QButtonGroup::qt_cast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QButtonGroup::qt_invoke(int, QUObject*)</primary></indexterm>QButtonGroup::qt_invoke(int, QUObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QButtonGroup::qt_emit(int, QUObject*)</primary></indexterm>QButtonGroup::qt_emit(int, QUObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QButtonGroup::qt_property(int, int, QVariant*)</primary></indexterm>QButtonGroup::qt_property(int, int, QVariant*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QButtonGroup::~QButtonGroup()</primary></indexterm>QButtonGroup::~QButtonGroup()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QButtonGroup::~QButtonGroup()</primary></indexterm>QButtonGroup::~QButtonGroup()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QButtonGroup::event(QEvent*)</primary></indexterm>QButtonGroup::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::eventFilter(QObject*, QEvent*)</primary></indexterm>QObject::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setName(char const*)</primary></indexterm>QWidget::setName(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::insertChild(QObject*)</primary></indexterm>QObject::insertChild(QObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::removeChild(QObject*)</primary></indexterm>QObject::removeChild(QObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::setProperty(char const*, QVariant const&)</primary></indexterm>QObject::setProperty(char const*, QVariant const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::property(char const*) const</primary></indexterm>QObject::property(char const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGroupBox::childEvent(QChildEvent*)</primary></indexterm>QGroupBox::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QCustomEvent*)</primary></indexterm>QObject::customEvent(QCustomEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::checkConnectArgs(char const*, QObject const*, char const*)</primary></indexterm>QObject::checkConnectArgs(char const*, QObject const*, char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGroupBox::setEnabled(bool)</primary></indexterm>QGroupBox::setEnabled(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMinimumSize(int, int)</primary></indexterm>QWidget::setMinimumSize(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMaximumSize(int, int)</primary></indexterm>QWidget::setMaximumSize(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setSizeIncrement(int, int)</primary></indexterm>QWidget::setSizeIncrement(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundMode(Qt::BackgroundMode)</primary></indexterm>QWidget::setBackgroundMode(Qt::BackgroundMode)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setEraseColor(QColor const&)</primary></indexterm>QWidget::setEraseColor(QColor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setErasePixmap(QPixmap const&)</primary></indexterm>QWidget::setErasePixmap(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setPalette(QPalette const&)</primary></indexterm>QWidget::setPalette(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setPaletteBackgroundColor(QColor const&)</primary></indexterm>QWidget::setPaletteBackgroundColor(QColor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setPaletteBackgroundPixmap(QPixmap const&)</primary></indexterm>QWidget::setPaletteBackgroundPixmap(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFont(QFont const&)</primary></indexterm>QWidget::setFont(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setCursor(QCursor const&)</primary></indexterm>QWidget::setCursor(QCursor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;33&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::unsetCursor()</primary></indexterm>QWidget::unsetCursor()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;34&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMask(QBitmap const&)</primary></indexterm>QWidget::setMask(QBitmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;35&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMask(QRegion const&)</primary></indexterm>QWidget::setMask(QRegion const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;36&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundColor(QColor const&)</primary></indexterm>QWidget::setBackgroundColor(QColor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;37&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundPixmap(QPixmap const&)</primary></indexterm>QWidget::setBackgroundPixmap(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;38&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setCaption(QString const&)</primary></indexterm>QWidget::setCaption(QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;39&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setIcon(QPixmap const&)</primary></indexterm>QWidget::setIcon(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;40&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setIconText(QString const&)</primary></indexterm>QWidget::setIconText(QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;41&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMouseTracking(bool)</primary></indexterm>QWidget::setMouseTracking(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;42&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFocus()</primary></indexterm>QWidget::setFocus()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;43&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setActiveWindow()</primary></indexterm>QWidget::setActiveWindow()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;44&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFocusPolicy(QWidget::FocusPolicy)</primary></indexterm>QWidget::setFocusPolicy(QWidget::FocusPolicy)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;45&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFocusProxy(QWidget*)</primary></indexterm>QWidget::setFocusProxy(QWidget*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;46&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setUpdatesEnabled(bool)</primary></indexterm>QWidget::setUpdatesEnabled(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;47&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::show()</primary></indexterm>QWidget::show()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;48&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::hide()</primary></indexterm>QWidget::hide()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;49&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showMinimized()</primary></indexterm>QWidget::showMinimized()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;50&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showMaximized()</primary></indexterm>QWidget::showMaximized()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;51&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showNormal()</primary></indexterm>QWidget::showNormal()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;52&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::polish()</primary></indexterm>QWidget::polish()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;53&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::move(int, int)</primary></indexterm>QWidget::move(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;54&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::resize(int, int)</primary></indexterm>QWidget::resize(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;55&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setGeometry(int, int, int, int)</primary></indexterm>QWidget::setGeometry(int, int, int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;56&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setGeometry(QRect const&)</primary></indexterm>NULL or QWidget::setGeometry(QRect const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;57&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::close(bool)</primary></indexterm>QWidget::close(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;58&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGroupBox::sizeHint() const</primary></indexterm>QGroupBox::sizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;59&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::minimumSizeHint() const</primary></indexterm>QWidget::minimumSizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;60&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::sizePolicy() const</primary></indexterm>QWidget::sizePolicy() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;61&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setSizePolicy(QSizePolicy)</primary></indexterm>QWidget::setSizePolicy(QSizePolicy)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;62&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::heightForWidth(int) const</primary></indexterm>QWidget::heightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;63&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::adjustSize()</primary></indexterm>QWidget::adjustSize()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;64&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::reparent(QWidget*, unsigned int, QPoint const&, bool)</primary></indexterm>QWidget::reparent(QWidget*, unsigned int, QPoint const&, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;65&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setAcceptDrops(bool)</primary></indexterm>QWidget::setAcceptDrops(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;66&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setAutoMask(bool)</primary></indexterm>QWidget::setAutoMask(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;67&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundOrigin(QWidget::BackgroundOrigin)</primary></indexterm>QWidget::setBackgroundOrigin(QWidget::BackgroundOrigin)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;68&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::customWhatsThis() const</primary></indexterm>QWidget::customWhatsThis() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;69&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mousePressEvent(QMouseEvent*)</primary></indexterm>QWidget::mousePressEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;70&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseReleaseEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseReleaseEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;71&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseDoubleClickEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseDoubleClickEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;72&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseMoveEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseMoveEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;73&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::wheelEvent(QWheelEvent*)</primary></indexterm>QWidget::wheelEvent(QWheelEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;74&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyPressEvent(QKeyEvent*)</primary></indexterm>QWidget::keyPressEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;75&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyReleaseEvent(QKeyEvent*)</primary></indexterm>QWidget::keyReleaseEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;76&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGroupBox::focusInEvent(QFocusEvent*)</primary></indexterm>QGroupBox::focusInEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;77&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusOutEvent(QFocusEvent*)</primary></indexterm>QWidget::focusOutEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;78&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enterEvent(QEvent*)</primary></indexterm>QWidget::enterEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;79&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::leaveEvent(QEvent*)</primary></indexterm>QWidget::leaveEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;80&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGroupBox::paintEvent(QPaintEvent*)</primary></indexterm>QGroupBox::paintEvent(QPaintEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;81&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::moveEvent(QMoveEvent*)</primary></indexterm>QWidget::moveEvent(QMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;82&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGroupBox::resizeEvent(QResizeEvent*)</primary></indexterm>QGroupBox::resizeEvent(QResizeEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;83&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::closeEvent(QCloseEvent*)</primary></indexterm>QWidget::closeEvent(QCloseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;84&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::contextMenuEvent(QContextMenuEvent*)</primary></indexterm>QWidget::contextMenuEvent(QContextMenuEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;85&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::imStartEvent(QIMEvent*)</primary></indexterm>QWidget::imStartEvent(QIMEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;86&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::imComposeEvent(QIMEvent*)</primary></indexterm>QWidget::imComposeEvent(QIMEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;87&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::imEndEvent(QIMEvent*)</primary></indexterm>QWidget::imEndEvent(QIMEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;88&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::tabletEvent(QTabletEvent*)</primary></indexterm>QWidget::tabletEvent(QTabletEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;89&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragEnterEvent(QDragEnterEvent*)</primary></indexterm>QWidget::dragEnterEvent(QDragEnterEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;90&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragMoveEvent(QDragMoveEvent*)</primary></indexterm>QWidget::dragMoveEvent(QDragMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;91&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragLeaveEvent(QDragLeaveEvent*)</primary></indexterm>QWidget::dragLeaveEvent(QDragLeaveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;92&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dropEvent(QDropEvent*)</primary></indexterm>QWidget::dropEvent(QDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;93&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showEvent(QShowEvent*)</primary></indexterm>QWidget::showEvent(QShowEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;94&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::hideEvent(QHideEvent*)</primary></indexterm>QWidget::hideEvent(QHideEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;95&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::x11Event(_XEvent*)</primary></indexterm>QWidget::x11Event(_XEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;96&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::updateMask()</primary></indexterm>QWidget::updateMask()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;97&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::styleChange(QStyle&)</primary></indexterm>QFrame::styleChange(QStyle&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;98&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enabledChange(bool)</primary></indexterm>QWidget::enabledChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;99&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paletteChange(QPalette const&)</primary></indexterm>QWidget::paletteChange(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;100&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGroupBox::fontChange(QFont const&)</primary></indexterm>QGroupBox::fontChange(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;101&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::windowActivationChange(bool)</primary></indexterm>QWidget::windowActivationChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;102&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::metric(int) const</primary></indexterm>QWidget::metric(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;103&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::create(unsigned long, bool, bool)</primary></indexterm>QWidget::create(unsigned long, bool, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;104&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::destroy(bool, bool)</primary></indexterm>QWidget::destroy(bool, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;105&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setWState(unsigned int)</primary></indexterm>NULL or QWidget::setWState(unsigned int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;106&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setWFlags(unsigned int)</primary></indexterm>NULL or QWidget::setWFlags(unsigned int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;107&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusNextPrevChild(bool)</primary></indexterm>QWidget::focusNextPrevChild(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;108&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setKeyCompression(bool)</primary></indexterm>QWidget::setKeyCompression(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;109&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMicroFocusHint(int, int, int, int, bool, QFont*)</primary></indexterm>QWidget::setMicroFocusHint(int, int, int, int, bool, QFont*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;110&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::setFrameStyle(int)</primary></indexterm>QFrame::setFrameStyle(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;111&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::setLineWidth(int)</primary></indexterm>QFrame::setLineWidth(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;112&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::setMargin(int)</primary></indexterm>QFrame::setMargin(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;113&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::setMidLineWidth(int)</primary></indexterm>QFrame::setMidLineWidth(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;114&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::setFrameRect(QRect const&)</primary></indexterm>QFrame::setFrameRect(QRect const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;115&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::drawFrame(QPainter*)</primary></indexterm>QFrame::drawFrame(QPainter*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;116&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::drawContents(QPainter*)</primary></indexterm>QFrame::drawContents(QPainter*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;117&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::frameChanged()</primary></indexterm>QFrame::frameChanged()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;118&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGroupBox::setColumnLayout(int, Qt::Orientation)</primary></indexterm>QGroupBox::setColumnLayout(int, Qt::Orientation)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;119&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGroupBox::setTitle(QString const&)</primary></indexterm>QGroupBox::setTitle(QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;120&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGroupBox::setAlignment(int)</primary></indexterm>QGroupBox::setAlignment(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;121&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QButtonGroup::setExclusive(bool)</primary></indexterm>QButtonGroup::setExclusive(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;122&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QButtonGroup::setRadioButtonExclusive(bool)</primary></indexterm>QButtonGroup::setRadioButtonExclusive(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;123&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QButtonGroup::setButton(int)</primary></indexterm>QButtonGroup::setButton(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;124&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QButtonGroup::moveFocus(int)</primary></indexterm>QButtonGroup::moveFocus(int)</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--classdata-->
<TABLE id="cls-58024-1">
<TITLE>Secondary vtable for QButtonGroup</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>-80</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QButtonGroup</primary></indexterm>typeinfo for QButtonGroup</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QButtonGroup::~QButtonGroup()</primary></indexterm>non-virtual thunk to QButtonGroup::~QButtonGroup()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QButtonGroup::~QButtonGroup()</primary></indexterm>non-virtual thunk to QButtonGroup::~QButtonGroup()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::setResolution(int)</primary></indexterm>QPaintDevice::setResolution(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::resolution() const</primary></indexterm>QPaintDevice::resolution() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::handle() const</primary></indexterm>QPaintDevice::handle() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::x11RenderHandle() const</primary></indexterm>QPaintDevice::x11RenderHandle() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::setX11Data(QPaintDeviceX11Data const*)</primary></indexterm>QPaintDevice::setX11Data(QPaintDeviceX11Data const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::cmd(int, QPainter*, QPDevCmdParam*)</primary></indexterm>QPaintDevice::cmd(int, QPainter*, QPDevCmdParam*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::metric(int) const</primary></indexterm>non-virtual thunk to QWidget::metric(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::fontMet(QFont*, int, char const*, int) const</primary></indexterm>QPaintDevice::fontMet(QFont*, int, char const*, int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::fontInf(QFont*, int) const</primary></indexterm>QPaintDevice::fontInf(QFont*, int) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QButtonGroup  class
is described by <XREF LINKEND="rtti-60252">
</PARA>
<!--classdata-->
<TABLE ID="rtti-60252">
<TITLE>typeinfo for QButtonGroup</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QButtonGroup</primary></indexterm>typeinfo name for QButtonGroup</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QGroupBox</primary></indexterm>typeinfo for QGroupBox</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QVButtonGroup</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QVButtonGroup class
is described by <XREF LINKEND="cls-55758-0">
</PARA>
<!--classdata-->
<TABLE id="cls-55758-0">
<TITLE>Primary vtable for QVButtonGroup</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QVButtonGroup</primary></indexterm>typeinfo for QVButtonGroup</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QVButtonGroup::metaObject() const</primary></indexterm>NULL or QVButtonGroup::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QVButtonGroup::className() const</primary></indexterm>QVButtonGroup::className() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QVButtonGroup::qt_cast(char const*)</primary></indexterm>QVButtonGroup::qt_cast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QVButtonGroup::qt_invoke(int, QUObject*)</primary></indexterm>QVButtonGroup::qt_invoke(int, QUObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QVButtonGroup::qt_emit(int, QUObject*)</primary></indexterm>QVButtonGroup::qt_emit(int, QUObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QVButtonGroup::qt_property(int, int, QVariant*)</primary></indexterm>QVButtonGroup::qt_property(int, int, QVariant*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QVButtonGroup::~QVButtonGroup()</primary></indexterm>QVButtonGroup::~QVButtonGroup()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QVButtonGroup::~QVButtonGroup()</primary></indexterm>QVButtonGroup::~QVButtonGroup()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QButtonGroup::event(QEvent*)</primary></indexterm>QButtonGroup::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::eventFilter(QObject*, QEvent*)</primary></indexterm>QObject::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setName(char const*)</primary></indexterm>QWidget::setName(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::insertChild(QObject*)</primary></indexterm>QObject::insertChild(QObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::removeChild(QObject*)</primary></indexterm>QObject::removeChild(QObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::setProperty(char const*, QVariant const&)</primary></indexterm>QObject::setProperty(char const*, QVariant const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::property(char const*) const</primary></indexterm>QObject::property(char const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGroupBox::childEvent(QChildEvent*)</primary></indexterm>QGroupBox::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QCustomEvent*)</primary></indexterm>QObject::customEvent(QCustomEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::checkConnectArgs(char const*, QObject const*, char const*)</primary></indexterm>QObject::checkConnectArgs(char const*, QObject const*, char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGroupBox::setEnabled(bool)</primary></indexterm>QGroupBox::setEnabled(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMinimumSize(int, int)</primary></indexterm>QWidget::setMinimumSize(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMaximumSize(int, int)</primary></indexterm>QWidget::setMaximumSize(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setSizeIncrement(int, int)</primary></indexterm>QWidget::setSizeIncrement(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundMode(Qt::BackgroundMode)</primary></indexterm>QWidget::setBackgroundMode(Qt::BackgroundMode)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setEraseColor(QColor const&)</primary></indexterm>QWidget::setEraseColor(QColor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setErasePixmap(QPixmap const&)</primary></indexterm>QWidget::setErasePixmap(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setPalette(QPalette const&)</primary></indexterm>QWidget::setPalette(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setPaletteBackgroundColor(QColor const&)</primary></indexterm>QWidget::setPaletteBackgroundColor(QColor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setPaletteBackgroundPixmap(QPixmap const&)</primary></indexterm>QWidget::setPaletteBackgroundPixmap(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFont(QFont const&)</primary></indexterm>QWidget::setFont(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setCursor(QCursor const&)</primary></indexterm>QWidget::setCursor(QCursor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;33&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::unsetCursor()</primary></indexterm>QWidget::unsetCursor()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;34&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMask(QBitmap const&)</primary></indexterm>QWidget::setMask(QBitmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;35&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMask(QRegion const&)</primary></indexterm>QWidget::setMask(QRegion const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;36&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundColor(QColor const&)</primary></indexterm>QWidget::setBackgroundColor(QColor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;37&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundPixmap(QPixmap const&)</primary></indexterm>QWidget::setBackgroundPixmap(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;38&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setCaption(QString const&)</primary></indexterm>QWidget::setCaption(QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;39&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setIcon(QPixmap const&)</primary></indexterm>QWidget::setIcon(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;40&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setIconText(QString const&)</primary></indexterm>QWidget::setIconText(QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;41&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMouseTracking(bool)</primary></indexterm>QWidget::setMouseTracking(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;42&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFocus()</primary></indexterm>QWidget::setFocus()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;43&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setActiveWindow()</primary></indexterm>QWidget::setActiveWindow()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;44&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFocusPolicy(QWidget::FocusPolicy)</primary></indexterm>QWidget::setFocusPolicy(QWidget::FocusPolicy)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;45&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFocusProxy(QWidget*)</primary></indexterm>QWidget::setFocusProxy(QWidget*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;46&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setUpdatesEnabled(bool)</primary></indexterm>QWidget::setUpdatesEnabled(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;47&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::show()</primary></indexterm>QWidget::show()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;48&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::hide()</primary></indexterm>QWidget::hide()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;49&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showMinimized()</primary></indexterm>QWidget::showMinimized()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;50&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showMaximized()</primary></indexterm>QWidget::showMaximized()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;51&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showNormal()</primary></indexterm>QWidget::showNormal()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;52&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::polish()</primary></indexterm>QWidget::polish()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;53&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::move(int, int)</primary></indexterm>QWidget::move(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;54&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::resize(int, int)</primary></indexterm>QWidget::resize(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;55&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setGeometry(int, int, int, int)</primary></indexterm>QWidget::setGeometry(int, int, int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;56&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setGeometry(QRect const&)</primary></indexterm>NULL or QWidget::setGeometry(QRect const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;57&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::close(bool)</primary></indexterm>QWidget::close(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;58&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGroupBox::sizeHint() const</primary></indexterm>QGroupBox::sizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;59&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::minimumSizeHint() const</primary></indexterm>QWidget::minimumSizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;60&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::sizePolicy() const</primary></indexterm>QWidget::sizePolicy() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;61&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setSizePolicy(QSizePolicy)</primary></indexterm>QWidget::setSizePolicy(QSizePolicy)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;62&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::heightForWidth(int) const</primary></indexterm>QWidget::heightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;63&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::adjustSize()</primary></indexterm>QWidget::adjustSize()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;64&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::reparent(QWidget*, unsigned int, QPoint const&, bool)</primary></indexterm>QWidget::reparent(QWidget*, unsigned int, QPoint const&, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;65&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setAcceptDrops(bool)</primary></indexterm>QWidget::setAcceptDrops(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;66&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setAutoMask(bool)</primary></indexterm>QWidget::setAutoMask(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;67&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundOrigin(QWidget::BackgroundOrigin)</primary></indexterm>QWidget::setBackgroundOrigin(QWidget::BackgroundOrigin)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;68&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::customWhatsThis() const</primary></indexterm>QWidget::customWhatsThis() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;69&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mousePressEvent(QMouseEvent*)</primary></indexterm>QWidget::mousePressEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;70&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseReleaseEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseReleaseEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;71&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseDoubleClickEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseDoubleClickEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;72&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseMoveEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseMoveEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;73&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::wheelEvent(QWheelEvent*)</primary></indexterm>QWidget::wheelEvent(QWheelEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;74&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyPressEvent(QKeyEvent*)</primary></indexterm>QWidget::keyPressEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;75&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyReleaseEvent(QKeyEvent*)</primary></indexterm>QWidget::keyReleaseEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;76&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGroupBox::focusInEvent(QFocusEvent*)</primary></indexterm>QGroupBox::focusInEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;77&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusOutEvent(QFocusEvent*)</primary></indexterm>QWidget::focusOutEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;78&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enterEvent(QEvent*)</primary></indexterm>QWidget::enterEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;79&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::leaveEvent(QEvent*)</primary></indexterm>QWidget::leaveEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;80&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGroupBox::paintEvent(QPaintEvent*)</primary></indexterm>QGroupBox::paintEvent(QPaintEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;81&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::moveEvent(QMoveEvent*)</primary></indexterm>QWidget::moveEvent(QMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;82&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGroupBox::resizeEvent(QResizeEvent*)</primary></indexterm>QGroupBox::resizeEvent(QResizeEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;83&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::closeEvent(QCloseEvent*)</primary></indexterm>QWidget::closeEvent(QCloseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;84&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::contextMenuEvent(QContextMenuEvent*)</primary></indexterm>QWidget::contextMenuEvent(QContextMenuEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;85&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::imStartEvent(QIMEvent*)</primary></indexterm>QWidget::imStartEvent(QIMEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;86&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::imComposeEvent(QIMEvent*)</primary></indexterm>QWidget::imComposeEvent(QIMEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;87&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::imEndEvent(QIMEvent*)</primary></indexterm>QWidget::imEndEvent(QIMEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;88&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::tabletEvent(QTabletEvent*)</primary></indexterm>QWidget::tabletEvent(QTabletEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;89&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragEnterEvent(QDragEnterEvent*)</primary></indexterm>QWidget::dragEnterEvent(QDragEnterEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;90&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragMoveEvent(QDragMoveEvent*)</primary></indexterm>QWidget::dragMoveEvent(QDragMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;91&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragLeaveEvent(QDragLeaveEvent*)</primary></indexterm>QWidget::dragLeaveEvent(QDragLeaveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;92&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dropEvent(QDropEvent*)</primary></indexterm>QWidget::dropEvent(QDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;93&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showEvent(QShowEvent*)</primary></indexterm>QWidget::showEvent(QShowEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;94&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::hideEvent(QHideEvent*)</primary></indexterm>QWidget::hideEvent(QHideEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;95&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::x11Event(_XEvent*)</primary></indexterm>QWidget::x11Event(_XEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;96&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::updateMask()</primary></indexterm>QWidget::updateMask()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;97&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::styleChange(QStyle&)</primary></indexterm>QFrame::styleChange(QStyle&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;98&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enabledChange(bool)</primary></indexterm>QWidget::enabledChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;99&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paletteChange(QPalette const&)</primary></indexterm>QWidget::paletteChange(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;100&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGroupBox::fontChange(QFont const&)</primary></indexterm>QGroupBox::fontChange(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;101&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::windowActivationChange(bool)</primary></indexterm>QWidget::windowActivationChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;102&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::metric(int) const</primary></indexterm>QWidget::metric(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;103&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::create(unsigned long, bool, bool)</primary></indexterm>QWidget::create(unsigned long, bool, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;104&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::destroy(bool, bool)</primary></indexterm>QWidget::destroy(bool, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;105&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setWState(unsigned int)</primary></indexterm>NULL or QWidget::setWState(unsigned int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;106&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setWFlags(unsigned int)</primary></indexterm>NULL or QWidget::setWFlags(unsigned int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;107&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusNextPrevChild(bool)</primary></indexterm>QWidget::focusNextPrevChild(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;108&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setKeyCompression(bool)</primary></indexterm>QWidget::setKeyCompression(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;109&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMicroFocusHint(int, int, int, int, bool, QFont*)</primary></indexterm>QWidget::setMicroFocusHint(int, int, int, int, bool, QFont*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;110&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::setFrameStyle(int)</primary></indexterm>QFrame::setFrameStyle(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;111&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::setLineWidth(int)</primary></indexterm>QFrame::setLineWidth(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;112&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::setMargin(int)</primary></indexterm>QFrame::setMargin(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;113&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::setMidLineWidth(int)</primary></indexterm>QFrame::setMidLineWidth(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;114&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::setFrameRect(QRect const&)</primary></indexterm>QFrame::setFrameRect(QRect const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;115&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::drawFrame(QPainter*)</primary></indexterm>QFrame::drawFrame(QPainter*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;116&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::drawContents(QPainter*)</primary></indexterm>QFrame::drawContents(QPainter*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;117&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::frameChanged()</primary></indexterm>QFrame::frameChanged()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;118&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGroupBox::setColumnLayout(int, Qt::Orientation)</primary></indexterm>QGroupBox::setColumnLayout(int, Qt::Orientation)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;119&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGroupBox::setTitle(QString const&)</primary></indexterm>QGroupBox::setTitle(QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;120&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGroupBox::setAlignment(int)</primary></indexterm>QGroupBox::setAlignment(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;121&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QButtonGroup::setExclusive(bool)</primary></indexterm>QButtonGroup::setExclusive(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;122&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QButtonGroup::setRadioButtonExclusive(bool)</primary></indexterm>QButtonGroup::setRadioButtonExclusive(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;123&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QButtonGroup::setButton(int)</primary></indexterm>QButtonGroup::setButton(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;124&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QButtonGroup::moveFocus(int)</primary></indexterm>QButtonGroup::moveFocus(int)</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--classdata-->
<TABLE id="cls-55758-1">
<TITLE>Secondary vtable for QVButtonGroup</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>-80</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QVButtonGroup</primary></indexterm>typeinfo for QVButtonGroup</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QVButtonGroup::~QVButtonGroup()</primary></indexterm>non-virtual thunk to QVButtonGroup::~QVButtonGroup()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QVButtonGroup::~QVButtonGroup()</primary></indexterm>non-virtual thunk to QVButtonGroup::~QVButtonGroup()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::setResolution(int)</primary></indexterm>QPaintDevice::setResolution(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::resolution() const</primary></indexterm>QPaintDevice::resolution() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::handle() const</primary></indexterm>QPaintDevice::handle() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::x11RenderHandle() const</primary></indexterm>QPaintDevice::x11RenderHandle() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::setX11Data(QPaintDeviceX11Data const*)</primary></indexterm>QPaintDevice::setX11Data(QPaintDeviceX11Data const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::cmd(int, QPainter*, QPDevCmdParam*)</primary></indexterm>QPaintDevice::cmd(int, QPainter*, QPDevCmdParam*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::metric(int) const</primary></indexterm>non-virtual thunk to QWidget::metric(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::fontMet(QFont*, int, char const*, int) const</primary></indexterm>QPaintDevice::fontMet(QFont*, int, char const*, int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::fontInf(QFont*, int) const</primary></indexterm>QPaintDevice::fontInf(QFont*, int) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QVButtonGroup  class
is described by <XREF LINKEND="rtti-55547">
</PARA>
<!--classdata-->
<TABLE ID="rtti-55547">
<TITLE>typeinfo for QVButtonGroup</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QVButtonGroup</primary></indexterm>typeinfo name for QVButtonGroup</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QButtonGroup</primary></indexterm>typeinfo for QButtonGroup</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QGrid</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QGrid class
is described by <XREF LINKEND="cls-58301-0">
</PARA>
<!--classdata-->
<TABLE id="cls-58301-0">
<TITLE>Primary vtable for QGrid</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QGrid</primary></indexterm>typeinfo for QGrid</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGrid::metaObject() const</primary></indexterm>NULL or QGrid::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGrid::className() const</primary></indexterm>QGrid::className() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGrid::qt_cast(char const*)</primary></indexterm>QGrid::qt_cast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGrid::qt_invoke(int, QUObject*)</primary></indexterm>QGrid::qt_invoke(int, QUObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGrid::qt_emit(int, QUObject*)</primary></indexterm>QGrid::qt_emit(int, QUObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGrid::qt_property(int, int, QVariant*)</primary></indexterm>QGrid::qt_property(int, int, QVariant*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGrid::~QGrid()</primary></indexterm>NULL or QGrid::~QGrid()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGrid::~QGrid()</primary></indexterm>NULL or QGrid::~QGrid()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::event(QEvent*)</primary></indexterm>QWidget::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::eventFilter(QObject*, QEvent*)</primary></indexterm>QObject::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setName(char const*)</primary></indexterm>QWidget::setName(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::insertChild(QObject*)</primary></indexterm>QObject::insertChild(QObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::removeChild(QObject*)</primary></indexterm>QObject::removeChild(QObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::setProperty(char const*, QVariant const&)</primary></indexterm>QObject::setProperty(char const*, QVariant const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::property(char const*) const</primary></indexterm>QObject::property(char const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QCustomEvent*)</primary></indexterm>QObject::customEvent(QCustomEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::checkConnectArgs(char const*, QObject const*, char const*)</primary></indexterm>QObject::checkConnectArgs(char const*, QObject const*, char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setEnabled(bool)</primary></indexterm>QWidget::setEnabled(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMinimumSize(int, int)</primary></indexterm>QWidget::setMinimumSize(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMaximumSize(int, int)</primary></indexterm>QWidget::setMaximumSize(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setSizeIncrement(int, int)</primary></indexterm>QWidget::setSizeIncrement(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundMode(Qt::BackgroundMode)</primary></indexterm>QWidget::setBackgroundMode(Qt::BackgroundMode)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setEraseColor(QColor const&)</primary></indexterm>QWidget::setEraseColor(QColor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setErasePixmap(QPixmap const&)</primary></indexterm>QWidget::setErasePixmap(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setPalette(QPalette const&)</primary></indexterm>QWidget::setPalette(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setPaletteBackgroundColor(QColor const&)</primary></indexterm>QWidget::setPaletteBackgroundColor(QColor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setPaletteBackgroundPixmap(QPixmap const&)</primary></indexterm>QWidget::setPaletteBackgroundPixmap(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFont(QFont const&)</primary></indexterm>QWidget::setFont(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setCursor(QCursor const&)</primary></indexterm>QWidget::setCursor(QCursor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;33&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::unsetCursor()</primary></indexterm>QWidget::unsetCursor()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;34&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMask(QBitmap const&)</primary></indexterm>QWidget::setMask(QBitmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;35&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMask(QRegion const&)</primary></indexterm>QWidget::setMask(QRegion const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;36&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundColor(QColor const&)</primary></indexterm>QWidget::setBackgroundColor(QColor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;37&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundPixmap(QPixmap const&)</primary></indexterm>QWidget::setBackgroundPixmap(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;38&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setCaption(QString const&)</primary></indexterm>QWidget::setCaption(QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;39&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setIcon(QPixmap const&)</primary></indexterm>QWidget::setIcon(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;40&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setIconText(QString const&)</primary></indexterm>QWidget::setIconText(QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;41&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMouseTracking(bool)</primary></indexterm>QWidget::setMouseTracking(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;42&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFocus()</primary></indexterm>QWidget::setFocus()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;43&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setActiveWindow()</primary></indexterm>QWidget::setActiveWindow()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;44&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFocusPolicy(QWidget::FocusPolicy)</primary></indexterm>QWidget::setFocusPolicy(QWidget::FocusPolicy)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;45&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFocusProxy(QWidget*)</primary></indexterm>QWidget::setFocusProxy(QWidget*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;46&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setUpdatesEnabled(bool)</primary></indexterm>QWidget::setUpdatesEnabled(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;47&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::show()</primary></indexterm>QWidget::show()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;48&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::hide()</primary></indexterm>QWidget::hide()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;49&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showMinimized()</primary></indexterm>QWidget::showMinimized()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;50&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showMaximized()</primary></indexterm>QWidget::showMaximized()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;51&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showNormal()</primary></indexterm>QWidget::showNormal()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;52&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::polish()</primary></indexterm>QWidget::polish()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;53&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::move(int, int)</primary></indexterm>QWidget::move(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;54&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::resize(int, int)</primary></indexterm>QWidget::resize(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;55&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setGeometry(int, int, int, int)</primary></indexterm>QWidget::setGeometry(int, int, int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;56&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setGeometry(QRect const&)</primary></indexterm>NULL or QWidget::setGeometry(QRect const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;57&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::close(bool)</primary></indexterm>QWidget::close(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;58&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGrid::sizeHint() const</primary></indexterm>QGrid::sizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;59&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::minimumSizeHint() const</primary></indexterm>QWidget::minimumSizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;60&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::sizePolicy() const</primary></indexterm>QWidget::sizePolicy() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;61&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setSizePolicy(QSizePolicy)</primary></indexterm>QWidget::setSizePolicy(QSizePolicy)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;62&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::heightForWidth(int) const</primary></indexterm>QWidget::heightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;63&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::adjustSize()</primary></indexterm>QWidget::adjustSize()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;64&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::reparent(QWidget*, unsigned int, QPoint const&, bool)</primary></indexterm>QWidget::reparent(QWidget*, unsigned int, QPoint const&, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;65&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setAcceptDrops(bool)</primary></indexterm>QWidget::setAcceptDrops(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;66&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setAutoMask(bool)</primary></indexterm>QWidget::setAutoMask(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;67&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundOrigin(QWidget::BackgroundOrigin)</primary></indexterm>QWidget::setBackgroundOrigin(QWidget::BackgroundOrigin)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;68&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::customWhatsThis() const</primary></indexterm>QWidget::customWhatsThis() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;69&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mousePressEvent(QMouseEvent*)</primary></indexterm>QWidget::mousePressEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;70&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseReleaseEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseReleaseEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;71&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseDoubleClickEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseDoubleClickEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;72&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseMoveEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseMoveEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;73&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::wheelEvent(QWheelEvent*)</primary></indexterm>QWidget::wheelEvent(QWheelEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;74&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyPressEvent(QKeyEvent*)</primary></indexterm>QWidget::keyPressEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;75&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyReleaseEvent(QKeyEvent*)</primary></indexterm>QWidget::keyReleaseEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;76&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusInEvent(QFocusEvent*)</primary></indexterm>QWidget::focusInEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;77&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusOutEvent(QFocusEvent*)</primary></indexterm>QWidget::focusOutEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;78&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enterEvent(QEvent*)</primary></indexterm>QWidget::enterEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;79&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::leaveEvent(QEvent*)</primary></indexterm>QWidget::leaveEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;80&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::paintEvent(QPaintEvent*)</primary></indexterm>QFrame::paintEvent(QPaintEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;81&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::moveEvent(QMoveEvent*)</primary></indexterm>QWidget::moveEvent(QMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;82&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::resizeEvent(QResizeEvent*)</primary></indexterm>QFrame::resizeEvent(QResizeEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;83&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::closeEvent(QCloseEvent*)</primary></indexterm>QWidget::closeEvent(QCloseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;84&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::contextMenuEvent(QContextMenuEvent*)</primary></indexterm>QWidget::contextMenuEvent(QContextMenuEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;85&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::imStartEvent(QIMEvent*)</primary></indexterm>QWidget::imStartEvent(QIMEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;86&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::imComposeEvent(QIMEvent*)</primary></indexterm>QWidget::imComposeEvent(QIMEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;87&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::imEndEvent(QIMEvent*)</primary></indexterm>QWidget::imEndEvent(QIMEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;88&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::tabletEvent(QTabletEvent*)</primary></indexterm>QWidget::tabletEvent(QTabletEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;89&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragEnterEvent(QDragEnterEvent*)</primary></indexterm>QWidget::dragEnterEvent(QDragEnterEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;90&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragMoveEvent(QDragMoveEvent*)</primary></indexterm>QWidget::dragMoveEvent(QDragMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;91&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragLeaveEvent(QDragLeaveEvent*)</primary></indexterm>QWidget::dragLeaveEvent(QDragLeaveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;92&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dropEvent(QDropEvent*)</primary></indexterm>QWidget::dropEvent(QDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;93&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showEvent(QShowEvent*)</primary></indexterm>QWidget::showEvent(QShowEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;94&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::hideEvent(QHideEvent*)</primary></indexterm>QWidget::hideEvent(QHideEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;95&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::x11Event(_XEvent*)</primary></indexterm>QWidget::x11Event(_XEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;96&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::updateMask()</primary></indexterm>QWidget::updateMask()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;97&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::styleChange(QStyle&)</primary></indexterm>QFrame::styleChange(QStyle&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;98&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enabledChange(bool)</primary></indexterm>QWidget::enabledChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;99&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paletteChange(QPalette const&)</primary></indexterm>QWidget::paletteChange(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;100&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::fontChange(QFont const&)</primary></indexterm>QWidget::fontChange(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;101&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::windowActivationChange(bool)</primary></indexterm>QWidget::windowActivationChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;102&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::metric(int) const</primary></indexterm>QWidget::metric(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;103&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::create(unsigned long, bool, bool)</primary></indexterm>QWidget::create(unsigned long, bool, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;104&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::destroy(bool, bool)</primary></indexterm>QWidget::destroy(bool, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;105&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setWState(unsigned int)</primary></indexterm>NULL or QWidget::setWState(unsigned int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;106&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setWFlags(unsigned int)</primary></indexterm>NULL or QWidget::setWFlags(unsigned int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;107&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusNextPrevChild(bool)</primary></indexterm>QWidget::focusNextPrevChild(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;108&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setKeyCompression(bool)</primary></indexterm>QWidget::setKeyCompression(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;109&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMicroFocusHint(int, int, int, int, bool, QFont*)</primary></indexterm>QWidget::setMicroFocusHint(int, int, int, int, bool, QFont*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;110&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::setFrameStyle(int)</primary></indexterm>QFrame::setFrameStyle(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;111&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::setLineWidth(int)</primary></indexterm>QFrame::setLineWidth(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;112&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::setMargin(int)</primary></indexterm>QFrame::setMargin(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;113&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::setMidLineWidth(int)</primary></indexterm>QFrame::setMidLineWidth(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;114&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::setFrameRect(QRect const&)</primary></indexterm>QFrame::setFrameRect(QRect const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;115&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::drawFrame(QPainter*)</primary></indexterm>QFrame::drawFrame(QPainter*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;116&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::drawContents(QPainter*)</primary></indexterm>QFrame::drawContents(QPainter*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;117&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGrid::frameChanged()</primary></indexterm>QGrid::frameChanged()</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--classdata-->
<TABLE id="cls-58301-1">
<TITLE>Secondary vtable for QGrid</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>-80</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QGrid</primary></indexterm>typeinfo for QGrid</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QGrid::~QGrid()</primary></indexterm>non-virtual thunk to QGrid::~QGrid()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QGrid::~QGrid()</primary></indexterm>non-virtual thunk to QGrid::~QGrid()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::setResolution(int)</primary></indexterm>QPaintDevice::setResolution(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::resolution() const</primary></indexterm>QPaintDevice::resolution() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::handle() const</primary></indexterm>QPaintDevice::handle() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::x11RenderHandle() const</primary></indexterm>QPaintDevice::x11RenderHandle() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::setX11Data(QPaintDeviceX11Data const*)</primary></indexterm>QPaintDevice::setX11Data(QPaintDeviceX11Data const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::cmd(int, QPainter*, QPDevCmdParam*)</primary></indexterm>QPaintDevice::cmd(int, QPainter*, QPDevCmdParam*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::metric(int) const</primary></indexterm>non-virtual thunk to QWidget::metric(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::fontMet(QFont*, int, char const*, int) const</primary></indexterm>QPaintDevice::fontMet(QFont*, int, char const*, int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::fontInf(QFont*, int) const</primary></indexterm>QPaintDevice::fontInf(QFont*, int) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QGrid  class
is described by <XREF LINKEND="rtti-50044">
</PARA>
<!--classdata-->
<TABLE ID="rtti-50044">
<TITLE>typeinfo for QGrid</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QGrid</primary></indexterm>typeinfo name for QGrid</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QFrame</primary></indexterm>typeinfo for QFrame</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QVGroupBox</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QVGroupBox class
is described by <XREF LINKEND="cls-58599-0">
</PARA>
<!--classdata-->
<TABLE id="cls-58599-0">
<TITLE>Primary vtable for QVGroupBox</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QVGroupBox</primary></indexterm>typeinfo for QVGroupBox</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QVGroupBox::metaObject() const</primary></indexterm>NULL or QVGroupBox::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QVGroupBox::className() const</primary></indexterm>QVGroupBox::className() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QVGroupBox::qt_cast(char const*)</primary></indexterm>QVGroupBox::qt_cast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QVGroupBox::qt_invoke(int, QUObject*)</primary></indexterm>QVGroupBox::qt_invoke(int, QUObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QVGroupBox::qt_emit(int, QUObject*)</primary></indexterm>QVGroupBox::qt_emit(int, QUObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QVGroupBox::qt_property(int, int, QVariant*)</primary></indexterm>QVGroupBox::qt_property(int, int, QVariant*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QVGroupBox::~QVGroupBox()</primary></indexterm>QVGroupBox::~QVGroupBox()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QVGroupBox::~QVGroupBox()</primary></indexterm>QVGroupBox::~QVGroupBox()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGroupBox::event(QEvent*)</primary></indexterm>QGroupBox::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::eventFilter(QObject*, QEvent*)</primary></indexterm>QObject::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setName(char const*)</primary></indexterm>QWidget::setName(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::insertChild(QObject*)</primary></indexterm>QObject::insertChild(QObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::removeChild(QObject*)</primary></indexterm>QObject::removeChild(QObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::setProperty(char const*, QVariant const&)</primary></indexterm>QObject::setProperty(char const*, QVariant const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::property(char const*) const</primary></indexterm>QObject::property(char const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGroupBox::childEvent(QChildEvent*)</primary></indexterm>QGroupBox::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QCustomEvent*)</primary></indexterm>QObject::customEvent(QCustomEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::checkConnectArgs(char const*, QObject const*, char const*)</primary></indexterm>QObject::checkConnectArgs(char const*, QObject const*, char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGroupBox::setEnabled(bool)</primary></indexterm>QGroupBox::setEnabled(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMinimumSize(int, int)</primary></indexterm>QWidget::setMinimumSize(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMaximumSize(int, int)</primary></indexterm>QWidget::setMaximumSize(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setSizeIncrement(int, int)</primary></indexterm>QWidget::setSizeIncrement(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundMode(Qt::BackgroundMode)</primary></indexterm>QWidget::setBackgroundMode(Qt::BackgroundMode)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setEraseColor(QColor const&)</primary></indexterm>QWidget::setEraseColor(QColor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setErasePixmap(QPixmap const&)</primary></indexterm>QWidget::setErasePixmap(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setPalette(QPalette const&)</primary></indexterm>QWidget::setPalette(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setPaletteBackgroundColor(QColor const&)</primary></indexterm>QWidget::setPaletteBackgroundColor(QColor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setPaletteBackgroundPixmap(QPixmap const&)</primary></indexterm>QWidget::setPaletteBackgroundPixmap(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFont(QFont const&)</primary></indexterm>QWidget::setFont(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setCursor(QCursor const&)</primary></indexterm>QWidget::setCursor(QCursor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;33&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::unsetCursor()</primary></indexterm>QWidget::unsetCursor()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;34&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMask(QBitmap const&)</primary></indexterm>QWidget::setMask(QBitmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;35&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMask(QRegion const&)</primary></indexterm>QWidget::setMask(QRegion const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;36&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundColor(QColor const&)</primary></indexterm>QWidget::setBackgroundColor(QColor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;37&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundPixmap(QPixmap const&)</primary></indexterm>QWidget::setBackgroundPixmap(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;38&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setCaption(QString const&)</primary></indexterm>QWidget::setCaption(QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;39&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setIcon(QPixmap const&)</primary></indexterm>QWidget::setIcon(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;40&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setIconText(QString const&)</primary></indexterm>QWidget::setIconText(QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;41&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMouseTracking(bool)</primary></indexterm>QWidget::setMouseTracking(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;42&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFocus()</primary></indexterm>QWidget::setFocus()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;43&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setActiveWindow()</primary></indexterm>QWidget::setActiveWindow()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;44&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFocusPolicy(QWidget::FocusPolicy)</primary></indexterm>QWidget::setFocusPolicy(QWidget::FocusPolicy)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;45&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFocusProxy(QWidget*)</primary></indexterm>QWidget::setFocusProxy(QWidget*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;46&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setUpdatesEnabled(bool)</primary></indexterm>QWidget::setUpdatesEnabled(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;47&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::show()</primary></indexterm>QWidget::show()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;48&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::hide()</primary></indexterm>QWidget::hide()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;49&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showMinimized()</primary></indexterm>QWidget::showMinimized()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;50&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showMaximized()</primary></indexterm>QWidget::showMaximized()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;51&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showNormal()</primary></indexterm>QWidget::showNormal()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;52&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::polish()</primary></indexterm>QWidget::polish()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;53&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::move(int, int)</primary></indexterm>QWidget::move(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;54&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::resize(int, int)</primary></indexterm>QWidget::resize(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;55&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setGeometry(int, int, int, int)</primary></indexterm>QWidget::setGeometry(int, int, int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;56&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setGeometry(QRect const&)</primary></indexterm>NULL or QWidget::setGeometry(QRect const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;57&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::close(bool)</primary></indexterm>QWidget::close(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;58&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGroupBox::sizeHint() const</primary></indexterm>QGroupBox::sizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;59&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::minimumSizeHint() const</primary></indexterm>QWidget::minimumSizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;60&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::sizePolicy() const</primary></indexterm>QWidget::sizePolicy() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;61&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setSizePolicy(QSizePolicy)</primary></indexterm>QWidget::setSizePolicy(QSizePolicy)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;62&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::heightForWidth(int) const</primary></indexterm>QWidget::heightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;63&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::adjustSize()</primary></indexterm>QWidget::adjustSize()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;64&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::reparent(QWidget*, unsigned int, QPoint const&, bool)</primary></indexterm>QWidget::reparent(QWidget*, unsigned int, QPoint const&, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;65&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setAcceptDrops(bool)</primary></indexterm>QWidget::setAcceptDrops(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;66&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setAutoMask(bool)</primary></indexterm>QWidget::setAutoMask(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;67&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundOrigin(QWidget::BackgroundOrigin)</primary></indexterm>QWidget::setBackgroundOrigin(QWidget::BackgroundOrigin)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;68&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::customWhatsThis() const</primary></indexterm>QWidget::customWhatsThis() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;69&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mousePressEvent(QMouseEvent*)</primary></indexterm>QWidget::mousePressEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;70&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseReleaseEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseReleaseEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;71&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseDoubleClickEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseDoubleClickEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;72&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseMoveEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseMoveEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;73&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::wheelEvent(QWheelEvent*)</primary></indexterm>QWidget::wheelEvent(QWheelEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;74&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyPressEvent(QKeyEvent*)</primary></indexterm>QWidget::keyPressEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;75&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyReleaseEvent(QKeyEvent*)</primary></indexterm>QWidget::keyReleaseEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;76&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGroupBox::focusInEvent(QFocusEvent*)</primary></indexterm>QGroupBox::focusInEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;77&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusOutEvent(QFocusEvent*)</primary></indexterm>QWidget::focusOutEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;78&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enterEvent(QEvent*)</primary></indexterm>QWidget::enterEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;79&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::leaveEvent(QEvent*)</primary></indexterm>QWidget::leaveEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;80&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGroupBox::paintEvent(QPaintEvent*)</primary></indexterm>QGroupBox::paintEvent(QPaintEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;81&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::moveEvent(QMoveEvent*)</primary></indexterm>QWidget::moveEvent(QMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;82&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGroupBox::resizeEvent(QResizeEvent*)</primary></indexterm>QGroupBox::resizeEvent(QResizeEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;83&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::closeEvent(QCloseEvent*)</primary></indexterm>QWidget::closeEvent(QCloseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;84&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::contextMenuEvent(QContextMenuEvent*)</primary></indexterm>QWidget::contextMenuEvent(QContextMenuEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;85&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::imStartEvent(QIMEvent*)</primary></indexterm>QWidget::imStartEvent(QIMEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;86&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::imComposeEvent(QIMEvent*)</primary></indexterm>QWidget::imComposeEvent(QIMEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;87&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::imEndEvent(QIMEvent*)</primary></indexterm>QWidget::imEndEvent(QIMEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;88&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::tabletEvent(QTabletEvent*)</primary></indexterm>QWidget::tabletEvent(QTabletEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;89&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragEnterEvent(QDragEnterEvent*)</primary></indexterm>QWidget::dragEnterEvent(QDragEnterEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;90&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragMoveEvent(QDragMoveEvent*)</primary></indexterm>QWidget::dragMoveEvent(QDragMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;91&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragLeaveEvent(QDragLeaveEvent*)</primary></indexterm>QWidget::dragLeaveEvent(QDragLeaveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;92&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dropEvent(QDropEvent*)</primary></indexterm>QWidget::dropEvent(QDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;93&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showEvent(QShowEvent*)</primary></indexterm>QWidget::showEvent(QShowEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;94&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::hideEvent(QHideEvent*)</primary></indexterm>QWidget::hideEvent(QHideEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;95&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::x11Event(_XEvent*)</primary></indexterm>QWidget::x11Event(_XEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;96&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::updateMask()</primary></indexterm>QWidget::updateMask()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;97&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::styleChange(QStyle&)</primary></indexterm>QFrame::styleChange(QStyle&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;98&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enabledChange(bool)</primary></indexterm>QWidget::enabledChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;99&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paletteChange(QPalette const&)</primary></indexterm>QWidget::paletteChange(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;100&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGroupBox::fontChange(QFont const&)</primary></indexterm>QGroupBox::fontChange(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;101&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::windowActivationChange(bool)</primary></indexterm>QWidget::windowActivationChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;102&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::metric(int) const</primary></indexterm>QWidget::metric(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;103&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::create(unsigned long, bool, bool)</primary></indexterm>QWidget::create(unsigned long, bool, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;104&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::destroy(bool, bool)</primary></indexterm>QWidget::destroy(bool, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;105&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setWState(unsigned int)</primary></indexterm>NULL or QWidget::setWState(unsigned int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;106&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setWFlags(unsigned int)</primary></indexterm>NULL or QWidget::setWFlags(unsigned int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;107&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusNextPrevChild(bool)</primary></indexterm>QWidget::focusNextPrevChild(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;108&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setKeyCompression(bool)</primary></indexterm>QWidget::setKeyCompression(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;109&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMicroFocusHint(int, int, int, int, bool, QFont*)</primary></indexterm>QWidget::setMicroFocusHint(int, int, int, int, bool, QFont*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;110&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::setFrameStyle(int)</primary></indexterm>QFrame::setFrameStyle(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;111&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::setLineWidth(int)</primary></indexterm>QFrame::setLineWidth(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;112&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::setMargin(int)</primary></indexterm>QFrame::setMargin(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;113&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::setMidLineWidth(int)</primary></indexterm>QFrame::setMidLineWidth(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;114&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::setFrameRect(QRect const&)</primary></indexterm>QFrame::setFrameRect(QRect const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;115&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::drawFrame(QPainter*)</primary></indexterm>QFrame::drawFrame(QPainter*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;116&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::drawContents(QPainter*)</primary></indexterm>QFrame::drawContents(QPainter*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;117&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::frameChanged()</primary></indexterm>QFrame::frameChanged()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;118&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGroupBox::setColumnLayout(int, Qt::Orientation)</primary></indexterm>QGroupBox::setColumnLayout(int, Qt::Orientation)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;119&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGroupBox::setTitle(QString const&)</primary></indexterm>QGroupBox::setTitle(QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;120&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGroupBox::setAlignment(int)</primary></indexterm>QGroupBox::setAlignment(int)</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--classdata-->
<TABLE id="cls-58599-1">
<TITLE>Secondary vtable for QVGroupBox</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>-80</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QVGroupBox</primary></indexterm>typeinfo for QVGroupBox</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QVGroupBox::~QVGroupBox()</primary></indexterm>non-virtual thunk to QVGroupBox::~QVGroupBox()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QVGroupBox::~QVGroupBox()</primary></indexterm>non-virtual thunk to QVGroupBox::~QVGroupBox()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::setResolution(int)</primary></indexterm>QPaintDevice::setResolution(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::resolution() const</primary></indexterm>QPaintDevice::resolution() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::handle() const</primary></indexterm>QPaintDevice::handle() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::x11RenderHandle() const</primary></indexterm>QPaintDevice::x11RenderHandle() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::setX11Data(QPaintDeviceX11Data const*)</primary></indexterm>QPaintDevice::setX11Data(QPaintDeviceX11Data const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::cmd(int, QPainter*, QPDevCmdParam*)</primary></indexterm>QPaintDevice::cmd(int, QPainter*, QPDevCmdParam*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::metric(int) const</primary></indexterm>non-virtual thunk to QWidget::metric(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::fontMet(QFont*, int, char const*, int) const</primary></indexterm>QPaintDevice::fontMet(QFont*, int, char const*, int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::fontInf(QFont*, int) const</primary></indexterm>QPaintDevice::fontInf(QFont*, int) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QVGroupBox  class
is described by <XREF LINKEND="rtti-53762">
</PARA>
<!--classdata-->
<TABLE ID="rtti-53762">
<TITLE>typeinfo for QVGroupBox</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QVGroupBox</primary></indexterm>typeinfo name for QVGroupBox</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QGroupBox</primary></indexterm>typeinfo for QGroupBox</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Interfaces for Qt3 Organizers</TITLE>
<PARA>
An LSB conforming implementation shall provide the architecture specific functions
for Qt3 Organizers specified in <XREF linkend="tbl-libqt-mt-3-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<TABLE id="tbl-libqt-mt-3-ints">
<TITLE>libqt-mt - Qt3 Organizers Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>_ZThn80_N10QHGroupBoxD0Ev</primary></indexterm>_ZThn80_N10QHGroupBoxD0Ev <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn80_N10QHGroupBoxD1Ev</primary></indexterm>_ZThn80_N10QHGroupBoxD1Ev <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn80_N10QVGroupBoxD0Ev</primary></indexterm>_ZThn80_N10QVGroupBoxD0Ev <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn80_N10QVGroupBoxD1Ev</primary></indexterm>_ZThn80_N10QVGroupBoxD1Ev <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn80_N12QButtonGroupD0Ev</primary></indexterm>_ZThn80_N12QButtonGroupD0Ev <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn80_N12QButtonGroupD1Ev</primary></indexterm>_ZThn80_N12QButtonGroupD1Ev <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn80_N12QWidgetStackD0Ev</primary></indexterm>_ZThn80_N12QWidgetStackD0Ev <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn80_N12QWidgetStackD1Ev</primary></indexterm>_ZThn80_N12QWidgetStackD1Ev <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn80_N13QHButtonGroupD0Ev</primary></indexterm>_ZThn80_N13QHButtonGroupD0Ev <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn80_N13QHButtonGroupD1Ev</primary></indexterm>_ZThn80_N13QHButtonGroupD1Ev <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn80_N13QVButtonGroupD0Ev</primary></indexterm>_ZThn80_N13QVButtonGroupD0Ev <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn80_N13QVButtonGroupD1Ev</primary></indexterm>_ZThn80_N13QVButtonGroupD1Ev <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn80_N9QGroupBoxD0Ev</primary></indexterm>_ZThn80_N9QGroupBoxD0Ev <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn80_N9QGroupBoxD1Ev</primary></indexterm>_ZThn80_N9QGroupBoxD1Ev <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn80_N9QSplitterD0Ev</primary></indexterm>_ZThn80_N9QSplitterD0Ev <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn80_N9QSplitterD1Ev</primary></indexterm>_ZThn80_N9QSplitterD1Ev <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>
</SECT2>
<!-- debug: database interface name Qt3 Layouts -->
<SECT2>
<!--libgroup-->
<TITLE>Qt3 Layouts</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Class data for QDockAreaLayout</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QDockAreaLayout class
is described by <XREF LINKEND="cls-48695-0">
</PARA>
<!--classdata-->
<TABLE id="cls-48695-0">
<TITLE>Primary vtable for QDockAreaLayout</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QDockAreaLayout</primary></indexterm>typeinfo for QDockAreaLayout</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDockAreaLayout::metaObject() const</primary></indexterm>NULL or QDockAreaLayout::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDockAreaLayout::className() const</primary></indexterm>QDockAreaLayout::className() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDockAreaLayout::qt_cast(char const*)</primary></indexterm>QDockAreaLayout::qt_cast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDockAreaLayout::qt_invoke(int, QUObject*)</primary></indexterm>QDockAreaLayout::qt_invoke(int, QUObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDockAreaLayout::qt_emit(int, QUObject*)</primary></indexterm>QDockAreaLayout::qt_emit(int, QUObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDockAreaLayout::qt_property(int, int, QVariant*)</primary></indexterm>QDockAreaLayout::qt_property(int, int, QVariant*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDockAreaLayout::~QDockAreaLayout()</primary></indexterm>NULL or QDockAreaLayout::~QDockAreaLayout()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDockAreaLayout::~QDockAreaLayout()</primary></indexterm>NULL or QDockAreaLayout::~QDockAreaLayout()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::event(QEvent*)</primary></indexterm>QObject::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLayout::eventFilter(QObject*, QEvent*)</primary></indexterm>QLayout::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::setName(char const*)</primary></indexterm>QObject::setName(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::insertChild(QObject*)</primary></indexterm>QObject::insertChild(QObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::removeChild(QObject*)</primary></indexterm>QObject::removeChild(QObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::setProperty(char const*, QVariant const&)</primary></indexterm>QObject::setProperty(char const*, QVariant const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::property(char const*) const</primary></indexterm>QObject::property(char const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLayout::childEvent(QChildEvent*)</primary></indexterm>QLayout::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QCustomEvent*)</primary></indexterm>QObject::customEvent(QCustomEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::checkConnectArgs(char const*, QObject const*, char const*)</primary></indexterm>QObject::checkConnectArgs(char const*, QObject const*, char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLayout::setMargin(int)</primary></indexterm>QLayout::setMargin(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLayout::setSpacing(int)</primary></indexterm>QLayout::setSpacing(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLayout::setMenuBar(QMenuBar*)</primary></indexterm>QLayout::setMenuBar(QMenuBar*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLayout::setAutoAdd(bool)</primary></indexterm>QLayout::setAutoAdd(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDockAreaLayout::invalidate()</primary></indexterm>QDockAreaLayout::invalidate()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLayout::geometry() const</primary></indexterm>QLayout::geometry() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDockAreaLayout::addItem(QLayoutItem*)</primary></indexterm>NULL or QDockAreaLayout::addItem(QLayoutItem*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDockAreaLayout::expanding() const</primary></indexterm>NULL or QDockAreaLayout::expanding() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDockAreaLayout::minimumSize() const</primary></indexterm>QDockAreaLayout::minimumSize() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLayout::maximumSize() const</primary></indexterm>QLayout::maximumSize() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDockAreaLayout::setGeometry(QRect const&)</primary></indexterm>QDockAreaLayout::setGeometry(QRect const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDockAreaLayout::iterator()</primary></indexterm>QDockAreaLayout::iterator()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;33&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLayout::isEmpty() const</primary></indexterm>QLayout::isEmpty() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;34&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLayout::layout()</primary></indexterm>QLayout::layout()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;35&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDockAreaLayout::hasHeightForWidth() const</primary></indexterm>QDockAreaLayout::hasHeightForWidth() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;36&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDockAreaLayout::heightForWidth(int) const</primary></indexterm>QDockAreaLayout::heightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;37&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDockAreaLayout::sizeHint() const</primary></indexterm>QDockAreaLayout::sizeHint() const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--classdata-->
<TABLE id="cls-48695-1">
<TITLE>Secondary vtable for QDockAreaLayout</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>-80</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QDockAreaLayout</primary></indexterm>typeinfo for QDockAreaLayout</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QDockAreaLayout::~QDockAreaLayout()</primary></indexterm>non-virtual thunk to QDockAreaLayout::~QDockAreaLayout()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QDockAreaLayout::~QDockAreaLayout()</primary></indexterm>non-virtual thunk to QDockAreaLayout::~QDockAreaLayout()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QDockAreaLayout::sizeHint() const</primary></indexterm>non-virtual thunk to QDockAreaLayout::sizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QDockAreaLayout::minimumSize() const</primary></indexterm>non-virtual thunk to QDockAreaLayout::minimumSize() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QLayout::maximumSize() const</primary></indexterm>non-virtual thunk to QLayout::maximumSize() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QDockAreaLayout::expanding() const</primary></indexterm>non-virtual thunk to QDockAreaLayout::expanding() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QDockAreaLayout::setGeometry(QRect const&)</primary></indexterm>non-virtual thunk to QDockAreaLayout::setGeometry(QRect const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QLayout::geometry() const</primary></indexterm>non-virtual thunk to QLayout::geometry() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QLayout::isEmpty() const</primary></indexterm>non-virtual thunk to QLayout::isEmpty() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QDockAreaLayout::hasHeightForWidth() const</primary></indexterm>non-virtual thunk to QDockAreaLayout::hasHeightForWidth() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QDockAreaLayout::heightForWidth(int) const</primary></indexterm>non-virtual thunk to QDockAreaLayout::heightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QDockAreaLayout::invalidate()</primary></indexterm>non-virtual thunk to QDockAreaLayout::invalidate()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLayoutItem::widget()</primary></indexterm>QLayoutItem::widget()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QDockAreaLayout::iterator()</primary></indexterm>non-virtual thunk to QDockAreaLayout::iterator()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QLayout::layout()</primary></indexterm>non-virtual thunk to QLayout::layout()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLayoutItem::spacerItem()</primary></indexterm>QLayoutItem::spacerItem()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLayoutItem::setAlignment(int)</primary></indexterm>QLayoutItem::setAlignment(int)</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QDockAreaLayout  class
is described by <XREF LINKEND="rtti-57408">
</PARA>
<!--classdata-->
<TABLE ID="rtti-57408">
<TITLE>typeinfo for QDockAreaLayout</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QDockAreaLayout</primary></indexterm>typeinfo name for QDockAreaLayout</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QLayout</primary></indexterm>typeinfo for QLayout</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QBoxLayout</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QBoxLayout class
is described by <XREF LINKEND="cls-56097-0">
</PARA>
<!--classdata-->
<TABLE id="cls-56097-0">
<TITLE>Primary vtable for QBoxLayout</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QBoxLayout</primary></indexterm>typeinfo for QBoxLayout</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QBoxLayout::metaObject() const</primary></indexterm>NULL or QBoxLayout::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QBoxLayout::className() const</primary></indexterm>QBoxLayout::className() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QBoxLayout::qt_cast(char const*)</primary></indexterm>QBoxLayout::qt_cast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QBoxLayout::qt_invoke(int, QUObject*)</primary></indexterm>QBoxLayout::qt_invoke(int, QUObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QBoxLayout::qt_emit(int, QUObject*)</primary></indexterm>QBoxLayout::qt_emit(int, QUObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QBoxLayout::qt_property(int, int, QVariant*)</primary></indexterm>QBoxLayout::qt_property(int, int, QVariant*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QBoxLayout::~QBoxLayout()</primary></indexterm>QBoxLayout::~QBoxLayout()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QBoxLayout::~QBoxLayout()</primary></indexterm>QBoxLayout::~QBoxLayout()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::event(QEvent*)</primary></indexterm>QObject::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLayout::eventFilter(QObject*, QEvent*)</primary></indexterm>QLayout::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::setName(char const*)</primary></indexterm>QObject::setName(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::insertChild(QObject*)</primary></indexterm>QObject::insertChild(QObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::removeChild(QObject*)</primary></indexterm>QObject::removeChild(QObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::setProperty(char const*, QVariant const&)</primary></indexterm>QObject::setProperty(char const*, QVariant const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::property(char const*) const</primary></indexterm>QObject::property(char const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLayout::childEvent(QChildEvent*)</primary></indexterm>QLayout::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QCustomEvent*)</primary></indexterm>QObject::customEvent(QCustomEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::checkConnectArgs(char const*, QObject const*, char const*)</primary></indexterm>QObject::checkConnectArgs(char const*, QObject const*, char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLayout::setMargin(int)</primary></indexterm>QLayout::setMargin(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLayout::setSpacing(int)</primary></indexterm>QLayout::setSpacing(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLayout::setMenuBar(QMenuBar*)</primary></indexterm>QLayout::setMenuBar(QMenuBar*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLayout::setAutoAdd(bool)</primary></indexterm>QLayout::setAutoAdd(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QBoxLayout::invalidate()</primary></indexterm>QBoxLayout::invalidate()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLayout::geometry() const</primary></indexterm>QLayout::geometry() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QBoxLayout::addItem(QLayoutItem*)</primary></indexterm>QBoxLayout::addItem(QLayoutItem*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QBoxLayout::expanding() const</primary></indexterm>QBoxLayout::expanding() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QBoxLayout::minimumSize() const</primary></indexterm>QBoxLayout::minimumSize() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QBoxLayout::maximumSize() const</primary></indexterm>QBoxLayout::maximumSize() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QBoxLayout::setGeometry(QRect const&)</primary></indexterm>QBoxLayout::setGeometry(QRect const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QBoxLayout::iterator()</primary></indexterm>QBoxLayout::iterator()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;33&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLayout::isEmpty() const</primary></indexterm>QLayout::isEmpty() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;34&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLayout::layout()</primary></indexterm>QLayout::layout()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;35&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QBoxLayout::sizeHint() const</primary></indexterm>QBoxLayout::sizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;36&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QBoxLayout::hasHeightForWidth() const</primary></indexterm>QBoxLayout::hasHeightForWidth() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;37&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QBoxLayout::heightForWidth(int) const</primary></indexterm>QBoxLayout::heightForWidth(int) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--classdata-->
<TABLE id="cls-56097-1">
<TITLE>Secondary vtable for QBoxLayout</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>-80</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QBoxLayout</primary></indexterm>typeinfo for QBoxLayout</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QBoxLayout::~QBoxLayout()</primary></indexterm>non-virtual thunk to QBoxLayout::~QBoxLayout()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QBoxLayout::~QBoxLayout()</primary></indexterm>non-virtual thunk to QBoxLayout::~QBoxLayout()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QBoxLayout::sizeHint() const</primary></indexterm>non-virtual thunk to QBoxLayout::sizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QBoxLayout::minimumSize() const</primary></indexterm>non-virtual thunk to QBoxLayout::minimumSize() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QBoxLayout::maximumSize() const</primary></indexterm>non-virtual thunk to QBoxLayout::maximumSize() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QBoxLayout::expanding() const</primary></indexterm>non-virtual thunk to QBoxLayout::expanding() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QBoxLayout::setGeometry(QRect const&)</primary></indexterm>non-virtual thunk to QBoxLayout::setGeometry(QRect const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QLayout::geometry() const</primary></indexterm>non-virtual thunk to QLayout::geometry() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QLayout::isEmpty() const</primary></indexterm>non-virtual thunk to QLayout::isEmpty() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QBoxLayout::hasHeightForWidth() const</primary></indexterm>non-virtual thunk to QBoxLayout::hasHeightForWidth() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QBoxLayout::heightForWidth(int) const</primary></indexterm>non-virtual thunk to QBoxLayout::heightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QBoxLayout::invalidate()</primary></indexterm>non-virtual thunk to QBoxLayout::invalidate()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLayoutItem::widget()</primary></indexterm>QLayoutItem::widget()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QBoxLayout::iterator()</primary></indexterm>non-virtual thunk to QBoxLayout::iterator()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QLayout::layout()</primary></indexterm>non-virtual thunk to QLayout::layout()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLayoutItem::spacerItem()</primary></indexterm>QLayoutItem::spacerItem()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLayoutItem::setAlignment(int)</primary></indexterm>QLayoutItem::setAlignment(int)</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QBoxLayout  class
is described by <XREF LINKEND="rtti-51214">
</PARA>
<!--classdata-->
<TABLE ID="rtti-51214">
<TITLE>typeinfo for QBoxLayout</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QBoxLayout</primary></indexterm>typeinfo name for QBoxLayout</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QLayout</primary></indexterm>typeinfo for QLayout</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QLayout</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QLayout class
is described by <XREF LINKEND="cls-49924-0">
</PARA>
<!--classdata-->
<TABLE id="cls-49924-0">
<TITLE>Primary vtable for QLayout</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QLayout</primary></indexterm>typeinfo for QLayout</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLayout::metaObject() const</primary></indexterm>NULL or QLayout::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLayout::className() const</primary></indexterm>QLayout::className() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLayout::qt_cast(char const*)</primary></indexterm>QLayout::qt_cast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLayout::qt_invoke(int, QUObject*)</primary></indexterm>QLayout::qt_invoke(int, QUObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLayout::qt_emit(int, QUObject*)</primary></indexterm>QLayout::qt_emit(int, QUObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLayout::qt_property(int, int, QVariant*)</primary></indexterm>QLayout::qt_property(int, int, QVariant*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLayout::~QLayout()</primary></indexterm>QLayout::~QLayout()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLayout::~QLayout()</primary></indexterm>QLayout::~QLayout()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::event(QEvent*)</primary></indexterm>QObject::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLayout::eventFilter(QObject*, QEvent*)</primary></indexterm>QLayout::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::setName(char const*)</primary></indexterm>QObject::setName(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::insertChild(QObject*)</primary></indexterm>QObject::insertChild(QObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::removeChild(QObject*)</primary></indexterm>QObject::removeChild(QObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::setProperty(char const*, QVariant const&)</primary></indexterm>QObject::setProperty(char const*, QVariant const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::property(char const*) const</primary></indexterm>QObject::property(char const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLayout::childEvent(QChildEvent*)</primary></indexterm>QLayout::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QCustomEvent*)</primary></indexterm>QObject::customEvent(QCustomEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::checkConnectArgs(char const*, QObject const*, char const*)</primary></indexterm>QObject::checkConnectArgs(char const*, QObject const*, char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLayout::setMargin(int)</primary></indexterm>QLayout::setMargin(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLayout::setSpacing(int)</primary></indexterm>QLayout::setSpacing(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLayout::setMenuBar(QMenuBar*)</primary></indexterm>QLayout::setMenuBar(QMenuBar*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLayout::setAutoAdd(bool)</primary></indexterm>QLayout::setAutoAdd(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLayout::invalidate()</primary></indexterm>QLayout::invalidate()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLayout::geometry() const</primary></indexterm>QLayout::geometry() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLayout::expanding() const</primary></indexterm>QLayout::expanding() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLayout::minimumSize() const</primary></indexterm>QLayout::minimumSize() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLayout::maximumSize() const</primary></indexterm>QLayout::maximumSize() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;33&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLayout::isEmpty() const</primary></indexterm>QLayout::isEmpty() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;34&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLayout::layout()</primary></indexterm>QLayout::layout()</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--classdata-->
<TABLE id="cls-49924-1">
<TITLE>Secondary vtable for QLayout</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>-80</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QLayout</primary></indexterm>typeinfo for QLayout</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QLayout::~QLayout()</primary></indexterm>non-virtual thunk to QLayout::~QLayout()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QLayout::~QLayout()</primary></indexterm>non-virtual thunk to QLayout::~QLayout()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QLayout::minimumSize() const</primary></indexterm>non-virtual thunk to QLayout::minimumSize() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QLayout::maximumSize() const</primary></indexterm>non-virtual thunk to QLayout::maximumSize() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QLayout::expanding() const</primary></indexterm>non-virtual thunk to QLayout::expanding() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QLayout::geometry() const</primary></indexterm>non-virtual thunk to QLayout::geometry() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QLayout::isEmpty() const</primary></indexterm>non-virtual thunk to QLayout::isEmpty() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLayoutItem::hasHeightForWidth() const</primary></indexterm>QLayoutItem::hasHeightForWidth() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLayoutItem::heightForWidth(int) const</primary></indexterm>QLayoutItem::heightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QLayout::invalidate()</primary></indexterm>non-virtual thunk to QLayout::invalidate()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLayoutItem::widget()</primary></indexterm>QLayoutItem::widget()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QLayout::layout()</primary></indexterm>non-virtual thunk to QLayout::layout()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLayoutItem::spacerItem()</primary></indexterm>QLayoutItem::spacerItem()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLayoutItem::setAlignment(int)</primary></indexterm>QLayoutItem::setAlignment(int)</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QLayout  class
is described by <XREF LINKEND="rtti-57917">
</PARA>
<!--classdata-->
<TABLE ID="rtti-57917">
<TITLE>typeinfo for QLayout</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__vmi_class_type_info</primary></indexterm>vtable for __cxxabiv1::__vmi_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QLayout</primary></indexterm>typeinfo name for QLayout</ENTRY>
</ROW>
<ROW>
<ENTRY>flags:</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QObject</primary></indexterm>typeinfo for QObject</ENTRY>
<ENTRY>2</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QLayoutItem</primary></indexterm>typeinfo for QLayoutItem</ENTRY>
<ENTRY>10242</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QHBoxLayout</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QHBoxLayout class
is described by <XREF LINKEND="cls-59017-0">
</PARA>
<!--classdata-->
<TABLE id="cls-59017-0">
<TITLE>Primary vtable for QHBoxLayout</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QHBoxLayout</primary></indexterm>typeinfo for QHBoxLayout</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QHBoxLayout::metaObject() const</primary></indexterm>NULL or QHBoxLayout::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QHBoxLayout::className() const</primary></indexterm>QHBoxLayout::className() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QHBoxLayout::qt_cast(char const*)</primary></indexterm>QHBoxLayout::qt_cast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QHBoxLayout::qt_invoke(int, QUObject*)</primary></indexterm>QHBoxLayout::qt_invoke(int, QUObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QHBoxLayout::qt_emit(int, QUObject*)</primary></indexterm>QHBoxLayout::qt_emit(int, QUObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QHBoxLayout::qt_property(int, int, QVariant*)</primary></indexterm>QHBoxLayout::qt_property(int, int, QVariant*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QHBoxLayout::~QHBoxLayout()</primary></indexterm>QHBoxLayout::~QHBoxLayout()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QHBoxLayout::~QHBoxLayout()</primary></indexterm>QHBoxLayout::~QHBoxLayout()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::event(QEvent*)</primary></indexterm>QObject::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLayout::eventFilter(QObject*, QEvent*)</primary></indexterm>QLayout::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::setName(char const*)</primary></indexterm>QObject::setName(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::insertChild(QObject*)</primary></indexterm>QObject::insertChild(QObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::removeChild(QObject*)</primary></indexterm>QObject::removeChild(QObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::setProperty(char const*, QVariant const&)</primary></indexterm>QObject::setProperty(char const*, QVariant const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::property(char const*) const</primary></indexterm>QObject::property(char const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLayout::childEvent(QChildEvent*)</primary></indexterm>QLayout::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QCustomEvent*)</primary></indexterm>QObject::customEvent(QCustomEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::checkConnectArgs(char const*, QObject const*, char const*)</primary></indexterm>QObject::checkConnectArgs(char const*, QObject const*, char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLayout::setMargin(int)</primary></indexterm>QLayout::setMargin(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLayout::setSpacing(int)</primary></indexterm>QLayout::setSpacing(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLayout::setMenuBar(QMenuBar*)</primary></indexterm>QLayout::setMenuBar(QMenuBar*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLayout::setAutoAdd(bool)</primary></indexterm>QLayout::setAutoAdd(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QBoxLayout::invalidate()</primary></indexterm>QBoxLayout::invalidate()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLayout::geometry() const</primary></indexterm>QLayout::geometry() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QBoxLayout::addItem(QLayoutItem*)</primary></indexterm>QBoxLayout::addItem(QLayoutItem*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QBoxLayout::expanding() const</primary></indexterm>QBoxLayout::expanding() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QBoxLayout::minimumSize() const</primary></indexterm>QBoxLayout::minimumSize() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QBoxLayout::maximumSize() const</primary></indexterm>QBoxLayout::maximumSize() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QBoxLayout::setGeometry(QRect const&)</primary></indexterm>QBoxLayout::setGeometry(QRect const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QBoxLayout::iterator()</primary></indexterm>QBoxLayout::iterator()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;33&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLayout::isEmpty() const</primary></indexterm>QLayout::isEmpty() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;34&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLayout::layout()</primary></indexterm>QLayout::layout()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;35&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QBoxLayout::sizeHint() const</primary></indexterm>QBoxLayout::sizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;36&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QBoxLayout::hasHeightForWidth() const</primary></indexterm>QBoxLayout::hasHeightForWidth() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;37&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QBoxLayout::heightForWidth(int) const</primary></indexterm>QBoxLayout::heightForWidth(int) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--classdata-->
<TABLE id="cls-59017-1">
<TITLE>Secondary vtable for QHBoxLayout</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>-80</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QHBoxLayout</primary></indexterm>typeinfo for QHBoxLayout</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QHBoxLayout::~QHBoxLayout()</primary></indexterm>non-virtual thunk to QHBoxLayout::~QHBoxLayout()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QHBoxLayout::~QHBoxLayout()</primary></indexterm>non-virtual thunk to QHBoxLayout::~QHBoxLayout()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QBoxLayout::sizeHint() const</primary></indexterm>non-virtual thunk to QBoxLayout::sizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QBoxLayout::minimumSize() const</primary></indexterm>non-virtual thunk to QBoxLayout::minimumSize() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QBoxLayout::maximumSize() const</primary></indexterm>non-virtual thunk to QBoxLayout::maximumSize() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QBoxLayout::expanding() const</primary></indexterm>non-virtual thunk to QBoxLayout::expanding() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QBoxLayout::setGeometry(QRect const&)</primary></indexterm>non-virtual thunk to QBoxLayout::setGeometry(QRect const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QLayout::geometry() const</primary></indexterm>non-virtual thunk to QLayout::geometry() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QLayout::isEmpty() const</primary></indexterm>non-virtual thunk to QLayout::isEmpty() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QBoxLayout::hasHeightForWidth() const</primary></indexterm>non-virtual thunk to QBoxLayout::hasHeightForWidth() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QBoxLayout::heightForWidth(int) const</primary></indexterm>non-virtual thunk to QBoxLayout::heightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QBoxLayout::invalidate()</primary></indexterm>non-virtual thunk to QBoxLayout::invalidate()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLayoutItem::widget()</primary></indexterm>QLayoutItem::widget()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QBoxLayout::iterator()</primary></indexterm>non-virtual thunk to QBoxLayout::iterator()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QLayout::layout()</primary></indexterm>non-virtual thunk to QLayout::layout()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLayoutItem::spacerItem()</primary></indexterm>QLayoutItem::spacerItem()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLayoutItem::setAlignment(int)</primary></indexterm>QLayoutItem::setAlignment(int)</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QHBoxLayout  class
is described by <XREF LINKEND="rtti-59895">
</PARA>
<!--classdata-->
<TABLE ID="rtti-59895">
<TITLE>typeinfo for QHBoxLayout</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QHBoxLayout</primary></indexterm>typeinfo name for QHBoxLayout</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QBoxLayout</primary></indexterm>typeinfo for QBoxLayout</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QVBoxLayout</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QVBoxLayout class
is described by <XREF LINKEND="cls-58584-0">
</PARA>
<!--classdata-->
<TABLE id="cls-58584-0">
<TITLE>Primary vtable for QVBoxLayout</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QVBoxLayout</primary></indexterm>typeinfo for QVBoxLayout</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QVBoxLayout::metaObject() const</primary></indexterm>NULL or QVBoxLayout::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QVBoxLayout::className() const</primary></indexterm>QVBoxLayout::className() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QVBoxLayout::qt_cast(char const*)</primary></indexterm>QVBoxLayout::qt_cast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QVBoxLayout::qt_invoke(int, QUObject*)</primary></indexterm>QVBoxLayout::qt_invoke(int, QUObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QVBoxLayout::qt_emit(int, QUObject*)</primary></indexterm>QVBoxLayout::qt_emit(int, QUObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QVBoxLayout::qt_property(int, int, QVariant*)</primary></indexterm>QVBoxLayout::qt_property(int, int, QVariant*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QVBoxLayout::~QVBoxLayout()</primary></indexterm>QVBoxLayout::~QVBoxLayout()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QVBoxLayout::~QVBoxLayout()</primary></indexterm>QVBoxLayout::~QVBoxLayout()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::event(QEvent*)</primary></indexterm>QObject::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLayout::eventFilter(QObject*, QEvent*)</primary></indexterm>QLayout::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::setName(char const*)</primary></indexterm>QObject::setName(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::insertChild(QObject*)</primary></indexterm>QObject::insertChild(QObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::removeChild(QObject*)</primary></indexterm>QObject::removeChild(QObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::setProperty(char const*, QVariant const&)</primary></indexterm>QObject::setProperty(char const*, QVariant const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::property(char const*) const</primary></indexterm>QObject::property(char const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLayout::childEvent(QChildEvent*)</primary></indexterm>QLayout::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QCustomEvent*)</primary></indexterm>QObject::customEvent(QCustomEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::checkConnectArgs(char const*, QObject const*, char const*)</primary></indexterm>QObject::checkConnectArgs(char const*, QObject const*, char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLayout::setMargin(int)</primary></indexterm>QLayout::setMargin(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLayout::setSpacing(int)</primary></indexterm>QLayout::setSpacing(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLayout::setMenuBar(QMenuBar*)</primary></indexterm>QLayout::setMenuBar(QMenuBar*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLayout::setAutoAdd(bool)</primary></indexterm>QLayout::setAutoAdd(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QBoxLayout::invalidate()</primary></indexterm>QBoxLayout::invalidate()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLayout::geometry() const</primary></indexterm>QLayout::geometry() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QBoxLayout::addItem(QLayoutItem*)</primary></indexterm>QBoxLayout::addItem(QLayoutItem*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QBoxLayout::expanding() const</primary></indexterm>QBoxLayout::expanding() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QBoxLayout::minimumSize() const</primary></indexterm>QBoxLayout::minimumSize() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QBoxLayout::maximumSize() const</primary></indexterm>QBoxLayout::maximumSize() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QBoxLayout::setGeometry(QRect const&)</primary></indexterm>QBoxLayout::setGeometry(QRect const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QBoxLayout::iterator()</primary></indexterm>QBoxLayout::iterator()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;33&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLayout::isEmpty() const</primary></indexterm>QLayout::isEmpty() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;34&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLayout::layout()</primary></indexterm>QLayout::layout()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;35&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QBoxLayout::sizeHint() const</primary></indexterm>QBoxLayout::sizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;36&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QBoxLayout::hasHeightForWidth() const</primary></indexterm>QBoxLayout::hasHeightForWidth() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;37&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QBoxLayout::heightForWidth(int) const</primary></indexterm>QBoxLayout::heightForWidth(int) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--classdata-->
<TABLE id="cls-58584-1">
<TITLE>Secondary vtable for QVBoxLayout</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>-80</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QVBoxLayout</primary></indexterm>typeinfo for QVBoxLayout</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QVBoxLayout::~QVBoxLayout()</primary></indexterm>non-virtual thunk to QVBoxLayout::~QVBoxLayout()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QVBoxLayout::~QVBoxLayout()</primary></indexterm>non-virtual thunk to QVBoxLayout::~QVBoxLayout()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QBoxLayout::sizeHint() const</primary></indexterm>non-virtual thunk to QBoxLayout::sizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QBoxLayout::minimumSize() const</primary></indexterm>non-virtual thunk to QBoxLayout::minimumSize() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QBoxLayout::maximumSize() const</primary></indexterm>non-virtual thunk to QBoxLayout::maximumSize() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QBoxLayout::expanding() const</primary></indexterm>non-virtual thunk to QBoxLayout::expanding() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QBoxLayout::setGeometry(QRect const&)</primary></indexterm>non-virtual thunk to QBoxLayout::setGeometry(QRect const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QLayout::geometry() const</primary></indexterm>non-virtual thunk to QLayout::geometry() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QLayout::isEmpty() const</primary></indexterm>non-virtual thunk to QLayout::isEmpty() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QBoxLayout::hasHeightForWidth() const</primary></indexterm>non-virtual thunk to QBoxLayout::hasHeightForWidth() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QBoxLayout::heightForWidth(int) const</primary></indexterm>non-virtual thunk to QBoxLayout::heightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QBoxLayout::invalidate()</primary></indexterm>non-virtual thunk to QBoxLayout::invalidate()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLayoutItem::widget()</primary></indexterm>QLayoutItem::widget()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QBoxLayout::iterator()</primary></indexterm>non-virtual thunk to QBoxLayout::iterator()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QLayout::layout()</primary></indexterm>non-virtual thunk to QLayout::layout()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLayoutItem::spacerItem()</primary></indexterm>QLayoutItem::spacerItem()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLayoutItem::setAlignment(int)</primary></indexterm>QLayoutItem::setAlignment(int)</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QVBoxLayout  class
is described by <XREF LINKEND="rtti-59472">
</PARA>
<!--classdata-->
<TABLE ID="rtti-59472">
<TITLE>typeinfo for QVBoxLayout</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QVBoxLayout</primary></indexterm>typeinfo name for QVBoxLayout</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QBoxLayout</primary></indexterm>typeinfo for QBoxLayout</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QGLayoutIterator</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QGLayoutIterator class
is described in the generic part of this specification.
</PARA>
<PARA>
The Run Time Type Information for the QGLayoutIterator  class
is described by <XREF LINKEND="rtti-55855">
</PARA>
<!--classdata-->
<TABLE ID="rtti-55855">
<TITLE>typeinfo for QGLayoutIterator</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__vmi_class_type_info</primary></indexterm>vtable for __cxxabiv1::__vmi_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QGLayoutIterator</primary></indexterm>typeinfo name for QGLayoutIterator</ENTRY>
</ROW>
<ROW>
<ENTRY>flags:</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QShared</primary></indexterm>typeinfo for QShared</ENTRY>
<ENTRY>1026</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QWidgetItem</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QWidgetItem class
is described in the generic part of this specification.
</PARA>
<PARA>
The Run Time Type Information for the QWidgetItem  class
is described by <XREF LINKEND="rtti-50977">
</PARA>
<!--classdata-->
<TABLE ID="rtti-50977">
<TITLE>typeinfo for QWidgetItem</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QWidgetItem</primary></indexterm>typeinfo name for QWidgetItem</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QLayoutItem</primary></indexterm>typeinfo for QLayoutItem</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QGridLayout</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QGridLayout class
is described by <XREF LINKEND="cls-49573-0">
</PARA>
<!--classdata-->
<TABLE id="cls-49573-0">
<TITLE>Primary vtable for QGridLayout</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QGridLayout</primary></indexterm>typeinfo for QGridLayout</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGridLayout::metaObject() const</primary></indexterm>NULL or QGridLayout::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGridLayout::className() const</primary></indexterm>QGridLayout::className() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGridLayout::qt_cast(char const*)</primary></indexterm>QGridLayout::qt_cast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGridLayout::qt_invoke(int, QUObject*)</primary></indexterm>QGridLayout::qt_invoke(int, QUObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGridLayout::qt_emit(int, QUObject*)</primary></indexterm>QGridLayout::qt_emit(int, QUObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGridLayout::qt_property(int, int, QVariant*)</primary></indexterm>QGridLayout::qt_property(int, int, QVariant*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGridLayout::~QGridLayout()</primary></indexterm>QGridLayout::~QGridLayout()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGridLayout::~QGridLayout()</primary></indexterm>QGridLayout::~QGridLayout()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::event(QEvent*)</primary></indexterm>QObject::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLayout::eventFilter(QObject*, QEvent*)</primary></indexterm>QLayout::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::setName(char const*)</primary></indexterm>QObject::setName(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::insertChild(QObject*)</primary></indexterm>QObject::insertChild(QObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::removeChild(QObject*)</primary></indexterm>QObject::removeChild(QObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::setProperty(char const*, QVariant const&)</primary></indexterm>QObject::setProperty(char const*, QVariant const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::property(char const*) const</primary></indexterm>QObject::property(char const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLayout::childEvent(QChildEvent*)</primary></indexterm>QLayout::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QCustomEvent*)</primary></indexterm>QObject::customEvent(QCustomEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::checkConnectArgs(char const*, QObject const*, char const*)</primary></indexterm>QObject::checkConnectArgs(char const*, QObject const*, char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLayout::setMargin(int)</primary></indexterm>QLayout::setMargin(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLayout::setSpacing(int)</primary></indexterm>QLayout::setSpacing(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLayout::setMenuBar(QMenuBar*)</primary></indexterm>QLayout::setMenuBar(QMenuBar*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLayout::setAutoAdd(bool)</primary></indexterm>QLayout::setAutoAdd(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGridLayout::invalidate()</primary></indexterm>QGridLayout::invalidate()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLayout::geometry() const</primary></indexterm>QLayout::geometry() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGridLayout::addItem(QLayoutItem*)</primary></indexterm>QGridLayout::addItem(QLayoutItem*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGridLayout::expanding() const</primary></indexterm>QGridLayout::expanding() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGridLayout::minimumSize() const</primary></indexterm>QGridLayout::minimumSize() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGridLayout::maximumSize() const</primary></indexterm>QGridLayout::maximumSize() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGridLayout::setGeometry(QRect const&)</primary></indexterm>QGridLayout::setGeometry(QRect const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGridLayout::iterator()</primary></indexterm>QGridLayout::iterator()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;33&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLayout::isEmpty() const</primary></indexterm>QLayout::isEmpty() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;34&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLayout::layout()</primary></indexterm>QLayout::layout()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;35&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGridLayout::sizeHint() const</primary></indexterm>QGridLayout::sizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;36&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGridLayout::setRowStretch(int, int)</primary></indexterm>QGridLayout::setRowStretch(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;37&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGridLayout::setColStretch(int, int)</primary></indexterm>QGridLayout::setColStretch(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;38&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGridLayout::hasHeightForWidth() const</primary></indexterm>QGridLayout::hasHeightForWidth() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;39&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGridLayout::heightForWidth(int) const</primary></indexterm>QGridLayout::heightForWidth(int) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--classdata-->
<TABLE id="cls-49573-1">
<TITLE>Secondary vtable for QGridLayout</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>-80</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QGridLayout</primary></indexterm>typeinfo for QGridLayout</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QGridLayout::~QGridLayout()</primary></indexterm>non-virtual thunk to QGridLayout::~QGridLayout()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QGridLayout::~QGridLayout()</primary></indexterm>non-virtual thunk to QGridLayout::~QGridLayout()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QGridLayout::sizeHint() const</primary></indexterm>non-virtual thunk to QGridLayout::sizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QGridLayout::minimumSize() const</primary></indexterm>non-virtual thunk to QGridLayout::minimumSize() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QGridLayout::maximumSize() const</primary></indexterm>non-virtual thunk to QGridLayout::maximumSize() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QGridLayout::expanding() const</primary></indexterm>non-virtual thunk to QGridLayout::expanding() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QGridLayout::setGeometry(QRect const&)</primary></indexterm>non-virtual thunk to QGridLayout::setGeometry(QRect const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QLayout::geometry() const</primary></indexterm>non-virtual thunk to QLayout::geometry() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QLayout::isEmpty() const</primary></indexterm>non-virtual thunk to QLayout::isEmpty() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QGridLayout::hasHeightForWidth() const</primary></indexterm>non-virtual thunk to QGridLayout::hasHeightForWidth() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QGridLayout::heightForWidth(int) const</primary></indexterm>non-virtual thunk to QGridLayout::heightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QGridLayout::invalidate()</primary></indexterm>non-virtual thunk to QGridLayout::invalidate()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLayoutItem::widget()</primary></indexterm>QLayoutItem::widget()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QGridLayout::iterator()</primary></indexterm>non-virtual thunk to QGridLayout::iterator()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QLayout::layout()</primary></indexterm>non-virtual thunk to QLayout::layout()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLayoutItem::spacerItem()</primary></indexterm>QLayoutItem::spacerItem()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLayoutItem::setAlignment(int)</primary></indexterm>QLayoutItem::setAlignment(int)</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QGridLayout  class
is described by <XREF LINKEND="rtti-50117">
</PARA>
<!--classdata-->
<TABLE ID="rtti-50117">
<TITLE>typeinfo for QGridLayout</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QGridLayout</primary></indexterm>typeinfo name for QGridLayout</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QLayout</primary></indexterm>typeinfo for QLayout</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QSpacerItem</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QSpacerItem class
is described in the generic part of this specification.
</PARA>
<PARA>
The Run Time Type Information for the QSpacerItem  class
is described by <XREF LINKEND="rtti-56466">
</PARA>
<!--classdata-->
<TABLE ID="rtti-56466">
<TITLE>typeinfo for QSpacerItem</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QSpacerItem</primary></indexterm>typeinfo name for QSpacerItem</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QLayoutItem</primary></indexterm>typeinfo for QLayoutItem</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QLayoutItem</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QLayoutItem class
is described in the generic part of this specification.
</PARA>
<PARA>
The Run Time Type Information for the QLayoutItem  class
is described by <XREF LINKEND="rtti-55664">
</PARA>
<!--classdata-->
<TABLE ID="rtti-55664">
<TITLE>typeinfo for QLayoutItem</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__class_type_info</primary></indexterm>vtable for __cxxabiv1::__class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QLayoutItem</primary></indexterm>typeinfo name for QLayoutItem</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Interfaces for Qt3 Layouts</TITLE>
<PARA>
An LSB conforming implementation shall provide the architecture specific functions
for Qt3 Layouts specified in <XREF linkend="tbl-libqt-mt-qt3-l-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<TABLE id="tbl-libqt-mt-qt3-l-ints">
<TITLE>libqt-mt - Qt3 Layouts Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>_ZThn80_N10QBoxLayout10invalidateEv</primary></indexterm>_ZThn80_N10QBoxLayout10invalidateEv <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn80_N10QBoxLayout11setGeometryERK5QRect</primary></indexterm>_ZThn80_N10QBoxLayout11setGeometryERK5QRect <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn80_N10QBoxLayout8iteratorEv</primary></indexterm>_ZThn80_N10QBoxLayout8iteratorEv <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn80_N10QBoxLayoutD0Ev</primary></indexterm>_ZThn80_N10QBoxLayoutD0Ev <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn80_N10QBoxLayoutD1Ev</primary></indexterm>_ZThn80_N10QBoxLayoutD1Ev <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn80_N11QGridLayout10invalidateEv</primary></indexterm>_ZThn80_N11QGridLayout10invalidateEv <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn80_N11QGridLayout11setGeometryERK5QRect</primary></indexterm>_ZThn80_N11QGridLayout11setGeometryERK5QRect <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn80_N11QGridLayout8iteratorEv</primary></indexterm>_ZThn80_N11QGridLayout8iteratorEv <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn80_N11QGridLayoutD0Ev</primary></indexterm>_ZThn80_N11QGridLayoutD0Ev <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn80_N11QGridLayoutD1Ev</primary></indexterm>_ZThn80_N11QGridLayoutD1Ev <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn80_N11QHBoxLayoutD0Ev</primary></indexterm>_ZThn80_N11QHBoxLayoutD0Ev <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn80_N11QHBoxLayoutD1Ev</primary></indexterm>_ZThn80_N11QHBoxLayoutD1Ev <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn80_N11QVBoxLayoutD0Ev</primary></indexterm>_ZThn80_N11QVBoxLayoutD0Ev <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn80_N11QVBoxLayoutD1Ev</primary></indexterm>_ZThn80_N11QVBoxLayoutD1Ev <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn80_N15QDockAreaLayout10invalidateEv</primary></indexterm>_ZThn80_N15QDockAreaLayout10invalidateEv <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn80_N15QDockAreaLayout11setGeometryERK5QRect</primary></indexterm>_ZThn80_N15QDockAreaLayout11setGeometryERK5QRect <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn80_N15QDockAreaLayout8iteratorEv</primary></indexterm>_ZThn80_N15QDockAreaLayout8iteratorEv <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn80_N7QLayout10invalidateEv</primary></indexterm>_ZThn80_N7QLayout10invalidateEv <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn80_N7QLayout6layoutEv</primary></indexterm>_ZThn80_N7QLayout6layoutEv <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn80_N7QLayoutD0Ev</primary></indexterm>_ZThn80_N7QLayoutD0Ev <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn80_N7QLayoutD1Ev</primary></indexterm>_ZThn80_N7QLayoutD1Ev <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn80_NK10QBoxLayout11maximumSizeEv</primary></indexterm>_ZThn80_NK10QBoxLayout11maximumSizeEv <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn80_NK10QBoxLayout11minimumSizeEv</primary></indexterm>_ZThn80_NK10QBoxLayout11minimumSizeEv <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn80_NK10QBoxLayout14heightForWidthEi</primary></indexterm>_ZThn80_NK10QBoxLayout14heightForWidthEi <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn80_NK10QBoxLayout17hasHeightForWidthEv</primary></indexterm>_ZThn80_NK10QBoxLayout17hasHeightForWidthEv <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn80_NK10QBoxLayout8sizeHintEv</primary></indexterm>_ZThn80_NK10QBoxLayout8sizeHintEv <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn80_NK10QBoxLayout9expandingEv</primary></indexterm>_ZThn80_NK10QBoxLayout9expandingEv <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn80_NK11QGridLayout11maximumSizeEv</primary></indexterm>_ZThn80_NK11QGridLayout11maximumSizeEv <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn80_NK11QGridLayout11minimumSizeEv</primary></indexterm>_ZThn80_NK11QGridLayout11minimumSizeEv <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn80_NK11QGridLayout14heightForWidthEi</primary></indexterm>_ZThn80_NK11QGridLayout14heightForWidthEi <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn80_NK11QGridLayout17hasHeightForWidthEv</primary></indexterm>_ZThn80_NK11QGridLayout17hasHeightForWidthEv <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn80_NK11QGridLayout8sizeHintEv</primary></indexterm>_ZThn80_NK11QGridLayout8sizeHintEv <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn80_NK11QGridLayout9expandingEv</primary></indexterm>_ZThn80_NK11QGridLayout9expandingEv <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn80_NK15QDockAreaLayout11minimumSizeEv</primary></indexterm>_ZThn80_NK15QDockAreaLayout11minimumSizeEv <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn80_NK15QDockAreaLayout14heightForWidthEi</primary></indexterm>_ZThn80_NK15QDockAreaLayout14heightForWidthEi <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn80_NK15QDockAreaLayout17hasHeightForWidthEv</primary></indexterm>_ZThn80_NK15QDockAreaLayout17hasHeightForWidthEv <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn80_NK15QDockAreaLayout8sizeHintEv</primary></indexterm>_ZThn80_NK15QDockAreaLayout8sizeHintEv <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn80_NK7QLayout11maximumSizeEv</primary></indexterm>_ZThn80_NK7QLayout11maximumSizeEv <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn80_NK7QLayout11minimumSizeEv</primary></indexterm>_ZThn80_NK7QLayout11minimumSizeEv <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn80_NK7QLayout7isEmptyEv</primary></indexterm>_ZThn80_NK7QLayout7isEmptyEv <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn80_NK7QLayout8geometryEv</primary></indexterm>_ZThn80_NK7QLayout8geometryEv <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn80_NK7QLayout9expandingEv</primary></indexterm>_ZThn80_NK7QLayout9expandingEv <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>
</SECT2>
<!-- debug: database interface name Qt3 Dialogs -->
<SECT2>
<!--libgroup-->
<TITLE>Qt3 Dialogs</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Class data for QProgressDialog</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QProgressDialog class
is described by <XREF LINKEND="cls-54350-0">
</PARA>
<!--classdata-->
<TABLE id="cls-54350-0">
<TITLE>Primary vtable for QProgressDialog</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QProgressDialog</primary></indexterm>typeinfo for QProgressDialog</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QProgressDialog::metaObject() const</primary></indexterm>NULL or QProgressDialog::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QProgressDialog::className() const</primary></indexterm>QProgressDialog::className() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QProgressDialog::qt_cast(char const*)</primary></indexterm>QProgressDialog::qt_cast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QProgressDialog::qt_invoke(int, QUObject*)</primary></indexterm>QProgressDialog::qt_invoke(int, QUObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QProgressDialog::qt_emit(int, QUObject*)</primary></indexterm>QProgressDialog::qt_emit(int, QUObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QProgressDialog::qt_property(int, int, QVariant*)</primary></indexterm>QProgressDialog::qt_property(int, int, QVariant*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QProgressDialog::~QProgressDialog()</primary></indexterm>QProgressDialog::~QProgressDialog()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QProgressDialog::~QProgressDialog()</primary></indexterm>QProgressDialog::~QProgressDialog()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::event(QEvent*)</primary></indexterm>QWidget::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::eventFilter(QObject*, QEvent*)</primary></indexterm>QDialog::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setName(char const*)</primary></indexterm>QWidget::setName(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::insertChild(QObject*)</primary></indexterm>QObject::insertChild(QObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::removeChild(QObject*)</primary></indexterm>QObject::removeChild(QObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::setProperty(char const*, QVariant const&)</primary></indexterm>QObject::setProperty(char const*, QVariant const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::property(char const*) const</primary></indexterm>QObject::property(char const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QCustomEvent*)</primary></indexterm>QObject::customEvent(QCustomEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::checkConnectArgs(char const*, QObject const*, char const*)</primary></indexterm>QObject::checkConnectArgs(char const*, QObject const*, char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setEnabled(bool)</primary></indexterm>QWidget::setEnabled(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMinimumSize(int, int)</primary></indexterm>QWidget::setMinimumSize(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMaximumSize(int, int)</primary></indexterm>QWidget::setMaximumSize(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setSizeIncrement(int, int)</primary></indexterm>QWidget::setSizeIncrement(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundMode(Qt::BackgroundMode)</primary></indexterm>QWidget::setBackgroundMode(Qt::BackgroundMode)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setEraseColor(QColor const&)</primary></indexterm>QWidget::setEraseColor(QColor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setErasePixmap(QPixmap const&)</primary></indexterm>QWidget::setErasePixmap(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setPalette(QPalette const&)</primary></indexterm>QWidget::setPalette(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setPaletteBackgroundColor(QColor const&)</primary></indexterm>QWidget::setPaletteBackgroundColor(QColor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setPaletteBackgroundPixmap(QPixmap const&)</primary></indexterm>QWidget::setPaletteBackgroundPixmap(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFont(QFont const&)</primary></indexterm>QWidget::setFont(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setCursor(QCursor const&)</primary></indexterm>QWidget::setCursor(QCursor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;33&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::unsetCursor()</primary></indexterm>QWidget::unsetCursor()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;34&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMask(QBitmap const&)</primary></indexterm>QWidget::setMask(QBitmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;35&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMask(QRegion const&)</primary></indexterm>QWidget::setMask(QRegion const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;36&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundColor(QColor const&)</primary></indexterm>QWidget::setBackgroundColor(QColor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;37&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundPixmap(QPixmap const&)</primary></indexterm>QWidget::setBackgroundPixmap(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;38&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setCaption(QString const&)</primary></indexterm>QWidget::setCaption(QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;39&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setIcon(QPixmap const&)</primary></indexterm>QWidget::setIcon(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;40&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setIconText(QString const&)</primary></indexterm>QWidget::setIconText(QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;41&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMouseTracking(bool)</primary></indexterm>QWidget::setMouseTracking(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;42&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFocus()</primary></indexterm>QWidget::setFocus()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;43&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setActiveWindow()</primary></indexterm>QWidget::setActiveWindow()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;44&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFocusPolicy(QWidget::FocusPolicy)</primary></indexterm>QWidget::setFocusPolicy(QWidget::FocusPolicy)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;45&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFocusProxy(QWidget*)</primary></indexterm>QWidget::setFocusProxy(QWidget*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;46&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setUpdatesEnabled(bool)</primary></indexterm>QWidget::setUpdatesEnabled(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;47&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::show()</primary></indexterm>QDialog::show()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;48&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::hide()</primary></indexterm>QDialog::hide()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;49&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showMinimized()</primary></indexterm>QWidget::showMinimized()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;50&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showMaximized()</primary></indexterm>QWidget::showMaximized()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;51&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showNormal()</primary></indexterm>QWidget::showNormal()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;52&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::polish()</primary></indexterm>QWidget::polish()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;53&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::move(int, int)</primary></indexterm>QDialog::move(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;54&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::resize(int, int)</primary></indexterm>QDialog::resize(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;55&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::setGeometry(int, int, int, int)</primary></indexterm>QDialog::setGeometry(int, int, int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;56&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::setGeometry(QRect const&)</primary></indexterm>QDialog::setGeometry(QRect const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;57&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::close(bool)</primary></indexterm>QWidget::close(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;58&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QProgressDialog::sizeHint() const</primary></indexterm>QProgressDialog::sizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;59&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::minimumSizeHint() const</primary></indexterm>QDialog::minimumSizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;60&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::sizePolicy() const</primary></indexterm>QWidget::sizePolicy() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;61&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setSizePolicy(QSizePolicy)</primary></indexterm>QWidget::setSizePolicy(QSizePolicy)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;62&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::heightForWidth(int) const</primary></indexterm>QWidget::heightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;63&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::adjustSize()</primary></indexterm>QWidget::adjustSize()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;64&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::reparent(QWidget*, unsigned int, QPoint const&, bool)</primary></indexterm>QWidget::reparent(QWidget*, unsigned int, QPoint const&, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;65&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setAcceptDrops(bool)</primary></indexterm>QWidget::setAcceptDrops(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;66&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setAutoMask(bool)</primary></indexterm>QWidget::setAutoMask(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;67&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundOrigin(QWidget::BackgroundOrigin)</primary></indexterm>QWidget::setBackgroundOrigin(QWidget::BackgroundOrigin)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;68&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::customWhatsThis() const</primary></indexterm>QWidget::customWhatsThis() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;69&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mousePressEvent(QMouseEvent*)</primary></indexterm>QWidget::mousePressEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;70&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseReleaseEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseReleaseEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;71&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseDoubleClickEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseDoubleClickEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;72&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseMoveEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseMoveEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;73&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::wheelEvent(QWheelEvent*)</primary></indexterm>QWidget::wheelEvent(QWheelEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;74&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::keyPressEvent(QKeyEvent*)</primary></indexterm>QDialog::keyPressEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;75&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyReleaseEvent(QKeyEvent*)</primary></indexterm>QWidget::keyReleaseEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;76&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusInEvent(QFocusEvent*)</primary></indexterm>QWidget::focusInEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;77&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusOutEvent(QFocusEvent*)</primary></indexterm>QWidget::focusOutEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;78&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enterEvent(QEvent*)</primary></indexterm>QWidget::enterEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;79&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::leaveEvent(QEvent*)</primary></indexterm>QWidget::leaveEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;80&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paintEvent(QPaintEvent*)</primary></indexterm>QWidget::paintEvent(QPaintEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;81&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::moveEvent(QMoveEvent*)</primary></indexterm>QWidget::moveEvent(QMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;82&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QProgressDialog::resizeEvent(QResizeEvent*)</primary></indexterm>QProgressDialog::resizeEvent(QResizeEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;83&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QProgressDialog::closeEvent(QCloseEvent*)</primary></indexterm>QProgressDialog::closeEvent(QCloseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;84&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::contextMenuEvent(QContextMenuEvent*)</primary></indexterm>QDialog::contextMenuEvent(QContextMenuEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;85&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::imStartEvent(QIMEvent*)</primary></indexterm>QWidget::imStartEvent(QIMEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;86&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::imComposeEvent(QIMEvent*)</primary></indexterm>QWidget::imComposeEvent(QIMEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;87&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::imEndEvent(QIMEvent*)</primary></indexterm>QWidget::imEndEvent(QIMEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;88&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::tabletEvent(QTabletEvent*)</primary></indexterm>QWidget::tabletEvent(QTabletEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;89&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragEnterEvent(QDragEnterEvent*)</primary></indexterm>QWidget::dragEnterEvent(QDragEnterEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;90&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragMoveEvent(QDragMoveEvent*)</primary></indexterm>QWidget::dragMoveEvent(QDragMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;91&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragLeaveEvent(QDragLeaveEvent*)</primary></indexterm>QWidget::dragLeaveEvent(QDragLeaveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;92&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dropEvent(QDropEvent*)</primary></indexterm>QWidget::dropEvent(QDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;93&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QProgressDialog::showEvent(QShowEvent*)</primary></indexterm>QProgressDialog::showEvent(QShowEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;94&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::hideEvent(QHideEvent*)</primary></indexterm>QWidget::hideEvent(QHideEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;95&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::x11Event(_XEvent*)</primary></indexterm>QWidget::x11Event(_XEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;96&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::updateMask()</primary></indexterm>QWidget::updateMask()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;97&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QProgressDialog::styleChange(QStyle&)</primary></indexterm>QProgressDialog::styleChange(QStyle&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;98&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enabledChange(bool)</primary></indexterm>QWidget::enabledChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;99&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paletteChange(QPalette const&)</primary></indexterm>QWidget::paletteChange(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;100&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::fontChange(QFont const&)</primary></indexterm>QWidget::fontChange(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;101&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::windowActivationChange(bool)</primary></indexterm>QWidget::windowActivationChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;102&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::metric(int) const</primary></indexterm>QWidget::metric(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;103&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::create(unsigned long, bool, bool)</primary></indexterm>QWidget::create(unsigned long, bool, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;104&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::destroy(bool, bool)</primary></indexterm>QWidget::destroy(bool, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;105&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setWState(unsigned int)</primary></indexterm>NULL or QWidget::setWState(unsigned int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;106&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setWFlags(unsigned int)</primary></indexterm>NULL or QWidget::setWFlags(unsigned int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;107&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusNextPrevChild(bool)</primary></indexterm>QWidget::focusNextPrevChild(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;108&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setKeyCompression(bool)</primary></indexterm>QWidget::setKeyCompression(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;109&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMicroFocusHint(int, int, int, int, bool, QFont*)</primary></indexterm>QWidget::setMicroFocusHint(int, int, int, int, bool, QFont*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;110&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::done(int)</primary></indexterm>QDialog::done(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;111&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::accept()</primary></indexterm>QDialog::accept()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;112&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::reject()</primary></indexterm>QDialog::reject()</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--classdata-->
<TABLE id="cls-54350-1">
<TITLE>Secondary vtable for QProgressDialog</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>-80</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QProgressDialog</primary></indexterm>typeinfo for QProgressDialog</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QProgressDialog::~QProgressDialog()</primary></indexterm>non-virtual thunk to QProgressDialog::~QProgressDialog()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QProgressDialog::~QProgressDialog()</primary></indexterm>non-virtual thunk to QProgressDialog::~QProgressDialog()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::setResolution(int)</primary></indexterm>QPaintDevice::setResolution(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::resolution() const</primary></indexterm>QPaintDevice::resolution() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::handle() const</primary></indexterm>QPaintDevice::handle() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::x11RenderHandle() const</primary></indexterm>QPaintDevice::x11RenderHandle() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::setX11Data(QPaintDeviceX11Data const*)</primary></indexterm>QPaintDevice::setX11Data(QPaintDeviceX11Data const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::cmd(int, QPainter*, QPDevCmdParam*)</primary></indexterm>QPaintDevice::cmd(int, QPainter*, QPDevCmdParam*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::metric(int) const</primary></indexterm>non-virtual thunk to QWidget::metric(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::fontMet(QFont*, int, char const*, int) const</primary></indexterm>QPaintDevice::fontMet(QFont*, int, char const*, int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::fontInf(QFont*, int) const</primary></indexterm>QPaintDevice::fontInf(QFont*, int) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QProgressDialog  class
is described by <XREF LINKEND="rtti-50797">
</PARA>
<!--classdata-->
<TABLE ID="rtti-50797">
<TITLE>typeinfo for QProgressDialog</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QProgressDialog</primary></indexterm>typeinfo name for QProgressDialog</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QDialog</primary></indexterm>typeinfo for QDialog</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QWizard</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QWizard class
is described by <XREF LINKEND="cls-55301-0">
</PARA>
<!--classdata-->
<TABLE id="cls-55301-0">
<TITLE>Primary vtable for QWizard</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QWizard</primary></indexterm>typeinfo for QWizard</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWizard::metaObject() const</primary></indexterm>NULL or QWizard::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWizard::className() const</primary></indexterm>QWizard::className() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWizard::qt_cast(char const*)</primary></indexterm>QWizard::qt_cast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWizard::qt_invoke(int, QUObject*)</primary></indexterm>QWizard::qt_invoke(int, QUObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWizard::qt_emit(int, QUObject*)</primary></indexterm>QWizard::qt_emit(int, QUObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWizard::qt_property(int, int, QVariant*)</primary></indexterm>QWizard::qt_property(int, int, QVariant*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWizard::~QWizard()</primary></indexterm>QWizard::~QWizard()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWizard::~QWizard()</primary></indexterm>QWizard::~QWizard()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::event(QEvent*)</primary></indexterm>QWidget::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWizard::eventFilter(QObject*, QEvent*)</primary></indexterm>QWizard::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setName(char const*)</primary></indexterm>QWidget::setName(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::insertChild(QObject*)</primary></indexterm>QObject::insertChild(QObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::removeChild(QObject*)</primary></indexterm>QObject::removeChild(QObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::setProperty(char const*, QVariant const&)</primary></indexterm>QObject::setProperty(char const*, QVariant const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::property(char const*) const</primary></indexterm>QObject::property(char const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QCustomEvent*)</primary></indexterm>QObject::customEvent(QCustomEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::checkConnectArgs(char const*, QObject const*, char const*)</primary></indexterm>QObject::checkConnectArgs(char const*, QObject const*, char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setEnabled(bool)</primary></indexterm>QWidget::setEnabled(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMinimumSize(int, int)</primary></indexterm>QWidget::setMinimumSize(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMaximumSize(int, int)</primary></indexterm>QWidget::setMaximumSize(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setSizeIncrement(int, int)</primary></indexterm>QWidget::setSizeIncrement(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundMode(Qt::BackgroundMode)</primary></indexterm>QWidget::setBackgroundMode(Qt::BackgroundMode)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setEraseColor(QColor const&)</primary></indexterm>QWidget::setEraseColor(QColor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setErasePixmap(QPixmap const&)</primary></indexterm>QWidget::setErasePixmap(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setPalette(QPalette const&)</primary></indexterm>QWidget::setPalette(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setPaletteBackgroundColor(QColor const&)</primary></indexterm>QWidget::setPaletteBackgroundColor(QColor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setPaletteBackgroundPixmap(QPixmap const&)</primary></indexterm>QWidget::setPaletteBackgroundPixmap(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWizard::setFont(QFont const&)</primary></indexterm>QWizard::setFont(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setCursor(QCursor const&)</primary></indexterm>QWidget::setCursor(QCursor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;33&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::unsetCursor()</primary></indexterm>QWidget::unsetCursor()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;34&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMask(QBitmap const&)</primary></indexterm>QWidget::setMask(QBitmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;35&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMask(QRegion const&)</primary></indexterm>QWidget::setMask(QRegion const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;36&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundColor(QColor const&)</primary></indexterm>QWidget::setBackgroundColor(QColor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;37&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundPixmap(QPixmap const&)</primary></indexterm>QWidget::setBackgroundPixmap(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;38&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setCaption(QString const&)</primary></indexterm>QWidget::setCaption(QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;39&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setIcon(QPixmap const&)</primary></indexterm>QWidget::setIcon(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;40&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setIconText(QString const&)</primary></indexterm>QWidget::setIconText(QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;41&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMouseTracking(bool)</primary></indexterm>QWidget::setMouseTracking(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;42&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFocus()</primary></indexterm>QWidget::setFocus()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;43&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setActiveWindow()</primary></indexterm>QWidget::setActiveWindow()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;44&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFocusPolicy(QWidget::FocusPolicy)</primary></indexterm>QWidget::setFocusPolicy(QWidget::FocusPolicy)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;45&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFocusProxy(QWidget*)</primary></indexterm>QWidget::setFocusProxy(QWidget*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;46&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setUpdatesEnabled(bool)</primary></indexterm>QWidget::setUpdatesEnabled(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;47&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWizard::show()</primary></indexterm>QWizard::show()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;48&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::hide()</primary></indexterm>QDialog::hide()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;49&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showMinimized()</primary></indexterm>QWidget::showMinimized()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;50&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showMaximized()</primary></indexterm>QWidget::showMaximized()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;51&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showNormal()</primary></indexterm>QWidget::showNormal()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;52&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::polish()</primary></indexterm>QWidget::polish()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;53&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::move(int, int)</primary></indexterm>QDialog::move(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;54&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::resize(int, int)</primary></indexterm>QDialog::resize(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;55&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::setGeometry(int, int, int, int)</primary></indexterm>QDialog::setGeometry(int, int, int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;56&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::setGeometry(QRect const&)</primary></indexterm>QDialog::setGeometry(QRect const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;57&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::close(bool)</primary></indexterm>QWidget::close(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;58&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::sizeHint() const</primary></indexterm>QDialog::sizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;59&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::minimumSizeHint() const</primary></indexterm>QDialog::minimumSizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;60&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::sizePolicy() const</primary></indexterm>QWidget::sizePolicy() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;61&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setSizePolicy(QSizePolicy)</primary></indexterm>QWidget::setSizePolicy(QSizePolicy)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;62&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::heightForWidth(int) const</primary></indexterm>QWidget::heightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;63&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::adjustSize()</primary></indexterm>QWidget::adjustSize()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;64&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::reparent(QWidget*, unsigned int, QPoint const&, bool)</primary></indexterm>QWidget::reparent(QWidget*, unsigned int, QPoint const&, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;65&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setAcceptDrops(bool)</primary></indexterm>QWidget::setAcceptDrops(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;66&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setAutoMask(bool)</primary></indexterm>QWidget::setAutoMask(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;67&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundOrigin(QWidget::BackgroundOrigin)</primary></indexterm>QWidget::setBackgroundOrigin(QWidget::BackgroundOrigin)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;68&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::customWhatsThis() const</primary></indexterm>QWidget::customWhatsThis() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;69&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mousePressEvent(QMouseEvent*)</primary></indexterm>QWidget::mousePressEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;70&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseReleaseEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseReleaseEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;71&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseDoubleClickEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseDoubleClickEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;72&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseMoveEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseMoveEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;73&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::wheelEvent(QWheelEvent*)</primary></indexterm>QWidget::wheelEvent(QWheelEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;74&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::keyPressEvent(QKeyEvent*)</primary></indexterm>QDialog::keyPressEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;75&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyReleaseEvent(QKeyEvent*)</primary></indexterm>QWidget::keyReleaseEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;76&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusInEvent(QFocusEvent*)</primary></indexterm>QWidget::focusInEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;77&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusOutEvent(QFocusEvent*)</primary></indexterm>QWidget::focusOutEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;78&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enterEvent(QEvent*)</primary></indexterm>QWidget::enterEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;79&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::leaveEvent(QEvent*)</primary></indexterm>QWidget::leaveEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;80&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paintEvent(QPaintEvent*)</primary></indexterm>QWidget::paintEvent(QPaintEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;81&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::moveEvent(QMoveEvent*)</primary></indexterm>QWidget::moveEvent(QMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;82&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::resizeEvent(QResizeEvent*)</primary></indexterm>QDialog::resizeEvent(QResizeEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;83&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::closeEvent(QCloseEvent*)</primary></indexterm>QDialog::closeEvent(QCloseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;84&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::contextMenuEvent(QContextMenuEvent*)</primary></indexterm>QDialog::contextMenuEvent(QContextMenuEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;85&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::imStartEvent(QIMEvent*)</primary></indexterm>QWidget::imStartEvent(QIMEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;86&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::imComposeEvent(QIMEvent*)</primary></indexterm>QWidget::imComposeEvent(QIMEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;87&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::imEndEvent(QIMEvent*)</primary></indexterm>QWidget::imEndEvent(QIMEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;88&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::tabletEvent(QTabletEvent*)</primary></indexterm>QWidget::tabletEvent(QTabletEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;89&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragEnterEvent(QDragEnterEvent*)</primary></indexterm>QWidget::dragEnterEvent(QDragEnterEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;90&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragMoveEvent(QDragMoveEvent*)</primary></indexterm>QWidget::dragMoveEvent(QDragMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;91&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragLeaveEvent(QDragLeaveEvent*)</primary></indexterm>QWidget::dragLeaveEvent(QDragLeaveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;92&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dropEvent(QDropEvent*)</primary></indexterm>QWidget::dropEvent(QDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;93&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showEvent(QShowEvent*)</primary></indexterm>QWidget::showEvent(QShowEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;94&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::hideEvent(QHideEvent*)</primary></indexterm>QWidget::hideEvent(QHideEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;95&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::x11Event(_XEvent*)</primary></indexterm>QWidget::x11Event(_XEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;96&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::updateMask()</primary></indexterm>QWidget::updateMask()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;97&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::styleChange(QStyle&)</primary></indexterm>QWidget::styleChange(QStyle&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;98&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enabledChange(bool)</primary></indexterm>QWidget::enabledChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;99&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paletteChange(QPalette const&)</primary></indexterm>QWidget::paletteChange(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;100&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::fontChange(QFont const&)</primary></indexterm>QWidget::fontChange(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;101&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::windowActivationChange(bool)</primary></indexterm>QWidget::windowActivationChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;102&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::metric(int) const</primary></indexterm>QWidget::metric(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;103&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::create(unsigned long, bool, bool)</primary></indexterm>QWidget::create(unsigned long, bool, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;104&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::destroy(bool, bool)</primary></indexterm>QWidget::destroy(bool, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;105&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setWState(unsigned int)</primary></indexterm>NULL or QWidget::setWState(unsigned int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;106&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setWFlags(unsigned int)</primary></indexterm>NULL or QWidget::setWFlags(unsigned int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;107&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusNextPrevChild(bool)</primary></indexterm>QWidget::focusNextPrevChild(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;108&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setKeyCompression(bool)</primary></indexterm>QWidget::setKeyCompression(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;109&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMicroFocusHint(int, int, int, int, bool, QFont*)</primary></indexterm>QWidget::setMicroFocusHint(int, int, int, int, bool, QFont*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;110&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::done(int)</primary></indexterm>QDialog::done(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;111&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::accept()</primary></indexterm>QDialog::accept()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;112&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::reject()</primary></indexterm>QDialog::reject()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;113&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWizard::addPage(QWidget*, QString const&)</primary></indexterm>QWizard::addPage(QWidget*, QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;114&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWizard::insertPage(QWidget*, QString const&, int)</primary></indexterm>QWizard::insertPage(QWidget*, QString const&, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;115&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWizard::removePage(QWidget*)</primary></indexterm>QWizard::removePage(QWidget*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;116&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWizard::showPage(QWidget*)</primary></indexterm>QWizard::showPage(QWidget*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;117&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWizard::appropriate(QWidget*) const</primary></indexterm>QWizard::appropriate(QWidget*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;118&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWizard::setAppropriate(QWidget*, bool)</primary></indexterm>QWizard::setAppropriate(QWidget*, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;119&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWizard::setBackEnabled(QWidget*, bool)</primary></indexterm>QWizard::setBackEnabled(QWidget*, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;120&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWizard::setNextEnabled(QWidget*, bool)</primary></indexterm>QWizard::setNextEnabled(QWidget*, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;121&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWizard::setFinishEnabled(QWidget*, bool)</primary></indexterm>QWizard::setFinishEnabled(QWidget*, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;122&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWizard::setHelpEnabled(QWidget*, bool)</primary></indexterm>QWizard::setHelpEnabled(QWidget*, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;123&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWizard::setFinish(QWidget*, bool)</primary></indexterm>NULL or QWizard::setFinish(QWidget*, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;124&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWizard::back()</primary></indexterm>QWizard::back()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;125&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWizard::next()</primary></indexterm>QWizard::next()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;126&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWizard::help()</primary></indexterm>QWizard::help()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;127&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWizard::layOutButtonRow(QHBoxLayout*)</primary></indexterm>QWizard::layOutButtonRow(QHBoxLayout*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;128&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWizard::layOutTitleRow(QHBoxLayout*, QString const&)</primary></indexterm>QWizard::layOutTitleRow(QHBoxLayout*, QString const&)</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--classdata-->
<TABLE id="cls-55301-1">
<TITLE>Secondary vtable for QWizard</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>-80</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QWizard</primary></indexterm>typeinfo for QWizard</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWizard::~QWizard()</primary></indexterm>non-virtual thunk to QWizard::~QWizard()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWizard::~QWizard()</primary></indexterm>non-virtual thunk to QWizard::~QWizard()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::setResolution(int)</primary></indexterm>QPaintDevice::setResolution(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::resolution() const</primary></indexterm>QPaintDevice::resolution() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::handle() const</primary></indexterm>QPaintDevice::handle() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::x11RenderHandle() const</primary></indexterm>QPaintDevice::x11RenderHandle() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::setX11Data(QPaintDeviceX11Data const*)</primary></indexterm>QPaintDevice::setX11Data(QPaintDeviceX11Data const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::cmd(int, QPainter*, QPDevCmdParam*)</primary></indexterm>QPaintDevice::cmd(int, QPainter*, QPDevCmdParam*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::metric(int) const</primary></indexterm>non-virtual thunk to QWidget::metric(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::fontMet(QFont*, int, char const*, int) const</primary></indexterm>QPaintDevice::fontMet(QFont*, int, char const*, int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::fontInf(QFont*, int) const</primary></indexterm>QPaintDevice::fontInf(QFont*, int) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QWizard  class
is described by <XREF LINKEND="rtti-59465">
</PARA>
<!--classdata-->
<TABLE ID="rtti-59465">
<TITLE>typeinfo for QWizard</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QWizard</primary></indexterm>typeinfo name for QWizard</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QDialog</primary></indexterm>typeinfo for QDialog</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QSemiModal</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QSemiModal class
is described by <XREF LINKEND="cls-55817-0">
</PARA>
<!--classdata-->
<TABLE id="cls-55817-0">
<TITLE>Primary vtable for QSemiModal</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QSemiModal</primary></indexterm>typeinfo for QSemiModal</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSemiModal::metaObject() const</primary></indexterm>NULL or QSemiModal::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSemiModal::className() const</primary></indexterm>QSemiModal::className() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSemiModal::qt_cast(char const*)</primary></indexterm>QSemiModal::qt_cast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSemiModal::qt_invoke(int, QUObject*)</primary></indexterm>QSemiModal::qt_invoke(int, QUObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSemiModal::qt_emit(int, QUObject*)</primary></indexterm>QSemiModal::qt_emit(int, QUObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSemiModal::qt_property(int, int, QVariant*)</primary></indexterm>QSemiModal::qt_property(int, int, QVariant*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSemiModal::~QSemiModal()</primary></indexterm>NULL or QSemiModal::~QSemiModal()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSemiModal::~QSemiModal()</primary></indexterm>NULL or QSemiModal::~QSemiModal()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::event(QEvent*)</primary></indexterm>QWidget::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::eventFilter(QObject*, QEvent*)</primary></indexterm>QDialog::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setName(char const*)</primary></indexterm>QWidget::setName(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::insertChild(QObject*)</primary></indexterm>QObject::insertChild(QObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::removeChild(QObject*)</primary></indexterm>QObject::removeChild(QObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::setProperty(char const*, QVariant const&)</primary></indexterm>QObject::setProperty(char const*, QVariant const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::property(char const*) const</primary></indexterm>QObject::property(char const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QCustomEvent*)</primary></indexterm>QObject::customEvent(QCustomEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::checkConnectArgs(char const*, QObject const*, char const*)</primary></indexterm>QObject::checkConnectArgs(char const*, QObject const*, char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setEnabled(bool)</primary></indexterm>QWidget::setEnabled(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMinimumSize(int, int)</primary></indexterm>QWidget::setMinimumSize(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMaximumSize(int, int)</primary></indexterm>QWidget::setMaximumSize(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setSizeIncrement(int, int)</primary></indexterm>QWidget::setSizeIncrement(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundMode(Qt::BackgroundMode)</primary></indexterm>QWidget::setBackgroundMode(Qt::BackgroundMode)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setEraseColor(QColor const&)</primary></indexterm>QWidget::setEraseColor(QColor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setErasePixmap(QPixmap const&)</primary></indexterm>QWidget::setErasePixmap(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setPalette(QPalette const&)</primary></indexterm>QWidget::setPalette(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setPaletteBackgroundColor(QColor const&)</primary></indexterm>QWidget::setPaletteBackgroundColor(QColor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setPaletteBackgroundPixmap(QPixmap const&)</primary></indexterm>QWidget::setPaletteBackgroundPixmap(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFont(QFont const&)</primary></indexterm>QWidget::setFont(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setCursor(QCursor const&)</primary></indexterm>QWidget::setCursor(QCursor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;33&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::unsetCursor()</primary></indexterm>QWidget::unsetCursor()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;34&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMask(QBitmap const&)</primary></indexterm>QWidget::setMask(QBitmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;35&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMask(QRegion const&)</primary></indexterm>QWidget::setMask(QRegion const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;36&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundColor(QColor const&)</primary></indexterm>QWidget::setBackgroundColor(QColor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;37&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundPixmap(QPixmap const&)</primary></indexterm>QWidget::setBackgroundPixmap(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;38&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setCaption(QString const&)</primary></indexterm>QWidget::setCaption(QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;39&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setIcon(QPixmap const&)</primary></indexterm>QWidget::setIcon(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;40&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setIconText(QString const&)</primary></indexterm>QWidget::setIconText(QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;41&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMouseTracking(bool)</primary></indexterm>QWidget::setMouseTracking(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;42&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFocus()</primary></indexterm>QWidget::setFocus()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;43&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setActiveWindow()</primary></indexterm>QWidget::setActiveWindow()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;44&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFocusPolicy(QWidget::FocusPolicy)</primary></indexterm>QWidget::setFocusPolicy(QWidget::FocusPolicy)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;45&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFocusProxy(QWidget*)</primary></indexterm>QWidget::setFocusProxy(QWidget*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;46&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setUpdatesEnabled(bool)</primary></indexterm>QWidget::setUpdatesEnabled(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;47&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::show()</primary></indexterm>QDialog::show()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;48&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::hide()</primary></indexterm>QDialog::hide()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;49&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showMinimized()</primary></indexterm>QWidget::showMinimized()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;50&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showMaximized()</primary></indexterm>QWidget::showMaximized()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;51&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showNormal()</primary></indexterm>QWidget::showNormal()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;52&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::polish()</primary></indexterm>QWidget::polish()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;53&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::move(int, int)</primary></indexterm>QDialog::move(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;54&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::resize(int, int)</primary></indexterm>QDialog::resize(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;55&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::setGeometry(int, int, int, int)</primary></indexterm>QDialog::setGeometry(int, int, int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;56&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::setGeometry(QRect const&)</primary></indexterm>QDialog::setGeometry(QRect const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;57&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::close(bool)</primary></indexterm>QWidget::close(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;58&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::sizeHint() const</primary></indexterm>QDialog::sizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;59&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::minimumSizeHint() const</primary></indexterm>QDialog::minimumSizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;60&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::sizePolicy() const</primary></indexterm>QWidget::sizePolicy() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;61&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setSizePolicy(QSizePolicy)</primary></indexterm>QWidget::setSizePolicy(QSizePolicy)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;62&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::heightForWidth(int) const</primary></indexterm>QWidget::heightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;63&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::adjustSize()</primary></indexterm>QWidget::adjustSize()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;64&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::reparent(QWidget*, unsigned int, QPoint const&, bool)</primary></indexterm>QWidget::reparent(QWidget*, unsigned int, QPoint const&, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;65&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setAcceptDrops(bool)</primary></indexterm>QWidget::setAcceptDrops(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;66&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setAutoMask(bool)</primary></indexterm>QWidget::setAutoMask(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;67&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundOrigin(QWidget::BackgroundOrigin)</primary></indexterm>QWidget::setBackgroundOrigin(QWidget::BackgroundOrigin)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;68&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::customWhatsThis() const</primary></indexterm>QWidget::customWhatsThis() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;69&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mousePressEvent(QMouseEvent*)</primary></indexterm>QWidget::mousePressEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;70&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseReleaseEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseReleaseEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;71&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseDoubleClickEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseDoubleClickEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;72&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseMoveEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseMoveEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;73&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::wheelEvent(QWheelEvent*)</primary></indexterm>QWidget::wheelEvent(QWheelEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;74&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::keyPressEvent(QKeyEvent*)</primary></indexterm>QDialog::keyPressEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;75&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyReleaseEvent(QKeyEvent*)</primary></indexterm>QWidget::keyReleaseEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;76&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusInEvent(QFocusEvent*)</primary></indexterm>QWidget::focusInEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;77&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusOutEvent(QFocusEvent*)</primary></indexterm>QWidget::focusOutEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;78&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enterEvent(QEvent*)</primary></indexterm>QWidget::enterEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;79&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::leaveEvent(QEvent*)</primary></indexterm>QWidget::leaveEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;80&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paintEvent(QPaintEvent*)</primary></indexterm>QWidget::paintEvent(QPaintEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;81&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::moveEvent(QMoveEvent*)</primary></indexterm>QWidget::moveEvent(QMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;82&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::resizeEvent(QResizeEvent*)</primary></indexterm>QDialog::resizeEvent(QResizeEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;83&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::closeEvent(QCloseEvent*)</primary></indexterm>QDialog::closeEvent(QCloseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;84&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::contextMenuEvent(QContextMenuEvent*)</primary></indexterm>QDialog::contextMenuEvent(QContextMenuEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;85&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::imStartEvent(QIMEvent*)</primary></indexterm>QWidget::imStartEvent(QIMEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;86&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::imComposeEvent(QIMEvent*)</primary></indexterm>QWidget::imComposeEvent(QIMEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;87&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::imEndEvent(QIMEvent*)</primary></indexterm>QWidget::imEndEvent(QIMEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;88&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::tabletEvent(QTabletEvent*)</primary></indexterm>QWidget::tabletEvent(QTabletEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;89&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragEnterEvent(QDragEnterEvent*)</primary></indexterm>QWidget::dragEnterEvent(QDragEnterEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;90&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragMoveEvent(QDragMoveEvent*)</primary></indexterm>QWidget::dragMoveEvent(QDragMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;91&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragLeaveEvent(QDragLeaveEvent*)</primary></indexterm>QWidget::dragLeaveEvent(QDragLeaveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;92&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dropEvent(QDropEvent*)</primary></indexterm>QWidget::dropEvent(QDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;93&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showEvent(QShowEvent*)</primary></indexterm>QWidget::showEvent(QShowEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;94&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::hideEvent(QHideEvent*)</primary></indexterm>QWidget::hideEvent(QHideEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;95&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::x11Event(_XEvent*)</primary></indexterm>QWidget::x11Event(_XEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;96&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::updateMask()</primary></indexterm>QWidget::updateMask()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;97&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::styleChange(QStyle&)</primary></indexterm>QWidget::styleChange(QStyle&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;98&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enabledChange(bool)</primary></indexterm>QWidget::enabledChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;99&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paletteChange(QPalette const&)</primary></indexterm>QWidget::paletteChange(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;100&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::fontChange(QFont const&)</primary></indexterm>QWidget::fontChange(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;101&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::windowActivationChange(bool)</primary></indexterm>QWidget::windowActivationChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;102&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::metric(int) const</primary></indexterm>QWidget::metric(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;103&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::create(unsigned long, bool, bool)</primary></indexterm>QWidget::create(unsigned long, bool, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;104&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::destroy(bool, bool)</primary></indexterm>QWidget::destroy(bool, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;105&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setWState(unsigned int)</primary></indexterm>NULL or QWidget::setWState(unsigned int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;106&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setWFlags(unsigned int)</primary></indexterm>NULL or QWidget::setWFlags(unsigned int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;107&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusNextPrevChild(bool)</primary></indexterm>QWidget::focusNextPrevChild(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;108&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setKeyCompression(bool)</primary></indexterm>QWidget::setKeyCompression(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;109&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMicroFocusHint(int, int, int, int, bool, QFont*)</primary></indexterm>QWidget::setMicroFocusHint(int, int, int, int, bool, QFont*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;110&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::done(int)</primary></indexterm>QDialog::done(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;111&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::accept()</primary></indexterm>QDialog::accept()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;112&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::reject()</primary></indexterm>QDialog::reject()</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--classdata-->
<TABLE id="cls-55817-1">
<TITLE>Secondary vtable for QSemiModal</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>-80</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QSemiModal</primary></indexterm>typeinfo for QSemiModal</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QSemiModal::~QSemiModal()</primary></indexterm>non-virtual thunk to QSemiModal::~QSemiModal()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QSemiModal::~QSemiModal()</primary></indexterm>non-virtual thunk to QSemiModal::~QSemiModal()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::setResolution(int)</primary></indexterm>QPaintDevice::setResolution(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::resolution() const</primary></indexterm>QPaintDevice::resolution() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::handle() const</primary></indexterm>QPaintDevice::handle() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::x11RenderHandle() const</primary></indexterm>QPaintDevice::x11RenderHandle() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::setX11Data(QPaintDeviceX11Data const*)</primary></indexterm>QPaintDevice::setX11Data(QPaintDeviceX11Data const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::cmd(int, QPainter*, QPDevCmdParam*)</primary></indexterm>QPaintDevice::cmd(int, QPainter*, QPDevCmdParam*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::metric(int) const</primary></indexterm>non-virtual thunk to QWidget::metric(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::fontMet(QFont*, int, char const*, int) const</primary></indexterm>QPaintDevice::fontMet(QFont*, int, char const*, int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::fontInf(QFont*, int) const</primary></indexterm>QPaintDevice::fontInf(QFont*, int) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QSemiModal  class
is described by <XREF LINKEND="rtti-48618">
</PARA>
<!--classdata-->
<TABLE ID="rtti-48618">
<TITLE>typeinfo for QSemiModal</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QSemiModal</primary></indexterm>typeinfo name for QSemiModal</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QDialog</primary></indexterm>typeinfo for QDialog</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QFileDialog</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QFileDialog class
is described by <XREF LINKEND="cls-54118-0">
</PARA>
<!--classdata-->
<TABLE id="cls-54118-0">
<TITLE>Primary vtable for QFileDialog</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QFileDialog</primary></indexterm>typeinfo for QFileDialog</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFileDialog::metaObject() const</primary></indexterm>NULL or QFileDialog::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFileDialog::className() const</primary></indexterm>QFileDialog::className() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFileDialog::qt_cast(char const*)</primary></indexterm>QFileDialog::qt_cast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFileDialog::qt_invoke(int, QUObject*)</primary></indexterm>QFileDialog::qt_invoke(int, QUObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFileDialog::qt_emit(int, QUObject*)</primary></indexterm>QFileDialog::qt_emit(int, QUObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFileDialog::qt_property(int, int, QVariant*)</primary></indexterm>QFileDialog::qt_property(int, int, QVariant*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFileDialog::~QFileDialog()</primary></indexterm>QFileDialog::~QFileDialog()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFileDialog::~QFileDialog()</primary></indexterm>QFileDialog::~QFileDialog()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::event(QEvent*)</primary></indexterm>QWidget::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFileDialog::eventFilter(QObject*, QEvent*)</primary></indexterm>QFileDialog::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setName(char const*)</primary></indexterm>QWidget::setName(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::insertChild(QObject*)</primary></indexterm>QObject::insertChild(QObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::removeChild(QObject*)</primary></indexterm>QObject::removeChild(QObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::setProperty(char const*, QVariant const&)</primary></indexterm>QObject::setProperty(char const*, QVariant const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::property(char const*) const</primary></indexterm>QObject::property(char const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QCustomEvent*)</primary></indexterm>QObject::customEvent(QCustomEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::checkConnectArgs(char const*, QObject const*, char const*)</primary></indexterm>QObject::checkConnectArgs(char const*, QObject const*, char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setEnabled(bool)</primary></indexterm>QWidget::setEnabled(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMinimumSize(int, int)</primary></indexterm>QWidget::setMinimumSize(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMaximumSize(int, int)</primary></indexterm>QWidget::setMaximumSize(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setSizeIncrement(int, int)</primary></indexterm>QWidget::setSizeIncrement(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundMode(Qt::BackgroundMode)</primary></indexterm>QWidget::setBackgroundMode(Qt::BackgroundMode)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setEraseColor(QColor const&)</primary></indexterm>QWidget::setEraseColor(QColor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setErasePixmap(QPixmap const&)</primary></indexterm>QWidget::setErasePixmap(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setPalette(QPalette const&)</primary></indexterm>QWidget::setPalette(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setPaletteBackgroundColor(QColor const&)</primary></indexterm>QWidget::setPaletteBackgroundColor(QColor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setPaletteBackgroundPixmap(QPixmap const&)</primary></indexterm>QWidget::setPaletteBackgroundPixmap(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFont(QFont const&)</primary></indexterm>QWidget::setFont(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setCursor(QCursor const&)</primary></indexterm>QWidget::setCursor(QCursor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;33&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::unsetCursor()</primary></indexterm>QWidget::unsetCursor()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;34&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMask(QBitmap const&)</primary></indexterm>QWidget::setMask(QBitmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;35&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMask(QRegion const&)</primary></indexterm>QWidget::setMask(QRegion const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;36&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundColor(QColor const&)</primary></indexterm>QWidget::setBackgroundColor(QColor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;37&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundPixmap(QPixmap const&)</primary></indexterm>QWidget::setBackgroundPixmap(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;38&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setCaption(QString const&)</primary></indexterm>QWidget::setCaption(QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;39&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setIcon(QPixmap const&)</primary></indexterm>QWidget::setIcon(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;40&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setIconText(QString const&)</primary></indexterm>QWidget::setIconText(QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;41&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMouseTracking(bool)</primary></indexterm>QWidget::setMouseTracking(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;42&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFocus()</primary></indexterm>QWidget::setFocus()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;43&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setActiveWindow()</primary></indexterm>QWidget::setActiveWindow()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;44&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFocusPolicy(QWidget::FocusPolicy)</primary></indexterm>QWidget::setFocusPolicy(QWidget::FocusPolicy)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;45&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFocusProxy(QWidget*)</primary></indexterm>QWidget::setFocusProxy(QWidget*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;46&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setUpdatesEnabled(bool)</primary></indexterm>QWidget::setUpdatesEnabled(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;47&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::show()</primary></indexterm>QDialog::show()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;48&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::hide()</primary></indexterm>QDialog::hide()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;49&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showMinimized()</primary></indexterm>QWidget::showMinimized()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;50&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showMaximized()</primary></indexterm>QWidget::showMaximized()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;51&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showNormal()</primary></indexterm>QWidget::showNormal()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;52&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::polish()</primary></indexterm>QWidget::polish()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;53&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::move(int, int)</primary></indexterm>QDialog::move(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;54&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::resize(int, int)</primary></indexterm>QDialog::resize(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;55&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::setGeometry(int, int, int, int)</primary></indexterm>QDialog::setGeometry(int, int, int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;56&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::setGeometry(QRect const&)</primary></indexterm>QDialog::setGeometry(QRect const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;57&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::close(bool)</primary></indexterm>QWidget::close(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;58&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::sizeHint() const</primary></indexterm>QDialog::sizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;59&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::minimumSizeHint() const</primary></indexterm>QDialog::minimumSizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;60&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::sizePolicy() const</primary></indexterm>QWidget::sizePolicy() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;61&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setSizePolicy(QSizePolicy)</primary></indexterm>QWidget::setSizePolicy(QSizePolicy)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;62&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::heightForWidth(int) const</primary></indexterm>QWidget::heightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;63&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::adjustSize()</primary></indexterm>QWidget::adjustSize()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;64&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::reparent(QWidget*, unsigned int, QPoint const&, bool)</primary></indexterm>QWidget::reparent(QWidget*, unsigned int, QPoint const&, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;65&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setAcceptDrops(bool)</primary></indexterm>QWidget::setAcceptDrops(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;66&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setAutoMask(bool)</primary></indexterm>QWidget::setAutoMask(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;67&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundOrigin(QWidget::BackgroundOrigin)</primary></indexterm>QWidget::setBackgroundOrigin(QWidget::BackgroundOrigin)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;68&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::customWhatsThis() const</primary></indexterm>QWidget::customWhatsThis() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;69&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mousePressEvent(QMouseEvent*)</primary></indexterm>QWidget::mousePressEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;70&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseReleaseEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseReleaseEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;71&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseDoubleClickEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseDoubleClickEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;72&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseMoveEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseMoveEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;73&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::wheelEvent(QWheelEvent*)</primary></indexterm>QWidget::wheelEvent(QWheelEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;74&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFileDialog::keyPressEvent(QKeyEvent*)</primary></indexterm>QFileDialog::keyPressEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;75&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyReleaseEvent(QKeyEvent*)</primary></indexterm>QWidget::keyReleaseEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;76&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusInEvent(QFocusEvent*)</primary></indexterm>QWidget::focusInEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;77&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusOutEvent(QFocusEvent*)</primary></indexterm>QWidget::focusOutEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;78&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enterEvent(QEvent*)</primary></indexterm>QWidget::enterEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;79&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::leaveEvent(QEvent*)</primary></indexterm>QWidget::leaveEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;80&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paintEvent(QPaintEvent*)</primary></indexterm>QWidget::paintEvent(QPaintEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;81&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::moveEvent(QMoveEvent*)</primary></indexterm>QWidget::moveEvent(QMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;82&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFileDialog::resizeEvent(QResizeEvent*)</primary></indexterm>QFileDialog::resizeEvent(QResizeEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;83&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::closeEvent(QCloseEvent*)</primary></indexterm>QDialog::closeEvent(QCloseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;84&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::contextMenuEvent(QContextMenuEvent*)</primary></indexterm>QDialog::contextMenuEvent(QContextMenuEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;85&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::imStartEvent(QIMEvent*)</primary></indexterm>QWidget::imStartEvent(QIMEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;86&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::imComposeEvent(QIMEvent*)</primary></indexterm>QWidget::imComposeEvent(QIMEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;87&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::imEndEvent(QIMEvent*)</primary></indexterm>QWidget::imEndEvent(QIMEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;88&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::tabletEvent(QTabletEvent*)</primary></indexterm>QWidget::tabletEvent(QTabletEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;89&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragEnterEvent(QDragEnterEvent*)</primary></indexterm>QWidget::dragEnterEvent(QDragEnterEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;90&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragMoveEvent(QDragMoveEvent*)</primary></indexterm>QWidget::dragMoveEvent(QDragMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;91&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragLeaveEvent(QDragLeaveEvent*)</primary></indexterm>QWidget::dragLeaveEvent(QDragLeaveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;92&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dropEvent(QDropEvent*)</primary></indexterm>QWidget::dropEvent(QDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;93&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showEvent(QShowEvent*)</primary></indexterm>QWidget::showEvent(QShowEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;94&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::hideEvent(QHideEvent*)</primary></indexterm>QWidget::hideEvent(QHideEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;95&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::x11Event(_XEvent*)</primary></indexterm>QWidget::x11Event(_XEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;96&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::updateMask()</primary></indexterm>QWidget::updateMask()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;97&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::styleChange(QStyle&)</primary></indexterm>QWidget::styleChange(QStyle&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;98&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enabledChange(bool)</primary></indexterm>QWidget::enabledChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;99&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paletteChange(QPalette const&)</primary></indexterm>QWidget::paletteChange(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;100&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::fontChange(QFont const&)</primary></indexterm>QWidget::fontChange(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;101&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::windowActivationChange(bool)</primary></indexterm>QWidget::windowActivationChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;102&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::metric(int) const</primary></indexterm>QWidget::metric(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;103&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::create(unsigned long, bool, bool)</primary></indexterm>QWidget::create(unsigned long, bool, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;104&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::destroy(bool, bool)</primary></indexterm>QWidget::destroy(bool, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;105&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setWState(unsigned int)</primary></indexterm>NULL or QWidget::setWState(unsigned int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;106&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setWFlags(unsigned int)</primary></indexterm>NULL or QWidget::setWFlags(unsigned int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;107&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusNextPrevChild(bool)</primary></indexterm>QWidget::focusNextPrevChild(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;108&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setKeyCompression(bool)</primary></indexterm>QWidget::setKeyCompression(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;109&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMicroFocusHint(int, int, int, int, bool, QFont*)</primary></indexterm>QWidget::setMicroFocusHint(int, int, int, int, bool, QFont*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;110&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFileDialog::done(int)</primary></indexterm>QFileDialog::done(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;111&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::accept()</primary></indexterm>QDialog::accept()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;112&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::reject()</primary></indexterm>QDialog::reject()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;113&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFileDialog::setSelectedFilter(QString const&)</primary></indexterm>QFileDialog::setSelectedFilter(QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;114&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFileDialog::setSelectedFilter(int)</primary></indexterm>QFileDialog::setSelectedFilter(int)</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--classdata-->
<TABLE id="cls-54118-1">
<TITLE>Secondary vtable for QFileDialog</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>-80</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QFileDialog</primary></indexterm>typeinfo for QFileDialog</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QFileDialog::~QFileDialog()</primary></indexterm>non-virtual thunk to QFileDialog::~QFileDialog()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QFileDialog::~QFileDialog()</primary></indexterm>non-virtual thunk to QFileDialog::~QFileDialog()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::setResolution(int)</primary></indexterm>QPaintDevice::setResolution(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::resolution() const</primary></indexterm>QPaintDevice::resolution() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::handle() const</primary></indexterm>QPaintDevice::handle() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::x11RenderHandle() const</primary></indexterm>QPaintDevice::x11RenderHandle() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::setX11Data(QPaintDeviceX11Data const*)</primary></indexterm>QPaintDevice::setX11Data(QPaintDeviceX11Data const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::cmd(int, QPainter*, QPDevCmdParam*)</primary></indexterm>QPaintDevice::cmd(int, QPainter*, QPDevCmdParam*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::metric(int) const</primary></indexterm>non-virtual thunk to QWidget::metric(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::fontMet(QFont*, int, char const*, int) const</primary></indexterm>QPaintDevice::fontMet(QFont*, int, char const*, int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::fontInf(QFont*, int) const</primary></indexterm>QPaintDevice::fontInf(QFont*, int) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QFileDialog  class
is described by <XREF LINKEND="rtti-54577">
</PARA>
<!--classdata-->
<TABLE ID="rtti-54577">
<TITLE>typeinfo for QFileDialog</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QFileDialog</primary></indexterm>typeinfo name for QFileDialog</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QDialog</primary></indexterm>typeinfo for QDialog</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QErrorMessage</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QErrorMessage class
is described by <XREF LINKEND="cls-52605-0">
</PARA>
<!--classdata-->
<TABLE id="cls-52605-0">
<TITLE>Primary vtable for QErrorMessage</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QErrorMessage</primary></indexterm>typeinfo for QErrorMessage</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QErrorMessage::metaObject() const</primary></indexterm>NULL or QErrorMessage::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QErrorMessage::className() const</primary></indexterm>QErrorMessage::className() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QErrorMessage::qt_cast(char const*)</primary></indexterm>QErrorMessage::qt_cast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QErrorMessage::qt_invoke(int, QUObject*)</primary></indexterm>QErrorMessage::qt_invoke(int, QUObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QErrorMessage::qt_emit(int, QUObject*)</primary></indexterm>QErrorMessage::qt_emit(int, QUObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QErrorMessage::qt_property(int, int, QVariant*)</primary></indexterm>QErrorMessage::qt_property(int, int, QVariant*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QErrorMessage::~QErrorMessage()</primary></indexterm>QErrorMessage::~QErrorMessage()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QErrorMessage::~QErrorMessage()</primary></indexterm>QErrorMessage::~QErrorMessage()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::event(QEvent*)</primary></indexterm>QWidget::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::eventFilter(QObject*, QEvent*)</primary></indexterm>QDialog::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setName(char const*)</primary></indexterm>QWidget::setName(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::insertChild(QObject*)</primary></indexterm>QObject::insertChild(QObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::removeChild(QObject*)</primary></indexterm>QObject::removeChild(QObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::setProperty(char const*, QVariant const&)</primary></indexterm>QObject::setProperty(char const*, QVariant const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::property(char const*) const</primary></indexterm>QObject::property(char const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QCustomEvent*)</primary></indexterm>QObject::customEvent(QCustomEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::checkConnectArgs(char const*, QObject const*, char const*)</primary></indexterm>QObject::checkConnectArgs(char const*, QObject const*, char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setEnabled(bool)</primary></indexterm>QWidget::setEnabled(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMinimumSize(int, int)</primary></indexterm>QWidget::setMinimumSize(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMaximumSize(int, int)</primary></indexterm>QWidget::setMaximumSize(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setSizeIncrement(int, int)</primary></indexterm>QWidget::setSizeIncrement(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundMode(Qt::BackgroundMode)</primary></indexterm>QWidget::setBackgroundMode(Qt::BackgroundMode)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setEraseColor(QColor const&)</primary></indexterm>QWidget::setEraseColor(QColor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setErasePixmap(QPixmap const&)</primary></indexterm>QWidget::setErasePixmap(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setPalette(QPalette const&)</primary></indexterm>QWidget::setPalette(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setPaletteBackgroundColor(QColor const&)</primary></indexterm>QWidget::setPaletteBackgroundColor(QColor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setPaletteBackgroundPixmap(QPixmap const&)</primary></indexterm>QWidget::setPaletteBackgroundPixmap(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFont(QFont const&)</primary></indexterm>QWidget::setFont(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setCursor(QCursor const&)</primary></indexterm>QWidget::setCursor(QCursor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;33&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::unsetCursor()</primary></indexterm>QWidget::unsetCursor()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;34&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMask(QBitmap const&)</primary></indexterm>QWidget::setMask(QBitmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;35&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMask(QRegion const&)</primary></indexterm>QWidget::setMask(QRegion const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;36&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundColor(QColor const&)</primary></indexterm>QWidget::setBackgroundColor(QColor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;37&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundPixmap(QPixmap const&)</primary></indexterm>QWidget::setBackgroundPixmap(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;38&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setCaption(QString const&)</primary></indexterm>QWidget::setCaption(QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;39&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setIcon(QPixmap const&)</primary></indexterm>QWidget::setIcon(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;40&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setIconText(QString const&)</primary></indexterm>QWidget::setIconText(QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;41&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMouseTracking(bool)</primary></indexterm>QWidget::setMouseTracking(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;42&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFocus()</primary></indexterm>QWidget::setFocus()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;43&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setActiveWindow()</primary></indexterm>QWidget::setActiveWindow()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;44&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFocusPolicy(QWidget::FocusPolicy)</primary></indexterm>QWidget::setFocusPolicy(QWidget::FocusPolicy)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;45&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFocusProxy(QWidget*)</primary></indexterm>QWidget::setFocusProxy(QWidget*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;46&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setUpdatesEnabled(bool)</primary></indexterm>QWidget::setUpdatesEnabled(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;47&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::show()</primary></indexterm>QDialog::show()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;48&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::hide()</primary></indexterm>QDialog::hide()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;49&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showMinimized()</primary></indexterm>QWidget::showMinimized()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;50&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showMaximized()</primary></indexterm>QWidget::showMaximized()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;51&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showNormal()</primary></indexterm>QWidget::showNormal()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;52&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::polish()</primary></indexterm>QWidget::polish()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;53&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::move(int, int)</primary></indexterm>QDialog::move(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;54&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::resize(int, int)</primary></indexterm>QDialog::resize(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;55&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::setGeometry(int, int, int, int)</primary></indexterm>QDialog::setGeometry(int, int, int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;56&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::setGeometry(QRect const&)</primary></indexterm>QDialog::setGeometry(QRect const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;57&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::close(bool)</primary></indexterm>QWidget::close(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;58&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::sizeHint() const</primary></indexterm>QDialog::sizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;59&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::minimumSizeHint() const</primary></indexterm>QDialog::minimumSizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;60&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::sizePolicy() const</primary></indexterm>QWidget::sizePolicy() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;61&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setSizePolicy(QSizePolicy)</primary></indexterm>QWidget::setSizePolicy(QSizePolicy)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;62&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::heightForWidth(int) const</primary></indexterm>QWidget::heightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;63&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::adjustSize()</primary></indexterm>QWidget::adjustSize()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;64&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::reparent(QWidget*, unsigned int, QPoint const&, bool)</primary></indexterm>QWidget::reparent(QWidget*, unsigned int, QPoint const&, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;65&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setAcceptDrops(bool)</primary></indexterm>QWidget::setAcceptDrops(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;66&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setAutoMask(bool)</primary></indexterm>QWidget::setAutoMask(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;67&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundOrigin(QWidget::BackgroundOrigin)</primary></indexterm>QWidget::setBackgroundOrigin(QWidget::BackgroundOrigin)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;68&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::customWhatsThis() const</primary></indexterm>QWidget::customWhatsThis() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;69&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mousePressEvent(QMouseEvent*)</primary></indexterm>QWidget::mousePressEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;70&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseReleaseEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseReleaseEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;71&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseDoubleClickEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseDoubleClickEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;72&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseMoveEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseMoveEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;73&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::wheelEvent(QWheelEvent*)</primary></indexterm>QWidget::wheelEvent(QWheelEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;74&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::keyPressEvent(QKeyEvent*)</primary></indexterm>QDialog::keyPressEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;75&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyReleaseEvent(QKeyEvent*)</primary></indexterm>QWidget::keyReleaseEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;76&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusInEvent(QFocusEvent*)</primary></indexterm>QWidget::focusInEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;77&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusOutEvent(QFocusEvent*)</primary></indexterm>QWidget::focusOutEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;78&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enterEvent(QEvent*)</primary></indexterm>QWidget::enterEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;79&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::leaveEvent(QEvent*)</primary></indexterm>QWidget::leaveEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;80&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paintEvent(QPaintEvent*)</primary></indexterm>QWidget::paintEvent(QPaintEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;81&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::moveEvent(QMoveEvent*)</primary></indexterm>QWidget::moveEvent(QMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;82&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::resizeEvent(QResizeEvent*)</primary></indexterm>QDialog::resizeEvent(QResizeEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;83&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::closeEvent(QCloseEvent*)</primary></indexterm>QDialog::closeEvent(QCloseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;84&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::contextMenuEvent(QContextMenuEvent*)</primary></indexterm>QDialog::contextMenuEvent(QContextMenuEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;85&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::imStartEvent(QIMEvent*)</primary></indexterm>QWidget::imStartEvent(QIMEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;86&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::imComposeEvent(QIMEvent*)</primary></indexterm>QWidget::imComposeEvent(QIMEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;87&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::imEndEvent(QIMEvent*)</primary></indexterm>QWidget::imEndEvent(QIMEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;88&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::tabletEvent(QTabletEvent*)</primary></indexterm>QWidget::tabletEvent(QTabletEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;89&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragEnterEvent(QDragEnterEvent*)</primary></indexterm>QWidget::dragEnterEvent(QDragEnterEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;90&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragMoveEvent(QDragMoveEvent*)</primary></indexterm>QWidget::dragMoveEvent(QDragMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;91&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragLeaveEvent(QDragLeaveEvent*)</primary></indexterm>QWidget::dragLeaveEvent(QDragLeaveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;92&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dropEvent(QDropEvent*)</primary></indexterm>QWidget::dropEvent(QDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;93&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showEvent(QShowEvent*)</primary></indexterm>QWidget::showEvent(QShowEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;94&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::hideEvent(QHideEvent*)</primary></indexterm>QWidget::hideEvent(QHideEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;95&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::x11Event(_XEvent*)</primary></indexterm>QWidget::x11Event(_XEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;96&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::updateMask()</primary></indexterm>QWidget::updateMask()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;97&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::styleChange(QStyle&)</primary></indexterm>QWidget::styleChange(QStyle&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;98&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enabledChange(bool)</primary></indexterm>QWidget::enabledChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;99&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paletteChange(QPalette const&)</primary></indexterm>QWidget::paletteChange(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;100&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::fontChange(QFont const&)</primary></indexterm>QWidget::fontChange(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;101&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::windowActivationChange(bool)</primary></indexterm>QWidget::windowActivationChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;102&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::metric(int) const</primary></indexterm>QWidget::metric(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;103&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::create(unsigned long, bool, bool)</primary></indexterm>QWidget::create(unsigned long, bool, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;104&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::destroy(bool, bool)</primary></indexterm>QWidget::destroy(bool, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;105&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setWState(unsigned int)</primary></indexterm>NULL or QWidget::setWState(unsigned int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;106&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setWFlags(unsigned int)</primary></indexterm>NULL or QWidget::setWFlags(unsigned int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;107&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusNextPrevChild(bool)</primary></indexterm>QWidget::focusNextPrevChild(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;108&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setKeyCompression(bool)</primary></indexterm>QWidget::setKeyCompression(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;109&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMicroFocusHint(int, int, int, int, bool, QFont*)</primary></indexterm>QWidget::setMicroFocusHint(int, int, int, int, bool, QFont*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;110&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QErrorMessage::done(int)</primary></indexterm>QErrorMessage::done(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;111&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::accept()</primary></indexterm>QDialog::accept()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;112&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::reject()</primary></indexterm>QDialog::reject()</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--classdata-->
<TABLE id="cls-52605-1">
<TITLE>Secondary vtable for QErrorMessage</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>-80</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QErrorMessage</primary></indexterm>typeinfo for QErrorMessage</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QErrorMessage::~QErrorMessage()</primary></indexterm>non-virtual thunk to QErrorMessage::~QErrorMessage()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QErrorMessage::~QErrorMessage()</primary></indexterm>non-virtual thunk to QErrorMessage::~QErrorMessage()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::setResolution(int)</primary></indexterm>QPaintDevice::setResolution(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::resolution() const</primary></indexterm>QPaintDevice::resolution() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::handle() const</primary></indexterm>QPaintDevice::handle() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::x11RenderHandle() const</primary></indexterm>QPaintDevice::x11RenderHandle() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::setX11Data(QPaintDeviceX11Data const*)</primary></indexterm>QPaintDevice::setX11Data(QPaintDeviceX11Data const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::cmd(int, QPainter*, QPDevCmdParam*)</primary></indexterm>QPaintDevice::cmd(int, QPainter*, QPDevCmdParam*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::metric(int) const</primary></indexterm>non-virtual thunk to QWidget::metric(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::fontMet(QFont*, int, char const*, int) const</primary></indexterm>QPaintDevice::fontMet(QFont*, int, char const*, int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::fontInf(QFont*, int) const</primary></indexterm>QPaintDevice::fontInf(QFont*, int) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QErrorMessage  class
is described by <XREF LINKEND="rtti-53005">
</PARA>
<!--classdata-->
<TABLE ID="rtti-53005">
<TITLE>typeinfo for QErrorMessage</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QErrorMessage</primary></indexterm>typeinfo name for QErrorMessage</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QDialog</primary></indexterm>typeinfo for QDialog</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QFilePreview</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QFilePreview class
is described in the generic part of this specification.
</PARA>
<PARA>
The Run Time Type Information for the QFilePreview  class
is described by <XREF LINKEND="rtti-59527">
</PARA>
<!--classdata-->
<TABLE ID="rtti-59527">
<TITLE>typeinfo for QFilePreview</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__class_type_info</primary></indexterm>vtable for __cxxabiv1::__class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QFilePreview</primary></indexterm>typeinfo name for QFilePreview</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QMessageBox</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QMessageBox class
is described by <XREF LINKEND="cls-59424-0">
</PARA>
<!--classdata-->
<TABLE id="cls-59424-0">
<TITLE>Primary vtable for QMessageBox</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QMessageBox</primary></indexterm>typeinfo for QMessageBox</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMessageBox::metaObject() const</primary></indexterm>NULL or QMessageBox::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMessageBox::className() const</primary></indexterm>QMessageBox::className() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMessageBox::qt_cast(char const*)</primary></indexterm>QMessageBox::qt_cast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMessageBox::qt_invoke(int, QUObject*)</primary></indexterm>QMessageBox::qt_invoke(int, QUObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMessageBox::qt_emit(int, QUObject*)</primary></indexterm>QMessageBox::qt_emit(int, QUObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMessageBox::qt_property(int, int, QVariant*)</primary></indexterm>QMessageBox::qt_property(int, int, QVariant*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMessageBox::~QMessageBox()</primary></indexterm>QMessageBox::~QMessageBox()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMessageBox::~QMessageBox()</primary></indexterm>QMessageBox::~QMessageBox()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::event(QEvent*)</primary></indexterm>QWidget::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::eventFilter(QObject*, QEvent*)</primary></indexterm>QDialog::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setName(char const*)</primary></indexterm>QWidget::setName(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::insertChild(QObject*)</primary></indexterm>QObject::insertChild(QObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::removeChild(QObject*)</primary></indexterm>QObject::removeChild(QObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::setProperty(char const*, QVariant const&)</primary></indexterm>QObject::setProperty(char const*, QVariant const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::property(char const*) const</primary></indexterm>QObject::property(char const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QCustomEvent*)</primary></indexterm>QObject::customEvent(QCustomEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::checkConnectArgs(char const*, QObject const*, char const*)</primary></indexterm>QObject::checkConnectArgs(char const*, QObject const*, char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setEnabled(bool)</primary></indexterm>QWidget::setEnabled(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMinimumSize(int, int)</primary></indexterm>QWidget::setMinimumSize(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMaximumSize(int, int)</primary></indexterm>QWidget::setMaximumSize(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setSizeIncrement(int, int)</primary></indexterm>QWidget::setSizeIncrement(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundMode(Qt::BackgroundMode)</primary></indexterm>QWidget::setBackgroundMode(Qt::BackgroundMode)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setEraseColor(QColor const&)</primary></indexterm>QWidget::setEraseColor(QColor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setErasePixmap(QPixmap const&)</primary></indexterm>QWidget::setErasePixmap(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setPalette(QPalette const&)</primary></indexterm>QWidget::setPalette(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setPaletteBackgroundColor(QColor const&)</primary></indexterm>QWidget::setPaletteBackgroundColor(QColor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setPaletteBackgroundPixmap(QPixmap const&)</primary></indexterm>QWidget::setPaletteBackgroundPixmap(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFont(QFont const&)</primary></indexterm>QWidget::setFont(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setCursor(QCursor const&)</primary></indexterm>QWidget::setCursor(QCursor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;33&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::unsetCursor()</primary></indexterm>QWidget::unsetCursor()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;34&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMask(QBitmap const&)</primary></indexterm>QWidget::setMask(QBitmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;35&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMask(QRegion const&)</primary></indexterm>QWidget::setMask(QRegion const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;36&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundColor(QColor const&)</primary></indexterm>QWidget::setBackgroundColor(QColor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;37&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundPixmap(QPixmap const&)</primary></indexterm>QWidget::setBackgroundPixmap(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;38&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setCaption(QString const&)</primary></indexterm>QWidget::setCaption(QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;39&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMessageBox::setIcon(QPixmap const&)</primary></indexterm>QMessageBox::setIcon(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;40&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setIconText(QString const&)</primary></indexterm>QWidget::setIconText(QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;41&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMouseTracking(bool)</primary></indexterm>QWidget::setMouseTracking(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;42&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFocus()</primary></indexterm>QWidget::setFocus()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;43&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setActiveWindow()</primary></indexterm>QWidget::setActiveWindow()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;44&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFocusPolicy(QWidget::FocusPolicy)</primary></indexterm>QWidget::setFocusPolicy(QWidget::FocusPolicy)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;45&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFocusProxy(QWidget*)</primary></indexterm>QWidget::setFocusProxy(QWidget*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;46&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setUpdatesEnabled(bool)</primary></indexterm>QWidget::setUpdatesEnabled(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;47&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::show()</primary></indexterm>QDialog::show()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;48&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::hide()</primary></indexterm>QDialog::hide()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;49&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showMinimized()</primary></indexterm>QWidget::showMinimized()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;50&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showMaximized()</primary></indexterm>QWidget::showMaximized()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;51&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showNormal()</primary></indexterm>QWidget::showNormal()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;52&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::polish()</primary></indexterm>QWidget::polish()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;53&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::move(int, int)</primary></indexterm>QDialog::move(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;54&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::resize(int, int)</primary></indexterm>QDialog::resize(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;55&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::setGeometry(int, int, int, int)</primary></indexterm>QDialog::setGeometry(int, int, int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;56&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::setGeometry(QRect const&)</primary></indexterm>QDialog::setGeometry(QRect const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;57&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::close(bool)</primary></indexterm>QWidget::close(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;58&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::sizeHint() const</primary></indexterm>QDialog::sizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;59&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::minimumSizeHint() const</primary></indexterm>QDialog::minimumSizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;60&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::sizePolicy() const</primary></indexterm>QWidget::sizePolicy() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;61&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setSizePolicy(QSizePolicy)</primary></indexterm>QWidget::setSizePolicy(QSizePolicy)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;62&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::heightForWidth(int) const</primary></indexterm>QWidget::heightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;63&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMessageBox::adjustSize()</primary></indexterm>QMessageBox::adjustSize()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;64&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::reparent(QWidget*, unsigned int, QPoint const&, bool)</primary></indexterm>QWidget::reparent(QWidget*, unsigned int, QPoint const&, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;65&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setAcceptDrops(bool)</primary></indexterm>QWidget::setAcceptDrops(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;66&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setAutoMask(bool)</primary></indexterm>QWidget::setAutoMask(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;67&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundOrigin(QWidget::BackgroundOrigin)</primary></indexterm>QWidget::setBackgroundOrigin(QWidget::BackgroundOrigin)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;68&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::customWhatsThis() const</primary></indexterm>QWidget::customWhatsThis() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;69&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mousePressEvent(QMouseEvent*)</primary></indexterm>QWidget::mousePressEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;70&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseReleaseEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseReleaseEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;71&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseDoubleClickEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseDoubleClickEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;72&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseMoveEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseMoveEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;73&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::wheelEvent(QWheelEvent*)</primary></indexterm>QWidget::wheelEvent(QWheelEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;74&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMessageBox::keyPressEvent(QKeyEvent*)</primary></indexterm>QMessageBox::keyPressEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;75&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyReleaseEvent(QKeyEvent*)</primary></indexterm>QWidget::keyReleaseEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;76&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusInEvent(QFocusEvent*)</primary></indexterm>QWidget::focusInEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;77&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusOutEvent(QFocusEvent*)</primary></indexterm>QWidget::focusOutEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;78&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enterEvent(QEvent*)</primary></indexterm>QWidget::enterEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;79&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::leaveEvent(QEvent*)</primary></indexterm>QWidget::leaveEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;80&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paintEvent(QPaintEvent*)</primary></indexterm>QWidget::paintEvent(QPaintEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;81&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::moveEvent(QMoveEvent*)</primary></indexterm>QWidget::moveEvent(QMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;82&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMessageBox::resizeEvent(QResizeEvent*)</primary></indexterm>QMessageBox::resizeEvent(QResizeEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;83&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMessageBox::closeEvent(QCloseEvent*)</primary></indexterm>QMessageBox::closeEvent(QCloseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;84&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::contextMenuEvent(QContextMenuEvent*)</primary></indexterm>QDialog::contextMenuEvent(QContextMenuEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;85&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::imStartEvent(QIMEvent*)</primary></indexterm>QWidget::imStartEvent(QIMEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;86&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::imComposeEvent(QIMEvent*)</primary></indexterm>QWidget::imComposeEvent(QIMEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;87&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::imEndEvent(QIMEvent*)</primary></indexterm>QWidget::imEndEvent(QIMEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;88&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::tabletEvent(QTabletEvent*)</primary></indexterm>QWidget::tabletEvent(QTabletEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;89&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragEnterEvent(QDragEnterEvent*)</primary></indexterm>QWidget::dragEnterEvent(QDragEnterEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;90&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragMoveEvent(QDragMoveEvent*)</primary></indexterm>QWidget::dragMoveEvent(QDragMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;91&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragLeaveEvent(QDragLeaveEvent*)</primary></indexterm>QWidget::dragLeaveEvent(QDragLeaveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;92&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dropEvent(QDropEvent*)</primary></indexterm>QWidget::dropEvent(QDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;93&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMessageBox::showEvent(QShowEvent*)</primary></indexterm>QMessageBox::showEvent(QShowEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;94&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::hideEvent(QHideEvent*)</primary></indexterm>QWidget::hideEvent(QHideEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;95&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::x11Event(_XEvent*)</primary></indexterm>QWidget::x11Event(_XEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;96&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::updateMask()</primary></indexterm>QWidget::updateMask()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;97&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::styleChange(QStyle&)</primary></indexterm>QWidget::styleChange(QStyle&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;98&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enabledChange(bool)</primary></indexterm>QWidget::enabledChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;99&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paletteChange(QPalette const&)</primary></indexterm>QWidget::paletteChange(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;100&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::fontChange(QFont const&)</primary></indexterm>QWidget::fontChange(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;101&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::windowActivationChange(bool)</primary></indexterm>QWidget::windowActivationChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;102&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::metric(int) const</primary></indexterm>QWidget::metric(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;103&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::create(unsigned long, bool, bool)</primary></indexterm>QWidget::create(unsigned long, bool, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;104&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::destroy(bool, bool)</primary></indexterm>QWidget::destroy(bool, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;105&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setWState(unsigned int)</primary></indexterm>NULL or QWidget::setWState(unsigned int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;106&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setWFlags(unsigned int)</primary></indexterm>NULL or QWidget::setWFlags(unsigned int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;107&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusNextPrevChild(bool)</primary></indexterm>QWidget::focusNextPrevChild(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;108&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setKeyCompression(bool)</primary></indexterm>QWidget::setKeyCompression(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;109&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMicroFocusHint(int, int, int, int, bool, QFont*)</primary></indexterm>QWidget::setMicroFocusHint(int, int, int, int, bool, QFont*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;110&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::done(int)</primary></indexterm>QDialog::done(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;111&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::accept()</primary></indexterm>QDialog::accept()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;112&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::reject()</primary></indexterm>QDialog::reject()</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--classdata-->
<TABLE id="cls-59424-1">
<TITLE>Secondary vtable for QMessageBox</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>-80</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QMessageBox</primary></indexterm>typeinfo for QMessageBox</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QMessageBox::~QMessageBox()</primary></indexterm>non-virtual thunk to QMessageBox::~QMessageBox()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QMessageBox::~QMessageBox()</primary></indexterm>non-virtual thunk to QMessageBox::~QMessageBox()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::setResolution(int)</primary></indexterm>QPaintDevice::setResolution(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::resolution() const</primary></indexterm>QPaintDevice::resolution() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::handle() const</primary></indexterm>QPaintDevice::handle() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::x11RenderHandle() const</primary></indexterm>QPaintDevice::x11RenderHandle() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::setX11Data(QPaintDeviceX11Data const*)</primary></indexterm>QPaintDevice::setX11Data(QPaintDeviceX11Data const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::cmd(int, QPainter*, QPDevCmdParam*)</primary></indexterm>QPaintDevice::cmd(int, QPainter*, QPDevCmdParam*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::metric(int) const</primary></indexterm>non-virtual thunk to QWidget::metric(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::fontMet(QFont*, int, char const*, int) const</primary></indexterm>QPaintDevice::fontMet(QFont*, int, char const*, int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::fontInf(QFont*, int) const</primary></indexterm>QPaintDevice::fontInf(QFont*, int) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QMessageBox  class
is described by <XREF LINKEND="rtti-58820">
</PARA>
<!--classdata-->
<TABLE ID="rtti-58820">
<TITLE>typeinfo for QMessageBox</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QMessageBox</primary></indexterm>typeinfo name for QMessageBox</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QDialog</primary></indexterm>typeinfo for QDialog</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QDialog</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QDialog class
is described by <XREF LINKEND="cls-53832-0">
</PARA>
<!--classdata-->
<TABLE id="cls-53832-0">
<TITLE>Primary vtable for QDialog</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QDialog</primary></indexterm>typeinfo for QDialog</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::metaObject() const</primary></indexterm>NULL or QDialog::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::className() const</primary></indexterm>QDialog::className() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::qt_cast(char const*)</primary></indexterm>QDialog::qt_cast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::qt_invoke(int, QUObject*)</primary></indexterm>QDialog::qt_invoke(int, QUObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::qt_emit(int, QUObject*)</primary></indexterm>QDialog::qt_emit(int, QUObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::qt_property(int, int, QVariant*)</primary></indexterm>QDialog::qt_property(int, int, QVariant*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::~QDialog()</primary></indexterm>QDialog::~QDialog()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::~QDialog()</primary></indexterm>QDialog::~QDialog()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::event(QEvent*)</primary></indexterm>QWidget::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::eventFilter(QObject*, QEvent*)</primary></indexterm>QDialog::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setName(char const*)</primary></indexterm>QWidget::setName(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::insertChild(QObject*)</primary></indexterm>QObject::insertChild(QObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::removeChild(QObject*)</primary></indexterm>QObject::removeChild(QObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::setProperty(char const*, QVariant const&)</primary></indexterm>QObject::setProperty(char const*, QVariant const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::property(char const*) const</primary></indexterm>QObject::property(char const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QCustomEvent*)</primary></indexterm>QObject::customEvent(QCustomEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::checkConnectArgs(char const*, QObject const*, char const*)</primary></indexterm>QObject::checkConnectArgs(char const*, QObject const*, char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setEnabled(bool)</primary></indexterm>QWidget::setEnabled(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMinimumSize(int, int)</primary></indexterm>QWidget::setMinimumSize(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMaximumSize(int, int)</primary></indexterm>QWidget::setMaximumSize(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setSizeIncrement(int, int)</primary></indexterm>QWidget::setSizeIncrement(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundMode(Qt::BackgroundMode)</primary></indexterm>QWidget::setBackgroundMode(Qt::BackgroundMode)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setEraseColor(QColor const&)</primary></indexterm>QWidget::setEraseColor(QColor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setErasePixmap(QPixmap const&)</primary></indexterm>QWidget::setErasePixmap(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setPalette(QPalette const&)</primary></indexterm>QWidget::setPalette(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setPaletteBackgroundColor(QColor const&)</primary></indexterm>QWidget::setPaletteBackgroundColor(QColor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setPaletteBackgroundPixmap(QPixmap const&)</primary></indexterm>QWidget::setPaletteBackgroundPixmap(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFont(QFont const&)</primary></indexterm>QWidget::setFont(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setCursor(QCursor const&)</primary></indexterm>QWidget::setCursor(QCursor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;33&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::unsetCursor()</primary></indexterm>QWidget::unsetCursor()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;34&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMask(QBitmap const&)</primary></indexterm>QWidget::setMask(QBitmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;35&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMask(QRegion const&)</primary></indexterm>QWidget::setMask(QRegion const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;36&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundColor(QColor const&)</primary></indexterm>QWidget::setBackgroundColor(QColor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;37&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundPixmap(QPixmap const&)</primary></indexterm>QWidget::setBackgroundPixmap(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;38&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setCaption(QString const&)</primary></indexterm>QWidget::setCaption(QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;39&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setIcon(QPixmap const&)</primary></indexterm>QWidget::setIcon(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;40&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setIconText(QString const&)</primary></indexterm>QWidget::setIconText(QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;41&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMouseTracking(bool)</primary></indexterm>QWidget::setMouseTracking(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;42&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFocus()</primary></indexterm>QWidget::setFocus()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;43&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setActiveWindow()</primary></indexterm>QWidget::setActiveWindow()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;44&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFocusPolicy(QWidget::FocusPolicy)</primary></indexterm>QWidget::setFocusPolicy(QWidget::FocusPolicy)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;45&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFocusProxy(QWidget*)</primary></indexterm>QWidget::setFocusProxy(QWidget*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;46&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setUpdatesEnabled(bool)</primary></indexterm>QWidget::setUpdatesEnabled(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;47&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::show()</primary></indexterm>QDialog::show()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;48&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::hide()</primary></indexterm>QDialog::hide()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;49&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showMinimized()</primary></indexterm>QWidget::showMinimized()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;50&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showMaximized()</primary></indexterm>QWidget::showMaximized()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;51&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showNormal()</primary></indexterm>QWidget::showNormal()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;52&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::polish()</primary></indexterm>QWidget::polish()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;53&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::move(int, int)</primary></indexterm>QDialog::move(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;54&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::resize(int, int)</primary></indexterm>QDialog::resize(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;55&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::setGeometry(int, int, int, int)</primary></indexterm>QDialog::setGeometry(int, int, int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;56&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::setGeometry(QRect const&)</primary></indexterm>QDialog::setGeometry(QRect const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;57&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::close(bool)</primary></indexterm>QWidget::close(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;58&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::sizeHint() const</primary></indexterm>QDialog::sizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;59&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::minimumSizeHint() const</primary></indexterm>QDialog::minimumSizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;60&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::sizePolicy() const</primary></indexterm>QWidget::sizePolicy() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;61&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setSizePolicy(QSizePolicy)</primary></indexterm>QWidget::setSizePolicy(QSizePolicy)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;62&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::heightForWidth(int) const</primary></indexterm>QWidget::heightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;63&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::adjustSize()</primary></indexterm>QWidget::adjustSize()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;64&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::reparent(QWidget*, unsigned int, QPoint const&, bool)</primary></indexterm>QWidget::reparent(QWidget*, unsigned int, QPoint const&, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;65&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setAcceptDrops(bool)</primary></indexterm>QWidget::setAcceptDrops(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;66&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setAutoMask(bool)</primary></indexterm>QWidget::setAutoMask(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;67&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundOrigin(QWidget::BackgroundOrigin)</primary></indexterm>QWidget::setBackgroundOrigin(QWidget::BackgroundOrigin)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;68&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::customWhatsThis() const</primary></indexterm>QWidget::customWhatsThis() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;69&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mousePressEvent(QMouseEvent*)</primary></indexterm>QWidget::mousePressEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;70&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseReleaseEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseReleaseEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;71&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseDoubleClickEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseDoubleClickEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;72&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseMoveEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseMoveEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;73&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::wheelEvent(QWheelEvent*)</primary></indexterm>QWidget::wheelEvent(QWheelEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;74&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::keyPressEvent(QKeyEvent*)</primary></indexterm>QDialog::keyPressEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;75&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyReleaseEvent(QKeyEvent*)</primary></indexterm>QWidget::keyReleaseEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;76&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusInEvent(QFocusEvent*)</primary></indexterm>QWidget::focusInEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;77&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusOutEvent(QFocusEvent*)</primary></indexterm>QWidget::focusOutEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;78&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enterEvent(QEvent*)</primary></indexterm>QWidget::enterEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;79&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::leaveEvent(QEvent*)</primary></indexterm>QWidget::leaveEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;80&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paintEvent(QPaintEvent*)</primary></indexterm>QWidget::paintEvent(QPaintEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;81&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::moveEvent(QMoveEvent*)</primary></indexterm>QWidget::moveEvent(QMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;82&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::resizeEvent(QResizeEvent*)</primary></indexterm>QDialog::resizeEvent(QResizeEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;83&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::closeEvent(QCloseEvent*)</primary></indexterm>QDialog::closeEvent(QCloseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;84&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::contextMenuEvent(QContextMenuEvent*)</primary></indexterm>QDialog::contextMenuEvent(QContextMenuEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;85&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::imStartEvent(QIMEvent*)</primary></indexterm>QWidget::imStartEvent(QIMEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;86&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::imComposeEvent(QIMEvent*)</primary></indexterm>QWidget::imComposeEvent(QIMEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;87&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::imEndEvent(QIMEvent*)</primary></indexterm>QWidget::imEndEvent(QIMEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;88&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::tabletEvent(QTabletEvent*)</primary></indexterm>QWidget::tabletEvent(QTabletEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;89&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragEnterEvent(QDragEnterEvent*)</primary></indexterm>QWidget::dragEnterEvent(QDragEnterEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;90&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragMoveEvent(QDragMoveEvent*)</primary></indexterm>QWidget::dragMoveEvent(QDragMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;91&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragLeaveEvent(QDragLeaveEvent*)</primary></indexterm>QWidget::dragLeaveEvent(QDragLeaveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;92&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dropEvent(QDropEvent*)</primary></indexterm>QWidget::dropEvent(QDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;93&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showEvent(QShowEvent*)</primary></indexterm>QWidget::showEvent(QShowEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;94&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::hideEvent(QHideEvent*)</primary></indexterm>QWidget::hideEvent(QHideEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;95&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::x11Event(_XEvent*)</primary></indexterm>QWidget::x11Event(_XEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;96&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::updateMask()</primary></indexterm>QWidget::updateMask()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;97&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::styleChange(QStyle&)</primary></indexterm>QWidget::styleChange(QStyle&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;98&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enabledChange(bool)</primary></indexterm>QWidget::enabledChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;99&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paletteChange(QPalette const&)</primary></indexterm>QWidget::paletteChange(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;100&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::fontChange(QFont const&)</primary></indexterm>QWidget::fontChange(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;101&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::windowActivationChange(bool)</primary></indexterm>QWidget::windowActivationChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;102&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::metric(int) const</primary></indexterm>QWidget::metric(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;103&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::create(unsigned long, bool, bool)</primary></indexterm>QWidget::create(unsigned long, bool, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;104&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::destroy(bool, bool)</primary></indexterm>QWidget::destroy(bool, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;105&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setWState(unsigned int)</primary></indexterm>NULL or QWidget::setWState(unsigned int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;106&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setWFlags(unsigned int)</primary></indexterm>NULL or QWidget::setWFlags(unsigned int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;107&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusNextPrevChild(bool)</primary></indexterm>QWidget::focusNextPrevChild(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;108&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setKeyCompression(bool)</primary></indexterm>QWidget::setKeyCompression(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;109&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMicroFocusHint(int, int, int, int, bool, QFont*)</primary></indexterm>QWidget::setMicroFocusHint(int, int, int, int, bool, QFont*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;110&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::done(int)</primary></indexterm>QDialog::done(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;111&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::accept()</primary></indexterm>QDialog::accept()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;112&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::reject()</primary></indexterm>QDialog::reject()</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--classdata-->
<TABLE id="cls-53832-1">
<TITLE>Secondary vtable for QDialog</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>-80</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QDialog</primary></indexterm>typeinfo for QDialog</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QDialog::~QDialog()</primary></indexterm>non-virtual thunk to QDialog::~QDialog()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QDialog::~QDialog()</primary></indexterm>non-virtual thunk to QDialog::~QDialog()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::setResolution(int)</primary></indexterm>QPaintDevice::setResolution(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::resolution() const</primary></indexterm>QPaintDevice::resolution() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::handle() const</primary></indexterm>QPaintDevice::handle() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::x11RenderHandle() const</primary></indexterm>QPaintDevice::x11RenderHandle() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::setX11Data(QPaintDeviceX11Data const*)</primary></indexterm>QPaintDevice::setX11Data(QPaintDeviceX11Data const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::cmd(int, QPainter*, QPDevCmdParam*)</primary></indexterm>QPaintDevice::cmd(int, QPainter*, QPDevCmdParam*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::metric(int) const</primary></indexterm>non-virtual thunk to QWidget::metric(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::fontMet(QFont*, int, char const*, int) const</primary></indexterm>QPaintDevice::fontMet(QFont*, int, char const*, int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::fontInf(QFont*, int) const</primary></indexterm>QPaintDevice::fontInf(QFont*, int) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QDialog  class
is described by <XREF LINKEND="rtti-49561">
</PARA>
<!--classdata-->
<TABLE ID="rtti-49561">
<TITLE>typeinfo for QDialog</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QDialog</primary></indexterm>typeinfo name for QDialog</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QWidget</primary></indexterm>typeinfo for QWidget</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QFontDialog</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QFontDialog class
is described by <XREF LINKEND="cls-51143-0">
</PARA>
<!--classdata-->
<TABLE id="cls-51143-0">
<TITLE>Primary vtable for QFontDialog</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QFontDialog</primary></indexterm>typeinfo for QFontDialog</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFontDialog::metaObject() const</primary></indexterm>NULL or QFontDialog::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFontDialog::className() const</primary></indexterm>QFontDialog::className() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFontDialog::qt_cast(char const*)</primary></indexterm>QFontDialog::qt_cast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFontDialog::qt_invoke(int, QUObject*)</primary></indexterm>QFontDialog::qt_invoke(int, QUObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFontDialog::qt_emit(int, QUObject*)</primary></indexterm>QFontDialog::qt_emit(int, QUObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFontDialog::qt_property(int, int, QVariant*)</primary></indexterm>QFontDialog::qt_property(int, int, QVariant*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFontDialog::~QFontDialog()</primary></indexterm>QFontDialog::~QFontDialog()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFontDialog::~QFontDialog()</primary></indexterm>QFontDialog::~QFontDialog()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::event(QEvent*)</primary></indexterm>QWidget::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFontDialog::eventFilter(QObject*, QEvent*)</primary></indexterm>QFontDialog::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setName(char const*)</primary></indexterm>QWidget::setName(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::insertChild(QObject*)</primary></indexterm>QObject::insertChild(QObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::removeChild(QObject*)</primary></indexterm>QObject::removeChild(QObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::setProperty(char const*, QVariant const&)</primary></indexterm>QObject::setProperty(char const*, QVariant const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::property(char const*) const</primary></indexterm>QObject::property(char const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QCustomEvent*)</primary></indexterm>QObject::customEvent(QCustomEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::checkConnectArgs(char const*, QObject const*, char const*)</primary></indexterm>QObject::checkConnectArgs(char const*, QObject const*, char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setEnabled(bool)</primary></indexterm>QWidget::setEnabled(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMinimumSize(int, int)</primary></indexterm>QWidget::setMinimumSize(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMaximumSize(int, int)</primary></indexterm>QWidget::setMaximumSize(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setSizeIncrement(int, int)</primary></indexterm>QWidget::setSizeIncrement(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundMode(Qt::BackgroundMode)</primary></indexterm>QWidget::setBackgroundMode(Qt::BackgroundMode)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setEraseColor(QColor const&)</primary></indexterm>QWidget::setEraseColor(QColor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setErasePixmap(QPixmap const&)</primary></indexterm>QWidget::setErasePixmap(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setPalette(QPalette const&)</primary></indexterm>QWidget::setPalette(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setPaletteBackgroundColor(QColor const&)</primary></indexterm>QWidget::setPaletteBackgroundColor(QColor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setPaletteBackgroundPixmap(QPixmap const&)</primary></indexterm>QWidget::setPaletteBackgroundPixmap(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFontDialog::setFont(QFont const&)</primary></indexterm>QFontDialog::setFont(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setCursor(QCursor const&)</primary></indexterm>QWidget::setCursor(QCursor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;33&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::unsetCursor()</primary></indexterm>QWidget::unsetCursor()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;34&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMask(QBitmap const&)</primary></indexterm>QWidget::setMask(QBitmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;35&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMask(QRegion const&)</primary></indexterm>QWidget::setMask(QRegion const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;36&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundColor(QColor const&)</primary></indexterm>QWidget::setBackgroundColor(QColor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;37&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundPixmap(QPixmap const&)</primary></indexterm>QWidget::setBackgroundPixmap(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;38&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setCaption(QString const&)</primary></indexterm>QWidget::setCaption(QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;39&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setIcon(QPixmap const&)</primary></indexterm>QWidget::setIcon(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;40&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setIconText(QString const&)</primary></indexterm>QWidget::setIconText(QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;41&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMouseTracking(bool)</primary></indexterm>QWidget::setMouseTracking(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;42&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFocus()</primary></indexterm>QWidget::setFocus()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;43&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setActiveWindow()</primary></indexterm>QWidget::setActiveWindow()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;44&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFocusPolicy(QWidget::FocusPolicy)</primary></indexterm>QWidget::setFocusPolicy(QWidget::FocusPolicy)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;45&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFocusProxy(QWidget*)</primary></indexterm>QWidget::setFocusProxy(QWidget*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;46&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setUpdatesEnabled(bool)</primary></indexterm>QWidget::setUpdatesEnabled(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;47&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::show()</primary></indexterm>QDialog::show()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;48&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::hide()</primary></indexterm>QDialog::hide()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;49&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showMinimized()</primary></indexterm>QWidget::showMinimized()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;50&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showMaximized()</primary></indexterm>QWidget::showMaximized()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;51&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showNormal()</primary></indexterm>QWidget::showNormal()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;52&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::polish()</primary></indexterm>QWidget::polish()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;53&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::move(int, int)</primary></indexterm>QDialog::move(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;54&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::resize(int, int)</primary></indexterm>QDialog::resize(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;55&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::setGeometry(int, int, int, int)</primary></indexterm>QDialog::setGeometry(int, int, int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;56&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::setGeometry(QRect const&)</primary></indexterm>QDialog::setGeometry(QRect const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;57&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::close(bool)</primary></indexterm>QWidget::close(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;58&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::sizeHint() const</primary></indexterm>QDialog::sizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;59&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::minimumSizeHint() const</primary></indexterm>QDialog::minimumSizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;60&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::sizePolicy() const</primary></indexterm>QWidget::sizePolicy() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;61&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setSizePolicy(QSizePolicy)</primary></indexterm>QWidget::setSizePolicy(QSizePolicy)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;62&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::heightForWidth(int) const</primary></indexterm>QWidget::heightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;63&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::adjustSize()</primary></indexterm>QWidget::adjustSize()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;64&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::reparent(QWidget*, unsigned int, QPoint const&, bool)</primary></indexterm>QWidget::reparent(QWidget*, unsigned int, QPoint const&, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;65&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setAcceptDrops(bool)</primary></indexterm>QWidget::setAcceptDrops(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;66&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setAutoMask(bool)</primary></indexterm>QWidget::setAutoMask(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;67&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundOrigin(QWidget::BackgroundOrigin)</primary></indexterm>QWidget::setBackgroundOrigin(QWidget::BackgroundOrigin)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;68&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::customWhatsThis() const</primary></indexterm>QWidget::customWhatsThis() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;69&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mousePressEvent(QMouseEvent*)</primary></indexterm>QWidget::mousePressEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;70&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseReleaseEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseReleaseEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;71&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseDoubleClickEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseDoubleClickEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;72&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseMoveEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseMoveEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;73&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::wheelEvent(QWheelEvent*)</primary></indexterm>QWidget::wheelEvent(QWheelEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;74&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::keyPressEvent(QKeyEvent*)</primary></indexterm>QDialog::keyPressEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;75&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyReleaseEvent(QKeyEvent*)</primary></indexterm>QWidget::keyReleaseEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;76&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusInEvent(QFocusEvent*)</primary></indexterm>QWidget::focusInEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;77&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusOutEvent(QFocusEvent*)</primary></indexterm>QWidget::focusOutEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;78&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enterEvent(QEvent*)</primary></indexterm>QWidget::enterEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;79&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::leaveEvent(QEvent*)</primary></indexterm>QWidget::leaveEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;80&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paintEvent(QPaintEvent*)</primary></indexterm>QWidget::paintEvent(QPaintEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;81&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::moveEvent(QMoveEvent*)</primary></indexterm>QWidget::moveEvent(QMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;82&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::resizeEvent(QResizeEvent*)</primary></indexterm>QDialog::resizeEvent(QResizeEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;83&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::closeEvent(QCloseEvent*)</primary></indexterm>QDialog::closeEvent(QCloseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;84&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::contextMenuEvent(QContextMenuEvent*)</primary></indexterm>QDialog::contextMenuEvent(QContextMenuEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;85&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::imStartEvent(QIMEvent*)</primary></indexterm>QWidget::imStartEvent(QIMEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;86&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::imComposeEvent(QIMEvent*)</primary></indexterm>QWidget::imComposeEvent(QIMEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;87&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::imEndEvent(QIMEvent*)</primary></indexterm>QWidget::imEndEvent(QIMEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;88&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::tabletEvent(QTabletEvent*)</primary></indexterm>QWidget::tabletEvent(QTabletEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;89&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragEnterEvent(QDragEnterEvent*)</primary></indexterm>QWidget::dragEnterEvent(QDragEnterEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;90&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragMoveEvent(QDragMoveEvent*)</primary></indexterm>QWidget::dragMoveEvent(QDragMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;91&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragLeaveEvent(QDragLeaveEvent*)</primary></indexterm>QWidget::dragLeaveEvent(QDragLeaveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;92&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dropEvent(QDropEvent*)</primary></indexterm>QWidget::dropEvent(QDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;93&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showEvent(QShowEvent*)</primary></indexterm>QWidget::showEvent(QShowEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;94&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::hideEvent(QHideEvent*)</primary></indexterm>QWidget::hideEvent(QHideEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;95&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::x11Event(_XEvent*)</primary></indexterm>QWidget::x11Event(_XEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;96&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::updateMask()</primary></indexterm>QWidget::updateMask()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;97&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::styleChange(QStyle&)</primary></indexterm>QWidget::styleChange(QStyle&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;98&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enabledChange(bool)</primary></indexterm>QWidget::enabledChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;99&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paletteChange(QPalette const&)</primary></indexterm>QWidget::paletteChange(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;100&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::fontChange(QFont const&)</primary></indexterm>QWidget::fontChange(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;101&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::windowActivationChange(bool)</primary></indexterm>QWidget::windowActivationChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;102&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::metric(int) const</primary></indexterm>QWidget::metric(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;103&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::create(unsigned long, bool, bool)</primary></indexterm>QWidget::create(unsigned long, bool, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;104&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::destroy(bool, bool)</primary></indexterm>QWidget::destroy(bool, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;105&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setWState(unsigned int)</primary></indexterm>NULL or QWidget::setWState(unsigned int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;106&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setWFlags(unsigned int)</primary></indexterm>NULL or QWidget::setWFlags(unsigned int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;107&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusNextPrevChild(bool)</primary></indexterm>QWidget::focusNextPrevChild(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;108&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setKeyCompression(bool)</primary></indexterm>QWidget::setKeyCompression(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;109&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMicroFocusHint(int, int, int, int, bool, QFont*)</primary></indexterm>QWidget::setMicroFocusHint(int, int, int, int, bool, QFont*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;110&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::done(int)</primary></indexterm>QDialog::done(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;111&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::accept()</primary></indexterm>QDialog::accept()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;112&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::reject()</primary></indexterm>QDialog::reject()</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--classdata-->
<TABLE id="cls-51143-1">
<TITLE>Secondary vtable for QFontDialog</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>-80</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QFontDialog</primary></indexterm>typeinfo for QFontDialog</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QFontDialog::~QFontDialog()</primary></indexterm>non-virtual thunk to QFontDialog::~QFontDialog()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QFontDialog::~QFontDialog()</primary></indexterm>non-virtual thunk to QFontDialog::~QFontDialog()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::setResolution(int)</primary></indexterm>QPaintDevice::setResolution(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::resolution() const</primary></indexterm>QPaintDevice::resolution() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::handle() const</primary></indexterm>QPaintDevice::handle() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::x11RenderHandle() const</primary></indexterm>QPaintDevice::x11RenderHandle() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::setX11Data(QPaintDeviceX11Data const*)</primary></indexterm>QPaintDevice::setX11Data(QPaintDeviceX11Data const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::cmd(int, QPainter*, QPDevCmdParam*)</primary></indexterm>QPaintDevice::cmd(int, QPainter*, QPDevCmdParam*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::metric(int) const</primary></indexterm>non-virtual thunk to QWidget::metric(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::fontMet(QFont*, int, char const*, int) const</primary></indexterm>QPaintDevice::fontMet(QFont*, int, char const*, int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::fontInf(QFont*, int) const</primary></indexterm>QPaintDevice::fontInf(QFont*, int) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QFontDialog  class
is described by <XREF LINKEND="rtti-50225">
</PARA>
<!--classdata-->
<TABLE ID="rtti-50225">
<TITLE>typeinfo for QFontDialog</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QFontDialog</primary></indexterm>typeinfo name for QFontDialog</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QDialog</primary></indexterm>typeinfo for QDialog</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QPrintDialog</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QPrintDialog class
is described by <XREF LINKEND="cls-48615-0">
</PARA>
<!--classdata-->
<TABLE id="cls-48615-0">
<TITLE>Primary vtable for QPrintDialog</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QPrintDialog</primary></indexterm>typeinfo for QPrintDialog</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPrintDialog::metaObject() const</primary></indexterm>NULL or QPrintDialog::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPrintDialog::className() const</primary></indexterm>QPrintDialog::className() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPrintDialog::qt_cast(char const*)</primary></indexterm>QPrintDialog::qt_cast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPrintDialog::qt_invoke(int, QUObject*)</primary></indexterm>QPrintDialog::qt_invoke(int, QUObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPrintDialog::qt_emit(int, QUObject*)</primary></indexterm>QPrintDialog::qt_emit(int, QUObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPrintDialog::qt_property(int, int, QVariant*)</primary></indexterm>QPrintDialog::qt_property(int, int, QVariant*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPrintDialog::~QPrintDialog()</primary></indexterm>QPrintDialog::~QPrintDialog()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPrintDialog::~QPrintDialog()</primary></indexterm>QPrintDialog::~QPrintDialog()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::event(QEvent*)</primary></indexterm>QWidget::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::eventFilter(QObject*, QEvent*)</primary></indexterm>QDialog::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setName(char const*)</primary></indexterm>QWidget::setName(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::insertChild(QObject*)</primary></indexterm>QObject::insertChild(QObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::removeChild(QObject*)</primary></indexterm>QObject::removeChild(QObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::setProperty(char const*, QVariant const&)</primary></indexterm>QObject::setProperty(char const*, QVariant const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::property(char const*) const</primary></indexterm>QObject::property(char const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QCustomEvent*)</primary></indexterm>QObject::customEvent(QCustomEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::checkConnectArgs(char const*, QObject const*, char const*)</primary></indexterm>QObject::checkConnectArgs(char const*, QObject const*, char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setEnabled(bool)</primary></indexterm>QWidget::setEnabled(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMinimumSize(int, int)</primary></indexterm>QWidget::setMinimumSize(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMaximumSize(int, int)</primary></indexterm>QWidget::setMaximumSize(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setSizeIncrement(int, int)</primary></indexterm>QWidget::setSizeIncrement(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundMode(Qt::BackgroundMode)</primary></indexterm>QWidget::setBackgroundMode(Qt::BackgroundMode)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setEraseColor(QColor const&)</primary></indexterm>QWidget::setEraseColor(QColor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setErasePixmap(QPixmap const&)</primary></indexterm>QWidget::setErasePixmap(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setPalette(QPalette const&)</primary></indexterm>QWidget::setPalette(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setPaletteBackgroundColor(QColor const&)</primary></indexterm>QWidget::setPaletteBackgroundColor(QColor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setPaletteBackgroundPixmap(QPixmap const&)</primary></indexterm>QWidget::setPaletteBackgroundPixmap(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFont(QFont const&)</primary></indexterm>QWidget::setFont(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setCursor(QCursor const&)</primary></indexterm>QWidget::setCursor(QCursor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;33&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::unsetCursor()</primary></indexterm>QWidget::unsetCursor()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;34&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMask(QBitmap const&)</primary></indexterm>QWidget::setMask(QBitmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;35&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMask(QRegion const&)</primary></indexterm>QWidget::setMask(QRegion const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;36&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundColor(QColor const&)</primary></indexterm>QWidget::setBackgroundColor(QColor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;37&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundPixmap(QPixmap const&)</primary></indexterm>QWidget::setBackgroundPixmap(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;38&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setCaption(QString const&)</primary></indexterm>QWidget::setCaption(QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;39&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setIcon(QPixmap const&)</primary></indexterm>QWidget::setIcon(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;40&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setIconText(QString const&)</primary></indexterm>QWidget::setIconText(QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;41&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMouseTracking(bool)</primary></indexterm>QWidget::setMouseTracking(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;42&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFocus()</primary></indexterm>QWidget::setFocus()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;43&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setActiveWindow()</primary></indexterm>QWidget::setActiveWindow()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;44&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFocusPolicy(QWidget::FocusPolicy)</primary></indexterm>QWidget::setFocusPolicy(QWidget::FocusPolicy)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;45&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFocusProxy(QWidget*)</primary></indexterm>QWidget::setFocusProxy(QWidget*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;46&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setUpdatesEnabled(bool)</primary></indexterm>QWidget::setUpdatesEnabled(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;47&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::show()</primary></indexterm>QDialog::show()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;48&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::hide()</primary></indexterm>QDialog::hide()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;49&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showMinimized()</primary></indexterm>QWidget::showMinimized()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;50&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showMaximized()</primary></indexterm>QWidget::showMaximized()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;51&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showNormal()</primary></indexterm>QWidget::showNormal()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;52&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::polish()</primary></indexterm>QWidget::polish()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;53&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::move(int, int)</primary></indexterm>QDialog::move(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;54&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::resize(int, int)</primary></indexterm>QDialog::resize(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;55&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::setGeometry(int, int, int, int)</primary></indexterm>QDialog::setGeometry(int, int, int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;56&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::setGeometry(QRect const&)</primary></indexterm>QDialog::setGeometry(QRect const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;57&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::close(bool)</primary></indexterm>QWidget::close(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;58&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::sizeHint() const</primary></indexterm>QDialog::sizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;59&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::minimumSizeHint() const</primary></indexterm>QDialog::minimumSizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;60&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::sizePolicy() const</primary></indexterm>QWidget::sizePolicy() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;61&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setSizePolicy(QSizePolicy)</primary></indexterm>QWidget::setSizePolicy(QSizePolicy)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;62&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::heightForWidth(int) const</primary></indexterm>QWidget::heightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;63&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::adjustSize()</primary></indexterm>QWidget::adjustSize()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;64&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::reparent(QWidget*, unsigned int, QPoint const&, bool)</primary></indexterm>QWidget::reparent(QWidget*, unsigned int, QPoint const&, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;65&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setAcceptDrops(bool)</primary></indexterm>QWidget::setAcceptDrops(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;66&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setAutoMask(bool)</primary></indexterm>QWidget::setAutoMask(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;67&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundOrigin(QWidget::BackgroundOrigin)</primary></indexterm>QWidget::setBackgroundOrigin(QWidget::BackgroundOrigin)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;68&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::customWhatsThis() const</primary></indexterm>QWidget::customWhatsThis() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;69&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mousePressEvent(QMouseEvent*)</primary></indexterm>QWidget::mousePressEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;70&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseReleaseEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseReleaseEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;71&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseDoubleClickEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseDoubleClickEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;72&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseMoveEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseMoveEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;73&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::wheelEvent(QWheelEvent*)</primary></indexterm>QWidget::wheelEvent(QWheelEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;74&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::keyPressEvent(QKeyEvent*)</primary></indexterm>QDialog::keyPressEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;75&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyReleaseEvent(QKeyEvent*)</primary></indexterm>QWidget::keyReleaseEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;76&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusInEvent(QFocusEvent*)</primary></indexterm>QWidget::focusInEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;77&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusOutEvent(QFocusEvent*)</primary></indexterm>QWidget::focusOutEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;78&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enterEvent(QEvent*)</primary></indexterm>QWidget::enterEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;79&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::leaveEvent(QEvent*)</primary></indexterm>QWidget::leaveEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;80&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paintEvent(QPaintEvent*)</primary></indexterm>QWidget::paintEvent(QPaintEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;81&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::moveEvent(QMoveEvent*)</primary></indexterm>QWidget::moveEvent(QMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;82&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::resizeEvent(QResizeEvent*)</primary></indexterm>QDialog::resizeEvent(QResizeEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;83&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::closeEvent(QCloseEvent*)</primary></indexterm>QDialog::closeEvent(QCloseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;84&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::contextMenuEvent(QContextMenuEvent*)</primary></indexterm>QDialog::contextMenuEvent(QContextMenuEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;85&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::imStartEvent(QIMEvent*)</primary></indexterm>QWidget::imStartEvent(QIMEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;86&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::imComposeEvent(QIMEvent*)</primary></indexterm>QWidget::imComposeEvent(QIMEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;87&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::imEndEvent(QIMEvent*)</primary></indexterm>QWidget::imEndEvent(QIMEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;88&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::tabletEvent(QTabletEvent*)</primary></indexterm>QWidget::tabletEvent(QTabletEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;89&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragEnterEvent(QDragEnterEvent*)</primary></indexterm>QWidget::dragEnterEvent(QDragEnterEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;90&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragMoveEvent(QDragMoveEvent*)</primary></indexterm>QWidget::dragMoveEvent(QDragMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;91&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragLeaveEvent(QDragLeaveEvent*)</primary></indexterm>QWidget::dragLeaveEvent(QDragLeaveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;92&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dropEvent(QDropEvent*)</primary></indexterm>QWidget::dropEvent(QDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;93&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showEvent(QShowEvent*)</primary></indexterm>QWidget::showEvent(QShowEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;94&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::hideEvent(QHideEvent*)</primary></indexterm>QWidget::hideEvent(QHideEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;95&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::x11Event(_XEvent*)</primary></indexterm>QWidget::x11Event(_XEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;96&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::updateMask()</primary></indexterm>QWidget::updateMask()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;97&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::styleChange(QStyle&)</primary></indexterm>QWidget::styleChange(QStyle&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;98&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enabledChange(bool)</primary></indexterm>QWidget::enabledChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;99&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paletteChange(QPalette const&)</primary></indexterm>QWidget::paletteChange(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;100&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::fontChange(QFont const&)</primary></indexterm>QWidget::fontChange(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;101&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::windowActivationChange(bool)</primary></indexterm>QWidget::windowActivationChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;102&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::metric(int) const</primary></indexterm>QWidget::metric(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;103&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::create(unsigned long, bool, bool)</primary></indexterm>QWidget::create(unsigned long, bool, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;104&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::destroy(bool, bool)</primary></indexterm>QWidget::destroy(bool, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;105&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setWState(unsigned int)</primary></indexterm>NULL or QWidget::setWState(unsigned int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;106&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setWFlags(unsigned int)</primary></indexterm>NULL or QWidget::setWFlags(unsigned int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;107&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusNextPrevChild(bool)</primary></indexterm>QWidget::focusNextPrevChild(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;108&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setKeyCompression(bool)</primary></indexterm>QWidget::setKeyCompression(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;109&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMicroFocusHint(int, int, int, int, bool, QFont*)</primary></indexterm>QWidget::setMicroFocusHint(int, int, int, int, bool, QFont*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;110&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::done(int)</primary></indexterm>QDialog::done(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;111&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::accept()</primary></indexterm>QDialog::accept()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;112&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::reject()</primary></indexterm>QDialog::reject()</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--classdata-->
<TABLE id="cls-48615-1">
<TITLE>Secondary vtable for QPrintDialog</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>-80</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QPrintDialog</primary></indexterm>typeinfo for QPrintDialog</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QPrintDialog::~QPrintDialog()</primary></indexterm>non-virtual thunk to QPrintDialog::~QPrintDialog()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QPrintDialog::~QPrintDialog()</primary></indexterm>non-virtual thunk to QPrintDialog::~QPrintDialog()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::setResolution(int)</primary></indexterm>QPaintDevice::setResolution(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::resolution() const</primary></indexterm>QPaintDevice::resolution() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::handle() const</primary></indexterm>QPaintDevice::handle() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::x11RenderHandle() const</primary></indexterm>QPaintDevice::x11RenderHandle() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::setX11Data(QPaintDeviceX11Data const*)</primary></indexterm>QPaintDevice::setX11Data(QPaintDeviceX11Data const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::cmd(int, QPainter*, QPDevCmdParam*)</primary></indexterm>QPaintDevice::cmd(int, QPainter*, QPDevCmdParam*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::metric(int) const</primary></indexterm>non-virtual thunk to QWidget::metric(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::fontMet(QFont*, int, char const*, int) const</primary></indexterm>QPaintDevice::fontMet(QFont*, int, char const*, int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::fontInf(QFont*, int) const</primary></indexterm>QPaintDevice::fontInf(QFont*, int) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QPrintDialog  class
is described by <XREF LINKEND="rtti-58519">
</PARA>
<!--classdata-->
<TABLE ID="rtti-58519">
<TITLE>typeinfo for QPrintDialog</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QPrintDialog</primary></indexterm>typeinfo name for QPrintDialog</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QDialog</primary></indexterm>typeinfo for QDialog</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QColorDialog</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QColorDialog class
is described by <XREF LINKEND="cls-55687-0">
</PARA>
<!--classdata-->
<TABLE id="cls-55687-0">
<TITLE>Primary vtable for QColorDialog</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QColorDialog</primary></indexterm>typeinfo for QColorDialog</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QColorDialog::metaObject() const</primary></indexterm>NULL or QColorDialog::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QColorDialog::className() const</primary></indexterm>QColorDialog::className() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QColorDialog::qt_cast(char const*)</primary></indexterm>QColorDialog::qt_cast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QColorDialog::qt_invoke(int, QUObject*)</primary></indexterm>QColorDialog::qt_invoke(int, QUObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QColorDialog::qt_emit(int, QUObject*)</primary></indexterm>QColorDialog::qt_emit(int, QUObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QColorDialog::qt_property(int, int, QVariant*)</primary></indexterm>QColorDialog::qt_property(int, int, QVariant*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QColorDialog::~QColorDialog()</primary></indexterm>QColorDialog::~QColorDialog()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QColorDialog::~QColorDialog()</primary></indexterm>QColorDialog::~QColorDialog()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::event(QEvent*)</primary></indexterm>QWidget::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::eventFilter(QObject*, QEvent*)</primary></indexterm>QDialog::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setName(char const*)</primary></indexterm>QWidget::setName(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::insertChild(QObject*)</primary></indexterm>QObject::insertChild(QObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::removeChild(QObject*)</primary></indexterm>QObject::removeChild(QObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::setProperty(char const*, QVariant const&)</primary></indexterm>QObject::setProperty(char const*, QVariant const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::property(char const*) const</primary></indexterm>QObject::property(char const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QCustomEvent*)</primary></indexterm>QObject::customEvent(QCustomEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::checkConnectArgs(char const*, QObject const*, char const*)</primary></indexterm>QObject::checkConnectArgs(char const*, QObject const*, char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setEnabled(bool)</primary></indexterm>QWidget::setEnabled(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMinimumSize(int, int)</primary></indexterm>QWidget::setMinimumSize(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMaximumSize(int, int)</primary></indexterm>QWidget::setMaximumSize(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setSizeIncrement(int, int)</primary></indexterm>QWidget::setSizeIncrement(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundMode(Qt::BackgroundMode)</primary></indexterm>QWidget::setBackgroundMode(Qt::BackgroundMode)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setEraseColor(QColor const&)</primary></indexterm>QWidget::setEraseColor(QColor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setErasePixmap(QPixmap const&)</primary></indexterm>QWidget::setErasePixmap(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setPalette(QPalette const&)</primary></indexterm>QWidget::setPalette(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setPaletteBackgroundColor(QColor const&)</primary></indexterm>QWidget::setPaletteBackgroundColor(QColor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setPaletteBackgroundPixmap(QPixmap const&)</primary></indexterm>QWidget::setPaletteBackgroundPixmap(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFont(QFont const&)</primary></indexterm>QWidget::setFont(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setCursor(QCursor const&)</primary></indexterm>QWidget::setCursor(QCursor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;33&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::unsetCursor()</primary></indexterm>QWidget::unsetCursor()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;34&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMask(QBitmap const&)</primary></indexterm>QWidget::setMask(QBitmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;35&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMask(QRegion const&)</primary></indexterm>QWidget::setMask(QRegion const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;36&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundColor(QColor const&)</primary></indexterm>QWidget::setBackgroundColor(QColor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;37&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundPixmap(QPixmap const&)</primary></indexterm>QWidget::setBackgroundPixmap(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;38&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setCaption(QString const&)</primary></indexterm>QWidget::setCaption(QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;39&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setIcon(QPixmap const&)</primary></indexterm>QWidget::setIcon(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;40&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setIconText(QString const&)</primary></indexterm>QWidget::setIconText(QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;41&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMouseTracking(bool)</primary></indexterm>QWidget::setMouseTracking(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;42&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFocus()</primary></indexterm>QWidget::setFocus()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;43&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setActiveWindow()</primary></indexterm>QWidget::setActiveWindow()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;44&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFocusPolicy(QWidget::FocusPolicy)</primary></indexterm>QWidget::setFocusPolicy(QWidget::FocusPolicy)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;45&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFocusProxy(QWidget*)</primary></indexterm>QWidget::setFocusProxy(QWidget*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;46&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setUpdatesEnabled(bool)</primary></indexterm>QWidget::setUpdatesEnabled(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;47&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::show()</primary></indexterm>QDialog::show()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;48&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::hide()</primary></indexterm>QDialog::hide()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;49&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showMinimized()</primary></indexterm>QWidget::showMinimized()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;50&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showMaximized()</primary></indexterm>QWidget::showMaximized()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;51&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showNormal()</primary></indexterm>QWidget::showNormal()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;52&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::polish()</primary></indexterm>QWidget::polish()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;53&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::move(int, int)</primary></indexterm>QDialog::move(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;54&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::resize(int, int)</primary></indexterm>QDialog::resize(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;55&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::setGeometry(int, int, int, int)</primary></indexterm>QDialog::setGeometry(int, int, int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;56&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::setGeometry(QRect const&)</primary></indexterm>QDialog::setGeometry(QRect const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;57&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::close(bool)</primary></indexterm>QWidget::close(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;58&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::sizeHint() const</primary></indexterm>QDialog::sizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;59&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::minimumSizeHint() const</primary></indexterm>QDialog::minimumSizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;60&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::sizePolicy() const</primary></indexterm>QWidget::sizePolicy() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;61&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setSizePolicy(QSizePolicy)</primary></indexterm>QWidget::setSizePolicy(QSizePolicy)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;62&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::heightForWidth(int) const</primary></indexterm>QWidget::heightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;63&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::adjustSize()</primary></indexterm>QWidget::adjustSize()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;64&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::reparent(QWidget*, unsigned int, QPoint const&, bool)</primary></indexterm>QWidget::reparent(QWidget*, unsigned int, QPoint const&, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;65&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setAcceptDrops(bool)</primary></indexterm>QWidget::setAcceptDrops(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;66&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setAutoMask(bool)</primary></indexterm>QWidget::setAutoMask(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;67&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundOrigin(QWidget::BackgroundOrigin)</primary></indexterm>QWidget::setBackgroundOrigin(QWidget::BackgroundOrigin)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;68&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::customWhatsThis() const</primary></indexterm>QWidget::customWhatsThis() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;69&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mousePressEvent(QMouseEvent*)</primary></indexterm>QWidget::mousePressEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;70&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseReleaseEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseReleaseEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;71&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseDoubleClickEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseDoubleClickEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;72&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseMoveEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseMoveEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;73&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::wheelEvent(QWheelEvent*)</primary></indexterm>QWidget::wheelEvent(QWheelEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;74&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::keyPressEvent(QKeyEvent*)</primary></indexterm>QDialog::keyPressEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;75&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyReleaseEvent(QKeyEvent*)</primary></indexterm>QWidget::keyReleaseEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;76&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusInEvent(QFocusEvent*)</primary></indexterm>QWidget::focusInEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;77&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusOutEvent(QFocusEvent*)</primary></indexterm>QWidget::focusOutEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;78&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enterEvent(QEvent*)</primary></indexterm>QWidget::enterEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;79&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::leaveEvent(QEvent*)</primary></indexterm>QWidget::leaveEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;80&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paintEvent(QPaintEvent*)</primary></indexterm>QWidget::paintEvent(QPaintEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;81&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::moveEvent(QMoveEvent*)</primary></indexterm>QWidget::moveEvent(QMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;82&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::resizeEvent(QResizeEvent*)</primary></indexterm>QDialog::resizeEvent(QResizeEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;83&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::closeEvent(QCloseEvent*)</primary></indexterm>QDialog::closeEvent(QCloseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;84&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::contextMenuEvent(QContextMenuEvent*)</primary></indexterm>QDialog::contextMenuEvent(QContextMenuEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;85&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::imStartEvent(QIMEvent*)</primary></indexterm>QWidget::imStartEvent(QIMEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;86&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::imComposeEvent(QIMEvent*)</primary></indexterm>QWidget::imComposeEvent(QIMEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;87&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::imEndEvent(QIMEvent*)</primary></indexterm>QWidget::imEndEvent(QIMEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;88&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::tabletEvent(QTabletEvent*)</primary></indexterm>QWidget::tabletEvent(QTabletEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;89&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragEnterEvent(QDragEnterEvent*)</primary></indexterm>QWidget::dragEnterEvent(QDragEnterEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;90&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragMoveEvent(QDragMoveEvent*)</primary></indexterm>QWidget::dragMoveEvent(QDragMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;91&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragLeaveEvent(QDragLeaveEvent*)</primary></indexterm>QWidget::dragLeaveEvent(QDragLeaveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;92&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dropEvent(QDropEvent*)</primary></indexterm>QWidget::dropEvent(QDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;93&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showEvent(QShowEvent*)</primary></indexterm>QWidget::showEvent(QShowEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;94&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::hideEvent(QHideEvent*)</primary></indexterm>QWidget::hideEvent(QHideEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;95&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::x11Event(_XEvent*)</primary></indexterm>QWidget::x11Event(_XEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;96&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::updateMask()</primary></indexterm>QWidget::updateMask()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;97&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::styleChange(QStyle&)</primary></indexterm>QWidget::styleChange(QStyle&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;98&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enabledChange(bool)</primary></indexterm>QWidget::enabledChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;99&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paletteChange(QPalette const&)</primary></indexterm>QWidget::paletteChange(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;100&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::fontChange(QFont const&)</primary></indexterm>QWidget::fontChange(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;101&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::windowActivationChange(bool)</primary></indexterm>QWidget::windowActivationChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;102&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::metric(int) const</primary></indexterm>QWidget::metric(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;103&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::create(unsigned long, bool, bool)</primary></indexterm>QWidget::create(unsigned long, bool, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;104&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::destroy(bool, bool)</primary></indexterm>QWidget::destroy(bool, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;105&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setWState(unsigned int)</primary></indexterm>NULL or QWidget::setWState(unsigned int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;106&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setWFlags(unsigned int)</primary></indexterm>NULL or QWidget::setWFlags(unsigned int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;107&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusNextPrevChild(bool)</primary></indexterm>QWidget::focusNextPrevChild(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;108&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setKeyCompression(bool)</primary></indexterm>QWidget::setKeyCompression(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;109&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMicroFocusHint(int, int, int, int, bool, QFont*)</primary></indexterm>QWidget::setMicroFocusHint(int, int, int, int, bool, QFont*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;110&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::done(int)</primary></indexterm>QDialog::done(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;111&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::accept()</primary></indexterm>QDialog::accept()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;112&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::reject()</primary></indexterm>QDialog::reject()</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--classdata-->
<TABLE id="cls-55687-1">
<TITLE>Secondary vtable for QColorDialog</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>-80</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QColorDialog</primary></indexterm>typeinfo for QColorDialog</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QColorDialog::~QColorDialog()</primary></indexterm>non-virtual thunk to QColorDialog::~QColorDialog()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QColorDialog::~QColorDialog()</primary></indexterm>non-virtual thunk to QColorDialog::~QColorDialog()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::setResolution(int)</primary></indexterm>QPaintDevice::setResolution(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::resolution() const</primary></indexterm>QPaintDevice::resolution() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::handle() const</primary></indexterm>QPaintDevice::handle() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::x11RenderHandle() const</primary></indexterm>QPaintDevice::x11RenderHandle() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::setX11Data(QPaintDeviceX11Data const*)</primary></indexterm>QPaintDevice::setX11Data(QPaintDeviceX11Data const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::cmd(int, QPainter*, QPDevCmdParam*)</primary></indexterm>QPaintDevice::cmd(int, QPainter*, QPDevCmdParam*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::metric(int) const</primary></indexterm>non-virtual thunk to QWidget::metric(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::fontMet(QFont*, int, char const*, int) const</primary></indexterm>QPaintDevice::fontMet(QFont*, int, char const*, int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::fontInf(QFont*, int) const</primary></indexterm>QPaintDevice::fontInf(QFont*, int) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QColorDialog  class
is described by <XREF LINKEND="rtti-59362">
</PARA>
<!--classdata-->
<TABLE ID="rtti-59362">
<TITLE>typeinfo for QColorDialog</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QColorDialog</primary></indexterm>typeinfo name for QColorDialog</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QDialog</primary></indexterm>typeinfo for QDialog</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QInputDialog</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QInputDialog class
is described by <XREF LINKEND="cls-54680-0">
</PARA>
<!--classdata-->
<TABLE id="cls-54680-0">
<TITLE>Primary vtable for QInputDialog</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QInputDialog</primary></indexterm>typeinfo for QInputDialog</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QInputDialog::metaObject() const</primary></indexterm>NULL or QInputDialog::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QInputDialog::className() const</primary></indexterm>QInputDialog::className() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QInputDialog::qt_cast(char const*)</primary></indexterm>QInputDialog::qt_cast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QInputDialog::qt_invoke(int, QUObject*)</primary></indexterm>QInputDialog::qt_invoke(int, QUObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QInputDialog::qt_emit(int, QUObject*)</primary></indexterm>QInputDialog::qt_emit(int, QUObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QInputDialog::qt_property(int, int, QVariant*)</primary></indexterm>QInputDialog::qt_property(int, int, QVariant*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QInputDialog::~QInputDialog()</primary></indexterm>QInputDialog::~QInputDialog()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QInputDialog::~QInputDialog()</primary></indexterm>QInputDialog::~QInputDialog()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::event(QEvent*)</primary></indexterm>QWidget::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::eventFilter(QObject*, QEvent*)</primary></indexterm>QDialog::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setName(char const*)</primary></indexterm>QWidget::setName(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::insertChild(QObject*)</primary></indexterm>QObject::insertChild(QObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::removeChild(QObject*)</primary></indexterm>QObject::removeChild(QObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::setProperty(char const*, QVariant const&)</primary></indexterm>QObject::setProperty(char const*, QVariant const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::property(char const*) const</primary></indexterm>QObject::property(char const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QCustomEvent*)</primary></indexterm>QObject::customEvent(QCustomEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::checkConnectArgs(char const*, QObject const*, char const*)</primary></indexterm>QObject::checkConnectArgs(char const*, QObject const*, char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setEnabled(bool)</primary></indexterm>QWidget::setEnabled(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMinimumSize(int, int)</primary></indexterm>QWidget::setMinimumSize(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMaximumSize(int, int)</primary></indexterm>QWidget::setMaximumSize(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setSizeIncrement(int, int)</primary></indexterm>QWidget::setSizeIncrement(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundMode(Qt::BackgroundMode)</primary></indexterm>QWidget::setBackgroundMode(Qt::BackgroundMode)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setEraseColor(QColor const&)</primary></indexterm>QWidget::setEraseColor(QColor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setErasePixmap(QPixmap const&)</primary></indexterm>QWidget::setErasePixmap(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setPalette(QPalette const&)</primary></indexterm>QWidget::setPalette(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setPaletteBackgroundColor(QColor const&)</primary></indexterm>QWidget::setPaletteBackgroundColor(QColor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setPaletteBackgroundPixmap(QPixmap const&)</primary></indexterm>QWidget::setPaletteBackgroundPixmap(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFont(QFont const&)</primary></indexterm>QWidget::setFont(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setCursor(QCursor const&)</primary></indexterm>QWidget::setCursor(QCursor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;33&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::unsetCursor()</primary></indexterm>QWidget::unsetCursor()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;34&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMask(QBitmap const&)</primary></indexterm>QWidget::setMask(QBitmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;35&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMask(QRegion const&)</primary></indexterm>QWidget::setMask(QRegion const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;36&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundColor(QColor const&)</primary></indexterm>QWidget::setBackgroundColor(QColor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;37&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundPixmap(QPixmap const&)</primary></indexterm>QWidget::setBackgroundPixmap(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;38&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setCaption(QString const&)</primary></indexterm>QWidget::setCaption(QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;39&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setIcon(QPixmap const&)</primary></indexterm>QWidget::setIcon(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;40&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setIconText(QString const&)</primary></indexterm>QWidget::setIconText(QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;41&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMouseTracking(bool)</primary></indexterm>QWidget::setMouseTracking(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;42&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFocus()</primary></indexterm>QWidget::setFocus()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;43&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setActiveWindow()</primary></indexterm>QWidget::setActiveWindow()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;44&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFocusPolicy(QWidget::FocusPolicy)</primary></indexterm>QWidget::setFocusPolicy(QWidget::FocusPolicy)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;45&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFocusProxy(QWidget*)</primary></indexterm>QWidget::setFocusProxy(QWidget*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;46&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setUpdatesEnabled(bool)</primary></indexterm>QWidget::setUpdatesEnabled(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;47&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::show()</primary></indexterm>QDialog::show()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;48&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::hide()</primary></indexterm>QDialog::hide()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;49&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showMinimized()</primary></indexterm>QWidget::showMinimized()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;50&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showMaximized()</primary></indexterm>QWidget::showMaximized()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;51&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showNormal()</primary></indexterm>QWidget::showNormal()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;52&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::polish()</primary></indexterm>QWidget::polish()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;53&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::move(int, int)</primary></indexterm>QDialog::move(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;54&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::resize(int, int)</primary></indexterm>QDialog::resize(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;55&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::setGeometry(int, int, int, int)</primary></indexterm>QDialog::setGeometry(int, int, int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;56&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::setGeometry(QRect const&)</primary></indexterm>QDialog::setGeometry(QRect const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;57&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::close(bool)</primary></indexterm>QWidget::close(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;58&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::sizeHint() const</primary></indexterm>QDialog::sizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;59&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::minimumSizeHint() const</primary></indexterm>QDialog::minimumSizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;60&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::sizePolicy() const</primary></indexterm>QWidget::sizePolicy() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;61&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setSizePolicy(QSizePolicy)</primary></indexterm>QWidget::setSizePolicy(QSizePolicy)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;62&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::heightForWidth(int) const</primary></indexterm>QWidget::heightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;63&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::adjustSize()</primary></indexterm>QWidget::adjustSize()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;64&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::reparent(QWidget*, unsigned int, QPoint const&, bool)</primary></indexterm>QWidget::reparent(QWidget*, unsigned int, QPoint const&, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;65&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setAcceptDrops(bool)</primary></indexterm>QWidget::setAcceptDrops(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;66&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setAutoMask(bool)</primary></indexterm>QWidget::setAutoMask(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;67&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundOrigin(QWidget::BackgroundOrigin)</primary></indexterm>QWidget::setBackgroundOrigin(QWidget::BackgroundOrigin)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;68&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::customWhatsThis() const</primary></indexterm>QWidget::customWhatsThis() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;69&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mousePressEvent(QMouseEvent*)</primary></indexterm>QWidget::mousePressEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;70&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseReleaseEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseReleaseEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;71&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseDoubleClickEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseDoubleClickEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;72&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseMoveEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseMoveEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;73&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::wheelEvent(QWheelEvent*)</primary></indexterm>QWidget::wheelEvent(QWheelEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;74&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::keyPressEvent(QKeyEvent*)</primary></indexterm>QDialog::keyPressEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;75&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyReleaseEvent(QKeyEvent*)</primary></indexterm>QWidget::keyReleaseEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;76&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusInEvent(QFocusEvent*)</primary></indexterm>QWidget::focusInEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;77&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusOutEvent(QFocusEvent*)</primary></indexterm>QWidget::focusOutEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;78&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enterEvent(QEvent*)</primary></indexterm>QWidget::enterEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;79&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::leaveEvent(QEvent*)</primary></indexterm>QWidget::leaveEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;80&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paintEvent(QPaintEvent*)</primary></indexterm>QWidget::paintEvent(QPaintEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;81&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::moveEvent(QMoveEvent*)</primary></indexterm>QWidget::moveEvent(QMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;82&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::resizeEvent(QResizeEvent*)</primary></indexterm>QDialog::resizeEvent(QResizeEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;83&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::closeEvent(QCloseEvent*)</primary></indexterm>QDialog::closeEvent(QCloseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;84&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::contextMenuEvent(QContextMenuEvent*)</primary></indexterm>QDialog::contextMenuEvent(QContextMenuEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;85&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::imStartEvent(QIMEvent*)</primary></indexterm>QWidget::imStartEvent(QIMEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;86&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::imComposeEvent(QIMEvent*)</primary></indexterm>QWidget::imComposeEvent(QIMEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;87&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::imEndEvent(QIMEvent*)</primary></indexterm>QWidget::imEndEvent(QIMEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;88&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::tabletEvent(QTabletEvent*)</primary></indexterm>QWidget::tabletEvent(QTabletEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;89&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragEnterEvent(QDragEnterEvent*)</primary></indexterm>QWidget::dragEnterEvent(QDragEnterEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;90&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragMoveEvent(QDragMoveEvent*)</primary></indexterm>QWidget::dragMoveEvent(QDragMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;91&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragLeaveEvent(QDragLeaveEvent*)</primary></indexterm>QWidget::dragLeaveEvent(QDragLeaveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;92&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dropEvent(QDropEvent*)</primary></indexterm>QWidget::dropEvent(QDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;93&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showEvent(QShowEvent*)</primary></indexterm>QWidget::showEvent(QShowEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;94&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::hideEvent(QHideEvent*)</primary></indexterm>QWidget::hideEvent(QHideEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;95&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::x11Event(_XEvent*)</primary></indexterm>QWidget::x11Event(_XEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;96&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::updateMask()</primary></indexterm>QWidget::updateMask()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;97&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::styleChange(QStyle&)</primary></indexterm>QWidget::styleChange(QStyle&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;98&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enabledChange(bool)</primary></indexterm>QWidget::enabledChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;99&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paletteChange(QPalette const&)</primary></indexterm>QWidget::paletteChange(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;100&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::fontChange(QFont const&)</primary></indexterm>QWidget::fontChange(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;101&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::windowActivationChange(bool)</primary></indexterm>QWidget::windowActivationChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;102&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::metric(int) const</primary></indexterm>QWidget::metric(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;103&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::create(unsigned long, bool, bool)</primary></indexterm>QWidget::create(unsigned long, bool, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;104&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::destroy(bool, bool)</primary></indexterm>QWidget::destroy(bool, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;105&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setWState(unsigned int)</primary></indexterm>NULL or QWidget::setWState(unsigned int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;106&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setWFlags(unsigned int)</primary></indexterm>NULL or QWidget::setWFlags(unsigned int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;107&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusNextPrevChild(bool)</primary></indexterm>QWidget::focusNextPrevChild(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;108&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setKeyCompression(bool)</primary></indexterm>QWidget::setKeyCompression(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;109&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMicroFocusHint(int, int, int, int, bool, QFont*)</primary></indexterm>QWidget::setMicroFocusHint(int, int, int, int, bool, QFont*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;110&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::done(int)</primary></indexterm>QDialog::done(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;111&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::accept()</primary></indexterm>QDialog::accept()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;112&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::reject()</primary></indexterm>QDialog::reject()</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--classdata-->
<TABLE id="cls-54680-1">
<TITLE>Secondary vtable for QInputDialog</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>-80</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QInputDialog</primary></indexterm>typeinfo for QInputDialog</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QInputDialog::~QInputDialog()</primary></indexterm>non-virtual thunk to QInputDialog::~QInputDialog()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QInputDialog::~QInputDialog()</primary></indexterm>non-virtual thunk to QInputDialog::~QInputDialog()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::setResolution(int)</primary></indexterm>QPaintDevice::setResolution(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::resolution() const</primary></indexterm>QPaintDevice::resolution() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::handle() const</primary></indexterm>QPaintDevice::handle() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::x11RenderHandle() const</primary></indexterm>QPaintDevice::x11RenderHandle() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::setX11Data(QPaintDeviceX11Data const*)</primary></indexterm>QPaintDevice::setX11Data(QPaintDeviceX11Data const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::cmd(int, QPainter*, QPDevCmdParam*)</primary></indexterm>QPaintDevice::cmd(int, QPainter*, QPDevCmdParam*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::metric(int) const</primary></indexterm>non-virtual thunk to QWidget::metric(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::fontMet(QFont*, int, char const*, int) const</primary></indexterm>QPaintDevice::fontMet(QFont*, int, char const*, int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::fontInf(QFont*, int) const</primary></indexterm>QPaintDevice::fontInf(QFont*, int) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QInputDialog  class
is described by <XREF LINKEND="rtti-58427">
</PARA>
<!--classdata-->
<TABLE ID="rtti-58427">
<TITLE>typeinfo for QInputDialog</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QInputDialog</primary></indexterm>typeinfo name for QInputDialog</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QDialog</primary></indexterm>typeinfo for QDialog</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QTabDialog</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QTabDialog class
is described by <XREF LINKEND="cls-49081-0">
</PARA>
<!--classdata-->
<TABLE id="cls-49081-0">
<TITLE>Primary vtable for QTabDialog</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QTabDialog</primary></indexterm>typeinfo for QTabDialog</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTabDialog::metaObject() const</primary></indexterm>NULL or QTabDialog::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTabDialog::className() const</primary></indexterm>QTabDialog::className() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTabDialog::qt_cast(char const*)</primary></indexterm>QTabDialog::qt_cast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTabDialog::qt_invoke(int, QUObject*)</primary></indexterm>QTabDialog::qt_invoke(int, QUObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTabDialog::qt_emit(int, QUObject*)</primary></indexterm>QTabDialog::qt_emit(int, QUObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTabDialog::qt_property(int, int, QVariant*)</primary></indexterm>QTabDialog::qt_property(int, int, QVariant*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTabDialog::~QTabDialog()</primary></indexterm>QTabDialog::~QTabDialog()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTabDialog::~QTabDialog()</primary></indexterm>QTabDialog::~QTabDialog()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::event(QEvent*)</primary></indexterm>QWidget::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::eventFilter(QObject*, QEvent*)</primary></indexterm>QDialog::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setName(char const*)</primary></indexterm>QWidget::setName(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::insertChild(QObject*)</primary></indexterm>QObject::insertChild(QObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::removeChild(QObject*)</primary></indexterm>QObject::removeChild(QObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::setProperty(char const*, QVariant const&)</primary></indexterm>QObject::setProperty(char const*, QVariant const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::property(char const*) const</primary></indexterm>QObject::property(char const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QCustomEvent*)</primary></indexterm>QObject::customEvent(QCustomEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::checkConnectArgs(char const*, QObject const*, char const*)</primary></indexterm>QObject::checkConnectArgs(char const*, QObject const*, char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setEnabled(bool)</primary></indexterm>QWidget::setEnabled(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMinimumSize(int, int)</primary></indexterm>QWidget::setMinimumSize(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMaximumSize(int, int)</primary></indexterm>QWidget::setMaximumSize(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setSizeIncrement(int, int)</primary></indexterm>QWidget::setSizeIncrement(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundMode(Qt::BackgroundMode)</primary></indexterm>QWidget::setBackgroundMode(Qt::BackgroundMode)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setEraseColor(QColor const&)</primary></indexterm>QWidget::setEraseColor(QColor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setErasePixmap(QPixmap const&)</primary></indexterm>QWidget::setErasePixmap(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setPalette(QPalette const&)</primary></indexterm>QWidget::setPalette(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setPaletteBackgroundColor(QColor const&)</primary></indexterm>QWidget::setPaletteBackgroundColor(QColor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setPaletteBackgroundPixmap(QPixmap const&)</primary></indexterm>QWidget::setPaletteBackgroundPixmap(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTabDialog::setFont(QFont const&)</primary></indexterm>QTabDialog::setFont(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setCursor(QCursor const&)</primary></indexterm>QWidget::setCursor(QCursor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;33&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::unsetCursor()</primary></indexterm>QWidget::unsetCursor()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;34&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMask(QBitmap const&)</primary></indexterm>QWidget::setMask(QBitmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;35&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMask(QRegion const&)</primary></indexterm>QWidget::setMask(QRegion const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;36&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundColor(QColor const&)</primary></indexterm>QWidget::setBackgroundColor(QColor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;37&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundPixmap(QPixmap const&)</primary></indexterm>QWidget::setBackgroundPixmap(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;38&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setCaption(QString const&)</primary></indexterm>QWidget::setCaption(QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;39&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setIcon(QPixmap const&)</primary></indexterm>QWidget::setIcon(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;40&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setIconText(QString const&)</primary></indexterm>QWidget::setIconText(QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;41&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMouseTracking(bool)</primary></indexterm>QWidget::setMouseTracking(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;42&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFocus()</primary></indexterm>QWidget::setFocus()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;43&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setActiveWindow()</primary></indexterm>QWidget::setActiveWindow()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;44&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFocusPolicy(QWidget::FocusPolicy)</primary></indexterm>QWidget::setFocusPolicy(QWidget::FocusPolicy)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;45&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFocusProxy(QWidget*)</primary></indexterm>QWidget::setFocusProxy(QWidget*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;46&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setUpdatesEnabled(bool)</primary></indexterm>QWidget::setUpdatesEnabled(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;47&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTabDialog::show()</primary></indexterm>QTabDialog::show()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;48&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::hide()</primary></indexterm>QDialog::hide()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;49&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showMinimized()</primary></indexterm>QWidget::showMinimized()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;50&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showMaximized()</primary></indexterm>QWidget::showMaximized()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;51&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showNormal()</primary></indexterm>QWidget::showNormal()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;52&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::polish()</primary></indexterm>QWidget::polish()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;53&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::move(int, int)</primary></indexterm>QDialog::move(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;54&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::resize(int, int)</primary></indexterm>QDialog::resize(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;55&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::setGeometry(int, int, int, int)</primary></indexterm>QDialog::setGeometry(int, int, int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;56&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::setGeometry(QRect const&)</primary></indexterm>QDialog::setGeometry(QRect const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;57&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::close(bool)</primary></indexterm>QWidget::close(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;58&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::sizeHint() const</primary></indexterm>QDialog::sizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;59&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::minimumSizeHint() const</primary></indexterm>QDialog::minimumSizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;60&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::sizePolicy() const</primary></indexterm>QWidget::sizePolicy() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;61&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setSizePolicy(QSizePolicy)</primary></indexterm>QWidget::setSizePolicy(QSizePolicy)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;62&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::heightForWidth(int) const</primary></indexterm>QWidget::heightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;63&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::adjustSize()</primary></indexterm>QWidget::adjustSize()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;64&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::reparent(QWidget*, unsigned int, QPoint const&, bool)</primary></indexterm>QWidget::reparent(QWidget*, unsigned int, QPoint const&, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;65&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setAcceptDrops(bool)</primary></indexterm>QWidget::setAcceptDrops(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;66&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setAutoMask(bool)</primary></indexterm>QWidget::setAutoMask(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;67&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundOrigin(QWidget::BackgroundOrigin)</primary></indexterm>QWidget::setBackgroundOrigin(QWidget::BackgroundOrigin)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;68&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::customWhatsThis() const</primary></indexterm>QWidget::customWhatsThis() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;69&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mousePressEvent(QMouseEvent*)</primary></indexterm>QWidget::mousePressEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;70&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseReleaseEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseReleaseEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;71&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseDoubleClickEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseDoubleClickEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;72&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseMoveEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseMoveEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;73&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::wheelEvent(QWheelEvent*)</primary></indexterm>QWidget::wheelEvent(QWheelEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;74&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::keyPressEvent(QKeyEvent*)</primary></indexterm>QDialog::keyPressEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;75&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyReleaseEvent(QKeyEvent*)</primary></indexterm>QWidget::keyReleaseEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;76&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusInEvent(QFocusEvent*)</primary></indexterm>QWidget::focusInEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;77&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusOutEvent(QFocusEvent*)</primary></indexterm>QWidget::focusOutEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;78&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enterEvent(QEvent*)</primary></indexterm>QWidget::enterEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;79&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::leaveEvent(QEvent*)</primary></indexterm>QWidget::leaveEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;80&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTabDialog::paintEvent(QPaintEvent*)</primary></indexterm>QTabDialog::paintEvent(QPaintEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;81&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::moveEvent(QMoveEvent*)</primary></indexterm>QWidget::moveEvent(QMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;82&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTabDialog::resizeEvent(QResizeEvent*)</primary></indexterm>QTabDialog::resizeEvent(QResizeEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;83&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::closeEvent(QCloseEvent*)</primary></indexterm>QDialog::closeEvent(QCloseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;84&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::contextMenuEvent(QContextMenuEvent*)</primary></indexterm>QDialog::contextMenuEvent(QContextMenuEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;85&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::imStartEvent(QIMEvent*)</primary></indexterm>QWidget::imStartEvent(QIMEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;86&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::imComposeEvent(QIMEvent*)</primary></indexterm>QWidget::imComposeEvent(QIMEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;87&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::imEndEvent(QIMEvent*)</primary></indexterm>QWidget::imEndEvent(QIMEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;88&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::tabletEvent(QTabletEvent*)</primary></indexterm>QWidget::tabletEvent(QTabletEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;89&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragEnterEvent(QDragEnterEvent*)</primary></indexterm>QWidget::dragEnterEvent(QDragEnterEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;90&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragMoveEvent(QDragMoveEvent*)</primary></indexterm>QWidget::dragMoveEvent(QDragMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;91&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragLeaveEvent(QDragLeaveEvent*)</primary></indexterm>QWidget::dragLeaveEvent(QDragLeaveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;92&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dropEvent(QDropEvent*)</primary></indexterm>QWidget::dropEvent(QDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;93&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showEvent(QShowEvent*)</primary></indexterm>QWidget::showEvent(QShowEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;94&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::hideEvent(QHideEvent*)</primary></indexterm>QWidget::hideEvent(QHideEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;95&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::x11Event(_XEvent*)</primary></indexterm>QWidget::x11Event(_XEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;96&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::updateMask()</primary></indexterm>QWidget::updateMask()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;97&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTabDialog::styleChange(QStyle&)</primary></indexterm>QTabDialog::styleChange(QStyle&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;98&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enabledChange(bool)</primary></indexterm>QWidget::enabledChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;99&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paletteChange(QPalette const&)</primary></indexterm>QWidget::paletteChange(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;100&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::fontChange(QFont const&)</primary></indexterm>QWidget::fontChange(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;101&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::windowActivationChange(bool)</primary></indexterm>QWidget::windowActivationChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;102&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::metric(int) const</primary></indexterm>QWidget::metric(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;103&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::create(unsigned long, bool, bool)</primary></indexterm>QWidget::create(unsigned long, bool, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;104&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::destroy(bool, bool)</primary></indexterm>QWidget::destroy(bool, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;105&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setWState(unsigned int)</primary></indexterm>NULL or QWidget::setWState(unsigned int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;106&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setWFlags(unsigned int)</primary></indexterm>NULL or QWidget::setWFlags(unsigned int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;107&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusNextPrevChild(bool)</primary></indexterm>QWidget::focusNextPrevChild(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;108&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setKeyCompression(bool)</primary></indexterm>QWidget::setKeyCompression(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;109&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMicroFocusHint(int, int, int, int, bool, QFont*)</primary></indexterm>QWidget::setMicroFocusHint(int, int, int, int, bool, QFont*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;110&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::done(int)</primary></indexterm>QDialog::done(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;111&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::accept()</primary></indexterm>QDialog::accept()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;112&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::reject()</primary></indexterm>QDialog::reject()</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--classdata-->
<TABLE id="cls-49081-1">
<TITLE>Secondary vtable for QTabDialog</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>-80</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QTabDialog</primary></indexterm>typeinfo for QTabDialog</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QTabDialog::~QTabDialog()</primary></indexterm>non-virtual thunk to QTabDialog::~QTabDialog()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QTabDialog::~QTabDialog()</primary></indexterm>non-virtual thunk to QTabDialog::~QTabDialog()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::setResolution(int)</primary></indexterm>QPaintDevice::setResolution(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::resolution() const</primary></indexterm>QPaintDevice::resolution() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::handle() const</primary></indexterm>QPaintDevice::handle() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::x11RenderHandle() const</primary></indexterm>QPaintDevice::x11RenderHandle() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::setX11Data(QPaintDeviceX11Data const*)</primary></indexterm>QPaintDevice::setX11Data(QPaintDeviceX11Data const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::cmd(int, QPainter*, QPDevCmdParam*)</primary></indexterm>QPaintDevice::cmd(int, QPainter*, QPDevCmdParam*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::metric(int) const</primary></indexterm>non-virtual thunk to QWidget::metric(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::fontMet(QFont*, int, char const*, int) const</primary></indexterm>QPaintDevice::fontMet(QFont*, int, char const*, int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::fontInf(QFont*, int) const</primary></indexterm>QPaintDevice::fontInf(QFont*, int) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QTabDialog  class
is described by <XREF LINKEND="rtti-53972">
</PARA>
<!--classdata-->
<TABLE ID="rtti-53972">
<TITLE>typeinfo for QTabDialog</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QTabDialog</primary></indexterm>typeinfo name for QTabDialog</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QDialog</primary></indexterm>typeinfo for QDialog</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QFileIconProvider</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QFileIconProvider class
is described in the generic part of this specification.
</PARA>
<PARA>
The Run Time Type Information for the QFileIconProvider  class
is described by <XREF LINKEND="rtti-52043">
</PARA>
<!--classdata-->
<TABLE ID="rtti-52043">
<TITLE>typeinfo for QFileIconProvider</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QFileIconProvider</primary></indexterm>typeinfo name for QFileIconProvider</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QObject</primary></indexterm>typeinfo for QObject</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Interfaces for Qt3 Dialogs</TITLE>
<PARA>
An LSB conforming implementation shall provide the architecture specific functions
for Qt3 Dialogs specified in <XREF linkend="tbl-libqt-mt-4-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<TABLE id="tbl-libqt-mt-4-ints">
<TITLE>libqt-mt - Qt3 Dialogs Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>_ZThn80_N10QTabDialogD0Ev</primary></indexterm>_ZThn80_N10QTabDialogD0Ev <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn80_N10QTabDialogD1Ev</primary></indexterm>_ZThn80_N10QTabDialogD1Ev <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn80_N11QFileDialogD0Ev</primary></indexterm>_ZThn80_N11QFileDialogD0Ev <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn80_N11QFileDialogD1Ev</primary></indexterm>_ZThn80_N11QFileDialogD1Ev <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn80_N11QFontDialogD0Ev</primary></indexterm>_ZThn80_N11QFontDialogD0Ev <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn80_N11QFontDialogD1Ev</primary></indexterm>_ZThn80_N11QFontDialogD1Ev <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn80_N11QMessageBoxD0Ev</primary></indexterm>_ZThn80_N11QMessageBoxD0Ev <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn80_N11QMessageBoxD1Ev</primary></indexterm>_ZThn80_N11QMessageBoxD1Ev <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn80_N12QColorDialogD0Ev</primary></indexterm>_ZThn80_N12QColorDialogD0Ev <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn80_N12QColorDialogD1Ev</primary></indexterm>_ZThn80_N12QColorDialogD1Ev <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn80_N12QInputDialogD0Ev</primary></indexterm>_ZThn80_N12QInputDialogD0Ev <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn80_N12QInputDialogD1Ev</primary></indexterm>_ZThn80_N12QInputDialogD1Ev <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn80_N12QPrintDialogD0Ev</primary></indexterm>_ZThn80_N12QPrintDialogD0Ev <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn80_N12QPrintDialogD1Ev</primary></indexterm>_ZThn80_N12QPrintDialogD1Ev <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn80_N13QErrorMessageD0Ev</primary></indexterm>_ZThn80_N13QErrorMessageD0Ev <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn80_N13QErrorMessageD1Ev</primary></indexterm>_ZThn80_N13QErrorMessageD1Ev <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn80_N15QProgressDialogD0Ev</primary></indexterm>_ZThn80_N15QProgressDialogD0Ev <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn80_N15QProgressDialogD1Ev</primary></indexterm>_ZThn80_N15QProgressDialogD1Ev <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn80_N7QDialogD0Ev</primary></indexterm>_ZThn80_N7QDialogD0Ev <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn80_N7QDialogD1Ev</primary></indexterm>_ZThn80_N7QDialogD1Ev <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn80_N7QWizardD0Ev</primary></indexterm>_ZThn80_N7QWizardD0Ev <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn80_N7QWizardD1Ev</primary></indexterm>_ZThn80_N7QWizardD1Ev <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>
</SECT2>
<!-- debug: database interface name Qt3 Tables -->
<SECT2>
<!--libgroup-->
<TITLE>Qt3 Tables</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Class data for QTableItem</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QTableItem class
is described in the generic part of this specification.
</PARA>
<PARA>
The Run Time Type Information for the QTableItem  class
is described by <XREF LINKEND="rtti-58220">
</PARA>
<!--classdata-->
<TABLE ID="rtti-58220">
<TITLE>typeinfo for QTableItem</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QTableItem</primary></indexterm>typeinfo name for QTableItem</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for Qt</primary></indexterm>typeinfo for Qt</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QCheckTableItem</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QCheckTableItem class
is described in the generic part of this specification.
</PARA>
<PARA>
The Run Time Type Information for the QCheckTableItem  class
is described by <XREF LINKEND="rtti-52811">
</PARA>
<!--classdata-->
<TABLE ID="rtti-52811">
<TITLE>typeinfo for QCheckTableItem</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QCheckTableItem</primary></indexterm>typeinfo name for QCheckTableItem</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QTableItem</primary></indexterm>typeinfo for QTableItem</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QHeader</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QHeader class
is described by <XREF LINKEND="cls-53440-0">
</PARA>
<!--classdata-->
<TABLE id="cls-53440-0">
<TITLE>Primary vtable for QHeader</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QHeader</primary></indexterm>typeinfo for QHeader</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QHeader::metaObject() const</primary></indexterm>NULL or QHeader::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QHeader::className() const</primary></indexterm>QHeader::className() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QHeader::qt_cast(char const*)</primary></indexterm>QHeader::qt_cast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QHeader::qt_invoke(int, QUObject*)</primary></indexterm>QHeader::qt_invoke(int, QUObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QHeader::qt_emit(int, QUObject*)</primary></indexterm>QHeader::qt_emit(int, QUObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QHeader::qt_property(int, int, QVariant*)</primary></indexterm>QHeader::qt_property(int, int, QVariant*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QHeader::~QHeader()</primary></indexterm>QHeader::~QHeader()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QHeader::~QHeader()</primary></indexterm>QHeader::~QHeader()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::event(QEvent*)</primary></indexterm>QWidget::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::eventFilter(QObject*, QEvent*)</primary></indexterm>QObject::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setName(char const*)</primary></indexterm>QWidget::setName(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::insertChild(QObject*)</primary></indexterm>QObject::insertChild(QObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::removeChild(QObject*)</primary></indexterm>QObject::removeChild(QObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::setProperty(char const*, QVariant const&)</primary></indexterm>QObject::setProperty(char const*, QVariant const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::property(char const*) const</primary></indexterm>QObject::property(char const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QCustomEvent*)</primary></indexterm>QObject::customEvent(QCustomEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::checkConnectArgs(char const*, QObject const*, char const*)</primary></indexterm>QObject::checkConnectArgs(char const*, QObject const*, char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setEnabled(bool)</primary></indexterm>QWidget::setEnabled(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMinimumSize(int, int)</primary></indexterm>QWidget::setMinimumSize(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMaximumSize(int, int)</primary></indexterm>QWidget::setMaximumSize(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setSizeIncrement(int, int)</primary></indexterm>QWidget::setSizeIncrement(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundMode(Qt::BackgroundMode)</primary></indexterm>QWidget::setBackgroundMode(Qt::BackgroundMode)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setEraseColor(QColor const&)</primary></indexterm>QWidget::setEraseColor(QColor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setErasePixmap(QPixmap const&)</primary></indexterm>QWidget::setErasePixmap(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setPalette(QPalette const&)</primary></indexterm>QWidget::setPalette(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setPaletteBackgroundColor(QColor const&)</primary></indexterm>QWidget::setPaletteBackgroundColor(QColor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setPaletteBackgroundPixmap(QPixmap const&)</primary></indexterm>QWidget::setPaletteBackgroundPixmap(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFont(QFont const&)</primary></indexterm>QWidget::setFont(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setCursor(QCursor const&)</primary></indexterm>QWidget::setCursor(QCursor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;33&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::unsetCursor()</primary></indexterm>QWidget::unsetCursor()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;34&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMask(QBitmap const&)</primary></indexterm>QWidget::setMask(QBitmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;35&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMask(QRegion const&)</primary></indexterm>QWidget::setMask(QRegion const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;36&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundColor(QColor const&)</primary></indexterm>QWidget::setBackgroundColor(QColor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;37&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundPixmap(QPixmap const&)</primary></indexterm>QWidget::setBackgroundPixmap(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;38&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setCaption(QString const&)</primary></indexterm>QWidget::setCaption(QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;39&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setIcon(QPixmap const&)</primary></indexterm>QWidget::setIcon(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;40&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setIconText(QString const&)</primary></indexterm>QWidget::setIconText(QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;41&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMouseTracking(bool)</primary></indexterm>QWidget::setMouseTracking(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;42&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFocus()</primary></indexterm>QWidget::setFocus()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;43&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setActiveWindow()</primary></indexterm>QWidget::setActiveWindow()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;44&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFocusPolicy(QWidget::FocusPolicy)</primary></indexterm>QWidget::setFocusPolicy(QWidget::FocusPolicy)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;45&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFocusProxy(QWidget*)</primary></indexterm>QWidget::setFocusProxy(QWidget*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;46&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QHeader::setUpdatesEnabled(bool)</primary></indexterm>QHeader::setUpdatesEnabled(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;47&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::show()</primary></indexterm>QWidget::show()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;48&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::hide()</primary></indexterm>QWidget::hide()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;49&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showMinimized()</primary></indexterm>QWidget::showMinimized()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;50&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showMaximized()</primary></indexterm>QWidget::showMaximized()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;51&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showNormal()</primary></indexterm>QWidget::showNormal()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;52&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::polish()</primary></indexterm>QWidget::polish()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;53&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::move(int, int)</primary></indexterm>QWidget::move(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;54&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::resize(int, int)</primary></indexterm>QWidget::resize(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;55&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setGeometry(int, int, int, int)</primary></indexterm>QWidget::setGeometry(int, int, int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;56&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setGeometry(QRect const&)</primary></indexterm>NULL or QWidget::setGeometry(QRect const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;57&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::close(bool)</primary></indexterm>QWidget::close(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;58&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QHeader::sizeHint() const</primary></indexterm>QHeader::sizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;59&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::minimumSizeHint() const</primary></indexterm>QWidget::minimumSizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;60&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::sizePolicy() const</primary></indexterm>QWidget::sizePolicy() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;61&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setSizePolicy(QSizePolicy)</primary></indexterm>QWidget::setSizePolicy(QSizePolicy)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;62&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::heightForWidth(int) const</primary></indexterm>QWidget::heightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;63&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::adjustSize()</primary></indexterm>QWidget::adjustSize()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;64&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::reparent(QWidget*, unsigned int, QPoint const&, bool)</primary></indexterm>QWidget::reparent(QWidget*, unsigned int, QPoint const&, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;65&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setAcceptDrops(bool)</primary></indexterm>QWidget::setAcceptDrops(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;66&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setAutoMask(bool)</primary></indexterm>QWidget::setAutoMask(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;67&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundOrigin(QWidget::BackgroundOrigin)</primary></indexterm>QWidget::setBackgroundOrigin(QWidget::BackgroundOrigin)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;68&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::customWhatsThis() const</primary></indexterm>QWidget::customWhatsThis() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;69&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QHeader::mousePressEvent(QMouseEvent*)</primary></indexterm>QHeader::mousePressEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;70&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QHeader::mouseReleaseEvent(QMouseEvent*)</primary></indexterm>QHeader::mouseReleaseEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;71&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QHeader::mouseDoubleClickEvent(QMouseEvent*)</primary></indexterm>QHeader::mouseDoubleClickEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;72&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QHeader::mouseMoveEvent(QMouseEvent*)</primary></indexterm>QHeader::mouseMoveEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;73&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::wheelEvent(QWheelEvent*)</primary></indexterm>QWidget::wheelEvent(QWheelEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;74&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QHeader::keyPressEvent(QKeyEvent*)</primary></indexterm>QHeader::keyPressEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;75&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QHeader::keyReleaseEvent(QKeyEvent*)</primary></indexterm>QHeader::keyReleaseEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;76&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusInEvent(QFocusEvent*)</primary></indexterm>QWidget::focusInEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;77&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusOutEvent(QFocusEvent*)</primary></indexterm>QWidget::focusOutEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;78&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enterEvent(QEvent*)</primary></indexterm>QWidget::enterEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;79&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::leaveEvent(QEvent*)</primary></indexterm>QWidget::leaveEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;80&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QHeader::paintEvent(QPaintEvent*)</primary></indexterm>QHeader::paintEvent(QPaintEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;81&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::moveEvent(QMoveEvent*)</primary></indexterm>QWidget::moveEvent(QMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;82&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QHeader::resizeEvent(QResizeEvent*)</primary></indexterm>QHeader::resizeEvent(QResizeEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;83&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::closeEvent(QCloseEvent*)</primary></indexterm>QWidget::closeEvent(QCloseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;84&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::contextMenuEvent(QContextMenuEvent*)</primary></indexterm>QWidget::contextMenuEvent(QContextMenuEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;85&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::imStartEvent(QIMEvent*)</primary></indexterm>QWidget::imStartEvent(QIMEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;86&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::imComposeEvent(QIMEvent*)</primary></indexterm>QWidget::imComposeEvent(QIMEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;87&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::imEndEvent(QIMEvent*)</primary></indexterm>QWidget::imEndEvent(QIMEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;88&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::tabletEvent(QTabletEvent*)</primary></indexterm>QWidget::tabletEvent(QTabletEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;89&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragEnterEvent(QDragEnterEvent*)</primary></indexterm>QWidget::dragEnterEvent(QDragEnterEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;90&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragMoveEvent(QDragMoveEvent*)</primary></indexterm>QWidget::dragMoveEvent(QDragMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;91&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragLeaveEvent(QDragLeaveEvent*)</primary></indexterm>QWidget::dragLeaveEvent(QDragLeaveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;92&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dropEvent(QDropEvent*)</primary></indexterm>QWidget::dropEvent(QDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;93&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QHeader::showEvent(QShowEvent*)</primary></indexterm>QHeader::showEvent(QShowEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;94&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::hideEvent(QHideEvent*)</primary></indexterm>QWidget::hideEvent(QHideEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;95&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::x11Event(_XEvent*)</primary></indexterm>QWidget::x11Event(_XEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;96&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::updateMask()</primary></indexterm>QWidget::updateMask()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;97&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::styleChange(QStyle&)</primary></indexterm>QWidget::styleChange(QStyle&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;98&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enabledChange(bool)</primary></indexterm>QWidget::enabledChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;99&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paletteChange(QPalette const&)</primary></indexterm>QWidget::paletteChange(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;100&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QHeader::fontChange(QFont const&)</primary></indexterm>QHeader::fontChange(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;101&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::windowActivationChange(bool)</primary></indexterm>QWidget::windowActivationChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;102&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::metric(int) const</primary></indexterm>QWidget::metric(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;103&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::create(unsigned long, bool, bool)</primary></indexterm>QWidget::create(unsigned long, bool, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;104&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::destroy(bool, bool)</primary></indexterm>QWidget::destroy(bool, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;105&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setWState(unsigned int)</primary></indexterm>NULL or QWidget::setWState(unsigned int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;106&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setWFlags(unsigned int)</primary></indexterm>NULL or QWidget::setWFlags(unsigned int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;107&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusNextPrevChild(bool)</primary></indexterm>QWidget::focusNextPrevChild(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;108&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setKeyCompression(bool)</primary></indexterm>QWidget::setKeyCompression(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;109&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMicroFocusHint(int, int, int, int, bool, QFont*)</primary></indexterm>QWidget::setMicroFocusHint(int, int, int, int, bool, QFont*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;110&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QHeader::setLabel(int, QString const&, int)</primary></indexterm>QHeader::setLabel(int, QString const&, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;111&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QHeader::setLabel(int, QIconSet const&, QString const&, int)</primary></indexterm>QHeader::setLabel(int, QIconSet const&, QString const&, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;112&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QHeader::setOrientation(Qt::Orientation)</primary></indexterm>QHeader::setOrientation(Qt::Orientation)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;113&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QHeader::setTracking(bool)</primary></indexterm>NULL or QHeader::setTracking(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;114&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QHeader::setClickEnabled(bool, int)</primary></indexterm>QHeader::setClickEnabled(bool, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;115&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QHeader::setResizeEnabled(bool, int)</primary></indexterm>QHeader::setResizeEnabled(bool, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;116&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QHeader::setMovingEnabled(bool)</primary></indexterm>QHeader::setMovingEnabled(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;117&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QHeader::setStretchEnabled(bool, int)</primary></indexterm>QHeader::setStretchEnabled(bool, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;118&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QHeader::setCellSize(int, int)</primary></indexterm>QHeader::setCellSize(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;119&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QHeader::moveCell(int, int)</primary></indexterm>QHeader::moveCell(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;120&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QHeader::setOffset(int)</primary></indexterm>QHeader::setOffset(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;121&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QHeader::paintSection(QPainter*, int, QRect const&)</primary></indexterm>QHeader::paintSection(QPainter*, int, QRect const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;122&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QHeader::paintSectionLabel(QPainter*, int, QRect const&)</primary></indexterm>QHeader::paintSectionLabel(QPainter*, int, QRect const&)</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--classdata-->
<TABLE id="cls-53440-1">
<TITLE>Secondary vtable for QHeader</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>-80</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QHeader</primary></indexterm>typeinfo for QHeader</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QHeader::~QHeader()</primary></indexterm>non-virtual thunk to QHeader::~QHeader()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QHeader::~QHeader()</primary></indexterm>non-virtual thunk to QHeader::~QHeader()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::setResolution(int)</primary></indexterm>QPaintDevice::setResolution(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::resolution() const</primary></indexterm>QPaintDevice::resolution() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::handle() const</primary></indexterm>QPaintDevice::handle() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::x11RenderHandle() const</primary></indexterm>QPaintDevice::x11RenderHandle() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::setX11Data(QPaintDeviceX11Data const*)</primary></indexterm>QPaintDevice::setX11Data(QPaintDeviceX11Data const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::cmd(int, QPainter*, QPDevCmdParam*)</primary></indexterm>QPaintDevice::cmd(int, QPainter*, QPDevCmdParam*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::metric(int) const</primary></indexterm>non-virtual thunk to QWidget::metric(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::fontMet(QFont*, int, char const*, int) const</primary></indexterm>QPaintDevice::fontMet(QFont*, int, char const*, int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::fontInf(QFont*, int) const</primary></indexterm>QPaintDevice::fontInf(QFont*, int) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QHeader  class
is described by <XREF LINKEND="rtti-58320">
</PARA>
<!--classdata-->
<TABLE ID="rtti-58320">
<TITLE>typeinfo for QHeader</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QHeader</primary></indexterm>typeinfo name for QHeader</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QWidget</primary></indexterm>typeinfo for QWidget</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QDataTable</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QDataTable class
is described by <XREF LINKEND="cls-58124-0">
</PARA>
<!--classdata-->
<TABLE id="cls-58124-0">
<TITLE>Primary vtable for QDataTable</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QDataTable</primary></indexterm>typeinfo for QDataTable</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDataTable::metaObject() const</primary></indexterm>NULL or QDataTable::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDataTable::className() const</primary></indexterm>QDataTable::className() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDataTable::qt_cast(char const*)</primary></indexterm>QDataTable::qt_cast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDataTable::qt_invoke(int, QUObject*)</primary></indexterm>QDataTable::qt_invoke(int, QUObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDataTable::qt_emit(int, QUObject*)</primary></indexterm>QDataTable::qt_emit(int, QUObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDataTable::qt_property(int, int, QVariant*)</primary></indexterm>QDataTable::qt_property(int, int, QVariant*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDataTable::~QDataTable()</primary></indexterm>QDataTable::~QDataTable()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDataTable::~QDataTable()</primary></indexterm>QDataTable::~QDataTable()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::event(QEvent*)</primary></indexterm>QWidget::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDataTable::eventFilter(QObject*, QEvent*)</primary></indexterm>QDataTable::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setName(char const*)</primary></indexterm>QWidget::setName(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::insertChild(QObject*)</primary></indexterm>QObject::insertChild(QObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::removeChild(QObject*)</primary></indexterm>QScrollView::removeChild(QObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::setProperty(char const*, QVariant const&)</primary></indexterm>QObject::setProperty(char const*, QVariant const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::property(char const*) const</primary></indexterm>QObject::property(char const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QCustomEvent*)</primary></indexterm>QObject::customEvent(QCustomEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::checkConnectArgs(char const*, QObject const*, char const*)</primary></indexterm>QObject::checkConnectArgs(char const*, QObject const*, char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTable::setEnabled(bool)</primary></indexterm>QTable::setEnabled(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMinimumSize(int, int)</primary></indexterm>QWidget::setMinimumSize(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMaximumSize(int, int)</primary></indexterm>QWidget::setMaximumSize(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setSizeIncrement(int, int)</primary></indexterm>QWidget::setSizeIncrement(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundMode(Qt::BackgroundMode)</primary></indexterm>QWidget::setBackgroundMode(Qt::BackgroundMode)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setEraseColor(QColor const&)</primary></indexterm>QWidget::setEraseColor(QColor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setErasePixmap(QPixmap const&)</primary></indexterm>QWidget::setErasePixmap(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setPalette(QPalette const&)</primary></indexterm>QWidget::setPalette(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setPaletteBackgroundColor(QColor const&)</primary></indexterm>QWidget::setPaletteBackgroundColor(QColor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setPaletteBackgroundPixmap(QPixmap const&)</primary></indexterm>QWidget::setPaletteBackgroundPixmap(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFont(QFont const&)</primary></indexterm>QWidget::setFont(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setCursor(QCursor const&)</primary></indexterm>QWidget::setCursor(QCursor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;33&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::unsetCursor()</primary></indexterm>QWidget::unsetCursor()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;34&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMask(QBitmap const&)</primary></indexterm>QWidget::setMask(QBitmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;35&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMask(QRegion const&)</primary></indexterm>QWidget::setMask(QRegion const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;36&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundColor(QColor const&)</primary></indexterm>QWidget::setBackgroundColor(QColor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;37&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundPixmap(QPixmap const&)</primary></indexterm>QWidget::setBackgroundPixmap(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;38&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setCaption(QString const&)</primary></indexterm>QWidget::setCaption(QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;39&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setIcon(QPixmap const&)</primary></indexterm>QWidget::setIcon(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;40&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setIconText(QString const&)</primary></indexterm>QWidget::setIconText(QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;41&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMouseTracking(bool)</primary></indexterm>QWidget::setMouseTracking(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;42&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFocus()</primary></indexterm>QWidget::setFocus()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;43&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setActiveWindow()</primary></indexterm>QWidget::setActiveWindow()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;44&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFocusPolicy(QWidget::FocusPolicy)</primary></indexterm>QWidget::setFocusPolicy(QWidget::FocusPolicy)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;45&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFocusProxy(QWidget*)</primary></indexterm>QWidget::setFocusProxy(QWidget*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;46&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setUpdatesEnabled(bool)</primary></indexterm>QWidget::setUpdatesEnabled(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;47&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::show()</primary></indexterm>QScrollView::show()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;48&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::hide()</primary></indexterm>QWidget::hide()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;49&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showMinimized()</primary></indexterm>QWidget::showMinimized()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;50&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showMaximized()</primary></indexterm>QWidget::showMaximized()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;51&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showNormal()</primary></indexterm>QWidget::showNormal()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;52&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::polish()</primary></indexterm>QWidget::polish()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;53&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::move(int, int)</primary></indexterm>QWidget::move(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;54&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::resize(int, int)</primary></indexterm>QScrollView::resize(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;55&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setGeometry(int, int, int, int)</primary></indexterm>QWidget::setGeometry(int, int, int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;56&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setGeometry(QRect const&)</primary></indexterm>NULL or QWidget::setGeometry(QRect const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;57&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::close(bool)</primary></indexterm>QWidget::close(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;58&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTable::sizeHint() const</primary></indexterm>QTable::sizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;59&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::minimumSizeHint() const</primary></indexterm>QScrollView::minimumSizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;60&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::sizePolicy() const</primary></indexterm>QWidget::sizePolicy() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;61&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setSizePolicy(QSizePolicy)</primary></indexterm>QWidget::setSizePolicy(QSizePolicy)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;62&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::heightForWidth(int) const</primary></indexterm>QWidget::heightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;63&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::adjustSize()</primary></indexterm>QWidget::adjustSize()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;64&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::reparent(QWidget*, unsigned int, QPoint const&, bool)</primary></indexterm>QWidget::reparent(QWidget*, unsigned int, QPoint const&, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;65&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setAcceptDrops(bool)</primary></indexterm>QWidget::setAcceptDrops(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;66&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setAutoMask(bool)</primary></indexterm>QWidget::setAutoMask(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;67&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundOrigin(QWidget::BackgroundOrigin)</primary></indexterm>QWidget::setBackgroundOrigin(QWidget::BackgroundOrigin)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;68&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::customWhatsThis() const</primary></indexterm>QWidget::customWhatsThis() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;69&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::mousePressEvent(QMouseEvent*)</primary></indexterm>QScrollView::mousePressEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;70&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::mouseReleaseEvent(QMouseEvent*)</primary></indexterm>QScrollView::mouseReleaseEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;71&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::mouseDoubleClickEvent(QMouseEvent*)</primary></indexterm>QScrollView::mouseDoubleClickEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;72&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::mouseMoveEvent(QMouseEvent*)</primary></indexterm>QScrollView::mouseMoveEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;73&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::wheelEvent(QWheelEvent*)</primary></indexterm>QScrollView::wheelEvent(QWheelEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;74&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDataTable::keyPressEvent(QKeyEvent*)</primary></indexterm>QDataTable::keyPressEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;75&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyReleaseEvent(QKeyEvent*)</primary></indexterm>QWidget::keyReleaseEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;76&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTable::focusInEvent(QFocusEvent*)</primary></indexterm>QTable::focusInEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;77&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTable::focusOutEvent(QFocusEvent*)</primary></indexterm>QTable::focusOutEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;78&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enterEvent(QEvent*)</primary></indexterm>QWidget::enterEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;79&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::leaveEvent(QEvent*)</primary></indexterm>QWidget::leaveEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;80&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTable::paintEvent(QPaintEvent*)</primary></indexterm>QTable::paintEvent(QPaintEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;81&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::moveEvent(QMoveEvent*)</primary></indexterm>QWidget::moveEvent(QMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;82&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDataTable::resizeEvent(QResizeEvent*)</primary></indexterm>QDataTable::resizeEvent(QResizeEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;83&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::closeEvent(QCloseEvent*)</primary></indexterm>QWidget::closeEvent(QCloseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;84&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::contextMenuEvent(QContextMenuEvent*)</primary></indexterm>QScrollView::contextMenuEvent(QContextMenuEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;85&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::imStartEvent(QIMEvent*)</primary></indexterm>QWidget::imStartEvent(QIMEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;86&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::imComposeEvent(QIMEvent*)</primary></indexterm>QWidget::imComposeEvent(QIMEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;87&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::imEndEvent(QIMEvent*)</primary></indexterm>QWidget::imEndEvent(QIMEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;88&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::tabletEvent(QTabletEvent*)</primary></indexterm>QWidget::tabletEvent(QTabletEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;89&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragEnterEvent(QDragEnterEvent*)</primary></indexterm>QWidget::dragEnterEvent(QDragEnterEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;90&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragMoveEvent(QDragMoveEvent*)</primary></indexterm>QWidget::dragMoveEvent(QDragMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;91&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragLeaveEvent(QDragLeaveEvent*)</primary></indexterm>QWidget::dragLeaveEvent(QDragLeaveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;92&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dropEvent(QDropEvent*)</primary></indexterm>QWidget::dropEvent(QDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;93&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTable::showEvent(QShowEvent*)</primary></indexterm>QTable::showEvent(QShowEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;94&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::hideEvent(QHideEvent*)</primary></indexterm>QWidget::hideEvent(QHideEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;95&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::x11Event(_XEvent*)</primary></indexterm>QWidget::x11Event(_XEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;96&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::updateMask()</primary></indexterm>QWidget::updateMask()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;97&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::styleChange(QStyle&)</primary></indexterm>QScrollView::styleChange(QStyle&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;98&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enabledChange(bool)</primary></indexterm>QWidget::enabledChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;99&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paletteChange(QPalette const&)</primary></indexterm>QWidget::paletteChange(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;100&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::fontChange(QFont const&)</primary></indexterm>QScrollView::fontChange(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;101&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTable::windowActivationChange(bool)</primary></indexterm>QTable::windowActivationChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;102&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::metric(int) const</primary></indexterm>QWidget::metric(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;103&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::create(unsigned long, bool, bool)</primary></indexterm>QWidget::create(unsigned long, bool, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;104&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::destroy(bool, bool)</primary></indexterm>QWidget::destroy(bool, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;105&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setWState(unsigned int)</primary></indexterm>NULL or QWidget::setWState(unsigned int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;106&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setWFlags(unsigned int)</primary></indexterm>NULL or QWidget::setWFlags(unsigned int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;107&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::focusNextPrevChild(bool)</primary></indexterm>QScrollView::focusNextPrevChild(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;108&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setKeyCompression(bool)</primary></indexterm>QWidget::setKeyCompression(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;109&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMicroFocusHint(int, int, int, int, bool, QFont*)</primary></indexterm>QWidget::setMicroFocusHint(int, int, int, int, bool, QFont*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;110&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::setFrameStyle(int)</primary></indexterm>QFrame::setFrameStyle(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;111&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::setLineWidth(int)</primary></indexterm>QFrame::setLineWidth(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;112&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::setMargin(int)</primary></indexterm>QFrame::setMargin(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;113&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::setMidLineWidth(int)</primary></indexterm>QFrame::setMidLineWidth(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;114&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::setFrameRect(QRect const&)</primary></indexterm>QFrame::setFrameRect(QRect const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;115&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::drawFrame(QPainter*)</primary></indexterm>QFrame::drawFrame(QPainter*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;116&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTable::drawContents(QPainter*)</primary></indexterm>QTable::drawContents(QPainter*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;117&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::frameChanged()</primary></indexterm>QScrollView::frameChanged()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;118&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::setResizePolicy(QScrollView::ResizePolicy)</primary></indexterm>QScrollView::setResizePolicy(QScrollView::ResizePolicy)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;119&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::addChild(QWidget*, int, int)</primary></indexterm>QScrollView::addChild(QWidget*, int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;120&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::moveChild(QWidget*, int, int)</primary></indexterm>QScrollView::moveChild(QWidget*, int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;121&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::setVScrollBarMode(QScrollView::ScrollBarMode)</primary></indexterm>QScrollView::setVScrollBarMode(QScrollView::ScrollBarMode)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;122&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::setHScrollBarMode(QScrollView::ScrollBarMode)</primary></indexterm>QScrollView::setHScrollBarMode(QScrollView::ScrollBarMode)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;123&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::setCornerWidget(QWidget*)</primary></indexterm>QScrollView::setCornerWidget(QWidget*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;124&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::setDragAutoScroll(bool)</primary></indexterm>QScrollView::setDragAutoScroll(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;125&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::resizeContents(int, int)</primary></indexterm>QScrollView::resizeContents(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;126&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::setContentsPos(int, int)</primary></indexterm>QScrollView::setContentsPos(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;127&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDataTable::drawContents(QPainter*, int, int, int, int)</primary></indexterm>QDataTable::drawContents(QPainter*, int, int, int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;128&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::drawContentsOffset(QPainter*, int, int, int, int, int, int)</primary></indexterm>QScrollView::drawContentsOffset(QPainter*, int, int, int, int, int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;129&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDataTable::contentsMousePressEvent(QMouseEvent*)</primary></indexterm>QDataTable::contentsMousePressEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;130&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTable::contentsMouseReleaseEvent(QMouseEvent*)</primary></indexterm>QTable::contentsMouseReleaseEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;131&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTable::contentsMouseDoubleClickEvent(QMouseEvent*)</primary></indexterm>QTable::contentsMouseDoubleClickEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;132&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTable::contentsMouseMoveEvent(QMouseEvent*)</primary></indexterm>QTable::contentsMouseMoveEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;133&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTable::contentsDragEnterEvent(QDragEnterEvent*)</primary></indexterm>QTable::contentsDragEnterEvent(QDragEnterEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;134&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTable::contentsDragMoveEvent(QDragMoveEvent*)</primary></indexterm>QTable::contentsDragMoveEvent(QDragMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;135&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTable::contentsDragLeaveEvent(QDragLeaveEvent*)</primary></indexterm>QTable::contentsDragLeaveEvent(QDragLeaveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;136&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTable::contentsDropEvent(QDropEvent*)</primary></indexterm>QTable::contentsDropEvent(QDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;137&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::contentsWheelEvent(QWheelEvent*)</primary></indexterm>QScrollView::contentsWheelEvent(QWheelEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;138&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDataTable::contentsContextMenuEvent(QContextMenuEvent*)</primary></indexterm>QDataTable::contentsContextMenuEvent(QContextMenuEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;139&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::viewportPaintEvent(QPaintEvent*)</primary></indexterm>QScrollView::viewportPaintEvent(QPaintEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;140&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTable::viewportResizeEvent(QResizeEvent*)</primary></indexterm>QTable::viewportResizeEvent(QResizeEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;141&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::viewportMousePressEvent(QMouseEvent*)</primary></indexterm>QScrollView::viewportMousePressEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;142&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::viewportMouseReleaseEvent(QMouseEvent*)</primary></indexterm>QScrollView::viewportMouseReleaseEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;143&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::viewportMouseDoubleClickEvent(QMouseEvent*)</primary></indexterm>QScrollView::viewportMouseDoubleClickEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;144&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::viewportMouseMoveEvent(QMouseEvent*)</primary></indexterm>QScrollView::viewportMouseMoveEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;145&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::viewportDragEnterEvent(QDragEnterEvent*)</primary></indexterm>QScrollView::viewportDragEnterEvent(QDragEnterEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;146&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::viewportDragMoveEvent(QDragMoveEvent*)</primary></indexterm>QScrollView::viewportDragMoveEvent(QDragMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;147&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::viewportDragLeaveEvent(QDragLeaveEvent*)</primary></indexterm>QScrollView::viewportDragLeaveEvent(QDragLeaveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;148&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::viewportDropEvent(QDropEvent*)</primary></indexterm>QScrollView::viewportDropEvent(QDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;149&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::viewportWheelEvent(QWheelEvent*)</primary></indexterm>QScrollView::viewportWheelEvent(QWheelEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;150&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::viewportContextMenuEvent(QContextMenuEvent*)</primary></indexterm>QScrollView::viewportContextMenuEvent(QContextMenuEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;151&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::setMargins(int, int, int, int)</primary></indexterm>QScrollView::setMargins(int, int, int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;152&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::setHBarGeometry(QScrollBar&, int, int, int, int)</primary></indexterm>QScrollView::setHBarGeometry(QScrollBar&, int, int, int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;153&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::setVBarGeometry(QScrollBar&, int, int, int, int)</primary></indexterm>QScrollView::setVBarGeometry(QScrollBar&, int, int, int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;154&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTable::setSelectionMode(QTable::SelectionMode)</primary></indexterm>QTable::setSelectionMode(QTable::SelectionMode)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;155&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDataTable::setItem(int, int, QTableItem*)</primary></indexterm>QDataTable::setItem(int, int, QTableItem*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;156&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTable::setText(int, int, QString const&)</primary></indexterm>QTable::setText(int, int, QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;157&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDataTable::setPixmap(int, int, QPixmap const&)</primary></indexterm>QDataTable::setPixmap(int, int, QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;158&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDataTable::item(int, int) const</primary></indexterm>QDataTable::item(int, int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;159&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDataTable::text(int, int) const</primary></indexterm>QDataTable::text(int, int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;160&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTable::pixmap(int, int) const</primary></indexterm>QTable::pixmap(int, int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;161&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDataTable::clearCell(int, int)</primary></indexterm>QDataTable::clearCell(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;162&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTable::cellGeometry(int, int) const</primary></indexterm>QTable::cellGeometry(int, int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;163&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTable::columnWidth(int) const</primary></indexterm>QTable::columnWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;164&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTable::rowHeight(int) const</primary></indexterm>QTable::rowHeight(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;165&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTable::columnPos(int) const</primary></indexterm>QTable::columnPos(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;166&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTable::rowPos(int) const</primary></indexterm>QTable::rowPos(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;167&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTable::columnAt(int) const</primary></indexterm>QTable::columnAt(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;168&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTable::rowAt(int) const</primary></indexterm>QTable::rowAt(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;169&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDataTable::numRows() const</primary></indexterm>QDataTable::numRows() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;170&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDataTable::numCols() const</primary></indexterm>QDataTable::numCols() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;171&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTable::addSelection(QTableSelection const&)</primary></indexterm>QTable::addSelection(QTableSelection const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;172&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTable::removeSelection(QTableSelection const&)</primary></indexterm>QTable::removeSelection(QTableSelection const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;173&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTable::removeSelection(int)</primary></indexterm>QTable::removeSelection(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;174&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTable::currentSelection() const</primary></indexterm>QTable::currentSelection() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;175&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDataTable::sortColumn(int, bool, bool)</primary></indexterm>QDataTable::sortColumn(int, bool, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;176&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDataTable::takeItem(QTableItem*)</primary></indexterm>QDataTable::takeItem(QTableItem*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;177&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTable::setCellWidget(int, int, QWidget*)</primary></indexterm>QTable::setCellWidget(int, int, QWidget*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;178&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTable::cellWidget(int, int) const</primary></indexterm>QTable::cellWidget(int, int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;179&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTable::clearCellWidget(int, int)</primary></indexterm>QTable::clearCellWidget(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;180&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTable::cellRect(int, int) const</primary></indexterm>QTable::cellRect(int, int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;181&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTable::paintCell(QPainter*, int, int, QRect const&, bool)</primary></indexterm>QTable::paintCell(QPainter*, int, int, QRect const&, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;182&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDataTable::paintCell(QPainter*, int, int, QRect const&, bool, QColorGroup const&)</primary></indexterm>QDataTable::paintCell(QPainter*, int, int, QRect const&, bool, QColorGroup const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;183&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTable::paintFocus(QPainter*, QRect const&)</primary></indexterm>QTable::paintFocus(QPainter*, QRect const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;184&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTable::setFocusStyle(QTable::FocusStyle)</primary></indexterm>QTable::setFocusStyle(QTable::FocusStyle)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;185&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDataTable::setNumRows(int)</primary></indexterm>QDataTable::setNumRows(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;186&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDataTable::setNumCols(int)</primary></indexterm>QDataTable::setNumCols(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;187&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTable::setShowGrid(bool)</primary></indexterm>QTable::setShowGrid(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;188&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTable::hideRow(int)</primary></indexterm>QTable::hideRow(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;189&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDataTable::hideColumn(int)</primary></indexterm>QDataTable::hideColumn(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;190&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTable::showRow(int)</primary></indexterm>QTable::showRow(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;191&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDataTable::showColumn(int)</primary></indexterm>QDataTable::showColumn(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;192&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDataTable::setColumnWidth(int, int)</primary></indexterm>QDataTable::setColumnWidth(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;193&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTable::setRowHeight(int, int)</primary></indexterm>QTable::setRowHeight(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;194&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDataTable::adjustColumn(int)</primary></indexterm>QDataTable::adjustColumn(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;195&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTable::adjustRow(int)</primary></indexterm>QTable::adjustRow(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;196&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDataTable::setColumnStretchable(int, bool)</primary></indexterm>QDataTable::setColumnStretchable(int, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;197&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTable::setRowStretchable(int, bool)</primary></indexterm>QTable::setRowStretchable(int, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;198&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTable::setSorting(bool)</primary></indexterm>QTable::setSorting(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;199&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTable::swapRows(int, int, bool)</primary></indexterm>QTable::swapRows(int, int, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;200&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDataTable::swapColumns(int, int, bool)</primary></indexterm>QDataTable::swapColumns(int, int, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;201&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTable::swapCells(int, int, int, int)</primary></indexterm>QTable::swapCells(int, int, int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;202&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTable::setLeftMargin(int)</primary></indexterm>QTable::setLeftMargin(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;203&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTable::setTopMargin(int)</primary></indexterm>QTable::setTopMargin(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;204&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTable::setCurrentCell(int, int)</primary></indexterm>QTable::setCurrentCell(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;205&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTable::setColumnMovingEnabled(bool)</primary></indexterm>QTable::setColumnMovingEnabled(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;206&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTable::setRowMovingEnabled(bool)</primary></indexterm>QTable::setRowMovingEnabled(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;207&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTable::setReadOnly(bool)</primary></indexterm>QTable::setReadOnly(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;208&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTable::setRowReadOnly(int, bool)</primary></indexterm>QTable::setRowReadOnly(int, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;209&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTable::setColumnReadOnly(int, bool)</primary></indexterm>QTable::setColumnReadOnly(int, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;210&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTable::setDragEnabled(bool)</primary></indexterm>QTable::setDragEnabled(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;211&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTable::insertRows(int, int)</primary></indexterm>QTable::insertRows(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;212&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTable::insertColumns(int, int)</primary></indexterm>QTable::insertColumns(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;213&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTable::removeRow(int)</primary></indexterm>QTable::removeRow(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;214&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTable::removeRows(QMemArray&lt;int&gt; const&)</primary></indexterm>QTable::removeRows(QMemArray&lt;int&gt; const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;215&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTable::removeColumn(int)</primary></indexterm>QTable::removeColumn(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;216&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTable::removeColumns(QMemArray&lt;int&gt; const&)</primary></indexterm>QTable::removeColumns(QMemArray&lt;int&gt; const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;217&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTable::editCell(int, int, bool)</primary></indexterm>QTable::editCell(int, int, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;218&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTable::dragObject()</primary></indexterm>QTable::dragObject()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;219&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTable::startDrag()</primary></indexterm>QTable::startDrag()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;220&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTable::paintEmptyArea(QPainter*, int, int, int, int)</primary></indexterm>QTable::paintEmptyArea(QPainter*, int, int, int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;221&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDataTable::activateNextCell()</primary></indexterm>QDataTable::activateNextCell()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;222&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDataTable::createEditor(int, int, bool) const</primary></indexterm>QDataTable::createEditor(int, int, bool) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;223&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTable::setCellContentFromEditor(int, int)</primary></indexterm>QTable::setCellContentFromEditor(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;224&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDataTable::beginEdit(int, int, bool)</primary></indexterm>QDataTable::beginEdit(int, int, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;225&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDataTable::endEdit(int, int, bool, bool)</primary></indexterm>QDataTable::endEdit(int, int, bool, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;226&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDataTable::resizeData(int)</primary></indexterm>QDataTable::resizeData(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;227&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTable::insertWidget(int, int, QWidget*)</primary></indexterm>QTable::insertWidget(int, int, QWidget*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;228&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTable::columnWidthChanged(int)</primary></indexterm>QTable::columnWidthChanged(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;229&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTable::rowHeightChanged(int)</primary></indexterm>QTable::rowHeightChanged(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;230&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTable::columnIndexChanged(int, int, int)</primary></indexterm>QTable::columnIndexChanged(int, int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;231&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTable::rowIndexChanged(int, int, int)</primary></indexterm>QTable::rowIndexChanged(int, int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;232&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDataTable::columnClicked(int)</primary></indexterm>QDataTable::columnClicked(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;233&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDataTable::addColumn(QString const&, QString const&, int, QIconSet const&)</primary></indexterm>QDataTable::addColumn(QString const&, QString const&, int, QIconSet const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;234&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDataTable::removeColumn(unsigned int)</primary></indexterm>QDataTable::removeColumn(unsigned int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;235&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDataTable::setColumn(unsigned int, QString const&, QString const&, int, QIconSet const&)</primary></indexterm>QDataTable::setColumn(unsigned int, QString const&, QString const&, int, QIconSet const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;236&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDataTable::setSqlCursor(QSqlCursor*, bool, bool)</primary></indexterm>QDataTable::setSqlCursor(QSqlCursor*, bool, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;237&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDataTable::setNullText(QString const&)</primary></indexterm>QDataTable::setNullText(QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;238&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDataTable::setTrueText(QString const&)</primary></indexterm>QDataTable::setTrueText(QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;239&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDataTable::setFalseText(QString const&)</primary></indexterm>QDataTable::setFalseText(QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;240&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDataTable::setDateFormat(Qt::DateFormat)</primary></indexterm>QDataTable::setDateFormat(Qt::DateFormat)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;241&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDataTable::setConfirmEdits(bool)</primary></indexterm>QDataTable::setConfirmEdits(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;242&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDataTable::setConfirmInsert(bool)</primary></indexterm>QDataTable::setConfirmInsert(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;243&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDataTable::setConfirmUpdate(bool)</primary></indexterm>QDataTable::setConfirmUpdate(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;244&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDataTable::setConfirmDelete(bool)</primary></indexterm>QDataTable::setConfirmDelete(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;245&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDataTable::setConfirmCancels(bool)</primary></indexterm>QDataTable::setConfirmCancels(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;246&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDataTable::setAutoDelete(bool)</primary></indexterm>QDataTable::setAutoDelete(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;247&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDataTable::setAutoEdit(bool)</primary></indexterm>QDataTable::setAutoEdit(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;248&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDataTable::setFilter(QString const&)</primary></indexterm>QDataTable::setFilter(QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;249&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDataTable::setSort(QStringList const&)</primary></indexterm>QDataTable::setSort(QStringList const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;250&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDataTable::setSort(QSqlIndex const&)</primary></indexterm>QDataTable::setSort(QSqlIndex const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;251&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDataTable::find(QString const&, bool, bool)</primary></indexterm>QDataTable::find(QString const&, bool, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;252&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDataTable::sortAscending(int)</primary></indexterm>QDataTable::sortAscending(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;253&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDataTable::sortDescending(int)</primary></indexterm>QDataTable::sortDescending(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;254&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDataTable::refresh()</primary></indexterm>QDataTable::refresh()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;255&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDataTable::insertCurrent()</primary></indexterm>QDataTable::insertCurrent()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;256&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDataTable::updateCurrent()</primary></indexterm>QDataTable::updateCurrent()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;257&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDataTable::deleteCurrent()</primary></indexterm>QDataTable::deleteCurrent()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;258&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDataTable::confirmEdit(QSql::Op)</primary></indexterm>QDataTable::confirmEdit(QSql::Op)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;259&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDataTable::confirmCancel(QSql::Op)</primary></indexterm>QDataTable::confirmCancel(QSql::Op)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;260&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDataTable::handleError(QSqlError const&)</primary></indexterm>QDataTable::handleError(QSqlError const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;261&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDataTable::beginInsert()</primary></indexterm>QDataTable::beginInsert()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;262&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDataTable::beginUpdate(int, int, bool)</primary></indexterm>QDataTable::beginUpdate(int, int, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;263&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDataTable::paintField(QPainter*, QSqlField const*, QRect const&, bool)</primary></indexterm>QDataTable::paintField(QPainter*, QSqlField const*, QRect const&, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;264&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDataTable::fieldAlignment(QSqlField const*)</primary></indexterm>QDataTable::fieldAlignment(QSqlField const*)</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--classdata-->
<TABLE id="cls-58124-1">
<TITLE>Secondary vtable for QDataTable</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>-80</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QDataTable</primary></indexterm>typeinfo for QDataTable</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QDataTable::~QDataTable()</primary></indexterm>non-virtual thunk to QDataTable::~QDataTable()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QDataTable::~QDataTable()</primary></indexterm>non-virtual thunk to QDataTable::~QDataTable()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::setResolution(int)</primary></indexterm>QPaintDevice::setResolution(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::resolution() const</primary></indexterm>QPaintDevice::resolution() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::handle() const</primary></indexterm>QPaintDevice::handle() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::x11RenderHandle() const</primary></indexterm>QPaintDevice::x11RenderHandle() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::setX11Data(QPaintDeviceX11Data const*)</primary></indexterm>QPaintDevice::setX11Data(QPaintDeviceX11Data const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::cmd(int, QPainter*, QPDevCmdParam*)</primary></indexterm>QPaintDevice::cmd(int, QPainter*, QPDevCmdParam*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::metric(int) const</primary></indexterm>non-virtual thunk to QWidget::metric(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::fontMet(QFont*, int, char const*, int) const</primary></indexterm>QPaintDevice::fontMet(QFont*, int, char const*, int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::fontInf(QFont*, int) const</primary></indexterm>QPaintDevice::fontInf(QFont*, int) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QDataTable  class
is described by <XREF LINKEND="rtti-50255">
</PARA>
<!--classdata-->
<TABLE ID="rtti-50255">
<TITLE>typeinfo for QDataTable</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QDataTable</primary></indexterm>typeinfo name for QDataTable</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QTable</primary></indexterm>typeinfo for QTable</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QComboTableItem</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QComboTableItem class
is described in the generic part of this specification.
</PARA>
<PARA>
The Run Time Type Information for the QComboTableItem  class
is described by <XREF LINKEND="rtti-59022">
</PARA>
<!--classdata-->
<TABLE ID="rtti-59022">
<TITLE>typeinfo for QComboTableItem</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QComboTableItem</primary></indexterm>typeinfo name for QComboTableItem</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QTableItem</primary></indexterm>typeinfo for QTableItem</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QTable</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QTable class
is described by <XREF LINKEND="cls-60708-0">
</PARA>
<!--classdata-->
<TABLE id="cls-60708-0">
<TITLE>Primary vtable for QTable</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QTable</primary></indexterm>typeinfo for QTable</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTable::metaObject() const</primary></indexterm>NULL or QTable::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTable::className() const</primary></indexterm>QTable::className() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTable::qt_cast(char const*)</primary></indexterm>QTable::qt_cast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTable::qt_invoke(int, QUObject*)</primary></indexterm>QTable::qt_invoke(int, QUObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTable::qt_emit(int, QUObject*)</primary></indexterm>QTable::qt_emit(int, QUObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTable::qt_property(int, int, QVariant*)</primary></indexterm>QTable::qt_property(int, int, QVariant*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTable::~QTable()</primary></indexterm>QTable::~QTable()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTable::~QTable()</primary></indexterm>QTable::~QTable()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::event(QEvent*)</primary></indexterm>QWidget::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTable::eventFilter(QObject*, QEvent*)</primary></indexterm>QTable::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setName(char const*)</primary></indexterm>QWidget::setName(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::insertChild(QObject*)</primary></indexterm>QObject::insertChild(QObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::removeChild(QObject*)</primary></indexterm>QScrollView::removeChild(QObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::setProperty(char const*, QVariant const&)</primary></indexterm>QObject::setProperty(char const*, QVariant const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::property(char const*) const</primary></indexterm>QObject::property(char const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QCustomEvent*)</primary></indexterm>QObject::customEvent(QCustomEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::checkConnectArgs(char const*, QObject const*, char const*)</primary></indexterm>QObject::checkConnectArgs(char const*, QObject const*, char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTable::setEnabled(bool)</primary></indexterm>QTable::setEnabled(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMinimumSize(int, int)</primary></indexterm>QWidget::setMinimumSize(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMaximumSize(int, int)</primary></indexterm>QWidget::setMaximumSize(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setSizeIncrement(int, int)</primary></indexterm>QWidget::setSizeIncrement(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundMode(Qt::BackgroundMode)</primary></indexterm>QWidget::setBackgroundMode(Qt::BackgroundMode)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setEraseColor(QColor const&)</primary></indexterm>QWidget::setEraseColor(QColor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setErasePixmap(QPixmap const&)</primary></indexterm>QWidget::setErasePixmap(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setPalette(QPalette const&)</primary></indexterm>QWidget::setPalette(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setPaletteBackgroundColor(QColor const&)</primary></indexterm>QWidget::setPaletteBackgroundColor(QColor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setPaletteBackgroundPixmap(QPixmap const&)</primary></indexterm>QWidget::setPaletteBackgroundPixmap(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFont(QFont const&)</primary></indexterm>QWidget::setFont(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setCursor(QCursor const&)</primary></indexterm>QWidget::setCursor(QCursor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;33&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::unsetCursor()</primary></indexterm>QWidget::unsetCursor()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;34&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMask(QBitmap const&)</primary></indexterm>QWidget::setMask(QBitmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;35&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMask(QRegion const&)</primary></indexterm>QWidget::setMask(QRegion const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;36&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundColor(QColor const&)</primary></indexterm>QWidget::setBackgroundColor(QColor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;37&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundPixmap(QPixmap const&)</primary></indexterm>QWidget::setBackgroundPixmap(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;38&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setCaption(QString const&)</primary></indexterm>QWidget::setCaption(QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;39&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setIcon(QPixmap const&)</primary></indexterm>QWidget::setIcon(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;40&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setIconText(QString const&)</primary></indexterm>QWidget::setIconText(QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;41&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMouseTracking(bool)</primary></indexterm>QWidget::setMouseTracking(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;42&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFocus()</primary></indexterm>QWidget::setFocus()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;43&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setActiveWindow()</primary></indexterm>QWidget::setActiveWindow()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;44&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFocusPolicy(QWidget::FocusPolicy)</primary></indexterm>QWidget::setFocusPolicy(QWidget::FocusPolicy)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;45&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFocusProxy(QWidget*)</primary></indexterm>QWidget::setFocusProxy(QWidget*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;46&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setUpdatesEnabled(bool)</primary></indexterm>QWidget::setUpdatesEnabled(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;47&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::show()</primary></indexterm>QScrollView::show()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;48&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::hide()</primary></indexterm>QWidget::hide()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;49&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showMinimized()</primary></indexterm>QWidget::showMinimized()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;50&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showMaximized()</primary></indexterm>QWidget::showMaximized()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;51&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showNormal()</primary></indexterm>QWidget::showNormal()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;52&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::polish()</primary></indexterm>QWidget::polish()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;53&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::move(int, int)</primary></indexterm>QWidget::move(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;54&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::resize(int, int)</primary></indexterm>QScrollView::resize(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;55&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setGeometry(int, int, int, int)</primary></indexterm>QWidget::setGeometry(int, int, int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;56&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setGeometry(QRect const&)</primary></indexterm>NULL or QWidget::setGeometry(QRect const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;57&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::close(bool)</primary></indexterm>QWidget::close(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;58&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTable::sizeHint() const</primary></indexterm>QTable::sizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;59&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::minimumSizeHint() const</primary></indexterm>QScrollView::minimumSizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;60&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::sizePolicy() const</primary></indexterm>QWidget::sizePolicy() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;61&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setSizePolicy(QSizePolicy)</primary></indexterm>QWidget::setSizePolicy(QSizePolicy)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;62&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::heightForWidth(int) const</primary></indexterm>QWidget::heightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;63&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::adjustSize()</primary></indexterm>QWidget::adjustSize()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;64&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::reparent(QWidget*, unsigned int, QPoint const&, bool)</primary></indexterm>QWidget::reparent(QWidget*, unsigned int, QPoint const&, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;65&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setAcceptDrops(bool)</primary></indexterm>QWidget::setAcceptDrops(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;66&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setAutoMask(bool)</primary></indexterm>QWidget::setAutoMask(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;67&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundOrigin(QWidget::BackgroundOrigin)</primary></indexterm>QWidget::setBackgroundOrigin(QWidget::BackgroundOrigin)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;68&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::customWhatsThis() const</primary></indexterm>QWidget::customWhatsThis() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;69&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::mousePressEvent(QMouseEvent*)</primary></indexterm>QScrollView::mousePressEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;70&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::mouseReleaseEvent(QMouseEvent*)</primary></indexterm>QScrollView::mouseReleaseEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;71&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::mouseDoubleClickEvent(QMouseEvent*)</primary></indexterm>QScrollView::mouseDoubleClickEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;72&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::mouseMoveEvent(QMouseEvent*)</primary></indexterm>QScrollView::mouseMoveEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;73&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::wheelEvent(QWheelEvent*)</primary></indexterm>QScrollView::wheelEvent(QWheelEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;74&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTable::keyPressEvent(QKeyEvent*)</primary></indexterm>QTable::keyPressEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;75&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyReleaseEvent(QKeyEvent*)</primary></indexterm>QWidget::keyReleaseEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;76&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTable::focusInEvent(QFocusEvent*)</primary></indexterm>QTable::focusInEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;77&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTable::focusOutEvent(QFocusEvent*)</primary></indexterm>QTable::focusOutEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;78&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enterEvent(QEvent*)</primary></indexterm>QWidget::enterEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;79&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::leaveEvent(QEvent*)</primary></indexterm>QWidget::leaveEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;80&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTable::paintEvent(QPaintEvent*)</primary></indexterm>QTable::paintEvent(QPaintEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;81&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::moveEvent(QMoveEvent*)</primary></indexterm>QWidget::moveEvent(QMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;82&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::resizeEvent(QResizeEvent*)</primary></indexterm>QScrollView::resizeEvent(QResizeEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;83&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::closeEvent(QCloseEvent*)</primary></indexterm>QWidget::closeEvent(QCloseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;84&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::contextMenuEvent(QContextMenuEvent*)</primary></indexterm>QScrollView::contextMenuEvent(QContextMenuEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;85&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::imStartEvent(QIMEvent*)</primary></indexterm>QWidget::imStartEvent(QIMEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;86&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::imComposeEvent(QIMEvent*)</primary></indexterm>QWidget::imComposeEvent(QIMEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;87&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::imEndEvent(QIMEvent*)</primary></indexterm>QWidget::imEndEvent(QIMEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;88&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::tabletEvent(QTabletEvent*)</primary></indexterm>QWidget::tabletEvent(QTabletEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;89&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragEnterEvent(QDragEnterEvent*)</primary></indexterm>QWidget::dragEnterEvent(QDragEnterEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;90&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragMoveEvent(QDragMoveEvent*)</primary></indexterm>QWidget::dragMoveEvent(QDragMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;91&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragLeaveEvent(QDragLeaveEvent*)</primary></indexterm>QWidget::dragLeaveEvent(QDragLeaveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;92&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dropEvent(QDropEvent*)</primary></indexterm>QWidget::dropEvent(QDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;93&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTable::showEvent(QShowEvent*)</primary></indexterm>QTable::showEvent(QShowEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;94&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::hideEvent(QHideEvent*)</primary></indexterm>QWidget::hideEvent(QHideEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;95&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::x11Event(_XEvent*)</primary></indexterm>QWidget::x11Event(_XEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;96&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::updateMask()</primary></indexterm>QWidget::updateMask()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;97&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::styleChange(QStyle&)</primary></indexterm>QScrollView::styleChange(QStyle&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;98&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enabledChange(bool)</primary></indexterm>QWidget::enabledChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;99&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paletteChange(QPalette const&)</primary></indexterm>QWidget::paletteChange(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;100&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::fontChange(QFont const&)</primary></indexterm>QScrollView::fontChange(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;101&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTable::windowActivationChange(bool)</primary></indexterm>QTable::windowActivationChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;102&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::metric(int) const</primary></indexterm>QWidget::metric(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;103&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::create(unsigned long, bool, bool)</primary></indexterm>QWidget::create(unsigned long, bool, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;104&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::destroy(bool, bool)</primary></indexterm>QWidget::destroy(bool, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;105&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setWState(unsigned int)</primary></indexterm>NULL or QWidget::setWState(unsigned int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;106&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setWFlags(unsigned int)</primary></indexterm>NULL or QWidget::setWFlags(unsigned int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;107&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::focusNextPrevChild(bool)</primary></indexterm>QScrollView::focusNextPrevChild(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;108&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setKeyCompression(bool)</primary></indexterm>QWidget::setKeyCompression(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;109&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMicroFocusHint(int, int, int, int, bool, QFont*)</primary></indexterm>QWidget::setMicroFocusHint(int, int, int, int, bool, QFont*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;110&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::setFrameStyle(int)</primary></indexterm>QFrame::setFrameStyle(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;111&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::setLineWidth(int)</primary></indexterm>QFrame::setLineWidth(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;112&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::setMargin(int)</primary></indexterm>QFrame::setMargin(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;113&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::setMidLineWidth(int)</primary></indexterm>QFrame::setMidLineWidth(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;114&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::setFrameRect(QRect const&)</primary></indexterm>QFrame::setFrameRect(QRect const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;115&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::drawFrame(QPainter*)</primary></indexterm>QFrame::drawFrame(QPainter*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;116&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTable::drawContents(QPainter*)</primary></indexterm>QTable::drawContents(QPainter*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;117&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::frameChanged()</primary></indexterm>QScrollView::frameChanged()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;118&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::setResizePolicy(QScrollView::ResizePolicy)</primary></indexterm>QScrollView::setResizePolicy(QScrollView::ResizePolicy)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;119&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::addChild(QWidget*, int, int)</primary></indexterm>QScrollView::addChild(QWidget*, int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;120&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::moveChild(QWidget*, int, int)</primary></indexterm>QScrollView::moveChild(QWidget*, int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;121&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::setVScrollBarMode(QScrollView::ScrollBarMode)</primary></indexterm>QScrollView::setVScrollBarMode(QScrollView::ScrollBarMode)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;122&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::setHScrollBarMode(QScrollView::ScrollBarMode)</primary></indexterm>QScrollView::setHScrollBarMode(QScrollView::ScrollBarMode)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;123&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::setCornerWidget(QWidget*)</primary></indexterm>QScrollView::setCornerWidget(QWidget*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;124&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::setDragAutoScroll(bool)</primary></indexterm>QScrollView::setDragAutoScroll(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;125&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::resizeContents(int, int)</primary></indexterm>QScrollView::resizeContents(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;126&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::setContentsPos(int, int)</primary></indexterm>QScrollView::setContentsPos(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;127&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTable::drawContents(QPainter*, int, int, int, int)</primary></indexterm>QTable::drawContents(QPainter*, int, int, int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;128&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::drawContentsOffset(QPainter*, int, int, int, int, int, int)</primary></indexterm>QScrollView::drawContentsOffset(QPainter*, int, int, int, int, int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;129&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTable::contentsMousePressEvent(QMouseEvent*)</primary></indexterm>QTable::contentsMousePressEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;130&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTable::contentsMouseReleaseEvent(QMouseEvent*)</primary></indexterm>QTable::contentsMouseReleaseEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;131&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTable::contentsMouseDoubleClickEvent(QMouseEvent*)</primary></indexterm>QTable::contentsMouseDoubleClickEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;132&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTable::contentsMouseMoveEvent(QMouseEvent*)</primary></indexterm>QTable::contentsMouseMoveEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;133&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTable::contentsDragEnterEvent(QDragEnterEvent*)</primary></indexterm>QTable::contentsDragEnterEvent(QDragEnterEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;134&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTable::contentsDragMoveEvent(QDragMoveEvent*)</primary></indexterm>QTable::contentsDragMoveEvent(QDragMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;135&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTable::contentsDragLeaveEvent(QDragLeaveEvent*)</primary></indexterm>QTable::contentsDragLeaveEvent(QDragLeaveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;136&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTable::contentsDropEvent(QDropEvent*)</primary></indexterm>QTable::contentsDropEvent(QDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;137&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::contentsWheelEvent(QWheelEvent*)</primary></indexterm>QScrollView::contentsWheelEvent(QWheelEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;138&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTable::contentsContextMenuEvent(QContextMenuEvent*)</primary></indexterm>QTable::contentsContextMenuEvent(QContextMenuEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;139&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::viewportPaintEvent(QPaintEvent*)</primary></indexterm>QScrollView::viewportPaintEvent(QPaintEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;140&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTable::viewportResizeEvent(QResizeEvent*)</primary></indexterm>QTable::viewportResizeEvent(QResizeEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;141&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::viewportMousePressEvent(QMouseEvent*)</primary></indexterm>QScrollView::viewportMousePressEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;142&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::viewportMouseReleaseEvent(QMouseEvent*)</primary></indexterm>QScrollView::viewportMouseReleaseEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;143&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::viewportMouseDoubleClickEvent(QMouseEvent*)</primary></indexterm>QScrollView::viewportMouseDoubleClickEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;144&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::viewportMouseMoveEvent(QMouseEvent*)</primary></indexterm>QScrollView::viewportMouseMoveEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;145&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::viewportDragEnterEvent(QDragEnterEvent*)</primary></indexterm>QScrollView::viewportDragEnterEvent(QDragEnterEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;146&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::viewportDragMoveEvent(QDragMoveEvent*)</primary></indexterm>QScrollView::viewportDragMoveEvent(QDragMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;147&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::viewportDragLeaveEvent(QDragLeaveEvent*)</primary></indexterm>QScrollView::viewportDragLeaveEvent(QDragLeaveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;148&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::viewportDropEvent(QDropEvent*)</primary></indexterm>QScrollView::viewportDropEvent(QDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;149&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::viewportWheelEvent(QWheelEvent*)</primary></indexterm>QScrollView::viewportWheelEvent(QWheelEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;150&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::viewportContextMenuEvent(QContextMenuEvent*)</primary></indexterm>QScrollView::viewportContextMenuEvent(QContextMenuEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;151&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::setMargins(int, int, int, int)</primary></indexterm>QScrollView::setMargins(int, int, int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;152&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::setHBarGeometry(QScrollBar&, int, int, int, int)</primary></indexterm>QScrollView::setHBarGeometry(QScrollBar&, int, int, int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;153&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollView::setVBarGeometry(QScrollBar&, int, int, int, int)</primary></indexterm>QScrollView::setVBarGeometry(QScrollBar&, int, int, int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;154&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTable::setSelectionMode(QTable::SelectionMode)</primary></indexterm>QTable::setSelectionMode(QTable::SelectionMode)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;155&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTable::setItem(int, int, QTableItem*)</primary></indexterm>QTable::setItem(int, int, QTableItem*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;156&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTable::setText(int, int, QString const&)</primary></indexterm>QTable::setText(int, int, QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;157&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTable::setPixmap(int, int, QPixmap const&)</primary></indexterm>QTable::setPixmap(int, int, QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;158&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTable::item(int, int) const</primary></indexterm>QTable::item(int, int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;159&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTable::text(int, int) const</primary></indexterm>QTable::text(int, int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;160&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTable::pixmap(int, int) const</primary></indexterm>QTable::pixmap(int, int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;161&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTable::clearCell(int, int)</primary></indexterm>QTable::clearCell(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;162&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTable::cellGeometry(int, int) const</primary></indexterm>QTable::cellGeometry(int, int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;163&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTable::columnWidth(int) const</primary></indexterm>QTable::columnWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;164&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTable::rowHeight(int) const</primary></indexterm>QTable::rowHeight(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;165&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTable::columnPos(int) const</primary></indexterm>QTable::columnPos(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;166&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTable::rowPos(int) const</primary></indexterm>QTable::rowPos(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;167&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTable::columnAt(int) const</primary></indexterm>QTable::columnAt(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;168&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTable::rowAt(int) const</primary></indexterm>QTable::rowAt(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;169&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTable::numRows() const</primary></indexterm>QTable::numRows() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;170&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTable::numCols() const</primary></indexterm>QTable::numCols() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;171&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTable::addSelection(QTableSelection const&)</primary></indexterm>QTable::addSelection(QTableSelection const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;172&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTable::removeSelection(QTableSelection const&)</primary></indexterm>QTable::removeSelection(QTableSelection const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;173&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTable::removeSelection(int)</primary></indexterm>QTable::removeSelection(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;174&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTable::currentSelection() const</primary></indexterm>QTable::currentSelection() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;175&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTable::sortColumn(int, bool, bool)</primary></indexterm>QTable::sortColumn(int, bool, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;176&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTable::takeItem(QTableItem*)</primary></indexterm>QTable::takeItem(QTableItem*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;177&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTable::setCellWidget(int, int, QWidget*)</primary></indexterm>QTable::setCellWidget(int, int, QWidget*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;178&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTable::cellWidget(int, int) const</primary></indexterm>QTable::cellWidget(int, int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;179&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTable::clearCellWidget(int, int)</primary></indexterm>QTable::clearCellWidget(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;180&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTable::cellRect(int, int) const</primary></indexterm>QTable::cellRect(int, int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;181&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTable::paintCell(QPainter*, int, int, QRect const&, bool)</primary></indexterm>QTable::paintCell(QPainter*, int, int, QRect const&, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;182&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTable::paintCell(QPainter*, int, int, QRect const&, bool, QColorGroup const&)</primary></indexterm>QTable::paintCell(QPainter*, int, int, QRect const&, bool, QColorGroup const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;183&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTable::paintFocus(QPainter*, QRect const&)</primary></indexterm>QTable::paintFocus(QPainter*, QRect const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;184&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTable::setFocusStyle(QTable::FocusStyle)</primary></indexterm>QTable::setFocusStyle(QTable::FocusStyle)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;185&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTable::setNumRows(int)</primary></indexterm>QTable::setNumRows(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;186&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTable::setNumCols(int)</primary></indexterm>QTable::setNumCols(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;187&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTable::setShowGrid(bool)</primary></indexterm>QTable::setShowGrid(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;188&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTable::hideRow(int)</primary></indexterm>QTable::hideRow(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;189&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTable::hideColumn(int)</primary></indexterm>QTable::hideColumn(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;190&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTable::showRow(int)</primary></indexterm>QTable::showRow(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;191&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTable::showColumn(int)</primary></indexterm>QTable::showColumn(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;192&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTable::setColumnWidth(int, int)</primary></indexterm>QTable::setColumnWidth(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;193&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTable::setRowHeight(int, int)</primary></indexterm>QTable::setRowHeight(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;194&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTable::adjustColumn(int)</primary></indexterm>QTable::adjustColumn(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;195&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTable::adjustRow(int)</primary></indexterm>QTable::adjustRow(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;196&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTable::setColumnStretchable(int, bool)</primary></indexterm>QTable::setColumnStretchable(int, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;197&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTable::setRowStretchable(int, bool)</primary></indexterm>QTable::setRowStretchable(int, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;198&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTable::setSorting(bool)</primary></indexterm>QTable::setSorting(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;199&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTable::swapRows(int, int, bool)</primary></indexterm>QTable::swapRows(int, int, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;200&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTable::swapColumns(int, int, bool)</primary></indexterm>QTable::swapColumns(int, int, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;201&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTable::swapCells(int, int, int, int)</primary></indexterm>QTable::swapCells(int, int, int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;202&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTable::setLeftMargin(int)</primary></indexterm>QTable::setLeftMargin(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;203&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTable::setTopMargin(int)</primary></indexterm>QTable::setTopMargin(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;204&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTable::setCurrentCell(int, int)</primary></indexterm>QTable::setCurrentCell(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;205&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTable::setColumnMovingEnabled(bool)</primary></indexterm>QTable::setColumnMovingEnabled(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;206&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTable::setRowMovingEnabled(bool)</primary></indexterm>QTable::setRowMovingEnabled(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;207&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTable::setReadOnly(bool)</primary></indexterm>QTable::setReadOnly(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;208&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTable::setRowReadOnly(int, bool)</primary></indexterm>QTable::setRowReadOnly(int, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;209&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTable::setColumnReadOnly(int, bool)</primary></indexterm>QTable::setColumnReadOnly(int, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;210&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTable::setDragEnabled(bool)</primary></indexterm>QTable::setDragEnabled(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;211&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTable::insertRows(int, int)</primary></indexterm>QTable::insertRows(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;212&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTable::insertColumns(int, int)</primary></indexterm>QTable::insertColumns(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;213&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTable::removeRow(int)</primary></indexterm>QTable::removeRow(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;214&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTable::removeRows(QMemArray&lt;int&gt; const&)</primary></indexterm>QTable::removeRows(QMemArray&lt;int&gt; const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;215&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTable::removeColumn(int)</primary></indexterm>QTable::removeColumn(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;216&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTable::removeColumns(QMemArray&lt;int&gt; const&)</primary></indexterm>QTable::removeColumns(QMemArray&lt;int&gt; const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;217&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTable::editCell(int, int, bool)</primary></indexterm>QTable::editCell(int, int, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;218&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTable::dragObject()</primary></indexterm>QTable::dragObject()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;219&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTable::startDrag()</primary></indexterm>QTable::startDrag()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;220&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTable::paintEmptyArea(QPainter*, int, int, int, int)</primary></indexterm>QTable::paintEmptyArea(QPainter*, int, int, int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;221&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTable::activateNextCell()</primary></indexterm>QTable::activateNextCell()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;222&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTable::createEditor(int, int, bool) const</primary></indexterm>QTable::createEditor(int, int, bool) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;223&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTable::setCellContentFromEditor(int, int)</primary></indexterm>QTable::setCellContentFromEditor(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;224&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTable::beginEdit(int, int, bool)</primary></indexterm>QTable::beginEdit(int, int, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;225&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTable::endEdit(int, int, bool, bool)</primary></indexterm>QTable::endEdit(int, int, bool, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;226&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTable::resizeData(int)</primary></indexterm>QTable::resizeData(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;227&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTable::insertWidget(int, int, QWidget*)</primary></indexterm>QTable::insertWidget(int, int, QWidget*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;228&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTable::columnWidthChanged(int)</primary></indexterm>QTable::columnWidthChanged(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;229&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTable::rowHeightChanged(int)</primary></indexterm>QTable::rowHeightChanged(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;230&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTable::columnIndexChanged(int, int, int)</primary></indexterm>QTable::columnIndexChanged(int, int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;231&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTable::rowIndexChanged(int, int, int)</primary></indexterm>QTable::rowIndexChanged(int, int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;232&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTable::columnClicked(int)</primary></indexterm>QTable::columnClicked(int)</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--classdata-->
<TABLE id="cls-60708-1">
<TITLE>Secondary vtable for QTable</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>-80</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QTable</primary></indexterm>typeinfo for QTable</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QTable::~QTable()</primary></indexterm>non-virtual thunk to QTable::~QTable()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QTable::~QTable()</primary></indexterm>non-virtual thunk to QTable::~QTable()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::setResolution(int)</primary></indexterm>QPaintDevice::setResolution(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::resolution() const</primary></indexterm>QPaintDevice::resolution() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::handle() const</primary></indexterm>QPaintDevice::handle() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::x11RenderHandle() const</primary></indexterm>QPaintDevice::x11RenderHandle() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::setX11Data(QPaintDeviceX11Data const*)</primary></indexterm>QPaintDevice::setX11Data(QPaintDeviceX11Data const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::cmd(int, QPainter*, QPDevCmdParam*)</primary></indexterm>QPaintDevice::cmd(int, QPainter*, QPDevCmdParam*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::metric(int) const</primary></indexterm>non-virtual thunk to QWidget::metric(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::fontMet(QFont*, int, char const*, int) const</primary></indexterm>QPaintDevice::fontMet(QFont*, int, char const*, int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::fontInf(QFont*, int) const</primary></indexterm>QPaintDevice::fontInf(QFont*, int) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QTable  class
is described by <XREF LINKEND="rtti-60432">
</PARA>
<!--classdata-->
<TABLE ID="rtti-60432">
<TITLE>typeinfo for QTable</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QTable</primary></indexterm>typeinfo name for QTable</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QScrollView</primary></indexterm>typeinfo for QScrollView</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Interfaces for Qt3 Tables</TITLE>
<PARA>
An LSB conforming implementation shall provide the architecture specific functions
for Qt3 Tables specified in <XREF linkend="tbl-libqt-mt-qt3-t-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<TABLE id="tbl-libqt-mt-qt3-t-ints">
<TITLE>libqt-mt - Qt3 Tables Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>_ZThn80_N10QDataTableD0Ev</primary></indexterm>_ZThn80_N10QDataTableD0Ev <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn80_N10QDataTableD1Ev</primary></indexterm>_ZThn80_N10QDataTableD1Ev <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn80_N6QTableD0Ev</primary></indexterm>_ZThn80_N6QTableD0Ev <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn80_N6QTableD1Ev</primary></indexterm>_ZThn80_N6QTableD1Ev <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn80_N7QHeaderD0Ev</primary></indexterm>_ZThn80_N7QHeaderD0Ev <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn80_N7QHeaderD1Ev</primary></indexterm>_ZThn80_N7QHeaderD1Ev <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>
</SECT2>
<!-- debug: database interface name Qt3 Plugins -->
<SECT2>
<!--libgroup-->
<TITLE>Qt3 Plugins</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Class data for QGPlugin</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QGPlugin class
is described in the generic part of this specification.
</PARA>
<PARA>
The Run Time Type Information for the QGPlugin  class
is described by <XREF LINKEND="rtti-48698">
</PARA>
<!--classdata-->
<TABLE ID="rtti-48698">
<TITLE>typeinfo for QGPlugin</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QGPlugin</primary></indexterm>typeinfo name for QGPlugin</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QObject</primary></indexterm>typeinfo for QObject</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QStylePlugin</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QStylePlugin class
is described in the generic part of this specification.
</PARA>
<PARA>
The Run Time Type Information for the QStylePlugin  class
is described by <XREF LINKEND="rtti-54503">
</PARA>
<!--classdata-->
<TABLE ID="rtti-54503">
<TITLE>typeinfo for QStylePlugin</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QStylePlugin</primary></indexterm>typeinfo name for QStylePlugin</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QGPlugin</primary></indexterm>typeinfo for QGPlugin</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QTextCodecPlugin</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QTextCodecPlugin class
is described in the generic part of this specification.
</PARA>
<PARA>
The Run Time Type Information for the QTextCodecPlugin  class
is described by <XREF LINKEND="rtti-55241">
</PARA>
<!--classdata-->
<TABLE ID="rtti-55241">
<TITLE>typeinfo for QTextCodecPlugin</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QTextCodecPlugin</primary></indexterm>typeinfo name for QTextCodecPlugin</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QGPlugin</primary></indexterm>typeinfo for QGPlugin</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QWidgetPlugin</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QWidgetPlugin class
is described in the generic part of this specification.
</PARA>
<PARA>
The Run Time Type Information for the QWidgetPlugin  class
is described by <XREF LINKEND="rtti-56526">
</PARA>
<!--classdata-->
<TABLE ID="rtti-56526">
<TITLE>typeinfo for QWidgetPlugin</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QWidgetPlugin</primary></indexterm>typeinfo name for QWidgetPlugin</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QGPlugin</primary></indexterm>typeinfo for QGPlugin</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QLibrary</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QLibrary class
is described in the generic part of this specification.
</PARA>
<PARA>
The Run Time Type Information for the QLibrary  class
is described by <XREF LINKEND="rtti-49777">
</PARA>
<!--classdata-->
<TABLE ID="rtti-49777">
<TITLE>typeinfo for QLibrary</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__class_type_info</primary></indexterm>vtable for __cxxabiv1::__class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QLibrary</primary></indexterm>typeinfo name for QLibrary</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QImageFormatPlugin</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QImageFormatPlugin class
is described in the generic part of this specification.
</PARA>
<PARA>
The Run Time Type Information for the QImageFormatPlugin  class
is described by <XREF LINKEND="rtti-49235">
</PARA>
<!--classdata-->
<TABLE ID="rtti-49235">
<TITLE>typeinfo for QImageFormatPlugin</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QImageFormatPlugin</primary></indexterm>typeinfo name for QImageFormatPlugin</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QGPlugin</primary></indexterm>typeinfo for QGPlugin</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Interfaces for Qt3 Plugins</TITLE>
<PARA>
No external functions are defined for libqt-mt - Qt3 Plugins
in this part of the specification. See also the generic specification.
</PARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Qt3 XML -->
<SECT2>
<!--libgroup-->
<TITLE>Qt3 XML</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Class data for QXmlEntityResolver</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QXmlEntityResolver class
is described in the generic part of this specification.
</PARA>
<PARA>
The Run Time Type Information for the QXmlEntityResolver  class
is described by <XREF LINKEND="rtti-49589">
</PARA>
<!--classdata-->
<TABLE ID="rtti-49589">
<TITLE>typeinfo for QXmlEntityResolver</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__class_type_info</primary></indexterm>vtable for __cxxabiv1::__class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QXmlEntityResolver</primary></indexterm>typeinfo name for QXmlEntityResolver</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QXmlLocator</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QXmlLocator class
is described in the generic part of this specification.
</PARA>
<PARA>
The Run Time Type Information for the QXmlLocator  class
is described by <XREF LINKEND="rtti-52983">
</PARA>
<!--classdata-->
<TABLE ID="rtti-52983">
<TITLE>typeinfo for QXmlLocator</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__class_type_info</primary></indexterm>vtable for __cxxabiv1::__class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QXmlLocator</primary></indexterm>typeinfo name for QXmlLocator</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QDomElement</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QDomElement class
is described in the generic part of this specification.
</PARA>
<PARA>
The Run Time Type Information for the QDomElement  class
is described by <XREF LINKEND="rtti-52943">
</PARA>
<!--classdata-->
<TABLE ID="rtti-52943">
<TITLE>typeinfo for QDomElement</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QDomElement</primary></indexterm>typeinfo name for QDomElement</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QDomNode</primary></indexterm>typeinfo for QDomNode</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QDomImplementation</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QDomImplementation class
is described in the generic part of this specification.
</PARA>
<PARA>
The Run Time Type Information for the QDomImplementation  class
is described by <XREF LINKEND="rtti-49986">
</PARA>
<!--classdata-->
<TABLE ID="rtti-49986">
<TITLE>typeinfo for QDomImplementation</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__class_type_info</primary></indexterm>vtable for __cxxabiv1::__class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QDomImplementation</primary></indexterm>typeinfo name for QDomImplementation</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QDomDocumentType</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QDomDocumentType class
is described in the generic part of this specification.
</PARA>
<PARA>
The Run Time Type Information for the QDomDocumentType  class
is described by <XREF LINKEND="rtti-51911">
</PARA>
<!--classdata-->
<TABLE ID="rtti-51911">
<TITLE>typeinfo for QDomDocumentType</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QDomDocumentType</primary></indexterm>typeinfo name for QDomDocumentType</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QDomNode</primary></indexterm>typeinfo for QDomNode</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QDomDocument</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QDomDocument class
is described in the generic part of this specification.
</PARA>
<PARA>
The Run Time Type Information for the QDomDocument  class
is described by <XREF LINKEND="rtti-58467">
</PARA>
<!--classdata-->
<TABLE ID="rtti-58467">
<TITLE>typeinfo for QDomDocument</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QDomDocument</primary></indexterm>typeinfo name for QDomDocument</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QDomNode</primary></indexterm>typeinfo for QDomNode</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QDomAttr</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QDomAttr class
is described in the generic part of this specification.
</PARA>
<PARA>
The Run Time Type Information for the QDomAttr  class
is described by <XREF LINKEND="rtti-59175">
</PARA>
<!--classdata-->
<TABLE ID="rtti-59175">
<TITLE>typeinfo for QDomAttr</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QDomAttr</primary></indexterm>typeinfo name for QDomAttr</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QDomNode</primary></indexterm>typeinfo for QDomNode</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QDomNodeList</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QDomNodeList class
is described in the generic part of this specification.
</PARA>
<PARA>
The Run Time Type Information for the QDomNodeList  class
is described by <XREF LINKEND="rtti-57706">
</PARA>
<!--classdata-->
<TABLE ID="rtti-57706">
<TITLE>typeinfo for QDomNodeList</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__class_type_info</primary></indexterm>vtable for __cxxabiv1::__class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QDomNodeList</primary></indexterm>typeinfo name for QDomNodeList</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QXmlReader</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QXmlReader class
is described in the generic part of this specification.
</PARA>
<PARA>
The Run Time Type Information for the QXmlReader  class
is described by <XREF LINKEND="rtti-51278">
</PARA>
<!--classdata-->
<TABLE ID="rtti-51278">
<TITLE>typeinfo for QXmlReader</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__class_type_info</primary></indexterm>vtable for __cxxabiv1::__class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QXmlReader</primary></indexterm>typeinfo name for QXmlReader</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QDomEntity</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QDomEntity class
is described in the generic part of this specification.
</PARA>
<PARA>
The Run Time Type Information for the QDomEntity  class
is described by <XREF LINKEND="rtti-52444">
</PARA>
<!--classdata-->
<TABLE ID="rtti-52444">
<TITLE>typeinfo for QDomEntity</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QDomEntity</primary></indexterm>typeinfo name for QDomEntity</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QDomNode</primary></indexterm>typeinfo for QDomNode</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QXmlDeclHandler</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QXmlDeclHandler class
is described in the generic part of this specification.
</PARA>
<PARA>
The Run Time Type Information for the QXmlDeclHandler  class
is described by <XREF LINKEND="rtti-60234">
</PARA>
<!--classdata-->
<TABLE ID="rtti-60234">
<TITLE>typeinfo for QXmlDeclHandler</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__class_type_info</primary></indexterm>vtable for __cxxabiv1::__class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QXmlDeclHandler</primary></indexterm>typeinfo name for QXmlDeclHandler</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QDomNode</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QDomNode class
is described in the generic part of this specification.
</PARA>
<PARA>
The Run Time Type Information for the QDomNode  class
is described by <XREF LINKEND="rtti-58502">
</PARA>
<!--classdata-->
<TABLE ID="rtti-58502">
<TITLE>typeinfo for QDomNode</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__class_type_info</primary></indexterm>vtable for __cxxabiv1::__class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QDomNode</primary></indexterm>typeinfo name for QDomNode</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QDomText</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QDomText class
is described in the generic part of this specification.
</PARA>
<PARA>
The Run Time Type Information for the QDomText  class
is described by <XREF LINKEND="rtti-54276">
</PARA>
<!--classdata-->
<TABLE ID="rtti-54276">
<TITLE>typeinfo for QDomText</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QDomText</primary></indexterm>typeinfo name for QDomText</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QDomCharacterData</primary></indexterm>typeinfo for QDomCharacterData</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QDomCharacterData</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QDomCharacterData class
is described in the generic part of this specification.
</PARA>
<PARA>
The Run Time Type Information for the QDomCharacterData  class
is described by <XREF LINKEND="rtti-56157">
</PARA>
<!--classdata-->
<TABLE ID="rtti-56157">
<TITLE>typeinfo for QDomCharacterData</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QDomCharacterData</primary></indexterm>typeinfo name for QDomCharacterData</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QDomNode</primary></indexterm>typeinfo for QDomNode</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QDomComment</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QDomComment class
is described in the generic part of this specification.
</PARA>
<PARA>
The Run Time Type Information for the QDomComment  class
is described by <XREF LINKEND="rtti-58507">
</PARA>
<!--classdata-->
<TABLE ID="rtti-58507">
<TITLE>typeinfo for QDomComment</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QDomComment</primary></indexterm>typeinfo name for QDomComment</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QDomCharacterData</primary></indexterm>typeinfo for QDomCharacterData</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QXmlDefaultHandler</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QXmlDefaultHandler class
is described by <XREF LINKEND="cls-55832-0">
</PARA>
<!--classdata-->
<TABLE id="cls-55832-0">
<TITLE>Primary vtable for QXmlDefaultHandler</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QXmlDefaultHandler</primary></indexterm>typeinfo for QXmlDefaultHandler</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QXmlDefaultHandler::setDocumentLocator(QXmlLocator*)</primary></indexterm>QXmlDefaultHandler::setDocumentLocator(QXmlLocator*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QXmlDefaultHandler::startDocument()</primary></indexterm>QXmlDefaultHandler::startDocument()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QXmlDefaultHandler::endDocument()</primary></indexterm>QXmlDefaultHandler::endDocument()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QXmlDefaultHandler::startPrefixMapping(QString const&, QString const&)</primary></indexterm>QXmlDefaultHandler::startPrefixMapping(QString const&, QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QXmlDefaultHandler::endPrefixMapping(QString const&)</primary></indexterm>QXmlDefaultHandler::endPrefixMapping(QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QXmlDefaultHandler::startElement(QString const&, QString const&, QString const&, QXmlAttributes const&)</primary></indexterm>QXmlDefaultHandler::startElement(QString const&, QString const&, QString const&, QXmlAttributes const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QXmlDefaultHandler::endElement(QString const&, QString const&, QString const&)</primary></indexterm>QXmlDefaultHandler::endElement(QString const&, QString const&, QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QXmlDefaultHandler::characters(QString const&)</primary></indexterm>QXmlDefaultHandler::characters(QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QXmlDefaultHandler::ignorableWhitespace(QString const&)</primary></indexterm>QXmlDefaultHandler::ignorableWhitespace(QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QXmlDefaultHandler::processingInstruction(QString const&, QString const&)</primary></indexterm>QXmlDefaultHandler::processingInstruction(QString const&, QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QXmlDefaultHandler::skippedEntity(QString const&)</primary></indexterm>QXmlDefaultHandler::skippedEntity(QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QXmlDefaultHandler::errorString()</primary></indexterm>QXmlDefaultHandler::errorString()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QXmlDefaultHandler::~QXmlDefaultHandler()</primary></indexterm>NULL or QXmlDefaultHandler::~QXmlDefaultHandler()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QXmlDefaultHandler::~QXmlDefaultHandler()</primary></indexterm>NULL or QXmlDefaultHandler::~QXmlDefaultHandler()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QXmlDefaultHandler::warning(QXmlParseException const&)</primary></indexterm>QXmlDefaultHandler::warning(QXmlParseException const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QXmlDefaultHandler::error(QXmlParseException const&)</primary></indexterm>QXmlDefaultHandler::error(QXmlParseException const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QXmlDefaultHandler::fatalError(QXmlParseException const&)</primary></indexterm>QXmlDefaultHandler::fatalError(QXmlParseException const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QXmlDefaultHandler::notationDecl(QString const&, QString const&, QString const&)</primary></indexterm>QXmlDefaultHandler::notationDecl(QString const&, QString const&, QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QXmlDefaultHandler::unparsedEntityDecl(QString const&, QString const&, QString const&, QString const&)</primary></indexterm>QXmlDefaultHandler::unparsedEntityDecl(QString const&, QString const&, QString const&, QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QXmlDefaultHandler::resolveEntity(QString const&, QString const&, QXmlInputSource*&)</primary></indexterm>QXmlDefaultHandler::resolveEntity(QString const&, QString const&, QXmlInputSource*&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QXmlDefaultHandler::startDTD(QString const&, QString const&, QString const&)</primary></indexterm>QXmlDefaultHandler::startDTD(QString const&, QString const&, QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QXmlDefaultHandler::endDTD()</primary></indexterm>QXmlDefaultHandler::endDTD()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QXmlDefaultHandler::startEntity(QString const&)</primary></indexterm>QXmlDefaultHandler::startEntity(QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QXmlDefaultHandler::endEntity(QString const&)</primary></indexterm>QXmlDefaultHandler::endEntity(QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QXmlDefaultHandler::startCDATA()</primary></indexterm>QXmlDefaultHandler::startCDATA()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QXmlDefaultHandler::endCDATA()</primary></indexterm>QXmlDefaultHandler::endCDATA()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QXmlDefaultHandler::comment(QString const&)</primary></indexterm>QXmlDefaultHandler::comment(QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QXmlDefaultHandler::attributeDecl(QString const&, QString const&, QString const&, QString const&, QString const&)</primary></indexterm>QXmlDefaultHandler::attributeDecl(QString const&, QString const&, QString const&, QString const&, QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QXmlDefaultHandler::internalEntityDecl(QString const&, QString const&)</primary></indexterm>QXmlDefaultHandler::internalEntityDecl(QString const&, QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QXmlDefaultHandler::externalEntityDecl(QString const&, QString const&, QString const&)</primary></indexterm>QXmlDefaultHandler::externalEntityDecl(QString const&, QString const&, QString const&)</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--classdata-->
<TABLE id="cls-55832-1">
<TITLE>Secondary vtable for QXmlDefaultHandler</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>-8</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QXmlDefaultHandler</primary></indexterm>typeinfo for QXmlDefaultHandler</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QXmlDefaultHandler::warning(QXmlParseException const&)</primary></indexterm>non-virtual thunk to QXmlDefaultHandler::warning(QXmlParseException const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QXmlDefaultHandler::error(QXmlParseException const&)</primary></indexterm>non-virtual thunk to QXmlDefaultHandler::error(QXmlParseException const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QXmlDefaultHandler::fatalError(QXmlParseException const&)</primary></indexterm>non-virtual thunk to QXmlDefaultHandler::fatalError(QXmlParseException const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QXmlDefaultHandler::errorString()</primary></indexterm>non-virtual thunk to QXmlDefaultHandler::errorString()</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--classdata-->
<TABLE id="cls-55832-2">
<TITLE>Secondary vtable for QXmlDefaultHandler</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>-16</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QXmlDefaultHandler</primary></indexterm>typeinfo for QXmlDefaultHandler</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QXmlDefaultHandler::notationDecl(QString const&, QString const&, QString const&)</primary></indexterm>non-virtual thunk to QXmlDefaultHandler::notationDecl(QString const&, QString const&, QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QXmlDefaultHandler::unparsedEntityDecl(QString const&, QString const&, QString const&, QString const&)</primary></indexterm>non-virtual thunk to QXmlDefaultHandler::unparsedEntityDecl(QString const&, QString const&, QString const&, QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QXmlDefaultHandler::errorString()</primary></indexterm>non-virtual thunk to QXmlDefaultHandler::errorString()</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--classdata-->
<TABLE id="cls-55832-3">
<TITLE>Secondary vtable for QXmlDefaultHandler</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>-24</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QXmlDefaultHandler</primary></indexterm>typeinfo for QXmlDefaultHandler</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QXmlDefaultHandler::resolveEntity(QString const&, QString const&, QXmlInputSource*&)</primary></indexterm>non-virtual thunk to QXmlDefaultHandler::resolveEntity(QString const&, QString const&, QXmlInputSource*&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QXmlDefaultHandler::errorString()</primary></indexterm>non-virtual thunk to QXmlDefaultHandler::errorString()</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--classdata-->
<TABLE id="cls-55832-4">
<TITLE>Secondary vtable for QXmlDefaultHandler</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>-32</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QXmlDefaultHandler</primary></indexterm>typeinfo for QXmlDefaultHandler</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QXmlDefaultHandler::startDTD(QString const&, QString const&, QString const&)</primary></indexterm>non-virtual thunk to QXmlDefaultHandler::startDTD(QString const&, QString const&, QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QXmlDefaultHandler::endDTD()</primary></indexterm>non-virtual thunk to QXmlDefaultHandler::endDTD()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QXmlDefaultHandler::startEntity(QString const&)</primary></indexterm>non-virtual thunk to QXmlDefaultHandler::startEntity(QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QXmlDefaultHandler::endEntity(QString const&)</primary></indexterm>non-virtual thunk to QXmlDefaultHandler::endEntity(QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QXmlDefaultHandler::startCDATA()</primary></indexterm>non-virtual thunk to QXmlDefaultHandler::startCDATA()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QXmlDefaultHandler::endCDATA()</primary></indexterm>non-virtual thunk to QXmlDefaultHandler::endCDATA()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QXmlDefaultHandler::comment(QString const&)</primary></indexterm>non-virtual thunk to QXmlDefaultHandler::comment(QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QXmlDefaultHandler::errorString()</primary></indexterm>non-virtual thunk to QXmlDefaultHandler::errorString()</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--classdata-->
<TABLE id="cls-55832-5">
<TITLE>Secondary vtable for QXmlDefaultHandler</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>-40</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QXmlDefaultHandler</primary></indexterm>typeinfo for QXmlDefaultHandler</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QXmlDefaultHandler::attributeDecl(QString const&, QString const&, QString const&, QString const&, QString const&)</primary></indexterm>non-virtual thunk to QXmlDefaultHandler::attributeDecl(QString const&, QString const&, QString const&, QString const&, QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QXmlDefaultHandler::internalEntityDecl(QString const&, QString const&)</primary></indexterm>non-virtual thunk to QXmlDefaultHandler::internalEntityDecl(QString const&, QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QXmlDefaultHandler::externalEntityDecl(QString const&, QString const&, QString const&)</primary></indexterm>non-virtual thunk to QXmlDefaultHandler::externalEntityDecl(QString const&, QString const&, QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QXmlDefaultHandler::errorString()</primary></indexterm>non-virtual thunk to QXmlDefaultHandler::errorString()</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QXmlDefaultHandler  class
is described by <XREF LINKEND="rtti-60414">
</PARA>
<!--classdata-->
<TABLE ID="rtti-60414">
<TITLE>typeinfo for QXmlDefaultHandler</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__vmi_class_type_info</primary></indexterm>vtable for __cxxabiv1::__vmi_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QXmlDefaultHandler</primary></indexterm>typeinfo name for QXmlDefaultHandler</ENTRY>
</ROW>
<ROW>
<ENTRY>flags:</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QXmlContentHandler</primary></indexterm>typeinfo for QXmlContentHandler</ENTRY>
<ENTRY>2</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QXmlErrorHandler</primary></indexterm>typeinfo for QXmlErrorHandler</ENTRY>
<ENTRY>1026</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QXmlErrorHandler</primary></indexterm>typeinfo for QXmlErrorHandler</ENTRY>
<ENTRY>2050</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QXmlErrorHandler</primary></indexterm>typeinfo for QXmlErrorHandler</ENTRY>
<ENTRY>1026</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QXmlErrorHandler</primary></indexterm>typeinfo for QXmlErrorHandler</ENTRY>
<ENTRY>2050</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QXmlErrorHandler</primary></indexterm>typeinfo for QXmlErrorHandler</ENTRY>
<ENTRY>1026</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QDomNotation</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QDomNotation class
is described in the generic part of this specification.
</PARA>
<PARA>
The Run Time Type Information for the QDomNotation  class
is described by <XREF LINKEND="rtti-57250">
</PARA>
<!--classdata-->
<TABLE ID="rtti-57250">
<TITLE>typeinfo for QDomNotation</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QDomNotation</primary></indexterm>typeinfo name for QDomNotation</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QDomNode</primary></indexterm>typeinfo for QDomNode</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QXmlSimpleReader</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QXmlSimpleReader class
is described in the generic part of this specification.
</PARA>
<PARA>
The Run Time Type Information for the QXmlSimpleReader  class
is described by <XREF LINKEND="rtti-52406">
</PARA>
<!--classdata-->
<TABLE ID="rtti-52406">
<TITLE>typeinfo for QXmlSimpleReader</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QXmlSimpleReader</primary></indexterm>typeinfo name for QXmlSimpleReader</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QXmlReader</primary></indexterm>typeinfo for QXmlReader</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QXmlLexicalHandler</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QXmlLexicalHandler class
is described in the generic part of this specification.
</PARA>
<PARA>
The Run Time Type Information for the QXmlLexicalHandler  class
is described by <XREF LINKEND="rtti-60711">
</PARA>
<!--classdata-->
<TABLE ID="rtti-60711">
<TITLE>typeinfo for QXmlLexicalHandler</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__class_type_info</primary></indexterm>vtable for __cxxabiv1::__class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QXmlLexicalHandler</primary></indexterm>typeinfo name for QXmlLexicalHandler</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QXmlAttributes</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QXmlAttributes class
is described in the generic part of this specification.
</PARA>
<PARA>
The Run Time Type Information for the QXmlAttributes  class
is described by <XREF LINKEND="rtti-51414">
</PARA>
<!--classdata-->
<TABLE ID="rtti-51414">
<TITLE>typeinfo for QXmlAttributes</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__class_type_info</primary></indexterm>vtable for __cxxabiv1::__class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QXmlAttributes</primary></indexterm>typeinfo name for QXmlAttributes</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QDomProcessingInstruction</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QDomProcessingInstruction class
is described in the generic part of this specification.
</PARA>
<PARA>
The Run Time Type Information for the QDomProcessingInstruction  class
is described by <XREF LINKEND="rtti-51757">
</PARA>
<!--classdata-->
<TABLE ID="rtti-51757">
<TITLE>typeinfo for QDomProcessingInstruction</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QDomProcessingInstruction</primary></indexterm>typeinfo name for QDomProcessingInstruction</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QDomNode</primary></indexterm>typeinfo for QDomNode</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QXmlContentHandler</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QXmlContentHandler class
is described in the generic part of this specification.
</PARA>
<PARA>
The Run Time Type Information for the QXmlContentHandler  class
is described by <XREF LINKEND="rtti-58523">
</PARA>
<!--classdata-->
<TABLE ID="rtti-58523">
<TITLE>typeinfo for QXmlContentHandler</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__class_type_info</primary></indexterm>vtable for __cxxabiv1::__class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QXmlContentHandler</primary></indexterm>typeinfo name for QXmlContentHandler</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QDomEntityReference</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QDomEntityReference class
is described in the generic part of this specification.
</PARA>
<PARA>
The Run Time Type Information for the QDomEntityReference  class
is described by <XREF LINKEND="rtti-57782">
</PARA>
<!--classdata-->
<TABLE ID="rtti-57782">
<TITLE>typeinfo for QDomEntityReference</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QDomEntityReference</primary></indexterm>typeinfo name for QDomEntityReference</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QDomNode</primary></indexterm>typeinfo for QDomNode</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QDomCDATASection</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QDomCDATASection class
is described in the generic part of this specification.
</PARA>
<PARA>
The Run Time Type Information for the QDomCDATASection  class
is described by <XREF LINKEND="rtti-56515">
</PARA>
<!--classdata-->
<TABLE ID="rtti-56515">
<TITLE>typeinfo for QDomCDATASection</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QDomCDATASection</primary></indexterm>typeinfo name for QDomCDATASection</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QDomText</primary></indexterm>typeinfo for QDomText</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QXmlDTDHandler</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QXmlDTDHandler class
is described in the generic part of this specification.
</PARA>
<PARA>
The Run Time Type Information for the QXmlDTDHandler  class
is described by <XREF LINKEND="rtti-60484">
</PARA>
<!--classdata-->
<TABLE ID="rtti-60484">
<TITLE>typeinfo for QXmlDTDHandler</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__class_type_info</primary></indexterm>vtable for __cxxabiv1::__class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QXmlDTDHandler</primary></indexterm>typeinfo name for QXmlDTDHandler</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QXmlInputSource</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QXmlInputSource class
is described in the generic part of this specification.
</PARA>
<PARA>
The Run Time Type Information for the QXmlInputSource  class
is described by <XREF LINKEND="rtti-50809">
</PARA>
<!--classdata-->
<TABLE ID="rtti-50809">
<TITLE>typeinfo for QXmlInputSource</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__class_type_info</primary></indexterm>vtable for __cxxabiv1::__class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QXmlInputSource</primary></indexterm>typeinfo name for QXmlInputSource</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QXmlErrorHandler</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QXmlErrorHandler class
is described in the generic part of this specification.
</PARA>
<PARA>
The Run Time Type Information for the QXmlErrorHandler  class
is described by <XREF LINKEND="rtti-49005">
</PARA>
<!--classdata-->
<TABLE ID="rtti-49005">
<TITLE>typeinfo for QXmlErrorHandler</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__class_type_info</primary></indexterm>vtable for __cxxabiv1::__class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QXmlErrorHandler</primary></indexterm>typeinfo name for QXmlErrorHandler</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QDomDocumentFragment</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QDomDocumentFragment class
is described in the generic part of this specification.
</PARA>
<PARA>
The Run Time Type Information for the QDomDocumentFragment  class
is described by <XREF LINKEND="rtti-52837">
</PARA>
<!--classdata-->
<TABLE ID="rtti-52837">
<TITLE>typeinfo for QDomDocumentFragment</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QDomDocumentFragment</primary></indexterm>typeinfo name for QDomDocumentFragment</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QDomNode</primary></indexterm>typeinfo for QDomNode</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Interfaces for Qt3 XML</TITLE>
<PARA>
An LSB conforming implementation shall provide the architecture specific functions
for Qt3 XML specified in <XREF linkend="tbl-libqt-mt-qt3-x-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<TABLE id="tbl-libqt-mt-qt3-x-ints">
<TITLE>libqt-mt - Qt3 XML Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>_ZThn16_N18QXmlDefaultHandler11errorStringEv</primary></indexterm>_ZThn16_N18QXmlDefaultHandler11errorStringEv <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn16_N18QXmlDefaultHandler12notationDeclERK7QStringS2_S2_</primary></indexterm>_ZThn16_N18QXmlDefaultHandler12notationDeclERK7QStringS2_S2_ <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn16_N18QXmlDefaultHandler18unparsedEntityDeclERK7QStringS2_S2_S2_</primary></indexterm>_ZThn16_N18QXmlDefaultHandler18unparsedEntityDeclERK7QStringS2_S2_S2_ <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn24_N18QXmlDefaultHandler11errorStringEv</primary></indexterm>_ZThn24_N18QXmlDefaultHandler11errorStringEv <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn24_N18QXmlDefaultHandler13resolveEntityERK7QStringS2_RP15QXmlInputSource</primary></indexterm>_ZThn24_N18QXmlDefaultHandler13resolveEntityERK7QStringS2_RP15QXmlInputSource <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn32_N18QXmlDefaultHandler10startCDATAEv</primary></indexterm>_ZThn32_N18QXmlDefaultHandler10startCDATAEv <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn32_N18QXmlDefaultHandler11errorStringEv</primary></indexterm>_ZThn32_N18QXmlDefaultHandler11errorStringEv <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn32_N18QXmlDefaultHandler11startEntityERK7QString</primary></indexterm>_ZThn32_N18QXmlDefaultHandler11startEntityERK7QString <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn32_N18QXmlDefaultHandler6endDTDEv</primary></indexterm>_ZThn32_N18QXmlDefaultHandler6endDTDEv <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn32_N18QXmlDefaultHandler7commentERK7QString</primary></indexterm>_ZThn32_N18QXmlDefaultHandler7commentERK7QString <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn32_N18QXmlDefaultHandler8endCDATAEv</primary></indexterm>_ZThn32_N18QXmlDefaultHandler8endCDATAEv <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn32_N18QXmlDefaultHandler8startDTDERK7QStringS2_S2_</primary></indexterm>_ZThn32_N18QXmlDefaultHandler8startDTDERK7QStringS2_S2_ <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn32_N18QXmlDefaultHandler9endEntityERK7QString</primary></indexterm>_ZThn32_N18QXmlDefaultHandler9endEntityERK7QString <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn40_N18QXmlDefaultHandler11errorStringEv</primary></indexterm>_ZThn40_N18QXmlDefaultHandler11errorStringEv <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn40_N18QXmlDefaultHandler13attributeDeclERK7QStringS2_S2_S2_S2_</primary></indexterm>_ZThn40_N18QXmlDefaultHandler13attributeDeclERK7QStringS2_S2_S2_S2_ <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn40_N18QXmlDefaultHandler18externalEntityDeclERK7QStringS2_S2_</primary></indexterm>_ZThn40_N18QXmlDefaultHandler18externalEntityDeclERK7QStringS2_S2_ <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn40_N18QXmlDefaultHandler18internalEntityDeclERK7QStringS2_</primary></indexterm>_ZThn40_N18QXmlDefaultHandler18internalEntityDeclERK7QStringS2_ <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn8_N18QXmlDefaultHandler10fatalErrorERK18QXmlParseException</primary></indexterm>_ZThn8_N18QXmlDefaultHandler10fatalErrorERK18QXmlParseException <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn8_N18QXmlDefaultHandler11errorStringEv</primary></indexterm>_ZThn8_N18QXmlDefaultHandler11errorStringEv <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn8_N18QXmlDefaultHandler5errorERK18QXmlParseException</primary></indexterm>_ZThn8_N18QXmlDefaultHandler5errorERK18QXmlParseException <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn8_N18QXmlDefaultHandler7warningERK18QXmlParseException</primary></indexterm>_ZThn8_N18QXmlDefaultHandler7warningERK18QXmlParseException <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
<ENTRY></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>
</SECT2>
<!-- debug: database interface name Qt3 Namespace -->
<SECT2>
<!--libgroup-->
<TITLE>Qt3 Namespace</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Interfaces for Qt3 Namespace</TITLE>
<PARA>
No external functions are defined for libqt-mt - Qt3 Namespace
in this part of the specification. See also the generic specification.
</PARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Qt3 Colors -->
<SECT2>
<!--libgroup-->
<TITLE>Qt3 Colors</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Interfaces for Qt3 Colors</TITLE>
<PARA>
No external functions are defined for libqt-mt - Qt3 Colors
in this part of the specification. See also the generic specification.
</PARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Qt3 Fonts -->
<SECT2>
<!--libgroup-->
<TITLE>Qt3 Fonts</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Interfaces for Qt3 Fonts</TITLE>
<PARA>
No external functions are defined for libqt-mt - Qt3 Fonts
in this part of the specification. See also the generic specification.
</PARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Qt3 2D Graphics -->
<SECT2>
<!--libgroup-->
<TITLE>Qt3 2D Graphics</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Class data for QIconSet</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QIconSet class
is described in the generic part of this specification.
</PARA>
<PARA>
The Run Time Type Information for the QIconSet  class
is described by <XREF LINKEND="rtti-51759">
</PARA>
<!--classdata-->
<TABLE ID="rtti-51759">
<TITLE>typeinfo for QIconSet</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__class_type_info</primary></indexterm>vtable for __cxxabiv1::__class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QIconSet</primary></indexterm>typeinfo name for QIconSet</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Interfaces for Qt3 2D Graphics</TITLE>
<PARA>
No external functions are defined for libqt-mt - Qt3 2D Graphics
in this part of the specification. See also the generic specification.
</PARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Qt3 Validators -->
<SECT2>
<!--libgroup-->
<TITLE>Qt3 Validators</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Class data for QRegExpValidator</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QRegExpValidator class
is described in the generic part of this specification.
</PARA>
<PARA>
The Run Time Type Information for the QRegExpValidator  class
is described by <XREF LINKEND="rtti-57374">
</PARA>
<!--classdata-->
<TABLE ID="rtti-57374">
<TITLE>typeinfo for QRegExpValidator</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QRegExpValidator</primary></indexterm>typeinfo name for QRegExpValidator</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QValidator</primary></indexterm>typeinfo for QValidator</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QIntValidator</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QIntValidator class
is described in the generic part of this specification.
</PARA>
<PARA>
The Run Time Type Information for the QIntValidator  class
is described by <XREF LINKEND="rtti-48846">
</PARA>
<!--classdata-->
<TABLE ID="rtti-48846">
<TITLE>typeinfo for QIntValidator</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QIntValidator</primary></indexterm>typeinfo name for QIntValidator</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QValidator</primary></indexterm>typeinfo for QValidator</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QValidator</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QValidator class
is described in the generic part of this specification.
</PARA>
<PARA>
The Run Time Type Information for the QValidator  class
is described by <XREF LINKEND="rtti-54073">
</PARA>
<!--classdata-->
<TABLE ID="rtti-54073">
<TITLE>typeinfo for QValidator</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QValidator</primary></indexterm>typeinfo name for QValidator</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QObject</primary></indexterm>typeinfo for QObject</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QDoubleValidator</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QDoubleValidator class
is described in the generic part of this specification.
</PARA>
<PARA>
The Run Time Type Information for the QDoubleValidator  class
is described by <XREF LINKEND="rtti-56100">
</PARA>
<!--classdata-->
<TABLE ID="rtti-56100">
<TITLE>typeinfo for QDoubleValidator</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QDoubleValidator</primary></indexterm>typeinfo name for QDoubleValidator</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QValidator</primary></indexterm>typeinfo for QValidator</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Interfaces for Qt3 Validators</TITLE>
<PARA>
No external functions are defined for libqt-mt - Qt3 Validators
in this part of the specification. See also the generic specification.
</PARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Qt3 Internals -->
<SECT2>
<!--libgroup-->
<TITLE>Qt3 Internals</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Class data for QGVector</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QGVector class
is described in the generic part of this specification.
</PARA>
<PARA>
The Run Time Type Information for the QGVector  class
is described by <XREF LINKEND="rtti-55869">
</PARA>
<!--classdata-->
<TABLE ID="rtti-55869">
<TITLE>typeinfo for QGVector</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QGVector</primary></indexterm>typeinfo name for QGVector</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QPtrCollection</primary></indexterm>typeinfo for QPtrCollection</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QGList</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QGList class
is described in the generic part of this specification.
</PARA>
<PARA>
The Run Time Type Information for the QGList  class
is described by <XREF LINKEND="rtti-60059">
</PARA>
<!--classdata-->
<TABLE ID="rtti-60059">
<TITLE>typeinfo for QGList</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QGList</primary></indexterm>typeinfo name for QGList</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QPtrCollection</primary></indexterm>typeinfo for QPtrCollection</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QPolygonScanner</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QPolygonScanner class
is described in the generic part of this specification.
</PARA>
<PARA>
The Run Time Type Information for the QPolygonScanner  class
is described by <XREF LINKEND="rtti-58836">
</PARA>
<!--classdata-->
<TABLE ID="rtti-58836">
<TITLE>typeinfo for QPolygonScanner</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__class_type_info</primary></indexterm>vtable for __cxxabiv1::__class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QPolygonScanner</primary></indexterm>typeinfo name for QPolygonScanner</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QGCache</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QGCache class
is described in the generic part of this specification.
</PARA>
<PARA>
The Run Time Type Information for the QGCache  class
is described by <XREF LINKEND="rtti-51406">
</PARA>
<!--classdata-->
<TABLE ID="rtti-51406">
<TITLE>typeinfo for QGCache</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QGCache</primary></indexterm>typeinfo name for QGCache</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QPtrCollection</primary></indexterm>typeinfo for QPtrCollection</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QGArray</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QGArray class
is described in the generic part of this specification.
</PARA>
<PARA>
The Run Time Type Information for the QGArray  class
is described by <XREF LINKEND="rtti-57538">
</PARA>
<!--classdata-->
<TABLE ID="rtti-57538">
<TITLE>typeinfo for QGArray</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__class_type_info</primary></indexterm>vtable for __cxxabiv1::__class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QGArray</primary></indexterm>typeinfo name for QGArray</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QSignalVec</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QSignalVec class
is described in the generic part of this specification.
</PARA>
<PARA>
The Run Time Type Information for the QSignalVec  class
is described by <XREF LINKEND="rtti-61100">
</PARA>
<!--classdata-->
<TABLE ID="rtti-61100">
<TITLE>typeinfo for QSignalVec</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QSignalVec</primary></indexterm>typeinfo name for QSignalVec</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QPtrVector&lt;QConnectionList&gt;</primary></indexterm>typeinfo for QPtrVector&lt;QConnectionList&gt;</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QGDict</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QGDict class
is described in the generic part of this specification.
</PARA>
<PARA>
The Run Time Type Information for the QGDict  class
is described by <XREF LINKEND="rtti-53716">
</PARA>
<!--classdata-->
<TABLE ID="rtti-53716">
<TITLE>typeinfo for QGDict</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QGDict</primary></indexterm>typeinfo name for QGDict</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QPtrCollection</primary></indexterm>typeinfo for QPtrCollection</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Interfaces for Qt3 Internals</TITLE>
<PARA>
No external functions are defined for libqt-mt - Qt3 Internals
in this part of the specification. See also the generic specification.
</PARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Qt3 Miscellaneous -->
<SECT2>
<!--libgroup-->
<TITLE>Qt3 Miscellaneous</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Class data for QRangeControl</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QRangeControl class
is described in the generic part of this specification.
</PARA>
<PARA>
The Run Time Type Information for the QRangeControl  class
is described by <XREF LINKEND="rtti-48730">
</PARA>
<!--classdata-->
<TABLE ID="rtti-48730">
<TITLE>typeinfo for QRangeControl</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__class_type_info</primary></indexterm>vtable for __cxxabiv1::__class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QRangeControl</primary></indexterm>typeinfo name for QRangeControl</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QSplashScreen</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QSplashScreen class
is described by <XREF LINKEND="cls-50960-0">
</PARA>
<!--classdata-->
<TABLE id="cls-50960-0">
<TITLE>Primary vtable for QSplashScreen</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QSplashScreen</primary></indexterm>typeinfo for QSplashScreen</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSplashScreen::metaObject() const</primary></indexterm>NULL or QSplashScreen::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSplashScreen::className() const</primary></indexterm>QSplashScreen::className() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSplashScreen::qt_cast(char const*)</primary></indexterm>QSplashScreen::qt_cast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSplashScreen::qt_invoke(int, QUObject*)</primary></indexterm>QSplashScreen::qt_invoke(int, QUObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSplashScreen::qt_emit(int, QUObject*)</primary></indexterm>QSplashScreen::qt_emit(int, QUObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSplashScreen::qt_property(int, int, QVariant*)</primary></indexterm>QSplashScreen::qt_property(int, int, QVariant*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSplashScreen::~QSplashScreen()</primary></indexterm>QSplashScreen::~QSplashScreen()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSplashScreen::~QSplashScreen()</primary></indexterm>QSplashScreen::~QSplashScreen()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::event(QEvent*)</primary></indexterm>QWidget::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::eventFilter(QObject*, QEvent*)</primary></indexterm>QObject::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setName(char const*)</primary></indexterm>QWidget::setName(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::insertChild(QObject*)</primary></indexterm>QObject::insertChild(QObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::removeChild(QObject*)</primary></indexterm>QObject::removeChild(QObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::setProperty(char const*, QVariant const&)</primary></indexterm>QObject::setProperty(char const*, QVariant const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::property(char const*) const</primary></indexterm>QObject::property(char const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QCustomEvent*)</primary></indexterm>QObject::customEvent(QCustomEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::checkConnectArgs(char const*, QObject const*, char const*)</primary></indexterm>QObject::checkConnectArgs(char const*, QObject const*, char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setEnabled(bool)</primary></indexterm>QWidget::setEnabled(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMinimumSize(int, int)</primary></indexterm>QWidget::setMinimumSize(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMaximumSize(int, int)</primary></indexterm>QWidget::setMaximumSize(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setSizeIncrement(int, int)</primary></indexterm>QWidget::setSizeIncrement(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundMode(Qt::BackgroundMode)</primary></indexterm>QWidget::setBackgroundMode(Qt::BackgroundMode)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setEraseColor(QColor const&)</primary></indexterm>QWidget::setEraseColor(QColor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setErasePixmap(QPixmap const&)</primary></indexterm>QWidget::setErasePixmap(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setPalette(QPalette const&)</primary></indexterm>QWidget::setPalette(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setPaletteBackgroundColor(QColor const&)</primary></indexterm>QWidget::setPaletteBackgroundColor(QColor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setPaletteBackgroundPixmap(QPixmap const&)</primary></indexterm>QWidget::setPaletteBackgroundPixmap(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFont(QFont const&)</primary></indexterm>QWidget::setFont(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setCursor(QCursor const&)</primary></indexterm>QWidget::setCursor(QCursor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;33&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::unsetCursor()</primary></indexterm>QWidget::unsetCursor()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;34&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMask(QBitmap const&)</primary></indexterm>QWidget::setMask(QBitmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;35&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMask(QRegion const&)</primary></indexterm>QWidget::setMask(QRegion const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;36&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundColor(QColor const&)</primary></indexterm>QWidget::setBackgroundColor(QColor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;37&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundPixmap(QPixmap const&)</primary></indexterm>QWidget::setBackgroundPixmap(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;38&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setCaption(QString const&)</primary></indexterm>QWidget::setCaption(QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;39&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setIcon(QPixmap const&)</primary></indexterm>QWidget::setIcon(QPixmap const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;40&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setIconText(QString const&)</primary></indexterm>QWidget::setIconText(QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;41&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMouseTracking(bool)</primary></indexterm>QWidget::setMouseTracking(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;42&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFocus()</primary></indexterm>QWidget::setFocus()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;43&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setActiveWindow()</primary></indexterm>QWidget::setActiveWindow()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;44&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFocusPolicy(QWidget::FocusPolicy)</primary></indexterm>QWidget::setFocusPolicy(QWidget::FocusPolicy)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;45&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setFocusProxy(QWidget*)</primary></indexterm>QWidget::setFocusProxy(QWidget*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;46&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setUpdatesEnabled(bool)</primary></indexterm>QWidget::setUpdatesEnabled(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;47&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::show()</primary></indexterm>QWidget::show()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;48&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::hide()</primary></indexterm>QWidget::hide()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;49&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showMinimized()</primary></indexterm>QWidget::showMinimized()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;50&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showMaximized()</primary></indexterm>QWidget::showMaximized()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;51&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showNormal()</primary></indexterm>QWidget::showNormal()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;52&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::polish()</primary></indexterm>QWidget::polish()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;53&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::move(int, int)</primary></indexterm>QWidget::move(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;54&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::resize(int, int)</primary></indexterm>QWidget::resize(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;55&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setGeometry(int, int, int, int)</primary></indexterm>QWidget::setGeometry(int, int, int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;56&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setGeometry(QRect const&)</primary></indexterm>NULL or QWidget::setGeometry(QRect const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;57&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::close(bool)</primary></indexterm>QWidget::close(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;58&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::sizeHint() const</primary></indexterm>QWidget::sizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;59&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::minimumSizeHint() const</primary></indexterm>QWidget::minimumSizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;60&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::sizePolicy() const</primary></indexterm>QWidget::sizePolicy() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;61&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setSizePolicy(QSizePolicy)</primary></indexterm>QWidget::setSizePolicy(QSizePolicy)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;62&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::heightForWidth(int) const</primary></indexterm>QWidget::heightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;63&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::adjustSize()</primary></indexterm>QWidget::adjustSize()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;64&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::reparent(QWidget*, unsigned int, QPoint const&, bool)</primary></indexterm>QWidget::reparent(QWidget*, unsigned int, QPoint const&, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;65&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setAcceptDrops(bool)</primary></indexterm>QWidget::setAcceptDrops(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;66&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setAutoMask(bool)</primary></indexterm>QWidget::setAutoMask(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;67&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setBackgroundOrigin(QWidget::BackgroundOrigin)</primary></indexterm>QWidget::setBackgroundOrigin(QWidget::BackgroundOrigin)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;68&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::customWhatsThis() const</primary></indexterm>QWidget::customWhatsThis() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;69&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSplashScreen::mousePressEvent(QMouseEvent*)</primary></indexterm>QSplashScreen::mousePressEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;70&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseReleaseEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseReleaseEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;71&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseDoubleClickEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseDoubleClickEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;72&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseMoveEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseMoveEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;73&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::wheelEvent(QWheelEvent*)</primary></indexterm>QWidget::wheelEvent(QWheelEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;74&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyPressEvent(QKeyEvent*)</primary></indexterm>QWidget::keyPressEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;75&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyReleaseEvent(QKeyEvent*)</primary></indexterm>QWidget::keyReleaseEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;76&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusInEvent(QFocusEvent*)</primary></indexterm>QWidget::focusInEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;77&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusOutEvent(QFocusEvent*)</primary></indexterm>QWidget::focusOutEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;78&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enterEvent(QEvent*)</primary></indexterm>QWidget::enterEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;79&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::leaveEvent(QEvent*)</primary></indexterm>QWidget::leaveEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;80&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paintEvent(QPaintEvent*)</primary></indexterm>QWidget::paintEvent(QPaintEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;81&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::moveEvent(QMoveEvent*)</primary></indexterm>QWidget::moveEvent(QMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;82&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::resizeEvent(QResizeEvent*)</primary></indexterm>QWidget::resizeEvent(QResizeEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;83&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::closeEvent(QCloseEvent*)</primary></indexterm>QWidget::closeEvent(QCloseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;84&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::contextMenuEvent(QContextMenuEvent*)</primary></indexterm>QWidget::contextMenuEvent(QContextMenuEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;85&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::imStartEvent(QIMEvent*)</primary></indexterm>QWidget::imStartEvent(QIMEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;86&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::imComposeEvent(QIMEvent*)</primary></indexterm>QWidget::imComposeEvent(QIMEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;87&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::imEndEvent(QIMEvent*)</primary></indexterm>QWidget::imEndEvent(QIMEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;88&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::tabletEvent(QTabletEvent*)</primary></indexterm>QWidget::tabletEvent(QTabletEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;89&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragEnterEvent(QDragEnterEvent*)</primary></indexterm>QWidget::dragEnterEvent(QDragEnterEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;90&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragMoveEvent(QDragMoveEvent*)</primary></indexterm>QWidget::dragMoveEvent(QDragMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;91&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragLeaveEvent(QDragLeaveEvent*)</primary></indexterm>QWidget::dragLeaveEvent(QDragLeaveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;92&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dropEvent(QDropEvent*)</primary></indexterm>QWidget::dropEvent(QDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;93&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showEvent(QShowEvent*)</primary></indexterm>QWidget::showEvent(QShowEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;94&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::hideEvent(QHideEvent*)</primary></indexterm>QWidget::hideEvent(QHideEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;95&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::x11Event(_XEvent*)</primary></indexterm>QWidget::x11Event(_XEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;96&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::updateMask()</primary></indexterm>QWidget::updateMask()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;97&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::styleChange(QStyle&)</primary></indexterm>QWidget::styleChange(QStyle&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;98&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enabledChange(bool)</primary></indexterm>QWidget::enabledChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;99&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paletteChange(QPalette const&)</primary></indexterm>QWidget::paletteChange(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;100&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::fontChange(QFont const&)</primary></indexterm>QWidget::fontChange(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;101&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::windowActivationChange(bool)</primary></indexterm>QWidget::windowActivationChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;102&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::metric(int) const</primary></indexterm>QWidget::metric(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;103&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::create(unsigned long, bool, bool)</primary></indexterm>QWidget::create(unsigned long, bool, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;104&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::destroy(bool, bool)</primary></indexterm>QWidget::destroy(bool, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;105&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setWState(unsigned int)</primary></indexterm>NULL or QWidget::setWState(unsigned int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;106&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setWFlags(unsigned int)</primary></indexterm>NULL or QWidget::setWFlags(unsigned int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;107&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusNextPrevChild(bool)</primary></indexterm>QWidget::focusNextPrevChild(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;108&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setKeyCompression(bool)</primary></indexterm>QWidget::setKeyCompression(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;109&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setMicroFocusHint(int, int, int, int, bool, QFont*)</primary></indexterm>QWidget::setMicroFocusHint(int, int, int, int, bool, QFont*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;110&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSplashScreen::drawContents(QPainter*)</primary></indexterm>QSplashScreen::drawContents(QPainter*)</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--classdata-->
<TABLE id="cls-50960-1">
<TITLE>Secondary vtable for QSplashScreen</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>-80</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QSplashScreen</primary></indexterm>typeinfo for QSplashScreen</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QSplashScreen::~QSplashScreen()</primary></indexterm>non-virtual thunk to QSplashScreen::~QSplashScreen()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QSplashScreen::~QSplashScreen()</primary></indexterm>non-virtual thunk to QSplashScreen::~QSplashScreen()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::setResolution(int)</primary></indexterm>QPaintDevice::setResolution(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::resolution() const</primary></indexterm>QPaintDevice::resolution() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::handle() const</primary></indexterm>QPaintDevice::handle() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::x11RenderHandle() const</primary></indexterm>QPaintDevice::x11RenderHandle() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::setX11Data(QPaintDeviceX11Data const*)</primary></indexterm>QPaintDevice::setX11Data(QPaintDeviceX11Data const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::cmd(int, QPainter*, QPDevCmdParam*)</primary></indexterm>QPaintDevice::cmd(int, QPainter*, QPDevCmdParam*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::metric(int) const</primary></indexterm>non-virtual thunk to QWidget::metric(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::fontMet(QFont*, int, char const*, int) const</primary></indexterm>QPaintDevice::fontMet(QFont*, int, char const*, int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::fontInf(QFont*, int) const</primary></indexterm>QPaintDevice::fontInf(QFont*, int) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QSplashScreen  class
is described by <XREF LINKEND="rtti-50562">
</PARA>
<!--classdata-->
<TABLE ID="rtti-50562">
<TITLE>typeinfo for QSplashScreen</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QSplashScreen</primary></indexterm>typeinfo name for QSplashScreen</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QWidget</primary></indexterm>typeinfo for QWidget</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QAccel</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QAccel class
is described in the generic part of this specification.
</PARA>
<PARA>
The Run Time Type Information for the QAccel  class
is described by <XREF LINKEND="rtti-54715">
</PARA>
<!--classdata-->
<TABLE ID="rtti-54715">
<TITLE>typeinfo for QAccel</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QAccel</primary></indexterm>typeinfo name for QAccel</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QObject</primary></indexterm>typeinfo for QObject</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Interfaces for Qt3 Miscellaneous</TITLE>
<PARA>
An LSB conforming implementation shall provide the architecture specific functions
for Qt3 Miscellaneous specified in <XREF linkend="tbl-libqt-mt-5-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<TABLE id="tbl-libqt-mt-5-ints">
<TITLE>libqt-mt - Qt3 Miscellaneous Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>_ZThn80_N13QSplashScreenD0Ev</primary></indexterm>_ZThn80_N13QSplashScreenD0Ev <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn80_N13QSplashScreenD1Ev</primary></indexterm>_ZThn80_N13QSplashScreenD1Ev <LINK LINKEND="REFSTD.libqt.mt.1">[CXXABI-1.86]</LINK></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>
</SECT2>
</SECT1>
<!-- End of text generated from database -->
