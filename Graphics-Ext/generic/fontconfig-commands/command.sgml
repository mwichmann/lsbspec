<CHAPTER ID=fontconfigcommand>
<TITLE>Commands and Utilities</TITLE>
<SECT1 ID=cmdutil>
<TITLE>Commands and Utilities</TITLE>
<!-- Start of text generated from database -->
<PARA>
An LSB conforming implementation shall provide the
commands and utilities as described in <XREF LINKEND="tbl-cmds">, with at least the behavior
described as mandatory in the referenced underlying
specification, with the following exceptions:
<ORDEREDLIST>
<LISTITEM><PARA>
If any operand (except one which follows <option>--</option>) starts with a
hyphen, the behavior is unspecified.
<NOTE><TITLE>Rationale (Informative)</TITLE>
<para>Applications should place options before operands, or use
<option>--</option>, as needed.  This text is needed because,
by default, GNU option parsing
differs from POSIX, unless the environment variable 
<ENVAR>POSIXLY_CORRECT</ENVAR>
is set.  For example, <command>ls . -a</command> in GNU
<command>ls</command> means to list the current directory, showing all
files (that is, <option>"."</option> is an operand and <option>-a</option> is an
option).  In POSIX, <option>"."</option> and <option>-a</option> are both operands,
and the command means to list the current directory, and also the file
named <filename>-a</filename>.  Suggesting that applications rely on the
setting of the <envar>POSIXLY_CORRECT</envar> environment variable,
or try to set it, seems worse than just asking the applictions to invoke
commands in ways which work with either the POSIX or GNU behaviors.</para>

</NOTE>
</PARA></LISTITEM>
</ORDEREDLIST>
</PARA>
<TABLE id="tbl-cmds">
<TITLE>Commands And Utilities</TITLE>
<TGROUP COLS=5>
<TBODY>
<ROW>
<ENTRY>fc-cache
<LINK LINKEND="std-cmd-10"> [1]</LINK>
</ENTRY>
<ENTRY>fc-list
<LINK LINKEND="std-cmd-10"> [1]</LINK>
</ENTRY>
<ENTRY>fc-match
<LINK LINKEND="std-cmd-10"> [1]</LINK>
</ENTRY>
<ENTRY>
</ENTRY>
<ENTRY>
</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-cmd-10">[1]</TITLE><para><XREF LINKEND=std.LSB></para></FORMALPARA>
<!-- End of text generated from database -->

</SECT1>
<!-- Start of text generated from database -->
<!-- generated from the LSB specification database -->
<!--    by $Header: mkcmdlist 1.3 2006/01/20 13:19:39 pradosh Exp 0 -->
<!--    at Mon Aug 13 06:32:27 2007 -->
<SECT1 ID=cmdbehav>
<TITLE>Command Behavior</TITLE>
<PARA>
This section contains descriptions for commands and utilities whose
specified behavior in the LSB contradicts or extends the standards
referenced. It also contains commands and utilities only required by
the LSB and not specified by other standards.
</PARA>
<REFENTRY id="fc-cache">
<REFMETA><REFENTRYTITLE>
fc-cache
</REFENTRYTITLE></REFMETA>
<REFNAMEDIV>
<REFNAME>fc-cache</REFNAME>
<REFPURPOSE>
build font information cache files
</REFPURPOSE>
</REFNAMEDIV>

<REFSECT1>
<TITLE>Description</TITLE>
<PARA>
<COMMAND>fc-cache</COMMAND> scans  the  font  directories on the system and builds font information cache files for applications using fontconfig for their font handling.  If directory arguments are not given, fc-cache uses each directory in the current font configuration. Each directory is scanned for font files readable  by FreeType.  A cache is created which contains properties of each font and the associated filename.  This cache is used to speed up application startup when using the fontconfig library.
</PARA>
</REFSECT1>

<REFSECT1>
<TITLE>Synopsis</TITLE>
<PARA>fc-cache  [  -fsvV?  ]  [  --force  ] [ --system-only ] [ --verbose ] [ --version ] [ --help ] [ dirs ]</PARA>
</REFSECT1>

<REFSECT1>
<TITLE>Option and Operand Handling</TITLE>
<PARA>
This program follows the usual GNU command line syntax, with long options starting with two dashes ('-').  A summary of options is included below.
<variablelist>
<varlistentry>
<term><parameter>-f --force</parameter></term>
<listitem><para> Force re-generation of apparently up-to-date cache files, overriding the timestamp checking.</para></listitem>
</varlistentry>
<varlistentry>
<term><parameter>-s --system-only</parameter></term>
<listitem><para>Only scan system-wide directories, omitting the places located in the user's home directory.</para></listitem>
</varlistentry>
<varlistentry>
<term><parameter>-v --verbose</parameter></term>
<listitem><para>Display status information while busy.</para></listitem>
</varlistentry>
<varlistentry>
<term><parameter>-? --help</parameter></term>
<listitem><para>Show summary of options.</para></listitem>
</varlistentry>
<varlistentry>
<term><parameter>-V --version</parameter></term>
<listitem><para>Show version of the program and exit.</para></listitem>
</varlistentry>
<varlistentry>
<term><parameter>dirs</parameter></term>
<listitem><para>A list of directories to scan for fonts.</para></listitem>
</varlistentry>
</variablelist>
</PARA>
</REFSECT1>

</REFENTRY>

<REFENTRY id="fc-list">
<REFMETA><REFENTRYTITLE>
fc-list
</REFENTRYTITLE></REFMETA>
<REFNAMEDIV>
<REFNAME>fc-list</REFNAME>
<REFPURPOSE>
list available  fonts.
</REFPURPOSE>
</REFNAMEDIV>

<REFSECT1>
<TITLE>Description</TITLE>
<PARA>
<COMMAND>fc-list</COMMAND> lists fonts and styles available on the system for applications using fontconfig. 
</PARA>

</REFSECT1>

<REFSECT1>
<TITLE>Synopsis</TITLE>
<PARA> fc-list  [  -vV?] [ --verbose ] [ --version ] [ --help ] [ pattern ] [ element ]
</PARA>

</REFSECT1>

<REFSECT1>
<TITLE>Option and Operand Handling</TITLE>
<PARA>
This  program  follows  the usual GNU command line syntax, with long options starting with two dashes ('-'). A summary of options is included below.
<variablelist>
<varlistentry>
<term><parameter>-v --verbose</parameter></term>
<listitem><para>Display status information while busy.</para></listitem>
</varlistentry>
<varlistentry>
<term><parameter>-? --help</parameter></term>
<listitem><para>Show summary of options.</para></listitem>
</varlistentry>
<varlistentry>
<term><parameter>-V --version</parameter></term>
<listitem><para>Show version of the program and exit.</para></listitem>
</varlistentry>
<varlistentry>
<term><parameter>pattern</parameter></term>
<listitem><para>If this argument is set, only fonts matching pattern are displayed.</para></listitem>
</varlistentry>
<varlistentry>
<term><parameter>element</parameter></term>
<listitem><para>If set, the element property is displayed for matching fonts.</para></listitem>
</varlistentry>
</variablelist>
</para>
</REFSECT1>

</REFENTRY>

<REFENTRY id="fc-match">
<REFMETA><REFENTRYTITLE>
fc-match
</REFENTRYTITLE></REFMETA>
<REFNAMEDIV>
<REFNAME>fc-match</REFNAME>
<REFPURPOSE>
match available fonts
</REFPURPOSE>
</REFNAMEDIV>

<REFSECT1>
<TITLE>Description</TITLE>
<PARA>
fc-match matches font-pattern (empty pattern by default) using the normal fontconfig matching rules to find the best font available.  If --sort 
is given, the sorted list of  best  matching  fonts  is  displayed. With  --verbose,  the whole font pattern for each match is printed, 
otherwise only the file, family and style are printed.</PARA>

</REFSECT1>
</REFENTRY>



</SECT1>
<!-- End of text generated from database -->
<!--    by $Header: mkcmdlist 1.3 2006/01/20 13:19:39 pradosh Exp 0 -->

</CHAPTER>
