<PART ID="toclibfreetype">
<TITLE>Freetype library</TITLE>

<CHAPTER id=libfreetypechap>
<TITLE>Libraries</TITLE>
<!-- Start of text generated from database -->
<!-- generated from the LSB specification database -->
<!--    by $Header: mklibspec 1.82 2006/03/29 19:10:18 mats Exp 0 -->
<!--    at Fri Aug 24 13:08:20 2007 -->
<SECT1 ID=libfreetype>
<TITLE>Interfaces for libfreetype</TITLE>
<PARA>
<XREF LINKEND="lib-libfreetype-def"> defines the library name and shared object name
for the libfreetype library
</PARA>
<TABLE id="lib-libfreetype-def">
<TITLE>libfreetype Definition</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Library:</ENTRY>
<ENTRY>libfreetype</ENTRY>
</ROW>
<ROW>
<ENTRY>SONAME:</ENTRY>
<ENTRY>libfreetype.so.6</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The behavior of the interfaces in this library is specified by the following specifications:<SIMPLELIST COLUMNS=1>
<MEMBER ID='REFSTD.libfreetype.1'>
[freetype] <XREF LINKEND="std.freetype">
</MEMBER>
</SIMPLELIST>
</PARA>
<!-- debug: database interface name Default LibGroup for libfreetype -->
<SECT2>
<!--libgroup-->
<TITLE>Default LibGroup for libfreetype</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Interfaces for Default LibGroup for libfreetype</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic functions
for Default LibGroup for libfreetype specified in <XREF linkend="tbl-libfreetype-defau-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<TABLE id="tbl-libfreetype-defau-ints">
<TITLE>libfreetype - Default LibGroup for libfreetype Function Interfaces</TITLE>
<TGROUP COLS=3>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>FT_Activate_Size</primary></indexterm>FT_Activate_Size <LINK LINKEND="REFSTD.libfreetype.1">[freetype]</LINK></ENTRY>
<ENTRY><indexterm><primary>FT_Add_Default_Modules</primary></indexterm>FT_Add_Default_Modules <LINK LINKEND="REFSTD.libfreetype.1">[freetype]</LINK></ENTRY>
<ENTRY><indexterm><primary>FT_Add_Module</primary></indexterm>FT_Add_Module <LINK LINKEND="REFSTD.libfreetype.1">[freetype]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>FT_Angle_Diff</primary></indexterm>FT_Angle_Diff <LINK LINKEND="REFSTD.libfreetype.1">[freetype]</LINK></ENTRY>
<ENTRY><indexterm><primary>FT_Atan2</primary></indexterm>FT_Atan2 <LINK LINKEND="REFSTD.libfreetype.1">[freetype]</LINK></ENTRY>
<ENTRY><indexterm><primary>FT_Attach_File</primary></indexterm>FT_Attach_File <LINK LINKEND="REFSTD.libfreetype.1">[freetype]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>FT_Attach_Stream</primary></indexterm>FT_Attach_Stream <LINK LINKEND="REFSTD.libfreetype.1">[freetype]</LINK></ENTRY>
<ENTRY><indexterm><primary>FT_Bitmap_Convert</primary></indexterm>FT_Bitmap_Convert <LINK LINKEND="REFSTD.libfreetype.1">[freetype]</LINK></ENTRY>
<ENTRY><indexterm><primary>FT_Bitmap_Done</primary></indexterm>FT_Bitmap_Done <LINK LINKEND="REFSTD.libfreetype.1">[freetype]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>FT_Bitmap_New</primary></indexterm>FT_Bitmap_New <LINK LINKEND="REFSTD.libfreetype.1">[freetype]</LINK></ENTRY>
<ENTRY><indexterm><primary>FT_CeilFix</primary></indexterm>FT_CeilFix <LINK LINKEND="REFSTD.libfreetype.1">[freetype]</LINK></ENTRY>
<ENTRY><indexterm><primary>FT_Cos</primary></indexterm>FT_Cos <LINK LINKEND="REFSTD.libfreetype.1">[freetype]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>FT_DivFix</primary></indexterm>FT_DivFix <LINK LINKEND="REFSTD.libfreetype.1">[freetype]</LINK></ENTRY>
<ENTRY><indexterm><primary>FT_Done_Face</primary></indexterm>FT_Done_Face <LINK LINKEND="REFSTD.libfreetype.1">[freetype]</LINK></ENTRY>
<ENTRY><indexterm><primary>FT_Done_FreeType</primary></indexterm>FT_Done_FreeType <LINK LINKEND="REFSTD.libfreetype.1">[freetype]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>FT_Done_Glyph</primary></indexterm>FT_Done_Glyph <LINK LINKEND="REFSTD.libfreetype.1">[freetype]</LINK></ENTRY>
<ENTRY><indexterm><primary>FT_Done_Library</primary></indexterm>FT_Done_Library <LINK LINKEND="REFSTD.libfreetype.1">[freetype]</LINK></ENTRY>
<ENTRY><indexterm><primary>FT_Done_Size</primary></indexterm>FT_Done_Size <LINK LINKEND="REFSTD.libfreetype.1">[freetype]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>FT_FloorFix</primary></indexterm>FT_FloorFix <LINK LINKEND="REFSTD.libfreetype.1">[freetype]</LINK></ENTRY>
<ENTRY><indexterm><primary>FT_Get_BDF_Charset_ID</primary></indexterm>FT_Get_BDF_Charset_ID <LINK LINKEND="REFSTD.libfreetype.1">[freetype]</LINK></ENTRY>
<ENTRY><indexterm><primary>FT_Get_BDF_Property</primary></indexterm>FT_Get_BDF_Property <LINK LINKEND="REFSTD.libfreetype.1">[freetype]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>FT_Get_CMap_Language_ID</primary></indexterm>FT_Get_CMap_Language_ID <LINK LINKEND="REFSTD.libfreetype.1">[freetype]</LINK></ENTRY>
<ENTRY><indexterm><primary>FT_Get_Char_Index</primary></indexterm>FT_Get_Char_Index <LINK LINKEND="REFSTD.libfreetype.1">[freetype]</LINK></ENTRY>
<ENTRY><indexterm><primary>FT_Get_Charmap_Index</primary></indexterm>FT_Get_Charmap_Index <LINK LINKEND="REFSTD.libfreetype.1">[freetype]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>FT_Get_First_Char</primary></indexterm>FT_Get_First_Char <LINK LINKEND="REFSTD.libfreetype.1">[freetype]</LINK></ENTRY>
<ENTRY><indexterm><primary>FT_Get_Glyph</primary></indexterm>FT_Get_Glyph <LINK LINKEND="REFSTD.libfreetype.1">[freetype]</LINK></ENTRY>
<ENTRY><indexterm><primary>FT_Get_Glyph_Name</primary></indexterm>FT_Get_Glyph_Name <LINK LINKEND="REFSTD.libfreetype.1">[freetype]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>FT_Get_Kerning</primary></indexterm>FT_Get_Kerning <LINK LINKEND="REFSTD.libfreetype.1">[freetype]</LINK></ENTRY>
<ENTRY><indexterm><primary>FT_Get_MM_Var</primary></indexterm>FT_Get_MM_Var <LINK LINKEND="REFSTD.libfreetype.1">[freetype]</LINK></ENTRY>
<ENTRY><indexterm><primary>FT_Get_Module</primary></indexterm>FT_Get_Module <LINK LINKEND="REFSTD.libfreetype.1">[freetype]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>FT_Get_Multi_Master</primary></indexterm>FT_Get_Multi_Master <LINK LINKEND="REFSTD.libfreetype.1">[freetype]</LINK></ENTRY>
<ENTRY><indexterm><primary>FT_Get_Name_Index</primary></indexterm>FT_Get_Name_Index <LINK LINKEND="REFSTD.libfreetype.1">[freetype]</LINK></ENTRY>
<ENTRY><indexterm><primary>FT_Get_Next_Char</primary></indexterm>FT_Get_Next_Char <LINK LINKEND="REFSTD.libfreetype.1">[freetype]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>FT_Get_PFR_Advance</primary></indexterm>FT_Get_PFR_Advance <LINK LINKEND="REFSTD.libfreetype.1">[freetype]</LINK></ENTRY>
<ENTRY><indexterm><primary>FT_Get_PFR_Kerning</primary></indexterm>FT_Get_PFR_Kerning <LINK LINKEND="REFSTD.libfreetype.1">[freetype]</LINK></ENTRY>
<ENTRY><indexterm><primary>FT_Get_PFR_Metrics</primary></indexterm>FT_Get_PFR_Metrics <LINK LINKEND="REFSTD.libfreetype.1">[freetype]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>FT_Get_PS_Font_Info</primary></indexterm>FT_Get_PS_Font_Info <LINK LINKEND="REFSTD.libfreetype.1">[freetype]</LINK></ENTRY>
<ENTRY><indexterm><primary>FT_Get_PS_Font_Private</primary></indexterm>FT_Get_PS_Font_Private <LINK LINKEND="REFSTD.libfreetype.1">[freetype]</LINK></ENTRY>
<ENTRY><indexterm><primary>FT_Get_Postscript_Name</primary></indexterm>FT_Get_Postscript_Name <LINK LINKEND="REFSTD.libfreetype.1">[freetype]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>FT_Get_Renderer</primary></indexterm>FT_Get_Renderer <LINK LINKEND="REFSTD.libfreetype.1">[freetype]</LINK></ENTRY>
<ENTRY><indexterm><primary>FT_Get_Sfnt_Name</primary></indexterm>FT_Get_Sfnt_Name <LINK LINKEND="REFSTD.libfreetype.1">[freetype]</LINK></ENTRY>
<ENTRY><indexterm><primary>FT_Get_Sfnt_Name_Count</primary></indexterm>FT_Get_Sfnt_Name_Count <LINK LINKEND="REFSTD.libfreetype.1">[freetype]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>FT_Get_Sfnt_Table</primary></indexterm>FT_Get_Sfnt_Table <LINK LINKEND="REFSTD.libfreetype.1">[freetype]</LINK></ENTRY>
<ENTRY><indexterm><primary>FT_Get_X11_Font_Format</primary></indexterm>FT_Get_X11_Font_Format <LINK LINKEND="REFSTD.libfreetype.1">[freetype]</LINK></ENTRY>
<ENTRY><indexterm><primary>FT_GlyphSlot_Embolden</primary></indexterm>FT_GlyphSlot_Embolden <LINK LINKEND="REFSTD.libfreetype.1">[freetype]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>FT_GlyphSlot_Oblique</primary></indexterm>FT_GlyphSlot_Oblique <LINK LINKEND="REFSTD.libfreetype.1">[freetype]</LINK></ENTRY>
<ENTRY><indexterm><primary>FT_Glyph_Copy</primary></indexterm>FT_Glyph_Copy <LINK LINKEND="REFSTD.libfreetype.1">[freetype]</LINK></ENTRY>
<ENTRY><indexterm><primary>FT_Glyph_Get_CBox</primary></indexterm>FT_Glyph_Get_CBox <LINK LINKEND="REFSTD.libfreetype.1">[freetype]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>FT_Glyph_Stroke</primary></indexterm>FT_Glyph_Stroke <LINK LINKEND="REFSTD.libfreetype.1">[freetype]</LINK></ENTRY>
<ENTRY><indexterm><primary>FT_Glyph_StrokeBorder</primary></indexterm>FT_Glyph_StrokeBorder <LINK LINKEND="REFSTD.libfreetype.1">[freetype]</LINK></ENTRY>
<ENTRY><indexterm><primary>FT_Glyph_To_Bitmap</primary></indexterm>FT_Glyph_To_Bitmap <LINK LINKEND="REFSTD.libfreetype.1">[freetype]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>FT_Glyph_Transform</primary></indexterm>FT_Glyph_Transform <LINK LINKEND="REFSTD.libfreetype.1">[freetype]</LINK></ENTRY>
<ENTRY><indexterm><primary>FT_Has_PS_Glyph_Names</primary></indexterm>FT_Has_PS_Glyph_Names <LINK LINKEND="REFSTD.libfreetype.1">[freetype]</LINK></ENTRY>
<ENTRY><indexterm><primary>FT_Init_FreeType</primary></indexterm>FT_Init_FreeType <LINK LINKEND="REFSTD.libfreetype.1">[freetype]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>FT_Library_Version</primary></indexterm>FT_Library_Version <LINK LINKEND="REFSTD.libfreetype.1">[freetype]</LINK></ENTRY>
<ENTRY><indexterm><primary>FT_List_Add</primary></indexterm>FT_List_Add <LINK LINKEND="REFSTD.libfreetype.1">[freetype]</LINK></ENTRY>
<ENTRY><indexterm><primary>FT_List_Finalize</primary></indexterm>FT_List_Finalize <LINK LINKEND="REFSTD.libfreetype.1">[freetype]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>FT_List_Find</primary></indexterm>FT_List_Find <LINK LINKEND="REFSTD.libfreetype.1">[freetype]</LINK></ENTRY>
<ENTRY><indexterm><primary>FT_List_Insert</primary></indexterm>FT_List_Insert <LINK LINKEND="REFSTD.libfreetype.1">[freetype]</LINK></ENTRY>
<ENTRY><indexterm><primary>FT_List_Iterate</primary></indexterm>FT_List_Iterate <LINK LINKEND="REFSTD.libfreetype.1">[freetype]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>FT_List_Remove</primary></indexterm>FT_List_Remove <LINK LINKEND="REFSTD.libfreetype.1">[freetype]</LINK></ENTRY>
<ENTRY><indexterm><primary>FT_List_Up</primary></indexterm>FT_List_Up <LINK LINKEND="REFSTD.libfreetype.1">[freetype]</LINK></ENTRY>
<ENTRY><indexterm><primary>FT_Load_Char</primary></indexterm>FT_Load_Char <LINK LINKEND="REFSTD.libfreetype.1">[freetype]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>FT_Load_Glyph</primary></indexterm>FT_Load_Glyph <LINK LINKEND="REFSTD.libfreetype.1">[freetype]</LINK></ENTRY>
<ENTRY><indexterm><primary>FT_Load_Sfnt_Table</primary></indexterm>FT_Load_Sfnt_Table <LINK LINKEND="REFSTD.libfreetype.1">[freetype]</LINK></ENTRY>
<ENTRY><indexterm><primary>FT_Matrix_Invert</primary></indexterm>FT_Matrix_Invert <LINK LINKEND="REFSTD.libfreetype.1">[freetype]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>FT_Matrix_Multiply</primary></indexterm>FT_Matrix_Multiply <LINK LINKEND="REFSTD.libfreetype.1">[freetype]</LINK></ENTRY>
<ENTRY><indexterm><primary>FT_MulDiv</primary></indexterm>FT_MulDiv <LINK LINKEND="REFSTD.libfreetype.1">[freetype]</LINK></ENTRY>
<ENTRY><indexterm><primary>FT_MulFix</primary></indexterm>FT_MulFix <LINK LINKEND="REFSTD.libfreetype.1">[freetype]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>FT_New_Face</primary></indexterm>FT_New_Face <LINK LINKEND="REFSTD.libfreetype.1">[freetype]</LINK></ENTRY>
<ENTRY><indexterm><primary>FT_New_Library</primary></indexterm>FT_New_Library <LINK LINKEND="REFSTD.libfreetype.1">[freetype]</LINK></ENTRY>
<ENTRY><indexterm><primary>FT_New_Memory_Face</primary></indexterm>FT_New_Memory_Face <LINK LINKEND="REFSTD.libfreetype.1">[freetype]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>FT_New_Size</primary></indexterm>FT_New_Size <LINK LINKEND="REFSTD.libfreetype.1">[freetype]</LINK></ENTRY>
<ENTRY><indexterm><primary>FT_OpenType_Validate</primary></indexterm>FT_OpenType_Validate <LINK LINKEND="REFSTD.libfreetype.1">[freetype]</LINK></ENTRY>
<ENTRY><indexterm><primary>FT_Open_Face</primary></indexterm>FT_Open_Face <LINK LINKEND="REFSTD.libfreetype.1">[freetype]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>FT_Outline_Check</primary></indexterm>FT_Outline_Check <LINK LINKEND="REFSTD.libfreetype.1">[freetype]</LINK></ENTRY>
<ENTRY><indexterm><primary>FT_Outline_Copy</primary></indexterm>FT_Outline_Copy <LINK LINKEND="REFSTD.libfreetype.1">[freetype]</LINK></ENTRY>
<ENTRY><indexterm><primary>FT_Outline_Decompose</primary></indexterm>FT_Outline_Decompose <LINK LINKEND="REFSTD.libfreetype.1">[freetype]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>FT_Outline_Done</primary></indexterm>FT_Outline_Done <LINK LINKEND="REFSTD.libfreetype.1">[freetype]</LINK></ENTRY>
<ENTRY><indexterm><primary>FT_Outline_Done_Internal</primary></indexterm>FT_Outline_Done_Internal <LINK LINKEND="REFSTD.libfreetype.1">[freetype]</LINK></ENTRY>
<ENTRY><indexterm><primary>FT_Outline_GetInsideBorder</primary></indexterm>FT_Outline_GetInsideBorder <LINK LINKEND="REFSTD.libfreetype.1">[freetype]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>FT_Outline_GetOutsideBorder</primary></indexterm>FT_Outline_GetOutsideBorder <LINK LINKEND="REFSTD.libfreetype.1">[freetype]</LINK></ENTRY>
<ENTRY><indexterm><primary>FT_Outline_Get_BBox</primary></indexterm>FT_Outline_Get_BBox <LINK LINKEND="REFSTD.libfreetype.1">[freetype]</LINK></ENTRY>
<ENTRY><indexterm><primary>FT_Outline_Get_Bitmap</primary></indexterm>FT_Outline_Get_Bitmap <LINK LINKEND="REFSTD.libfreetype.1">[freetype]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>FT_Outline_Get_CBox</primary></indexterm>FT_Outline_Get_CBox <LINK LINKEND="REFSTD.libfreetype.1">[freetype]</LINK></ENTRY>
<ENTRY><indexterm><primary>FT_Outline_Get_Orientation</primary></indexterm>FT_Outline_Get_Orientation <LINK LINKEND="REFSTD.libfreetype.1">[freetype]</LINK></ENTRY>
<ENTRY><indexterm><primary>FT_Outline_New</primary></indexterm>FT_Outline_New <LINK LINKEND="REFSTD.libfreetype.1">[freetype]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>FT_Outline_New_Internal</primary></indexterm>FT_Outline_New_Internal <LINK LINKEND="REFSTD.libfreetype.1">[freetype]</LINK></ENTRY>
<ENTRY><indexterm><primary>FT_Outline_Render</primary></indexterm>FT_Outline_Render <LINK LINKEND="REFSTD.libfreetype.1">[freetype]</LINK></ENTRY>
<ENTRY><indexterm><primary>FT_Outline_Reverse</primary></indexterm>FT_Outline_Reverse <LINK LINKEND="REFSTD.libfreetype.1">[freetype]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>FT_Outline_Transform</primary></indexterm>FT_Outline_Transform <LINK LINKEND="REFSTD.libfreetype.1">[freetype]</LINK></ENTRY>
<ENTRY><indexterm><primary>FT_Outline_Translate</primary></indexterm>FT_Outline_Translate <LINK LINKEND="REFSTD.libfreetype.1">[freetype]</LINK></ENTRY>
<ENTRY><indexterm><primary>FT_Remove_Module</primary></indexterm>FT_Remove_Module <LINK LINKEND="REFSTD.libfreetype.1">[freetype]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>FT_Render_Glyph</primary></indexterm>FT_Render_Glyph <LINK LINKEND="REFSTD.libfreetype.1">[freetype]</LINK></ENTRY>
<ENTRY><indexterm><primary>FT_RoundFix</primary></indexterm>FT_RoundFix <LINK LINKEND="REFSTD.libfreetype.1">[freetype]</LINK></ENTRY>
<ENTRY><indexterm><primary>FT_Select_Charmap</primary></indexterm>FT_Select_Charmap <LINK LINKEND="REFSTD.libfreetype.1">[freetype]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>FT_Set_Char_Size</primary></indexterm>FT_Set_Char_Size <LINK LINKEND="REFSTD.libfreetype.1">[freetype]</LINK></ENTRY>
<ENTRY><indexterm><primary>FT_Set_Charmap</primary></indexterm>FT_Set_Charmap <LINK LINKEND="REFSTD.libfreetype.1">[freetype]</LINK></ENTRY>
<ENTRY><indexterm><primary>FT_Set_Debug_Hook</primary></indexterm>FT_Set_Debug_Hook <LINK LINKEND="REFSTD.libfreetype.1">[freetype]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>FT_Set_MM_Blend_Coordinates</primary></indexterm>FT_Set_MM_Blend_Coordinates <LINK LINKEND="REFSTD.libfreetype.1">[freetype]</LINK></ENTRY>
<ENTRY><indexterm><primary>FT_Set_MM_Design_Coordinates</primary></indexterm>FT_Set_MM_Design_Coordinates <LINK LINKEND="REFSTD.libfreetype.1">[freetype]</LINK></ENTRY>
<ENTRY><indexterm><primary>FT_Set_Pixel_Sizes</primary></indexterm>FT_Set_Pixel_Sizes <LINK LINKEND="REFSTD.libfreetype.1">[freetype]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>FT_Set_Renderer</primary></indexterm>FT_Set_Renderer <LINK LINKEND="REFSTD.libfreetype.1">[freetype]</LINK></ENTRY>
<ENTRY><indexterm><primary>FT_Set_Transform</primary></indexterm>FT_Set_Transform <LINK LINKEND="REFSTD.libfreetype.1">[freetype]</LINK></ENTRY>
<ENTRY><indexterm><primary>FT_Set_Var_Blend_Coordinates</primary></indexterm>FT_Set_Var_Blend_Coordinates <LINK LINKEND="REFSTD.libfreetype.1">[freetype]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>FT_Set_Var_Design_Coordinates</primary></indexterm>FT_Set_Var_Design_Coordinates <LINK LINKEND="REFSTD.libfreetype.1">[freetype]</LINK></ENTRY>
<ENTRY><indexterm><primary>FT_Sfnt_Table_Info</primary></indexterm>FT_Sfnt_Table_Info <LINK LINKEND="REFSTD.libfreetype.1">[freetype]</LINK></ENTRY>
<ENTRY><indexterm><primary>FT_Sin</primary></indexterm>FT_Sin <LINK LINKEND="REFSTD.libfreetype.1">[freetype]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>FT_Stroker_BeginSubPath</primary></indexterm>FT_Stroker_BeginSubPath <LINK LINKEND="REFSTD.libfreetype.1">[freetype]</LINK></ENTRY>
<ENTRY><indexterm><primary>FT_Stroker_ConicTo</primary></indexterm>FT_Stroker_ConicTo <LINK LINKEND="REFSTD.libfreetype.1">[freetype]</LINK></ENTRY>
<ENTRY><indexterm><primary>FT_Stroker_CubicTo</primary></indexterm>FT_Stroker_CubicTo <LINK LINKEND="REFSTD.libfreetype.1">[freetype]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>FT_Stroker_Done</primary></indexterm>FT_Stroker_Done <LINK LINKEND="REFSTD.libfreetype.1">[freetype]</LINK></ENTRY>
<ENTRY><indexterm><primary>FT_Stroker_EndSubPath</primary></indexterm>FT_Stroker_EndSubPath <LINK LINKEND="REFSTD.libfreetype.1">[freetype]</LINK></ENTRY>
<ENTRY><indexterm><primary>FT_Stroker_Export</primary></indexterm>FT_Stroker_Export <LINK LINKEND="REFSTD.libfreetype.1">[freetype]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>FT_Stroker_ExportBorder</primary></indexterm>FT_Stroker_ExportBorder <LINK LINKEND="REFSTD.libfreetype.1">[freetype]</LINK></ENTRY>
<ENTRY><indexterm><primary>FT_Stroker_GetBorderCounts</primary></indexterm>FT_Stroker_GetBorderCounts <LINK LINKEND="REFSTD.libfreetype.1">[freetype]</LINK></ENTRY>
<ENTRY><indexterm><primary>FT_Stroker_GetCounts</primary></indexterm>FT_Stroker_GetCounts <LINK LINKEND="REFSTD.libfreetype.1">[freetype]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>FT_Stroker_LineTo</primary></indexterm>FT_Stroker_LineTo <LINK LINKEND="REFSTD.libfreetype.1">[freetype]</LINK></ENTRY>
<ENTRY><indexterm><primary>FT_Stroker_New</primary></indexterm>FT_Stroker_New <LINK LINKEND="REFSTD.libfreetype.1">[freetype]</LINK></ENTRY>
<ENTRY><indexterm><primary>FT_Stroker_ParseOutline</primary></indexterm>FT_Stroker_ParseOutline <LINK LINKEND="REFSTD.libfreetype.1">[freetype]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>FT_Stroker_Rewind</primary></indexterm>FT_Stroker_Rewind <LINK LINKEND="REFSTD.libfreetype.1">[freetype]</LINK></ENTRY>
<ENTRY><indexterm><primary>FT_Stroker_Set</primary></indexterm>FT_Stroker_Set <LINK LINKEND="REFSTD.libfreetype.1">[freetype]</LINK></ENTRY>
<ENTRY><indexterm><primary>FT_Tan</primary></indexterm>FT_Tan <LINK LINKEND="REFSTD.libfreetype.1">[freetype]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>FT_Vector_From_Polar</primary></indexterm>FT_Vector_From_Polar <LINK LINKEND="REFSTD.libfreetype.1">[freetype]</LINK></ENTRY>
<ENTRY><indexterm><primary>FT_Vector_Length</primary></indexterm>FT_Vector_Length <LINK LINKEND="REFSTD.libfreetype.1">[freetype]</LINK></ENTRY>
<ENTRY><indexterm><primary>FT_Vector_Polarize</primary></indexterm>FT_Vector_Polarize <LINK LINKEND="REFSTD.libfreetype.1">[freetype]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>FT_Vector_Rotate</primary></indexterm>FT_Vector_Rotate <LINK LINKEND="REFSTD.libfreetype.1">[freetype]</LINK></ENTRY>
<ENTRY><indexterm><primary>FT_Vector_Transform</primary></indexterm>FT_Vector_Transform <LINK LINKEND="REFSTD.libfreetype.1">[freetype]</LINK></ENTRY>
<ENTRY><indexterm><primary>FT_Vector_Unit</primary></indexterm>FT_Vector_Unit <LINK LINKEND="REFSTD.libfreetype.1">[freetype]</LINK></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>
</SECT2>
</SECT1>
<SECT1 ID=libfreetype-ddefs>
<TITLE>Data Definitions for libfreetype</TITLE>
<PARA>
This section defines global identifiers and their values that are associated
with interfaces contained in libfreetype.
These definitions are organized into groups that
correspond to system headers. This convention is used as a
convenience for the reader, and does not imply the existence
of these headers, or their content.
Where an interface is defined as requiring a particular system header file
all of the data definitions for that system header file presented here shall be in effect.
</PARA>
<PARA>
This section gives data definitions to promote binary application
portability, not to repeat source interface definitions available
elsewhere. System providers and application developers should use this ABI
to supplement - not to replace - source interface definition specifications.
</PARA>
<PARA>
This specification uses the <XREF LINKEND='std.ISOC99'> C Language as the reference programming language, and data definitions are specified in ISO C format. The C language is used here as a convenient notation. Using a C language description of these data objects does not preclude their use by other programming languages.</PARA>
<SECT2>
<TITLE>freetype/config/ftheader.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define FT_BEGIN_HEADER
#define FT_END_HEADER
#define FT_CACHE_CHARMAP_H	FT_CACHE_H
#define FT_CACHE_IMAGE_H	FT_CACHE_H
#define FT_CACHE_SMALL_BITMAPS_H	FT_CACHE_H
</SCREEN>
</SECT2>
<!-- empty header file All/freetype/config/ftmodule.h -->
<SECT2>
<TITLE>freetype/config/ftoption.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define FT_CONFIG_OPTION_ADOBE_GLYPH_LIST
#define FT_CONFIG_OPTION_GUESSING_EMBEDDED_RFORK
#define FT_CONFIG_OPTION_MAC_FONTS
#define FT_CONFIG_OPTION_POSTSCRIPT_NAMES
#define FT_CONFIG_OPTION_USE_LZW
#define FT_CONFIG_OPTION_USE_ZLIB
#define TT_CONFIG_CMAP_FORMAT_0
#define TT_CONFIG_CMAP_FORMAT_10
#define TT_CONFIG_CMAP_FORMAT_12
#define TT_CONFIG_CMAP_FORMAT_2
#define TT_CONFIG_CMAP_FORMAT_4
#define TT_CONFIG_CMAP_FORMAT_6
#define TT_CONFIG_CMAP_FORMAT_8
#define TT_CONFIG_OPTION_EMBEDDED_BITMAPS
#define TT_CONFIG_OPTION_GX_VAR_SUPPORT
#define TT_CONFIG_OPTION_INTERPRETER_SWITCH
#define TT_CONFIG_OPTION_POSTSCRIPT_NAMES
#define TT_CONFIG_OPTION_SFNT_NAMES
#define TT_CONFIG_OPTION_UNPATENTED_HINTING
#define T1_MAX_SUBRS_CALLS	16
#define FT_RENDER_POOL_SIZE	16384L
#define T1_MAX_CHARSTRINGS_OPERANDS	256
#define FT_MAX_MODULES	32
#define T1_MAX_DICT_DEPTH	5
</SCREEN>
</SECT2>
<SECT2>
<TITLE>freetype/config/ftstdlib.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define ft_atol	atol
#define ft_exit	exit
#define FT_INT_MAX	INT_MAX
#define ft_isalnum	isalnum
#define ft_isdigit	isdigit
#define ft_islower	islower
#define ft_isupper	isupper
#define ft_isxdigit	isxdigit
#define ft_jmp_buf	jmp_buf
#define ft_longjmp	longjmp
#define ft_memcmp	memcmp
#define ft_memcpy	memcpy
#define ft_memmove	memmove
#define ft_memset	memset
#define ft_ptrdiff_t	ptrdiff_t
#define ft_qsort	qsort
#define ft_setjmp	setjmp
#define ft_sprintf	sprintf
#define ft_strcat	strcat
#define ft_strcmp	strcmp
#define ft_strcpy	strcpy
#define ft_strlen	strlen
#define ft_strncmp	strncmp
#define ft_strncpy	strncpy
#define ft_strrchr	strrchr
#define FT_UINT_MAX	UINT_MAX
#define FT_ULONG_MAX	ULONG_MAX
</SCREEN>
</SECT2>
<SECT2>
<TITLE>freetype/freetype.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define FT_HAS_FAST_GLYPHS(face)	 \
	( face->face_flags &amp; FT_FACE_FLAG_FAST_GLYPHS )
#define FT_HAS_FIXED_SIZES(face)	 \
	( face->face_flags &amp; FT_FACE_FLAG_FIXED_SIZES )
#define FT_IS_FIXED_WIDTH(face)	 \
	( face->face_flags &amp; FT_FACE_FLAG_FIXED_WIDTH )
#define FT_HAS_GLYPH_NAMES(face)	 \
	( face->face_flags &amp; FT_FACE_FLAG_GLYPH_NAMES )
#define FT_HAS_HORIZONTAL(face)	 \
	( face->face_flags &amp; FT_FACE_FLAG_HORIZONTAL )
#define FT_HAS_MULTIPLE_MASTERS(face)	 \
	( face->face_flags &amp; FT_FACE_FLAG_MULTIPLE_MASTERS )
#define FT_ENC_TAG(value,a,b,c,d)	 \
	value = ( ( (FT_UInt32)(a) &lt;&lt; 24 ) | ( (FT_UInt32)(b) &lt;&lt; 16 ) | ( \
	(FT_UInt32)(c) &lt;&lt; 8 ) | (FT_UInt32)(d) )
#define FT_LOAD_TARGET_(x)	( (FT_Int32)( (x) &amp; 15 ) &lt;&lt; 16 )
#define FT_LOAD_TARGET_MODE(x)	( (FT_Render_Mode)( ( (x) >16 ) &amp; 15 ) )
#define FT_STYLE_FLAG_ITALIC	( 1 &lt;&lt; 0 )
#define FT_STYLE_FLAG_BOLD	( 1 &lt;&lt; 1 )
#define FT_FACE_FLAG_SCALABLE	( 1L &lt;&lt; 0 )
#define FT_FACE_FLAG_FIXED_SIZES	( 1L &lt;&lt; 1 )
#define FT_FACE_FLAG_EXTERNAL_STREAM	( 1L &lt;&lt; 10 )
#define FT_FACE_FLAG_FIXED_WIDTH	( 1L &lt;&lt; 2 )
#define FT_FACE_FLAG_SFNT	( 1L &lt;&lt; 3 )
#define FT_FACE_FLAG_HORIZONTAL	( 1L &lt;&lt; 4 )
#define FT_FACE_FLAG_VERTICAL	( 1L &lt;&lt; 5 )
#define FT_FACE_FLAG_KERNING	( 1L &lt;&lt; 6 )
#define FT_FACE_FLAG_FAST_GLYPHS	( 1L &lt;&lt; 7 )
#define FT_FACE_FLAG_MULTIPLE_MASTERS	( 1L &lt;&lt; 8 )
#define FT_FACE_FLAG_GLYPH_NAMES	( 1L &lt;&lt; 9 )
#define FT_HAS_KERNING(face)	( face->face_flags &amp; FT_FACE_FLAG_KERNING )
#define FT_IS_SCALABLE(face)	( face->face_flags &amp; FT_FACE_FLAG_SCALABLE )
#define FT_IS_SFNT(face)	( face->face_flags &amp; FT_FACE_FLAG_SFNT )
#define FT_HAS_VERTICAL(face)	( face->face_flags &amp; FT_FACE_FLAG_VERTICAL )
#define FT_LOAD_DEFAULT	0x0
#define FT_LOAD_NO_SCALE	0x1
#define FT_OPEN_MEMORY	0x1
#define FT_LOAD_VERTICAL_LAYOUT	0x10
#define FT_OPEN_PARAMS	0x10
#define FT_LOAD_MONOCHROME	0x1000
#define FT_LOAD_NO_HINTING	0x2
#define FT_OPEN_STREAM	0x2
#define FT_LOAD_FORCE_AUTOHINT	0x20
#define FT_LOAD_IGNORE_GLOBAL_ADVANCE_WIDTH	0x200
#define FT_LOAD_LINEAR_DESIGN	0x2000
#define FT_LOAD_RENDER	0x4
#define FT_OPEN_PATHNAME	0x4
#define FT_LOAD_CROP_BITMAP	0x40
#define FT_LOAD_NO_RECURSE	0x400
#define FT_LOAD_SBITS_ONLY	0x4000
#define FT_LOAD_NO_BITMAP	0x8
#define FT_OPEN_DRIVER	0x8
#define FT_LOAD_PEDANTIC	0x80
#define FT_LOAD_IGNORE_TRANSFORM	0x800
#define FT_LOAD_NO_AUTOHINT	0x8000U
#define FREETYPE_MINOR	1
#define FREETYPE_PATCH	10
#define FREETYPE_MAJOR	2
#define ft_encoding_adobe_custom	FT_ENCODING_ADOBE_CUSTOM
#define ft_encoding_adobe_expert	FT_ENCODING_ADOBE_EXPERT
#define ft_encoding_latin_1	FT_ENCODING_ADOBE_LATIN_1
#define ft_encoding_adobe_standard	FT_ENCODING_ADOBE_STANDARD
#define ft_encoding_apple_roman	FT_ENCODING_APPLE_ROMAN
#define ft_encoding_big5	FT_ENCODING_BIG5
#define ft_encoding_gb2312	FT_ENCODING_GB2312
#define ft_encoding_johab	FT_ENCODING_JOHAB
#define ft_encoding_symbol	FT_ENCODING_MS_SYMBOL
#define ft_encoding_none	FT_ENCODING_NONE
#define ft_encoding_latin_2	FT_ENCODING_OLD_LATIN_2
#define ft_encoding_sjis	FT_ENCODING_SJIS
#define ft_encoding_unicode	FT_ENCODING_UNICODE
#define ft_encoding_wansung	FT_ENCODING_WANSUNG
#define ft_kerning_default	FT_KERNING_DEFAULT
#define ft_kerning_unfitted	FT_KERNING_UNFITTED
#define ft_kerning_unscaled	FT_KERNING_UNSCALED
#define FT_LOAD_TARGET_LCD	FT_LOAD_TARGET_( FT_RENDER_MODE_LCD )
#define FT_LOAD_TARGET_LCD_V	FT_LOAD_TARGET_( FT_RENDER_MODE_LCD_V )
#define FT_LOAD_TARGET_LIGHT	FT_LOAD_TARGET_( FT_RENDER_MODE_LIGHT )
#define FT_LOAD_TARGET_MONO	FT_LOAD_TARGET_( FT_RENDER_MODE_MONO )
#define FT_LOAD_TARGET_NORMAL	FT_LOAD_TARGET_( FT_RENDER_MODE_NORMAL )
#define ft_open_driver	FT_OPEN_DRIVER
#define ft_open_memory	FT_OPEN_MEMORY
#define ft_open_params	FT_OPEN_PARAMS
#define ft_open_pathname	FT_OPEN_PATHNAME
#define ft_open_stream	FT_OPEN_STREAM
#define ft_render_mode_mono	FT_RENDER_MODE_MONO
#define ft_render_mode_normal	FT_RENDER_MODE_NORMAL

typedef void *FT_Pointer;
typedef enum FT_Encoding_ {
    FT_ENCODING_NONE = 0,
    FT_ENCODING_MS_SYMBOL = 1937337698,
    FT_ENCODING_UNICODE = 1970170211,
    FT_ENCODING_SJIS = 1936353651,
    FT_ENCODING_GB2312 = 1734484000,
    FT_ENCODING_BIG5 = 1651074869,
    FT_ENCODING_WANSUNG = 2002873971,
    FT_ENCODING_JOHAB = 1785686113,
    FT_ENCODING_MS_SJIS = 1936353651,
    FT_ENCODING_MS_GB2312 = 1734484000,
    FT_ENCODING_MS_BIG5 = 1651074869,
    FT_ENCODING_MS_WANSUNG = 2002873971,
    FT_ENCODING_MS_JOHAB = 1785686113,
    FT_ENCODING_ADOBE_STANDARD = 1094995778,
    FT_ENCODING_ADOBE_EXPERT = 1094992453,
    FT_ENCODING_ADOBE_CUSTOM = 1094992451,
    FT_ENCODING_ADOBE_LATIN_1 = 1818326065,
    FT_ENCODING_OLD_LATIN_2 = 1818326066,
    FT_ENCODING_APPLE_ROMAN = 1634889070
} FT_Encoding;
typedef long int FT_F26Dot6;
struct FT_StreamRec_ {
    unsigned char *base;
    long unsigned int size;
    long unsigned int pos;
    FT_StreamDesc descriptor;
    FT_StreamDesc pathname;
    FT_Stream_IoFunc read;
    FT_Stream_CloseFunc close;
    FT_Memory memory;
    unsigned char *cursor;
    unsigned char *limit;
};
typedef union FT_StreamDesc_ {
    long int value;
    void *pointer;
} FT_StreamDesc;
typedef long unsigned int (*FT_Stream_IoFunc) (FT_Stream,
					       long unsigned int,
					       unsigned char *,
					       long unsigned int);
typedef void (*FT_Stream_CloseFunc) (FT_Stream);
typedef struct FT_Open_Args_ {
    FT_UInt flags;
    const FT_Byte *memory_base;
    FT_Long memory_size;
    FT_String *pathname;
    FT_Stream stream;
    FT_Module driver;
    FT_Int num_params;
    FT_Parameter *params;
} FT_Open_Args;
extern FT_Int FT_Get_Charmap_Index(FT_CharMap);
extern FT_Fixed FT_RoundFix(FT_Fixed);
extern FT_Fixed FT_CeilFix(FT_Fixed);
extern FT_Error FT_Done_FreeType(FT_Library);
extern FT_Error FT_Init_FreeType(FT_Library *);
extern FT_ULong FT_Get_First_Char(FT_Face, FT_UInt *);
extern FT_Error FT_Load_Char(FT_Face, FT_ULong, FT_Int32);
extern void FT_Set_Transform(FT_Face, FT_Matrix *, FT_Vector *);
extern void FT_Vector_Transform(FT_Vector *, const FT_Matrix *);
extern FT_Error FT_Set_Charmap(FT_Face, FT_CharMap);
extern FT_Error FT_Load_Glyph(FT_Face, FT_UInt, FT_Int32);
extern FT_Error FT_New_Face(FT_Library, const char *, FT_Long, FT_Face *);
extern FT_Error FT_Set_Pixel_Sizes(FT_Face, FT_UInt, FT_UInt);
extern FT_ULong FT_Get_Next_Char(FT_Face, FT_ULong, FT_UInt *);
extern FT_Fixed FT_FloorFix(FT_Fixed);
extern const char *FT_Get_Postscript_Name(FT_Face);
extern FT_Error FT_New_Memory_Face(FT_Library, const FT_Byte *, FT_Long,
				   FT_Long, FT_Face *);
extern FT_Error FT_Set_Char_Size(FT_Face, FT_F26Dot6, FT_F26Dot6, FT_UInt,
				 FT_UInt);
extern FT_Error FT_Get_Glyph_Name(FT_Face, FT_UInt, FT_Pointer, FT_UInt);
extern FT_Long FT_MulDiv(FT_Long, FT_Long, FT_Long);
extern FT_Long FT_DivFix(FT_Long, FT_Long);
extern void FT_Library_Version(FT_Library, FT_Int *, FT_Int *, FT_Int *);
extern FT_Error FT_Attach_File(FT_Face, const char *);
extern FT_Error FT_Done_Face(FT_Face);
extern FT_Long FT_MulFix(FT_Long, FT_Long);
extern FT_Error FT_Select_Charmap(FT_Face, FT_Encoding);
extern FT_Error FT_Render_Glyph(FT_GlyphSlot, FT_Render_Mode);
extern FT_Error FT_Attach_Stream(FT_Face, FT_Open_Args *);
extern FT_UInt FT_Get_Name_Index(FT_Face, FT_String *);
extern FT_Error FT_Open_Face(FT_Library, const FT_Open_Args *, FT_Long,
			     FT_Face *);
extern FT_UInt FT_Get_Char_Index(FT_Face, FT_ULong);
extern FT_Error FT_Get_Kerning(FT_Face, FT_UInt, FT_UInt, FT_UInt,
			       FT_Vector *);
</SCREEN>
</SECT2>
<!-- empty header file All/freetype/ftbbox.h -->
<SECT2>
<TITLE>freetype/ftbdf.h</TITLE>
<PARA>
</PARA>
<SCREEN>

typedef int FT_Int32;
typedef enum BDF_PropertyType_ {
    BDF_PROPERTY_TYPE_NONE = 0,
    BDF_PROPERTY_TYPE_ATOM = 1,
    BDF_PROPERTY_TYPE_INTEGER = 2,
    BDF_PROPERTY_TYPE_CARDINAL = 3
} BDF_PropertyType;
typedef unsigned int FT_UInt32;
typedef struct BDF_PropertyRec_ {
    BDF_PropertyType type;
    union {
	const char *atom;
	FT_Int32 integer;
	FT_UInt32 cardinal;
    } u;
} BDF_PropertyRec;
</SCREEN>
</SECT2>
<!-- empty header file All/freetype/ftbitmap.h -->
<SECT2>
<TITLE>freetype/fterrdef.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define FT_ERRORDEF_( Bad_Argument, 0x84, "bad argument" )
#define FT_ERRORDEF_( CMap_Table_Missing, 0x92, "character map (cmap) table missing" )
#define FT_ERRORDEF_( Cannot_Open_Resource, 0x01, "cannot open resource" )
#define FT_ERRORDEF_( Cannot_Open_Stream, 0x51, "cannot open stream" )
#define FT_ERRORDEF_( Cannot_Render_Glyph, 0x13, "cannot render this glyph format" )
#define FT_ERRORDEF_( Code_Overflow, 0x83, "code overflow" )
#define FT_ERRORDEF_( Could_Not_Find_Context, 0x99, "could not find context" )
#define FT_ERRORDEF_( Debug_OpCode, 0x87, "found debug opcode" )
#define FT_ERRORDEF_( Divide_By_Zero, 0x85, "division by zero" )
#define FT_ERRORDEF_( ENDF_In_Exec_Stream, 0x88, "found ENDF opcode in execution stream" )
#define FT_ERRORDEF_( Execution_Too_Long, 0x8B, "execution context too long" )
#define FT_ERRORDEF_( Hmtx_Table_Missing, 0x93, "horizontal metrics (hmtx) table missing" )
#define FT_ERRORDEF_( Horiz_Header_Missing, 0x8F, "horizontal header (hhea) table missing" )
#define FT_ERRORDEF_( Ignore, 0xA2, "ignore" )
#define FT_ERRORDEF_( Invalid_Argument, 0x06, "invalid argument" )
#define FT_ERRORDEF_( Invalid_Cache_Handle, 0x27, "invalid cache manager handle" )
#define FT_ERRORDEF_( Invalid_CharMap_Format, 0x96, "invalid character map (cmap) format" )
#define FT_ERRORDEF_( Invalid_CharMap_Handle, 0x26, "invalid charmap handle" )
#define FT_ERRORDEF_( Invalid_Character_Code, 0x11, "invalid character code" )
#define FT_ERRORDEF_( Invalid_CodeRange, 0x8A, "invalid code range" )
#define FT_ERRORDEF_( Invalid_Composite, 0x15, "invalid composite glyph" )
#define FT_ERRORDEF_( Invalid_Driver_Handle, 0x22, "invalid module handle" )
#define FT_ERRORDEF_( Invalid_Face_Handle, 0x23, "invalid face handle" )
#define FT_ERRORDEF_( Invalid_File_Format, 0x03, "broken file" )
#define FT_ERRORDEF_( Invalid_Frame_Operation, 0x56, "invalid frame operation" )
#define FT_ERRORDEF_( Invalid_Frame_Read, 0x58, "invalid frame read" )
#define FT_ERRORDEF_( Invalid_Glyph_Format, 0x12, "unsupported glyph image format" )
#define FT_ERRORDEF_( Invalid_Glyph_Index, 0x10, "invalid glyph index" )
#define FT_ERRORDEF_( Invalid_Handle, 0x20, "invalid object handle" )
#define FT_ERRORDEF_( Invalid_Horiz_Metrics, 0x95, "invalid horizontal metrics" )
#define FT_ERRORDEF_( Invalid_Library_Handle, 0x21, "invalid library handle" )
#define FT_ERRORDEF_( Invalid_Offset, 0x09, "broken offset within table" )
#define FT_ERRORDEF_( Invalid_Opcode, 0x80, "invalid opcode" )
#define FT_ERRORDEF_( Invalid_Outline, 0x14, "invalid outline" )
#define FT_ERRORDEF_( Invalid_PPem, 0x97, "invalid ppem value" )
#define FT_ERRORDEF_( Invalid_Pixel_Size, 0x17, "invalid pixel size" )
#define FT_ERRORDEF_( Invalid_Post_Table, 0x9B, "invalid PostScript (post) table" )
#define FT_ERRORDEF_( Invalid_Post_Table_Format, 0x9A, "invalid PostScript (post) table format" )
#define FT_ERRORDEF_( Invalid_Reference, 0x86, "invalid reference" )
#define FT_ERRORDEF_( Invalid_Size_Handle, 0x24, "invalid size handle" )
#define FT_ERRORDEF_( Invalid_Slot_Handle, 0x25, "invalid glyph slot handle" )
#define FT_ERRORDEF_( Invalid_Stream_Handle, 0x28, "invalid stream handle" )
#define FT_ERRORDEF_( Invalid_Stream_Operation, 0x55, "invalid stream operation" )
#define FT_ERRORDEF_( Invalid_Stream_Read, 0x54, "invalid stream read" )
#define FT_ERRORDEF_( Invalid_Stream_Seek, 0x52, "invalid stream seek" )
#define FT_ERRORDEF_( Invalid_Stream_Skip, 0x53, "invalid stream skip" )
#define FT_ERRORDEF_( Invalid_Table, 0x08, "broken table" )
#define FT_ERRORDEF_( Invalid_Version, 0x04, "invalid FreeType version" )
#define FT_ERRORDEF_( Invalid_Vert_Metrics, 0x98, "invalid vertical metrics" )
#define FT_ERRORDEF_( Locations_Missing, 0x90, "locations (loca) table missing" )
#define FT_ERRORDEF_( Lower_Module_Version, 0x05, "module version is too low" )
#define FT_ERRORDEF_( Missing_Chars_Field, 0xB3, "`CHARS' field missing" )
#define FT_ERRORDEF_( Missing_Encoding_Field, 0xB5, "`ENCODING' field missing" )
#define FT_ERRORDEF_( Missing_Font_Field, 0xB1, "`FONT' field missing" )
#define FT_ERRORDEF_( Missing_Size_Field, 0xB2, "`SIZE' field missing" )
#define FT_ERRORDEF_( Missing_Startchar_Field, 0xB4, "`STARTCHAR' field missing" )
#define FT_ERRORDEF_( Missing_Startfont_Field, 0xB0, "`STARTFONT' field missing" )
#define FT_ERRORDEF_( Name_Table_Missing, 0x91, "name table missing" )
#define FT_ERRORDEF_( Nested_DEFS, 0x89, "nested DEFS" )
#define FT_ERRORDEF_( Nested_Frame_Access, 0x57, "nested frame access" )
#define FT_ERRORDEF_( Out_Of_Memory, 0x40, "out of memory" )
#define FT_ERRORDEF_( Post_Table_Missing, 0x94, "PostScript (post) table missing" )
#define FT_ERRORDEF_( Raster_Corrupted, 0x61, "raster corrupted" )
#define FT_ERRORDEF_( Raster_Negative_Height, 0x63, "negative height while rastering" )
#define FT_ERRORDEF_( Raster_Overflow, 0x62, "raster overflow" )
#define FT_ERRORDEF_( Raster_Uninitialized, 0x60, "raster uninitialized" )
#define FT_ERRORDEF_( Stack_Overflow, 0x82, "stack overflow" )
#define FT_ERRORDEF_( Stack_Underflow, 0xA1, "argument stack underflow" )
#define FT_ERRORDEF_( Syntax_Error, 0xA0, "opcode syntax error" )
#define FT_ERRORDEF_( Table_Missing, 0x8E, "SFNT font table missing" )
#define FT_ERRORDEF_( Too_Few_Arguments, 0x81, "too few arguments" )
#define FT_ERRORDEF_( Too_Many_Caches, 0x70, "too many registered caches" )
#define FT_ERRORDEF_( Too_Many_Drivers, 0x30, "too many modules" )
#define FT_ERRORDEF_( Too_Many_Extensions, 0x31, "too many extensions" )
#define FT_ERRORDEF_( Too_Many_Function_Defs, 0x8C, "too many function definitions" )
#define FT_ERRORDEF_( Too_Many_Hints, 0x16, "too many hints" )
#define FT_ERRORDEF_( Too_Many_Instruction_Defs, 0x8D, "too many instruction definitions" )
#define FT_ERRORDEF_( Unimplemented_Feature, 0x07, "unimplemented feature" )
#define FT_ERRORDEF_( Unknown_File_Format, 0x02, "unknown file format" )
#define FT_ERRORDEF_( Unlisted_Object, 0x41, "unlisted object" )
#define FT_NOERRORDEF_( Ok, 0x00, "no error" )
</SCREEN>
</SECT2>
<SECT2>
<TITLE>freetype/fterrors.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define FT_ERRORDEF_(e,v,s)	 \
	FT_ERRORDEF( FT_ERR_CAT( FT_ERR_PREFIX, e ), v + FT_ERR_BASE, s )
#define FT_NOERRORDEF_(e,v,s)	 \
	FT_ERRORDEF( FT_ERR_CAT( FT_ERR_PREFIX, e ), v, s )
#define FT_ERR_BASE	0
#define FT_ERRORDEF(e,v,s)	e = v,
#define FT_ERROR_START_LIST	enum {
#define FT_ERR_PREFIX	FT_Err_
#define FT_ERROR_END_LIST	FT_ERR_CAT( FT_ERR_PREFIX, Max ) };
#define FT_ERR_CAT(x,y)	FT_ERR_XCAT( x, y )
#define FT_ERR_XCAT(x,y)	x ## y
</SCREEN>
</SECT2>
<SECT2>
<TITLE>freetype/ftglyph.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define ft_glyph_bbox_gridfit	FT_GLYPH_BBOX_GRIDFIT
#define ft_glyph_bbox_pixels	FT_GLYPH_BBOX_PIXELS
#define ft_glyph_bbox_subpixels	FT_GLYPH_BBOX_SUBPIXELS
#define ft_glyph_bbox_truncate	FT_GLYPH_BBOX_TRUNCATE
#define ft_glyph_bbox_unscaled	FT_GLYPH_BBOX_UNSCALED

typedef struct FT_Matrix_ FT_Matrix;
typedef struct FT_BBox_ FT_BBox;
typedef enum FT_Render_Mode_ FT_Render_Mode;
</SCREEN>
</SECT2>
<SECT2>
<TITLE>freetype/ftimage.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define FT_CURVE_TAG_TOUCH_BOTH	 \
	( FT_CURVE_TAG_TOUCH_X | FT_CURVE_TAG_TOUCH_Y )
#define FT_IMAGE_TAG(value,_x1,_x2,_x3,_x4)	 \
	value = ( ( (unsigned long)_x1 &lt;&lt; 24 ) | ( (unsigned long)_x2 &lt;&lt; 16 ) \
	| ( (unsigned long)_x3 &lt;&lt; 8 ) | (unsigned long)_x4 )
#define FT_CURVE_TAG(flag)	( flag &amp; 3 )
#define FT_CURVE_TAG_CONIC	0
#define FT_OUTLINE_NONE	0x0
#define FT_RASTER_FLAG_DEFAULT	0x0
#define FT_OUTLINE_OWNER	0x1
#define FT_RASTER_FLAG_AA	0x1
#define FT_OUTLINE_HIGH_PRECISION	0x100
#define FT_OUTLINE_EVEN_ODD_FILL	0x2
#define FT_RASTER_FLAG_DIRECT	0x2
#define FT_OUTLINE_SINGLE_PASS	0x200
#define FT_OUTLINE_REVERSE_FILL	0x4
#define FT_RASTER_FLAG_CLIP	0x4
#define FT_OUTLINE_IGNORE_DROPOUTS	0x8
#define FT_CURVE_TAG_ON	1
#define FT_CURVE_TAG_TOUCH_Y	16
#define FT_CURVE_TAG_CUBIC	2
#define FT_CURVE_TAG_TOUCH_X	8
#define FT_Curve_Tag_Conic	FT_CURVE_TAG_CONIC
#define FT_Curve_Tag_Cubic	FT_CURVE_TAG_CUBIC
#define FT_Curve_Tag_On	FT_CURVE_TAG_ON
#define FT_Curve_Tag_Touch_X	FT_CURVE_TAG_TOUCH_X
#define FT_Curve_Tag_Touch_Y	FT_CURVE_TAG_TOUCH_Y
#define ft_glyph_format_bitmap	FT_GLYPH_FORMAT_BITMAP
#define ft_glyph_format_composite	FT_GLYPH_FORMAT_COMPOSITE
#define ft_glyph_format_none	FT_GLYPH_FORMAT_NONE
#define ft_glyph_format_outline	FT_GLYPH_FORMAT_OUTLINE
#define ft_glyph_format_plotter	FT_GLYPH_FORMAT_PLOTTER
#define FT_Outline_ConicTo_Func	FT_Outline_ConicToFunc
#define FT_Outline_CubicTo_Func	FT_Outline_CubicToFunc
#define ft_outline_even_odd_fill	FT_OUTLINE_EVEN_ODD_FILL
#define ft_outline_high_precision	FT_OUTLINE_HIGH_PRECISION
#define ft_outline_ignore_dropouts	FT_OUTLINE_IGNORE_DROPOUTS
#define FT_Outline_LineTo_Func	FT_Outline_LineToFunc
#define FT_Outline_MoveTo_Func	FT_Outline_MoveToFunc
#define ft_outline_none	FT_OUTLINE_NONE
#define ft_outline_owner	FT_OUTLINE_OWNER
#define ft_outline_reverse_fill	FT_OUTLINE_REVERSE_FILL
#define ft_outline_single_pass	FT_OUTLINE_SINGLE_PASS
#define ft_pixel_mode_grays	FT_PIXEL_MODE_GRAY
#define ft_pixel_mode_pal2	FT_PIXEL_MODE_GRAY2
#define ft_pixel_mode_pal4	FT_PIXEL_MODE_GRAY4
#define ft_pixel_mode_mono	FT_PIXEL_MODE_MONO
#define ft_pixel_mode_none	FT_PIXEL_MODE_NONE
#define FT_Raster_Done_Func	FT_Raster_DoneFunc
#define ft_raster_flag_aa	FT_RASTER_FLAG_AA
#define ft_raster_flag_clip	FT_RASTER_FLAG_CLIP
#define ft_raster_flag_default	FT_RASTER_FLAG_DEFAULT
#define ft_raster_flag_direct	FT_RASTER_FLAG_DIRECT
#define FT_Raster_New_Func	FT_Raster_NewFunc
#define FT_Raster_Render_Func	FT_Raster_RenderFunc
#define FT_Raster_Reset_Func	FT_Raster_ResetFunc
#define FT_Raster_Set_Mode_Func	FT_Raster_SetModeFunc
#define FT_Raster_Span_Func	FT_SpanFunc
</SCREEN>
</SECT2>
<SECT2>
<TITLE>freetype/ftincrem.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define FT_PARAM_TAG_INCREMENTAL	FT_MAKE_TAG( 'i', 'n', 'c', 'r' )
</SCREEN>
</SECT2>
<SECT2>
<TITLE>freetype/ftlist.h</TITLE>
<PARA>
</PARA>
<SCREEN>

struct FT_ListNodeRec_ {
    FT_ListNode prev;
    FT_ListNode next;
    void *data;
};
typedef struct FT_ListNodeRec_ *FT_ListNode;
typedef struct FT_ListRec_ *FT_List;
struct FT_MemoryRec_ {
    void *user;
    FT_Alloc_Func alloc;
    FT_Free_Func free;
    FT_Realloc_Func realloc;
};
typedef void *(*FT_Alloc_Func) (FT_Memory, long int);
typedef void (*FT_Free_Func) (FT_Memory, void *);
typedef void *(*FT_Realloc_Func) (FT_Memory, long int, long int, void *);
typedef void (*FT_List_Destructor) (FT_Memory, void *, void *);
typedef FT_Error(*FT_List_Iterator) (FT_ListNode, void *);
extern void FT_List_Finalize(FT_List, FT_List_Destructor, FT_Memory,
			     void *);
extern void FT_List_Insert(FT_List, FT_ListNode);
extern FT_ListNode FT_List_Find(FT_List, void *);
extern void FT_List_Remove(FT_List, FT_ListNode);
extern void FT_List_Up(FT_List, FT_ListNode);
extern void FT_List_Add(FT_List, FT_ListNode);
extern FT_Error FT_List_Iterate(FT_List, FT_List_Iterator, void *);
</SCREEN>
</SECT2>
<SECT2>
<TITLE>freetype/ftmm.h</TITLE>
<PARA>
</PARA>
<SCREEN>

typedef long unsigned int FT_ULong;
typedef struct FT_MM_Axis_ {
    FT_String *name;
    FT_Long minimum;
    FT_Long maximum;
} FT_MM_Axis;
typedef struct FT_Multi_Master_ {
    FT_UInt num_axis;
    FT_UInt num_designs;
    FT_MM_Axis axis[4];
} FT_Multi_Master;
typedef struct FT_Var_Axis_ {
    FT_String *name;
    FT_Fixed minimum;
    FT_Fixed def;
    FT_Fixed maximum;
    FT_ULong tag;
    FT_UInt strid;
} FT_Var_Axis;
typedef struct FT_Var_Named_Style_ {
    FT_Fixed *coords;
    FT_UInt strid;
} FT_Var_Named_Style;
typedef struct FT_MM_Var_ {
    FT_UInt num_axis;
    FT_UInt num_designs;
    FT_UInt num_namedstyles;
    FT_Var_Axis *axis;
    FT_Var_Named_Style *namedstyle;
} FT_MM_Var;
</SCREEN>
</SECT2>
<SECT2>
<TITLE>freetype/ftmodapi.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define FT_MODULE_DRIVER_SCALABLE	0x100
#define FT_MODULE_DRIVER_NO_OUTLINES	0x200
#define FT_MODULE_DRIVER_HAS_HINTER	0x400
#define FT_MODULE_FONT_DRIVER	1
#define FT_MODULE_RENDERER	2
#define FT_MODULE_HINTER	4
#define FT_MODULE_STYLER	8
#define ft_module_driver_has_hinter	FT_MODULE_DRIVER_HAS_HINTER
#define ft_module_driver_no_outlines	FT_MODULE_DRIVER_NO_OUTLINES
#define ft_module_driver_scalable	FT_MODULE_DRIVER_SCALABLE
#define ft_module_font_driver	FT_MODULE_FONT_DRIVER
#define ft_module_hinter	FT_MODULE_HINTER
#define ft_module_renderer	FT_MODULE_RENDERER
#define ft_module_styler	FT_MODULE_STYLER

typedef struct FT_ModuleRec_ *FT_Module;
typedef struct FT_Module_Class_ FT_Module_Class;
typedef struct FT_LibraryRec_ *FT_Library;
typedef void (*FT_DebugHook_Func) (void *);
</SCREEN>
</SECT2>
<SECT2>
<TITLE>freetype/ftmoderr.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define FT_MODERR_START_LIST	enum {
#define FT_MODERRDEF(e,v,s)	FT_Mod_Err_ ## e = 0,
#define FT_MODERR_END_LIST	FT_Mod_Err_Max };
</SCREEN>
</SECT2>
<SECT2>
<TITLE>freetype/ftotval.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define FT_VALIDATE_OT	 \
	FT_VALIDATE_BASE | FT_VALIDATE_GDEF | FT_VALIDATE_GPOS | \
	FT_VALIDATE_GSUB | FT_VALIDATE_JSTF
#define FT_VALIDATE_BASE	0x0100
#define FT_VALIDATE_GDEF	0x0200
#define FT_VALIDATE_GPOS	0x0400
#define FT_VALIDATE_GSUB	0x0800
#define FT_VALIDATE_JSTF	0x1000

typedef const FT_Byte *FT_Bytes;
</SCREEN>
</SECT2>
<SECT2>
<TITLE>freetype/ftoutln.h</TITLE>
<PARA>
</PARA>
<SCREEN>

typedef struct FT_FaceRec_ *FT_Face;
typedef unsigned int FT_UInt;
typedef struct FT_Bitmap_ FT_Bitmap;
struct FT_LibraryRec_ {
    FT_Memory memory;
    FT_Generic generic;
    FT_Int version_major;
    FT_Int version_minor;
    FT_Int version_patch;
    FT_UInt num_modules;
    FT_Module modules[32];
    FT_ListRec renderers;
    FT_Renderer cur_renderer;
    FT_Module auto_hinter;
    FT_Byte *raster_pool;
    FT_ULong raster_pool_size;
    FT_DebugHook_Func debug_hooks[4];
};
typedef void (*FT_Generic_Finalizer) (void *);
typedef FT_Error(*FT_Module_Constructor) (FT_Module);
typedef void (*FT_Module_Destructor) (FT_Module);
typedef FT_Pointer FT_Module_Interface;
typedef FT_Module_Interface(*FT_Module_Requester) (FT_Module,
						   const char *);
typedef struct FT_ListRec_ FT_ListRec;
struct FT_RendererRec_ {
    FT_ModuleRec root;
    FT_Renderer_Class *clazz;
    FT_Glyph_Format glyph_format;
    FT_Glyph_Class glyph_class;
    FT_Raster raster;
    FT_Raster_RenderFunc raster_render;
    FT_Renderer_RenderFunc render;
};
typedef struct FT_ModuleRec_ {
    FT_Module_Class *clazz;
    FT_Library library;
    FT_Memory memory;
    FT_Generic generic;
} FT_ModuleRec;
struct FT_GlyphSlotRec_ {
    FT_Library library;
    FT_Face face;
    FT_GlyphSlot next;
    FT_UInt reserved;
    FT_Generic generic;
    FT_Glyph_Metrics metrics;
    FT_Fixed linearHoriAdvance;
    FT_Fixed linearVertAdvance;
    FT_Vector advance;
    FT_Glyph_Format format;
    FT_Bitmap bitmap;
    FT_Int bitmap_left;
    FT_Int bitmap_top;
    FT_Outline outline;
    FT_UInt num_subglyphs;
    FT_SubGlyph subglyphs;
    void *control_data;
    long int control_len;
    FT_Pos lsb_delta;
    FT_Pos rsb_delta;
    void *other;
    FT_Slot_Internal internal;
};
typedef struct FT_Glyph_Metrics_ {
    FT_Pos width;
    FT_Pos height;
    FT_Pos horiBearingX;
    FT_Pos horiBearingY;
    FT_Pos horiAdvance;
    FT_Pos vertBearingX;
    FT_Pos vertBearingY;
    FT_Pos vertAdvance;
} FT_Glyph_Metrics;
struct FT_SubGlyphRec_ {
    FT_Int index;
    FT_UShort flags;
    FT_Int arg1;
    FT_Int arg2;
    FT_Matrix transform;
};
typedef struct FT_SubGlyphRec_ *FT_SubGlyph;
struct FT_Slot_InternalRec_ {
    FT_GlyphLoader loader;
    FT_UInt flags;
    FT_Bool glyph_transformed;
    FT_Matrix glyph_matrix;
    FT_Vector glyph_delta;
    void *glyph_hints;
};
struct FT_GlyphLoaderRec_ {
    FT_Memory memory;
    FT_UInt max_points;
    FT_UInt max_contours;
    FT_UInt max_subglyphs;
    FT_Bool use_extra;
    FT_GlyphLoadRec base;
    FT_GlyphLoadRec current;
    void *other;
};
typedef struct FT_GlyphLoadRec_ {
    FT_Outline outline;
    FT_Vector *extra_points;
    FT_UInt num_subglyphs;
    FT_SubGlyph subglyphs;
} FT_GlyphLoadRec;
typedef struct FT_GlyphLoaderRec_ *FT_GlyphLoader;
typedef struct FT_Slot_InternalRec_ *FT_Slot_Internal;
typedef FT_Error(*FT_Renderer_RenderFunc) (FT_Renderer, FT_Renderer,
					   FT_GlyphSlot, FT_GlyphSlot,
					   FT_UInt, FT_UInt, FT_Vector *,
					   FT_Vector *);
typedef FT_Error(*FT_Renderer_TransformFunc) (FT_Renderer, FT_GlyphSlot,
					      FT_Matrix *, FT_Vector *);
typedef void (*FT_Renderer_GetCBoxFunc) (FT_Renderer, FT_GlyphSlot,
					 FT_BBox *);
typedef FT_Error(*FT_Renderer_SetModeFunc) (FT_Renderer, FT_ULong,
					    FT_Pointer);
typedef struct FT_RasterRec_ *FT_Raster;
typedef int (*FT_Raster_NewFunc) (void *, FT_Raster *);
typedef void (*FT_Raster_ResetFunc) (FT_Raster, unsigned char *,
				     long unsigned int);
typedef int (*FT_Raster_SetModeFunc) (FT_Raster, long unsigned int,
				      void *);
typedef struct FT_Span_ {
    short int x;
    short unsigned int len;
    unsigned char coverage;
} FT_Span;
typedef void (*FT_SpanFunc) (int, int, int, int, FT_Span *, FT_Span *,
			     void *, void *);
typedef int (*FT_Raster_BitTest_Func) (int, int, void *);
typedef void (*FT_Raster_BitSet_Func) (int, int, void *);
typedef struct FT_Raster_Params_ {
    const FT_Bitmap *target;
    const void *source;
    int flags;
    FT_SpanFunc gray_spans;
    FT_SpanFunc black_spans;
    FT_Raster_BitTest_Func bit_test;
    FT_Raster_BitSet_Func bit_set;
    void *user;
    FT_BBox clip_box;
} FT_Raster_Params;
typedef int (*FT_Raster_RenderFunc) (FT_Raster, FT_Raster,
				     FT_Raster_Params *,
				     FT_Raster_Params *);
typedef void (*FT_Raster_DoneFunc) (FT_Raster);
typedef struct FT_Raster_Funcs_ {
    FT_Glyph_Format glyph_format;
    FT_Raster_NewFunc raster_new;
    FT_Raster_ResetFunc raster_reset;
    FT_Raster_SetModeFunc raster_set_mode;
    FT_Raster_RenderFunc raster_render;
    FT_Raster_DoneFunc raster_done;
} FT_Raster_Funcs;
typedef struct FT_Renderer_Class_ {
    FT_Module_Class root;
    FT_Glyph_Format glyph_format;
    FT_Renderer_RenderFunc render_glyph;
    FT_Renderer_TransformFunc transform_glyph;
    FT_Renderer_GetCBoxFunc get_glyph_cbox;
    FT_Renderer_SetModeFunc set_mode;
    FT_Raster_Funcs *raster_class;
} FT_Renderer_Class;
struct FT_GlyphRec_ {
    FT_Library library;
    const FT_Glyph_Class *clazz;
    FT_Glyph_Format format;
    FT_Vector advance;
};
typedef struct FT_Glyph_Class_ {
    FT_Long glyph_size;
    FT_Glyph_Format glyph_format;
    FT_Glyph_InitFunc glyph_init;
    FT_Glyph_DoneFunc glyph_done;
    FT_Glyph_CopyFunc glyph_copy;
    FT_Glyph_TransformFunc glyph_transform;
    FT_Glyph_GetBBoxFunc glyph_bbox;
    FT_Glyph_PrepareFunc glyph_prepare;
} FT_Glyph_Class;
typedef FT_Error(*FT_Glyph_InitFunc) (FT_Glyph, FT_Glyph, FT_GlyphSlot,
				      FT_GlyphSlot);
typedef void (*FT_Glyph_DoneFunc) (FT_Glyph);
typedef FT_Error(*FT_Glyph_CopyFunc) (FT_Glyph, FT_Glyph);
typedef void (*FT_Glyph_TransformFunc) (FT_Glyph, FT_Matrix *,
					FT_Vector *);
typedef void (*FT_Glyph_GetBBoxFunc) (FT_Glyph, FT_BBox *);
typedef FT_Error(*FT_Glyph_PrepareFunc) (FT_Glyph, FT_Glyph, FT_GlyphSlot,
					 FT_GlyphSlot);
typedef int (*FT_Outline_MoveToFunc) (FT_Vector *, FT_Vector *, void *,
				      void *);
typedef int (*FT_Outline_LineToFunc) (FT_Vector *, FT_Vector *, void *,
				      void *);
typedef int (*FT_Outline_ConicToFunc) (FT_Vector *, FT_Vector *, void *);
typedef int (*FT_Outline_CubicToFunc) (FT_Vector *, FT_Vector *,
				       FT_Vector *, void *);
typedef struct FT_Outline_Funcs_ {
    FT_Outline_MoveToFunc move_to;
    FT_Outline_LineToFunc line_to;
    FT_Outline_ConicToFunc conic_to;
    FT_Outline_CubicToFunc cubic_to;
    int shift;
    FT_Pos delta;
} FT_Outline_Funcs;
typedef enum {
    FT_ORIENTATION_TRUETYPE = 0,
    FT_ORIENTATION_POSTSCRIPT = 1,
    FT_ORIENTATION_FILL_RIGHT = 0,
    FT_ORIENTATION_FILL_LEFT = 1
} FT_Orientation;
extern void FT_Outline_Reverse(FT_Outline *);
extern FT_Error FT_Outline_New(FT_Library, FT_UInt, FT_Int, FT_Outline *);
extern void FT_Outline_Transform(const FT_Outline *, const FT_Matrix *);
extern FT_Error FT_Outline_Done(FT_Library, FT_Outline *);
extern void FT_Outline_Translate(const FT_Outline *, FT_Pos, FT_Pos);
extern FT_Error FT_Outline_Render(FT_Library, FT_Outline *,
				  FT_Raster_Params *);
extern void FT_Outline_Get_CBox(const FT_Outline *, FT_BBox *);
extern FT_Error FT_Outline_Get_Bitmap(FT_Library, FT_Outline *,
				      const FT_Bitmap *);
extern FT_Error FT_Outline_Decompose(FT_Outline *,
				     const FT_Outline_Funcs *, void *);
extern FT_Error FT_Outline_Check(FT_Outline *);
extern FT_Error FT_Outline_Copy(const FT_Outline *, FT_Outline *);
extern FT_Error FT_Outline_Done_Internal(FT_Memory, FT_Outline *);
extern FT_Orientation FT_Outline_Get_Orientation(FT_Outline *);
extern FT_Error FT_Outline_New_Internal(FT_Memory, FT_UInt, FT_Int,
					FT_Outline *);
</SCREEN>
</SECT2>
<SECT2>
<TITLE>freetype/ftpfr.h</TITLE>
<PARA>
</PARA>
<SCREEN>

extern FT_Error FT_Get_PFR_Advance(FT_Face, FT_UInt, FT_Pos *);
extern FT_Error FT_Get_PFR_Metrics(FT_Face, FT_UInt *, FT_UInt *,
				   FT_Fixed *, FT_Fixed *);
extern FT_Error FT_Get_PFR_Kerning(FT_Face, FT_UInt, FT_UInt, FT_Vector *);
</SCREEN>
</SECT2>
<SECT2>
<TITLE>freetype/ftrender.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define FT_Glyph_Done_Func	FT_Glyph_DoneFunc
#define FT_Glyph_BBox_Func	FT_Glyph_GetBBoxFunc
#define FT_Glyph_Init_Func	FT_Glyph_InitFunc
#define FT_Glyph_Prepare_Func	FT_Glyph_PrepareFunc
#define FTRenderer_getCBox	FT_Renderer_GetCBoxFunc
#define FTRenderer_render	FT_Renderer_RenderFunc
#define FTRenderer_setMode	FT_Renderer_SetModeFunc
#define FTRenderer_transform	FT_Renderer_TransformFunc

typedef enum FT_Glyph_Format_ FT_Glyph_Format;
typedef struct FT_RendererRec_ *FT_Renderer;
typedef struct FT_Parameter_ FT_Parameter;
</SCREEN>
</SECT2>
<SECT2>
<TITLE>freetype/ftsizes.h</TITLE>
<PARA>
</PARA>
<SCREEN>

typedef long int FT_Pos;
typedef struct FT_Generic_ FT_Generic;
struct FT_SizeRec_ {
    FT_Face face;
    FT_Generic generic;
    FT_Size_Metrics metrics;
    FT_Size_Internal internal;
};
typedef struct FT_Size_Metrics_ {
    FT_UShort x_ppem;
    FT_UShort y_ppem;
    FT_Fixed x_scale;
    FT_Fixed y_scale;
    FT_Pos ascender;
    FT_Pos descender;
    FT_Pos height;
    FT_Pos max_advance;
} FT_Size_Metrics;
typedef struct FT_Size_InternalRec_ *FT_Size_Internal;
typedef struct FT_SizeRec_ *FT_Size;
</SCREEN>
</SECT2>
<SECT2>
<TITLE>freetype/ftsnames.h</TITLE>
<PARA>
</PARA>
<SCREEN>

typedef struct FT_SfntName_ {
    FT_UShort platform_id;
    FT_UShort encoding_id;
    FT_UShort language_id;
    FT_UShort name_id;
    FT_Byte *string;
    FT_UInt string_len;
} FT_SfntName;
</SCREEN>
</SECT2>
<SECT2>
<TITLE>freetype/ftstroke.h</TITLE>
<PARA>
</PARA>
<SCREEN>

typedef struct FT_Vector_ FT_Vector;
typedef struct FT_Outline_ FT_Outline;
typedef struct FT_GlyphRec_ *FT_Glyph;
typedef FT_Fixed FT_Angle;
struct FT_StrokerRec_ {
    FT_Angle angle_in;
    FT_Angle angle_out;
    FT_Vector center;
    FT_Bool first_point;
    FT_Bool subpath_open;
    FT_Angle subpath_angle;
    FT_Vector subpath_start;
    FT_Stroker_LineCap line_cap;
    FT_Stroker_LineJoin line_join;
    FT_Fixed miter_limit;
    FT_Fixed radius;
    FT_Bool valid;
    FT_StrokeBorderRec borders[2];
    FT_Memory memory;
};
typedef enum {
    FT_STROKER_LINECAP_BUTT = 0,
    FT_STROKER_LINECAP_ROUND = 1,
    FT_STROKER_LINECAP_SQUARE = 2
} FT_Stroker_LineCap;
typedef enum {
    FT_STROKER_LINEJOIN_ROUND = 0,
    FT_STROKER_LINEJOIN_BEVEL = 1,
    FT_STROKER_LINEJOIN_MITER = 2
} FT_Stroker_LineJoin;
typedef struct FT_StrokeBorderRec_ {
    FT_UInt num_points;
    FT_UInt max_points;
    FT_Vector *points;
    FT_Byte *tags;
    FT_Bool movable;
    FT_Int start;
    FT_Memory memory;
    FT_Bool valid;
} FT_StrokeBorderRec;
typedef struct FT_StrokerRec_ *FT_Stroker;
typedef enum {
    FT_STROKER_BORDER_LEFT = 0,
    FT_STROKER_BORDER_RIGHT = 1
} FT_StrokerBorder;
</SCREEN>
</SECT2>
<SECT2>
<TITLE>freetype/ftsynth.h</TITLE>
<PARA>
</PARA>
<SCREEN>

typedef struct FT_GlyphSlotRec_ *FT_GlyphSlot;
</SCREEN>
</SECT2>
<SECT2>
<TITLE>freetype/fttrigon.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define FT_ANGLE_PI	( 180L &lt;&lt; 16 )
#define FT_ANGLE_2PI	( FT_ANGLE_PI * 2 )
#define FT_ANGLE_PI2	( FT_ANGLE_PI / 2 )
#define FT_ANGLE_PI4	( FT_ANGLE_PI / 4 )

extern FT_Angle FT_Angle_Diff(FT_Angle, FT_Angle);
extern FT_Fixed FT_Vector_Length(FT_Vector *);
extern void FT_Vector_Rotate(FT_Vector *, FT_Angle);
extern void FT_Vector_From_Polar(FT_Vector *, FT_Fixed, FT_Angle);
extern void FT_Vector_Unit(FT_Vector *, FT_Angle);
extern FT_Fixed FT_Tan(FT_Angle);
extern FT_Fixed FT_Sin(FT_Angle);
extern FT_Angle FT_Atan2(FT_Fixed, FT_Fixed);
extern FT_Fixed FT_Cos(FT_Angle);
extern void FT_Vector_Polarize(FT_Vector *, FT_Fixed *, FT_Angle *);
</SCREEN>
</SECT2>
<SECT2>
<TITLE>freetype/fttypes.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define FT_MAKE_TAG(_x1,_x2,_x3,_x4)	 \
	( ( (FT_ULong)_x1 &lt;&lt; 24 ) | ( (FT_ULong)_x2 &lt;&lt; 16 ) | ( (FT_ULong)_x3 \
	&lt;&lt; 8 ) | (FT_ULong)_x4 )
#define FT_BOOL(x)	( (FT_Bool)( x ) )
#define FT_IS_EMPTY(list)	( (list).head == 0 )
#define FT_ERROR_BASE(x)	( (x) &amp; 0xFF )
#define FT_ERROR_MODULE(x)	( (x) &amp; 0xFF00U )
</SCREEN>
</SECT2>
<!-- empty header file All/freetype/ftxf86.h -->
<SECT2>
<TITLE>freetype/t1tables.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define T1_MAX_MM_DESIGNS	16
#define T1_MAX_MM_MAP_POINTS	20
#define T1_MAX_MM_AXIS	4
#define t1_blend_blue_scale	T1_BLEND_BLUE_SCALE
#define t1_blend_blue_shift	T1_BLEND_BLUE_SHIFT
#define t1_blend_blue_values	T1_BLEND_BLUE_VALUES
#define t1_blend_family_blues	T1_BLEND_FAMILY_BLUES
#define t1_blend_family_other_blues	T1_BLEND_FAMILY_OTHER_BLUES
#define t1_blend_force_bold	T1_BLEND_FORCE_BOLD
#define t1_blend_italic_angle	T1_BLEND_ITALIC_ANGLE
#define t1_blend_max	T1_BLEND_MAX
#define t1_blend_other_blues	T1_BLEND_OTHER_BLUES
#define t1_blend_standard_height	T1_BLEND_STANDARD_HEIGHT
#define t1_blend_standard_widths	T1_BLEND_STANDARD_WIDTH
#define t1_blend_stem_snap_heights	T1_BLEND_STEM_SNAP_HEIGHTS
#define t1_blend_stem_snap_widths	T1_BLEND_STEM_SNAP_WIDTHS
#define t1_blend_underline_position	T1_BLEND_UNDERLINE_POSITION
#define t1_blend_underline_thickness	T1_BLEND_UNDERLINE_THICKNESS

typedef int FT_Error;
typedef int FT_Int;
typedef long int FT_Long;
typedef char FT_String;
typedef long int FT_Fixed;
typedef short unsigned int FT_UShort;
typedef unsigned char FT_Bool;
typedef unsigned char FT_Byte;
typedef short int FT_Short;
typedef struct PS_PrivateRec_ {
    FT_Int unique_id;
    FT_Int lenIV;
    FT_Byte num_blue_values;
    FT_Byte num_other_blues;
    FT_Byte num_family_blues;
    FT_Byte num_family_other_blues;
    FT_Short blue_values[14];
    FT_Short other_blues[10];
    FT_Short family_blues[14];
    FT_Short family_other_blues[10];
    FT_Fixed blue_scale;
    FT_Int blue_shift;
    FT_Int blue_fuzz;
    FT_UShort standard_width[1];
    FT_UShort standard_height[1];
    FT_Byte num_snap_widths;
    FT_Byte num_snap_heights;
    FT_Bool force_bold;
    FT_Bool round_stem_up;
    FT_Short snap_widths[13];
    FT_Short snap_heights[13];
    FT_Fixed expansion_factor;
    FT_Long language_group;
    FT_Long password;
    FT_Short min_feature[2];
} PS_PrivateRec;
typedef struct PS_FontInfoRec {
    FT_String *version;
    FT_String *notice;
    FT_String *full_name;
    FT_String *family_name;
    FT_String *weight;
    FT_Long italic_angle;
    FT_Bool is_fixed_pitch;
    FT_Short underline_position;
    FT_UShort underline_thickness;
} PS_FontInfoRec;
</SCREEN>
</SECT2>
<SECT2>
<TITLE>freetype/ttnameid.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define TT_MS_LANGID_KIRGHIZ_KIRGHIZ_REPUBLIC	 \
	TT_MS_LANGID_KIRGHIZ_KIRGHIZSTAN
#define TT_MS_LANGID_SOTHO_SOUTHERN_SOUTH_AFRICA	 \
	TT_MS_LANGID_SEPEDI_SOUTH_AFRICA
#define TT_UCR_COMBINING_DIACRITICAL_MARKS_SYMB	 \
	TT_UCR_COMBINING_DIACRITICS_SYMB
#define TT_UCR_BASIC_LATIN	(1L &lt;&lt; 0)
#define TT_UCR_COMBINING_HALF_MARKS	(1L &lt;&lt; 0)
#define TT_UCR_SUPERSCRIPTS_SUBSCRIPTS	(1L &lt;&lt; 0)
#define TT_UCR_CJK_COMPATIBILITY_FORMS	(1L &lt;&lt; 1)
#define TT_UCR_CURRENCY_SYMBOLS	(1L &lt;&lt; 1)
#define TT_UCR_LATIN1_SUPPLEMENT	(1L &lt;&lt; 1)
#define TT_UCR_ARMENIAN	(1L &lt;&lt; 10)
#define TT_UCR_ENCLOSED_ALPHANUMERICS	(1L &lt;&lt; 10)
#define TT_UCR_MYANMAR	(1L &lt;&lt; 10)
#define TT_UCR_BOX_DRAWING	(1L &lt;&lt; 11)
#define TT_UCR_ETHIOPIC	(1L &lt;&lt; 11)
#define TT_UCR_HEBREW	(1L &lt;&lt; 11)
#define TT_UCR_BLOCK_ELEMENTS	(1L &lt;&lt; 12)
#define TT_UCR_CHEROKEE	(1L &lt;&lt; 12)
#define TT_UCR_ARABIC	(1L &lt;&lt; 13)
#define TT_UCR_CANADIAN_ABORIGINAL_SYLLABICS	(1L &lt;&lt; 13)
#define TT_UCR_GEOMETRIC_SHAPES	(1L &lt;&lt; 13)
#define TT_UCR_MISCELLANEOUS_SYMBOLS	(1L &lt;&lt; 14)
#define TT_UCR_OGHAM	(1L &lt;&lt; 14)
#define TT_UCR_DEVANAGARI	(1L &lt;&lt; 15)
#define TT_UCR_DINGBATS	(1L &lt;&lt; 15)
#define TT_UCR_RUNIC	(1L &lt;&lt; 15)
#define TT_UCR_BENGALI	(1L &lt;&lt; 16)
#define TT_UCR_CJK_SYMBOLS	(1L &lt;&lt; 16)
#define TT_UCR_KHMER	(1L &lt;&lt; 16)
#define TT_UCR_GURMUKHI	(1L &lt;&lt; 17)
#define TT_UCR_HIRAGANA	(1L &lt;&lt; 17)
#define TT_UCR_MONGOLIAN	(1L &lt;&lt; 17)
#define TT_UCR_BRAILLE	(1L &lt;&lt; 18)
#define TT_UCR_GUJARATI	(1L &lt;&lt; 18)
#define TT_UCR_KATAKANA	(1L &lt;&lt; 18)
#define TT_UCR_BOPOMOFO	(1L &lt;&lt; 19)
#define TT_UCR_ORIYA	(1L &lt;&lt; 19)
#define TT_UCR_YI	(1L &lt;&lt; 19)
#define TT_UCR_COMBINING_DIACRITICS_SYMB	(1L &lt;&lt; 2)
#define TT_UCR_LATIN_EXTENDED_A	(1L &lt;&lt; 2)
#define TT_UCR_SMALL_FORM_VARIANTS	(1L &lt;&lt; 2)
#define TT_UCR_HANGUL_COMPATIBILITY_JAMO	(1L &lt;&lt; 20)
#define TT_UCR_PHILIPPINE	(1L &lt;&lt; 20)
#define TT_UCR_TAMIL	(1L &lt;&lt; 20)
#define TT_UCR_CJK_MISC	(1L &lt;&lt; 21)
#define TT_UCR_OLD_ITALIC	(1L &lt;&lt; 21)
#define TT_UCR_TELUGU	(1L &lt;&lt; 21)
#define TT_UCR_ENCLOSED_CJK_LETTERS_MONTHS	(1L &lt;&lt; 22)
#define TT_UCR_GOTHIC	(1L &lt;&lt; 22)
#define TT_UCR_KANNADA	(1L &lt;&lt; 22)
#define TT_UCR_CJK_COMPATIBILITY	(1L &lt;&lt; 23)
#define TT_UCR_DESERET	(1L &lt;&lt; 23)
#define TT_UCR_MALAYALAM	(1L &lt;&lt; 23)
#define TT_UCR_HANGUL	(1L &lt;&lt; 24)
#define TT_UCR_MUSICAL_SYMBOLS	(1L &lt;&lt; 24)
#define TT_UCR_THAI	(1L &lt;&lt; 24)
#define TT_UCR_LAO	(1L &lt;&lt; 25)
#define TT_UCR_MATH_ALPHANUMERIC_SYMBOLS	(1L &lt;&lt; 25)
#define TT_UCR_SURROGATES	(1L &lt;&lt; 25)
#define TT_UCR_GEORGIAN	(1L &lt;&lt; 26)
#define TT_UCR_PRIVATE_USE_SUPPLEMENTARY	(1L &lt;&lt; 26)
#define TT_UCR_CJK_UNIFIED_IDEOGRAPHS	(1L &lt;&lt; 27)
#define TT_UCR_VARIATION_SELECTORS	(1L &lt;&lt; 27)
#define TT_UCR_HANGUL_JAMO	(1L &lt;&lt; 28)
#define TT_UCR_PRIVATE_USE	(1L &lt;&lt; 28)
#define TT_UCR_TAGS	(1L &lt;&lt; 28)
#define TT_UCR_CJK_COMPATIBILITY_IDEOGRAPHS	(1L &lt;&lt; 29)
#define TT_UCR_LATIN_EXTENDED_ADDITIONAL	(1L &lt;&lt; 29)
#define TT_UCR_ARABIC_PRESENTATIONS_B	(1L &lt;&lt; 3)
#define TT_UCR_LATIN_EXTENDED_B	(1L &lt;&lt; 3)
#define TT_UCR_LETTERLIKE_SYMBOLS	(1L &lt;&lt; 3)
#define TT_UCR_ALPHABETIC_PRESENTATION_FORMS	(1L &lt;&lt; 30)
#define TT_UCR_GREEK_EXTENDED	(1L &lt;&lt; 30)
#define TT_UCR_ARABIC_PRESENTATIONS_A	(1L &lt;&lt; 31)
#define TT_UCR_GENERAL_PUNCTUATION	(1L &lt;&lt; 31)
#define TT_UCR_HALFWIDTH_FULLWIDTH_FORMS	(1L &lt;&lt; 4)
#define TT_UCR_IPA_EXTENSIONS	(1L &lt;&lt; 4)
#define TT_UCR_NUMBER_FORMS	(1L &lt;&lt; 4)
#define TT_UCR_ARROWS	(1L &lt;&lt; 5)
#define TT_UCR_SPACING_MODIFIER	(1L &lt;&lt; 5)
#define TT_UCR_SPECIALS	(1L &lt;&lt; 5)
#define TT_UCR_COMBINING_DIACRITICS	(1L &lt;&lt; 6)
#define TT_UCR_MATHEMATICAL_OPERATORS	(1L &lt;&lt; 6)
#define TT_UCR_TIBETAN	(1L &lt;&lt; 6)
#define TT_UCR_GREEK	(1L &lt;&lt; 7)
#define TT_UCR_MISCELLANEOUS_TECHNICAL	(1L &lt;&lt; 7)
#define TT_UCR_SYRIAC	(1L &lt;&lt; 7)
#define TT_UCR_CONTROL_PICTURES	(1L &lt;&lt; 8)
#define TT_UCR_THAANA	(1L &lt;&lt; 8)
#define TT_UCR_CYRILLIC	(1L &lt;&lt; 9)
#define TT_UCR_OCR	(1L &lt;&lt; 9)
#define TT_UCR_SINHALA	(1L &lt;&lt; 9)
#define TT_ADOBE_ID_STANDARD	0
#define TT_APPLE_ID_DEFAULT	0
#define TT_ISO_ID_7BIT_ASCII	0
#define TT_MAC_ID_ROMAN	0
#define TT_MAC_LANGID_ENGLISH	0
#define TT_MS_ID_SYMBOL_CS	0
#define TT_NAME_ID_COPYRIGHT	0
#define TT_PLATFORM_APPLE_UNICODE	0
#define TT_MS_LANGID_ARABIC_GENERAL	0x0001
#define TT_MS_LANGID_CHINESE_GENERAL	0x0004
#define TT_MS_LANGID_ENGLISH_GENERAL	0x0009
#define TT_MS_LANGID_ARABIC_SAUDI_ARABIA	0x0401
#define TT_MS_LANGID_BULGARIAN_BULGARIA	0x0402
#define TT_MS_LANGID_CATALAN_SPAIN	0x0403
#define TT_MS_LANGID_CHINESE_TAIWAN	0x0404
#define TT_MS_LANGID_CZECH_CZECH_REPUBLIC	0x0405
#define TT_MS_LANGID_DANISH_DENMARK	0x0406
#define TT_MS_LANGID_GERMAN_GERMANY	0x0407
#define TT_MS_LANGID_GREEK_GREECE	0x0408
#define TT_MS_LANGID_ENGLISH_UNITED_STATES	0x0409
#define TT_MS_LANGID_SPANISH_SPAIN_TRADITIONAL_SORT	0x040a
#define TT_MS_LANGID_FINNISH_FINLAND	0x040b
#define TT_MS_LANGID_FRENCH_FRANCE	0x040c
#define TT_MS_LANGID_HEBREW_ISRAEL	0x040d
#define TT_MS_LANGID_HUNGARIAN_HUNGARY	0x040e
#define TT_MS_LANGID_ICELANDIC_ICELAND	0x040f
#define TT_MS_LANGID_ITALIAN_ITALY	0x0410
#define TT_MS_LANGID_JAPANESE_JAPAN	0x0411
#define TT_MS_LANGID_KOREAN_EXTENDED_WANSUNG_KOREA	0x0412
#define TT_MS_LANGID_DUTCH_NETHERLANDS	0x0413
#define TT_MS_LANGID_NORWEGIAN_NORWAY_BOKMAL	0x0414
#define TT_MS_LANGID_POLISH_POLAND	0x0415
#define TT_MS_LANGID_PORTUGUESE_BRAZIL	0x0416
#define TT_MS_LANGID_RHAETO_ROMANIC_SWITZERLAND	0x0417
#define TT_MS_LANGID_ROMANIAN_ROMANIA	0x0418
#define TT_MS_LANGID_RUSSIAN_RUSSIA	0x0419
#define TT_MS_LANGID_CROATIAN_CROATIA	0x041a
#define TT_MS_LANGID_SLOVAK_SLOVAKIA	0x041b
#define TT_MS_LANGID_ALBANIAN_ALBANIA	0x041c
#define TT_MS_LANGID_SWEDISH_SWEDEN	0x041d
#define TT_MS_LANGID_THAI_THAILAND	0x041e
#define TT_MS_LANGID_TURKISH_TURKEY	0x041f
#define TT_MS_LANGID_URDU_PAKISTAN	0x0420
#define TT_MS_LANGID_INDONESIAN_INDONESIA	0x0421
#define TT_MS_LANGID_UKRAINIAN_UKRAINE	0x0422
#define TT_MS_LANGID_BELARUSIAN_BELARUS	0x0423
#define TT_MS_LANGID_SLOVENE_SLOVENIA	0x0424
#define TT_MS_LANGID_ESTONIAN_ESTONIA	0x0425
#define TT_MS_LANGID_LATVIAN_LATVIA	0x0426
#define TT_MS_LANGID_LITHUANIAN_LITHUANIA	0x0427
#define TT_MS_LANGID_TAJIK_TAJIKISTAN	0x0428
#define TT_MS_LANGID_FARSI_IRAN	0x0429
#define TT_MS_LANGID_VIETNAMESE_VIET_NAM	0x042a
#define TT_MS_LANGID_ARMENIAN_ARMENIA	0x042b
#define TT_MS_LANGID_AZERI_AZERBAIJAN_LATIN	0x042c
#define TT_MS_LANGID_BASQUE_SPAIN	0x042d
#define TT_MS_LANGID_SORBIAN_GERMANY	0x042e
#define TT_MS_LANGID_MACEDONIAN_MACEDONIA	0x042f
#define TT_MS_LANGID_SUTU_SOUTH_AFRICA	0x0430
#define TT_MS_LANGID_TSONGA_SOUTH_AFRICA	0x0431
#define TT_MS_LANGID_TSWANA_SOUTH_AFRICA	0x0432
#define TT_MS_LANGID_VENDA_SOUTH_AFRICA	0x0433
#define TT_MS_LANGID_XHOSA_SOUTH_AFRICA	0x0434
#define TT_MS_LANGID_ZULU_SOUTH_AFRICA	0x0435
#define TT_MS_LANGID_AFRIKAANS_SOUTH_AFRICA	0x0436
#define TT_MS_LANGID_GEORGIAN_GEORGIA	0x0437
#define TT_MS_LANGID_FAEROESE_FAEROE_ISLANDS	0x0438
#define TT_MS_LANGID_HINDI_INDIA	0x0439
#define TT_MS_LANGID_MALTESE_MALTA	0x043a
#define TT_MS_LANGID_SAAMI_LAPONIA	0x043b
#define TT_MS_LANGID_SAMI_NORTHERN_NORWAY	0x043b
#define TT_MS_LANGID_IRISH_GAELIC_IRELAND	0x043c
#define TT_MS_LANGID_YIDDISH_GERMANY	0x043d
#define TT_MS_LANGID_MALAY_MALAYSIA	0x043e
#define TT_MS_LANGID_KAZAK_KAZAKSTAN	0x043f
#define TT_MS_LANGID_KIRGHIZ_KIRGHIZSTAN	0x0440
#define TT_MS_LANGID_SWAHILI_KENYA	0x0441
#define TT_MS_LANGID_TURKMEN_TURKMENISTAN	0x0442
#define TT_MS_LANGID_UZBEK_UZBEKISTAN_LATIN	0x0443
#define TT_MS_LANGID_TATAR_TATARSTAN	0x0444
#define TT_MS_LANGID_BENGALI_INDIA	0x0445
#define TT_MS_LANGID_PUNJABI_INDIA	0x0446
#define TT_MS_LANGID_GUJARATI_INDIA	0x0447
#define TT_MS_LANGID_ORIYA_INDIA	0x0448
#define TT_MS_LANGID_TAMIL_INDIA	0x0449
#define TT_MS_LANGID_TELUGU_INDIA	0x044a
#define TT_MS_LANGID_KANNADA_INDIA	0x044b
#define TT_MS_LANGID_MALAYALAM_INDIA	0x044c
#define TT_MS_LANGID_ASSAMESE_INDIA	0x044d
#define TT_MS_LANGID_MARATHI_INDIA	0x044e
#define TT_MS_LANGID_SANSKRIT_INDIA	0x044f
#define TT_MS_LANGID_MONGOLIAN_MONGOLIA	0x0450
#define TT_MS_LANGID_TIBETAN_CHINA	0x0451
#define TT_MS_LANGID_WELSH_WALES	0x0452
#define TT_MS_LANGID_KHMER_CAMBODIA	0x0453
#define TT_MS_LANGID_LAO_LAOS	0x0454
#define TT_MS_LANGID_BURMESE_MYANMAR	0x0455
#define TT_MS_LANGID_GALICIAN_SPAIN	0x0456
#define TT_MS_LANGID_KONKANI_INDIA	0x0457
#define TT_MS_LANGID_MANIPURI_INDIA	0x0458
#define TT_MS_LANGID_SINDHI_INDIA	0x0459
#define TT_MS_LANGID_SYRIAC_SYRIA	0x045a
#define TT_MS_LANGID_SINHALESE_SRI_LANKA	0x045b
#define TT_MS_LANGID_CHEROKEE_UNITED_STATES	0x045c
#define TT_MS_LANGID_INUKTITUT_CANADA	0x045d
#define TT_MS_LANGID_AMHARIC_ETHIOPIA	0x045e
#define TT_MS_LANGID_TAMAZIGHT_MOROCCO	0x045f
#define TT_MS_LANGID_KASHMIRI_PAKISTAN	0x0460
#define TT_MS_LANGID_NEPALI_NEPAL	0x0461
#define TT_MS_LANGID_FRISIAN_NETHERLANDS	0x0462
#define TT_MS_LANGID_PASHTO_AFGHANISTAN	0x0463
#define TT_MS_LANGID_FILIPINO_PHILIPPINES	0x0464
#define TT_MS_LANGID_DHIVEHI_MALDIVES	0x0465
#define TT_MS_LANGID_EDO_NIGERIA	0x0466
#define TT_MS_LANGID_FULFULDE_NIGERIA	0x0467
#define TT_MS_LANGID_HAUSA_NIGERIA	0x0468
#define TT_MS_LANGID_IBIBIO_NIGERIA	0x0469
#define TT_MS_LANGID_YORUBA_NIGERIA	0x046a
#define TT_MS_LANGID_QUECHUA_BOLIVIA	0x046b
#define TT_MS_LANGID_SEPEDI_SOUTH_AFRICA	0x046c
#define TT_MS_LANGID_IGBO_NIGERIA	0x0470
#define TT_MS_LANGID_KANURI_NIGERIA	0x0471
#define TT_MS_LANGID_OROMO_ETHIOPIA	0x0472
#define TT_MS_LANGID_TIGRIGNA_ETHIOPIA	0x0473
#define TT_MS_LANGID_GUARANI_PARAGUAY	0x0474
#define TT_MS_LANGID_HAWAIIAN_UNITED_STATES	0x0475
#define TT_MS_LANGID_LATIN	0x0476
#define TT_MS_LANGID_SOMALI_SOMALIA	0x0477
#define TT_MS_LANGID_YI_CHINA	0x0478
#define TT_MS_LANGID_PAPIAMENTU_NETHERLANDS_ANTILLES	0x0479
#define TT_MS_LANGID_UIGHUR_CHINA	0x0480
#define TT_MS_LANGID_MAORI_NEW_ZEALAND	0x0481
#define TT_MS_LANGID_ARABIC_IRAQ	0x0801
#define TT_MS_LANGID_CHINESE_PRC	0x0804
#define TT_MS_LANGID_GERMAN_SWITZERLAND	0x0807
#define TT_MS_LANGID_ENGLISH_UNITED_KINGDOM	0x0809
#define TT_MS_LANGID_SPANISH_MEXICO	0x080a
#define TT_MS_LANGID_FRENCH_BELGIUM	0x080c
#define TT_MS_LANGID_ITALIAN_SWITZERLAND	0x0810
#define TT_MS_LANGID_KOREAN_JOHAB_KOREA	0x0812
#define TT_MS_LANGID_DUTCH_BELGIUM	0x0813
#define TT_MS_LANGID_NORWEGIAN_NORWAY_NYNORSK	0x0814
#define TT_MS_LANGID_PORTUGUESE_PORTUGAL	0x0816
#define TT_MS_LANGID_MOLDAVIAN_MOLDAVIA	0x0818
#define TT_MS_LANGID_RUSSIAN_MOLDAVIA	0x0819
#define TT_MS_LANGID_SERBIAN_SERBIA_LATIN	0x081a
#define TT_MS_LANGID_SWEDISH_FINLAND	0x081d
#define TT_MS_LANGID_URDU_INDIA	0x0820
#define TT_MS_LANGID_CLASSIC_LITHUANIAN_LITHUANIA	0x0827
#define TT_MS_LANGID_AZERI_AZERBAIJAN_CYRILLIC	0x082c
#define TT_MS_LANGID_SAMI_NORTHERN_SWEDEN	0x083b
#define TT_MS_LANGID_SCOTTISH_GAELIC_UNITED_KINGDOM	0x083c
#define TT_MS_LANGID_MALAY_BRUNEI_DARUSSALAM	0x083e
#define TT_MS_LANGID_UZBEK_UZBEKISTAN_CYRILLIC	0x0843
#define TT_MS_LANGID_BENGALI_BANGLADESH	0x0845
#define TT_MS_LANGID_PUNJABI_ARABIC_PAKISTAN	0x0846
#define TT_MS_LANGID_MONGOLIAN_MONGOLIA_MONGOLIAN	0x0850
#define TT_MS_LANGID_DZONGHKA_BHUTAN	0x0851
#define TT_MS_LANGID_SINDHI_PAKISTAN	0x0859
#define TT_MS_LANGID_TAMAZIGHT_MOROCCO_LATIN	0x085f
#define TT_MS_LANGID_KASHMIRI_SASIA	0x0860
#define TT_MS_LANGID_NEPALI_INDIA	0x0861
#define TT_MS_LANGID_QUECHUA_ECUADOR	0x086b
#define TT_MS_LANGID_TIGRIGNA_ERYTHREA	0x0873
#define TT_MS_LANGID_ARABIC_EGYPT	0x0c01
#define TT_MS_LANGID_CHINESE_HONG_KONG	0x0c04
#define TT_MS_LANGID_GERMAN_AUSTRIA	0x0c07
#define TT_MS_LANGID_ENGLISH_AUSTRALIA	0x0c09
#define TT_MS_LANGID_SPANISH_SPAIN_INTERNATIONAL_SORT	0x0c0a
#define TT_MS_LANGID_FRENCH_CANADA	0x0c0c
#define TT_MS_LANGID_SERBIAN_SERBIA_CYRILLIC	0x0c1a
#define TT_MS_LANGID_SAMI_NORTHERN_FINLAND	0x0C3b
#define TT_MS_LANGID_QUECHUA_PERU	0x0c6b
#define TT_MS_LANGID_ARABIC_LIBYA	0x1001
#define TT_MS_LANGID_CHINESE_SINGAPORE	0x1004
#define TT_MS_LANGID_GERMAN_LUXEMBOURG	0x1007
#define TT_MS_LANGID_ENGLISH_CANADA	0x1009
#define TT_MS_LANGID_SPANISH_GUATEMALA	0x100a
#define TT_MS_LANGID_FRENCH_SWITZERLAND	0x100c
#define TT_MS_LANGID_CROATIAN_BOSNIA_HERZEGOVINA	0x101a
#define TT_MS_LANGID_SAMI_LULE_NORWAY	0x103b
#define TT_MS_LANGID_ARABIC_ALGERIA	0x1401
#define TT_MS_LANGID_CHINESE_MACAU	0x1404
#define TT_MS_LANGID_GERMAN_LIECHTENSTEI	0x1407
#define TT_MS_LANGID_ENGLISH_NEW_ZEALAND	0x1409
#define TT_MS_LANGID_SPANISH_COSTA_RICA	0x140a
#define TT_MS_LANGID_FRENCH_LUXEMBOURG	0x140c
#define TT_MS_LANGID_BOSNIAN_BOSNIA_HERZEGOVINA	0x141a
#define TT_MS_LANGID_SAMI_LULE_SWEDEN	0x143b
#define TT_MS_LANGID_ARABIC_MOROCCO	0x1801
#define TT_MS_LANGID_ENGLISH_IRELAND	0x1809
#define TT_MS_LANGID_SPANISH_PANAMA	0x180a
#define TT_MS_LANGID_FRENCH_MONACO	0x180c
#define TT_MS_LANGID_SERBIAN_BOSNIA_HERZ_CYRILLIC	0x181a
#define TT_MS_LANGID_SERBIAN_BOSNIA_HERZ_LATIN	0x181a
#define TT_MS_LANGID_SAMI_SOUTHERN_NORWAY	0x183b
#define TT_MS_LANGID_ARABIC_TUNISIA	0x1c01
#define TT_MS_LANGID_ENGLISH_SOUTH_AFRICA	0x1c09
#define TT_MS_LANGID_SPANISH_DOMINICAN_REPUBLIC	0x1c0a
#define TT_MS_LANGID_FRENCH_WEST_INDIES	0x1c0c
#define TT_MS_LANGID_SAMI_SOUTHERN_SWEDEN	0x1C3b
#define TT_MS_LANGID_ARABIC_OMAN	0x2001
#define TT_MS_LANGID_ENGLISH_JAMAICA	0x2009
#define TT_MS_LANGID_SPANISH_VENEZUELA	0x200a
#define TT_MS_LANGID_FRENCH_REUNION	0x200c
#define TT_MS_LANGID_SAMI_SKOLT_FINLAND	0x203b
#define TT_MS_LANGID_ARABIC_YEMEN	0x2401
#define TT_MS_LANGID_ENGLISH_CARIBBEAN	0x2409
#define TT_MS_LANGID_SPANISH_COLOMBIA	0x240a
#define TT_MS_LANGID_FRENCH_CONGO	0x240c
#define TT_MS_LANGID_SAMI_INARI_FINLAND	0x243b
#define TT_MS_LANGID_ARABIC_SYRIA	0x2801
#define TT_MS_LANGID_ENGLISH_BELIZE	0x2809
#define TT_MS_LANGID_SPANISH_PERU	0x280a
#define TT_MS_LANGID_FRENCH_SENEGAL	0x280c
#define TT_MS_LANGID_ARABIC_JORDAN	0x2c01
#define TT_MS_LANGID_ENGLISH_TRINIDAD	0x2c09
#define TT_MS_LANGID_SPANISH_ARGENTINA	0x2c0a
#define TT_MS_LANGID_FRENCH_CAMEROON	0x2c0c
#define TT_MS_LANGID_ARABIC_LEBANON	0x3001
#define TT_MS_LANGID_ENGLISH_ZIMBABWE	0x3009
#define TT_MS_LANGID_SPANISH_ECUADOR	0x300a
#define TT_MS_LANGID_FRENCH_COTE_D_IVOIRE	0x300c
#define TT_MS_LANGID_ARABIC_KUWAIT	0x3401
#define TT_MS_LANGID_ENGLISH_PHILIPPINES	0x3409
#define TT_MS_LANGID_SPANISH_CHILE	0x340a
#define TT_MS_LANGID_FRENCH_MALI	0x340c
#define TT_MS_LANGID_ARABIC_UAE	0x3801
#define TT_MS_LANGID_ENGLISH_INDONESIA	0x3809
#define TT_MS_LANGID_SPANISH_URUGUAY	0x380a
#define TT_MS_LANGID_FRENCH_MOROCCO	0x380c
#define TT_MS_LANGID_ARABIC_BAHRAIN	0x3c01
#define TT_MS_LANGID_ENGLISH_HONG_KONG	0x3c09
#define TT_MS_LANGID_SPANISH_PARAGUAY	0x3c0a
#define TT_MS_LANGID_FRENCH_HAITI	0x3c0c
#define TT_MS_LANGID_ARABIC_QATAR	0x4001
#define TT_MS_LANGID_ENGLISH_INDIA	0x4009
#define TT_MS_LANGID_SPANISH_BOLIVIA	0x400a
#define TT_MS_LANGID_ENGLISH_MALAYSIA	0x4409
#define TT_MS_LANGID_SPANISH_EL_SALVADOR	0x440a
#define TT_MS_LANGID_ENGLISH_SINGAPORE	0x4809
#define TT_MS_LANGID_SPANISH_HONDURAS	0x480a
#define TT_MS_LANGID_SPANISH_NICARAGUA	0x4c0a
#define TT_MS_LANGID_SPANISH_PUERTO_RICO	0x500a
#define TT_MS_LANGID_SPANISH_UNITED_STATES	0x540a
#define TT_MS_LANGID_SPANISH_LATIN_AMERICA	0xE40aU
#define TT_MS_LANGID_FRENCH_NORTH_AFRICA	0xE40cU
#define TT_ADOBE_ID_EXPERT	1
#define TT_APPLE_ID_UNICODE_1_1	1
#define TT_ISO_ID_10646	1
#define TT_MAC_ID_JAPANESE	1
#define TT_MAC_LANGID_FRENCH	1
#define TT_MS_ID_UNICODE_CS	1
#define TT_NAME_ID_FONT_FAMILY	1
#define TT_PLATFORM_MACINTOSH	1
#define TT_MAC_ID_GURMUKHI	10
#define TT_MAC_LANGID_HEBREW	10
#define TT_MS_ID_UCS_4	10
#define TT_NAME_ID_DESCRIPTION	10
#define TT_MAC_ID_GUJARATI	11
#define TT_MAC_LANGID_JAPANESE	11
#define TT_NAME_ID_VENDOR_URL	11
#define TT_MAC_ID_ORIYA	12
#define TT_MAC_LANGID_ARABIC	12
#define TT_NAME_ID_DESIGNER_URL	12
#define TT_MAC_LANGID_WELSH	128
#define TT_MAC_LANGID_BASQUE	129
#define TT_MAC_ID_BENGALI	13
#define TT_MAC_LANGID_FINNISH	13
#define TT_NAME_ID_LICENSE	13
#define TT_MAC_LANGID_CATALAN	130
#define TT_MAC_LANGID_LATIN	131
#define TT_MAC_LANGID_QUECHUA	132
#define TT_MAC_LANGID_GUARANI	133
#define TT_MAC_LANGID_AYMARA	134
#define TT_MAC_LANGID_TATAR	135
#define TT_MAC_LANGID_UIGHUR	136
#define TT_MAC_LANGID_DZONGKHA	137
#define TT_MAC_LANGID_JAVANESE	138
#define TT_MAC_LANGID_SUNDANESE	139
#define TT_MAC_ID_TAMIL	14
#define TT_MAC_LANGID_GREEK	14
#define TT_NAME_ID_LICENSE_URL	14
#define TT_MAC_LANGID_GALICIAN	140
#define TT_MAC_LANGID_AFRIKAANS	141
#define TT_MAC_LANGID_BRETON	142
#define TT_MAC_LANGID_INUKTITUT	143
#define TT_MAC_LANGID_SCOTTISH_GAELIC	144
#define TT_MAC_LANGID_MANX_GAELIC	145
#define TT_MAC_LANGID_IRISH_GAELIC	146
#define TT_MAC_LANGID_TONGAN	147
#define TT_MAC_LANGID_GREEK_POLYTONIC	148
#define TT_MAC_LANGID_GREELANDIC	149
#define TT_MAC_ID_TELUGU	15
#define TT_MAC_LANGID_ICELANDIC	15
#define TT_MAC_LANGID_AZERBAIJANI_ROMAN_SCRIPT	150
#define TT_MAC_ID_KANNADA	16
#define TT_MAC_LANGID_MALTESE	16
#define TT_NAME_ID_PREFERRED_FAMILY	16
#define TT_MAC_ID_MALAYALAM	17
#define TT_MAC_LANGID_TURKISH	17
#define TT_NAME_ID_PREFERRED_SUBFAMILY	17
#define TT_MAC_ID_SINHALESE	18
#define TT_MAC_LANGID_CROATIAN	18
#define TT_NAME_ID_MAC_FULL_NAME	18
#define TT_MAC_ID_BURMESE	19
#define TT_MAC_LANGID_CHINESE_TRADITIONAL	19
#define TT_NAME_ID_SAMPLE_TEXT	19
#define TT_ADOBE_ID_CUSTOM	2
#define TT_APPLE_ID_ISO_10646	2
#define TT_ISO_ID_8859_1	2
#define TT_MAC_ID_TRADITIONAL_CHINESE	2
#define TT_MAC_LANGID_GERMAN	2
#define TT_MS_ID_SJIS	2
#define TT_NAME_ID_FONT_SUBFAMILY	2
#define TT_PLATFORM_ISO	2
#define TT_MAC_ID_KHMER	20
#define TT_MAC_LANGID_URDU	20
#define TT_NAME_ID_CID_FINDFONT_NAME	20
#define TT_MAC_ID_THAI	21
#define TT_MAC_LANGID_HINDI	21
#define TT_MAC_ID_LAOTIAN	22
#define TT_MAC_LANGID_THAI	22
#define TT_MAC_ID_GEORGIAN	23
#define TT_MAC_LANGID_KOREAN	23
#define TT_MAC_ID_ARMENIAN	24
#define TT_MAC_LANGID_LITHUANIAN	24
#define TT_MAC_ID_MALDIVIAN	25
#define TT_MAC_ID_SIMPLIFIED_CHINESE	25
#define TT_MAC_LANGID_POLISH	25
#define TT_MAC_ID_TIBETAN	26
#define TT_MAC_LANGID_HUNGARIAN	26
#define TT_MAC_ID_MONGOLIAN	27
#define TT_MAC_LANGID_ESTONIAN	27
#define TT_MAC_ID_GEEZ	28
#define TT_MAC_LANGID_LETTISH	28
#define TT_MAC_ID_SLAVIC	29
#define TT_MAC_LANGID_SAAMISK	29
#define TT_ADOBE_ID_LATIN_1	3
#define TT_APPLE_ID_UNICODE_2_0	3
#define TT_MAC_ID_KOREAN	3
#define TT_MAC_LANGID_ITALIAN	3
#define TT_MS_ID_GB2312	3
#define TT_NAME_ID_UNIQUE_ID	3
#define TT_PLATFORM_MICROSOFT	3
#define TT_MAC_ID_VIETNAMESE	30
#define TT_MAC_LANGID_FAEROESE	30
#define TT_MAC_ID_SINDHI	31
#define TT_MAC_LANGID_FARSI	31
#define TT_MAC_ID_UNINTERP	32
#define TT_MAC_LANGID_RUSSIAN	32
#define TT_MAC_LANGID_CHINESE_SIMPLIFIED	33
#define TT_MAC_LANGID_FLEMISH	34
#define TT_MAC_LANGID_IRISH	35
#define TT_MAC_LANGID_ALBANIAN	36
#define TT_MAC_LANGID_ROMANIAN	37
#define TT_MAC_LANGID_CZECH	38
#define TT_MAC_LANGID_SLOVAK	39
#define TT_APPLE_ID_UNICODE_32	4
#define TT_MAC_ID_ARABIC	4
#define TT_MAC_LANGID_DUTCH	4
#define TT_MS_ID_BIG_5	4
#define TT_NAME_ID_FULL_NAME	4
#define TT_PLATFORM_CUSTOM	4
#define TT_MAC_LANGID_SLOVENIAN	40
#define TT_MAC_LANGID_YIDDISH	41
#define TT_MAC_LANGID_SERBIAN	42
#define TT_MAC_LANGID_MACEDONIAN	43
#define TT_MAC_LANGID_BULGARIAN	44
#define TT_MAC_LANGID_UKRAINIAN	45
#define TT_MAC_LANGID_BYELORUSSIAN	46
#define TT_MAC_LANGID_UZBEK	47
#define TT_MAC_LANGID_KAZAKH	48
#define TT_MAC_LANGID_AZERBAIJANI	49
#define TT_MAC_LANGID_AZERBAIJANI_CYRILLIC_SCRIPT	49
#define TT_MAC_ID_HEBREW	5
#define TT_MAC_LANGID_SWEDISH	5
#define TT_MS_ID_WANSUNG	5
#define TT_NAME_ID_VERSION_STRING	5
#define TT_MAC_LANGID_AZERBAIJANI_ARABIC_SCRIPT	50
#define TT_MAC_LANGID_ARMENIAN	51
#define TT_MAC_LANGID_GEORGIAN	52
#define TT_MAC_LANGID_MOLDAVIAN	53
#define TT_MAC_LANGID_KIRGHIZ	54
#define TT_MAC_LANGID_TAJIKI	55
#define TT_MAC_LANGID_TURKMEN	56
#define TT_MAC_LANGID_MONGOLIAN	57
#define TT_MAC_LANGID_MONGOLIAN_MONGOLIAN_SCRIPT	57
#define TT_MAC_LANGID_MONGOLIAN_CYRILLIC_SCRIPT	58
#define TT_MAC_LANGID_PASHTO	59
#define TT_MAC_ID_GREEK	6
#define TT_MAC_LANGID_SPANISH	6
#define TT_MS_ID_JOHAB	6
#define TT_NAME_ID_PS_NAME	6
#define TT_MAC_LANGID_KURDISH	60
#define TT_MAC_LANGID_KASHMIRI	61
#define TT_MAC_LANGID_SINDHI	62
#define TT_MAC_LANGID_TIBETAN	63
#define TT_MAC_LANGID_NEPALI	64
#define TT_MAC_LANGID_SANSKRIT	65
#define TT_MAC_LANGID_MARATHI	66
#define TT_MAC_LANGID_BENGALI	67
#define TT_MAC_LANGID_ASSAMESE	68
#define TT_MAC_LANGID_GUJARATI	69
#define TT_MAC_ID_RUSSIAN	7
#define TT_MAC_LANGID_DANISH	7
#define TT_NAME_ID_TRADEMARK	7
#define TT_PLATFORM_ADOBE	7
#define TT_MAC_LANGID_PUNJABI	70
#define TT_MAC_LANGID_ORIYA	71
#define TT_MAC_LANGID_MALAYALAM	72
#define TT_MAC_LANGID_KANNADA	73
#define TT_MAC_LANGID_TAMIL	74
#define TT_MAC_LANGID_TELUGU	75
#define TT_MAC_LANGID_SINHALESE	76
#define TT_MAC_LANGID_BURMESE	77
#define TT_MAC_LANGID_KHMER	78
#define TT_MAC_LANGID_LAO	79
#define TT_MAC_ID_RSYMBOL	8
#define TT_MAC_LANGID_PORTUGUESE	8
#define TT_NAME_ID_MANUFACTURER	8
#define TT_MAC_LANGID_VIETNAMESE	80
#define TT_MAC_LANGID_INDONESIAN	81
#define TT_MAC_LANGID_TAGALOG	82
#define TT_MAC_LANGID_MALAY_ROMAN_SCRIPT	83
#define TT_MAC_LANGID_MALAY_ARABIC_SCRIPT	84
#define TT_MAC_LANGID_AMHARIC	85
#define TT_MAC_LANGID_TIGRINYA	86
#define TT_MAC_LANGID_GALLA	87
#define TT_MAC_LANGID_SOMALI	88
#define TT_MAC_LANGID_SWAHILI	89
#define TT_MAC_ID_DEVANAGARI	9
#define TT_MAC_LANGID_NORWEGIAN	9
#define TT_NAME_ID_DESIGNER	9
#define TT_MAC_LANGID_RUANDA	90
#define TT_MAC_LANGID_RUNDI	91
#define TT_MAC_LANGID_CHEWA	92
#define TT_MAC_LANGID_MALAGASY	93
#define TT_MAC_LANGID_ESPERANTO	94
#define TT_MS_LANGID_DIVEHI_MALDIVES	TT_MS_LANGID_DHIVEHI_MALDIVES
#define TT_MS_LANGID_TIBETAN_BHUTAN	TT_MS_LANGID_DZONGHKA_BHUTAN
#define TT_MS_LANGID_FRENCH_ZAIRE	TT_MS_LANGID_FRENCH_CONGO
#define TT_MS_LANGID_KASHMIRI_INDIA	TT_MS_LANGID_KASHMIRI_SASIA
#define TT_MS_LANGID_TIGRIGNA_ERYTREA	TT_MS_LANGID_TIGRIGNA_ERYTHREA
#define TT_UCR_ARABIC_PRESENTATION_FORMS_A	TT_UCR_ARABIC_PRESENTATIONS_A
#define TT_UCR_ARABIC_PRESENTATION_FORMS_B	TT_UCR_ARABIC_PRESENTATIONS_B
#define TT_UCR_KANBUN	TT_UCR_CJK_MISC
#define TT_UCR_COMBINING_DIACRITICAL_MARKS	TT_UCR_COMBINING_DIACRITICS
</SCREEN>
</SECT2>
<SECT2>
<TITLE>freetype/tttables.h</TITLE>
<PARA>
</PARA>
<SCREEN>

typedef struct FT_CharMapRec_ *FT_CharMap;
typedef enum {
    ft_sfnt_head = 0,
    ft_sfnt_maxp = 1,
    ft_sfnt_os2 = 2,
    ft_sfnt_hhea = 3,
    ft_sfnt_vhea = 4,
    ft_sfnt_post = 5,
    ft_sfnt_pclt = 6,
    sfnt_max = 7
} FT_Sfnt_Tag;
</SCREEN>
</SECT2>
<SECT2>
<TITLE>freetype/tttags.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define TTAG_avar	FT_MAKE_TAG( 'a', 'v', 'a', 'r' )
#define TTAG_BASE	FT_MAKE_TAG( 'B', 'A', 'S', 'E' )
#define TTAG_bdat	FT_MAKE_TAG( 'b', 'd', 'a', 't' )
#define TTAG_bhed	FT_MAKE_TAG( 'b', 'h', 'e', 'd' )
#define TTAG_bloc	FT_MAKE_TAG( 'b', 'l', 'o', 'c' )
#define TTAG_CFF	FT_MAKE_TAG( 'C', 'F', 'F', ' ' )
#define TTAG_cmap	FT_MAKE_TAG( 'c', 'm', 'a', 'p' )
#define TTAG_cvar	FT_MAKE_TAG( 'c', 'v', 'a', 'r' )
#define TTAG_cvt	FT_MAKE_TAG( 'c', 'v', 't', ' ' )
#define TTAG_DSIG	FT_MAKE_TAG( 'D', 'S', 'I', 'G' )
#define TTAG_EBDT	FT_MAKE_TAG( 'E', 'B', 'D', 'T' )
#define TTAG_EBLC	FT_MAKE_TAG( 'E', 'B', 'L', 'C' )
#define TTAG_EBSC	FT_MAKE_TAG( 'E', 'B', 'S', 'C' )
#define TTAG_fpgm	FT_MAKE_TAG( 'f', 'p', 'g', 'm' )
#define TTAG_fvar	FT_MAKE_TAG( 'f', 'v', 'a', 'r' )
#define TTAG_gasp	FT_MAKE_TAG( 'g', 'a', 's', 'p' )
#define TTAG_GDEF	FT_MAKE_TAG( 'G', 'D', 'E', 'F' )
#define TTAG_glyf	FT_MAKE_TAG( 'g', 'l', 'y', 'f' )
#define TTAG_GPOS	FT_MAKE_TAG( 'G', 'P', 'O', 'S' )
#define TTAG_GSUB	FT_MAKE_TAG( 'G', 'S', 'U', 'B' )
#define TTAG_gvar	FT_MAKE_TAG( 'g', 'v', 'a', 'r' )
#define TTAG_hdmx	FT_MAKE_TAG( 'h', 'd', 'm', 'x' )
#define TTAG_head	FT_MAKE_TAG( 'h', 'e', 'a', 'd' )
#define TTAG_hhea	FT_MAKE_TAG( 'h', 'h', 'e', 'a' )
#define TTAG_hmtx	FT_MAKE_TAG( 'h', 'm', 't', 'x' )
#define TTAG_JSTF	FT_MAKE_TAG( 'J', 'S', 'T', 'F' )
#define TTAG_kern	FT_MAKE_TAG( 'k', 'e', 'r', 'n' )
#define TTAG_loca	FT_MAKE_TAG( 'l', 'o', 'c', 'a' )
#define TTAG_LTSH	FT_MAKE_TAG( 'L', 'T', 'S', 'H' )
#define TTAG_maxp	FT_MAKE_TAG( 'm', 'a', 'x', 'p' )
#define TTAG_MMFX	FT_MAKE_TAG( 'M', 'M', 'F', 'X' )
#define TTAG_MMSD	FT_MAKE_TAG( 'M', 'M', 'S', 'D' )
#define TTAG_name	FT_MAKE_TAG( 'n', 'a', 'm', 'e' )
#define TTAG_OS2	FT_MAKE_TAG( 'O', 'S', '/', '2' )
#define TTAG_OTTO	FT_MAKE_TAG( 'O', 'T', 'T', 'O' )
#define TTAG_PCLT	FT_MAKE_TAG( 'P', 'C', 'L', 'T' )
#define TTAG_post	FT_MAKE_TAG( 'p', 'o', 's', 't' )
#define TTAG_prep	FT_MAKE_TAG( 'p', 'r', 'e', 'p' )
#define TTAG_true	FT_MAKE_TAG( 't', 'r', 'u', 'e' )
#define TTAG_ttc	FT_MAKE_TAG( 't', 't', 'c', ' ' )
#define TTAG_ttcf	FT_MAKE_TAG( 't', 't', 'c', 'f' )
#define TTAG_VDMX	FT_MAKE_TAG( 'V', 'D', 'M', 'X' )
#define TTAG_vhea	FT_MAKE_TAG( 'v', 'h', 'e', 'a' )
#define TTAG_vmtx	FT_MAKE_TAG( 'v', 'm', 't', 'x' )
</SCREEN>
</SECT2>
<SECT2>
<TITLE>freetype/ttunpat.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define FT_PARAM_TAG_UNPATENTED_HINTING	FT_MAKE_TAG( 'u', 'n', 'p', 'a' )
</SCREEN>
</SECT2>
</SECT1>
<!-- End of text generated from database -->
<!--    by $Header: mklibspec 1.82 2006/03/29 19:10:18 mats Exp 0 -->

</CHAPTER>

</PART>
