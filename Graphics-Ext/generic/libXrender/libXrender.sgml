<PART ID="toclibXrender">
<TITLE>Xrender library</TITLE>

<CHAPTER id=libXrenderchap>
<TITLE>Libraries</TITLE>
<!-- Start of generated text - do not edit! -->
<!-- generated from the LSB specification database by mklibspec -->
<SECT1 ID=libXrender>
<TITLE>Interfaces for libXrender</TITLE>
<PARA>
<XREF LINKEND="lib-libXrender-def"> defines the library name and shared object name
for the libXrender library
</PARA>
<TABLE id="lib-libXrender-def">
<TITLE>libXrender Definition</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Library:</ENTRY>
<ENTRY>libXrender</ENTRY>
</ROW>
<ROW>
<ENTRY>SONAME:</ENTRY>
<ENTRY>libXrender.so.1</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The behavior of the interfaces in this library is specified by the following specifications:<SIMPLELIST COLUMNS=1>
<MEMBER ID='REFSTD.libXrender.1'>
[LSB] <XREF LINKEND="std.LSB">
</MEMBER>
</SIMPLELIST>
</PARA>
<!-- debug: database interface name X Rendering Extension -->
<SECT2>
<!--libgroup-->
<TITLE>X Rendering Extension</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Interfaces for X Rendering Extension</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic functions
for X Rendering Extension specified in <XREF linkend="tbl-libXrender-x-ren-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<TABLE id="tbl-libXrender-x-ren-ints">
<TITLE>libXrender - X Rendering Extension Function Interfaces</TITLE>
<TGROUP COLS=3>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>XRenderAddGlyphs</primary></indexterm>XRenderAddGlyphs <LINK LINKEND="REFSTD.libXrender.1">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>XRenderAddTraps</primary></indexterm>XRenderAddTraps <LINK LINKEND="REFSTD.libXrender.1">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>XRenderChangePicture</primary></indexterm>XRenderChangePicture <LINK LINKEND="REFSTD.libXrender.1">[LSB]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XRenderComposite</primary></indexterm>XRenderComposite <LINK LINKEND="REFSTD.libXrender.1">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>XRenderCompositeDoublePoly</primary></indexterm>XRenderCompositeDoublePoly <LINK LINKEND="REFSTD.libXrender.1">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>XRenderCompositeString16</primary></indexterm>XRenderCompositeString16 <LINK LINKEND="REFSTD.libXrender.1">[LSB]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XRenderCompositeString32</primary></indexterm>XRenderCompositeString32 <LINK LINKEND="REFSTD.libXrender.1">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>XRenderCompositeString8</primary></indexterm>XRenderCompositeString8 <LINK LINKEND="REFSTD.libXrender.1">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>XRenderCompositeText16</primary></indexterm>XRenderCompositeText16 <LINK LINKEND="REFSTD.libXrender.1">[LSB]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XRenderCompositeText32</primary></indexterm>XRenderCompositeText32 <LINK LINKEND="REFSTD.libXrender.1">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>XRenderCompositeText8</primary></indexterm>XRenderCompositeText8 <LINK LINKEND="REFSTD.libXrender.1">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>XRenderCompositeTrapezoids</primary></indexterm>XRenderCompositeTrapezoids <LINK LINKEND="REFSTD.libXrender.1">[LSB]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XRenderCompositeTriFan</primary></indexterm>XRenderCompositeTriFan <LINK LINKEND="REFSTD.libXrender.1">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>XRenderCompositeTriStrip</primary></indexterm>XRenderCompositeTriStrip <LINK LINKEND="REFSTD.libXrender.1">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>XRenderCompositeTriangles</primary></indexterm>XRenderCompositeTriangles <LINK LINKEND="REFSTD.libXrender.1">[LSB]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XRenderCreateAnimCursor</primary></indexterm>XRenderCreateAnimCursor <LINK LINKEND="REFSTD.libXrender.1">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>XRenderCreateConicalGradient</primary></indexterm>XRenderCreateConicalGradient <LINK LINKEND="REFSTD.libXrender.1">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>XRenderCreateCursor</primary></indexterm>XRenderCreateCursor <LINK LINKEND="REFSTD.libXrender.1">[LSB]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XRenderCreateGlyphSet</primary></indexterm>XRenderCreateGlyphSet <LINK LINKEND="REFSTD.libXrender.1">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>XRenderCreateLinearGradient</primary></indexterm>XRenderCreateLinearGradient <LINK LINKEND="REFSTD.libXrender.1">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>XRenderCreatePicture</primary></indexterm>XRenderCreatePicture <LINK LINKEND="REFSTD.libXrender.1">[LSB]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XRenderCreateRadialGradient</primary></indexterm>XRenderCreateRadialGradient <LINK LINKEND="REFSTD.libXrender.1">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>XRenderCreateSolidFill</primary></indexterm>XRenderCreateSolidFill <LINK LINKEND="REFSTD.libXrender.1">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>XRenderFillRectangle</primary></indexterm>XRenderFillRectangle <LINK LINKEND="REFSTD.libXrender.1">[LSB]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XRenderFillRectangles</primary></indexterm>XRenderFillRectangles <LINK LINKEND="REFSTD.libXrender.1">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>XRenderFindFormat</primary></indexterm>XRenderFindFormat <LINK LINKEND="REFSTD.libXrender.1">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>XRenderFindStandardFormat</primary></indexterm>XRenderFindStandardFormat <LINK LINKEND="REFSTD.libXrender.1">[LSB]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XRenderFindVisualFormat</primary></indexterm>XRenderFindVisualFormat <LINK LINKEND="REFSTD.libXrender.1">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>XRenderFreeGlyphSet</primary></indexterm>XRenderFreeGlyphSet <LINK LINKEND="REFSTD.libXrender.1">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>XRenderFreeGlyphs</primary></indexterm>XRenderFreeGlyphs <LINK LINKEND="REFSTD.libXrender.1">[LSB]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XRenderFreePicture</primary></indexterm>XRenderFreePicture <LINK LINKEND="REFSTD.libXrender.1">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>XRenderParseColor</primary></indexterm>XRenderParseColor <LINK LINKEND="REFSTD.libXrender.1">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>XRenderQueryExtension</primary></indexterm>XRenderQueryExtension <LINK LINKEND="REFSTD.libXrender.1">[LSB]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XRenderQueryFilters</primary></indexterm>XRenderQueryFilters <LINK LINKEND="REFSTD.libXrender.1">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>XRenderQueryFormats</primary></indexterm>XRenderQueryFormats <LINK LINKEND="REFSTD.libXrender.1">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>XRenderQueryPictIndexValues</primary></indexterm>XRenderQueryPictIndexValues <LINK LINKEND="REFSTD.libXrender.1">[LSB]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XRenderQuerySubpixelOrder</primary></indexterm>XRenderQuerySubpixelOrder <LINK LINKEND="REFSTD.libXrender.1">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>XRenderQueryVersion</primary></indexterm>XRenderQueryVersion <LINK LINKEND="REFSTD.libXrender.1">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>XRenderReferenceGlyphSet</primary></indexterm>XRenderReferenceGlyphSet <LINK LINKEND="REFSTD.libXrender.1">[LSB]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XRenderSetPictureClipRectangles</primary></indexterm>XRenderSetPictureClipRectangles <LINK LINKEND="REFSTD.libXrender.1">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>XRenderSetPictureClipRegion</primary></indexterm>XRenderSetPictureClipRegion <LINK LINKEND="REFSTD.libXrender.1">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>XRenderSetPictureFilter</primary></indexterm>XRenderSetPictureFilter <LINK LINKEND="REFSTD.libXrender.1">[LSB]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XRenderSetPictureTransform</primary></indexterm>XRenderSetPictureTransform <LINK LINKEND="REFSTD.libXrender.1">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>XRenderSetSubpixelOrder</primary></indexterm>XRenderSetSubpixelOrder <LINK LINKEND="REFSTD.libXrender.1">[LSB]</LINK></ENTRY>
<ENTRY></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>
</SECT2>
</SECT1>
<SECT1 ID=libXrender-ddefs>
<TITLE>Data Definitions for libXrender</TITLE>
<PARA>
This section defines global identifiers and their values that are associated
with interfaces contained in libXrender.
These definitions are organized into groups that
correspond to system headers. This convention is used as a
convenience for the reader, and does not imply the existence
of these headers, or their content.
Where an interface is defined as requiring a particular system header file
all of the data definitions for that system header file presented here shall be in effect.
</PARA>
<PARA>
This section gives data definitions to promote binary application
portability, not to repeat source interface definitions available
elsewhere. System providers and application developers should use this ABI
to supplement - not to replace - source interface definition specifications.
</PARA>
<PARA>
This specification uses the <XREF LINKEND='std.ISOC99'> C Language as the reference programming language, and data definitions are specified in ISO C format. The C language is used here as a convenient notation. Using a C language description of these data objects does not preclude their use by other programming languages.</PARA>
<SECT2>
<TITLE>X11/extensions/Xrender.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define XFixedToDouble(f)	(((XDouble) (f)) / 65536)
#define XDoubleToFixed(f)	((XFixed) ((f) * 65536))
#define PictFormatID	(1 &lt;&lt; 0)
#define PictFormatType	(1 &lt;&lt; 1)
#define PictFormatAlphaMask	(1 &lt;&lt; 10)
#define PictFormatColormap	(1 &lt;&lt; 11)
#define PictFormatDepth	(1 &lt;&lt; 2)
#define PictFormatRed	(1 &lt;&lt; 3)
#define PictFormatRedMask	(1 &lt;&lt; 4)
#define PictFormatGreen	(1 &lt;&lt; 5)
#define PictFormatGreenMask	(1 &lt;&lt; 6)
#define PictFormatBlue	(1 &lt;&lt; 7)
#define PictFormatBlueMask	(1 &lt;&lt; 8)
#define PictFormatAlpha	(1 &lt;&lt; 9)
#define PictStandardARGB32	0
#define PictStandardRGB24	1
#define PictStandardA8	2
#define PictStandardA4	3
#define PictStandardA1	4
#define PictStandardNUM	5

typedef long unsigned int GlyphSet;
typedef int XFixed;
typedef struct _XPointFixed {
    XFixed x;
    XFixed y;
} XPointFixed;
typedef struct _XCircle {
    XFixed x;
    XFixed y;
    XFixed radius;
} XCircle;
typedef double XDouble;
typedef struct _XSpanFix {
    XFixed left;
    XFixed right;
    XFixed y;
} XSpanFix;
typedef struct _XLineFixed {
    XPointFixed p1;
    XPointFixed p2;
} XLineFixed;

typedef struct _XTrapezoid {
    XFixed top;
    XFixed bottom;
    XLineFixed left;
    XLineFixed right;
} XTrapezoid;
typedef struct {
    unsigned short red;
    unsigned short green;
    unsigned short blue;
    unsigned short alpha;
} XRenderColor;
typedef long unsigned int Glyph;
typedef long unsigned int PictFormat;
typedef struct {
    short red;
    short redMask;
    short green;
    short greenMask;
    short blue;
    short blueMask;
    short alpha;
    short alphaMask;
} XRenderDirectFormat;
typedef struct {
    PictFormat id;
    int type;
    int depth;
    XRenderDirectFormat direct;
    Colormap colormap;
} XRenderPictFormat;
typedef struct _XGlyphInfo {
    unsigned short width;
    unsigned short height;
    short x;
    short y;
    short xOff;
    short yOff;
} XGlyphInfo;
typedef struct _XFilters {
    int nfilter;
    char **filter;
    int nalias;
    short int *alias;
} XFilters;
typedef struct _XTransform {
    XFixed matrix[3][3];
} XTransform;
typedef struct _XAnimCursor {
    Cursor cursor;
    long unsigned int delay;
} XAnimCursor;
typedef struct _XRadialGradient {
    XCircle inner;
    XCircle outer;
} XRadialGradient;
typedef struct _XGlyphElt32 {
    GlyphSet glyphset;
    const unsigned int *chars;
    int nchars;
    int xOff;
    int yOff;
} XGlyphElt32;
typedef struct _XGlyphElt8 {
    GlyphSet glyphset;
    const char *chars;
    int nchars;
    int xOff;
    int yOff;
} XGlyphElt8;
typedef struct _XConicalGradient {
    XPointFixed center;
    XFixed angle;
} XConicalGradient;
typedef struct _XLinearGradient {
    XPointFixed p1;
    XPointFixed p2;
} XLinearGradient;
typedef struct _XPointDouble {
    XDouble x;
    XDouble y;
} XPointDouble;
typedef struct _XRenderPictureAttributes {
    int repeat;
    Picture alpha_map;
    int alpha_x_origin;
    int alpha_y_origin;
    int clip_x_origin;
    int clip_y_origin;
    Pixmap clip_mask;
    int graphics_exposures;
    int subwindow_mode;
    int poly_edge;
    int poly_mode;
    Atom dither;
    int component_alpha;
} XRenderPictureAttributes;
typedef struct _XTrap {
    XSpanFix top;
    XSpanFix bottom;
} XTrap;
typedef struct _XIndexValue {
    long unsigned int pixel;
    unsigned short red;
    unsigned short green;
    unsigned short blue;
    unsigned short alpha;
} XIndexValue;
typedef struct _XGlyphElt16 {
    GlyphSet glyphset;
    const short unsigned int *chars;
    int nchars;
    int xOff;
    int yOff;
} XGlyphElt16;
typedef struct _XTriangle {
    XPointFixed p1;
    XPointFixed p2;
    XPointFixed p3;
} XTriangle;
extern void XRenderAddGlyphs(Display * dpy, GlyphSet glyphset,
			     const Glyph * gids, const XGlyphInfo * glyphs,
			     int nglyphs, const char *images,
			     int nbyte_images);
extern void XRenderAddTraps(Display * dpy, Picture picture, int xOff,
			    int yOff, const XTrap * traps, int ntrap);
extern void XRenderChangePicture(Display * dpy, Picture picture,
				 long unsigned int valuemask,
				 const XRenderPictureAttributes *
				 attributes);
extern void XRenderComposite(Display * dpy, int op, Picture src,
			     Picture mask, Picture dst, int src_x,
			     int src_y, int mask_x, int mask_y, int dst_x,
			     int dst_y, unsigned int width,
			     unsigned int height);
extern void XRenderCompositeDoublePoly(Display * dpy, int op, Picture src,
				       Picture dst,
				       const XRenderPictFormat *
				       maskFormat, int xSrc, int ySrc,
				       int xDst, int yDst,
				       const XPointDouble * fpoints,
				       int npoints, int winding);
extern void XRenderCompositeString16(Display * dpy, int op, Picture src,
				     Picture dst,
				     const XRenderPictFormat * maskFormat,
				     GlyphSet glyphset, int xSrc, int ySrc,
				     int xDst, int yDst,
				     const short unsigned int *string,
				     int nchar);
extern void XRenderCompositeString32(Display * dpy, int op, Picture src,
				     Picture dst,
				     const XRenderPictFormat * maskFormat,
				     GlyphSet glyphset, int xSrc, int ySrc,
				     int xDst, int yDst,
				     const unsigned int *string,
				     int nchar);
extern void XRenderCompositeString8(Display * dpy, int op, Picture src,
				    Picture dst,
				    const XRenderPictFormat * maskFormat,
				    GlyphSet glyphset, int xSrc, int ySrc,
				    int xDst, int yDst, const char *string,
				    int nchar);
extern void XRenderCompositeText16(Display * dpy, int op, Picture src,
				   Picture dst,
				   const XRenderPictFormat * maskFormat,
				   int xSrc, int ySrc, int xDst, int yDst,
				   const XGlyphElt16 * elts, int nelt);
extern void XRenderCompositeText32(Display * dpy, int op, Picture src,
				   Picture dst,
				   const XRenderPictFormat * maskFormat,
				   int xSrc, int ySrc, int xDst, int yDst,
				   const XGlyphElt32 * elts, int nelt);
extern void XRenderCompositeText8(Display * dpy, int op, Picture src,
				  Picture dst,
				  const XRenderPictFormat * maskFormat,
				  int xSrc, int ySrc, int xDst, int yDst,
				  const XGlyphElt8 * elts, int nelt);
extern void XRenderCompositeTrapezoids(Display * dpy, int op, Picture src,
				       Picture dst,
				       const XRenderPictFormat *
				       maskFormat, int xSrc, int ySrc,
				       const XTrapezoid * traps,
				       int ntrap);
extern void XRenderCompositeTriFan(Display * dpy, int op, Picture src,
				   Picture dst,
				   const XRenderPictFormat * maskFormat,
				   int xSrc, int ySrc,
				   const XPointFixed * points, int npoint);
extern void XRenderCompositeTriStrip(Display * dpy, int op, Picture src,
				     Picture dst,
				     const XRenderPictFormat * maskFormat,
				     int xSrc, int ySrc,
				     const XPointFixed * points,
				     int npoint);
extern void XRenderCompositeTriangles(Display * dpy, int op, Picture src,
				      Picture dst,
				      const XRenderPictFormat * maskFormat,
				      int xSrc, int ySrc,
				      const XTriangle * triangles,
				      int ntriangle);
extern Cursor XRenderCreateAnimCursor(Display * dpy, int ncursor,
				      XAnimCursor * cursors);
extern Picture XRenderCreateConicalGradient(Display * dpy,
					    const XConicalGradient *
					    gradient, const XFixed * stops,
					    const XRenderColor * colors,
					    int nstops);
extern Cursor XRenderCreateCursor(Display * dpy, Picture source,
				  unsigned int x, unsigned int y);
extern GlyphSet XRenderCreateGlyphSet(Display * dpy,
				      const XRenderPictFormat * format);
extern Picture XRenderCreateLinearGradient(Display * dpy,
					   const XLinearGradient *
					   gradient, const XFixed * stops,
					   const XRenderColor * colors,
					   int nstops);
extern Picture XRenderCreatePicture(Display * dpy, Drawable drawable,
				    const XRenderPictFormat * format,
				    long unsigned int valuemask,
				    const XRenderPictureAttributes *
				    attributes);
extern Picture XRenderCreateRadialGradient(Display * dpy,
					   const XRadialGradient *
					   gradient, const XFixed * stops,
					   const XRenderColor * colors,
					   int nstops);
extern Picture XRenderCreateSolidFill(Display * dpy,
				      const XRenderColor * color);
extern void XRenderFillRectangle(Display * dpy, int op, Picture dst,
				 const XRenderColor * color, int x, int y,
				 unsigned int width, unsigned int height);
extern void XRenderFillRectangles(Display * dpy, int op, Picture dst,
				  const XRenderColor * color,
				  const XRectangle * rectangles,
				  int n_rects);
extern XRenderPictFormat *XRenderFindFormat(Display * dpy,
					    long unsigned int mask,
					    const XRenderPictFormat *
					    templ, int count);
extern XRenderPictFormat *XRenderFindStandardFormat(Display * dpy,
						    int format);
extern XRenderPictFormat *XRenderFindVisualFormat(Display * dpy,
						  const Visual * visual);
extern void XRenderFreeGlyphSet(Display * dpy, GlyphSet glyphset);
extern void XRenderFreeGlyphs(Display * dpy, GlyphSet glyphset,
			      const Glyph * gids, int nglyphs);
extern void XRenderFreePicture(Display * dpy, Picture picture);
extern int XRenderParseColor(Display * dpy, char *spec,
			     XRenderColor * def);
extern int XRenderQueryExtension(Display * dpy, int *event_basep,
				 int *error_basep);
extern XFilters *XRenderQueryFilters(Display * dpy, Drawable drawable);
extern int XRenderQueryFormats(Display * dpy);
extern XIndexValue *XRenderQueryPictIndexValues(Display * dpy,
						const XRenderPictFormat *
						format, int *num);
extern int XRenderQuerySubpixelOrder(Display * dpy, int screen);
extern int XRenderQueryVersion(Display * dpy, int *major_versionp,
			       int *minor_versionp);
extern GlyphSet XRenderReferenceGlyphSet(Display * dpy, GlyphSet existing);
extern void XRenderSetPictureClipRectangles(Display * dpy, Picture picture,
					    int xOrigin, int yOrigin,
					    const XRectangle * rects,
					    int n);
extern void XRenderSetPictureClipRegion(Display * dpy, Picture picture,
					Region r);
extern void XRenderSetPictureTransform(Display * dpy, Picture picture,
				       XTransform * transform);
extern int XRenderSetSubpixelOrder(Display * dpy, int screen,
				   int subpixel);
</SCREEN>
</SECT2>
<SECT2>
<TITLE>X11/extensions/render.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define FilterBest	"best"
#define FilterBilinear	"bilinear"
#define FilterConvolution	"convolution"
#define FilterFast	"fast"
#define FilterGood	"good"
#define FilterNearest	"nearest"
#define RENDER_NAME	"RENDER"
#define CPRepeat	(1 &lt;&lt; 0)
#define CPAlphaMap	(1 &lt;&lt; 1)
#define CPPolyMode	(1 &lt;&lt; 10)
#define CPDither	(1 &lt;&lt; 11)
#define CPComponentAlpha	(1 &lt;&lt; 12)
#define CPAlphaXOrigin	(1 &lt;&lt; 2)
#define CPAlphaYOrigin	(1 &lt;&lt; 3)
#define CPClipXOrigin	(1 &lt;&lt; 4)
#define CPClipYOrigin	(1 &lt;&lt; 5)
#define CPClipMask	(1 &lt;&lt; 6)
#define CPGraphicsExposure	(1 &lt;&lt; 7)
#define CPSubwindowMode	(1 &lt;&lt; 8)
#define CPPolyEdge	(1 &lt;&lt; 9)
#define RenderNumberErrors	(BadGlyph+1)
#define RenderNumberRequests	(X_RenderCreateConicalGradient+1)
#define FilterAliasNone	-1
#define BadPictFormat	0
#define PictOpClear	0
#define PictOpMinimum	0
#define PictTypeIndexed	0
#define PolyEdgeSharp	0
#define PolyModePrecise	0
#define RENDER_MAJOR	0
#define RepeatNone	0
#define SubPixelUnknown	0
#define X_RenderQueryVersion	0
#define PictOpDisjointClear	0x10
#define PictOpDisjointMinimum	0x10
#define PictOpDisjointSrc	0x11
#define PictOpDisjointDst	0x12
#define PictOpDisjointOver	0x13
#define PictOpDisjointOverReverse	0x14
#define PictOpDisjointIn	0x15
#define PictOpDisjointInReverse	0x16
#define PictOpDisjointOut	0x17
#define PictOpDisjointOutReverse	0x18
#define PictOpDisjointAtop	0x19
#define PictOpDisjointAtopReverse	0x1a
#define PictOpDisjointMaximum	0x1b
#define PictOpDisjointXor	0x1b
#define PictOpConjointClear	0x20
#define PictOpConjointMinimum	0x20
#define PictOpConjointSrc	0x21
#define PictOpConjointDst	0x22
#define PictOpConjointOver	0x23
#define PictOpConjointOverReverse	0x24
#define PictOpConjointIn	0x25
#define PictOpConjointInReverse	0x26
#define PictOpConjointOut	0x27
#define PictOpConjointOutReverse	0x28
#define PictOpConjointAtop	0x29
#define PictOpConjointAtopReverse	0x2a
#define PictOpConjointMaximum	0x2b
#define PictOpConjointXor	0x2b
#define BadPicture	1
#define PictOpSrc	1
#define PictTypeDirect	1
#define PolyEdgeSmooth	1
#define PolyModeImprecise	1
#define RepeatNormal	1
#define SubPixelHorizontalRGB	1
#define X_RenderQueryPictFormats	1
#define PictOpAtopReverse	10
#define RENDER_MINOR	10
#define X_RenderTrapezoids	10
#define PictOpXor	11
#define X_RenderTriangles	11
#define CPLastBit	12
#define PictOpAdd	12
#define X_RenderTriStrip	12
#define PictOpMaximum	13
#define PictOpSaturate	13
#define X_RenderTriFan	13
#define X_RenderColorTrapezoids	14
#define X_RenderColorTriangles	15
#define X_RenderCreateGlyphSet	17
#define X_RenderReferenceGlyphSet	18
#define X_RenderFreeGlyphSet	19
#define BadPictOp	2
#define PictOpDst	2
#define RepeatPad	2
#define SubPixelHorizontalBGR	2
#define X_RenderQueryPictIndexValues	2
#define X_RenderAddGlyphs	20
#define X_RenderAddGlyphsFromPicture	21
#define X_RenderFreeGlyphs	22
#define X_RenderCompositeGlyphs8	23
#define X_RenderCompositeGlyphs16	24
#define X_RenderCompositeGlyphs32	25
#define X_RenderFillRectangles	26
#define X_RenderCreateCursor	27
#define X_RenderSetPictureTransform	28
#define X_RenderQueryFilters	29
#define BadGlyphSet	3
#define PictOpOver	3
#define RepeatReflect	3
#define SubPixelVerticalRGB	3
#define X_RenderQueryDithers	3
#define X_RenderSetPictureFilter	30
#define X_RenderCreateAnimCursor	31
#define X_RenderAddTraps	32
#define X_RenderCreateSolidFill	33
#define X_RenderCreateLinearGradient	34
#define X_RenderCreateRadialGradient	35
#define X_RenderCreateConicalGradient	36
#define BadGlyph	4
#define PictOpOverReverse	4
#define SubPixelVerticalBGR	4
#define X_RenderCreatePicture	4
#define PictOpIn	5
#define SubPixelNone	5
#define X_RenderChangePicture	5
#define PictOpInReverse	6
#define X_RenderSetPictureClipRectangles	6
#define PictOpOut	7
#define X_RenderFreePicture	7
#define PictOpOutReverse	8
#define X_RenderComposite	8
#define PictOpAtop	9
#define X_RenderScale	9

typedef long unsigned int Picture;
</SCREEN>
</SECT2>
</SECT1>
<SECT1 ID=libXrenderman>
<TITLE>Interface Definitions for libXrender</TITLE>
<PARA>
The interfaces defined on the following pages are included in libXrender and are defined
by this specification.
Unless otherwise noted, these interfaces shall be included
in the source standard.
</PARA>
<PARA>
Other interfaces listed in <XREF LINKEND=libXrender> shall behave as described
in the referenced base document.
</PARA>
<!-- MISSING DEFINITION FOR XRenderAddGlyphs -->
<!-- Lets just hope nobody notices -->
<!-- MISSING DEFINITION FOR XRenderAddTraps -->
<!-- Lets just hope nobody notices -->
<!-- MISSING DEFINITION FOR XRenderChangePicture -->
<!-- Lets just hope nobody notices -->
<!-- MISSING DEFINITION FOR XRenderComposite -->
<!-- Lets just hope nobody notices -->
<!-- MISSING DEFINITION FOR XRenderCompositeDoublePoly -->
<!-- Lets just hope nobody notices -->
<!-- MISSING DEFINITION FOR XRenderCompositeString16 -->
<!-- Lets just hope nobody notices -->
<!-- MISSING DEFINITION FOR XRenderCompositeString32 -->
<!-- Lets just hope nobody notices -->
<!-- MISSING DEFINITION FOR XRenderCompositeString8 -->
<!-- Lets just hope nobody notices -->
<!-- MISSING DEFINITION FOR XRenderCompositeText16 -->
<!-- Lets just hope nobody notices -->
<!-- MISSING DEFINITION FOR XRenderCompositeText32 -->
<!-- Lets just hope nobody notices -->
<!-- MISSING DEFINITION FOR XRenderCompositeText8 -->
<!-- Lets just hope nobody notices -->
<!-- MISSING DEFINITION FOR XRenderCompositeTrapezoids -->
<!-- Lets just hope nobody notices -->
<!-- MISSING DEFINITION FOR XRenderCompositeTriFan -->
<!-- Lets just hope nobody notices -->
<!-- MISSING DEFINITION FOR XRenderCompositeTriStrip -->
<!-- Lets just hope nobody notices -->
<!-- MISSING DEFINITION FOR XRenderCompositeTriangles -->
<!-- Lets just hope nobody notices -->
<!-- MISSING DEFINITION FOR XRenderCreateAnimCursor -->
<!-- Lets just hope nobody notices -->
<!-- MISSING DEFINITION FOR XRenderCreateConicalGradient -->
<!-- Lets just hope nobody notices -->
<!-- MISSING DEFINITION FOR XRenderCreateCursor -->
<!-- Lets just hope nobody notices -->
<!-- MISSING DEFINITION FOR XRenderCreateGlyphSet -->
<!-- Lets just hope nobody notices -->
<!-- MISSING DEFINITION FOR XRenderCreateLinearGradient -->
<!-- Lets just hope nobody notices -->
<!-- MISSING DEFINITION FOR XRenderCreatePicture -->
<!-- Lets just hope nobody notices -->
<!-- MISSING DEFINITION FOR XRenderCreateRadialGradient -->
<!-- Lets just hope nobody notices -->
<!-- MISSING DEFINITION FOR XRenderCreateSolidFill -->
<!-- Lets just hope nobody notices -->
<!-- MISSING DEFINITION FOR XRenderFillRectangle -->
<!-- Lets just hope nobody notices -->
<!-- MISSING DEFINITION FOR XRenderFillRectangles -->
<!-- Lets just hope nobody notices -->
<!-- MISSING DEFINITION FOR XRenderFindFormat -->
<!-- Lets just hope nobody notices -->
<!-- MISSING DEFINITION FOR XRenderFindStandardFormat -->
<!-- Lets just hope nobody notices -->
<!-- MISSING DEFINITION FOR XRenderFindVisualFormat -->
<!-- Lets just hope nobody notices -->
<!-- MISSING DEFINITION FOR XRenderFreeGlyphSet -->
<!-- Lets just hope nobody notices -->
<!-- MISSING DEFINITION FOR XRenderFreeGlyphs -->
<!-- Lets just hope nobody notices -->
<!-- MISSING DEFINITION FOR XRenderFreePicture -->
<!-- Lets just hope nobody notices -->
<!-- MISSING DEFINITION FOR XRenderParseColor -->
<!-- Lets just hope nobody notices -->
<!-- MISSING DEFINITION FOR XRenderQueryExtension -->
<!-- Lets just hope nobody notices -->
<!-- MISSING DEFINITION FOR XRenderQueryFilters -->
<!-- Lets just hope nobody notices -->
<!-- MISSING DEFINITION FOR XRenderQueryFormats -->
<!-- Lets just hope nobody notices -->
<!-- MISSING DEFINITION FOR XRenderQueryPictIndexValues -->
<!-- Lets just hope nobody notices -->
<!-- MISSING DEFINITION FOR XRenderQuerySubpixelOrder -->
<!-- Lets just hope nobody notices -->
<!-- MISSING DEFINITION FOR XRenderQueryVersion -->
<!-- Lets just hope nobody notices -->
<!-- MISSING DEFINITION FOR XRenderReferenceGlyphSet -->
<!-- Lets just hope nobody notices -->
<!-- MISSING DEFINITION FOR XRenderSetPictureClipRectangles -->
<!-- Lets just hope nobody notices -->
<!-- MISSING DEFINITION FOR XRenderSetPictureClipRegion -->
<!-- Lets just hope nobody notices -->
<!-- MISSING DEFINITION FOR XRenderSetPictureFilter -->
<!-- Lets just hope nobody notices -->
<!-- MISSING DEFINITION FOR XRenderSetPictureTransform -->
<!-- Lets just hope nobody notices -->
<!-- MISSING DEFINITION FOR XRenderSetSubpixelOrder -->
<!-- Lets just hope nobody notices -->
</SECT1>
<!-- End of text generated from database -->

</CHAPTER>

</PART>
