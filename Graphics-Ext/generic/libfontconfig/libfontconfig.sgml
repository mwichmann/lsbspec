<PART ID="toclibfontconfig">
<TITLE>Fontconfig library</TITLE>

<CHAPTER id=libfontconfigchap>
<TITLE>Libraries</TITLE>
<!-- Start of text generated from database -->
<!-- generated from the LSB specification database -->
<!--    by $Header: /cvsroot/lsb/lsbspec/mklibspec,v 1.80 2006/02/27 19:51:04 nick Exp 0 -->
<!--    at Wed Mar 15 18:20:23 2006 -->
<SECT1 ID=libfontconfig>
<TITLE>Interfaces for libfontconfig</TITLE>
<PARA>
<XREF LINKEND="lib-libfontconfig-def"> defines the library name and shared object name
for the libfontconfig library
</PARA>
<TABLE id="lib-libfontconfig-def">
<TITLE>libfontconfig Definition</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Library:</ENTRY>
<ENTRY>libfontconfig</ENTRY>
</ROW>
<ROW>
<ENTRY>SONAME:</ENTRY>
<ENTRY>libfontconfig.so.1</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The behavior of the interfaces in this library is specified by the following specifications:<SIMPLELIST COLUMNS=1>
<MEMBER ID='REFSTD.libfontconfig.1'>
[fontconfig] <XREF LINKEND="std.fontconfig">
</MEMBER>
</SIMPLELIST>
</PARA>
<!-- debug: database interface name Font Customization and Configuration Library -->
<SECT2>
<!--libgroup-->
<TITLE>Font Customization and Configuration Library</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Interfaces for Font Customization and Configuration Library</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic functions
for Font Customization and Configuration Library specified in <XREF linkend="tbl-libfontconfig-font-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<TABLE id="tbl-libfontconfig-font-ints">
<TITLE>libfontconfig - Font Customization and Configuration Library Function Interfaces</TITLE>
<TGROUP COLS=3>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>FcAtomicCreate</primary></indexterm>FcAtomicCreate <LINK LINKEND="REFSTD.libfontconfig.1">[fontconfig]</LINK></ENTRY>
<ENTRY><indexterm><primary>FcAtomicDeleteNew</primary></indexterm>FcAtomicDeleteNew <LINK LINKEND="REFSTD.libfontconfig.1">[fontconfig]</LINK></ENTRY>
<ENTRY><indexterm><primary>FcAtomicDestroy</primary></indexterm>FcAtomicDestroy <LINK LINKEND="REFSTD.libfontconfig.1">[fontconfig]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>FcAtomicLock</primary></indexterm>FcAtomicLock <LINK LINKEND="REFSTD.libfontconfig.1">[fontconfig]</LINK></ENTRY>
<ENTRY><indexterm><primary>FcAtomicNewFile</primary></indexterm>FcAtomicNewFile <LINK LINKEND="REFSTD.libfontconfig.1">[fontconfig]</LINK></ENTRY>
<ENTRY><indexterm><primary>FcAtomicOrigFile</primary></indexterm>FcAtomicOrigFile <LINK LINKEND="REFSTD.libfontconfig.1">[fontconfig]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>FcAtomicReplaceOrig</primary></indexterm>FcAtomicReplaceOrig <LINK LINKEND="REFSTD.libfontconfig.1">[fontconfig]</LINK></ENTRY>
<ENTRY><indexterm><primary>FcAtomicUnlock</primary></indexterm>FcAtomicUnlock <LINK LINKEND="REFSTD.libfontconfig.1">[fontconfig]</LINK></ENTRY>
<ENTRY><indexterm><primary>FcBlanksAdd</primary></indexterm>FcBlanksAdd <LINK LINKEND="REFSTD.libfontconfig.1">[fontconfig]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>FcBlanksCreate</primary></indexterm>FcBlanksCreate <LINK LINKEND="REFSTD.libfontconfig.1">[fontconfig]</LINK></ENTRY>
<ENTRY><indexterm><primary>FcBlanksDestroy</primary></indexterm>FcBlanksDestroy <LINK LINKEND="REFSTD.libfontconfig.1">[fontconfig]</LINK></ENTRY>
<ENTRY><indexterm><primary>FcBlanksIsMember</primary></indexterm>FcBlanksIsMember <LINK LINKEND="REFSTD.libfontconfig.1">[fontconfig]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>FcCharSetAddChar</primary></indexterm>FcCharSetAddChar <LINK LINKEND="REFSTD.libfontconfig.1">[fontconfig]</LINK></ENTRY>
<ENTRY><indexterm><primary>FcCharSetCopy</primary></indexterm>FcCharSetCopy <LINK LINKEND="REFSTD.libfontconfig.1">[fontconfig]</LINK></ENTRY>
<ENTRY><indexterm><primary>FcCharSetCount</primary></indexterm>FcCharSetCount <LINK LINKEND="REFSTD.libfontconfig.1">[fontconfig]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>FcCharSetCreate</primary></indexterm>FcCharSetCreate <LINK LINKEND="REFSTD.libfontconfig.1">[fontconfig]</LINK></ENTRY>
<ENTRY><indexterm><primary>FcCharSetDestroy</primary></indexterm>FcCharSetDestroy <LINK LINKEND="REFSTD.libfontconfig.1">[fontconfig]</LINK></ENTRY>
<ENTRY><indexterm><primary>FcCharSetEqual</primary></indexterm>FcCharSetEqual <LINK LINKEND="REFSTD.libfontconfig.1">[fontconfig]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>FcCharSetFirstPage</primary></indexterm>FcCharSetFirstPage <LINK LINKEND="REFSTD.libfontconfig.1">[fontconfig]</LINK></ENTRY>
<ENTRY><indexterm><primary>FcCharSetHasChar</primary></indexterm>FcCharSetHasChar <LINK LINKEND="REFSTD.libfontconfig.1">[fontconfig]</LINK></ENTRY>
<ENTRY><indexterm><primary>FcCharSetIntersect</primary></indexterm>FcCharSetIntersect <LINK LINKEND="REFSTD.libfontconfig.1">[fontconfig]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>FcCharSetIntersectCount</primary></indexterm>FcCharSetIntersectCount <LINK LINKEND="REFSTD.libfontconfig.1">[fontconfig]</LINK></ENTRY>
<ENTRY><indexterm><primary>FcCharSetIsSubset</primary></indexterm>FcCharSetIsSubset <LINK LINKEND="REFSTD.libfontconfig.1">[fontconfig]</LINK></ENTRY>
<ENTRY><indexterm><primary>FcCharSetNextPage</primary></indexterm>FcCharSetNextPage <LINK LINKEND="REFSTD.libfontconfig.1">[fontconfig]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>FcCharSetSubtract</primary></indexterm>FcCharSetSubtract <LINK LINKEND="REFSTD.libfontconfig.1">[fontconfig]</LINK></ENTRY>
<ENTRY><indexterm><primary>FcCharSetSubtractCount</primary></indexterm>FcCharSetSubtractCount <LINK LINKEND="REFSTD.libfontconfig.1">[fontconfig]</LINK></ENTRY>
<ENTRY><indexterm><primary>FcCharSetUnion</primary></indexterm>FcCharSetUnion <LINK LINKEND="REFSTD.libfontconfig.1">[fontconfig]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>FcConfigAppFontAddDir</primary></indexterm>FcConfigAppFontAddDir <LINK LINKEND="REFSTD.libfontconfig.1">[fontconfig]</LINK></ENTRY>
<ENTRY><indexterm><primary>FcConfigAppFontAddFile</primary></indexterm>FcConfigAppFontAddFile <LINK LINKEND="REFSTD.libfontconfig.1">[fontconfig]</LINK></ENTRY>
<ENTRY><indexterm><primary>FcConfigAppFontClear</primary></indexterm>FcConfigAppFontClear <LINK LINKEND="REFSTD.libfontconfig.1">[fontconfig]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>FcConfigBuildFonts</primary></indexterm>FcConfigBuildFonts <LINK LINKEND="REFSTD.libfontconfig.1">[fontconfig]</LINK></ENTRY>
<ENTRY><indexterm><primary>FcConfigDestroy</primary></indexterm>FcConfigDestroy <LINK LINKEND="REFSTD.libfontconfig.1">[fontconfig]</LINK></ENTRY>
<ENTRY><indexterm><primary>FcConfigEnableHome</primary></indexterm>FcConfigEnableHome <LINK LINKEND="REFSTD.libfontconfig.1">[fontconfig]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>FcConfigFilename</primary></indexterm>FcConfigFilename <LINK LINKEND="REFSTD.libfontconfig.1">[fontconfig]</LINK></ENTRY>
<ENTRY><indexterm><primary>FcConfigGetBlanks</primary></indexterm>FcConfigGetBlanks <LINK LINKEND="REFSTD.libfontconfig.1">[fontconfig]</LINK></ENTRY>
<ENTRY><indexterm><primary>FcConfigGetCache</primary></indexterm>FcConfigGetCache <LINK LINKEND="REFSTD.libfontconfig.1">[fontconfig]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>FcConfigGetConfigDirs</primary></indexterm>FcConfigGetConfigDirs <LINK LINKEND="REFSTD.libfontconfig.1">[fontconfig]</LINK></ENTRY>
<ENTRY><indexterm><primary>FcConfigGetConfigFiles</primary></indexterm>FcConfigGetConfigFiles <LINK LINKEND="REFSTD.libfontconfig.1">[fontconfig]</LINK></ENTRY>
<ENTRY><indexterm><primary>FcConfigGetCurrent</primary></indexterm>FcConfigGetCurrent <LINK LINKEND="REFSTD.libfontconfig.1">[fontconfig]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>FcConfigGetFontDirs</primary></indexterm>FcConfigGetFontDirs <LINK LINKEND="REFSTD.libfontconfig.1">[fontconfig]</LINK></ENTRY>
<ENTRY><indexterm><primary>FcConfigGetFonts</primary></indexterm>FcConfigGetFonts <LINK LINKEND="REFSTD.libfontconfig.1">[fontconfig]</LINK></ENTRY>
<ENTRY><indexterm><primary>FcConfigGetRescanInverval</primary></indexterm>FcConfigGetRescanInverval <LINK LINKEND="REFSTD.libfontconfig.1">[fontconfig]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>FcConfigHome</primary></indexterm>FcConfigHome <LINK LINKEND="REFSTD.libfontconfig.1">[fontconfig]</LINK></ENTRY>
<ENTRY><indexterm><primary>FcConfigParseAndLoad</primary></indexterm>FcConfigParseAndLoad <LINK LINKEND="REFSTD.libfontconfig.1">[fontconfig]</LINK></ENTRY>
<ENTRY><indexterm><primary>FcConfigSetCurrent</primary></indexterm>FcConfigSetCurrent <LINK LINKEND="REFSTD.libfontconfig.1">[fontconfig]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>FcConfigSetRescanInverval</primary></indexterm>FcConfigSetRescanInverval <LINK LINKEND="REFSTD.libfontconfig.1">[fontconfig]</LINK></ENTRY>
<ENTRY><indexterm><primary>FcConfigSubstitute</primary></indexterm>FcConfigSubstitute <LINK LINKEND="REFSTD.libfontconfig.1">[fontconfig]</LINK></ENTRY>
<ENTRY><indexterm><primary>FcConfigSubstituteWithPat</primary></indexterm>FcConfigSubstituteWithPat <LINK LINKEND="REFSTD.libfontconfig.1">[fontconfig]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>FcConfigUptoDate</primary></indexterm>FcConfigUptoDate <LINK LINKEND="REFSTD.libfontconfig.1">[fontconfig]</LINK></ENTRY>
<ENTRY><indexterm><primary>FcDefaultSubstitute</primary></indexterm>FcDefaultSubstitute <LINK LINKEND="REFSTD.libfontconfig.1">[fontconfig]</LINK></ENTRY>
<ENTRY><indexterm><primary>FcDirCacheValid</primary></indexterm>FcDirCacheValid <LINK LINKEND="REFSTD.libfontconfig.1">[fontconfig]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>FcDirSave</primary></indexterm>FcDirSave <LINK LINKEND="REFSTD.libfontconfig.1">[fontconfig]</LINK></ENTRY>
<ENTRY><indexterm><primary>FcDirScan</primary></indexterm>FcDirScan <LINK LINKEND="REFSTD.libfontconfig.1">[fontconfig]</LINK></ENTRY>
<ENTRY><indexterm><primary>FcFileScan</primary></indexterm>FcFileScan <LINK LINKEND="REFSTD.libfontconfig.1">[fontconfig]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>FcFontList</primary></indexterm>FcFontList <LINK LINKEND="REFSTD.libfontconfig.1">[fontconfig]</LINK></ENTRY>
<ENTRY><indexterm><primary>FcFontMatch</primary></indexterm>FcFontMatch <LINK LINKEND="REFSTD.libfontconfig.1">[fontconfig]</LINK></ENTRY>
<ENTRY><indexterm><primary>FcFontRenderPrepare</primary></indexterm>FcFontRenderPrepare <LINK LINKEND="REFSTD.libfontconfig.1">[fontconfig]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>FcFontSetAdd</primary></indexterm>FcFontSetAdd <LINK LINKEND="REFSTD.libfontconfig.1">[fontconfig]</LINK></ENTRY>
<ENTRY><indexterm><primary>FcFontSetCreate</primary></indexterm>FcFontSetCreate <LINK LINKEND="REFSTD.libfontconfig.1">[fontconfig]</LINK></ENTRY>
<ENTRY><indexterm><primary>FcFontSetDestroy</primary></indexterm>FcFontSetDestroy <LINK LINKEND="REFSTD.libfontconfig.1">[fontconfig]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>FcFontSetList</primary></indexterm>FcFontSetList <LINK LINKEND="REFSTD.libfontconfig.1">[fontconfig]</LINK></ENTRY>
<ENTRY><indexterm><primary>FcFontSetMatch</primary></indexterm>FcFontSetMatch <LINK LINKEND="REFSTD.libfontconfig.1">[fontconfig]</LINK></ENTRY>
<ENTRY><indexterm><primary>FcFontSetPrint</primary></indexterm>FcFontSetPrint <LINK LINKEND="REFSTD.libfontconfig.1">[fontconfig]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>FcFontSetSort</primary></indexterm>FcFontSetSort <LINK LINKEND="REFSTD.libfontconfig.1">[fontconfig]</LINK></ENTRY>
<ENTRY><indexterm><primary>FcFontSetSortDestroy</primary></indexterm>FcFontSetSortDestroy <LINK LINKEND="REFSTD.libfontconfig.1">[fontconfig]</LINK></ENTRY>
<ENTRY><indexterm><primary>FcFontSort</primary></indexterm>FcFontSort <LINK LINKEND="REFSTD.libfontconfig.1">[fontconfig]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>FcFreeTypeCharIndex</primary></indexterm>FcFreeTypeCharIndex <LINK LINKEND="REFSTD.libfontconfig.1">[fontconfig]</LINK></ENTRY>
<ENTRY><indexterm><primary>FcFreeTypeCharSet</primary></indexterm>FcFreeTypeCharSet <LINK LINKEND="REFSTD.libfontconfig.1">[fontconfig]</LINK></ENTRY>
<ENTRY><indexterm><primary>FcFreeTypeCharSetAndSpacing</primary></indexterm>FcFreeTypeCharSetAndSpacing <LINK LINKEND="REFSTD.libfontconfig.1">[fontconfig]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>FcFreeTypeQuery</primary></indexterm>FcFreeTypeQuery <LINK LINKEND="REFSTD.libfontconfig.1">[fontconfig]</LINK></ENTRY>
<ENTRY><indexterm><primary>FcGetVersion</primary></indexterm>FcGetVersion <LINK LINKEND="REFSTD.libfontconfig.1">[fontconfig]</LINK></ENTRY>
<ENTRY><indexterm><primary>FcInit</primary></indexterm>FcInit <LINK LINKEND="REFSTD.libfontconfig.1">[fontconfig]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>FcInitBringUptoDate</primary></indexterm>FcInitBringUptoDate <LINK LINKEND="REFSTD.libfontconfig.1">[fontconfig]</LINK></ENTRY>
<ENTRY><indexterm><primary>FcInitLoadConfig</primary></indexterm>FcInitLoadConfig <LINK LINKEND="REFSTD.libfontconfig.1">[fontconfig]</LINK></ENTRY>
<ENTRY><indexterm><primary>FcInitLoadConfigAndFonts</primary></indexterm>FcInitLoadConfigAndFonts <LINK LINKEND="REFSTD.libfontconfig.1">[fontconfig]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>FcInitReinitialize</primary></indexterm>FcInitReinitialize <LINK LINKEND="REFSTD.libfontconfig.1">[fontconfig]</LINK></ENTRY>
<ENTRY><indexterm><primary>FcLangSetAdd</primary></indexterm>FcLangSetAdd <LINK LINKEND="REFSTD.libfontconfig.1">[fontconfig]</LINK></ENTRY>
<ENTRY><indexterm><primary>FcLangSetCompare</primary></indexterm>FcLangSetCompare <LINK LINKEND="REFSTD.libfontconfig.1">[fontconfig]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>FcLangSetContains</primary></indexterm>FcLangSetContains <LINK LINKEND="REFSTD.libfontconfig.1">[fontconfig]</LINK></ENTRY>
<ENTRY><indexterm><primary>FcLangSetCopy</primary></indexterm>FcLangSetCopy <LINK LINKEND="REFSTD.libfontconfig.1">[fontconfig]</LINK></ENTRY>
<ENTRY><indexterm><primary>FcLangSetCreate</primary></indexterm>FcLangSetCreate <LINK LINKEND="REFSTD.libfontconfig.1">[fontconfig]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>FcLangSetDestroy</primary></indexterm>FcLangSetDestroy <LINK LINKEND="REFSTD.libfontconfig.1">[fontconfig]</LINK></ENTRY>
<ENTRY><indexterm><primary>FcLangSetEqual</primary></indexterm>FcLangSetEqual <LINK LINKEND="REFSTD.libfontconfig.1">[fontconfig]</LINK></ENTRY>
<ENTRY><indexterm><primary>FcLangSetHasLang</primary></indexterm>FcLangSetHasLang <LINK LINKEND="REFSTD.libfontconfig.1">[fontconfig]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>FcLangSetHash</primary></indexterm>FcLangSetHash <LINK LINKEND="REFSTD.libfontconfig.1">[fontconfig]</LINK></ENTRY>
<ENTRY><indexterm><primary>FcMatrixCopy</primary></indexterm>FcMatrixCopy <LINK LINKEND="REFSTD.libfontconfig.1">[fontconfig]</LINK></ENTRY>
<ENTRY><indexterm><primary>FcMatrixEqual</primary></indexterm>FcMatrixEqual <LINK LINKEND="REFSTD.libfontconfig.1">[fontconfig]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>FcMatrixMultiply</primary></indexterm>FcMatrixMultiply <LINK LINKEND="REFSTD.libfontconfig.1">[fontconfig]</LINK></ENTRY>
<ENTRY><indexterm><primary>FcMatrixRotate</primary></indexterm>FcMatrixRotate <LINK LINKEND="REFSTD.libfontconfig.1">[fontconfig]</LINK></ENTRY>
<ENTRY><indexterm><primary>FcMatrixScale</primary></indexterm>FcMatrixScale <LINK LINKEND="REFSTD.libfontconfig.1">[fontconfig]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>FcMatrixShear</primary></indexterm>FcMatrixShear <LINK LINKEND="REFSTD.libfontconfig.1">[fontconfig]</LINK></ENTRY>
<ENTRY><indexterm><primary>FcNameConstant</primary></indexterm>FcNameConstant <LINK LINKEND="REFSTD.libfontconfig.1">[fontconfig]</LINK></ENTRY>
<ENTRY><indexterm><primary>FcNameGetConstant</primary></indexterm>FcNameGetConstant <LINK LINKEND="REFSTD.libfontconfig.1">[fontconfig]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>FcNameGetObjectType</primary></indexterm>FcNameGetObjectType <LINK LINKEND="REFSTD.libfontconfig.1">[fontconfig]</LINK></ENTRY>
<ENTRY><indexterm><primary>FcNameParse</primary></indexterm>FcNameParse <LINK LINKEND="REFSTD.libfontconfig.1">[fontconfig]</LINK></ENTRY>
<ENTRY><indexterm><primary>FcNameRegisterConstants</primary></indexterm>FcNameRegisterConstants <LINK LINKEND="REFSTD.libfontconfig.1">[fontconfig]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>FcNameRegisterObjectTypes</primary></indexterm>FcNameRegisterObjectTypes <LINK LINKEND="REFSTD.libfontconfig.1">[fontconfig]</LINK></ENTRY>
<ENTRY><indexterm><primary>FcNameUnparse</primary></indexterm>FcNameUnparse <LINK LINKEND="REFSTD.libfontconfig.1">[fontconfig]</LINK></ENTRY>
<ENTRY><indexterm><primary>FcNameUnregisterConstants</primary></indexterm>FcNameUnregisterConstants <LINK LINKEND="REFSTD.libfontconfig.1">[fontconfig]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>FcNameUnregisterObjectTypes</primary></indexterm>FcNameUnregisterObjectTypes <LINK LINKEND="REFSTD.libfontconfig.1">[fontconfig]</LINK></ENTRY>
<ENTRY><indexterm><primary>FcObjectSetAdd</primary></indexterm>FcObjectSetAdd <LINK LINKEND="REFSTD.libfontconfig.1">[fontconfig]</LINK></ENTRY>
<ENTRY><indexterm><primary>FcObjectSetBuild</primary></indexterm>FcObjectSetBuild <LINK LINKEND="REFSTD.libfontconfig.1">[fontconfig]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>FcObjectSetCreate</primary></indexterm>FcObjectSetCreate <LINK LINKEND="REFSTD.libfontconfig.1">[fontconfig]</LINK></ENTRY>
<ENTRY><indexterm><primary>FcObjectSetDestroy</primary></indexterm>FcObjectSetDestroy <LINK LINKEND="REFSTD.libfontconfig.1">[fontconfig]</LINK></ENTRY>
<ENTRY><indexterm><primary>FcObjectSetVaBuild</primary></indexterm>FcObjectSetVaBuild <LINK LINKEND="REFSTD.libfontconfig.1">[fontconfig]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>FcPatternAdd</primary></indexterm>FcPatternAdd <LINK LINKEND="REFSTD.libfontconfig.1">[fontconfig]</LINK></ENTRY>
<ENTRY><indexterm><primary>FcPatternAddBool</primary></indexterm>FcPatternAddBool <LINK LINKEND="REFSTD.libfontconfig.1">[fontconfig]</LINK></ENTRY>
<ENTRY><indexterm><primary>FcPatternAddCharSet</primary></indexterm>FcPatternAddCharSet <LINK LINKEND="REFSTD.libfontconfig.1">[fontconfig]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>FcPatternAddDouble</primary></indexterm>FcPatternAddDouble <LINK LINKEND="REFSTD.libfontconfig.1">[fontconfig]</LINK></ENTRY>
<ENTRY><indexterm><primary>FcPatternAddFTFace</primary></indexterm>FcPatternAddFTFace <LINK LINKEND="REFSTD.libfontconfig.1">[fontconfig]</LINK></ENTRY>
<ENTRY><indexterm><primary>FcPatternAddInteger</primary></indexterm>FcPatternAddInteger <LINK LINKEND="REFSTD.libfontconfig.1">[fontconfig]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>FcPatternAddLangSet</primary></indexterm>FcPatternAddLangSet <LINK LINKEND="REFSTD.libfontconfig.1">[fontconfig]</LINK></ENTRY>
<ENTRY><indexterm><primary>FcPatternAddMatrix</primary></indexterm>FcPatternAddMatrix <LINK LINKEND="REFSTD.libfontconfig.1">[fontconfig]</LINK></ENTRY>
<ENTRY><indexterm><primary>FcPatternAddString</primary></indexterm>FcPatternAddString <LINK LINKEND="REFSTD.libfontconfig.1">[fontconfig]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>FcPatternAddWeak</primary></indexterm>FcPatternAddWeak <LINK LINKEND="REFSTD.libfontconfig.1">[fontconfig]</LINK></ENTRY>
<ENTRY><indexterm><primary>FcPatternBuild</primary></indexterm>FcPatternBuild <LINK LINKEND="REFSTD.libfontconfig.1">[fontconfig]</LINK></ENTRY>
<ENTRY><indexterm><primary>FcPatternCreate</primary></indexterm>FcPatternCreate <LINK LINKEND="REFSTD.libfontconfig.1">[fontconfig]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>FcPatternDel</primary></indexterm>FcPatternDel <LINK LINKEND="REFSTD.libfontconfig.1">[fontconfig]</LINK></ENTRY>
<ENTRY><indexterm><primary>FcPatternDestroy</primary></indexterm>FcPatternDestroy <LINK LINKEND="REFSTD.libfontconfig.1">[fontconfig]</LINK></ENTRY>
<ENTRY><indexterm><primary>FcPatternDuplicate</primary></indexterm>FcPatternDuplicate <LINK LINKEND="REFSTD.libfontconfig.1">[fontconfig]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>FcPatternEqual</primary></indexterm>FcPatternEqual <LINK LINKEND="REFSTD.libfontconfig.1">[fontconfig]</LINK></ENTRY>
<ENTRY><indexterm><primary>FcPatternEqualSubset</primary></indexterm>FcPatternEqualSubset <LINK LINKEND="REFSTD.libfontconfig.1">[fontconfig]</LINK></ENTRY>
<ENTRY><indexterm><primary>FcPatternGet</primary></indexterm>FcPatternGet <LINK LINKEND="REFSTD.libfontconfig.1">[fontconfig]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>FcPatternGetBool</primary></indexterm>FcPatternGetBool <LINK LINKEND="REFSTD.libfontconfig.1">[fontconfig]</LINK></ENTRY>
<ENTRY><indexterm><primary>FcPatternGetCharSet</primary></indexterm>FcPatternGetCharSet <LINK LINKEND="REFSTD.libfontconfig.1">[fontconfig]</LINK></ENTRY>
<ENTRY><indexterm><primary>FcPatternGetDouble</primary></indexterm>FcPatternGetDouble <LINK LINKEND="REFSTD.libfontconfig.1">[fontconfig]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>FcPatternGetFTFace</primary></indexterm>FcPatternGetFTFace <LINK LINKEND="REFSTD.libfontconfig.1">[fontconfig]</LINK></ENTRY>
<ENTRY><indexterm><primary>FcPatternGetInteger</primary></indexterm>FcPatternGetInteger <LINK LINKEND="REFSTD.libfontconfig.1">[fontconfig]</LINK></ENTRY>
<ENTRY><indexterm><primary>FcPatternGetLangSet</primary></indexterm>FcPatternGetLangSet <LINK LINKEND="REFSTD.libfontconfig.1">[fontconfig]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>FcPatternGetMatrix</primary></indexterm>FcPatternGetMatrix <LINK LINKEND="REFSTD.libfontconfig.1">[fontconfig]</LINK></ENTRY>
<ENTRY><indexterm><primary>FcPatternGetString</primary></indexterm>FcPatternGetString <LINK LINKEND="REFSTD.libfontconfig.1">[fontconfig]</LINK></ENTRY>
<ENTRY><indexterm><primary>FcPatternHash</primary></indexterm>FcPatternHash <LINK LINKEND="REFSTD.libfontconfig.1">[fontconfig]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>FcPatternPrint</primary></indexterm>FcPatternPrint <LINK LINKEND="REFSTD.libfontconfig.1">[fontconfig]</LINK></ENTRY>
<ENTRY><indexterm><primary>FcPatternReference</primary></indexterm>FcPatternReference <LINK LINKEND="REFSTD.libfontconfig.1">[fontconfig]</LINK></ENTRY>
<ENTRY><indexterm><primary>FcPatternVaBuild</primary></indexterm>FcPatternVaBuild <LINK LINKEND="REFSTD.libfontconfig.1">[fontconfig]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>FcStrBasename</primary></indexterm>FcStrBasename <LINK LINKEND="REFSTD.libfontconfig.1">[fontconfig]</LINK></ENTRY>
<ENTRY><indexterm><primary>FcStrCmp</primary></indexterm>FcStrCmp <LINK LINKEND="REFSTD.libfontconfig.1">[fontconfig]</LINK></ENTRY>
<ENTRY><indexterm><primary>FcStrCmpIgnoreCase</primary></indexterm>FcStrCmpIgnoreCase <LINK LINKEND="REFSTD.libfontconfig.1">[fontconfig]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>FcStrCopy</primary></indexterm>FcStrCopy <LINK LINKEND="REFSTD.libfontconfig.1">[fontconfig]</LINK></ENTRY>
<ENTRY><indexterm><primary>FcStrCopyFilename</primary></indexterm>FcStrCopyFilename <LINK LINKEND="REFSTD.libfontconfig.1">[fontconfig]</LINK></ENTRY>
<ENTRY><indexterm><primary>FcStrDirname</primary></indexterm>FcStrDirname <LINK LINKEND="REFSTD.libfontconfig.1">[fontconfig]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>FcStrListCreate</primary></indexterm>FcStrListCreate <LINK LINKEND="REFSTD.libfontconfig.1">[fontconfig]</LINK></ENTRY>
<ENTRY><indexterm><primary>FcStrListDone</primary></indexterm>FcStrListDone <LINK LINKEND="REFSTD.libfontconfig.1">[fontconfig]</LINK></ENTRY>
<ENTRY><indexterm><primary>FcStrListNext</primary></indexterm>FcStrListNext <LINK LINKEND="REFSTD.libfontconfig.1">[fontconfig]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>FcStrSetAdd</primary></indexterm>FcStrSetAdd <LINK LINKEND="REFSTD.libfontconfig.1">[fontconfig]</LINK></ENTRY>
<ENTRY><indexterm><primary>FcStrSetAddFilename</primary></indexterm>FcStrSetAddFilename <LINK LINKEND="REFSTD.libfontconfig.1">[fontconfig]</LINK></ENTRY>
<ENTRY><indexterm><primary>FcStrSetCreate</primary></indexterm>FcStrSetCreate <LINK LINKEND="REFSTD.libfontconfig.1">[fontconfig]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>FcStrSetDel</primary></indexterm>FcStrSetDel <LINK LINKEND="REFSTD.libfontconfig.1">[fontconfig]</LINK></ENTRY>
<ENTRY><indexterm><primary>FcStrSetDestroy</primary></indexterm>FcStrSetDestroy <LINK LINKEND="REFSTD.libfontconfig.1">[fontconfig]</LINK></ENTRY>
<ENTRY><indexterm><primary>FcStrSetEqual</primary></indexterm>FcStrSetEqual <LINK LINKEND="REFSTD.libfontconfig.1">[fontconfig]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>FcStrSetMember</primary></indexterm>FcStrSetMember <LINK LINKEND="REFSTD.libfontconfig.1">[fontconfig]</LINK></ENTRY>
<ENTRY><indexterm><primary>FcUcs4ToUtf8</primary></indexterm>FcUcs4ToUtf8 <LINK LINKEND="REFSTD.libfontconfig.1">[fontconfig]</LINK></ENTRY>
<ENTRY><indexterm><primary>FcUtf16Len</primary></indexterm>FcUtf16Len <LINK LINKEND="REFSTD.libfontconfig.1">[fontconfig]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>FcUtf16ToUcs4</primary></indexterm>FcUtf16ToUcs4 <LINK LINKEND="REFSTD.libfontconfig.1">[fontconfig]</LINK></ENTRY>
<ENTRY><indexterm><primary>FcUtf8Len</primary></indexterm>FcUtf8Len <LINK LINKEND="REFSTD.libfontconfig.1">[fontconfig]</LINK></ENTRY>
<ENTRY><indexterm><primary>FcUtf8ToUcs4</primary></indexterm>FcUtf8ToUcs4 <LINK LINKEND="REFSTD.libfontconfig.1">[fontconfig]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>FcValueDestroy</primary></indexterm>FcValueDestroy <LINK LINKEND="REFSTD.libfontconfig.1">[fontconfig]</LINK></ENTRY>
<ENTRY><indexterm><primary>FcValueEqual</primary></indexterm>FcValueEqual <LINK LINKEND="REFSTD.libfontconfig.1">[fontconfig]</LINK></ENTRY>
<ENTRY><indexterm><primary>FcValuePrint</primary></indexterm>FcValuePrint <LINK LINKEND="REFSTD.libfontconfig.1">[fontconfig]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>FcValueSave</primary></indexterm>FcValueSave <LINK LINKEND="REFSTD.libfontconfig.1">[fontconfig]</LINK></ENTRY>
<ENTRY></ENTRY>
<ENTRY></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>
</SECT2>
</SECT1>
<SECT1 ID=libfontconfig-ddefs>
<TITLE>Data Definitions for libfontconfig</TITLE>
<PARA>
This section defines global identifiers and their values that are associated
with interfaces contained in libfontconfig.
These definitions are organized into groups that
correspond to system headers. This convention is used as a
convenience for the reader, and does not imply the existence
of these headers, or their content.
Where an interface is defined as requiring a particular system header file
all of the data definitions for that system header file presented here shall be in effect.
</PARA>
<PARA>
This section gives data definitions to promote binary application
portability, not to repeat source interface definitions available
elsewhere. System providers and application developers should use this ABI
to supplement - not to replace - source interface definition specifications.
</PARA>
<PARA>
This specification uses the <XREF LINKEND='std.ISOC99'> C Language as the reference programming language, and data definitions are specified in ISO C format. The C language is used here as a convenient notation. Using a C language description of these data objects does not preclude their use by other programming languages.</PARA>
<SECT2>
<TITLE>fontconfig/fcfreetype.h</TITLE>
<PARA>
</PARA>
<SCREEN>

extern FcResult FcPatternGetFTFace(const FcPattern *, const char *, int,
				   FT_Face *);
extern FcBool FcPatternAddFTFace(FcPattern *, const char *, const FT_Face);
extern FT_UInt FcFreeTypeCharIndex(FT_Face, FcChar32);
extern FcCharSet *FcFreeTypeCharSet(FT_Face, FcBlanks *);
extern FcCharSet *FcFreeTypeCharSetAndSpacing(FT_Face, FcBlanks *, int *);
</SCREEN>
</SECT2>
<SECT2>
<TITLE>fontconfig/fcprivate.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define FcObjectSetVapBuild(__ret__,__first__,__va__)	 \
	{ FcObjectSet *__os__; const char *__ob__; __ret__ = 0; __os__ = \
	FcObjectSetCreate (); if (!__os__) goto _FcObjectSetVapBuild_bail0; \
	__ob__ = __first__; while (__ob__) { if (!FcObjectSetAdd (__os__, \
	__ob__)) goto _FcObjectSetVapBuild_bail1; __ob__ = va_arg (__va__, \
	const char *); } __ret__ = __os__; _FcObjectSetVapBuild_bail1: if \
	(!__ret__ &amp;amp;&amp;amp; __os__) FcObjectSetDestroy (__os__); \
	_FcObjectSetVapBuild_bail0: ; }
#define FcPatternVapBuild(result,orig,va)	 \
	{ FcPattern *__p__ = (orig); const char *__o__; FcValue __v__; if \
	(!__p__) { __p__ = FcPatternCreate (); if (!__p__) goto \
	_FcPatternVapBuild_bail0; } for (;;) { __o__ = va_arg (va, const char \
	*); if (!__o__) break; __v__.type = va_arg (va, FcType); switch \
	(__v__.type) { case FcTypeVoid: goto _FcPatternVapBuild_bail1; case \
	FcTypeInteger: __v__.u.i = va_arg (va, int); break; case FcTypeDouble: \
	__v__.u.d = va_arg (va, double); break; case FcTypeString: __v__.u.s = \
	va_arg (va, FcChar8 *); break; case FcTypeBool: __v__.u.b = va_arg \
	(va, FcBool); break; case FcTypeMatrix: __v__.u.m = va_arg (va, \
	FcMatrix *); break; case FcTypeCharSet: __v__.u.c = va_arg (va, \
	FcCharSet *); break; case FcTypeFTFace: __v__.u.f = va_arg (va, \
	FT_Face); break; case FcTypeLangSet: __v__.u.l = va_arg (va, FcLangSet \
	*); break; } if (!FcPatternAdd (__p__, __o__, __v__, FcTrue)) goto \
	_FcPatternVapBuild_bail1; } result = __p__; goto \
	_FcPatternVapBuild_return; _FcPatternVapBuild_bail1: if (!orig) \
	FcPatternDestroy (__p__); _FcPatternVapBuild_bail0: result = (void*)0; \
	_FcPatternVapBuild_return: ; }
</SCREEN>
</SECT2>
<SECT2>
<TITLE>fontconfig/fontconfig.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define _FCFUNCPROTOBEGIN
#define _FCFUNCPROTOEND
#define FC_USER_CACHE_FILE	".fonts.cache-"FC_CACHE_VERSION
#define FC_DIR_CACHE_FILE	"fonts.cache-"FC_CACHE_VERSION
#define FcIsUpper(c)	((0101 &amp;lt;= (c) &amp;amp;&amp;amp; (c) &amp;lt;= 0132))
#define FcIsLower(c)	((0141 &amp;lt;= (c) &amp;amp;&amp;amp; (c) &amp;lt;= 0172))
#define FC_CHARSET_DONE	((FcChar32) -1)
#define FC_VERSION	((FC_MAJOR * 10000) + (FC_MINOR * 100) + (FC_REVISION))
#define FcMatrixInit(m)	((m)->xx = (m)->yy = 1, (m)->xy = (m)->yx = 0)
#define FC_CHARSET_MAP_SIZE	(256/32)
#define FcToLower(c)	(FcIsUpper(c) ? (c) - 0101 + 0141 : (c))
#define FC_HINT_NONE	0
#define FC_PROPORTIONAL	0
#define FC_RGBA_UNKNOWN	0
#define FC_SLANT_ROMAN	0
#define FC_WEIGHT_THIN	0
#define FcFalse	0
#define FC_CACHE_VERSION	"1"
#define FC_HINT_SLIGHT	1
#define FC_RGBA_RGB	1
#define FcTrue	1
#define FC_MONO	100
#define FC_SLANT_ITALIC	100
#define FC_WEIGHT_MEDIUM	100
#define FC_WIDTH_NORMAL	100
#define FC_CHARCELL	110
#define FC_SLANT_OBLIQUE	110
#define FC_WIDTH_SEMIEXPANDED	113
#define FC_WIDTH_EXPANDED	125
#define FC_WIDTH_EXTRAEXPANDED	150
#define FC_WEIGHT_DEMIBOLD	180
#define FC_HINT_MEDIUM	2
#define FC_MAJOR	2
#define FC_REVISION	2
#define FC_RGBA_BGR	2
#define FC_WEIGHT_BOLD	200
#define FC_WIDTH_ULTRAEXPANDED	200
#define FC_WEIGHT_EXTRABOLD	205
#define FC_WEIGHT_BLACK	210
#define FC_HINT_FULL	3
#define FC_MINOR	3
#define FC_RGBA_VRGB	3
#define FC_RGBA_VBGR	4
#define FC_WEIGHT_EXTRALIGHT	40
#define FC_RGBA_NONE	5
#define FC_WEIGHT_LIGHT	50
#define FC_WIDTH_ULTRACONDENSED	50
#define FC_UTF8_MAX_LEN	6
#define FC_WIDTH_EXTRACONDENSED	63
#define FC_WEIGHT_BOOK	75
#define FC_WIDTH_CONDENSED	75
#define FC_WEIGHT_REGULAR	80
#define FC_WIDTH_SEMICONDENSED	87
#define FC_DUAL	90
#define FC_ANTIALIAS	"antialias"
#define FC_ASPECT	"aspect"
#define FC_AUTOHINT	"autohint"
#define FC_CAPABILITY	"capability"
#define FC_CHAR_HEIGHT	"charheight"
#define FC_CHARSET	"charset"
#define FC_CHAR_WIDTH	"charwidth"
#define FC_DPI	"dpi"
#define FC_EMBOLDEN	"embolden"
#define FC_FAMILY	"family"
#define FC_FAMILYLANG	"familylang"
#define FC_WEIGHT_HEAVY	FC_WEIGHT_BLACK
#define FC_WEIGHT_SEMIBOLD	FC_WEIGHT_DEMIBOLD
#define FC_WEIGHT_ULTRABOLD	FC_WEIGHT_EXTRABOLD
#define FC_WEIGHT_ULTRALIGHT	FC_WEIGHT_EXTRALIGHT
#define FC_WEIGHT_NORMAL	FC_WEIGHT_REGULAR
#define FC_FILE	"file"
#define FC_FONTFORMAT	"fontformat"
#define FC_FONTVERSION	"fontversion"
#define FC_FOUNDRY	"foundry"
#define FC_FT_FACE	"ftface"
#define FC_FULLNAME	"fullname"
#define FC_FULLNAMELANG	"fullnamelang"
#define FC_GLOBAL_ADVANCE	"globaladvance"
#define FC_HINTING	"hinting"
#define FC_HINT_STYLE	"hintstyle"
#define FC_INDEX	"index"
#define FC_LANG	"lang"
#define FC_MATRIX	"matrix"
#define FC_MINSPACE	"minspace"
#define FC_OUTLINE	"outline"
#define FC_PIXEL_SIZE	"pixelsize"
#define FC_RASTERIZER	"rasterizer"
#define FC_RGBA	"rgba"
#define FC_SCALABLE	"scalable"
#define FC_SCALE	"scale"
#define FC_SIZE	"size"
#define FC_SLANT	"slant"
#define FC_SOURCE	"source"
#define FC_SPACING	"spacing"
#define FC_STYLE	"style"
#define FC_STYLELANG	"stylelang"
#define FC_VERTICAL_LAYOUT	"verticallayout"
#define FC_WEIGHT	"weight"
#define FC_WIDTH	"width"

typedef int FcBool;
typedef struct _FcPattern
 FcPattern;
typedef enum _FcType {
    FcTypeVoid = 0,
    FcTypeInteger = 1,
    FcTypeDouble = 2,
    FcTypeString = 3,
    FcTypeBool = 4,
    FcTypeMatrix = 5,
    FcTypeCharSet = 6,
    FcTypeFTFace = 7,
    FcTypeLangSet = 8
} FcType;
typedef unsigned char FcChar8;
typedef struct _FcMatrix {
    double xx;
    double xy;
    double yx;
    double yy;
} FcMatrix;
typedef struct _FcCharSet
 FcCharSet;
typedef struct _FcLangSet
 FcLangSet;
typedef struct _FcValue {
    FcType type;
    union {
	const FcChar8 *s;
	int i;
	FcBool b;
	double d;
	const FcMatrix *m;
	const FcCharSet *c;
	void *f;
	const FcPattern *p;
	const FcLangSet *l;
    } u;
} FcValue;
typedef struct _FcStrList
 FcStrList;
typedef struct _FcConfig
 FcConfig;
typedef struct _FcStrSet
 FcStrSet;
typedef unsigned int FcChar32;
typedef enum _FcMatchKind {
    FcMatchPattern = 0,
    FcMatchFont = 1
} FcMatchKind;
typedef struct _FcObjectSet {
    int nobject;
    int sobject;
    const char **objects;
} FcObjectSet;
typedef enum {
    FcEndianBig = 0,
    FcEndianLittle = 1
} FcEndian;
typedef struct _FcAtomic
 FcAtomic;
typedef struct _FcConstant {
    const FcChar8 *name;
    const char *object;
    int value;
} FcConstant;
typedef struct _FcFontSet {
    int nfont;
    int sfont;
    FcPattern **fonts;
} FcFontSet;
typedef enum _FcSetName {
    FcSetSystem = 0,
    FcSetApplication = 1
} FcSetName;
typedef struct _FcBlanks
 FcBlanks;
typedef enum _FcResult {
    FcResultMatch = 0,
    FcResultNoMatch = 1,
    FcResultTypeMismatch = 2,
    FcResultNoId = 3,
    FcResultOutOfMemory = 4
} FcResult;
typedef struct _FcObjectType {
    const char *object;
    FcType type;
} FcObjectType;
typedef struct _FcGlobalCache
 FcGlobalCache;
typedef enum _FcLangResult {
    FcLangEqual = 0,
    FcLangDifferentCountry = 1,
    FcLangDifferentLang = 2
} FcLangResult;
typedef short unsigned int FcChar16;
extern FcBool FcPatternAdd(FcPattern *, const char *, FcValue, FcBool);
extern FcStrList *FcConfigGetConfigFiles(FcConfig *);
extern FcBool FcStrSetAdd(FcStrSet *, const FcChar8 *);
extern FcBool FcCharSetIsSubset(const FcCharSet *, const FcCharSet *);
extern void FcDefaultSubstitute(FcPattern *);
extern FcChar32 FcCharSetIntersectCount(const FcCharSet *,
					const FcCharSet *);
extern FcBool FcConfigUptoDate(FcConfig *);
extern void FcPatternDestroy(FcPattern *);
extern FcLangSet *FcLangSetCopy(const FcLangSet *);
extern FcBool FcPatternAddCharSet(FcPattern *, const char *,
				  const FcCharSet *);
extern FcBool FcPatternAddLangSet(FcPattern *, const char *,
				  const FcLangSet *);
extern void FcConfigAppFontClear(FcConfig *);
extern int FcConfigGetRescanInverval(FcConfig *);
extern FcBool FcConfigSubstitute(FcConfig *, FcPattern *, FcMatchKind);
extern FcObjectSet *FcObjectSetBuild(const char *, ...);
extern FcBool FcObjectSetAdd(FcObjectSet *, const char *);
extern FcChar32 FcCharSetSubtractCount(const FcCharSet *,
				       const FcCharSet *);
extern FcBool FcUtf16Len(const FcChar8 *, FcEndian, int, int *, int *);
extern FcBool FcConfigBuildFonts(FcConfig *);
extern FcChar8 *FcAtomicOrigFile(FcAtomic *);
extern FcBool FcNameUnregisterConstants(const FcConstant *, int);
extern FcBool FcConfigSetRescanInverval(FcConfig *, int);
extern FcBool FcAtomicLock(FcAtomic *);
extern FcPattern *FcPatternBuild(FcPattern *, ...);
extern FcFontSet *FcConfigGetFonts(FcConfig *, FcSetName);
extern void FcStrListDone(FcStrList *);
extern FcBool FcLangSetEqual(const FcLangSet *, const FcLangSet *);
extern const FcConstant *FcNameGetConstant(FcChar8 *);
extern void FcMatrixShear(FcMatrix *, double, double);
extern FcMatrix *FcMatrixCopy(const FcMatrix *);
extern FcStrList *FcConfigGetConfigDirs(FcConfig *);
extern FcBool FcStrSetDel(FcStrSet *, const FcChar8 *);
extern FcBool FcConfigEnableHome(FcBool);
extern FcStrSet *FcStrSetCreate(void);
extern int FcStrCmpIgnoreCase(const FcChar8 *, const FcChar8 *);
extern FcCharSet *FcCharSetUnion(const FcCharSet *, const FcCharSet *);
extern FcObjectSet *FcObjectSetCreate(void);
extern FcBlanks *FcBlanksCreate(void);
extern void FcBlanksDestroy(FcBlanks *);
extern FcBool FcNameConstant(FcChar8 *, int *);
extern void FcMatrixRotate(FcMatrix *, double, double);
extern FcPattern *FcNameParse(const FcChar8 *);
extern void FcMatrixMultiply(FcMatrix *, const FcMatrix *,
			     const FcMatrix *);
extern FcResult FcPatternGetLangSet(const FcPattern *, const char *, int,
				    FcLangSet * *);
extern FcValue FcValueSave(FcValue);
extern void FcAtomicDestroy(FcAtomic *);
extern FcBool FcPatternEqual(const FcPattern *, const FcPattern *);
extern FcBool FcNameRegisterObjectTypes(const FcObjectType *, int);
extern FcChar32 FcCharSetNextPage(const FcCharSet *, FcChar32 *,
				  FcChar32 *);
extern FcBool FcConfigSetCurrent(FcConfig *);
extern FcPattern *FcFreeTypeQuery(const FcChar8 *, int, FcBlanks *, int *);
extern FcChar8 *FcStrListNext(FcStrList *);
extern FcBool FcNameRegisterConstants(const FcConstant *, int);
extern void FcValueDestroy(FcValue);
extern FcBool FcFileScan(FcFontSet *, FcStrSet *, FcGlobalCache *,
			 FcBlanks *, const FcChar8 *, FcBool);
extern FcFontSet *FcFontSetSort(FcConfig *, FcFontSet * *, int,
				FcPattern *, FcBool, FcCharSet * *,
				FcResult *);
extern FcResult FcPatternGetString(const FcPattern *, const char *, int,
				   FcChar8 * *);
extern FcChar8 *FcStrCopy(const FcChar8 *);
extern FcBool FcPatternEqualSubset(const FcPattern *, const FcPattern *,
				   const FcObjectSet *);
extern FcConfig *FcInitLoadConfig(void);
extern FcStrList *FcStrListCreate(FcStrSet *);
extern FcResult FcPatternGetCharSet(const FcPattern *, const char *, int,
				    FcCharSet * *);
extern FcPattern *FcPatternCreate(void);
extern FcChar32 FcPatternHash(const FcPattern *);
extern FcChar8 *FcConfigFilename(const FcChar8 *);
extern FcBool FcPatternDel(FcPattern *, const char *);
extern FcCharSet *FcCharSetCopy(FcCharSet *);
extern FcBool FcInitReinitialize(void);
extern FcFontSet *FcFontList(FcConfig *, FcPattern *, FcObjectSet *);
extern int FcUcs4ToUtf8(FcChar32, FcChar8 *);
extern FcBool FcAtomicReplaceOrig(FcAtomic *);
extern FcObjectSet *FcObjectSetVaBuild(const char *, va_list);
extern FcBool FcInitBringUptoDate(void);
extern FcResult FcPatternGetDouble(const FcPattern *, const char *, int,
				   double *);
extern int FcStrCmp(const FcChar8 *, const FcChar8 *);
extern FcChar8 *FcConfigGetCache(FcConfig *);
extern FcAtomic *FcAtomicCreate(const FcChar8 *);
extern FcPattern *FcPatternDuplicate(const FcPattern *);
extern FcChar8 *FcStrDirname(const FcChar8 *);
extern FcBool FcConfigSubstituteWithPat(FcConfig *, FcPattern *,
					FcPattern *, FcMatchKind);
extern FcBool FcDirScan(FcFontSet *, FcStrSet *, FcGlobalCache *,
			FcBlanks *, const FcChar8 *, FcBool);
extern FcChar8 *FcStrCopyFilename(const FcChar8 *);
extern FcBool FcLangSetAdd(FcLangSet *, const FcChar8 *);
extern FcResult FcPatternGetInteger(const FcPattern *, const char *, int,
				    int *);
extern FcBool FcConfigParseAndLoad(FcConfig *, const FcChar8 *, FcBool);
extern FcBool FcStrSetEqual(FcStrSet *, FcStrSet *);
extern FcBool FcConfigAppFontAddFile(FcConfig *, const FcChar8 *);
extern FcPattern *FcFontSetMatch(FcConfig *, FcFontSet * *, int,
				 FcPattern *, FcResult *);
extern FcBool FcStrSetAddFilename(FcStrSet *, const FcChar8 *);
extern FcChar8 *FcNameUnparse(FcPattern *);
extern FcChar32 FcCharSetFirstPage(const FcCharSet *, FcChar32 *,
				   FcChar32 *);
extern void FcFontSetPrint(const FcFontSet *);
extern FcPattern *FcPatternVaBuild(FcPattern *, va_list);
extern FcChar8 *FcConfigHome(void);
extern FcBool FcBlanksAdd(FcBlanks *, FcChar32);
extern FcBool FcBlanksIsMember(FcBlanks *, FcChar32);
extern FcBool FcNameUnregisterObjectTypes(const FcObjectType *, int);
extern FcLangResult FcLangSetHasLang(const FcLangSet *, const FcChar8 *);
extern FcChar8 *FcStrBasename(const FcChar8 *);
extern FcPattern *FcFontMatch(FcConfig *, FcPattern *, FcResult *);
extern void FcValuePrint(const FcValue);
extern FcLangSet *FcLangSetCreate(void);
extern FcStrList *FcConfigGetFontDirs(FcConfig *);
extern FcBool FcCharSetAddChar(FcCharSet *, FcChar32);
extern FcCharSet *FcCharSetIntersect(const FcCharSet *, const FcCharSet *);
extern void FcMatrixScale(FcMatrix *, double, double);
extern void FcPatternReference(FcPattern *);
extern FcBool FcCharSetEqual(const FcCharSet *, const FcCharSet *);
extern FcBool FcFontSetAdd(FcFontSet *, FcPattern *);
extern FcChar8 *FcAtomicNewFile(FcAtomic *);
extern FcFontSet *FcFontSetList(FcConfig *, FcFontSet * *, int,
				FcPattern *, FcObjectSet *);
extern void FcFontSetSortDestroy(FcFontSet *);
extern FcBool FcPatternAddMatrix(FcPattern *, const char *,
				 const FcMatrix *);
extern FcChar32 FcCharSetCount(const FcCharSet *);
extern FcBool FcPatternAddString(FcPattern *, const char *,
				 const FcChar8 *);
extern void FcStrSetDestroy(FcStrSet *);
extern FcConfig *FcConfigGetCurrent(void);
extern FcBool FcPatternAddInteger(FcPattern *, const char *, int);
extern FcResult FcPatternGetMatrix(const FcPattern *, const char *, int,
				   FcMatrix * *);
extern int FcGetVersion(void);
extern FcBool FcCharSetHasChar(const FcCharSet *, FcChar32);
extern FcBool FcPatternAddBool(FcPattern *, const char *, FcBool);
extern const FcObjectType *FcNameGetObjectType(const char *);
extern FcBool FcDirCacheValid(const FcChar8 *);
extern FcBool FcUtf8Len(const FcChar8 *, int, int *, int *);
extern FcConfig *FcInitLoadConfigAndFonts(void);
extern FcResult FcPatternGetBool(const FcPattern *, const char *, int,
				 FcBool *);
extern void FcFontSetDestroy(FcFontSet *);
extern FcBool FcConfigAppFontAddDir(FcConfig *, const FcChar8 *);
extern int FcUtf16ToUcs4(const FcChar8 *, FcEndian, FcChar32 *, int);
extern int FcUtf8ToUcs4(const FcChar8 *, FcChar32 *, int);
extern FcFontSet *FcFontSetCreate(void);
extern FcBool FcDirSave(FcFontSet *, FcStrSet *, const FcChar8 *);
extern void FcConfigDestroy(FcConfig *);
extern FcBool FcPatternAddDouble(FcPattern *, const char *, double);
extern FcFontSet *FcFontSort(FcConfig *, FcPattern *, FcBool,
			     FcCharSet * *, FcResult *);
extern FcPattern *FcFontRenderPrepare(FcConfig *, FcPattern *,
				      FcPattern *);
extern void FcLangSetDestroy(FcLangSet *);
extern void FcCharSetDestroy(FcCharSet *);
extern FcBool FcValueEqual(FcValue, FcValue);
extern FcBool FcPatternAddWeak(FcPattern *, const char *, FcValue, FcBool);
extern FcBool FcLangSetContains(const FcLangSet *, const FcLangSet *);
extern void FcObjectSetDestroy(FcObjectSet *);
extern FcCharSet *FcCharSetCreate(void);
extern FcLangResult FcLangSetCompare(const FcLangSet *, const FcLangSet *);
extern FcBool FcMatrixEqual(const FcMatrix *, const FcMatrix *);
extern void FcAtomicUnlock(FcAtomic *);
extern FcBool FcStrSetMember(FcStrSet *, const FcChar8 *);
extern FcChar32 FcLangSetHash(const FcLangSet *);
extern void FcAtomicDeleteNew(FcAtomic *);
extern FcCharSet *FcCharSetSubtract(const FcCharSet *, const FcCharSet *);
extern FcBool FcInit(void);
extern FcResult FcPatternGet(const FcPattern *, const char *, int,
			     FcValue *);
extern void FcPatternPrint(const FcPattern *);
extern FcBlanks *FcConfigGetBlanks(FcConfig *);
</SCREEN>
</SECT2>
</SECT1>
<!-- End of text generated from database -->
<!--    by $Header: /cvsroot/lsb/lsbspec/mklibspec,v 1.80 2006/02/27 19:51:04 nick Exp 0 -->

</CHAPTER>

<CHAPTER ID=fontconfigcommand>
<TITLE>Commands and Utilities</TITLE>
<SECT1 ID=cmdutil>
<TITLE>Commands and Utilities</TITLE>
<!-- Start of text generated from database -->
<PARA>
An LSB conforming implementation shall provide the
commands and utilities as described in <XREF LINKEND="tbl-cmds">, with at least the behavior
described as mandatory in the referenced underlying
specification, with the following exceptions:
<ORDEREDLIST>
<LISTITEM><PARA>
If any operand (except one which follows <option>--</option>) starts with a
hyphen, the behavior is unspecified.
<NOTE><TITLE>Rationale (Informative)</TITLE>
<para>Applications should place options before operands, or use
<option>--</option>, as needed.  This text is needed because,
by default, GNU option parsing
differs from POSIX, unless the environment variable 
<ENVAR>POSIXLY_CORRECT</ENVAR>
is set.  For example, <command>ls . -a</command> in GNU
<command>ls</command> means to list the current directory, showing all
files (that is, <option>"."</option> is an operand and <option>-a</option> is an
option).  In POSIX, <option>"."</option> and <option>-a</option> are both operands,
and the command means to list the current directory, and also the file
named <filename>-a</filename>.  Suggesting that applications rely on the
setting of the <envar>POSIXLY_CORRECT</envar> environment variable,
or try to set it, seems worse than just asking the applictions to invoke
commands in ways which work with either the POSIX or GNU behaviors.</para>

</NOTE>
</PARA></LISTITEM>
</ORDEREDLIST>
</PARA>
<TABLE id="tbl-cmds">
<TITLE>Commands And Utilities</TITLE>
<TGROUP COLS=5>
<TBODY>
<ROW>
<ENTRY>fc-cache
<LINK LINKEND="std-cmd-10"> [1]</LINK>
</ENTRY>
<ENTRY>fc-list
<LINK LINKEND="std-cmd-10"> [1]</LINK>
</ENTRY>
<ENTRY>fc-match
<LINK LINKEND="std-cmd-10"> [1]</LINK>
</ENTRY>
<ENTRY>
</ENTRY>
<ENTRY>
</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-cmd-10">[1]</TITLE><para><XREF LINKEND=std.LSB></para></FORMALPARA>
<!-- End of text generated from database -->

</SECT1>
<!-- Start of text generated from database -->
<!-- generated from the LSB specification database -->
<!--    by $Header: /cvsroot/lsb/lsbspec/mkcmdlist,v 1.3 2006/01/20 13:19:39 pradosh Exp 0 -->
<!--    at Wed Mar 15 18:20:23 2006 -->
<SECT1 ID=cmdbehav>
<TITLE>Command Behavior</TITLE>
<PARA>
This section contains descriptions for commands and utilities whose
specified behavior in the LSB contradicts or extends the standards
referenced. It also contains commands and utilities only required by
the LSB and not specified by other standards.
</PARA>
<REFENTRY id="fc-cache">
<REFMETA><REFENTRYTITLE>
fc-cache
</REFENTRYTITLE></REFMETA>
<REFNAMEDIV>
<REFNAME>fc-cache</REFNAME>
<REFPURPOSE>
build font information cache files
</REFPURPOSE>
</REFNAMEDIV>

<REFSECT1>
<TITLE>Description</TITLE>
<PARA>
<COMMAND>fc-cache</COMMAND> scans  the  font  directories on the system and builds font information cache files for applications using fontconfig for their font handling.  If directory arguments are not given, fc-cache uses each directory in the current font configuration. Each directory is scanned for font files readable  by FreeType.  A cache is created which contains properties of each font and the associated filename.  This cache is used to speed up application startup when using the fontconfig library.
</PARA>
</REFSECT1>

<REFSECT1>
<TITLE>Synopsis</TITLE>
<PARA>fc-cache  [  -fsvV?  ]  [  --force  ] [ --system-only ] [ --verbose ] [ --version ] [ --help ] [ dirs ]</PARA>
</REFSECT1>

<REFSECT1>
<TITLE>Option and Operand Handling</TITLE>
<PARA>
This program follows the usual GNU command line syntax, with long options starting with two dashes ('-').  A summary of options is included below.
<variablelist>
<varlistentry>
<term><parameter>-f --force</parameter></term>
<listitem><para> Force re-generation of apparently up-to-date cache files, overriding the timestamp checking.</para></listitem>
</varlistentry>
<varlistentry>
<term><parameter>-s --system-only</parameter></term>
<listitem><para>Only scan system-wide directories, omitting the places located in the user's home directory.</para></listitem>
</varlistentry>
<varlistentry>
<term><parameter>-v --verbose</parameter></term>
<listitem><para>Display status information while busy.</para></listitem>
</varlistentry>
<varlistentry>
<term><parameter>-? --help</parameter></term>
<listitem><para>Show summary of options.</para></listitem>
</varlistentry>
<varlistentry>
<term><parameter>-V --version</parameter></term>
<listitem><para>Show version of the program and exit.</para></listitem>
</varlistentry>
<varlistentry>
<term><parameter>dirs</parameter></term>
<listitem><para>A list of directories to scan for fonts.</para></listitem>
</varlistentry>
</variablelist>
</PARA>
</REFSECT1>

</REFENTRY>

<REFENTRY id="fc-list">
<REFMETA><REFENTRYTITLE>
fc-list
</REFENTRYTITLE></REFMETA>
<REFNAMEDIV>
<REFNAME>fc-list</REFNAME>
<REFPURPOSE>
list available  fonts.
</REFPURPOSE>
</REFNAMEDIV>

<REFSECT1>
<TITLE>Description</TITLE>
<PARA>
<COMMAND>fc-list</COMMAND> lists fonts and styles available on the system for applications using fontconfig. 
</PARA>

</REFSECT1>

<REFSECT1>
<TITLE>Synopsis</TITLE>
<PARA> fc-list  [  -vV?] [ --verbose ] [ --version ] [ --help ] [ pattern ] [ element ]
</PARA>

</REFSECT1>

<REFSECT1>
<TITLE>Option and Operand Handling</TITLE>
<PARA>
This  program  follows  the usual GNU command line syntax, with long options starting with two dashes ('-'). A summary of options is included below.
<variablelist>
<varlistentry>
<term><parameter>-v --verbose</parameter></term>
<listitem><para>Display status information while busy.</para></listitem>
</varlistentry>
<varlistentry>
<term><parameter>-? --help</parameter></term>
<listitem><para>Show summary of options.</para></listitem>
</varlistentry>
<varlistentry>
<term><parameter>-V --version</parameter></term>
<listitem><para>Show version of the program and exit.</para></listitem>
</varlistentry>
<varlistentry>
<term><parameter>pattern</parameter></term>
<listitem><para>If this argument is set, only fonts matching pattern are displayed.</para></listitem>
</varlistentry>
<varlistentry>
<term><parameter>element</parameter></term>
<listitem><para>If set, the element property is displayed for matching fonts.</para></listitem>
</varlistentry>
</variablelist>
</para>
</REFSECT1>

</REFENTRY>

<REFENTRY id="fc-match">
<REFMETA><REFENTRYTITLE>
fc-match
</REFENTRYTITLE></REFMETA>
<REFNAMEDIV>
<REFNAME>fc-match</REFNAME>
<REFPURPOSE>
match available fonts
</REFPURPOSE>
</REFNAMEDIV>

<REFSECT1>
<TITLE>Description</TITLE>
<PARA>
fc-match matches font-pattern (empty pattern by default) using the normal fontconfig matching rules to find the best font available.  If --sort 
is given, the sorted list of  best  matching  fonts  is  displayed. With  --verbose,  the whole font pattern for each match is printed, 
otherwise only the file, family and style are printed.</PARA>

</REFSECT1>
</REFENTRY>



</SECT1>
<!-- End of text generated from database -->
<!--    by $Header: /cvsroot/lsb/lsbspec/mkcmdlist,v 1.3 2006/01/20 13:19:39 pradosh Exp 0 -->

</CHAPTER>

</PART>
