<!-- Start of generated text - do not edit! -->
<!-- generated from the LSB specification database by mklibspec -->
<SECT1 ID=libcairo>
<TITLE>Interfaces for libcairo</TITLE>
<PARA>
<XREF LINKEND="lib-libcairo-def"> defines the library name and shared object name
for the libcairo library
</PARA>
<TABLE id="lib-libcairo-def">
<TITLE>libcairo Definition</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Library:</ENTRY>
<ENTRY>libcairo</ENTRY>
</ROW>
<ROW>
<ENTRY>SONAME:</ENTRY>
<ENTRY>libcairo.so.2</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The behavior of the interfaces in this library is specified by the following specifications:<SIMPLELIST COLUMNS=1>
<MEMBER ID='REFSTD.libcairo.1'>
[Cairo 1.2.0] <XREF LINKEND="std.Cairo.1.2.0">
</MEMBER>
</SIMPLELIST>
</PARA>
<!-- debug: database interface name Cairo Vector Graphics Library -->
<SECT2>
<!--libgroup-->
<TITLE>Cairo Vector Graphics Library</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Interfaces for Cairo Vector Graphics Library</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic functions
for Cairo Vector Graphics Library specified in <XREF linkend="tbl-libcairo-cairo-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<TABLE id="tbl-libcairo-cairo-ints">
<TITLE>libcairo - Cairo Vector Graphics Library Function Interfaces</TITLE>
<TGROUP COLS=3>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>cairo_append_path</primary></indexterm>cairo_append_path <LINK LINKEND="REFSTD.libcairo.1">[Cairo 1.2.0]</LINK></ENTRY>
<ENTRY><indexterm><primary>cairo_arc</primary></indexterm>cairo_arc <LINK LINKEND="REFSTD.libcairo.1">[Cairo 1.2.0]</LINK></ENTRY>
<ENTRY><indexterm><primary>cairo_arc_negative</primary></indexterm>cairo_arc_negative <LINK LINKEND="REFSTD.libcairo.1">[Cairo 1.2.0]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>cairo_clip</primary></indexterm>cairo_clip <LINK LINKEND="REFSTD.libcairo.1">[Cairo 1.2.0]</LINK></ENTRY>
<ENTRY><indexterm><primary>cairo_clip_preserve</primary></indexterm>cairo_clip_preserve <LINK LINKEND="REFSTD.libcairo.1">[Cairo 1.2.0]</LINK></ENTRY>
<ENTRY><indexterm><primary>cairo_close_path</primary></indexterm>cairo_close_path <LINK LINKEND="REFSTD.libcairo.1">[Cairo 1.2.0]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>cairo_copy_page</primary></indexterm>cairo_copy_page <LINK LINKEND="REFSTD.libcairo.1">[Cairo 1.2.0]</LINK></ENTRY>
<ENTRY><indexterm><primary>cairo_copy_path</primary></indexterm>cairo_copy_path <LINK LINKEND="REFSTD.libcairo.1">[Cairo 1.2.0]</LINK></ENTRY>
<ENTRY><indexterm><primary>cairo_copy_path_flat</primary></indexterm>cairo_copy_path_flat <LINK LINKEND="REFSTD.libcairo.1">[Cairo 1.2.0]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>cairo_create</primary></indexterm>cairo_create <LINK LINKEND="REFSTD.libcairo.1">[Cairo 1.2.0]</LINK></ENTRY>
<ENTRY><indexterm><primary>cairo_curve_to</primary></indexterm>cairo_curve_to <LINK LINKEND="REFSTD.libcairo.1">[Cairo 1.2.0]</LINK></ENTRY>
<ENTRY><indexterm><primary>cairo_destroy</primary></indexterm>cairo_destroy <LINK LINKEND="REFSTD.libcairo.1">[Cairo 1.2.0]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>cairo_device_to_user</primary></indexterm>cairo_device_to_user <LINK LINKEND="REFSTD.libcairo.1">[Cairo 1.2.0]</LINK></ENTRY>
<ENTRY><indexterm><primary>cairo_device_to_user_distance</primary></indexterm>cairo_device_to_user_distance <LINK LINKEND="REFSTD.libcairo.1">[Cairo 1.2.0]</LINK></ENTRY>
<ENTRY><indexterm><primary>cairo_fill</primary></indexterm>cairo_fill <LINK LINKEND="REFSTD.libcairo.1">[Cairo 1.2.0]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>cairo_fill_extents</primary></indexterm>cairo_fill_extents <LINK LINKEND="REFSTD.libcairo.1">[Cairo 1.2.0]</LINK></ENTRY>
<ENTRY><indexterm><primary>cairo_fill_preserve</primary></indexterm>cairo_fill_preserve <LINK LINKEND="REFSTD.libcairo.1">[Cairo 1.2.0]</LINK></ENTRY>
<ENTRY><indexterm><primary>cairo_font_extents</primary></indexterm>cairo_font_extents <LINK LINKEND="REFSTD.libcairo.1">[Cairo 1.2.0]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>cairo_font_face_destroy</primary></indexterm>cairo_font_face_destroy <LINK LINKEND="REFSTD.libcairo.1">[Cairo 1.2.0]</LINK></ENTRY>
<ENTRY><indexterm><primary>cairo_font_face_get_type</primary></indexterm>cairo_font_face_get_type <LINK LINKEND="REFSTD.libcairo.1">[Cairo 1.2.0]</LINK></ENTRY>
<ENTRY><indexterm><primary>cairo_font_face_get_user_data</primary></indexterm>cairo_font_face_get_user_data <LINK LINKEND="REFSTD.libcairo.1">[Cairo 1.2.0]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>cairo_font_face_reference</primary></indexterm>cairo_font_face_reference <LINK LINKEND="REFSTD.libcairo.1">[Cairo 1.2.0]</LINK></ENTRY>
<ENTRY><indexterm><primary>cairo_font_face_set_user_data</primary></indexterm>cairo_font_face_set_user_data <LINK LINKEND="REFSTD.libcairo.1">[Cairo 1.2.0]</LINK></ENTRY>
<ENTRY><indexterm><primary>cairo_font_face_status</primary></indexterm>cairo_font_face_status <LINK LINKEND="REFSTD.libcairo.1">[Cairo 1.2.0]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>cairo_font_options_copy</primary></indexterm>cairo_font_options_copy <LINK LINKEND="REFSTD.libcairo.1">[Cairo 1.2.0]</LINK></ENTRY>
<ENTRY><indexterm><primary>cairo_font_options_create</primary></indexterm>cairo_font_options_create <LINK LINKEND="REFSTD.libcairo.1">[Cairo 1.2.0]</LINK></ENTRY>
<ENTRY><indexterm><primary>cairo_font_options_destroy</primary></indexterm>cairo_font_options_destroy <LINK LINKEND="REFSTD.libcairo.1">[Cairo 1.2.0]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>cairo_font_options_equal</primary></indexterm>cairo_font_options_equal <LINK LINKEND="REFSTD.libcairo.1">[Cairo 1.2.0]</LINK></ENTRY>
<ENTRY><indexterm><primary>cairo_font_options_get_antialias</primary></indexterm>cairo_font_options_get_antialias <LINK LINKEND="REFSTD.libcairo.1">[Cairo 1.2.0]</LINK></ENTRY>
<ENTRY><indexterm><primary>cairo_font_options_get_hint_metrics</primary></indexterm>cairo_font_options_get_hint_metrics <LINK LINKEND="REFSTD.libcairo.1">[Cairo 1.2.0]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>cairo_font_options_get_hint_style</primary></indexterm>cairo_font_options_get_hint_style <LINK LINKEND="REFSTD.libcairo.1">[Cairo 1.2.0]</LINK></ENTRY>
<ENTRY><indexterm><primary>cairo_font_options_get_subpixel_order</primary></indexterm>cairo_font_options_get_subpixel_order <LINK LINKEND="REFSTD.libcairo.1">[Cairo 1.2.0]</LINK></ENTRY>
<ENTRY><indexterm><primary>cairo_font_options_hash</primary></indexterm>cairo_font_options_hash <LINK LINKEND="REFSTD.libcairo.1">[Cairo 1.2.0]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>cairo_font_options_merge</primary></indexterm>cairo_font_options_merge <LINK LINKEND="REFSTD.libcairo.1">[Cairo 1.2.0]</LINK></ENTRY>
<ENTRY><indexterm><primary>cairo_font_options_set_antialias</primary></indexterm>cairo_font_options_set_antialias <LINK LINKEND="REFSTD.libcairo.1">[Cairo 1.2.0]</LINK></ENTRY>
<ENTRY><indexterm><primary>cairo_font_options_set_hint_metrics</primary></indexterm>cairo_font_options_set_hint_metrics <LINK LINKEND="REFSTD.libcairo.1">[Cairo 1.2.0]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>cairo_font_options_set_hint_style</primary></indexterm>cairo_font_options_set_hint_style <LINK LINKEND="REFSTD.libcairo.1">[Cairo 1.2.0]</LINK></ENTRY>
<ENTRY><indexterm><primary>cairo_font_options_set_subpixel_order</primary></indexterm>cairo_font_options_set_subpixel_order <LINK LINKEND="REFSTD.libcairo.1">[Cairo 1.2.0]</LINK></ENTRY>
<ENTRY><indexterm><primary>cairo_font_options_status</primary></indexterm>cairo_font_options_status <LINK LINKEND="REFSTD.libcairo.1">[Cairo 1.2.0]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>cairo_ft_font_face_create_for_ft_face</primary></indexterm>cairo_ft_font_face_create_for_ft_face <LINK LINKEND="REFSTD.libcairo.1">[Cairo 1.2.0]</LINK></ENTRY>
<ENTRY><indexterm><primary>cairo_ft_font_face_create_for_pattern</primary></indexterm>cairo_ft_font_face_create_for_pattern <LINK LINKEND="REFSTD.libcairo.1">[Cairo 1.2.0]</LINK></ENTRY>
<ENTRY><indexterm><primary>cairo_ft_font_options_substitute</primary></indexterm>cairo_ft_font_options_substitute <LINK LINKEND="REFSTD.libcairo.1">[Cairo 1.2.0]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>cairo_ft_scaled_font_lock_face</primary></indexterm>cairo_ft_scaled_font_lock_face <LINK LINKEND="REFSTD.libcairo.1">[Cairo 1.2.0]</LINK></ENTRY>
<ENTRY><indexterm><primary>cairo_ft_scaled_font_unlock_face</primary></indexterm>cairo_ft_scaled_font_unlock_face <LINK LINKEND="REFSTD.libcairo.1">[Cairo 1.2.0]</LINK></ENTRY>
<ENTRY><indexterm><primary>cairo_get_antialias</primary></indexterm>cairo_get_antialias <LINK LINKEND="REFSTD.libcairo.1">[Cairo 1.2.0]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>cairo_get_current_point</primary></indexterm>cairo_get_current_point <LINK LINKEND="REFSTD.libcairo.1">[Cairo 1.2.0]</LINK></ENTRY>
<ENTRY><indexterm><primary>cairo_get_fill_rule</primary></indexterm>cairo_get_fill_rule <LINK LINKEND="REFSTD.libcairo.1">[Cairo 1.2.0]</LINK></ENTRY>
<ENTRY><indexterm><primary>cairo_get_font_face</primary></indexterm>cairo_get_font_face <LINK LINKEND="REFSTD.libcairo.1">[Cairo 1.2.0]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>cairo_get_font_matrix</primary></indexterm>cairo_get_font_matrix <LINK LINKEND="REFSTD.libcairo.1">[Cairo 1.2.0]</LINK></ENTRY>
<ENTRY><indexterm><primary>cairo_get_font_options</primary></indexterm>cairo_get_font_options <LINK LINKEND="REFSTD.libcairo.1">[Cairo 1.2.0]</LINK></ENTRY>
<ENTRY><indexterm><primary>cairo_get_group_target</primary></indexterm>cairo_get_group_target <LINK LINKEND="REFSTD.libcairo.1">[Cairo 1.2.0]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>cairo_get_line_cap</primary></indexterm>cairo_get_line_cap <LINK LINKEND="REFSTD.libcairo.1">[Cairo 1.2.0]</LINK></ENTRY>
<ENTRY><indexterm><primary>cairo_get_line_join</primary></indexterm>cairo_get_line_join <LINK LINKEND="REFSTD.libcairo.1">[Cairo 1.2.0]</LINK></ENTRY>
<ENTRY><indexterm><primary>cairo_get_line_width</primary></indexterm>cairo_get_line_width <LINK LINKEND="REFSTD.libcairo.1">[Cairo 1.2.0]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>cairo_get_matrix</primary></indexterm>cairo_get_matrix <LINK LINKEND="REFSTD.libcairo.1">[Cairo 1.2.0]</LINK></ENTRY>
<ENTRY><indexterm><primary>cairo_get_miter_limit</primary></indexterm>cairo_get_miter_limit <LINK LINKEND="REFSTD.libcairo.1">[Cairo 1.2.0]</LINK></ENTRY>
<ENTRY><indexterm><primary>cairo_get_operator</primary></indexterm>cairo_get_operator <LINK LINKEND="REFSTD.libcairo.1">[Cairo 1.2.0]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>cairo_get_source</primary></indexterm>cairo_get_source <LINK LINKEND="REFSTD.libcairo.1">[Cairo 1.2.0]</LINK></ENTRY>
<ENTRY><indexterm><primary>cairo_get_target</primary></indexterm>cairo_get_target <LINK LINKEND="REFSTD.libcairo.1">[Cairo 1.2.0]</LINK></ENTRY>
<ENTRY><indexterm><primary>cairo_get_tolerance</primary></indexterm>cairo_get_tolerance <LINK LINKEND="REFSTD.libcairo.1">[Cairo 1.2.0]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>cairo_glyph_extents</primary></indexterm>cairo_glyph_extents <LINK LINKEND="REFSTD.libcairo.1">[Cairo 1.2.0]</LINK></ENTRY>
<ENTRY><indexterm><primary>cairo_glyph_path</primary></indexterm>cairo_glyph_path <LINK LINKEND="REFSTD.libcairo.1">[Cairo 1.2.0]</LINK></ENTRY>
<ENTRY><indexterm><primary>cairo_identity_matrix</primary></indexterm>cairo_identity_matrix <LINK LINKEND="REFSTD.libcairo.1">[Cairo 1.2.0]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>cairo_image_surface_create</primary></indexterm>cairo_image_surface_create <LINK LINKEND="REFSTD.libcairo.1">[Cairo 1.2.0]</LINK></ENTRY>
<ENTRY><indexterm><primary>cairo_image_surface_create_for_data</primary></indexterm>cairo_image_surface_create_for_data <LINK LINKEND="REFSTD.libcairo.1">[Cairo 1.2.0]</LINK></ENTRY>
<ENTRY><indexterm><primary>cairo_image_surface_create_from_png</primary></indexterm>cairo_image_surface_create_from_png <LINK LINKEND="REFSTD.libcairo.1">[Cairo 1.2.0]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>cairo_image_surface_create_from_png_stream</primary></indexterm>cairo_image_surface_create_from_png_stream <LINK LINKEND="REFSTD.libcairo.1">[Cairo 1.2.0]</LINK></ENTRY>
<ENTRY><indexterm><primary>cairo_image_surface_get_data</primary></indexterm>cairo_image_surface_get_data <LINK LINKEND="REFSTD.libcairo.1">[Cairo 1.2.0]</LINK></ENTRY>
<ENTRY><indexterm><primary>cairo_image_surface_get_format</primary></indexterm>cairo_image_surface_get_format <LINK LINKEND="REFSTD.libcairo.1">[Cairo 1.2.0]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>cairo_image_surface_get_height</primary></indexterm>cairo_image_surface_get_height <LINK LINKEND="REFSTD.libcairo.1">[Cairo 1.2.0]</LINK></ENTRY>
<ENTRY><indexterm><primary>cairo_image_surface_get_stride</primary></indexterm>cairo_image_surface_get_stride <LINK LINKEND="REFSTD.libcairo.1">[Cairo 1.2.0]</LINK></ENTRY>
<ENTRY><indexterm><primary>cairo_image_surface_get_width</primary></indexterm>cairo_image_surface_get_width <LINK LINKEND="REFSTD.libcairo.1">[Cairo 1.2.0]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>cairo_in_fill</primary></indexterm>cairo_in_fill <LINK LINKEND="REFSTD.libcairo.1">[Cairo 1.2.0]</LINK></ENTRY>
<ENTRY><indexterm><primary>cairo_in_stroke</primary></indexterm>cairo_in_stroke <LINK LINKEND="REFSTD.libcairo.1">[Cairo 1.2.0]</LINK></ENTRY>
<ENTRY><indexterm><primary>cairo_line_to</primary></indexterm>cairo_line_to <LINK LINKEND="REFSTD.libcairo.1">[Cairo 1.2.0]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>cairo_mask</primary></indexterm>cairo_mask <LINK LINKEND="REFSTD.libcairo.1">[Cairo 1.2.0]</LINK></ENTRY>
<ENTRY><indexterm><primary>cairo_mask_surface</primary></indexterm>cairo_mask_surface <LINK LINKEND="REFSTD.libcairo.1">[Cairo 1.2.0]</LINK></ENTRY>
<ENTRY><indexterm><primary>cairo_matrix_init</primary></indexterm>cairo_matrix_init <LINK LINKEND="REFSTD.libcairo.1">[Cairo 1.2.0]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>cairo_matrix_init_identity</primary></indexterm>cairo_matrix_init_identity <LINK LINKEND="REFSTD.libcairo.1">[Cairo 1.2.0]</LINK></ENTRY>
<ENTRY><indexterm><primary>cairo_matrix_init_rotate</primary></indexterm>cairo_matrix_init_rotate <LINK LINKEND="REFSTD.libcairo.1">[Cairo 1.2.0]</LINK></ENTRY>
<ENTRY><indexterm><primary>cairo_matrix_init_scale</primary></indexterm>cairo_matrix_init_scale <LINK LINKEND="REFSTD.libcairo.1">[Cairo 1.2.0]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>cairo_matrix_init_translate</primary></indexterm>cairo_matrix_init_translate <LINK LINKEND="REFSTD.libcairo.1">[Cairo 1.2.0]</LINK></ENTRY>
<ENTRY><indexterm><primary>cairo_matrix_invert</primary></indexterm>cairo_matrix_invert <LINK LINKEND="REFSTD.libcairo.1">[Cairo 1.2.0]</LINK></ENTRY>
<ENTRY><indexterm><primary>cairo_matrix_multiply</primary></indexterm>cairo_matrix_multiply <LINK LINKEND="REFSTD.libcairo.1">[Cairo 1.2.0]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>cairo_matrix_rotate</primary></indexterm>cairo_matrix_rotate <LINK LINKEND="REFSTD.libcairo.1">[Cairo 1.2.0]</LINK></ENTRY>
<ENTRY><indexterm><primary>cairo_matrix_scale</primary></indexterm>cairo_matrix_scale <LINK LINKEND="REFSTD.libcairo.1">[Cairo 1.2.0]</LINK></ENTRY>
<ENTRY><indexterm><primary>cairo_matrix_transform_distance</primary></indexterm>cairo_matrix_transform_distance <LINK LINKEND="REFSTD.libcairo.1">[Cairo 1.2.0]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>cairo_matrix_transform_point</primary></indexterm>cairo_matrix_transform_point <LINK LINKEND="REFSTD.libcairo.1">[Cairo 1.2.0]</LINK></ENTRY>
<ENTRY><indexterm><primary>cairo_matrix_translate</primary></indexterm>cairo_matrix_translate <LINK LINKEND="REFSTD.libcairo.1">[Cairo 1.2.0]</LINK></ENTRY>
<ENTRY><indexterm><primary>cairo_move_to</primary></indexterm>cairo_move_to <LINK LINKEND="REFSTD.libcairo.1">[Cairo 1.2.0]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>cairo_new_path</primary></indexterm>cairo_new_path <LINK LINKEND="REFSTD.libcairo.1">[Cairo 1.2.0]</LINK></ENTRY>
<ENTRY><indexterm><primary>cairo_new_sub_path</primary></indexterm>cairo_new_sub_path <LINK LINKEND="REFSTD.libcairo.1">[Cairo 1.2.0]</LINK></ENTRY>
<ENTRY><indexterm><primary>cairo_paint</primary></indexterm>cairo_paint <LINK LINKEND="REFSTD.libcairo.1">[Cairo 1.2.0]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>cairo_paint_with_alpha</primary></indexterm>cairo_paint_with_alpha <LINK LINKEND="REFSTD.libcairo.1">[Cairo 1.2.0]</LINK></ENTRY>
<ENTRY><indexterm><primary>cairo_path_destroy</primary></indexterm>cairo_path_destroy <LINK LINKEND="REFSTD.libcairo.1">[Cairo 1.2.0]</LINK></ENTRY>
<ENTRY><indexterm><primary>cairo_pattern_add_color_stop_rgb</primary></indexterm>cairo_pattern_add_color_stop_rgb <LINK LINKEND="REFSTD.libcairo.1">[Cairo 1.2.0]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>cairo_pattern_add_color_stop_rgba</primary></indexterm>cairo_pattern_add_color_stop_rgba <LINK LINKEND="REFSTD.libcairo.1">[Cairo 1.2.0]</LINK></ENTRY>
<ENTRY><indexterm><primary>cairo_pattern_create_for_surface</primary></indexterm>cairo_pattern_create_for_surface <LINK LINKEND="REFSTD.libcairo.1">[Cairo 1.2.0]</LINK></ENTRY>
<ENTRY><indexterm><primary>cairo_pattern_create_linear</primary></indexterm>cairo_pattern_create_linear <LINK LINKEND="REFSTD.libcairo.1">[Cairo 1.2.0]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>cairo_pattern_create_radial</primary></indexterm>cairo_pattern_create_radial <LINK LINKEND="REFSTD.libcairo.1">[Cairo 1.2.0]</LINK></ENTRY>
<ENTRY><indexterm><primary>cairo_pattern_create_rgb</primary></indexterm>cairo_pattern_create_rgb <LINK LINKEND="REFSTD.libcairo.1">[Cairo 1.2.0]</LINK></ENTRY>
<ENTRY><indexterm><primary>cairo_pattern_create_rgba</primary></indexterm>cairo_pattern_create_rgba <LINK LINKEND="REFSTD.libcairo.1">[Cairo 1.2.0]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>cairo_pattern_destroy</primary></indexterm>cairo_pattern_destroy <LINK LINKEND="REFSTD.libcairo.1">[Cairo 1.2.0]</LINK></ENTRY>
<ENTRY><indexterm><primary>cairo_pattern_get_extend</primary></indexterm>cairo_pattern_get_extend <LINK LINKEND="REFSTD.libcairo.1">[Cairo 1.2.0]</LINK></ENTRY>
<ENTRY><indexterm><primary>cairo_pattern_get_filter</primary></indexterm>cairo_pattern_get_filter <LINK LINKEND="REFSTD.libcairo.1">[Cairo 1.2.0]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>cairo_pattern_get_matrix</primary></indexterm>cairo_pattern_get_matrix <LINK LINKEND="REFSTD.libcairo.1">[Cairo 1.2.0]</LINK></ENTRY>
<ENTRY><indexterm><primary>cairo_pattern_get_type</primary></indexterm>cairo_pattern_get_type <LINK LINKEND="REFSTD.libcairo.1">[Cairo 1.2.0]</LINK></ENTRY>
<ENTRY><indexterm><primary>cairo_pattern_reference</primary></indexterm>cairo_pattern_reference <LINK LINKEND="REFSTD.libcairo.1">[Cairo 1.2.0]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>cairo_pattern_set_extend</primary></indexterm>cairo_pattern_set_extend <LINK LINKEND="REFSTD.libcairo.1">[Cairo 1.2.0]</LINK></ENTRY>
<ENTRY><indexterm><primary>cairo_pattern_set_filter</primary></indexterm>cairo_pattern_set_filter <LINK LINKEND="REFSTD.libcairo.1">[Cairo 1.2.0]</LINK></ENTRY>
<ENTRY><indexterm><primary>cairo_pattern_set_matrix</primary></indexterm>cairo_pattern_set_matrix <LINK LINKEND="REFSTD.libcairo.1">[Cairo 1.2.0]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>cairo_pattern_status</primary></indexterm>cairo_pattern_status <LINK LINKEND="REFSTD.libcairo.1">[Cairo 1.2.0]</LINK></ENTRY>
<ENTRY><indexterm><primary>cairo_pdf_surface_create</primary></indexterm>cairo_pdf_surface_create <LINK LINKEND="REFSTD.libcairo.1">[Cairo 1.2.0]</LINK></ENTRY>
<ENTRY><indexterm><primary>cairo_pdf_surface_create_for_stream</primary></indexterm>cairo_pdf_surface_create_for_stream <LINK LINKEND="REFSTD.libcairo.1">[Cairo 1.2.0]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>cairo_pdf_surface_set_size</primary></indexterm>cairo_pdf_surface_set_size <LINK LINKEND="REFSTD.libcairo.1">[Cairo 1.2.0]</LINK></ENTRY>
<ENTRY><indexterm><primary>cairo_pop_group</primary></indexterm>cairo_pop_group <LINK LINKEND="REFSTD.libcairo.1">[Cairo 1.2.0]</LINK></ENTRY>
<ENTRY><indexterm><primary>cairo_pop_group_to_source</primary></indexterm>cairo_pop_group_to_source <LINK LINKEND="REFSTD.libcairo.1">[Cairo 1.2.0]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>cairo_ps_surface_create</primary></indexterm>cairo_ps_surface_create <LINK LINKEND="REFSTD.libcairo.1">[Cairo 1.2.0]</LINK></ENTRY>
<ENTRY><indexterm><primary>cairo_ps_surface_create_for_stream</primary></indexterm>cairo_ps_surface_create_for_stream <LINK LINKEND="REFSTD.libcairo.1">[Cairo 1.2.0]</LINK></ENTRY>
<ENTRY><indexterm><primary>cairo_ps_surface_dsc_begin_page_setup</primary></indexterm>cairo_ps_surface_dsc_begin_page_setup <LINK LINKEND="REFSTD.libcairo.1">[Cairo 1.2.0]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>cairo_ps_surface_dsc_begin_setup</primary></indexterm>cairo_ps_surface_dsc_begin_setup <LINK LINKEND="REFSTD.libcairo.1">[Cairo 1.2.0]</LINK></ENTRY>
<ENTRY><indexterm><primary>cairo_ps_surface_dsc_comment</primary></indexterm>cairo_ps_surface_dsc_comment <LINK LINKEND="REFSTD.libcairo.1">[Cairo 1.2.0]</LINK></ENTRY>
<ENTRY><indexterm><primary>cairo_ps_surface_set_size</primary></indexterm>cairo_ps_surface_set_size <LINK LINKEND="REFSTD.libcairo.1">[Cairo 1.2.0]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>cairo_push_group</primary></indexterm>cairo_push_group <LINK LINKEND="REFSTD.libcairo.1">[Cairo 1.2.0]</LINK></ENTRY>
<ENTRY><indexterm><primary>cairo_push_group_with_content</primary></indexterm>cairo_push_group_with_content <LINK LINKEND="REFSTD.libcairo.1">[Cairo 1.2.0]</LINK></ENTRY>
<ENTRY><indexterm><primary>cairo_rectangle</primary></indexterm>cairo_rectangle <LINK LINKEND="REFSTD.libcairo.1">[Cairo 1.2.0]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>cairo_reference</primary></indexterm>cairo_reference <LINK LINKEND="REFSTD.libcairo.1">[Cairo 1.2.0]</LINK></ENTRY>
<ENTRY><indexterm><primary>cairo_rel_curve_to</primary></indexterm>cairo_rel_curve_to <LINK LINKEND="REFSTD.libcairo.1">[Cairo 1.2.0]</LINK></ENTRY>
<ENTRY><indexterm><primary>cairo_rel_line_to</primary></indexterm>cairo_rel_line_to <LINK LINKEND="REFSTD.libcairo.1">[Cairo 1.2.0]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>cairo_rel_move_to</primary></indexterm>cairo_rel_move_to <LINK LINKEND="REFSTD.libcairo.1">[Cairo 1.2.0]</LINK></ENTRY>
<ENTRY><indexterm><primary>cairo_reset_clip</primary></indexterm>cairo_reset_clip <LINK LINKEND="REFSTD.libcairo.1">[Cairo 1.2.0]</LINK></ENTRY>
<ENTRY><indexterm><primary>cairo_restore</primary></indexterm>cairo_restore <LINK LINKEND="REFSTD.libcairo.1">[Cairo 1.2.0]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>cairo_rotate</primary></indexterm>cairo_rotate <LINK LINKEND="REFSTD.libcairo.1">[Cairo 1.2.0]</LINK></ENTRY>
<ENTRY><indexterm><primary>cairo_save</primary></indexterm>cairo_save <LINK LINKEND="REFSTD.libcairo.1">[Cairo 1.2.0]</LINK></ENTRY>
<ENTRY><indexterm><primary>cairo_scale</primary></indexterm>cairo_scale <LINK LINKEND="REFSTD.libcairo.1">[Cairo 1.2.0]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>cairo_scaled_font_create</primary></indexterm>cairo_scaled_font_create <LINK LINKEND="REFSTD.libcairo.1">[Cairo 1.2.0]</LINK></ENTRY>
<ENTRY><indexterm><primary>cairo_scaled_font_destroy</primary></indexterm>cairo_scaled_font_destroy <LINK LINKEND="REFSTD.libcairo.1">[Cairo 1.2.0]</LINK></ENTRY>
<ENTRY><indexterm><primary>cairo_scaled_font_extents</primary></indexterm>cairo_scaled_font_extents <LINK LINKEND="REFSTD.libcairo.1">[Cairo 1.2.0]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>cairo_scaled_font_get_ctm</primary></indexterm>cairo_scaled_font_get_ctm <LINK LINKEND="REFSTD.libcairo.1">[Cairo 1.2.0]</LINK></ENTRY>
<ENTRY><indexterm><primary>cairo_scaled_font_get_font_face</primary></indexterm>cairo_scaled_font_get_font_face <LINK LINKEND="REFSTD.libcairo.1">[Cairo 1.2.0]</LINK></ENTRY>
<ENTRY><indexterm><primary>cairo_scaled_font_get_font_matrix</primary></indexterm>cairo_scaled_font_get_font_matrix <LINK LINKEND="REFSTD.libcairo.1">[Cairo 1.2.0]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>cairo_scaled_font_get_font_options</primary></indexterm>cairo_scaled_font_get_font_options <LINK LINKEND="REFSTD.libcairo.1">[Cairo 1.2.0]</LINK></ENTRY>
<ENTRY><indexterm><primary>cairo_scaled_font_get_type</primary></indexterm>cairo_scaled_font_get_type <LINK LINKEND="REFSTD.libcairo.1">[Cairo 1.2.0]</LINK></ENTRY>
<ENTRY><indexterm><primary>cairo_scaled_font_glyph_extents</primary></indexterm>cairo_scaled_font_glyph_extents <LINK LINKEND="REFSTD.libcairo.1">[Cairo 1.2.0]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>cairo_scaled_font_reference</primary></indexterm>cairo_scaled_font_reference <LINK LINKEND="REFSTD.libcairo.1">[Cairo 1.2.0]</LINK></ENTRY>
<ENTRY><indexterm><primary>cairo_scaled_font_status</primary></indexterm>cairo_scaled_font_status <LINK LINKEND="REFSTD.libcairo.1">[Cairo 1.2.0]</LINK></ENTRY>
<ENTRY><indexterm><primary>cairo_scaled_font_text_extents</primary></indexterm>cairo_scaled_font_text_extents <LINK LINKEND="REFSTD.libcairo.1">[Cairo 1.2.0]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>cairo_select_font_face</primary></indexterm>cairo_select_font_face <LINK LINKEND="REFSTD.libcairo.1">[Cairo 1.2.0]</LINK></ENTRY>
<ENTRY><indexterm><primary>cairo_set_antialias</primary></indexterm>cairo_set_antialias <LINK LINKEND="REFSTD.libcairo.1">[Cairo 1.2.0]</LINK></ENTRY>
<ENTRY><indexterm><primary>cairo_set_dash</primary></indexterm>cairo_set_dash <LINK LINKEND="REFSTD.libcairo.1">[Cairo 1.2.0]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>cairo_set_fill_rule</primary></indexterm>cairo_set_fill_rule <LINK LINKEND="REFSTD.libcairo.1">[Cairo 1.2.0]</LINK></ENTRY>
<ENTRY><indexterm><primary>cairo_set_font_face</primary></indexterm>cairo_set_font_face <LINK LINKEND="REFSTD.libcairo.1">[Cairo 1.2.0]</LINK></ENTRY>
<ENTRY><indexterm><primary>cairo_set_font_matrix</primary></indexterm>cairo_set_font_matrix <LINK LINKEND="REFSTD.libcairo.1">[Cairo 1.2.0]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>cairo_set_font_options</primary></indexterm>cairo_set_font_options <LINK LINKEND="REFSTD.libcairo.1">[Cairo 1.2.0]</LINK></ENTRY>
<ENTRY><indexterm><primary>cairo_set_font_size</primary></indexterm>cairo_set_font_size <LINK LINKEND="REFSTD.libcairo.1">[Cairo 1.2.0]</LINK></ENTRY>
<ENTRY><indexterm><primary>cairo_set_line_cap</primary></indexterm>cairo_set_line_cap <LINK LINKEND="REFSTD.libcairo.1">[Cairo 1.2.0]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>cairo_set_line_join</primary></indexterm>cairo_set_line_join <LINK LINKEND="REFSTD.libcairo.1">[Cairo 1.2.0]</LINK></ENTRY>
<ENTRY><indexterm><primary>cairo_set_line_width</primary></indexterm>cairo_set_line_width <LINK LINKEND="REFSTD.libcairo.1">[Cairo 1.2.0]</LINK></ENTRY>
<ENTRY><indexterm><primary>cairo_set_matrix</primary></indexterm>cairo_set_matrix <LINK LINKEND="REFSTD.libcairo.1">[Cairo 1.2.0]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>cairo_set_miter_limit</primary></indexterm>cairo_set_miter_limit <LINK LINKEND="REFSTD.libcairo.1">[Cairo 1.2.0]</LINK></ENTRY>
<ENTRY><indexterm><primary>cairo_set_operator</primary></indexterm>cairo_set_operator <LINK LINKEND="REFSTD.libcairo.1">[Cairo 1.2.0]</LINK></ENTRY>
<ENTRY><indexterm><primary>cairo_set_scaled_font</primary></indexterm>cairo_set_scaled_font <LINK LINKEND="REFSTD.libcairo.1">[Cairo 1.2.0]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>cairo_set_source</primary></indexterm>cairo_set_source <LINK LINKEND="REFSTD.libcairo.1">[Cairo 1.2.0]</LINK></ENTRY>
<ENTRY><indexterm><primary>cairo_set_source_rgb</primary></indexterm>cairo_set_source_rgb <LINK LINKEND="REFSTD.libcairo.1">[Cairo 1.2.0]</LINK></ENTRY>
<ENTRY><indexterm><primary>cairo_set_source_rgba</primary></indexterm>cairo_set_source_rgba <LINK LINKEND="REFSTD.libcairo.1">[Cairo 1.2.0]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>cairo_set_source_surface</primary></indexterm>cairo_set_source_surface <LINK LINKEND="REFSTD.libcairo.1">[Cairo 1.2.0]</LINK></ENTRY>
<ENTRY><indexterm><primary>cairo_set_tolerance</primary></indexterm>cairo_set_tolerance <LINK LINKEND="REFSTD.libcairo.1">[Cairo 1.2.0]</LINK></ENTRY>
<ENTRY><indexterm><primary>cairo_show_glyphs</primary></indexterm>cairo_show_glyphs <LINK LINKEND="REFSTD.libcairo.1">[Cairo 1.2.0]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>cairo_show_page</primary></indexterm>cairo_show_page <LINK LINKEND="REFSTD.libcairo.1">[Cairo 1.2.0]</LINK></ENTRY>
<ENTRY><indexterm><primary>cairo_show_text</primary></indexterm>cairo_show_text <LINK LINKEND="REFSTD.libcairo.1">[Cairo 1.2.0]</LINK></ENTRY>
<ENTRY><indexterm><primary>cairo_status</primary></indexterm>cairo_status <LINK LINKEND="REFSTD.libcairo.1">[Cairo 1.2.0]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>cairo_status_to_string</primary></indexterm>cairo_status_to_string <LINK LINKEND="REFSTD.libcairo.1">[Cairo 1.2.0]</LINK></ENTRY>
<ENTRY><indexterm><primary>cairo_stroke</primary></indexterm>cairo_stroke <LINK LINKEND="REFSTD.libcairo.1">[Cairo 1.2.0]</LINK></ENTRY>
<ENTRY><indexterm><primary>cairo_stroke_extents</primary></indexterm>cairo_stroke_extents <LINK LINKEND="REFSTD.libcairo.1">[Cairo 1.2.0]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>cairo_stroke_preserve</primary></indexterm>cairo_stroke_preserve <LINK LINKEND="REFSTD.libcairo.1">[Cairo 1.2.0]</LINK></ENTRY>
<ENTRY><indexterm><primary>cairo_surface_create_similar</primary></indexterm>cairo_surface_create_similar <LINK LINKEND="REFSTD.libcairo.1">[Cairo 1.2.0]</LINK></ENTRY>
<ENTRY><indexterm><primary>cairo_surface_destroy</primary></indexterm>cairo_surface_destroy <LINK LINKEND="REFSTD.libcairo.1">[Cairo 1.2.0]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>cairo_surface_finish</primary></indexterm>cairo_surface_finish <LINK LINKEND="REFSTD.libcairo.1">[Cairo 1.2.0]</LINK></ENTRY>
<ENTRY><indexterm><primary>cairo_surface_flush</primary></indexterm>cairo_surface_flush <LINK LINKEND="REFSTD.libcairo.1">[Cairo 1.2.0]</LINK></ENTRY>
<ENTRY><indexterm><primary>cairo_surface_get_content</primary></indexterm>cairo_surface_get_content <LINK LINKEND="REFSTD.libcairo.1">[Cairo 1.2.0]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>cairo_surface_get_device_offset</primary></indexterm>cairo_surface_get_device_offset <LINK LINKEND="REFSTD.libcairo.1">[Cairo 1.2.0]</LINK></ENTRY>
<ENTRY><indexterm><primary>cairo_surface_get_font_options</primary></indexterm>cairo_surface_get_font_options <LINK LINKEND="REFSTD.libcairo.1">[Cairo 1.2.0]</LINK></ENTRY>
<ENTRY><indexterm><primary>cairo_surface_get_type</primary></indexterm>cairo_surface_get_type <LINK LINKEND="REFSTD.libcairo.1">[Cairo 1.2.0]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>cairo_surface_get_user_data</primary></indexterm>cairo_surface_get_user_data <LINK LINKEND="REFSTD.libcairo.1">[Cairo 1.2.0]</LINK></ENTRY>
<ENTRY><indexterm><primary>cairo_surface_mark_dirty</primary></indexterm>cairo_surface_mark_dirty <LINK LINKEND="REFSTD.libcairo.1">[Cairo 1.2.0]</LINK></ENTRY>
<ENTRY><indexterm><primary>cairo_surface_mark_dirty_rectangle</primary></indexterm>cairo_surface_mark_dirty_rectangle <LINK LINKEND="REFSTD.libcairo.1">[Cairo 1.2.0]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>cairo_surface_reference</primary></indexterm>cairo_surface_reference <LINK LINKEND="REFSTD.libcairo.1">[Cairo 1.2.0]</LINK></ENTRY>
<ENTRY><indexterm><primary>cairo_surface_set_device_offset</primary></indexterm>cairo_surface_set_device_offset <LINK LINKEND="REFSTD.libcairo.1">[Cairo 1.2.0]</LINK></ENTRY>
<ENTRY><indexterm><primary>cairo_surface_set_fallback_resolution</primary></indexterm>cairo_surface_set_fallback_resolution <LINK LINKEND="REFSTD.libcairo.1">[Cairo 1.2.0]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>cairo_surface_set_user_data</primary></indexterm>cairo_surface_set_user_data <LINK LINKEND="REFSTD.libcairo.1">[Cairo 1.2.0]</LINK></ENTRY>
<ENTRY><indexterm><primary>cairo_surface_status</primary></indexterm>cairo_surface_status <LINK LINKEND="REFSTD.libcairo.1">[Cairo 1.2.0]</LINK></ENTRY>
<ENTRY><indexterm><primary>cairo_surface_write_to_png</primary></indexterm>cairo_surface_write_to_png <LINK LINKEND="REFSTD.libcairo.1">[Cairo 1.2.0]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>cairo_surface_write_to_png_stream</primary></indexterm>cairo_surface_write_to_png_stream <LINK LINKEND="REFSTD.libcairo.1">[Cairo 1.2.0]</LINK></ENTRY>
<ENTRY><indexterm><primary>cairo_svg_get_versions</primary></indexterm>cairo_svg_get_versions <LINK LINKEND="REFSTD.libcairo.1">[Cairo 1.2.0]</LINK></ENTRY>
<ENTRY><indexterm><primary>cairo_svg_surface_create</primary></indexterm>cairo_svg_surface_create <LINK LINKEND="REFSTD.libcairo.1">[Cairo 1.2.0]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>cairo_svg_surface_create_for_stream</primary></indexterm>cairo_svg_surface_create_for_stream <LINK LINKEND="REFSTD.libcairo.1">[Cairo 1.2.0]</LINK></ENTRY>
<ENTRY><indexterm><primary>cairo_svg_surface_restrict_to_version</primary></indexterm>cairo_svg_surface_restrict_to_version <LINK LINKEND="REFSTD.libcairo.1">[Cairo 1.2.0]</LINK></ENTRY>
<ENTRY><indexterm><primary>cairo_svg_version_to_string</primary></indexterm>cairo_svg_version_to_string <LINK LINKEND="REFSTD.libcairo.1">[Cairo 1.2.0]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>cairo_text_extents</primary></indexterm>cairo_text_extents <LINK LINKEND="REFSTD.libcairo.1">[Cairo 1.2.0]</LINK></ENTRY>
<ENTRY><indexterm><primary>cairo_text_path</primary></indexterm>cairo_text_path <LINK LINKEND="REFSTD.libcairo.1">[Cairo 1.2.0]</LINK></ENTRY>
<ENTRY><indexterm><primary>cairo_transform</primary></indexterm>cairo_transform <LINK LINKEND="REFSTD.libcairo.1">[Cairo 1.2.0]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>cairo_translate</primary></indexterm>cairo_translate <LINK LINKEND="REFSTD.libcairo.1">[Cairo 1.2.0]</LINK></ENTRY>
<ENTRY><indexterm><primary>cairo_user_to_device</primary></indexterm>cairo_user_to_device <LINK LINKEND="REFSTD.libcairo.1">[Cairo 1.2.0]</LINK></ENTRY>
<ENTRY><indexterm><primary>cairo_user_to_device_distance</primary></indexterm>cairo_user_to_device_distance <LINK LINKEND="REFSTD.libcairo.1">[Cairo 1.2.0]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>cairo_version</primary></indexterm>cairo_version <LINK LINKEND="REFSTD.libcairo.1">[Cairo 1.2.0]</LINK></ENTRY>
<ENTRY><indexterm><primary>cairo_version_string</primary></indexterm>cairo_version_string <LINK LINKEND="REFSTD.libcairo.1">[Cairo 1.2.0]</LINK></ENTRY>
<ENTRY><indexterm><primary>cairo_xlib_surface_create</primary></indexterm>cairo_xlib_surface_create <LINK LINKEND="REFSTD.libcairo.1">[Cairo 1.2.0]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>cairo_xlib_surface_create_for_bitmap</primary></indexterm>cairo_xlib_surface_create_for_bitmap <LINK LINKEND="REFSTD.libcairo.1">[Cairo 1.2.0]</LINK></ENTRY>
<ENTRY><indexterm><primary>cairo_xlib_surface_create_with_xrender_format</primary></indexterm>cairo_xlib_surface_create_with_xrender_format <LINK LINKEND="REFSTD.libcairo.1">[Cairo 1.2.0]</LINK></ENTRY>
<ENTRY><indexterm><primary>cairo_xlib_surface_get_depth</primary></indexterm>cairo_xlib_surface_get_depth <LINK LINKEND="REFSTD.libcairo.1">[Cairo 1.2.0]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>cairo_xlib_surface_get_display</primary></indexterm>cairo_xlib_surface_get_display <LINK LINKEND="REFSTD.libcairo.1">[Cairo 1.2.0]</LINK></ENTRY>
<ENTRY><indexterm><primary>cairo_xlib_surface_get_drawable</primary></indexterm>cairo_xlib_surface_get_drawable <LINK LINKEND="REFSTD.libcairo.1">[Cairo 1.2.0]</LINK></ENTRY>
<ENTRY><indexterm><primary>cairo_xlib_surface_get_height</primary></indexterm>cairo_xlib_surface_get_height <LINK LINKEND="REFSTD.libcairo.1">[Cairo 1.2.0]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>cairo_xlib_surface_get_screen</primary></indexterm>cairo_xlib_surface_get_screen <LINK LINKEND="REFSTD.libcairo.1">[Cairo 1.2.0]</LINK></ENTRY>
<ENTRY><indexterm><primary>cairo_xlib_surface_get_visual</primary></indexterm>cairo_xlib_surface_get_visual <LINK LINKEND="REFSTD.libcairo.1">[Cairo 1.2.0]</LINK></ENTRY>
<ENTRY><indexterm><primary>cairo_xlib_surface_get_width</primary></indexterm>cairo_xlib_surface_get_width <LINK LINKEND="REFSTD.libcairo.1">[Cairo 1.2.0]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>cairo_xlib_surface_set_drawable</primary></indexterm>cairo_xlib_surface_set_drawable <LINK LINKEND="REFSTD.libcairo.1">[Cairo 1.2.0]</LINK></ENTRY>
<ENTRY><indexterm><primary>cairo_xlib_surface_set_size</primary></indexterm>cairo_xlib_surface_set_size <LINK LINKEND="REFSTD.libcairo.1">[Cairo 1.2.0]</LINK></ENTRY>
<ENTRY></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>
</SECT2>
</SECT1>
<SECT1 ID=libcairo-ddefs>
<TITLE>Data Definitions for libcairo</TITLE>
<PARA>
This section defines global identifiers and their values that are associated
with interfaces contained in libcairo.
These definitions are organized into groups that
correspond to system headers. This convention is used as a
convenience for the reader, and does not imply the existence
of these headers, or their content.
Where an interface is defined as requiring a particular system header file
all of the data definitions for that system header file presented here shall be in effect.
</PARA>
<PARA>
This section gives data definitions to promote binary application
portability, not to repeat source interface definitions available
elsewhere. System providers and application developers should use this ABI
to supplement - not to replace - source interface definition specifications.
</PARA>
<PARA>
This specification uses the <XREF LINKEND='std.ISOC99'> C Language as the reference programming language, and data definitions are specified in ISO C format. The C language is used here as a convenient notation. Using a C language description of these data objects does not preclude their use by other programming languages.</PARA>
<SECT2>
<TITLE>cairo/cairo-features.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define CAIRO_HAS_FT_FONT	1
#define CAIRO_HAS_PDF_SURFACE	1
#define CAIRO_HAS_PNG_FUNCTIONS	1
#define CAIRO_HAS_PS_SURFACE	1
#define CAIRO_HAS_SVG_SURFACE	1
#define CAIRO_HAS_XLIB_SURFACE	1
#define CAIRO_HAS_XLIB_XRENDER_SURFACE	1
#define CAIRO_VERSION_MAJOR	1
#define CAIRO_VERSION_STRING	"1.2.4"
#define CAIRO_VERSION_MINOR	2
#define CAIRO_VERSION_MICRO	4
</SCREEN>
</SECT2>
<SECT2>
<TITLE>cairo/cairo-ft.h</TITLE>
<PARA>
</PARA>
<SCREEN>

extern cairo_font_face_t *cairo_ft_font_face_create_for_ft_face(FT_Face
								face,
								int
								load_flags);
extern cairo_font_face_t *cairo_ft_font_face_create_for_pattern(FcPattern *
								pattern);
extern void cairo_ft_font_options_substitute(const cairo_font_options_t *
					     options, FcPattern * pattern);
extern void cairo_ft_scaled_font_lock_face(cairo_scaled_font_t *
					   scaled_font);
extern void cairo_ft_scaled_font_unlock_face(cairo_scaled_font_t *
					     scaled_font);
</SCREEN>
</SECT2>
<SECT2>
<TITLE>cairo/cairo-pdf.h</TITLE>
<PARA>
</PARA>
<SCREEN>

extern cairo_surface_t *cairo_pdf_surface_create(const char *filename,
						 double width_in_points,
						 double height_in_points);
extern cairo_surface_t
    *cairo_pdf_surface_create_for_stream(cairo_write_func_t write_func,
					 void *closure,
					 double width_in_points,
					 double height_in_points);
extern void cairo_pdf_surface_set_size(cairo_surface_t * surface,
				       double width_in_points,
				       double height_in_points);
</SCREEN>
</SECT2>
<SECT2>
<TITLE>cairo/cairo-ps.h</TITLE>
<PARA>
</PARA>
<SCREEN>

extern cairo_surface_t *cairo_ps_surface_create(const char *filename,
						double width_in_points,
						double height_in_points);
extern cairo_surface_t
    *cairo_ps_surface_create_for_stream(cairo_write_func_t write_func,
					void *closure,
					double width_in_points,
					double height_in_points);
extern void cairo_ps_surface_dsc_begin_page_setup(cairo_surface_t *
						  surface);
extern void cairo_ps_surface_dsc_begin_setup(cairo_surface_t * surface);
extern void cairo_ps_surface_dsc_comment(cairo_surface_t * surface,
					 const char *comment);
extern void cairo_ps_surface_set_size(cairo_surface_t * surface,
				      double width_in_points,
				      double height_in_points);
</SCREEN>
</SECT2>
<SECT2>
<TITLE>cairo/cairo-svg.h</TITLE>
<PARA>
</PARA>
<SCREEN>

typedef enum _cairo_svg_version {
    CAIRO_SVG_VERSION_1_1,
    CAIRO_SVG_VERSION_1_2 = 1
} cairo_svg_version_t;
extern void cairo_svg_get_versions(const cairo_svg_version_t * *versions,
				   int *num_versions);
extern cairo_surface_t *cairo_svg_surface_create(const char *filename,
						 double width_in_points,
						 double height_in_points);
extern cairo_surface_t
    *cairo_svg_surface_create_for_stream(cairo_write_func_t write_func,
					 void *closure,
					 double width_in_points,
					 double height_in_points);
extern void cairo_svg_surface_restrict_to_version(cairo_surface_t *
						  surface,
						  cairo_svg_version_t
						  version);
extern const char *cairo_svg_version_to_string(cairo_svg_version_t
					       version);
</SCREEN>
</SECT2>
<SECT2>
<TITLE>cairo/cairo-xlib-xrender.h</TITLE>
<PARA>
</PARA>
<SCREEN>

extern cairo_surface_t
    *cairo_xlib_surface_create_with_xrender_format(Display * dpy,
						   Drawable drawable,
						   Screen * screen,
						   XRenderPictFormat *
						   format, int width,
						   int height);
</SCREEN>
</SECT2>
<SECT2>
<TITLE>cairo/cairo-xlib.h</TITLE>
<PARA>
</PARA>
<SCREEN>

extern cairo_surface_t *cairo_xlib_surface_create(Display * dpy,
						  Drawable drawable,
						  Visual * visual,
						  int width, int height);
extern cairo_surface_t *cairo_xlib_surface_create_for_bitmap(Display * dpy,
							     Pixmap bitmap,
							     Screen *
							     screen,
							     int width,
							     int height);
extern int cairo_xlib_surface_get_depth(cairo_surface_t * surface);
extern Display *cairo_xlib_surface_get_display(cairo_surface_t * surface);
extern Drawable cairo_xlib_surface_get_drawable(cairo_surface_t * surface);
extern int cairo_xlib_surface_get_height(cairo_surface_t * surface);
extern Screen *cairo_xlib_surface_get_screen(cairo_surface_t * surface);
extern Visual *cairo_xlib_surface_get_visual(cairo_surface_t * surface);
extern int cairo_xlib_surface_get_width(cairo_surface_t * surface);
extern void cairo_xlib_surface_set_drawable(cairo_surface_t * surface,
					    Drawable drawable, int width,
					    int height);
extern void cairo_xlib_surface_set_size(cairo_surface_t * surface,
					int width, int height);
</SCREEN>
</SECT2>
<SECT2>
<TITLE>cairo/cairo.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define CAIRO_VERSION	 \
   CAIRO_VERSION_ENCODE( CAIRO_VERSION_MAJOR, CAIRO_VERSION_MINOR, \
    CAIRO_VERSION_MICRO)
#define CAIRO_VERSION_ENCODE(major, minor, micro)	(\
  ((major) * 10000)   \
+ ((minor) *   100) \
+ ((micro) *     1))

typedef int cairo_bool_t;
typedef struct _cairo cairo_t;
typedef struct _cairo_surface cairo_surface_t;
typedef struct _cairo_matrix {
    double xx;
    double yx;
    double xy;
    double yy;
    double x0;
    double y0;
} cairo_matrix_t;
typedef struct _cairo_pattern cairo_pattern_t;
typedef void (*cairo_destroy_func_t) (void *);
typedef struct _cairo_user_data_key {
    int unused;
} cairo_user_data_key_t;
typedef enum _cairo_status {
    CAIRO_STATUS_SUCCESS,
    CAIRO_STATUS_NO_MEMORY = 1,
    CAIRO_STATUS_INVALID_RESTORE = 2,
    CAIRO_STATUS_INVALID_POP_GROUP = 3,
    CAIRO_STATUS_NO_CURRENT_POINT = 4,
    CAIRO_STATUS_INVALID_MATRIX = 5,
    CAIRO_STATUS_INVALID_STATUS = 6,
    CAIRO_STATUS_NULL_POINTER = 7,
    CAIRO_STATUS_INVALID_STRING = 8,
    CAIRO_STATUS_INVALID_PATH_DATA = 9,
    CAIRO_STATUS_READ_ERROR = 10,
    CAIRO_STATUS_WRITE_ERROR = 11,
    CAIRO_STATUS_SURFACE_FINISHED = 12,
    CAIRO_STATUS_SURFACE_TYPE_MISMATCH = 13,
    CAIRO_STATUS_PATTERN_TYPE_MISMATCH = 14,
    CAIRO_STATUS_INVALID_CONTENT = 15,
    CAIRO_STATUS_INVALID_FORMAT = 16,
    CAIRO_STATUS_INVALID_VISUAL = 17,
    CAIRO_STATUS_FILE_NOT_FOUND = 18,
    CAIRO_STATUS_INVALID_DASH = 19,
    CAIRO_STATUS_INVALID_DSC_COMMENT = 20,
    CAIRO_STATUS_INVALID_INDEX = 21,
    CAIRO_STATUS_CLIP_NOT_REPRESENTABLE = 22
} cairo_status_t;
typedef enum _cairo_content {
    CAIRO_CONTENT_COLOR = 4096,
    CAIRO_CONTENT_ALPHA = 8192,
    CAIRO_CONTENT_COLOR_ALPHA = 12288
} cairo_content_t;
typedef cairo_status_t(*cairo_write_func_t) (void *, const unsigned char *,
					     unsigned int);
typedef cairo_status_t(*cairo_read_func_t) (void *, unsigned char *,
					    unsigned int);
typedef enum _cairo_operator {
    CAIRO_OPERATOR_CLEAR,
    CAIRO_OPERATOR_SOURCE = 1,
    CAIRO_OPERATOR_OVER = 2,
    CAIRO_OPERATOR_IN = 3,
    CAIRO_OPERATOR_OUT = 4,
    CAIRO_OPERATOR_ATOP = 5,
    CAIRO_OPERATOR_DEST = 6,
    CAIRO_OPERATOR_DEST_OVER = 7,
    CAIRO_OPERATOR_DEST_IN = 8,
    CAIRO_OPERATOR_DEST_OUT = 9,
    CAIRO_OPERATOR_DEST_ATOP = 10,
    CAIRO_OPERATOR_XOR = 11,
    CAIRO_OPERATOR_ADD = 12,
    CAIRO_OPERATOR_SATURATE = 13
} cairo_operator_t;
typedef enum _cairo_antialias {
    CAIRO_ANTIALIAS_DEFAULT,
    CAIRO_ANTIALIAS_NONE = 1,
    CAIRO_ANTIALIAS_GRAY = 2,
    CAIRO_ANTIALIAS_SUBPIXEL = 3
} cairo_antialias_t;
typedef enum _cairo_fill_rule {
    CAIRO_FILL_RULE_WINDING,
    CAIRO_FILL_RULE_EVEN_ODD = 1
} cairo_fill_rule_t;
typedef enum _cairo_line_cap {
    CAIRO_LINE_CAP_BUTT,
    CAIRO_LINE_CAP_ROUND = 1,
    CAIRO_LINE_CAP_SQUARE = 2
} cairo_line_cap_t;
typedef enum _cairo_line_join {
    CAIRO_LINE_JOIN_MITER,
    CAIRO_LINE_JOIN_ROUND = 1,
    CAIRO_LINE_JOIN_BEVEL = 2
} cairo_line_join_t;
typedef struct _cairo_scaled_font cairo_scaled_font_t;
typedef struct _cairo_font_face cairo_font_face_t;
typedef struct {
    long unsigned int index;
    double x;
    double y;
} cairo_glyph_t;
typedef struct {
    double x_bearing;
    double y_bearing;
    double width;
    double height;
    double x_advance;
    double y_advance;
} cairo_text_extents_t;
typedef struct {
    double ascent;
    double descent;
    double height;
    double max_x_advance;
    double max_y_advance;
} cairo_font_extents_t;
typedef enum _cairo_font_slant {
    CAIRO_FONT_SLANT_NORMAL,
    CAIRO_FONT_SLANT_ITALIC = 1,
    CAIRO_FONT_SLANT_OBLIQUE = 2
} cairo_font_slant_t;
typedef enum _cairo_font_weight {
    CAIRO_FONT_WEIGHT_NORMAL,
    CAIRO_FONT_WEIGHT_BOLD = 1
} cairo_font_weight_t;
typedef enum _cairo_subpixel_order {
    CAIRO_SUBPIXEL_ORDER_DEFAULT,
    CAIRO_SUBPIXEL_ORDER_RGB = 1,
    CAIRO_SUBPIXEL_ORDER_BGR = 2,
    CAIRO_SUBPIXEL_ORDER_VRGB = 3,
    CAIRO_SUBPIXEL_ORDER_VBGR = 4
} cairo_subpixel_order_t;
typedef enum _cairo_hint_style {
    CAIRO_HINT_STYLE_DEFAULT,
    CAIRO_HINT_STYLE_NONE = 1,
    CAIRO_HINT_STYLE_SLIGHT = 2,
    CAIRO_HINT_STYLE_MEDIUM = 3,
    CAIRO_HINT_STYLE_FULL = 4
} cairo_hint_style_t;
typedef enum _cairo_hint_metrics {
    CAIRO_HINT_METRICS_DEFAULT,
    CAIRO_HINT_METRICS_OFF = 1,
    CAIRO_HINT_METRICS_ON = 2
} cairo_hint_metrics_t;
typedef struct _cairo_font_options cairo_font_options_t;
typedef enum _cairo_font_type {
    CAIRO_FONT_TYPE_TOY,
    CAIRO_FONT_TYPE_FT = 1,
    CAIRO_FONT_TYPE_WIN32 = 2,
    CAIRO_FONT_TYPE_ATSUI = 3
} cairo_font_type_t;
typedef enum _cairo_path_data_type {
    CAIRO_PATH_MOVE_TO,
    CAIRO_PATH_LINE_TO = 1,
    CAIRO_PATH_CURVE_TO = 2,
    CAIRO_PATH_CLOSE_PATH = 3
} cairo_path_data_type_t;
typedef union _cairo_path_data_t {
    struct {
	cairo_path_data_type_t type;
	int length;
    } header;
    struct {
	double x;
	double y;
    } point;
} cairo_path_data_t;
typedef struct cairo_path {
    cairo_status_t status;
    cairo_path_data_t *data;
    int num_data;
} cairo_path_t;
typedef enum _cairo_surface_type {
    CAIRO_SURFACE_TYPE_IMAGE,
    CAIRO_SURFACE_TYPE_PDF = 1,
    CAIRO_SURFACE_TYPE_PS = 2,
    CAIRO_SURFACE_TYPE_XLIB = 3,
    CAIRO_SURFACE_TYPE_XCB = 4,
    CAIRO_SURFACE_TYPE_GLITZ = 5,
    CAIRO_SURFACE_TYPE_QUARTZ = 6,
    CAIRO_SURFACE_TYPE_WIN32 = 7,
    CAIRO_SURFACE_TYPE_BEOS = 8,
    CAIRO_SURFACE_TYPE_DIRECTFB = 9,
    CAIRO_SURFACE_TYPE_SVG = 10,
    CAIRO_SURFACE_TYPE_OS2 = 11
} cairo_surface_type_t;
typedef enum _cairo_format {
    CAIRO_FORMAT_ARGB32,
    CAIRO_FORMAT_RGB24 = 1,
    CAIRO_FORMAT_A8 = 2,
    CAIRO_FORMAT_A1 = 3,
    CAIRO_FORMAT_RGB16_565 = 4
} cairo_format_t;
typedef enum _cairo_pattern_type {
    CAIRO_PATTERN_TYPE_SOLID,
    CAIRO_PATTERN_TYPE_SURFACE = 1,
    CAIRO_PATTERN_TYPE_LINEAR = 2,
    CAIRO_PATTERN_TYPE_RADIAL = 3
} cairo_pattern_type_t;
typedef enum _cairo_extend {
    CAIRO_EXTEND_NONE,
    CAIRO_EXTEND_REPEAT = 1,
    CAIRO_EXTEND_REFLECT = 2,
    CAIRO_EXTEND_PAD = 3
} cairo_extend_t;
typedef enum _cairo_filter {
    CAIRO_FILTER_FAST,
    CAIRO_FILTER_GOOD = 1,
    CAIRO_FILTER_BEST = 2,
    CAIRO_FILTER_NEAREST = 3,
    CAIRO_FILTER_BILINEAR = 4,
    CAIRO_FILTER_GAUSSIAN = 5
} cairo_filter_t;
extern void cairo_append_path(cairo_t * cr, const cairo_path_t * path);
extern void cairo_arc(cairo_t * cr, double xc, double yc, double radius,
		      double angle1, double angle2);
extern void cairo_arc_negative(cairo_t * cr, double xc, double yc,
			       double radius, double angle1,
			       double angle2);
extern void cairo_clip(cairo_t * cr);
extern void cairo_clip_preserve(cairo_t * cr);
extern void cairo_close_path(cairo_t * cr);
extern void cairo_copy_page(cairo_t * cr);
extern cairo_path_t *cairo_copy_path(cairo_t * cr);
extern cairo_path_t *cairo_copy_path_flat(cairo_t * cr);
extern cairo_t *cairo_create(cairo_surface_t * target);
extern void cairo_curve_to(cairo_t * cr, double x1, double y1, double x2,
			   double y2, double x3, double y3);
extern void cairo_destroy(cairo_t * cr);
extern void cairo_device_to_user(cairo_t * cr, double *x, double *y);
extern void cairo_device_to_user_distance(cairo_t * cr, double *dx,
					  double *dy);
extern void cairo_fill(cairo_t * cr);
extern void cairo_fill_extents(cairo_t * cr, double *x1, double *y1,
			       double *x2, double *y2);
extern void cairo_fill_preserve(cairo_t * cr);
extern void cairo_font_extents(cairo_t * cr,
			       cairo_font_extents_t * extents);
extern void cairo_font_face_destroy(cairo_font_face_t * font_face);
extern cairo_font_type_t cairo_font_face_get_type(cairo_font_face_t *
						  font_face);
extern void *cairo_font_face_get_user_data(cairo_font_face_t * font_face,
					   const cairo_user_data_key_t *
					   key);
extern cairo_font_face_t *cairo_font_face_reference(cairo_font_face_t *
						    font_face);
extern cairo_status_t cairo_font_face_set_user_data(cairo_font_face_t *
						    font_face,
						    const
						    cairo_user_data_key_t *
						    key, void *user_data,
						    cairo_destroy_func_t
						    destroy);
extern cairo_status_t cairo_font_face_status(cairo_font_face_t *
					     font_face);
extern cairo_font_options_t *cairo_font_options_copy(const
						     cairo_font_options_t *
						     original);
extern cairo_font_options_t *cairo_font_options_create(void);
extern void cairo_font_options_destroy(cairo_font_options_t * options);
extern cairo_bool_t cairo_font_options_equal(const cairo_font_options_t *
					     options,
					     const cairo_font_options_t *
					     other);
extern cairo_antialias_t cairo_font_options_get_antialias(const
							  cairo_font_options_t
							  * options);
extern cairo_hint_metrics_t cairo_font_options_get_hint_metrics(const
								cairo_font_options_t
								* options);
extern cairo_hint_style_t cairo_font_options_get_hint_style(const
							    cairo_font_options_t
							    * options);
extern cairo_subpixel_order_t cairo_font_options_get_subpixel_order(const
								    cairo_font_options_t
								    *
								    options);
extern long unsigned int cairo_font_options_hash(const cairo_font_options_t
						 * options);
extern void cairo_font_options_merge(cairo_font_options_t * options,
				     const cairo_font_options_t * other);
extern void cairo_font_options_set_antialias(cairo_font_options_t *
					     options,
					     cairo_antialias_t antialias);
extern void cairo_font_options_set_hint_metrics(cairo_font_options_t *
						options,
						cairo_hint_metrics_t
						hint_metrics);
extern void cairo_font_options_set_hint_style(cairo_font_options_t *
					      options,
					      cairo_hint_style_t
					      hint_style);
extern void cairo_font_options_set_subpixel_order(cairo_font_options_t *
						  options,
						  cairo_subpixel_order_t
						  subpixel_order);
extern cairo_status_t cairo_font_options_status(cairo_font_options_t *
						options);
extern cairo_antialias_t cairo_get_antialias(cairo_t * cr);
extern void cairo_get_current_point(cairo_t * cr, double *x, double *y);
extern cairo_fill_rule_t cairo_get_fill_rule(cairo_t * cr);
extern cairo_font_face_t *cairo_get_font_face(cairo_t * cr);
extern void cairo_get_font_matrix(cairo_t * cr, cairo_matrix_t * matrix);
extern void cairo_get_font_options(cairo_t * cr,
				   cairo_font_options_t * options);
extern cairo_surface_t *cairo_get_group_target(cairo_t * cr);
extern cairo_line_cap_t cairo_get_line_cap(cairo_t * cr);
extern cairo_line_join_t cairo_get_line_join(cairo_t * cr);
extern double cairo_get_line_width(cairo_t * cr);
extern void cairo_get_matrix(cairo_t * cr, cairo_matrix_t * matrix);
extern double cairo_get_miter_limit(cairo_t * cr);
extern cairo_operator_t cairo_get_operator(cairo_t * cr);
extern cairo_pattern_t *cairo_get_source(cairo_t * cr);
extern cairo_surface_t *cairo_get_target(cairo_t * cr);
extern double cairo_get_tolerance(cairo_t * cr);
extern void cairo_glyph_extents(cairo_t * cr, const cairo_glyph_t * glyphs,
				int num_glyphs,
				cairo_text_extents_t * extents);
extern void cairo_glyph_path(cairo_t * cr, const cairo_glyph_t * glyphs,
			     int num_glyphs);
extern void cairo_identity_matrix(cairo_t * cr);
extern cairo_surface_t *cairo_image_surface_create(cairo_format_t format,
						   int width, int height);
extern cairo_surface_t *cairo_image_surface_create_for_data(unsigned char
							    *data,
							    cairo_format_t
							    format,
							    int width,
							    int height,
							    int stride);
extern cairo_surface_t *cairo_image_surface_create_from_png(const char
							    *filename);
extern cairo_surface_t
    *cairo_image_surface_create_from_png_stream(cairo_read_func_t
						read_func, void *closure);
extern unsigned char *cairo_image_surface_get_data(cairo_surface_t *
						   surface);
extern cairo_format_t cairo_image_surface_get_format(cairo_surface_t *
						     surface);
extern int cairo_image_surface_get_height(cairo_surface_t * surface);
extern int cairo_image_surface_get_stride(cairo_surface_t * surface);
extern int cairo_image_surface_get_width(cairo_surface_t * surface);
extern cairo_bool_t cairo_in_fill(cairo_t * cr, double x, double y);
extern cairo_bool_t cairo_in_stroke(cairo_t * cr, double x, double y);
extern void cairo_line_to(cairo_t * cr, double x, double y);
extern void cairo_mask(cairo_t * cr, cairo_pattern_t * pattern);
extern void cairo_mask_surface(cairo_t * cr, cairo_surface_t * surface,
			       double surface_x, double surface_y);
extern void cairo_matrix_init(cairo_matrix_t * matrix, double xx,
			      double yx, double xy, double yy, double x0,
			      double y0);
extern void cairo_matrix_init_identity(cairo_matrix_t * matrix);
extern void cairo_matrix_init_rotate(cairo_matrix_t * matrix,
				     double radians);
extern void cairo_matrix_init_scale(cairo_matrix_t * matrix, double sx,
				    double sy);
extern void cairo_matrix_init_translate(cairo_matrix_t * matrix, double tx,
					double ty);
extern cairo_status_t cairo_matrix_invert(cairo_matrix_t * matrix);
extern void cairo_matrix_multiply(cairo_matrix_t * result,
				  const cairo_matrix_t * a,
				  const cairo_matrix_t * b);
extern void cairo_matrix_rotate(cairo_matrix_t * matrix, double radians);
extern void cairo_matrix_scale(cairo_matrix_t * matrix, double sx,
			       double sy);
extern void cairo_matrix_transform_distance(const cairo_matrix_t * matrix,
					    double *dx, double *dy);
extern void cairo_matrix_transform_point(const cairo_matrix_t * matrix,
					 double *x, double *y);
extern void cairo_matrix_translate(cairo_matrix_t * matrix, double tx,
				   double ty);
extern void cairo_move_to(cairo_t * cr, double x, double y);
extern void cairo_new_path(cairo_t * cr);
extern void cairo_new_sub_path(cairo_t * cr);
extern void cairo_paint(cairo_t * cr);
extern void cairo_paint_with_alpha(cairo_t * cr, double alpha);
extern void cairo_path_destroy(cairo_path_t * path);
extern void cairo_pattern_add_color_stop_rgb(cairo_pattern_t * pattern,
					     double offset, double red,
					     double green, double blue);
extern void cairo_pattern_add_color_stop_rgba(cairo_pattern_t * pattern,
					      double offset, double red,
					      double green, double blue,
					      double alpha);
extern cairo_pattern_t *cairo_pattern_create_for_surface(cairo_surface_t *
							 surface);
extern cairo_pattern_t *cairo_pattern_create_linear(double x0, double y0,
						    double x1, double y1);
extern cairo_pattern_t *cairo_pattern_create_radial(double cx0, double cy0,
						    double radius0,
						    double cx1, double cy1,
						    double radius1);
extern cairo_pattern_t *cairo_pattern_create_rgb(double red, double green,
						 double blue);
extern cairo_pattern_t *cairo_pattern_create_rgba(double red, double green,
						  double blue,
						  double alpha);
extern void cairo_pattern_destroy(cairo_pattern_t * pattern);
extern cairo_extend_t cairo_pattern_get_extend(cairo_pattern_t * pattern);
extern cairo_filter_t cairo_pattern_get_filter(cairo_pattern_t * pattern);
extern void cairo_pattern_get_matrix(cairo_pattern_t * pattern,
				     cairo_matrix_t * matrix);
extern cairo_pattern_type_t cairo_pattern_get_type(cairo_pattern_t *
						   pattern);
extern cairo_pattern_t *cairo_pattern_reference(cairo_pattern_t * pattern);
extern void cairo_pattern_set_extend(cairo_pattern_t * pattern,
				     cairo_extend_t extend);
extern void cairo_pattern_set_filter(cairo_pattern_t * pattern,
				     cairo_filter_t filter);
extern void cairo_pattern_set_matrix(cairo_pattern_t * pattern,
				     const cairo_matrix_t * matrix);
extern cairo_status_t cairo_pattern_status(cairo_pattern_t * pattern);
extern cairo_pattern_t *cairo_pop_group(cairo_t * cr);
extern void cairo_pop_group_to_source(cairo_t * cr);
extern void cairo_push_group(cairo_t * cr);
extern void cairo_push_group_with_content(cairo_t * cr,
					  cairo_content_t content);
extern void cairo_rectangle(cairo_t * cr, double x, double y, double width,
			    double height);
extern cairo_t *cairo_reference(cairo_t * cr);
extern void cairo_rel_curve_to(cairo_t * cr, double dx1, double dy1,
			       double dx2, double dy2, double dx3,
			       double dy3);
extern void cairo_rel_line_to(cairo_t * cr, double dx, double dy);
extern void cairo_rel_move_to(cairo_t * cr, double dx, double dy);
extern void cairo_reset_clip(cairo_t * cr);
extern void cairo_restore(cairo_t * cr);
extern void cairo_rotate(cairo_t * cr, double angle);
extern void cairo_save(cairo_t * cr);
extern void cairo_scale(cairo_t * cr, double sx, double sy);
extern cairo_scaled_font_t *cairo_scaled_font_create(cairo_font_face_t *
						     font_face,
						     const cairo_matrix_t *
						     font_matrix,
						     const cairo_matrix_t *
						     ctm,
						     const
						     cairo_font_options_t *
						     options);
extern void cairo_scaled_font_destroy(cairo_scaled_font_t * scaled_font);
extern void cairo_scaled_font_extents(cairo_scaled_font_t * scaled_font,
				      cairo_font_extents_t * extents);
extern void cairo_scaled_font_get_ctm(cairo_scaled_font_t * scaled_font,
				      cairo_matrix_t * ctm);
extern cairo_font_face_t
    *cairo_scaled_font_get_font_face(cairo_scaled_font_t * scaled_font);
extern void cairo_scaled_font_get_font_matrix(cairo_scaled_font_t *
					      scaled_font,
					      cairo_matrix_t *
					      font_matrix);
extern void cairo_scaled_font_get_font_options(cairo_scaled_font_t *
					       scaled_font,
					       cairo_font_options_t *
					       options);
extern cairo_font_type_t cairo_scaled_font_get_type(cairo_scaled_font_t *
						    scaled_font);
extern void cairo_scaled_font_glyph_extents(cairo_scaled_font_t *
					    scaled_font,
					    const cairo_glyph_t * glyphs,
					    int num_glyphs,
					    cairo_text_extents_t *
					    extents);
extern cairo_scaled_font_t *cairo_scaled_font_reference(cairo_scaled_font_t
							* scaled_font);
extern cairo_status_t cairo_scaled_font_status(cairo_scaled_font_t *
					       scaled_font);
extern void cairo_scaled_font_text_extents(cairo_scaled_font_t *
					   scaled_font, const char *utf8,
					   cairo_text_extents_t * extents);
extern void cairo_select_font_face(cairo_t * cr, const char *family,
				   cairo_font_slant_t slant,
				   cairo_font_weight_t weight);
extern void cairo_set_antialias(cairo_t * cr, cairo_antialias_t antialias);
extern void cairo_set_dash(cairo_t * cr, const double *dashes,
			   int num_dashes, double offset);
extern void cairo_set_fill_rule(cairo_t * cr, cairo_fill_rule_t fill_rule);
extern void cairo_set_font_face(cairo_t * cr,
				cairo_font_face_t * font_face);
extern void cairo_set_font_matrix(cairo_t * cr,
				  const cairo_matrix_t * matrix);
extern void cairo_set_font_options(cairo_t * cr,
				   const cairo_font_options_t * options);
extern void cairo_set_font_size(cairo_t * cr, double size);
extern void cairo_set_line_cap(cairo_t * cr, cairo_line_cap_t line_cap);
extern void cairo_set_line_join(cairo_t * cr, cairo_line_join_t line_join);
extern void cairo_set_line_width(cairo_t * cr, double width);
extern void cairo_set_matrix(cairo_t * cr, const cairo_matrix_t * matrix);
extern void cairo_set_miter_limit(cairo_t * cr, double limit);
extern void cairo_set_operator(cairo_t * cr, cairo_operator_t op);
extern void cairo_set_scaled_font(cairo_t * cr,
				  const cairo_scaled_font_t * scaled_font);
extern void cairo_set_source(cairo_t * cr, cairo_pattern_t * source);
extern void cairo_set_source_rgb(cairo_t * cr, double red, double green,
				 double blue);
extern void cairo_set_source_rgba(cairo_t * cr, double red, double green,
				  double blue, double alpha);
extern void cairo_set_source_surface(cairo_t * cr,
				     cairo_surface_t * surface, double x,
				     double y);
extern void cairo_set_tolerance(cairo_t * cr, double tolerance);
extern void cairo_show_glyphs(cairo_t * cr, const cairo_glyph_t * glyphs,
			      int num_glyphs);
extern void cairo_show_page(cairo_t * cr);
extern void cairo_show_text(cairo_t * cr, const char *utf8);
extern cairo_status_t cairo_status(cairo_t * cr);
extern const char *cairo_status_to_string(cairo_status_t status);
extern void cairo_stroke(cairo_t * cr);
extern void cairo_stroke_extents(cairo_t * cr, double *x1, double *y1,
				 double *x2, double *y2);
extern void cairo_stroke_preserve(cairo_t * cr);
extern cairo_surface_t *cairo_surface_create_similar(cairo_surface_t *
						     other,
						     cairo_content_t
						     content, int width,
						     int height);
extern void cairo_surface_destroy(cairo_surface_t * surface);
extern void cairo_surface_finish(cairo_surface_t * surface);
extern void cairo_surface_flush(cairo_surface_t * surface);
extern cairo_content_t cairo_surface_get_content(cairo_surface_t *
						 surface);
extern void cairo_surface_get_device_offset(cairo_surface_t * surface,
					    double *x_offset,
					    double *y_offset);
extern void cairo_surface_get_font_options(cairo_surface_t * surface,
					   cairo_font_options_t * options);
extern cairo_surface_type_t cairo_surface_get_type(cairo_surface_t *
						   surface);
extern void *cairo_surface_get_user_data(cairo_surface_t * surface,
					 const cairo_user_data_key_t *
					 key);
extern void cairo_surface_mark_dirty(cairo_surface_t * surface);
extern void cairo_surface_mark_dirty_rectangle(cairo_surface_t * surface,
					       int x, int y, int width,
					       int height);
extern cairo_surface_t *cairo_surface_reference(cairo_surface_t * surface);
extern void cairo_surface_set_device_offset(cairo_surface_t * surface,
					    double x_offset,
					    double y_offset);
extern void cairo_surface_set_fallback_resolution(cairo_surface_t *
						  surface,
						  double x_pixels_per_inch,
						  double
						  y_pixels_per_inch);
extern cairo_status_t cairo_surface_set_user_data(cairo_surface_t *
						  surface,
						  const
						  cairo_user_data_key_t *
						  key, void *user_data,
						  cairo_destroy_func_t
						  destroy);
extern cairo_status_t cairo_surface_status(cairo_surface_t * surface);
extern cairo_status_t cairo_surface_write_to_png(cairo_surface_t * surface,
						 const char *filename);
extern cairo_status_t cairo_surface_write_to_png_stream(cairo_surface_t *
							surface,
							cairo_write_func_t
							write_func,
							void *closure);
extern void cairo_text_extents(cairo_t * cr, const char *utf8,
			       cairo_text_extents_t * extents);
extern void cairo_text_path(cairo_t * cr, const char *utf8);
extern void cairo_transform(cairo_t * cr, const cairo_matrix_t * matrix);
extern void cairo_translate(cairo_t * cr, double tx, double ty);
extern void cairo_user_to_device(cairo_t * cr, double *x, double *y);
extern void cairo_user_to_device_distance(cairo_t * cr, double *dx,
					  double *dy);
extern int cairo_version(void);
extern const char *cairo_version_string(void);
</SCREEN>
</SECT2>
</SECT1>
<!-- End of text generated from database -->
