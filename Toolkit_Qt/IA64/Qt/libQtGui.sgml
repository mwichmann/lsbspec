<!-- Start of text generated from database -->
<!-- generated from the LSB specification database -->
<!--    by $Header: mklibspec 1.82 2006/03/29 19:10:18 mats Exp 0 -->
<!--    at Fri Nov 16 16:20:19 2007 -->
<SECT1 ID=libQtGui>
<TITLE>Interfaces for libQtGui</TITLE>
<PARA>
<XREF LINKEND="lib-libQtGui-def"> defines the library name and shared object name
for the libQtGui library
</PARA>
<TABLE id="lib-libQtGui-def">
<TITLE>libQtGui Definition</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Library:</ENTRY>
<ENTRY>libQtGui</ENTRY>
</ROW>
<ROW>
<ENTRY>SONAME:</ENTRY>
<ENTRY>libQtGui.so.4</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The behavior of the interfaces in this library is specified by the following specifications:<SIMPLELIST COLUMNS=1>
<MEMBER ID='REFSTD.libQtGui.1'>
[CXXABI] <XREF LINKEND="std.CXXABI">
</MEMBER>
</SIMPLELIST>
</PARA>
<!-- debug: database interface name QtGui -->
<SECT2>
<!--libgroup-->
<TITLE>QtGui</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Class data for QTextObject</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QTextObject class
is described by <XREF LINKEND="cls-38929-0">
</PARA>
<!--classdata-->
<TABLE id="cls-38929-0">
<TITLE>Primary vtable for QTextObject</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QTextObject</primary></indexterm>typeinfo for QTextObject</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextObject::metaObject() const</primary></indexterm>QTextObject::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextObject::qt_metacast(char const*)</primary></indexterm>QTextObject::qt_metacast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextObject::qt_metacall(QMetaObject::Call, int, void**)</primary></indexterm>QTextObject::qt_metacall(QMetaObject::Call, int, void**)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextObject::~QTextObject()</primary></indexterm>QTextObject::~QTextObject()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextObject::~QTextObject()</primary></indexterm>QTextObject::~QTextObject()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::event(QEvent*)</primary></indexterm>QObject::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::eventFilter(QObject*, QEvent*)</primary></indexterm>QObject::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QEvent*)</primary></indexterm>QObject::customEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QTextObject  class
is described by <XREF LINKEND="rtti-38724">
</PARA>
<!--classdata-->
<TABLE ID="rtti-38724">
<TITLE>typeinfo for QTextObject</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QTextObject</primary></indexterm>typeinfo name for QTextObject</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QObject</primary></indexterm>typeinfo for QObject</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QTextBlockGroup</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QTextBlockGroup class
is described by <XREF LINKEND="cls-38990-0">
</PARA>
<!--classdata-->
<TABLE id="cls-38990-0">
<TITLE>Primary vtable for QTextBlockGroup</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QTextBlockGroup</primary></indexterm>typeinfo for QTextBlockGroup</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextBlockGroup::metaObject() const</primary></indexterm>QTextBlockGroup::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextBlockGroup::qt_metacast(char const*)</primary></indexterm>QTextBlockGroup::qt_metacast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextBlockGroup::qt_metacall(QMetaObject::Call, int, void**)</primary></indexterm>QTextBlockGroup::qt_metacall(QMetaObject::Call, int, void**)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextBlockGroup::~QTextBlockGroup()</primary></indexterm>QTextBlockGroup::~QTextBlockGroup()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextBlockGroup::~QTextBlockGroup()</primary></indexterm>QTextBlockGroup::~QTextBlockGroup()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::event(QEvent*)</primary></indexterm>QObject::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::eventFilter(QObject*, QEvent*)</primary></indexterm>QObject::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QEvent*)</primary></indexterm>QObject::customEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextBlockGroup::blockInserted(QTextBlock const&)</primary></indexterm>QTextBlockGroup::blockInserted(QTextBlock const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextBlockGroup::blockRemoved(QTextBlock const&)</primary></indexterm>QTextBlockGroup::blockRemoved(QTextBlock const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextBlockGroup::blockFormatChanged(QTextBlock const&)</primary></indexterm>QTextBlockGroup::blockFormatChanged(QTextBlock const&)</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QTextBlockGroup  class
is described by <XREF LINKEND="rtti-38785">
</PARA>
<!--classdata-->
<TABLE ID="rtti-38785">
<TITLE>typeinfo for QTextBlockGroup</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QTextBlockGroup</primary></indexterm>typeinfo name for QTextBlockGroup</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QTextObject</primary></indexterm>typeinfo for QTextObject</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QTextFrameLayoutData</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QTextFrameLayoutData class
is described by <XREF LINKEND="cls-39028-0">
</PARA>
<!--classdata-->
<TABLE id="cls-39028-0">
<TITLE>Primary vtable for QTextFrameLayoutData</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QTextFrameLayoutData</primary></indexterm>typeinfo for QTextFrameLayoutData</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextFrameLayoutData::~QTextFrameLayoutData()</primary></indexterm>QTextFrameLayoutData::~QTextFrameLayoutData()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextFrameLayoutData::~QTextFrameLayoutData()</primary></indexterm>QTextFrameLayoutData::~QTextFrameLayoutData()</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QTextFrameLayoutData  class
is described by <XREF LINKEND="rtti-38823">
</PARA>
<!--classdata-->
<TABLE ID="rtti-38823">
<TITLE>typeinfo for QTextFrameLayoutData</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__class_type_info</primary></indexterm>vtable for __cxxabiv1::__class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QTextFrameLayoutData</primary></indexterm>typeinfo name for QTextFrameLayoutData</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QTextFrame</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QTextFrame class
is described by <XREF LINKEND="cls-38896-0">
</PARA>
<!--classdata-->
<TABLE id="cls-38896-0">
<TITLE>Primary vtable for QTextFrame</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QTextFrame</primary></indexterm>typeinfo for QTextFrame</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextFrame::metaObject() const</primary></indexterm>QTextFrame::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextFrame::qt_metacast(char const*)</primary></indexterm>QTextFrame::qt_metacast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextFrame::qt_metacall(QMetaObject::Call, int, void**)</primary></indexterm>QTextFrame::qt_metacall(QMetaObject::Call, int, void**)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextFrame::~QTextFrame()</primary></indexterm>QTextFrame::~QTextFrame()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextFrame::~QTextFrame()</primary></indexterm>QTextFrame::~QTextFrame()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::event(QEvent*)</primary></indexterm>QObject::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::eventFilter(QObject*, QEvent*)</primary></indexterm>QObject::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QEvent*)</primary></indexterm>QObject::customEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QTextFrame  class
is described by <XREF LINKEND="rtti-38690">
</PARA>
<!--classdata-->
<TABLE ID="rtti-38690">
<TITLE>typeinfo for QTextFrame</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QTextFrame</primary></indexterm>typeinfo name for QTextFrame</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QTextObject</primary></indexterm>typeinfo for QTextObject</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QTextBlockUserData</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QTextBlockUserData class
is described by <XREF LINKEND="cls-39015-0">
</PARA>
<!--classdata-->
<TABLE id="cls-39015-0">
<TITLE>Primary vtable for QTextBlockUserData</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QTextBlockUserData</primary></indexterm>typeinfo for QTextBlockUserData</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextBlockUserData::~QTextBlockUserData()</primary></indexterm>QTextBlockUserData::~QTextBlockUserData()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextBlockUserData::~QTextBlockUserData()</primary></indexterm>QTextBlockUserData::~QTextBlockUserData()</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QTextBlockUserData  class
is described by <XREF LINKEND="rtti-38810">
</PARA>
<!--classdata-->
<TABLE ID="rtti-38810">
<TITLE>typeinfo for QTextBlockUserData</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__class_type_info</primary></indexterm>vtable for __cxxabiv1::__class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QTextBlockUserData</primary></indexterm>typeinfo name for QTextBlockUserData</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QTextDocument</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QTextDocument class
is described by <XREF LINKEND="cls-38965-0">
</PARA>
<!--classdata-->
<TABLE id="cls-38965-0">
<TITLE>Primary vtable for QTextDocument</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QTextDocument</primary></indexterm>typeinfo for QTextDocument</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextDocument::metaObject() const</primary></indexterm>QTextDocument::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextDocument::qt_metacast(char const*)</primary></indexterm>QTextDocument::qt_metacast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextDocument::qt_metacall(QMetaObject::Call, int, void**)</primary></indexterm>QTextDocument::qt_metacall(QMetaObject::Call, int, void**)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextDocument::~QTextDocument()</primary></indexterm>QTextDocument::~QTextDocument()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextDocument::~QTextDocument()</primary></indexterm>QTextDocument::~QTextDocument()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::event(QEvent*)</primary></indexterm>QObject::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::eventFilter(QObject*, QEvent*)</primary></indexterm>QObject::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QEvent*)</primary></indexterm>QObject::customEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextDocument::clear()</primary></indexterm>QTextDocument::clear()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextDocument::createObject(QTextFormat const&)</primary></indexterm>QTextDocument::createObject(QTextFormat const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextDocument::loadResource(int, QUrl const&)</primary></indexterm>QTextDocument::loadResource(int, QUrl const&)</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QTextDocument  class
is described by <XREF LINKEND="rtti-38760">
</PARA>
<!--classdata-->
<TABLE ID="rtti-38760">
<TITLE>typeinfo for QTextDocument</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QTextDocument</primary></indexterm>typeinfo name for QTextDocument</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QObject</primary></indexterm>typeinfo for QObject</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QTextTable</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QTextTable class
is described by <XREF LINKEND="cls-38897-0">
</PARA>
<!--classdata-->
<TABLE id="cls-38897-0">
<TITLE>Primary vtable for QTextTable</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QTextTable</primary></indexterm>typeinfo for QTextTable</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextTable::metaObject() const</primary></indexterm>QTextTable::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextTable::qt_metacast(char const*)</primary></indexterm>QTextTable::qt_metacast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextTable::qt_metacall(QMetaObject::Call, int, void**)</primary></indexterm>QTextTable::qt_metacall(QMetaObject::Call, int, void**)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextTable::~QTextTable()</primary></indexterm>QTextTable::~QTextTable()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextTable::~QTextTable()</primary></indexterm>QTextTable::~QTextTable()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::event(QEvent*)</primary></indexterm>QObject::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::eventFilter(QObject*, QEvent*)</primary></indexterm>QObject::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QEvent*)</primary></indexterm>QObject::customEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QTextTable  class
is described by <XREF LINKEND="rtti-38691">
</PARA>
<!--classdata-->
<TABLE ID="rtti-38691">
<TITLE>typeinfo for QTextTable</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QTextTable</primary></indexterm>typeinfo name for QTextTable</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QTextFrame</primary></indexterm>typeinfo for QTextFrame</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QMimeSource</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QMimeSource class
is described by <XREF LINKEND="cls-38917-0">
</PARA>
<!--classdata-->
<TABLE id="cls-38917-0">
<TITLE>Primary vtable for QMimeSource</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QMimeSource</primary></indexterm>typeinfo for QMimeSource</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMimeSource::~QMimeSource()</primary></indexterm>QMimeSource::~QMimeSource()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMimeSource::~QMimeSource()</primary></indexterm>QMimeSource::~QMimeSource()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMimeSource::provides(char const*) const</primary></indexterm>QMimeSource::provides(char const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QMimeSource  class
is described by <XREF LINKEND="rtti-38712">
</PARA>
<!--classdata-->
<TABLE ID="rtti-38712">
<TITLE>typeinfo for QMimeSource</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__class_type_info</primary></indexterm>vtable for __cxxabiv1::__class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QMimeSource</primary></indexterm>typeinfo name for QMimeSource</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QDrag</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QDrag class
is described by <XREF LINKEND="cls-39049-0">
</PARA>
<!--classdata-->
<TABLE id="cls-39049-0">
<TITLE>Primary vtable for QDrag</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QDrag</primary></indexterm>typeinfo for QDrag</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDrag::metaObject() const</primary></indexterm>QDrag::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDrag::qt_metacast(char const*)</primary></indexterm>QDrag::qt_metacast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDrag::qt_metacall(QMetaObject::Call, int, void**)</primary></indexterm>QDrag::qt_metacall(QMetaObject::Call, int, void**)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDrag::~QDrag()</primary></indexterm>QDrag::~QDrag()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDrag::~QDrag()</primary></indexterm>QDrag::~QDrag()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::event(QEvent*)</primary></indexterm>QObject::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::eventFilter(QObject*, QEvent*)</primary></indexterm>QObject::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QEvent*)</primary></indexterm>QObject::customEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QDrag  class
is described by <XREF LINKEND="rtti-38844">
</PARA>
<!--classdata-->
<TABLE ID="rtti-38844">
<TITLE>typeinfo for QDrag</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QDrag</primary></indexterm>typeinfo name for QDrag</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QObject</primary></indexterm>typeinfo for QObject</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QInputEvent</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QInputEvent class
is described by <XREF LINKEND="cls-38912-0">
</PARA>
<!--classdata-->
<TABLE id="cls-38912-0">
<TITLE>Primary vtable for QInputEvent</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QInputEvent</primary></indexterm>typeinfo for QInputEvent</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QInputEvent::~QInputEvent()</primary></indexterm>QInputEvent::~QInputEvent()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QInputEvent::~QInputEvent()</primary></indexterm>QInputEvent::~QInputEvent()</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QInputEvent  class
is described by <XREF LINKEND="rtti-38707">
</PARA>
<!--classdata-->
<TABLE ID="rtti-38707">
<TITLE>typeinfo for QInputEvent</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QInputEvent</primary></indexterm>typeinfo name for QInputEvent</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QEvent</primary></indexterm>typeinfo for QEvent</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QMouseEvent</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QMouseEvent class
is described by <XREF LINKEND="cls-38919-0">
</PARA>
<!--classdata-->
<TABLE id="cls-38919-0">
<TITLE>Primary vtable for QMouseEvent</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QMouseEvent</primary></indexterm>typeinfo for QMouseEvent</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMouseEvent::~QMouseEvent()</primary></indexterm>QMouseEvent::~QMouseEvent()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMouseEvent::~QMouseEvent()</primary></indexterm>QMouseEvent::~QMouseEvent()</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QMouseEvent  class
is described by <XREF LINKEND="rtti-38714">
</PARA>
<!--classdata-->
<TABLE ID="rtti-38714">
<TITLE>typeinfo for QMouseEvent</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QMouseEvent</primary></indexterm>typeinfo name for QMouseEvent</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QInputEvent</primary></indexterm>typeinfo for QInputEvent</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QHoverEvent</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QHoverEvent class
is described by <XREF LINKEND="cls-38910-0">
</PARA>
<!--classdata-->
<TABLE id="cls-38910-0">
<TITLE>Primary vtable for QHoverEvent</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QHoverEvent</primary></indexterm>typeinfo for QHoverEvent</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QHoverEvent::~QHoverEvent()</primary></indexterm>QHoverEvent::~QHoverEvent()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QHoverEvent::~QHoverEvent()</primary></indexterm>QHoverEvent::~QHoverEvent()</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QHoverEvent  class
is described by <XREF LINKEND="rtti-38705">
</PARA>
<!--classdata-->
<TABLE ID="rtti-38705">
<TITLE>typeinfo for QHoverEvent</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QHoverEvent</primary></indexterm>typeinfo name for QHoverEvent</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QEvent</primary></indexterm>typeinfo for QEvent</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QWheelEvent</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QWheelEvent class
is described by <XREF LINKEND="cls-38933-0">
</PARA>
<!--classdata-->
<TABLE id="cls-38933-0">
<TITLE>Primary vtable for QWheelEvent</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QWheelEvent</primary></indexterm>typeinfo for QWheelEvent</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWheelEvent::~QWheelEvent()</primary></indexterm>QWheelEvent::~QWheelEvent()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWheelEvent::~QWheelEvent()</primary></indexterm>QWheelEvent::~QWheelEvent()</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QWheelEvent  class
is described by <XREF LINKEND="rtti-38728">
</PARA>
<!--classdata-->
<TABLE ID="rtti-38728">
<TITLE>typeinfo for QWheelEvent</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QWheelEvent</primary></indexterm>typeinfo name for QWheelEvent</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QInputEvent</primary></indexterm>typeinfo for QInputEvent</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QTabletEvent</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QTabletEvent class
is described by <XREF LINKEND="cls-38954-0">
</PARA>
<!--classdata-->
<TABLE id="cls-38954-0">
<TITLE>Primary vtable for QTabletEvent</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QTabletEvent</primary></indexterm>typeinfo for QTabletEvent</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTabletEvent::~QTabletEvent()</primary></indexterm>QTabletEvent::~QTabletEvent()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTabletEvent::~QTabletEvent()</primary></indexterm>QTabletEvent::~QTabletEvent()</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QTabletEvent  class
is described by <XREF LINKEND="rtti-38749">
</PARA>
<!--classdata-->
<TABLE ID="rtti-38749">
<TITLE>typeinfo for QTabletEvent</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QTabletEvent</primary></indexterm>typeinfo name for QTabletEvent</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QInputEvent</primary></indexterm>typeinfo for QInputEvent</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QKeyEvent</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QKeyEvent class
is described by <XREF LINKEND="cls-39078-0">
</PARA>
<!--classdata-->
<TABLE id="cls-39078-0">
<TITLE>Primary vtable for QKeyEvent</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QKeyEvent</primary></indexterm>typeinfo for QKeyEvent</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QKeyEvent::~QKeyEvent()</primary></indexterm>QKeyEvent::~QKeyEvent()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QKeyEvent::~QKeyEvent()</primary></indexterm>QKeyEvent::~QKeyEvent()</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QKeyEvent  class
is described by <XREF LINKEND="rtti-38873">
</PARA>
<!--classdata-->
<TABLE ID="rtti-38873">
<TITLE>typeinfo for QKeyEvent</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QKeyEvent</primary></indexterm>typeinfo name for QKeyEvent</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QInputEvent</primary></indexterm>typeinfo for QInputEvent</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QFocusEvent</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QFocusEvent class
is described by <XREF LINKEND="cls-38904-0">
</PARA>
<!--classdata-->
<TABLE id="cls-38904-0">
<TITLE>Primary vtable for QFocusEvent</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QFocusEvent</primary></indexterm>typeinfo for QFocusEvent</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFocusEvent::~QFocusEvent()</primary></indexterm>QFocusEvent::~QFocusEvent()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFocusEvent::~QFocusEvent()</primary></indexterm>QFocusEvent::~QFocusEvent()</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QFocusEvent  class
is described by <XREF LINKEND="rtti-38699">
</PARA>
<!--classdata-->
<TABLE ID="rtti-38699">
<TITLE>typeinfo for QFocusEvent</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QFocusEvent</primary></indexterm>typeinfo name for QFocusEvent</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QEvent</primary></indexterm>typeinfo for QEvent</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QPaintEvent</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QPaintEvent class
is described by <XREF LINKEND="cls-38920-0">
</PARA>
<!--classdata-->
<TABLE id="cls-38920-0">
<TITLE>Primary vtable for QPaintEvent</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QPaintEvent</primary></indexterm>typeinfo for QPaintEvent</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintEvent::~QPaintEvent()</primary></indexterm>QPaintEvent::~QPaintEvent()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintEvent::~QPaintEvent()</primary></indexterm>QPaintEvent::~QPaintEvent()</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QPaintEvent  class
is described by <XREF LINKEND="rtti-38715">
</PARA>
<!--classdata-->
<TABLE ID="rtti-38715">
<TITLE>typeinfo for QPaintEvent</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QPaintEvent</primary></indexterm>typeinfo name for QPaintEvent</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QEvent</primary></indexterm>typeinfo for QEvent</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QMoveEvent</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QMoveEvent class
is described by <XREF LINKEND="cls-38890-0">
</PARA>
<!--classdata-->
<TABLE id="cls-38890-0">
<TITLE>Primary vtable for QMoveEvent</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QMoveEvent</primary></indexterm>typeinfo for QMoveEvent</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMoveEvent::~QMoveEvent()</primary></indexterm>QMoveEvent::~QMoveEvent()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMoveEvent::~QMoveEvent()</primary></indexterm>QMoveEvent::~QMoveEvent()</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QMoveEvent  class
is described by <XREF LINKEND="rtti-38684">
</PARA>
<!--classdata-->
<TABLE ID="rtti-38684">
<TITLE>typeinfo for QMoveEvent</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QMoveEvent</primary></indexterm>typeinfo name for QMoveEvent</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QEvent</primary></indexterm>typeinfo for QEvent</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QResizeEvent</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QResizeEvent class
is described by <XREF LINKEND="cls-38952-0">
</PARA>
<!--classdata-->
<TABLE id="cls-38952-0">
<TITLE>Primary vtable for QResizeEvent</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QResizeEvent</primary></indexterm>typeinfo for QResizeEvent</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QResizeEvent::~QResizeEvent()</primary></indexterm>QResizeEvent::~QResizeEvent()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QResizeEvent::~QResizeEvent()</primary></indexterm>QResizeEvent::~QResizeEvent()</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QResizeEvent  class
is described by <XREF LINKEND="rtti-38747">
</PARA>
<!--classdata-->
<TABLE ID="rtti-38747">
<TITLE>typeinfo for QResizeEvent</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QResizeEvent</primary></indexterm>typeinfo name for QResizeEvent</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QEvent</primary></indexterm>typeinfo for QEvent</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QCloseEvent</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QCloseEvent class
is described by <XREF LINKEND="cls-38901-0">
</PARA>
<!--classdata-->
<TABLE id="cls-38901-0">
<TITLE>Primary vtable for QCloseEvent</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QCloseEvent</primary></indexterm>typeinfo for QCloseEvent</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QCloseEvent::~QCloseEvent()</primary></indexterm>QCloseEvent::~QCloseEvent()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QCloseEvent::~QCloseEvent()</primary></indexterm>QCloseEvent::~QCloseEvent()</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QCloseEvent  class
is described by <XREF LINKEND="rtti-38696">
</PARA>
<!--classdata-->
<TABLE ID="rtti-38696">
<TITLE>typeinfo for QCloseEvent</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QCloseEvent</primary></indexterm>typeinfo name for QCloseEvent</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QEvent</primary></indexterm>typeinfo for QEvent</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QIconDragEvent</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QIconDragEvent class
is described by <XREF LINKEND="cls-38971-0">
</PARA>
<!--classdata-->
<TABLE id="cls-38971-0">
<TITLE>Primary vtable for QIconDragEvent</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QIconDragEvent</primary></indexterm>typeinfo for QIconDragEvent</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QIconDragEvent::~QIconDragEvent()</primary></indexterm>QIconDragEvent::~QIconDragEvent()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QIconDragEvent::~QIconDragEvent()</primary></indexterm>QIconDragEvent::~QIconDragEvent()</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QIconDragEvent  class
is described by <XREF LINKEND="rtti-38766">
</PARA>
<!--classdata-->
<TABLE ID="rtti-38766">
<TITLE>typeinfo for QIconDragEvent</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QIconDragEvent</primary></indexterm>typeinfo name for QIconDragEvent</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QEvent</primary></indexterm>typeinfo for QEvent</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QShowEvent</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QShowEvent class
is described by <XREF LINKEND="cls-38892-0">
</PARA>
<!--classdata-->
<TABLE id="cls-38892-0">
<TITLE>Primary vtable for QShowEvent</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QShowEvent</primary></indexterm>typeinfo for QShowEvent</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QShowEvent::~QShowEvent()</primary></indexterm>QShowEvent::~QShowEvent()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QShowEvent::~QShowEvent()</primary></indexterm>QShowEvent::~QShowEvent()</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QShowEvent  class
is described by <XREF LINKEND="rtti-38686">
</PARA>
<!--classdata-->
<TABLE ID="rtti-38686">
<TITLE>typeinfo for QShowEvent</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QShowEvent</primary></indexterm>typeinfo name for QShowEvent</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QEvent</primary></indexterm>typeinfo for QEvent</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QHideEvent</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QHideEvent class
is described by <XREF LINKEND="cls-38888-0">
</PARA>
<!--classdata-->
<TABLE id="cls-38888-0">
<TITLE>Primary vtable for QHideEvent</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QHideEvent</primary></indexterm>typeinfo for QHideEvent</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QHideEvent::~QHideEvent()</primary></indexterm>QHideEvent::~QHideEvent()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QHideEvent::~QHideEvent()</primary></indexterm>QHideEvent::~QHideEvent()</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QHideEvent  class
is described by <XREF LINKEND="rtti-38682">
</PARA>
<!--classdata-->
<TABLE ID="rtti-38682">
<TITLE>typeinfo for QHideEvent</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QHideEvent</primary></indexterm>typeinfo name for QHideEvent</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QEvent</primary></indexterm>typeinfo for QEvent</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QContextMenuEvent</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QContextMenuEvent class
is described by <XREF LINKEND="cls-39004-0">
</PARA>
<!--classdata-->
<TABLE id="cls-39004-0">
<TITLE>Primary vtable for QContextMenuEvent</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QContextMenuEvent</primary></indexterm>typeinfo for QContextMenuEvent</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QContextMenuEvent::~QContextMenuEvent()</primary></indexterm>QContextMenuEvent::~QContextMenuEvent()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QContextMenuEvent::~QContextMenuEvent()</primary></indexterm>QContextMenuEvent::~QContextMenuEvent()</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QContextMenuEvent  class
is described by <XREF LINKEND="rtti-38799">
</PARA>
<!--classdata-->
<TABLE ID="rtti-38799">
<TITLE>typeinfo for QContextMenuEvent</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QContextMenuEvent</primary></indexterm>typeinfo name for QContextMenuEvent</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QInputEvent</primary></indexterm>typeinfo for QInputEvent</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QInputMethodEvent</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QInputMethodEvent class
is described by <XREF LINKEND="cls-39008-0">
</PARA>
<!--classdata-->
<TABLE id="cls-39008-0">
<TITLE>Primary vtable for QInputMethodEvent</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QInputMethodEvent</primary></indexterm>typeinfo for QInputMethodEvent</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QInputMethodEvent::~QInputMethodEvent()</primary></indexterm>QInputMethodEvent::~QInputMethodEvent()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QInputMethodEvent::~QInputMethodEvent()</primary></indexterm>QInputMethodEvent::~QInputMethodEvent()</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QInputMethodEvent  class
is described by <XREF LINKEND="rtti-38803">
</PARA>
<!--classdata-->
<TABLE ID="rtti-38803">
<TITLE>typeinfo for QInputMethodEvent</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QInputMethodEvent</primary></indexterm>typeinfo name for QInputMethodEvent</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QEvent</primary></indexterm>typeinfo for QEvent</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QDropEvent</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QDropEvent class
is described by <XREF LINKEND="cls-38886-0">
</PARA>
<!--classdata-->
<TABLE id="cls-38886-0">
<TITLE>Primary vtable for QDropEvent</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QDropEvent</primary></indexterm>typeinfo for QDropEvent</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDropEvent::~QDropEvent()</primary></indexterm>QDropEvent::~QDropEvent()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDropEvent::~QDropEvent()</primary></indexterm>QDropEvent::~QDropEvent()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDropEvent::format(int) const</primary></indexterm>QDropEvent::format(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDropEvent::encodedData(char const*) const</primary></indexterm>QDropEvent::encodedData(char const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDropEvent::provides(char const*) const</primary></indexterm>QDropEvent::provides(char const*) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--classdata-->
<TABLE id="cls-38886-1">
<TITLE>Secondary vtable for QDropEvent</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>-24</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QDropEvent</primary></indexterm>typeinfo for QDropEvent</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QDropEvent::~QDropEvent()</primary></indexterm>non-virtual thunk to QDropEvent::~QDropEvent()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QDropEvent::~QDropEvent()</primary></indexterm>non-virtual thunk to QDropEvent::~QDropEvent()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QDropEvent::format(int) const</primary></indexterm>non-virtual thunk to QDropEvent::format(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QDropEvent::provides(char const*) const</primary></indexterm>non-virtual thunk to QDropEvent::provides(char const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QDropEvent::encodedData(char const*) const</primary></indexterm>non-virtual thunk to QDropEvent::encodedData(char const*) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QDropEvent  class
is described by <XREF LINKEND="rtti-38680">
</PARA>
<!--classdata-->
<TABLE ID="rtti-38680">
<TITLE>typeinfo for QDropEvent</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__vmi_class_type_info</primary></indexterm>vtable for __cxxabiv1::__vmi_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QDropEvent</primary></indexterm>typeinfo name for QDropEvent</ENTRY>
</ROW>
<ROW>
<ENTRY>flags:</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QEvent</primary></indexterm>typeinfo for QEvent</ENTRY>
<ENTRY>2</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QMimeSource</primary></indexterm>typeinfo for QMimeSource</ENTRY>
<ENTRY>3074</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QDragMoveEvent</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QDragMoveEvent class
is described by <XREF LINKEND="cls-38969-0">
</PARA>
<!--classdata-->
<TABLE id="cls-38969-0">
<TITLE>Primary vtable for QDragMoveEvent</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QDragMoveEvent</primary></indexterm>typeinfo for QDragMoveEvent</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDragMoveEvent::~QDragMoveEvent()</primary></indexterm>QDragMoveEvent::~QDragMoveEvent()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDragMoveEvent::~QDragMoveEvent()</primary></indexterm>QDragMoveEvent::~QDragMoveEvent()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDropEvent::format(int) const</primary></indexterm>QDropEvent::format(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDropEvent::encodedData(char const*) const</primary></indexterm>QDropEvent::encodedData(char const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDropEvent::provides(char const*) const</primary></indexterm>QDropEvent::provides(char const*) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--classdata-->
<TABLE id="cls-38969-1">
<TITLE>Secondary vtable for QDragMoveEvent</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>-24</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QDragMoveEvent</primary></indexterm>typeinfo for QDragMoveEvent</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QDragMoveEvent::~QDragMoveEvent()</primary></indexterm>non-virtual thunk to QDragMoveEvent::~QDragMoveEvent()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QDragMoveEvent::~QDragMoveEvent()</primary></indexterm>non-virtual thunk to QDragMoveEvent::~QDragMoveEvent()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QDropEvent::format(int) const</primary></indexterm>non-virtual thunk to QDropEvent::format(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QDropEvent::provides(char const*) const</primary></indexterm>non-virtual thunk to QDropEvent::provides(char const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QDropEvent::encodedData(char const*) const</primary></indexterm>non-virtual thunk to QDropEvent::encodedData(char const*) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QDragMoveEvent  class
is described by <XREF LINKEND="rtti-38764">
</PARA>
<!--classdata-->
<TABLE ID="rtti-38764">
<TITLE>typeinfo for QDragMoveEvent</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QDragMoveEvent</primary></indexterm>typeinfo name for QDragMoveEvent</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QDropEvent</primary></indexterm>typeinfo for QDropEvent</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QDragEnterEvent</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QDragEnterEvent class
is described by <XREF LINKEND="cls-38981-0">
</PARA>
<!--classdata-->
<TABLE id="cls-38981-0">
<TITLE>Primary vtable for QDragEnterEvent</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QDragEnterEvent</primary></indexterm>typeinfo for QDragEnterEvent</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDragEnterEvent::~QDragEnterEvent()</primary></indexterm>QDragEnterEvent::~QDragEnterEvent()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDragEnterEvent::~QDragEnterEvent()</primary></indexterm>QDragEnterEvent::~QDragEnterEvent()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDropEvent::format(int) const</primary></indexterm>QDropEvent::format(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDropEvent::encodedData(char const*) const</primary></indexterm>QDropEvent::encodedData(char const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDropEvent::provides(char const*) const</primary></indexterm>QDropEvent::provides(char const*) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--classdata-->
<TABLE id="cls-38981-1">
<TITLE>Secondary vtable for QDragEnterEvent</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>-24</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QDragEnterEvent</primary></indexterm>typeinfo for QDragEnterEvent</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QDragEnterEvent::~QDragEnterEvent()</primary></indexterm>non-virtual thunk to QDragEnterEvent::~QDragEnterEvent()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QDragEnterEvent::~QDragEnterEvent()</primary></indexterm>non-virtual thunk to QDragEnterEvent::~QDragEnterEvent()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QDropEvent::format(int) const</primary></indexterm>non-virtual thunk to QDropEvent::format(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QDropEvent::provides(char const*) const</primary></indexterm>non-virtual thunk to QDropEvent::provides(char const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QDropEvent::encodedData(char const*) const</primary></indexterm>non-virtual thunk to QDropEvent::encodedData(char const*) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QDragEnterEvent  class
is described by <XREF LINKEND="rtti-38776">
</PARA>
<!--classdata-->
<TABLE ID="rtti-38776">
<TITLE>typeinfo for QDragEnterEvent</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QDragEnterEvent</primary></indexterm>typeinfo name for QDragEnterEvent</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QDragMoveEvent</primary></indexterm>typeinfo for QDragMoveEvent</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QDragResponseEvent</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QDragResponseEvent class
is described by <XREF LINKEND="cls-39010-0">
</PARA>
<!--classdata-->
<TABLE id="cls-39010-0">
<TITLE>Primary vtable for QDragResponseEvent</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QDragResponseEvent</primary></indexterm>typeinfo for QDragResponseEvent</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDragResponseEvent::~QDragResponseEvent()</primary></indexterm>QDragResponseEvent::~QDragResponseEvent()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDragResponseEvent::~QDragResponseEvent()</primary></indexterm>QDragResponseEvent::~QDragResponseEvent()</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QDragResponseEvent  class
is described by <XREF LINKEND="rtti-38805">
</PARA>
<!--classdata-->
<TABLE ID="rtti-38805">
<TITLE>typeinfo for QDragResponseEvent</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QDragResponseEvent</primary></indexterm>typeinfo name for QDragResponseEvent</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QEvent</primary></indexterm>typeinfo for QEvent</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QDragLeaveEvent</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QDragLeaveEvent class
is described by <XREF LINKEND="cls-38982-0">
</PARA>
<!--classdata-->
<TABLE id="cls-38982-0">
<TITLE>Primary vtable for QDragLeaveEvent</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QDragLeaveEvent</primary></indexterm>typeinfo for QDragLeaveEvent</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDragLeaveEvent::~QDragLeaveEvent()</primary></indexterm>QDragLeaveEvent::~QDragLeaveEvent()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDragLeaveEvent::~QDragLeaveEvent()</primary></indexterm>QDragLeaveEvent::~QDragLeaveEvent()</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QDragLeaveEvent  class
is described by <XREF LINKEND="rtti-38777">
</PARA>
<!--classdata-->
<TABLE ID="rtti-38777">
<TITLE>typeinfo for QDragLeaveEvent</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QDragLeaveEvent</primary></indexterm>typeinfo name for QDragLeaveEvent</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QEvent</primary></indexterm>typeinfo for QEvent</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QHelpEvent</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QHelpEvent class
is described by <XREF LINKEND="cls-38887-0">
</PARA>
<!--classdata-->
<TABLE id="cls-38887-0">
<TITLE>Primary vtable for QHelpEvent</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QHelpEvent</primary></indexterm>typeinfo for QHelpEvent</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QHelpEvent::~QHelpEvent()</primary></indexterm>QHelpEvent::~QHelpEvent()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QHelpEvent::~QHelpEvent()</primary></indexterm>QHelpEvent::~QHelpEvent()</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QHelpEvent  class
is described by <XREF LINKEND="rtti-38681">
</PARA>
<!--classdata-->
<TABLE ID="rtti-38681">
<TITLE>typeinfo for QHelpEvent</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QHelpEvent</primary></indexterm>typeinfo name for QHelpEvent</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QEvent</primary></indexterm>typeinfo for QEvent</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QStatusTipEvent</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QStatusTipEvent class
is described by <XREF LINKEND="cls-38989-0">
</PARA>
<!--classdata-->
<TABLE id="cls-38989-0">
<TITLE>Primary vtable for QStatusTipEvent</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QStatusTipEvent</primary></indexterm>typeinfo for QStatusTipEvent</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStatusTipEvent::~QStatusTipEvent()</primary></indexterm>QStatusTipEvent::~QStatusTipEvent()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStatusTipEvent::~QStatusTipEvent()</primary></indexterm>QStatusTipEvent::~QStatusTipEvent()</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QStatusTipEvent  class
is described by <XREF LINKEND="rtti-38784">
</PARA>
<!--classdata-->
<TABLE ID="rtti-38784">
<TITLE>typeinfo for QStatusTipEvent</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QStatusTipEvent</primary></indexterm>typeinfo name for QStatusTipEvent</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QEvent</primary></indexterm>typeinfo for QEvent</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QWhatsThisClickedEvent</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QWhatsThisClickedEvent class
is described by <XREF LINKEND="cls-39035-0">
</PARA>
<!--classdata-->
<TABLE id="cls-39035-0">
<TITLE>Primary vtable for QWhatsThisClickedEvent</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QWhatsThisClickedEvent</primary></indexterm>typeinfo for QWhatsThisClickedEvent</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWhatsThisClickedEvent::~QWhatsThisClickedEvent()</primary></indexterm>QWhatsThisClickedEvent::~QWhatsThisClickedEvent()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWhatsThisClickedEvent::~QWhatsThisClickedEvent()</primary></indexterm>QWhatsThisClickedEvent::~QWhatsThisClickedEvent()</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QWhatsThisClickedEvent  class
is described by <XREF LINKEND="rtti-38830">
</PARA>
<!--classdata-->
<TABLE ID="rtti-38830">
<TITLE>typeinfo for QWhatsThisClickedEvent</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QWhatsThisClickedEvent</primary></indexterm>typeinfo name for QWhatsThisClickedEvent</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QEvent</primary></indexterm>typeinfo for QEvent</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QActionEvent</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QActionEvent class
is described by <XREF LINKEND="cls-38937-0">
</PARA>
<!--classdata-->
<TABLE id="cls-38937-0">
<TITLE>Primary vtable for QActionEvent</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QActionEvent</primary></indexterm>typeinfo for QActionEvent</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QActionEvent::~QActionEvent()</primary></indexterm>QActionEvent::~QActionEvent()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QActionEvent::~QActionEvent()</primary></indexterm>QActionEvent::~QActionEvent()</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QActionEvent  class
is described by <XREF LINKEND="rtti-38732">
</PARA>
<!--classdata-->
<TABLE ID="rtti-38732">
<TITLE>typeinfo for QActionEvent</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QActionEvent</primary></indexterm>typeinfo name for QActionEvent</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QEvent</primary></indexterm>typeinfo for QEvent</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QFileOpenEvent</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QFileOpenEvent class
is described by <XREF LINKEND="cls-38970-0">
</PARA>
<!--classdata-->
<TABLE id="cls-38970-0">
<TITLE>Primary vtable for QFileOpenEvent</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QFileOpenEvent</primary></indexterm>typeinfo for QFileOpenEvent</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFileOpenEvent::~QFileOpenEvent()</primary></indexterm>QFileOpenEvent::~QFileOpenEvent()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFileOpenEvent::~QFileOpenEvent()</primary></indexterm>QFileOpenEvent::~QFileOpenEvent()</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QFileOpenEvent  class
is described by <XREF LINKEND="rtti-38765">
</PARA>
<!--classdata-->
<TABLE ID="rtti-38765">
<TITLE>typeinfo for QFileOpenEvent</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QFileOpenEvent</primary></indexterm>typeinfo name for QFileOpenEvent</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QEvent</primary></indexterm>typeinfo for QEvent</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QToolBarChangeEvent</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QToolBarChangeEvent class
is described by <XREF LINKEND="cls-39023-0">
</PARA>
<!--classdata-->
<TABLE id="cls-39023-0">
<TITLE>Primary vtable for QToolBarChangeEvent</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QToolBarChangeEvent</primary></indexterm>typeinfo for QToolBarChangeEvent</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QToolBarChangeEvent::~QToolBarChangeEvent()</primary></indexterm>QToolBarChangeEvent::~QToolBarChangeEvent()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QToolBarChangeEvent::~QToolBarChangeEvent()</primary></indexterm>QToolBarChangeEvent::~QToolBarChangeEvent()</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QToolBarChangeEvent  class
is described by <XREF LINKEND="rtti-38818">
</PARA>
<!--classdata-->
<TABLE ID="rtti-38818">
<TITLE>typeinfo for QToolBarChangeEvent</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QToolBarChangeEvent</primary></indexterm>typeinfo name for QToolBarChangeEvent</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QEvent</primary></indexterm>typeinfo for QEvent</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QShortcutEvent</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QShortcutEvent class
is described by <XREF LINKEND="cls-38974-0">
</PARA>
<!--classdata-->
<TABLE id="cls-38974-0">
<TITLE>Primary vtable for QShortcutEvent</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QShortcutEvent</primary></indexterm>typeinfo for QShortcutEvent</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QShortcutEvent::~QShortcutEvent()</primary></indexterm>QShortcutEvent::~QShortcutEvent()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QShortcutEvent::~QShortcutEvent()</primary></indexterm>QShortcutEvent::~QShortcutEvent()</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QShortcutEvent  class
is described by <XREF LINKEND="rtti-38769">
</PARA>
<!--classdata-->
<TABLE ID="rtti-38769">
<TITLE>typeinfo for QShortcutEvent</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QShortcutEvent</primary></indexterm>typeinfo name for QShortcutEvent</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QEvent</primary></indexterm>typeinfo for QEvent</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QClipboardEvent</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QClipboardEvent class
is described by <XREF LINKEND="cls-38980-0">
</PARA>
<!--classdata-->
<TABLE id="cls-38980-0">
<TITLE>Primary vtable for QClipboardEvent</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QClipboardEvent</primary></indexterm>typeinfo for QClipboardEvent</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QClipboardEvent::~QClipboardEvent()</primary></indexterm>QClipboardEvent::~QClipboardEvent()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QClipboardEvent::~QClipboardEvent()</primary></indexterm>QClipboardEvent::~QClipboardEvent()</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QClipboardEvent  class
is described by <XREF LINKEND="rtti-38775">
</PARA>
<!--classdata-->
<TABLE ID="rtti-38775">
<TITLE>typeinfo for QClipboardEvent</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QClipboardEvent</primary></indexterm>typeinfo name for QClipboardEvent</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QEvent</primary></indexterm>typeinfo for QEvent</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QWindowStateChangeEvent</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QWindowStateChangeEvent class
is described by <XREF LINKEND="cls-39038-0">
</PARA>
<!--classdata-->
<TABLE id="cls-39038-0">
<TITLE>Primary vtable for QWindowStateChangeEvent</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QWindowStateChangeEvent</primary></indexterm>typeinfo for QWindowStateChangeEvent</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWindowStateChangeEvent::~QWindowStateChangeEvent()</primary></indexterm>QWindowStateChangeEvent::~QWindowStateChangeEvent()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWindowStateChangeEvent::~QWindowStateChangeEvent()</primary></indexterm>QWindowStateChangeEvent::~QWindowStateChangeEvent()</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QWindowStateChangeEvent  class
is described by <XREF LINKEND="rtti-38833">
</PARA>
<!--classdata-->
<TABLE ID="rtti-38833">
<TITLE>typeinfo for QWindowStateChangeEvent</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QWindowStateChangeEvent</primary></indexterm>typeinfo name for QWindowStateChangeEvent</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QEvent</primary></indexterm>typeinfo for QEvent</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QMenubarUpdatedEvent</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QMenubarUpdatedEvent class
is described by <XREF LINKEND="cls-39026-0">
</PARA>
<!--classdata-->
<TABLE id="cls-39026-0">
<TITLE>Primary vtable for QMenubarUpdatedEvent</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QMenubarUpdatedEvent</primary></indexterm>typeinfo for QMenubarUpdatedEvent</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMenubarUpdatedEvent::~QMenubarUpdatedEvent()</primary></indexterm>QMenubarUpdatedEvent::~QMenubarUpdatedEvent()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMenubarUpdatedEvent::~QMenubarUpdatedEvent()</primary></indexterm>QMenubarUpdatedEvent::~QMenubarUpdatedEvent()</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QMenubarUpdatedEvent  class
is described by <XREF LINKEND="rtti-38821">
</PARA>
<!--classdata-->
<TABLE ID="rtti-38821">
<TITLE>typeinfo for QMenubarUpdatedEvent</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QMenubarUpdatedEvent</primary></indexterm>typeinfo name for QMenubarUpdatedEvent</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QEvent</primary></indexterm>typeinfo for QEvent</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QTextList</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QTextList class
is described by <XREF LINKEND="cls-39086-0">
</PARA>
<!--classdata-->
<TABLE id="cls-39086-0">
<TITLE>Primary vtable for QTextList</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QTextList</primary></indexterm>typeinfo for QTextList</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextList::metaObject() const</primary></indexterm>QTextList::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextList::qt_metacast(char const*)</primary></indexterm>QTextList::qt_metacast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextList::qt_metacall(QMetaObject::Call, int, void**)</primary></indexterm>QTextList::qt_metacall(QMetaObject::Call, int, void**)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextList::~QTextList()</primary></indexterm>QTextList::~QTextList()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextList::~QTextList()</primary></indexterm>QTextList::~QTextList()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::event(QEvent*)</primary></indexterm>QObject::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::eventFilter(QObject*, QEvent*)</primary></indexterm>QObject::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QEvent*)</primary></indexterm>QObject::customEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextBlockGroup::blockInserted(QTextBlock const&)</primary></indexterm>QTextBlockGroup::blockInserted(QTextBlock const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextBlockGroup::blockRemoved(QTextBlock const&)</primary></indexterm>QTextBlockGroup::blockRemoved(QTextBlock const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextBlockGroup::blockFormatChanged(QTextBlock const&)</primary></indexterm>QTextBlockGroup::blockFormatChanged(QTextBlock const&)</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QTextList  class
is described by <XREF LINKEND="rtti-38881">
</PARA>
<!--classdata-->
<TABLE ID="rtti-38881">
<TITLE>typeinfo for QTextList</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QTextList</primary></indexterm>typeinfo name for QTextList</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QTextBlockGroup</primary></indexterm>typeinfo for QTextBlockGroup</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QAbstractTextDocumentLayout</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QAbstractTextDocumentLayout class
is described by <XREF LINKEND="cls-39042-0">
</PARA>
<!--classdata-->
<TABLE id="cls-39042-0">
<TITLE>Primary vtable for QAbstractTextDocumentLayout</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QAbstractTextDocumentLayout</primary></indexterm>typeinfo for QAbstractTextDocumentLayout</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractTextDocumentLayout::metaObject() const</primary></indexterm>QAbstractTextDocumentLayout::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractTextDocumentLayout::qt_metacast(char const*)</primary></indexterm>QAbstractTextDocumentLayout::qt_metacast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractTextDocumentLayout::qt_metacall(QMetaObject::Call, int, void**)</primary></indexterm>QAbstractTextDocumentLayout::qt_metacall(QMetaObject::Call, int, void**)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractTextDocumentLayout::~QAbstractTextDocumentLayout()</primary></indexterm>QAbstractTextDocumentLayout::~QAbstractTextDocumentLayout()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractTextDocumentLayout::~QAbstractTextDocumentLayout()</primary></indexterm>QAbstractTextDocumentLayout::~QAbstractTextDocumentLayout()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::event(QEvent*)</primary></indexterm>QObject::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::eventFilter(QObject*, QEvent*)</primary></indexterm>QObject::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QEvent*)</primary></indexterm>QObject::customEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractTextDocumentLayout::resizeInlineObject(QTextInlineObject, int, QTextFormat const&)</primary></indexterm>QAbstractTextDocumentLayout::resizeInlineObject(QTextInlineObject, int, QTextFormat const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractTextDocumentLayout::positionInlineObject(QTextInlineObject, int, QTextFormat const&)</primary></indexterm>QAbstractTextDocumentLayout::positionInlineObject(QTextInlineObject, int, QTextFormat const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractTextDocumentLayout::drawInlineObject(QPainter*, QRectF const&, QTextInlineObject, int, QTextFormat const&)</primary></indexterm>QAbstractTextDocumentLayout::drawInlineObject(QPainter*, QRectF const&, QTextInlineObject, int, QTextFormat const&)</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QAbstractTextDocumentLayout  class
is described by <XREF LINKEND="rtti-38837">
</PARA>
<!--classdata-->
<TABLE ID="rtti-38837">
<TITLE>typeinfo for QAbstractTextDocumentLayout</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QAbstractTextDocumentLayout</primary></indexterm>typeinfo name for QAbstractTextDocumentLayout</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QObject</primary></indexterm>typeinfo for QObject</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QTextObjectInterface</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QTextObjectInterface class
is described by <XREF LINKEND="cls-39029-0">
</PARA>
<!--classdata-->
<TABLE id="cls-39029-0">
<TITLE>Primary vtable for QTextObjectInterface</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QTextObjectInterface</primary></indexterm>typeinfo for QTextObjectInterface</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextObjectInterface::~QTextObjectInterface()</primary></indexterm>QTextObjectInterface::~QTextObjectInterface()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextObjectInterface::~QTextObjectInterface()</primary></indexterm>QTextObjectInterface::~QTextObjectInterface()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QTextObjectInterface  class
is described by <XREF LINKEND="rtti-38824">
</PARA>
<!--classdata-->
<TABLE ID="rtti-38824">
<TITLE>typeinfo for QTextObjectInterface</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__class_type_info</primary></indexterm>vtable for __cxxabiv1::__class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QTextObjectInterface</primary></indexterm>typeinfo name for QTextObjectInterface</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QSyntaxHighlighter</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QSyntaxHighlighter class
is described by <XREF LINKEND="cls-39014-0">
</PARA>
<!--classdata-->
<TABLE id="cls-39014-0">
<TITLE>Primary vtable for QSyntaxHighlighter</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QSyntaxHighlighter</primary></indexterm>typeinfo for QSyntaxHighlighter</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSyntaxHighlighter::metaObject() const</primary></indexterm>QSyntaxHighlighter::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSyntaxHighlighter::qt_metacast(char const*)</primary></indexterm>QSyntaxHighlighter::qt_metacast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSyntaxHighlighter::qt_metacall(QMetaObject::Call, int, void**)</primary></indexterm>QSyntaxHighlighter::qt_metacall(QMetaObject::Call, int, void**)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSyntaxHighlighter::~QSyntaxHighlighter()</primary></indexterm>QSyntaxHighlighter::~QSyntaxHighlighter()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSyntaxHighlighter::~QSyntaxHighlighter()</primary></indexterm>QSyntaxHighlighter::~QSyntaxHighlighter()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::event(QEvent*)</primary></indexterm>QObject::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::eventFilter(QObject*, QEvent*)</primary></indexterm>QObject::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QEvent*)</primary></indexterm>QObject::customEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QSyntaxHighlighter  class
is described by <XREF LINKEND="rtti-38809">
</PARA>
<!--classdata-->
<TABLE ID="rtti-38809">
<TITLE>typeinfo for QSyntaxHighlighter</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QSyntaxHighlighter</primary></indexterm>typeinfo name for QSyntaxHighlighter</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QObject</primary></indexterm>typeinfo for QObject</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QPaintDevice</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QPaintDevice class
is described by <XREF LINKEND="cls-38946-0">
</PARA>
<!--classdata-->
<TABLE id="cls-38946-0">
<TITLE>Primary vtable for QPaintDevice</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QPaintDevice</primary></indexterm>typeinfo for QPaintDevice</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::~QPaintDevice()</primary></indexterm>QPaintDevice::~QPaintDevice()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::~QPaintDevice()</primary></indexterm>QPaintDevice::~QPaintDevice()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::devType() const</primary></indexterm>QPaintDevice::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>QPaintDevice::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QPaintDevice  class
is described by <XREF LINKEND="rtti-38741">
</PARA>
<!--classdata-->
<TABLE ID="rtti-38741">
<TITLE>typeinfo for QPaintDevice</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__class_type_info</primary></indexterm>vtable for __cxxabiv1::__class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QPaintDevice</primary></indexterm>typeinfo name for QPaintDevice</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QWidget</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QWidget class
is described by <XREF LINKEND="cls-39064-0">
</PARA>
<!--classdata-->
<TABLE id="cls-39064-0">
<TITLE>Primary vtable for QWidget</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QWidget</primary></indexterm>typeinfo for QWidget</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::metaObject() const</primary></indexterm>QWidget::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::qt_metacast(char const*)</primary></indexterm>QWidget::qt_metacast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::qt_metacall(QMetaObject::Call, int, void**)</primary></indexterm>QWidget::qt_metacall(QMetaObject::Call, int, void**)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::~QWidget()</primary></indexterm>QWidget::~QWidget()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::~QWidget()</primary></indexterm>QWidget::~QWidget()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::event(QEvent*)</primary></indexterm>QWidget::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::eventFilter(QObject*, QEvent*)</primary></indexterm>QObject::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QEvent*)</primary></indexterm>QObject::customEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::devType() const</primary></indexterm>QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setVisible(bool)</primary></indexterm>QWidget::setVisible(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::sizeHint() const</primary></indexterm>QWidget::sizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::minimumSizeHint() const</primary></indexterm>QWidget::minimumSizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::heightForWidth(int) const</primary></indexterm>QWidget::heightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paintEngine() const</primary></indexterm>QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mousePressEvent(QMouseEvent*)</primary></indexterm>QWidget::mousePressEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseReleaseEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseReleaseEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseDoubleClickEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseDoubleClickEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseMoveEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseMoveEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::wheelEvent(QWheelEvent*)</primary></indexterm>QWidget::wheelEvent(QWheelEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyPressEvent(QKeyEvent*)</primary></indexterm>QWidget::keyPressEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyReleaseEvent(QKeyEvent*)</primary></indexterm>QWidget::keyReleaseEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusInEvent(QFocusEvent*)</primary></indexterm>QWidget::focusInEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusOutEvent(QFocusEvent*)</primary></indexterm>QWidget::focusOutEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enterEvent(QEvent*)</primary></indexterm>QWidget::enterEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::leaveEvent(QEvent*)</primary></indexterm>QWidget::leaveEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paintEvent(QPaintEvent*)</primary></indexterm>QWidget::paintEvent(QPaintEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::moveEvent(QMoveEvent*)</primary></indexterm>QWidget::moveEvent(QMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::resizeEvent(QResizeEvent*)</primary></indexterm>QWidget::resizeEvent(QResizeEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::closeEvent(QCloseEvent*)</primary></indexterm>QWidget::closeEvent(QCloseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;33&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::contextMenuEvent(QContextMenuEvent*)</primary></indexterm>QWidget::contextMenuEvent(QContextMenuEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;34&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::tabletEvent(QTabletEvent*)</primary></indexterm>QWidget::tabletEvent(QTabletEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;35&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::actionEvent(QActionEvent*)</primary></indexterm>QWidget::actionEvent(QActionEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;36&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragEnterEvent(QDragEnterEvent*)</primary></indexterm>QWidget::dragEnterEvent(QDragEnterEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;37&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragMoveEvent(QDragMoveEvent*)</primary></indexterm>QWidget::dragMoveEvent(QDragMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;38&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragLeaveEvent(QDragLeaveEvent*)</primary></indexterm>QWidget::dragLeaveEvent(QDragLeaveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;39&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dropEvent(QDropEvent*)</primary></indexterm>QWidget::dropEvent(QDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;40&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showEvent(QShowEvent*)</primary></indexterm>QWidget::showEvent(QShowEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;41&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::hideEvent(QHideEvent*)</primary></indexterm>QWidget::hideEvent(QHideEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;42&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::x11Event(_XEvent*)</primary></indexterm>QWidget::x11Event(_XEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;43&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::changeEvent(QEvent*)</primary></indexterm>QWidget::changeEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;44&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;45&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::inputMethodEvent(QInputMethodEvent*)</primary></indexterm>QWidget::inputMethodEvent(QInputMethodEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;46&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::inputMethodQuery(Qt::InputMethodQuery) const</primary></indexterm>QWidget::inputMethodQuery(Qt::InputMethodQuery) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;47&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusNextPrevChild(bool)</primary></indexterm>QWidget::focusNextPrevChild(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;48&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::styleChange(QStyle&)</primary></indexterm>QWidget::styleChange(QStyle&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;49&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enabledChange(bool)</primary></indexterm>QWidget::enabledChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;50&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paletteChange(QPalette const&)</primary></indexterm>QWidget::paletteChange(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;51&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::fontChange(QFont const&)</primary></indexterm>QWidget::fontChange(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;52&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::windowActivationChange(bool)</primary></indexterm>QWidget::windowActivationChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;53&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::languageChange()</primary></indexterm>QWidget::languageChange()</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--classdata-->
<TABLE id="cls-39064-1">
<TITLE>Secondary vtable for QWidget</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>-16</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QWidget</primary></indexterm>typeinfo for QWidget</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::~QWidget()</primary></indexterm>non-virtual thunk to QWidget::~QWidget()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::~QWidget()</primary></indexterm>non-virtual thunk to QWidget::~QWidget()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::devType() const</primary></indexterm>non-virtual thunk to QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::paintEngine() const</primary></indexterm>non-virtual thunk to QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QWidget  class
is described by <XREF LINKEND="rtti-38859">
</PARA>
<!--classdata-->
<TABLE ID="rtti-38859">
<TITLE>typeinfo for QWidget</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__vmi_class_type_info</primary></indexterm>vtable for __cxxabiv1::__vmi_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QWidget</primary></indexterm>typeinfo name for QWidget</ENTRY>
</ROW>
<ROW>
<ENTRY>flags:</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QObject</primary></indexterm>typeinfo for QObject</ENTRY>
<ENTRY>2</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QPaintDevice</primary></indexterm>typeinfo for QPaintDevice</ENTRY>
<ENTRY>2050</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QDialog</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QDialog class
is described by <XREF LINKEND="cls-39059-0">
</PARA>
<!--classdata-->
<TABLE id="cls-39059-0">
<TITLE>Primary vtable for QDialog</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QDialog</primary></indexterm>typeinfo for QDialog</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::metaObject() const</primary></indexterm>QDialog::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::qt_metacast(char const*)</primary></indexterm>QDialog::qt_metacast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::qt_metacall(QMetaObject::Call, int, void**)</primary></indexterm>QDialog::qt_metacall(QMetaObject::Call, int, void**)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::~QDialog()</primary></indexterm>QDialog::~QDialog()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::~QDialog()</primary></indexterm>QDialog::~QDialog()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::event(QEvent*)</primary></indexterm>QWidget::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::eventFilter(QObject*, QEvent*)</primary></indexterm>QDialog::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QEvent*)</primary></indexterm>QObject::customEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::devType() const</primary></indexterm>QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::setVisible(bool)</primary></indexterm>QDialog::setVisible(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::sizeHint() const</primary></indexterm>QDialog::sizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::minimumSizeHint() const</primary></indexterm>QDialog::minimumSizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::heightForWidth(int) const</primary></indexterm>QWidget::heightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paintEngine() const</primary></indexterm>QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mousePressEvent(QMouseEvent*)</primary></indexterm>QWidget::mousePressEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseReleaseEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseReleaseEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseDoubleClickEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseDoubleClickEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseMoveEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseMoveEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::wheelEvent(QWheelEvent*)</primary></indexterm>QWidget::wheelEvent(QWheelEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::keyPressEvent(QKeyEvent*)</primary></indexterm>QDialog::keyPressEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyReleaseEvent(QKeyEvent*)</primary></indexterm>QWidget::keyReleaseEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusInEvent(QFocusEvent*)</primary></indexterm>QWidget::focusInEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusOutEvent(QFocusEvent*)</primary></indexterm>QWidget::focusOutEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enterEvent(QEvent*)</primary></indexterm>QWidget::enterEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::leaveEvent(QEvent*)</primary></indexterm>QWidget::leaveEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paintEvent(QPaintEvent*)</primary></indexterm>QWidget::paintEvent(QPaintEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::moveEvent(QMoveEvent*)</primary></indexterm>QWidget::moveEvent(QMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::resizeEvent(QResizeEvent*)</primary></indexterm>QDialog::resizeEvent(QResizeEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::closeEvent(QCloseEvent*)</primary></indexterm>QDialog::closeEvent(QCloseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;33&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::contextMenuEvent(QContextMenuEvent*)</primary></indexterm>QDialog::contextMenuEvent(QContextMenuEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;34&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::tabletEvent(QTabletEvent*)</primary></indexterm>QWidget::tabletEvent(QTabletEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;35&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::actionEvent(QActionEvent*)</primary></indexterm>QWidget::actionEvent(QActionEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;36&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragEnterEvent(QDragEnterEvent*)</primary></indexterm>QWidget::dragEnterEvent(QDragEnterEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;37&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragMoveEvent(QDragMoveEvent*)</primary></indexterm>QWidget::dragMoveEvent(QDragMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;38&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragLeaveEvent(QDragLeaveEvent*)</primary></indexterm>QWidget::dragLeaveEvent(QDragLeaveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;39&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dropEvent(QDropEvent*)</primary></indexterm>QWidget::dropEvent(QDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;40&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::showEvent(QShowEvent*)</primary></indexterm>QDialog::showEvent(QShowEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;41&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::hideEvent(QHideEvent*)</primary></indexterm>QWidget::hideEvent(QHideEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;42&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::x11Event(_XEvent*)</primary></indexterm>QWidget::x11Event(_XEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;43&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::changeEvent(QEvent*)</primary></indexterm>QWidget::changeEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;44&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;45&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::inputMethodEvent(QInputMethodEvent*)</primary></indexterm>QWidget::inputMethodEvent(QInputMethodEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;46&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::inputMethodQuery(Qt::InputMethodQuery) const</primary></indexterm>QWidget::inputMethodQuery(Qt::InputMethodQuery) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;47&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusNextPrevChild(bool)</primary></indexterm>QWidget::focusNextPrevChild(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;48&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::styleChange(QStyle&)</primary></indexterm>QWidget::styleChange(QStyle&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;49&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enabledChange(bool)</primary></indexterm>QWidget::enabledChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;50&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paletteChange(QPalette const&)</primary></indexterm>QWidget::paletteChange(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;51&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::fontChange(QFont const&)</primary></indexterm>QWidget::fontChange(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;52&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::windowActivationChange(bool)</primary></indexterm>QWidget::windowActivationChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;53&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::languageChange()</primary></indexterm>QWidget::languageChange()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;54&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::done(int)</primary></indexterm>QDialog::done(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;55&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::accept()</primary></indexterm>QDialog::accept()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;56&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::reject()</primary></indexterm>QDialog::reject()</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--classdata-->
<TABLE id="cls-39059-1">
<TITLE>Secondary vtable for QDialog</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>-16</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QDialog</primary></indexterm>typeinfo for QDialog</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QDialog::~QDialog()</primary></indexterm>non-virtual thunk to QDialog::~QDialog()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QDialog::~QDialog()</primary></indexterm>non-virtual thunk to QDialog::~QDialog()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::devType() const</primary></indexterm>non-virtual thunk to QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::paintEngine() const</primary></indexterm>non-virtual thunk to QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QDialog  class
is described by <XREF LINKEND="rtti-38854">
</PARA>
<!--classdata-->
<TABLE ID="rtti-38854">
<TITLE>typeinfo for QDialog</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QDialog</primary></indexterm>typeinfo name for QDialog</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QWidget</primary></indexterm>typeinfo for QWidget</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QAbstractPageSetupDialog</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QAbstractPageSetupDialog class
is described by <XREF LINKEND="cls-39040-0">
</PARA>
<!--classdata-->
<TABLE id="cls-39040-0">
<TITLE>Primary vtable for QAbstractPageSetupDialog</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QAbstractPageSetupDialog</primary></indexterm>typeinfo for QAbstractPageSetupDialog</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::metaObject() const</primary></indexterm>QDialog::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::qt_metacast(char const*)</primary></indexterm>QDialog::qt_metacast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::qt_metacall(QMetaObject::Call, int, void**)</primary></indexterm>QDialog::qt_metacall(QMetaObject::Call, int, void**)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractPageSetupDialog::~QAbstractPageSetupDialog()</primary></indexterm>QAbstractPageSetupDialog::~QAbstractPageSetupDialog()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractPageSetupDialog::~QAbstractPageSetupDialog()</primary></indexterm>QAbstractPageSetupDialog::~QAbstractPageSetupDialog()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::event(QEvent*)</primary></indexterm>QWidget::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::eventFilter(QObject*, QEvent*)</primary></indexterm>QDialog::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QEvent*)</primary></indexterm>QObject::customEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::devType() const</primary></indexterm>QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::setVisible(bool)</primary></indexterm>QDialog::setVisible(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::sizeHint() const</primary></indexterm>QDialog::sizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::minimumSizeHint() const</primary></indexterm>QDialog::minimumSizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::heightForWidth(int) const</primary></indexterm>QWidget::heightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paintEngine() const</primary></indexterm>QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mousePressEvent(QMouseEvent*)</primary></indexterm>QWidget::mousePressEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseReleaseEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseReleaseEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseDoubleClickEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseDoubleClickEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseMoveEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseMoveEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::wheelEvent(QWheelEvent*)</primary></indexterm>QWidget::wheelEvent(QWheelEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::keyPressEvent(QKeyEvent*)</primary></indexterm>QDialog::keyPressEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyReleaseEvent(QKeyEvent*)</primary></indexterm>QWidget::keyReleaseEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusInEvent(QFocusEvent*)</primary></indexterm>QWidget::focusInEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusOutEvent(QFocusEvent*)</primary></indexterm>QWidget::focusOutEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enterEvent(QEvent*)</primary></indexterm>QWidget::enterEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::leaveEvent(QEvent*)</primary></indexterm>QWidget::leaveEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paintEvent(QPaintEvent*)</primary></indexterm>QWidget::paintEvent(QPaintEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::moveEvent(QMoveEvent*)</primary></indexterm>QWidget::moveEvent(QMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::resizeEvent(QResizeEvent*)</primary></indexterm>QDialog::resizeEvent(QResizeEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::closeEvent(QCloseEvent*)</primary></indexterm>QDialog::closeEvent(QCloseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;33&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::contextMenuEvent(QContextMenuEvent*)</primary></indexterm>QDialog::contextMenuEvent(QContextMenuEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;34&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::tabletEvent(QTabletEvent*)</primary></indexterm>QWidget::tabletEvent(QTabletEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;35&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::actionEvent(QActionEvent*)</primary></indexterm>QWidget::actionEvent(QActionEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;36&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragEnterEvent(QDragEnterEvent*)</primary></indexterm>QWidget::dragEnterEvent(QDragEnterEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;37&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragMoveEvent(QDragMoveEvent*)</primary></indexterm>QWidget::dragMoveEvent(QDragMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;38&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragLeaveEvent(QDragLeaveEvent*)</primary></indexterm>QWidget::dragLeaveEvent(QDragLeaveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;39&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dropEvent(QDropEvent*)</primary></indexterm>QWidget::dropEvent(QDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;40&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::showEvent(QShowEvent*)</primary></indexterm>QDialog::showEvent(QShowEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;41&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::hideEvent(QHideEvent*)</primary></indexterm>QWidget::hideEvent(QHideEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;42&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::x11Event(_XEvent*)</primary></indexterm>QWidget::x11Event(_XEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;43&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::changeEvent(QEvent*)</primary></indexterm>QWidget::changeEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;44&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;45&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::inputMethodEvent(QInputMethodEvent*)</primary></indexterm>QWidget::inputMethodEvent(QInputMethodEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;46&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::inputMethodQuery(Qt::InputMethodQuery) const</primary></indexterm>QWidget::inputMethodQuery(Qt::InputMethodQuery) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;47&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusNextPrevChild(bool)</primary></indexterm>QWidget::focusNextPrevChild(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;48&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::styleChange(QStyle&)</primary></indexterm>QWidget::styleChange(QStyle&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;49&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enabledChange(bool)</primary></indexterm>QWidget::enabledChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;50&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paletteChange(QPalette const&)</primary></indexterm>QWidget::paletteChange(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;51&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::fontChange(QFont const&)</primary></indexterm>QWidget::fontChange(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;52&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::windowActivationChange(bool)</primary></indexterm>QWidget::windowActivationChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;53&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::languageChange()</primary></indexterm>QWidget::languageChange()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;54&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::done(int)</primary></indexterm>QDialog::done(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;55&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::accept()</primary></indexterm>QDialog::accept()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;56&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::reject()</primary></indexterm>QDialog::reject()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;57&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--classdata-->
<TABLE id="cls-39040-1">
<TITLE>Secondary vtable for QAbstractPageSetupDialog</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>-16</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QAbstractPageSetupDialog</primary></indexterm>typeinfo for QAbstractPageSetupDialog</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QAbstractPageSetupDialog::~QAbstractPageSetupDialog()</primary></indexterm>non-virtual thunk to QAbstractPageSetupDialog::~QAbstractPageSetupDialog()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QAbstractPageSetupDialog::~QAbstractPageSetupDialog()</primary></indexterm>non-virtual thunk to QAbstractPageSetupDialog::~QAbstractPageSetupDialog()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::devType() const</primary></indexterm>non-virtual thunk to QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::paintEngine() const</primary></indexterm>non-virtual thunk to QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QAbstractPageSetupDialog  class
is described by <XREF LINKEND="rtti-38835">
</PARA>
<!--classdata-->
<TABLE ID="rtti-38835">
<TITLE>typeinfo for QAbstractPageSetupDialog</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QAbstractPageSetupDialog</primary></indexterm>typeinfo name for QAbstractPageSetupDialog</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QDialog</primary></indexterm>typeinfo for QDialog</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QColorDialog</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QColorDialog class
is described by <XREF LINKEND="cls-38941-0">
</PARA>
<!--classdata-->
<TABLE id="cls-38941-0">
<TITLE>Primary vtable for QColorDialog</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QColorDialog</primary></indexterm>typeinfo for QColorDialog</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QColorDialog::metaObject() const</primary></indexterm>QColorDialog::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QColorDialog::qt_metacast(char const*)</primary></indexterm>QColorDialog::qt_metacast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QColorDialog::qt_metacall(QMetaObject::Call, int, void**)</primary></indexterm>QColorDialog::qt_metacall(QMetaObject::Call, int, void**)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QColorDialog::~QColorDialog()</primary></indexterm>QColorDialog::~QColorDialog()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QColorDialog::~QColorDialog()</primary></indexterm>QColorDialog::~QColorDialog()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::event(QEvent*)</primary></indexterm>QWidget::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::eventFilter(QObject*, QEvent*)</primary></indexterm>QDialog::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QEvent*)</primary></indexterm>QObject::customEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::devType() const</primary></indexterm>QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::setVisible(bool)</primary></indexterm>QDialog::setVisible(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::sizeHint() const</primary></indexterm>QDialog::sizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::minimumSizeHint() const</primary></indexterm>QDialog::minimumSizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::heightForWidth(int) const</primary></indexterm>QWidget::heightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paintEngine() const</primary></indexterm>QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mousePressEvent(QMouseEvent*)</primary></indexterm>QWidget::mousePressEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseReleaseEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseReleaseEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseDoubleClickEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseDoubleClickEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseMoveEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseMoveEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::wheelEvent(QWheelEvent*)</primary></indexterm>QWidget::wheelEvent(QWheelEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::keyPressEvent(QKeyEvent*)</primary></indexterm>QDialog::keyPressEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyReleaseEvent(QKeyEvent*)</primary></indexterm>QWidget::keyReleaseEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusInEvent(QFocusEvent*)</primary></indexterm>QWidget::focusInEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusOutEvent(QFocusEvent*)</primary></indexterm>QWidget::focusOutEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enterEvent(QEvent*)</primary></indexterm>QWidget::enterEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::leaveEvent(QEvent*)</primary></indexterm>QWidget::leaveEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paintEvent(QPaintEvent*)</primary></indexterm>QWidget::paintEvent(QPaintEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::moveEvent(QMoveEvent*)</primary></indexterm>QWidget::moveEvent(QMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::resizeEvent(QResizeEvent*)</primary></indexterm>QDialog::resizeEvent(QResizeEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::closeEvent(QCloseEvent*)</primary></indexterm>QDialog::closeEvent(QCloseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;33&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::contextMenuEvent(QContextMenuEvent*)</primary></indexterm>QDialog::contextMenuEvent(QContextMenuEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;34&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::tabletEvent(QTabletEvent*)</primary></indexterm>QWidget::tabletEvent(QTabletEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;35&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::actionEvent(QActionEvent*)</primary></indexterm>QWidget::actionEvent(QActionEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;36&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragEnterEvent(QDragEnterEvent*)</primary></indexterm>QWidget::dragEnterEvent(QDragEnterEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;37&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragMoveEvent(QDragMoveEvent*)</primary></indexterm>QWidget::dragMoveEvent(QDragMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;38&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragLeaveEvent(QDragLeaveEvent*)</primary></indexterm>QWidget::dragLeaveEvent(QDragLeaveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;39&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dropEvent(QDropEvent*)</primary></indexterm>QWidget::dropEvent(QDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;40&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::showEvent(QShowEvent*)</primary></indexterm>QDialog::showEvent(QShowEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;41&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::hideEvent(QHideEvent*)</primary></indexterm>QWidget::hideEvent(QHideEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;42&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::x11Event(_XEvent*)</primary></indexterm>QWidget::x11Event(_XEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;43&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::changeEvent(QEvent*)</primary></indexterm>QWidget::changeEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;44&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;45&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::inputMethodEvent(QInputMethodEvent*)</primary></indexterm>QWidget::inputMethodEvent(QInputMethodEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;46&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::inputMethodQuery(Qt::InputMethodQuery) const</primary></indexterm>QWidget::inputMethodQuery(Qt::InputMethodQuery) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;47&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusNextPrevChild(bool)</primary></indexterm>QWidget::focusNextPrevChild(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;48&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::styleChange(QStyle&)</primary></indexterm>QWidget::styleChange(QStyle&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;49&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enabledChange(bool)</primary></indexterm>QWidget::enabledChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;50&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paletteChange(QPalette const&)</primary></indexterm>QWidget::paletteChange(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;51&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::fontChange(QFont const&)</primary></indexterm>QWidget::fontChange(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;52&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::windowActivationChange(bool)</primary></indexterm>QWidget::windowActivationChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;53&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::languageChange()</primary></indexterm>QWidget::languageChange()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;54&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::done(int)</primary></indexterm>QDialog::done(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;55&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::accept()</primary></indexterm>QDialog::accept()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;56&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::reject()</primary></indexterm>QDialog::reject()</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--classdata-->
<TABLE id="cls-38941-1">
<TITLE>Secondary vtable for QColorDialog</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>-16</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QColorDialog</primary></indexterm>typeinfo for QColorDialog</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QColorDialog::~QColorDialog()</primary></indexterm>non-virtual thunk to QColorDialog::~QColorDialog()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QColorDialog::~QColorDialog()</primary></indexterm>non-virtual thunk to QColorDialog::~QColorDialog()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::devType() const</primary></indexterm>non-virtual thunk to QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::paintEngine() const</primary></indexterm>non-virtual thunk to QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QColorDialog  class
is described by <XREF LINKEND="rtti-38736">
</PARA>
<!--classdata-->
<TABLE ID="rtti-38736">
<TITLE>typeinfo for QColorDialog</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QColorDialog</primary></indexterm>typeinfo name for QColorDialog</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QDialog</primary></indexterm>typeinfo for QDialog</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QFontDialog</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QFontDialog class
is described by <XREF LINKEND="cls-38906-0">
</PARA>
<!--classdata-->
<TABLE id="cls-38906-0">
<TITLE>Primary vtable for QFontDialog</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QFontDialog</primary></indexterm>typeinfo for QFontDialog</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFontDialog::metaObject() const</primary></indexterm>QFontDialog::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFontDialog::qt_metacast(char const*)</primary></indexterm>QFontDialog::qt_metacast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFontDialog::qt_metacall(QMetaObject::Call, int, void**)</primary></indexterm>QFontDialog::qt_metacall(QMetaObject::Call, int, void**)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFontDialog::~QFontDialog()</primary></indexterm>QFontDialog::~QFontDialog()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFontDialog::~QFontDialog()</primary></indexterm>QFontDialog::~QFontDialog()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::event(QEvent*)</primary></indexterm>QWidget::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFontDialog::eventFilter(QObject*, QEvent*)</primary></indexterm>QFontDialog::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QEvent*)</primary></indexterm>QObject::customEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::devType() const</primary></indexterm>QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::setVisible(bool)</primary></indexterm>QDialog::setVisible(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::sizeHint() const</primary></indexterm>QDialog::sizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::minimumSizeHint() const</primary></indexterm>QDialog::minimumSizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::heightForWidth(int) const</primary></indexterm>QWidget::heightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paintEngine() const</primary></indexterm>QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mousePressEvent(QMouseEvent*)</primary></indexterm>QWidget::mousePressEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseReleaseEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseReleaseEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseDoubleClickEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseDoubleClickEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseMoveEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseMoveEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::wheelEvent(QWheelEvent*)</primary></indexterm>QWidget::wheelEvent(QWheelEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::keyPressEvent(QKeyEvent*)</primary></indexterm>QDialog::keyPressEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyReleaseEvent(QKeyEvent*)</primary></indexterm>QWidget::keyReleaseEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusInEvent(QFocusEvent*)</primary></indexterm>QWidget::focusInEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusOutEvent(QFocusEvent*)</primary></indexterm>QWidget::focusOutEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enterEvent(QEvent*)</primary></indexterm>QWidget::enterEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::leaveEvent(QEvent*)</primary></indexterm>QWidget::leaveEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paintEvent(QPaintEvent*)</primary></indexterm>QWidget::paintEvent(QPaintEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::moveEvent(QMoveEvent*)</primary></indexterm>QWidget::moveEvent(QMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::resizeEvent(QResizeEvent*)</primary></indexterm>QDialog::resizeEvent(QResizeEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::closeEvent(QCloseEvent*)</primary></indexterm>QDialog::closeEvent(QCloseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;33&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::contextMenuEvent(QContextMenuEvent*)</primary></indexterm>QDialog::contextMenuEvent(QContextMenuEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;34&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::tabletEvent(QTabletEvent*)</primary></indexterm>QWidget::tabletEvent(QTabletEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;35&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::actionEvent(QActionEvent*)</primary></indexterm>QWidget::actionEvent(QActionEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;36&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragEnterEvent(QDragEnterEvent*)</primary></indexterm>QWidget::dragEnterEvent(QDragEnterEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;37&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragMoveEvent(QDragMoveEvent*)</primary></indexterm>QWidget::dragMoveEvent(QDragMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;38&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragLeaveEvent(QDragLeaveEvent*)</primary></indexterm>QWidget::dragLeaveEvent(QDragLeaveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;39&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dropEvent(QDropEvent*)</primary></indexterm>QWidget::dropEvent(QDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;40&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::showEvent(QShowEvent*)</primary></indexterm>QDialog::showEvent(QShowEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;41&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::hideEvent(QHideEvent*)</primary></indexterm>QWidget::hideEvent(QHideEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;42&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::x11Event(_XEvent*)</primary></indexterm>QWidget::x11Event(_XEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;43&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::changeEvent(QEvent*)</primary></indexterm>QWidget::changeEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;44&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;45&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::inputMethodEvent(QInputMethodEvent*)</primary></indexterm>QWidget::inputMethodEvent(QInputMethodEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;46&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::inputMethodQuery(Qt::InputMethodQuery) const</primary></indexterm>QWidget::inputMethodQuery(Qt::InputMethodQuery) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;47&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusNextPrevChild(bool)</primary></indexterm>QWidget::focusNextPrevChild(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;48&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::styleChange(QStyle&)</primary></indexterm>QWidget::styleChange(QStyle&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;49&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enabledChange(bool)</primary></indexterm>QWidget::enabledChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;50&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paletteChange(QPalette const&)</primary></indexterm>QWidget::paletteChange(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;51&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::fontChange(QFont const&)</primary></indexterm>QWidget::fontChange(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;52&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::windowActivationChange(bool)</primary></indexterm>QWidget::windowActivationChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;53&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::languageChange()</primary></indexterm>QWidget::languageChange()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;54&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::done(int)</primary></indexterm>QDialog::done(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;55&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::accept()</primary></indexterm>QDialog::accept()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;56&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::reject()</primary></indexterm>QDialog::reject()</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--classdata-->
<TABLE id="cls-38906-1">
<TITLE>Secondary vtable for QFontDialog</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>-16</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QFontDialog</primary></indexterm>typeinfo for QFontDialog</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QFontDialog::~QFontDialog()</primary></indexterm>non-virtual thunk to QFontDialog::~QFontDialog()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QFontDialog::~QFontDialog()</primary></indexterm>non-virtual thunk to QFontDialog::~QFontDialog()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::devType() const</primary></indexterm>non-virtual thunk to QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::paintEngine() const</primary></indexterm>non-virtual thunk to QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QFontDialog  class
is described by <XREF LINKEND="rtti-38701">
</PARA>
<!--classdata-->
<TABLE ID="rtti-38701">
<TITLE>typeinfo for QFontDialog</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QFontDialog</primary></indexterm>typeinfo name for QFontDialog</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QDialog</primary></indexterm>typeinfo for QDialog</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QMessageBox</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QMessageBox class
is described by <XREF LINKEND="cls-38916-0">
</PARA>
<!--classdata-->
<TABLE id="cls-38916-0">
<TITLE>Primary vtable for QMessageBox</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QMessageBox</primary></indexterm>typeinfo for QMessageBox</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMessageBox::metaObject() const</primary></indexterm>QMessageBox::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMessageBox::qt_metacast(char const*)</primary></indexterm>QMessageBox::qt_metacast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMessageBox::qt_metacall(QMetaObject::Call, int, void**)</primary></indexterm>QMessageBox::qt_metacall(QMetaObject::Call, int, void**)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMessageBox::~QMessageBox()</primary></indexterm>QMessageBox::~QMessageBox()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMessageBox::~QMessageBox()</primary></indexterm>QMessageBox::~QMessageBox()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::event(QEvent*)</primary></indexterm>QWidget::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::eventFilter(QObject*, QEvent*)</primary></indexterm>QDialog::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QEvent*)</primary></indexterm>QObject::customEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::devType() const</primary></indexterm>QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::setVisible(bool)</primary></indexterm>QDialog::setVisible(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMessageBox::sizeHint() const</primary></indexterm>QMessageBox::sizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::minimumSizeHint() const</primary></indexterm>QDialog::minimumSizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::heightForWidth(int) const</primary></indexterm>QWidget::heightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paintEngine() const</primary></indexterm>QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mousePressEvent(QMouseEvent*)</primary></indexterm>QWidget::mousePressEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseReleaseEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseReleaseEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseDoubleClickEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseDoubleClickEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseMoveEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseMoveEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::wheelEvent(QWheelEvent*)</primary></indexterm>QWidget::wheelEvent(QWheelEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMessageBox::keyPressEvent(QKeyEvent*)</primary></indexterm>QMessageBox::keyPressEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyReleaseEvent(QKeyEvent*)</primary></indexterm>QWidget::keyReleaseEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusInEvent(QFocusEvent*)</primary></indexterm>QWidget::focusInEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusOutEvent(QFocusEvent*)</primary></indexterm>QWidget::focusOutEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enterEvent(QEvent*)</primary></indexterm>QWidget::enterEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::leaveEvent(QEvent*)</primary></indexterm>QWidget::leaveEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paintEvent(QPaintEvent*)</primary></indexterm>QWidget::paintEvent(QPaintEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::moveEvent(QMoveEvent*)</primary></indexterm>QWidget::moveEvent(QMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMessageBox::resizeEvent(QResizeEvent*)</primary></indexterm>QMessageBox::resizeEvent(QResizeEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMessageBox::closeEvent(QCloseEvent*)</primary></indexterm>QMessageBox::closeEvent(QCloseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;33&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::contextMenuEvent(QContextMenuEvent*)</primary></indexterm>QDialog::contextMenuEvent(QContextMenuEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;34&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::tabletEvent(QTabletEvent*)</primary></indexterm>QWidget::tabletEvent(QTabletEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;35&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::actionEvent(QActionEvent*)</primary></indexterm>QWidget::actionEvent(QActionEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;36&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragEnterEvent(QDragEnterEvent*)</primary></indexterm>QWidget::dragEnterEvent(QDragEnterEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;37&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragMoveEvent(QDragMoveEvent*)</primary></indexterm>QWidget::dragMoveEvent(QDragMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;38&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragLeaveEvent(QDragLeaveEvent*)</primary></indexterm>QWidget::dragLeaveEvent(QDragLeaveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;39&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dropEvent(QDropEvent*)</primary></indexterm>QWidget::dropEvent(QDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;40&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMessageBox::showEvent(QShowEvent*)</primary></indexterm>QMessageBox::showEvent(QShowEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;41&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::hideEvent(QHideEvent*)</primary></indexterm>QWidget::hideEvent(QHideEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;42&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::x11Event(_XEvent*)</primary></indexterm>QWidget::x11Event(_XEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;43&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMessageBox::changeEvent(QEvent*)</primary></indexterm>QMessageBox::changeEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;44&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;45&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::inputMethodEvent(QInputMethodEvent*)</primary></indexterm>QWidget::inputMethodEvent(QInputMethodEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;46&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::inputMethodQuery(Qt::InputMethodQuery) const</primary></indexterm>QWidget::inputMethodQuery(Qt::InputMethodQuery) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;47&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusNextPrevChild(bool)</primary></indexterm>QWidget::focusNextPrevChild(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;48&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::styleChange(QStyle&)</primary></indexterm>QWidget::styleChange(QStyle&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;49&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enabledChange(bool)</primary></indexterm>QWidget::enabledChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;50&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paletteChange(QPalette const&)</primary></indexterm>QWidget::paletteChange(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;51&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::fontChange(QFont const&)</primary></indexterm>QWidget::fontChange(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;52&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::windowActivationChange(bool)</primary></indexterm>QWidget::windowActivationChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;53&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::languageChange()</primary></indexterm>QWidget::languageChange()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;54&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::done(int)</primary></indexterm>QDialog::done(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;55&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::accept()</primary></indexterm>QDialog::accept()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;56&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::reject()</primary></indexterm>QDialog::reject()</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--classdata-->
<TABLE id="cls-38916-1">
<TITLE>Secondary vtable for QMessageBox</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>-16</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QMessageBox</primary></indexterm>typeinfo for QMessageBox</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QMessageBox::~QMessageBox()</primary></indexterm>non-virtual thunk to QMessageBox::~QMessageBox()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QMessageBox::~QMessageBox()</primary></indexterm>non-virtual thunk to QMessageBox::~QMessageBox()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::devType() const</primary></indexterm>non-virtual thunk to QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::paintEngine() const</primary></indexterm>non-virtual thunk to QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QMessageBox  class
is described by <XREF LINKEND="rtti-38711">
</PARA>
<!--classdata-->
<TABLE ID="rtti-38711">
<TITLE>typeinfo for QMessageBox</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QMessageBox</primary></indexterm>typeinfo name for QMessageBox</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QDialog</primary></indexterm>typeinfo for QDialog</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QProgressDialog</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QProgressDialog class
is described by <XREF LINKEND="cls-38986-0">
</PARA>
<!--classdata-->
<TABLE id="cls-38986-0">
<TITLE>Primary vtable for QProgressDialog</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QProgressDialog</primary></indexterm>typeinfo for QProgressDialog</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QProgressDialog::metaObject() const</primary></indexterm>QProgressDialog::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QProgressDialog::qt_metacast(char const*)</primary></indexterm>QProgressDialog::qt_metacast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QProgressDialog::qt_metacall(QMetaObject::Call, int, void**)</primary></indexterm>QProgressDialog::qt_metacall(QMetaObject::Call, int, void**)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QProgressDialog::~QProgressDialog()</primary></indexterm>QProgressDialog::~QProgressDialog()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QProgressDialog::~QProgressDialog()</primary></indexterm>QProgressDialog::~QProgressDialog()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::event(QEvent*)</primary></indexterm>QWidget::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::eventFilter(QObject*, QEvent*)</primary></indexterm>QDialog::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QEvent*)</primary></indexterm>QObject::customEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::devType() const</primary></indexterm>QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::setVisible(bool)</primary></indexterm>QDialog::setVisible(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QProgressDialog::sizeHint() const</primary></indexterm>QProgressDialog::sizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::minimumSizeHint() const</primary></indexterm>QDialog::minimumSizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::heightForWidth(int) const</primary></indexterm>QWidget::heightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paintEngine() const</primary></indexterm>QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mousePressEvent(QMouseEvent*)</primary></indexterm>QWidget::mousePressEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseReleaseEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseReleaseEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseDoubleClickEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseDoubleClickEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseMoveEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseMoveEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::wheelEvent(QWheelEvent*)</primary></indexterm>QWidget::wheelEvent(QWheelEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::keyPressEvent(QKeyEvent*)</primary></indexterm>QDialog::keyPressEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyReleaseEvent(QKeyEvent*)</primary></indexterm>QWidget::keyReleaseEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusInEvent(QFocusEvent*)</primary></indexterm>QWidget::focusInEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusOutEvent(QFocusEvent*)</primary></indexterm>QWidget::focusOutEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enterEvent(QEvent*)</primary></indexterm>QWidget::enterEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::leaveEvent(QEvent*)</primary></indexterm>QWidget::leaveEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paintEvent(QPaintEvent*)</primary></indexterm>QWidget::paintEvent(QPaintEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::moveEvent(QMoveEvent*)</primary></indexterm>QWidget::moveEvent(QMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QProgressDialog::resizeEvent(QResizeEvent*)</primary></indexterm>QProgressDialog::resizeEvent(QResizeEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QProgressDialog::closeEvent(QCloseEvent*)</primary></indexterm>QProgressDialog::closeEvent(QCloseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;33&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::contextMenuEvent(QContextMenuEvent*)</primary></indexterm>QDialog::contextMenuEvent(QContextMenuEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;34&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::tabletEvent(QTabletEvent*)</primary></indexterm>QWidget::tabletEvent(QTabletEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;35&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::actionEvent(QActionEvent*)</primary></indexterm>QWidget::actionEvent(QActionEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;36&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragEnterEvent(QDragEnterEvent*)</primary></indexterm>QWidget::dragEnterEvent(QDragEnterEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;37&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragMoveEvent(QDragMoveEvent*)</primary></indexterm>QWidget::dragMoveEvent(QDragMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;38&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragLeaveEvent(QDragLeaveEvent*)</primary></indexterm>QWidget::dragLeaveEvent(QDragLeaveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;39&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dropEvent(QDropEvent*)</primary></indexterm>QWidget::dropEvent(QDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;40&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QProgressDialog::showEvent(QShowEvent*)</primary></indexterm>QProgressDialog::showEvent(QShowEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;41&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::hideEvent(QHideEvent*)</primary></indexterm>QWidget::hideEvent(QHideEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;42&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::x11Event(_XEvent*)</primary></indexterm>QWidget::x11Event(_XEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;43&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QProgressDialog::changeEvent(QEvent*)</primary></indexterm>QProgressDialog::changeEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;44&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;45&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::inputMethodEvent(QInputMethodEvent*)</primary></indexterm>QWidget::inputMethodEvent(QInputMethodEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;46&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::inputMethodQuery(Qt::InputMethodQuery) const</primary></indexterm>QWidget::inputMethodQuery(Qt::InputMethodQuery) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;47&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusNextPrevChild(bool)</primary></indexterm>QWidget::focusNextPrevChild(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;48&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::styleChange(QStyle&)</primary></indexterm>QWidget::styleChange(QStyle&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;49&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enabledChange(bool)</primary></indexterm>QWidget::enabledChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;50&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paletteChange(QPalette const&)</primary></indexterm>QWidget::paletteChange(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;51&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::fontChange(QFont const&)</primary></indexterm>QWidget::fontChange(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;52&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::windowActivationChange(bool)</primary></indexterm>QWidget::windowActivationChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;53&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::languageChange()</primary></indexterm>QWidget::languageChange()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;54&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::done(int)</primary></indexterm>QDialog::done(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;55&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::accept()</primary></indexterm>QDialog::accept()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;56&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::reject()</primary></indexterm>QDialog::reject()</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--classdata-->
<TABLE id="cls-38986-1">
<TITLE>Secondary vtable for QProgressDialog</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>-16</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QProgressDialog</primary></indexterm>typeinfo for QProgressDialog</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QProgressDialog::~QProgressDialog()</primary></indexterm>non-virtual thunk to QProgressDialog::~QProgressDialog()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QProgressDialog::~QProgressDialog()</primary></indexterm>non-virtual thunk to QProgressDialog::~QProgressDialog()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::devType() const</primary></indexterm>non-virtual thunk to QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::paintEngine() const</primary></indexterm>non-virtual thunk to QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QProgressDialog  class
is described by <XREF LINKEND="rtti-38781">
</PARA>
<!--classdata-->
<TABLE ID="rtti-38781">
<TITLE>typeinfo for QProgressDialog</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QProgressDialog</primary></indexterm>typeinfo name for QProgressDialog</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QDialog</primary></indexterm>typeinfo for QDialog</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QErrorMessage</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QErrorMessage class
is described by <XREF LINKEND="cls-38958-0">
</PARA>
<!--classdata-->
<TABLE id="cls-38958-0">
<TITLE>Primary vtable for QErrorMessage</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QErrorMessage</primary></indexterm>typeinfo for QErrorMessage</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QErrorMessage::metaObject() const</primary></indexterm>QErrorMessage::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QErrorMessage::qt_metacast(char const*)</primary></indexterm>QErrorMessage::qt_metacast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QErrorMessage::qt_metacall(QMetaObject::Call, int, void**)</primary></indexterm>QErrorMessage::qt_metacall(QMetaObject::Call, int, void**)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QErrorMessage::~QErrorMessage()</primary></indexterm>QErrorMessage::~QErrorMessage()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QErrorMessage::~QErrorMessage()</primary></indexterm>QErrorMessage::~QErrorMessage()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::event(QEvent*)</primary></indexterm>QWidget::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::eventFilter(QObject*, QEvent*)</primary></indexterm>QDialog::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QEvent*)</primary></indexterm>QObject::customEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::devType() const</primary></indexterm>QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::setVisible(bool)</primary></indexterm>QDialog::setVisible(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::sizeHint() const</primary></indexterm>QDialog::sizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::minimumSizeHint() const</primary></indexterm>QDialog::minimumSizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::heightForWidth(int) const</primary></indexterm>QWidget::heightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paintEngine() const</primary></indexterm>QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mousePressEvent(QMouseEvent*)</primary></indexterm>QWidget::mousePressEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseReleaseEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseReleaseEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseDoubleClickEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseDoubleClickEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseMoveEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseMoveEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::wheelEvent(QWheelEvent*)</primary></indexterm>QWidget::wheelEvent(QWheelEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::keyPressEvent(QKeyEvent*)</primary></indexterm>QDialog::keyPressEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyReleaseEvent(QKeyEvent*)</primary></indexterm>QWidget::keyReleaseEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusInEvent(QFocusEvent*)</primary></indexterm>QWidget::focusInEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusOutEvent(QFocusEvent*)</primary></indexterm>QWidget::focusOutEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enterEvent(QEvent*)</primary></indexterm>QWidget::enterEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::leaveEvent(QEvent*)</primary></indexterm>QWidget::leaveEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paintEvent(QPaintEvent*)</primary></indexterm>QWidget::paintEvent(QPaintEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::moveEvent(QMoveEvent*)</primary></indexterm>QWidget::moveEvent(QMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::resizeEvent(QResizeEvent*)</primary></indexterm>QDialog::resizeEvent(QResizeEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::closeEvent(QCloseEvent*)</primary></indexterm>QDialog::closeEvent(QCloseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;33&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::contextMenuEvent(QContextMenuEvent*)</primary></indexterm>QDialog::contextMenuEvent(QContextMenuEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;34&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::tabletEvent(QTabletEvent*)</primary></indexterm>QWidget::tabletEvent(QTabletEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;35&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::actionEvent(QActionEvent*)</primary></indexterm>QWidget::actionEvent(QActionEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;36&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragEnterEvent(QDragEnterEvent*)</primary></indexterm>QWidget::dragEnterEvent(QDragEnterEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;37&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragMoveEvent(QDragMoveEvent*)</primary></indexterm>QWidget::dragMoveEvent(QDragMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;38&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragLeaveEvent(QDragLeaveEvent*)</primary></indexterm>QWidget::dragLeaveEvent(QDragLeaveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;39&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dropEvent(QDropEvent*)</primary></indexterm>QWidget::dropEvent(QDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;40&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::showEvent(QShowEvent*)</primary></indexterm>QDialog::showEvent(QShowEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;41&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::hideEvent(QHideEvent*)</primary></indexterm>QWidget::hideEvent(QHideEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;42&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::x11Event(_XEvent*)</primary></indexterm>QWidget::x11Event(_XEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;43&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::changeEvent(QEvent*)</primary></indexterm>QWidget::changeEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;44&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;45&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::inputMethodEvent(QInputMethodEvent*)</primary></indexterm>QWidget::inputMethodEvent(QInputMethodEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;46&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::inputMethodQuery(Qt::InputMethodQuery) const</primary></indexterm>QWidget::inputMethodQuery(Qt::InputMethodQuery) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;47&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusNextPrevChild(bool)</primary></indexterm>QWidget::focusNextPrevChild(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;48&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::styleChange(QStyle&)</primary></indexterm>QWidget::styleChange(QStyle&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;49&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enabledChange(bool)</primary></indexterm>QWidget::enabledChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;50&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paletteChange(QPalette const&)</primary></indexterm>QWidget::paletteChange(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;51&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::fontChange(QFont const&)</primary></indexterm>QWidget::fontChange(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;52&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::windowActivationChange(bool)</primary></indexterm>QWidget::windowActivationChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;53&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::languageChange()</primary></indexterm>QWidget::languageChange()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;54&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QErrorMessage::done(int)</primary></indexterm>QErrorMessage::done(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;55&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::accept()</primary></indexterm>QDialog::accept()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;56&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::reject()</primary></indexterm>QDialog::reject()</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--classdata-->
<TABLE id="cls-38958-1">
<TITLE>Secondary vtable for QErrorMessage</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>-16</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QErrorMessage</primary></indexterm>typeinfo for QErrorMessage</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QErrorMessage::~QErrorMessage()</primary></indexterm>non-virtual thunk to QErrorMessage::~QErrorMessage()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QErrorMessage::~QErrorMessage()</primary></indexterm>non-virtual thunk to QErrorMessage::~QErrorMessage()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::devType() const</primary></indexterm>non-virtual thunk to QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::paintEngine() const</primary></indexterm>non-virtual thunk to QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QErrorMessage  class
is described by <XREF LINKEND="rtti-38753">
</PARA>
<!--classdata-->
<TABLE ID="rtti-38753">
<TITLE>typeinfo for QErrorMessage</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QErrorMessage</primary></indexterm>typeinfo name for QErrorMessage</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QDialog</primary></indexterm>typeinfo for QDialog</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QFileDialog</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QFileDialog class
is described by <XREF LINKEND="cls-38903-0">
</PARA>
<!--classdata-->
<TABLE id="cls-38903-0">
<TITLE>Primary vtable for QFileDialog</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QFileDialog</primary></indexterm>typeinfo for QFileDialog</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFileDialog::metaObject() const</primary></indexterm>QFileDialog::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFileDialog::qt_metacast(char const*)</primary></indexterm>QFileDialog::qt_metacast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFileDialog::qt_metacall(QMetaObject::Call, int, void**)</primary></indexterm>QFileDialog::qt_metacall(QMetaObject::Call, int, void**)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFileDialog::~QFileDialog()</primary></indexterm>QFileDialog::~QFileDialog()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFileDialog::~QFileDialog()</primary></indexterm>QFileDialog::~QFileDialog()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::event(QEvent*)</primary></indexterm>QWidget::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::eventFilter(QObject*, QEvent*)</primary></indexterm>QDialog::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QEvent*)</primary></indexterm>QObject::customEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::devType() const</primary></indexterm>QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::setVisible(bool)</primary></indexterm>QDialog::setVisible(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::sizeHint() const</primary></indexterm>QDialog::sizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::minimumSizeHint() const</primary></indexterm>QDialog::minimumSizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::heightForWidth(int) const</primary></indexterm>QWidget::heightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paintEngine() const</primary></indexterm>QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mousePressEvent(QMouseEvent*)</primary></indexterm>QWidget::mousePressEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseReleaseEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseReleaseEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseDoubleClickEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseDoubleClickEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseMoveEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseMoveEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::wheelEvent(QWheelEvent*)</primary></indexterm>QWidget::wheelEvent(QWheelEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::keyPressEvent(QKeyEvent*)</primary></indexterm>QDialog::keyPressEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyReleaseEvent(QKeyEvent*)</primary></indexterm>QWidget::keyReleaseEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusInEvent(QFocusEvent*)</primary></indexterm>QWidget::focusInEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusOutEvent(QFocusEvent*)</primary></indexterm>QWidget::focusOutEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enterEvent(QEvent*)</primary></indexterm>QWidget::enterEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::leaveEvent(QEvent*)</primary></indexterm>QWidget::leaveEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paintEvent(QPaintEvent*)</primary></indexterm>QWidget::paintEvent(QPaintEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::moveEvent(QMoveEvent*)</primary></indexterm>QWidget::moveEvent(QMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::resizeEvent(QResizeEvent*)</primary></indexterm>QDialog::resizeEvent(QResizeEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::closeEvent(QCloseEvent*)</primary></indexterm>QDialog::closeEvent(QCloseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;33&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::contextMenuEvent(QContextMenuEvent*)</primary></indexterm>QDialog::contextMenuEvent(QContextMenuEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;34&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::tabletEvent(QTabletEvent*)</primary></indexterm>QWidget::tabletEvent(QTabletEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;35&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::actionEvent(QActionEvent*)</primary></indexterm>QWidget::actionEvent(QActionEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;36&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragEnterEvent(QDragEnterEvent*)</primary></indexterm>QWidget::dragEnterEvent(QDragEnterEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;37&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragMoveEvent(QDragMoveEvent*)</primary></indexterm>QWidget::dragMoveEvent(QDragMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;38&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragLeaveEvent(QDragLeaveEvent*)</primary></indexterm>QWidget::dragLeaveEvent(QDragLeaveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;39&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dropEvent(QDropEvent*)</primary></indexterm>QWidget::dropEvent(QDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;40&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::showEvent(QShowEvent*)</primary></indexterm>QDialog::showEvent(QShowEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;41&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::hideEvent(QHideEvent*)</primary></indexterm>QWidget::hideEvent(QHideEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;42&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::x11Event(_XEvent*)</primary></indexterm>QWidget::x11Event(_XEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;43&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::changeEvent(QEvent*)</primary></indexterm>QWidget::changeEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;44&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;45&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::inputMethodEvent(QInputMethodEvent*)</primary></indexterm>QWidget::inputMethodEvent(QInputMethodEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;46&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::inputMethodQuery(Qt::InputMethodQuery) const</primary></indexterm>QWidget::inputMethodQuery(Qt::InputMethodQuery) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;47&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusNextPrevChild(bool)</primary></indexterm>QWidget::focusNextPrevChild(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;48&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::styleChange(QStyle&)</primary></indexterm>QWidget::styleChange(QStyle&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;49&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enabledChange(bool)</primary></indexterm>QWidget::enabledChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;50&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paletteChange(QPalette const&)</primary></indexterm>QWidget::paletteChange(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;51&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::fontChange(QFont const&)</primary></indexterm>QWidget::fontChange(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;52&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::windowActivationChange(bool)</primary></indexterm>QWidget::windowActivationChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;53&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::languageChange()</primary></indexterm>QWidget::languageChange()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;54&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFileDialog::done(int)</primary></indexterm>QFileDialog::done(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;55&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFileDialog::accept()</primary></indexterm>QFileDialog::accept()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;56&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::reject()</primary></indexterm>QDialog::reject()</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--classdata-->
<TABLE id="cls-38903-1">
<TITLE>Secondary vtable for QFileDialog</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>-16</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QFileDialog</primary></indexterm>typeinfo for QFileDialog</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QFileDialog::~QFileDialog()</primary></indexterm>non-virtual thunk to QFileDialog::~QFileDialog()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QFileDialog::~QFileDialog()</primary></indexterm>non-virtual thunk to QFileDialog::~QFileDialog()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::devType() const</primary></indexterm>non-virtual thunk to QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::paintEngine() const</primary></indexterm>non-virtual thunk to QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QFileDialog  class
is described by <XREF LINKEND="rtti-38698">
</PARA>
<!--classdata-->
<TABLE ID="rtti-38698">
<TITLE>typeinfo for QFileDialog</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QFileDialog</primary></indexterm>typeinfo name for QFileDialog</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QDialog</primary></indexterm>typeinfo for QDialog</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QAbstractPrintDialog</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QAbstractPrintDialog class
is described by <XREF LINKEND="cls-39024-0">
</PARA>
<!--classdata-->
<TABLE id="cls-39024-0">
<TITLE>Primary vtable for QAbstractPrintDialog</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QAbstractPrintDialog</primary></indexterm>typeinfo for QAbstractPrintDialog</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::metaObject() const</primary></indexterm>QDialog::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::qt_metacast(char const*)</primary></indexterm>QDialog::qt_metacast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::qt_metacall(QMetaObject::Call, int, void**)</primary></indexterm>QDialog::qt_metacall(QMetaObject::Call, int, void**)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractPrintDialog::~QAbstractPrintDialog()</primary></indexterm>QAbstractPrintDialog::~QAbstractPrintDialog()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractPrintDialog::~QAbstractPrintDialog()</primary></indexterm>QAbstractPrintDialog::~QAbstractPrintDialog()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::event(QEvent*)</primary></indexterm>QWidget::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::eventFilter(QObject*, QEvent*)</primary></indexterm>QDialog::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QEvent*)</primary></indexterm>QObject::customEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::devType() const</primary></indexterm>QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::setVisible(bool)</primary></indexterm>QDialog::setVisible(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::sizeHint() const</primary></indexterm>QDialog::sizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::minimumSizeHint() const</primary></indexterm>QDialog::minimumSizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::heightForWidth(int) const</primary></indexterm>QWidget::heightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paintEngine() const</primary></indexterm>QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mousePressEvent(QMouseEvent*)</primary></indexterm>QWidget::mousePressEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseReleaseEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseReleaseEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseDoubleClickEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseDoubleClickEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseMoveEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseMoveEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::wheelEvent(QWheelEvent*)</primary></indexterm>QWidget::wheelEvent(QWheelEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::keyPressEvent(QKeyEvent*)</primary></indexterm>QDialog::keyPressEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyReleaseEvent(QKeyEvent*)</primary></indexterm>QWidget::keyReleaseEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusInEvent(QFocusEvent*)</primary></indexterm>QWidget::focusInEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusOutEvent(QFocusEvent*)</primary></indexterm>QWidget::focusOutEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enterEvent(QEvent*)</primary></indexterm>QWidget::enterEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::leaveEvent(QEvent*)</primary></indexterm>QWidget::leaveEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paintEvent(QPaintEvent*)</primary></indexterm>QWidget::paintEvent(QPaintEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::moveEvent(QMoveEvent*)</primary></indexterm>QWidget::moveEvent(QMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::resizeEvent(QResizeEvent*)</primary></indexterm>QDialog::resizeEvent(QResizeEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::closeEvent(QCloseEvent*)</primary></indexterm>QDialog::closeEvent(QCloseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;33&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::contextMenuEvent(QContextMenuEvent*)</primary></indexterm>QDialog::contextMenuEvent(QContextMenuEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;34&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::tabletEvent(QTabletEvent*)</primary></indexterm>QWidget::tabletEvent(QTabletEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;35&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::actionEvent(QActionEvent*)</primary></indexterm>QWidget::actionEvent(QActionEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;36&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragEnterEvent(QDragEnterEvent*)</primary></indexterm>QWidget::dragEnterEvent(QDragEnterEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;37&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragMoveEvent(QDragMoveEvent*)</primary></indexterm>QWidget::dragMoveEvent(QDragMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;38&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragLeaveEvent(QDragLeaveEvent*)</primary></indexterm>QWidget::dragLeaveEvent(QDragLeaveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;39&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dropEvent(QDropEvent*)</primary></indexterm>QWidget::dropEvent(QDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;40&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::showEvent(QShowEvent*)</primary></indexterm>QDialog::showEvent(QShowEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;41&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::hideEvent(QHideEvent*)</primary></indexterm>QWidget::hideEvent(QHideEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;42&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::x11Event(_XEvent*)</primary></indexterm>QWidget::x11Event(_XEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;43&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::changeEvent(QEvent*)</primary></indexterm>QWidget::changeEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;44&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;45&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::inputMethodEvent(QInputMethodEvent*)</primary></indexterm>QWidget::inputMethodEvent(QInputMethodEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;46&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::inputMethodQuery(Qt::InputMethodQuery) const</primary></indexterm>QWidget::inputMethodQuery(Qt::InputMethodQuery) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;47&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusNextPrevChild(bool)</primary></indexterm>QWidget::focusNextPrevChild(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;48&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::styleChange(QStyle&)</primary></indexterm>QWidget::styleChange(QStyle&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;49&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enabledChange(bool)</primary></indexterm>QWidget::enabledChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;50&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paletteChange(QPalette const&)</primary></indexterm>QWidget::paletteChange(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;51&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::fontChange(QFont const&)</primary></indexterm>QWidget::fontChange(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;52&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::windowActivationChange(bool)</primary></indexterm>QWidget::windowActivationChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;53&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::languageChange()</primary></indexterm>QWidget::languageChange()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;54&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::done(int)</primary></indexterm>QDialog::done(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;55&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::accept()</primary></indexterm>QDialog::accept()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;56&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::reject()</primary></indexterm>QDialog::reject()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;57&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--classdata-->
<TABLE id="cls-39024-1">
<TITLE>Secondary vtable for QAbstractPrintDialog</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>-16</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QAbstractPrintDialog</primary></indexterm>typeinfo for QAbstractPrintDialog</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QAbstractPrintDialog::~QAbstractPrintDialog()</primary></indexterm>non-virtual thunk to QAbstractPrintDialog::~QAbstractPrintDialog()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QAbstractPrintDialog::~QAbstractPrintDialog()</primary></indexterm>non-virtual thunk to QAbstractPrintDialog::~QAbstractPrintDialog()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::devType() const</primary></indexterm>non-virtual thunk to QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::paintEngine() const</primary></indexterm>non-virtual thunk to QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QAbstractPrintDialog  class
is described by <XREF LINKEND="rtti-38819">
</PARA>
<!--classdata-->
<TABLE ID="rtti-38819">
<TITLE>typeinfo for QAbstractPrintDialog</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QAbstractPrintDialog</primary></indexterm>typeinfo name for QAbstractPrintDialog</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QDialog</primary></indexterm>typeinfo for QDialog</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QPrintDialog</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QPrintDialog class
is described by <XREF LINKEND="cls-38948-0">
</PARA>
<!--classdata-->
<TABLE id="cls-38948-0">
<TITLE>Primary vtable for QPrintDialog</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QPrintDialog</primary></indexterm>typeinfo for QPrintDialog</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPrintDialog::metaObject() const</primary></indexterm>QPrintDialog::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPrintDialog::qt_metacast(char const*)</primary></indexterm>QPrintDialog::qt_metacast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPrintDialog::qt_metacall(QMetaObject::Call, int, void**)</primary></indexterm>QPrintDialog::qt_metacall(QMetaObject::Call, int, void**)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPrintDialog::~QPrintDialog()</primary></indexterm>QPrintDialog::~QPrintDialog()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPrintDialog::~QPrintDialog()</primary></indexterm>QPrintDialog::~QPrintDialog()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::event(QEvent*)</primary></indexterm>QWidget::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::eventFilter(QObject*, QEvent*)</primary></indexterm>QDialog::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QEvent*)</primary></indexterm>QObject::customEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::devType() const</primary></indexterm>QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::setVisible(bool)</primary></indexterm>QDialog::setVisible(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::sizeHint() const</primary></indexterm>QDialog::sizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::minimumSizeHint() const</primary></indexterm>QDialog::minimumSizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::heightForWidth(int) const</primary></indexterm>QWidget::heightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paintEngine() const</primary></indexterm>QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mousePressEvent(QMouseEvent*)</primary></indexterm>QWidget::mousePressEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseReleaseEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseReleaseEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseDoubleClickEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseDoubleClickEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseMoveEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseMoveEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::wheelEvent(QWheelEvent*)</primary></indexterm>QWidget::wheelEvent(QWheelEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::keyPressEvent(QKeyEvent*)</primary></indexterm>QDialog::keyPressEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyReleaseEvent(QKeyEvent*)</primary></indexterm>QWidget::keyReleaseEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusInEvent(QFocusEvent*)</primary></indexterm>QWidget::focusInEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusOutEvent(QFocusEvent*)</primary></indexterm>QWidget::focusOutEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enterEvent(QEvent*)</primary></indexterm>QWidget::enterEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::leaveEvent(QEvent*)</primary></indexterm>QWidget::leaveEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paintEvent(QPaintEvent*)</primary></indexterm>QWidget::paintEvent(QPaintEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::moveEvent(QMoveEvent*)</primary></indexterm>QWidget::moveEvent(QMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::resizeEvent(QResizeEvent*)</primary></indexterm>QDialog::resizeEvent(QResizeEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::closeEvent(QCloseEvent*)</primary></indexterm>QDialog::closeEvent(QCloseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;33&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::contextMenuEvent(QContextMenuEvent*)</primary></indexterm>QDialog::contextMenuEvent(QContextMenuEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;34&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::tabletEvent(QTabletEvent*)</primary></indexterm>QWidget::tabletEvent(QTabletEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;35&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::actionEvent(QActionEvent*)</primary></indexterm>QWidget::actionEvent(QActionEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;36&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragEnterEvent(QDragEnterEvent*)</primary></indexterm>QWidget::dragEnterEvent(QDragEnterEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;37&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragMoveEvent(QDragMoveEvent*)</primary></indexterm>QWidget::dragMoveEvent(QDragMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;38&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragLeaveEvent(QDragLeaveEvent*)</primary></indexterm>QWidget::dragLeaveEvent(QDragLeaveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;39&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dropEvent(QDropEvent*)</primary></indexterm>QWidget::dropEvent(QDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;40&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::showEvent(QShowEvent*)</primary></indexterm>QDialog::showEvent(QShowEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;41&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::hideEvent(QHideEvent*)</primary></indexterm>QWidget::hideEvent(QHideEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;42&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::x11Event(_XEvent*)</primary></indexterm>QWidget::x11Event(_XEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;43&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::changeEvent(QEvent*)</primary></indexterm>QWidget::changeEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;44&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;45&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::inputMethodEvent(QInputMethodEvent*)</primary></indexterm>QWidget::inputMethodEvent(QInputMethodEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;46&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::inputMethodQuery(Qt::InputMethodQuery) const</primary></indexterm>QWidget::inputMethodQuery(Qt::InputMethodQuery) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;47&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusNextPrevChild(bool)</primary></indexterm>QWidget::focusNextPrevChild(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;48&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::styleChange(QStyle&)</primary></indexterm>QWidget::styleChange(QStyle&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;49&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enabledChange(bool)</primary></indexterm>QWidget::enabledChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;50&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paletteChange(QPalette const&)</primary></indexterm>QWidget::paletteChange(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;51&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::fontChange(QFont const&)</primary></indexterm>QWidget::fontChange(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;52&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::windowActivationChange(bool)</primary></indexterm>QWidget::windowActivationChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;53&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::languageChange()</primary></indexterm>QWidget::languageChange()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;54&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::done(int)</primary></indexterm>QDialog::done(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;55&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::accept()</primary></indexterm>QDialog::accept()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;56&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::reject()</primary></indexterm>QDialog::reject()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;57&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPrintDialog::exec()</primary></indexterm>QPrintDialog::exec()</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--classdata-->
<TABLE id="cls-38948-1">
<TITLE>Secondary vtable for QPrintDialog</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>-16</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QPrintDialog</primary></indexterm>typeinfo for QPrintDialog</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QPrintDialog::~QPrintDialog()</primary></indexterm>non-virtual thunk to QPrintDialog::~QPrintDialog()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QPrintDialog::~QPrintDialog()</primary></indexterm>non-virtual thunk to QPrintDialog::~QPrintDialog()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::devType() const</primary></indexterm>non-virtual thunk to QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::paintEngine() const</primary></indexterm>non-virtual thunk to QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QPrintDialog  class
is described by <XREF LINKEND="rtti-38743">
</PARA>
<!--classdata-->
<TABLE ID="rtti-38743">
<TITLE>typeinfo for QPrintDialog</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QPrintDialog</primary></indexterm>typeinfo name for QPrintDialog</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QAbstractPrintDialog</primary></indexterm>typeinfo for QAbstractPrintDialog</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QPageSetupDialog</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QPageSetupDialog class
is described by <XREF LINKEND="cls-38996-0">
</PARA>
<!--classdata-->
<TABLE id="cls-38996-0">
<TITLE>Primary vtable for QPageSetupDialog</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QPageSetupDialog</primary></indexterm>typeinfo for QPageSetupDialog</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::metaObject() const</primary></indexterm>QDialog::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::qt_metacast(char const*)</primary></indexterm>QDialog::qt_metacast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::qt_metacall(QMetaObject::Call, int, void**)</primary></indexterm>QDialog::qt_metacall(QMetaObject::Call, int, void**)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPageSetupDialog::~QPageSetupDialog()</primary></indexterm>QPageSetupDialog::~QPageSetupDialog()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPageSetupDialog::~QPageSetupDialog()</primary></indexterm>QPageSetupDialog::~QPageSetupDialog()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::event(QEvent*)</primary></indexterm>QWidget::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::eventFilter(QObject*, QEvent*)</primary></indexterm>QDialog::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QEvent*)</primary></indexterm>QObject::customEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::devType() const</primary></indexterm>QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::setVisible(bool)</primary></indexterm>QDialog::setVisible(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::sizeHint() const</primary></indexterm>QDialog::sizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::minimumSizeHint() const</primary></indexterm>QDialog::minimumSizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::heightForWidth(int) const</primary></indexterm>QWidget::heightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paintEngine() const</primary></indexterm>QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mousePressEvent(QMouseEvent*)</primary></indexterm>QWidget::mousePressEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseReleaseEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseReleaseEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseDoubleClickEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseDoubleClickEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseMoveEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseMoveEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::wheelEvent(QWheelEvent*)</primary></indexterm>QWidget::wheelEvent(QWheelEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::keyPressEvent(QKeyEvent*)</primary></indexterm>QDialog::keyPressEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyReleaseEvent(QKeyEvent*)</primary></indexterm>QWidget::keyReleaseEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusInEvent(QFocusEvent*)</primary></indexterm>QWidget::focusInEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusOutEvent(QFocusEvent*)</primary></indexterm>QWidget::focusOutEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enterEvent(QEvent*)</primary></indexterm>QWidget::enterEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::leaveEvent(QEvent*)</primary></indexterm>QWidget::leaveEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paintEvent(QPaintEvent*)</primary></indexterm>QWidget::paintEvent(QPaintEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::moveEvent(QMoveEvent*)</primary></indexterm>QWidget::moveEvent(QMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::resizeEvent(QResizeEvent*)</primary></indexterm>QDialog::resizeEvent(QResizeEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::closeEvent(QCloseEvent*)</primary></indexterm>QDialog::closeEvent(QCloseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;33&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::contextMenuEvent(QContextMenuEvent*)</primary></indexterm>QDialog::contextMenuEvent(QContextMenuEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;34&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::tabletEvent(QTabletEvent*)</primary></indexterm>QWidget::tabletEvent(QTabletEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;35&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::actionEvent(QActionEvent*)</primary></indexterm>QWidget::actionEvent(QActionEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;36&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragEnterEvent(QDragEnterEvent*)</primary></indexterm>QWidget::dragEnterEvent(QDragEnterEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;37&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragMoveEvent(QDragMoveEvent*)</primary></indexterm>QWidget::dragMoveEvent(QDragMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;38&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragLeaveEvent(QDragLeaveEvent*)</primary></indexterm>QWidget::dragLeaveEvent(QDragLeaveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;39&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dropEvent(QDropEvent*)</primary></indexterm>QWidget::dropEvent(QDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;40&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::showEvent(QShowEvent*)</primary></indexterm>QDialog::showEvent(QShowEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;41&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::hideEvent(QHideEvent*)</primary></indexterm>QWidget::hideEvent(QHideEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;42&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::x11Event(_XEvent*)</primary></indexterm>QWidget::x11Event(_XEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;43&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::changeEvent(QEvent*)</primary></indexterm>QWidget::changeEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;44&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;45&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::inputMethodEvent(QInputMethodEvent*)</primary></indexterm>QWidget::inputMethodEvent(QInputMethodEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;46&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::inputMethodQuery(Qt::InputMethodQuery) const</primary></indexterm>QWidget::inputMethodQuery(Qt::InputMethodQuery) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;47&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusNextPrevChild(bool)</primary></indexterm>QWidget::focusNextPrevChild(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;48&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::styleChange(QStyle&)</primary></indexterm>QWidget::styleChange(QStyle&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;49&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enabledChange(bool)</primary></indexterm>QWidget::enabledChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;50&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paletteChange(QPalette const&)</primary></indexterm>QWidget::paletteChange(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;51&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::fontChange(QFont const&)</primary></indexterm>QWidget::fontChange(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;52&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::windowActivationChange(bool)</primary></indexterm>QWidget::windowActivationChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;53&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::languageChange()</primary></indexterm>QWidget::languageChange()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;54&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::done(int)</primary></indexterm>QDialog::done(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;55&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::accept()</primary></indexterm>QDialog::accept()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;56&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::reject()</primary></indexterm>QDialog::reject()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;57&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPageSetupDialog::exec()</primary></indexterm>QPageSetupDialog::exec()</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--classdata-->
<TABLE id="cls-38996-1">
<TITLE>Secondary vtable for QPageSetupDialog</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>-16</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QPageSetupDialog</primary></indexterm>typeinfo for QPageSetupDialog</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QPageSetupDialog::~QPageSetupDialog()</primary></indexterm>non-virtual thunk to QPageSetupDialog::~QPageSetupDialog()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QPageSetupDialog::~QPageSetupDialog()</primary></indexterm>non-virtual thunk to QPageSetupDialog::~QPageSetupDialog()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::devType() const</primary></indexterm>non-virtual thunk to QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::paintEngine() const</primary></indexterm>non-virtual thunk to QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QPageSetupDialog  class
is described by <XREF LINKEND="rtti-38791">
</PARA>
<!--classdata-->
<TABLE ID="rtti-38791">
<TITLE>typeinfo for QPageSetupDialog</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QPageSetupDialog</primary></indexterm>typeinfo name for QPageSetupDialog</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QAbstractPageSetupDialog</primary></indexterm>typeinfo for QAbstractPageSetupDialog</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QFrame</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QFrame class
is described by <XREF LINKEND="cls-39051-0">
</PARA>
<!--classdata-->
<TABLE id="cls-39051-0">
<TITLE>Primary vtable for QFrame</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QFrame</primary></indexterm>typeinfo for QFrame</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::metaObject() const</primary></indexterm>QFrame::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::qt_metacast(char const*)</primary></indexterm>QFrame::qt_metacast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::qt_metacall(QMetaObject::Call, int, void**)</primary></indexterm>QFrame::qt_metacall(QMetaObject::Call, int, void**)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::~QFrame()</primary></indexterm>QFrame::~QFrame()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::~QFrame()</primary></indexterm>QFrame::~QFrame()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::event(QEvent*)</primary></indexterm>QFrame::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::eventFilter(QObject*, QEvent*)</primary></indexterm>QObject::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QEvent*)</primary></indexterm>QObject::customEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::devType() const</primary></indexterm>QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setVisible(bool)</primary></indexterm>QWidget::setVisible(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::sizeHint() const</primary></indexterm>QFrame::sizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::minimumSizeHint() const</primary></indexterm>QWidget::minimumSizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::heightForWidth(int) const</primary></indexterm>QWidget::heightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paintEngine() const</primary></indexterm>QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mousePressEvent(QMouseEvent*)</primary></indexterm>QWidget::mousePressEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseReleaseEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseReleaseEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseDoubleClickEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseDoubleClickEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseMoveEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseMoveEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::wheelEvent(QWheelEvent*)</primary></indexterm>QWidget::wheelEvent(QWheelEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyPressEvent(QKeyEvent*)</primary></indexterm>QWidget::keyPressEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyReleaseEvent(QKeyEvent*)</primary></indexterm>QWidget::keyReleaseEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusInEvent(QFocusEvent*)</primary></indexterm>QWidget::focusInEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusOutEvent(QFocusEvent*)</primary></indexterm>QWidget::focusOutEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enterEvent(QEvent*)</primary></indexterm>QWidget::enterEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::leaveEvent(QEvent*)</primary></indexterm>QWidget::leaveEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::paintEvent(QPaintEvent*)</primary></indexterm>QFrame::paintEvent(QPaintEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::moveEvent(QMoveEvent*)</primary></indexterm>QWidget::moveEvent(QMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::resizeEvent(QResizeEvent*)</primary></indexterm>QWidget::resizeEvent(QResizeEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::closeEvent(QCloseEvent*)</primary></indexterm>QWidget::closeEvent(QCloseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;33&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::contextMenuEvent(QContextMenuEvent*)</primary></indexterm>QWidget::contextMenuEvent(QContextMenuEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;34&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::tabletEvent(QTabletEvent*)</primary></indexterm>QWidget::tabletEvent(QTabletEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;35&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::actionEvent(QActionEvent*)</primary></indexterm>QWidget::actionEvent(QActionEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;36&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragEnterEvent(QDragEnterEvent*)</primary></indexterm>QWidget::dragEnterEvent(QDragEnterEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;37&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragMoveEvent(QDragMoveEvent*)</primary></indexterm>QWidget::dragMoveEvent(QDragMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;38&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragLeaveEvent(QDragLeaveEvent*)</primary></indexterm>QWidget::dragLeaveEvent(QDragLeaveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;39&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dropEvent(QDropEvent*)</primary></indexterm>QWidget::dropEvent(QDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;40&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showEvent(QShowEvent*)</primary></indexterm>QWidget::showEvent(QShowEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;41&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::hideEvent(QHideEvent*)</primary></indexterm>QWidget::hideEvent(QHideEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;42&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::x11Event(_XEvent*)</primary></indexterm>QWidget::x11Event(_XEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;43&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::changeEvent(QEvent*)</primary></indexterm>QFrame::changeEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;44&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;45&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::inputMethodEvent(QInputMethodEvent*)</primary></indexterm>QWidget::inputMethodEvent(QInputMethodEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;46&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::inputMethodQuery(Qt::InputMethodQuery) const</primary></indexterm>QWidget::inputMethodQuery(Qt::InputMethodQuery) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;47&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusNextPrevChild(bool)</primary></indexterm>QWidget::focusNextPrevChild(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;48&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::styleChange(QStyle&)</primary></indexterm>QWidget::styleChange(QStyle&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;49&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enabledChange(bool)</primary></indexterm>QWidget::enabledChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;50&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paletteChange(QPalette const&)</primary></indexterm>QWidget::paletteChange(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;51&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::fontChange(QFont const&)</primary></indexterm>QWidget::fontChange(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;52&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::windowActivationChange(bool)</primary></indexterm>QWidget::windowActivationChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;53&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::languageChange()</primary></indexterm>QWidget::languageChange()</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--classdata-->
<TABLE id="cls-39051-1">
<TITLE>Secondary vtable for QFrame</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>-16</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QFrame</primary></indexterm>typeinfo for QFrame</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QFrame::~QFrame()</primary></indexterm>non-virtual thunk to QFrame::~QFrame()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QFrame::~QFrame()</primary></indexterm>non-virtual thunk to QFrame::~QFrame()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::devType() const</primary></indexterm>non-virtual thunk to QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::paintEngine() const</primary></indexterm>non-virtual thunk to QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QFrame  class
is described by <XREF LINKEND="rtti-38846">
</PARA>
<!--classdata-->
<TABLE ID="rtti-38846">
<TITLE>typeinfo for QFrame</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QFrame</primary></indexterm>typeinfo name for QFrame</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QWidget</primary></indexterm>typeinfo for QWidget</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QLineEdit</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QLineEdit class
is described by <XREF LINKEND="cls-39079-0">
</PARA>
<!--classdata-->
<TABLE id="cls-39079-0">
<TITLE>Primary vtable for QLineEdit</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QLineEdit</primary></indexterm>typeinfo for QLineEdit</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLineEdit::metaObject() const</primary></indexterm>QLineEdit::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLineEdit::qt_metacast(char const*)</primary></indexterm>QLineEdit::qt_metacast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLineEdit::qt_metacall(QMetaObject::Call, int, void**)</primary></indexterm>QLineEdit::qt_metacall(QMetaObject::Call, int, void**)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLineEdit::~QLineEdit()</primary></indexterm>QLineEdit::~QLineEdit()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLineEdit::~QLineEdit()</primary></indexterm>QLineEdit::~QLineEdit()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLineEdit::event(QEvent*)</primary></indexterm>QLineEdit::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::eventFilter(QObject*, QEvent*)</primary></indexterm>QObject::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QEvent*)</primary></indexterm>QObject::customEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::devType() const</primary></indexterm>QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setVisible(bool)</primary></indexterm>QWidget::setVisible(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLineEdit::sizeHint() const</primary></indexterm>QLineEdit::sizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLineEdit::minimumSizeHint() const</primary></indexterm>QLineEdit::minimumSizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::heightForWidth(int) const</primary></indexterm>QWidget::heightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paintEngine() const</primary></indexterm>QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLineEdit::mousePressEvent(QMouseEvent*)</primary></indexterm>QLineEdit::mousePressEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLineEdit::mouseReleaseEvent(QMouseEvent*)</primary></indexterm>QLineEdit::mouseReleaseEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLineEdit::mouseDoubleClickEvent(QMouseEvent*)</primary></indexterm>QLineEdit::mouseDoubleClickEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLineEdit::mouseMoveEvent(QMouseEvent*)</primary></indexterm>QLineEdit::mouseMoveEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::wheelEvent(QWheelEvent*)</primary></indexterm>QWidget::wheelEvent(QWheelEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLineEdit::keyPressEvent(QKeyEvent*)</primary></indexterm>QLineEdit::keyPressEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyReleaseEvent(QKeyEvent*)</primary></indexterm>QWidget::keyReleaseEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLineEdit::focusInEvent(QFocusEvent*)</primary></indexterm>QLineEdit::focusInEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLineEdit::focusOutEvent(QFocusEvent*)</primary></indexterm>QLineEdit::focusOutEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enterEvent(QEvent*)</primary></indexterm>QWidget::enterEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::leaveEvent(QEvent*)</primary></indexterm>QWidget::leaveEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLineEdit::paintEvent(QPaintEvent*)</primary></indexterm>QLineEdit::paintEvent(QPaintEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::moveEvent(QMoveEvent*)</primary></indexterm>QWidget::moveEvent(QMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::resizeEvent(QResizeEvent*)</primary></indexterm>QWidget::resizeEvent(QResizeEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::closeEvent(QCloseEvent*)</primary></indexterm>QWidget::closeEvent(QCloseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;33&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLineEdit::contextMenuEvent(QContextMenuEvent*)</primary></indexterm>QLineEdit::contextMenuEvent(QContextMenuEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;34&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::tabletEvent(QTabletEvent*)</primary></indexterm>QWidget::tabletEvent(QTabletEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;35&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::actionEvent(QActionEvent*)</primary></indexterm>QWidget::actionEvent(QActionEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;36&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLineEdit::dragEnterEvent(QDragEnterEvent*)</primary></indexterm>QLineEdit::dragEnterEvent(QDragEnterEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;37&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLineEdit::dragMoveEvent(QDragMoveEvent*)</primary></indexterm>QLineEdit::dragMoveEvent(QDragMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;38&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLineEdit::dragLeaveEvent(QDragLeaveEvent*)</primary></indexterm>QLineEdit::dragLeaveEvent(QDragLeaveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;39&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLineEdit::dropEvent(QDropEvent*)</primary></indexterm>QLineEdit::dropEvent(QDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;40&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showEvent(QShowEvent*)</primary></indexterm>QWidget::showEvent(QShowEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;41&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::hideEvent(QHideEvent*)</primary></indexterm>QWidget::hideEvent(QHideEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;42&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::x11Event(_XEvent*)</primary></indexterm>QWidget::x11Event(_XEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;43&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLineEdit::changeEvent(QEvent*)</primary></indexterm>QLineEdit::changeEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;44&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;45&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLineEdit::inputMethodEvent(QInputMethodEvent*)</primary></indexterm>QLineEdit::inputMethodEvent(QInputMethodEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;46&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLineEdit::inputMethodQuery(Qt::InputMethodQuery) const</primary></indexterm>QLineEdit::inputMethodQuery(Qt::InputMethodQuery) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;47&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusNextPrevChild(bool)</primary></indexterm>QWidget::focusNextPrevChild(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;48&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::styleChange(QStyle&)</primary></indexterm>QWidget::styleChange(QStyle&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;49&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enabledChange(bool)</primary></indexterm>QWidget::enabledChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;50&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paletteChange(QPalette const&)</primary></indexterm>QWidget::paletteChange(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;51&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::fontChange(QFont const&)</primary></indexterm>QWidget::fontChange(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;52&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::windowActivationChange(bool)</primary></indexterm>QWidget::windowActivationChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;53&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::languageChange()</primary></indexterm>QWidget::languageChange()</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--classdata-->
<TABLE id="cls-39079-1">
<TITLE>Secondary vtable for QLineEdit</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>-16</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QLineEdit</primary></indexterm>typeinfo for QLineEdit</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QLineEdit::~QLineEdit()</primary></indexterm>non-virtual thunk to QLineEdit::~QLineEdit()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QLineEdit::~QLineEdit()</primary></indexterm>non-virtual thunk to QLineEdit::~QLineEdit()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::devType() const</primary></indexterm>non-virtual thunk to QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::paintEngine() const</primary></indexterm>non-virtual thunk to QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QLineEdit  class
is described by <XREF LINKEND="rtti-38874">
</PARA>
<!--classdata-->
<TABLE ID="rtti-38874">
<TITLE>typeinfo for QLineEdit</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QLineEdit</primary></indexterm>typeinfo name for QLineEdit</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QWidget</primary></indexterm>typeinfo for QWidget</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QInputDialog</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QInputDialog class
is described by <XREF LINKEND="cls-38945-0">
</PARA>
<!--classdata-->
<TABLE id="cls-38945-0">
<TITLE>Primary vtable for QInputDialog</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QInputDialog</primary></indexterm>typeinfo for QInputDialog</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QInputDialog::metaObject() const</primary></indexterm>QInputDialog::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QInputDialog::qt_metacast(char const*)</primary></indexterm>QInputDialog::qt_metacast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QInputDialog::qt_metacall(QMetaObject::Call, int, void**)</primary></indexterm>QInputDialog::qt_metacall(QMetaObject::Call, int, void**)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QInputDialog::~QInputDialog()</primary></indexterm>QInputDialog::~QInputDialog()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QInputDialog::~QInputDialog()</primary></indexterm>QInputDialog::~QInputDialog()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::event(QEvent*)</primary></indexterm>QWidget::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::eventFilter(QObject*, QEvent*)</primary></indexterm>QDialog::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QEvent*)</primary></indexterm>QObject::customEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::devType() const</primary></indexterm>QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::setVisible(bool)</primary></indexterm>QDialog::setVisible(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::sizeHint() const</primary></indexterm>QDialog::sizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::minimumSizeHint() const</primary></indexterm>QDialog::minimumSizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::heightForWidth(int) const</primary></indexterm>QWidget::heightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paintEngine() const</primary></indexterm>QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mousePressEvent(QMouseEvent*)</primary></indexterm>QWidget::mousePressEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseReleaseEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseReleaseEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseDoubleClickEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseDoubleClickEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseMoveEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseMoveEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::wheelEvent(QWheelEvent*)</primary></indexterm>QWidget::wheelEvent(QWheelEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::keyPressEvent(QKeyEvent*)</primary></indexterm>QDialog::keyPressEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyReleaseEvent(QKeyEvent*)</primary></indexterm>QWidget::keyReleaseEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusInEvent(QFocusEvent*)</primary></indexterm>QWidget::focusInEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusOutEvent(QFocusEvent*)</primary></indexterm>QWidget::focusOutEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enterEvent(QEvent*)</primary></indexterm>QWidget::enterEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::leaveEvent(QEvent*)</primary></indexterm>QWidget::leaveEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paintEvent(QPaintEvent*)</primary></indexterm>QWidget::paintEvent(QPaintEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::moveEvent(QMoveEvent*)</primary></indexterm>QWidget::moveEvent(QMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::resizeEvent(QResizeEvent*)</primary></indexterm>QDialog::resizeEvent(QResizeEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::closeEvent(QCloseEvent*)</primary></indexterm>QDialog::closeEvent(QCloseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;33&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::contextMenuEvent(QContextMenuEvent*)</primary></indexterm>QDialog::contextMenuEvent(QContextMenuEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;34&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::tabletEvent(QTabletEvent*)</primary></indexterm>QWidget::tabletEvent(QTabletEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;35&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::actionEvent(QActionEvent*)</primary></indexterm>QWidget::actionEvent(QActionEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;36&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragEnterEvent(QDragEnterEvent*)</primary></indexterm>QWidget::dragEnterEvent(QDragEnterEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;37&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragMoveEvent(QDragMoveEvent*)</primary></indexterm>QWidget::dragMoveEvent(QDragMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;38&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragLeaveEvent(QDragLeaveEvent*)</primary></indexterm>QWidget::dragLeaveEvent(QDragLeaveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;39&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dropEvent(QDropEvent*)</primary></indexterm>QWidget::dropEvent(QDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;40&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::showEvent(QShowEvent*)</primary></indexterm>QDialog::showEvent(QShowEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;41&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::hideEvent(QHideEvent*)</primary></indexterm>QWidget::hideEvent(QHideEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;42&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::x11Event(_XEvent*)</primary></indexterm>QWidget::x11Event(_XEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;43&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::changeEvent(QEvent*)</primary></indexterm>QWidget::changeEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;44&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;45&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::inputMethodEvent(QInputMethodEvent*)</primary></indexterm>QWidget::inputMethodEvent(QInputMethodEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;46&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::inputMethodQuery(Qt::InputMethodQuery) const</primary></indexterm>QWidget::inputMethodQuery(Qt::InputMethodQuery) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;47&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusNextPrevChild(bool)</primary></indexterm>QWidget::focusNextPrevChild(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;48&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::styleChange(QStyle&)</primary></indexterm>QWidget::styleChange(QStyle&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;49&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enabledChange(bool)</primary></indexterm>QWidget::enabledChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;50&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paletteChange(QPalette const&)</primary></indexterm>QWidget::paletteChange(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;51&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::fontChange(QFont const&)</primary></indexterm>QWidget::fontChange(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;52&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::windowActivationChange(bool)</primary></indexterm>QWidget::windowActivationChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;53&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::languageChange()</primary></indexterm>QWidget::languageChange()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;54&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::done(int)</primary></indexterm>QDialog::done(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;55&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::accept()</primary></indexterm>QDialog::accept()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;56&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::reject()</primary></indexterm>QDialog::reject()</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--classdata-->
<TABLE id="cls-38945-1">
<TITLE>Secondary vtable for QInputDialog</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>-16</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QInputDialog</primary></indexterm>typeinfo for QInputDialog</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QInputDialog::~QInputDialog()</primary></indexterm>non-virtual thunk to QInputDialog::~QInputDialog()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QInputDialog::~QInputDialog()</primary></indexterm>non-virtual thunk to QInputDialog::~QInputDialog()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::devType() const</primary></indexterm>non-virtual thunk to QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::paintEngine() const</primary></indexterm>non-virtual thunk to QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QInputDialog  class
is described by <XREF LINKEND="rtti-38740">
</PARA>
<!--classdata-->
<TABLE ID="rtti-38740">
<TITLE>typeinfo for QInputDialog</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QInputDialog</primary></indexterm>typeinfo name for QInputDialog</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QDialog</primary></indexterm>typeinfo for QDialog</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QImage</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QImage class
is described by <XREF LINKEND="cls-39052-0">
</PARA>
<!--classdata-->
<TABLE id="cls-39052-0">
<TITLE>Primary vtable for QImage</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QImage</primary></indexterm>typeinfo for QImage</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QImage::~QImage()</primary></indexterm>QImage::~QImage()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QImage::~QImage()</primary></indexterm>QImage::~QImage()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QImage::devType() const</primary></indexterm>QImage::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QImage::paintEngine() const</primary></indexterm>QImage::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QImage::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>QImage::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QImage  class
is described by <XREF LINKEND="rtti-38847">
</PARA>
<!--classdata-->
<TABLE ID="rtti-38847">
<TITLE>typeinfo for QImage</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QImage</primary></indexterm>typeinfo name for QImage</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QPaintDevice</primary></indexterm>typeinfo for QPaintDevice</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QPixmap</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QPixmap class
is described by <XREF LINKEND="cls-39061-0">
</PARA>
<!--classdata-->
<TABLE id="cls-39061-0">
<TITLE>Primary vtable for QPixmap</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QPixmap</primary></indexterm>typeinfo for QPixmap</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPixmap::~QPixmap()</primary></indexterm>QPixmap::~QPixmap()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPixmap::~QPixmap()</primary></indexterm>QPixmap::~QPixmap()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPixmap::devType() const</primary></indexterm>QPixmap::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPixmap::paintEngine() const</primary></indexterm>QPixmap::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPixmap::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>QPixmap::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QPixmap  class
is described by <XREF LINKEND="rtti-38856">
</PARA>
<!--classdata-->
<TABLE ID="rtti-38856">
<TITLE>typeinfo for QPixmap</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QPixmap</primary></indexterm>typeinfo name for QPixmap</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QPaintDevice</primary></indexterm>typeinfo for QPaintDevice</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QImageIOHandler</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QImageIOHandler class
is described by <XREF LINKEND="cls-38983-0">
</PARA>
<!--classdata-->
<TABLE id="cls-38983-0">
<TITLE>Primary vtable for QImageIOHandler</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QImageIOHandler</primary></indexterm>typeinfo for QImageIOHandler</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QImageIOHandler::~QImageIOHandler()</primary></indexterm>QImageIOHandler::~QImageIOHandler()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QImageIOHandler::~QImageIOHandler()</primary></indexterm>QImageIOHandler::~QImageIOHandler()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QImageIOHandler::name() const</primary></indexterm>QImageIOHandler::name() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QImageIOHandler::write(QImage const&)</primary></indexterm>QImageIOHandler::write(QImage const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QImageIOHandler::option(QImageIOHandler::ImageOption) const</primary></indexterm>QImageIOHandler::option(QImageIOHandler::ImageOption) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QImageIOHandler::setOption(QImageIOHandler::ImageOption, QVariant const&)</primary></indexterm>QImageIOHandler::setOption(QImageIOHandler::ImageOption, QVariant const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QImageIOHandler::supportsOption(QImageIOHandler::ImageOption) const</primary></indexterm>QImageIOHandler::supportsOption(QImageIOHandler::ImageOption) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QImageIOHandler::jumpToNextImage()</primary></indexterm>QImageIOHandler::jumpToNextImage()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QImageIOHandler::jumpToImage(int)</primary></indexterm>QImageIOHandler::jumpToImage(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QImageIOHandler::loopCount() const</primary></indexterm>QImageIOHandler::loopCount() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QImageIOHandler::imageCount() const</primary></indexterm>QImageIOHandler::imageCount() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QImageIOHandler::nextImageDelay() const</primary></indexterm>QImageIOHandler::nextImageDelay() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QImageIOHandler::currentImageNumber() const</primary></indexterm>QImageIOHandler::currentImageNumber() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QImageIOHandler::currentImageRect() const</primary></indexterm>QImageIOHandler::currentImageRect() const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QImageIOHandler  class
is described by <XREF LINKEND="rtti-38778">
</PARA>
<!--classdata-->
<TABLE ID="rtti-38778">
<TITLE>typeinfo for QImageIOHandler</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__class_type_info</primary></indexterm>vtable for __cxxabiv1::__class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QImageIOHandler</primary></indexterm>typeinfo name for QImageIOHandler</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QImageIOHandlerFactoryInterface</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QImageIOHandlerFactoryInterface class
is described by <XREF LINKEND="cls-39046-0">
</PARA>
<!--classdata-->
<TABLE id="cls-39046-0">
<TITLE>Primary vtable for QImageIOHandlerFactoryInterface</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QImageIOHandlerFactoryInterface</primary></indexterm>typeinfo for QImageIOHandlerFactoryInterface</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QImageIOHandlerFactoryInterface::~QImageIOHandlerFactoryInterface()</primary></indexterm>QImageIOHandlerFactoryInterface::~QImageIOHandlerFactoryInterface()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QImageIOHandlerFactoryInterface::~QImageIOHandlerFactoryInterface()</primary></indexterm>QImageIOHandlerFactoryInterface::~QImageIOHandlerFactoryInterface()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QImageIOHandlerFactoryInterface  class
is described by <XREF LINKEND="rtti-38841">
</PARA>
<!--classdata-->
<TABLE ID="rtti-38841">
<TITLE>typeinfo for QImageIOHandlerFactoryInterface</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QImageIOHandlerFactoryInterface</primary></indexterm>typeinfo name for QImageIOHandlerFactoryInterface</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QFactoryInterface</primary></indexterm>typeinfo for QFactoryInterface</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QImageIOPlugin</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QImageIOPlugin class
is described by <XREF LINKEND="cls-38972-0">
</PARA>
<!--classdata-->
<TABLE id="cls-38972-0">
<TITLE>Primary vtable for QImageIOPlugin</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QImageIOPlugin</primary></indexterm>typeinfo for QImageIOPlugin</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QImageIOPlugin::metaObject() const</primary></indexterm>QImageIOPlugin::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QImageIOPlugin::qt_metacast(char const*)</primary></indexterm>QImageIOPlugin::qt_metacast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QImageIOPlugin::qt_metacall(QMetaObject::Call, int, void**)</primary></indexterm>QImageIOPlugin::qt_metacall(QMetaObject::Call, int, void**)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QImageIOPlugin::~QImageIOPlugin()</primary></indexterm>QImageIOPlugin::~QImageIOPlugin()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QImageIOPlugin::~QImageIOPlugin()</primary></indexterm>QImageIOPlugin::~QImageIOPlugin()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::event(QEvent*)</primary></indexterm>QObject::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::eventFilter(QObject*, QEvent*)</primary></indexterm>QObject::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QEvent*)</primary></indexterm>QObject::customEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--classdata-->
<TABLE id="cls-38972-1">
<TITLE>Secondary vtable for QImageIOPlugin</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>-16</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QImageIOPlugin</primary></indexterm>typeinfo for QImageIOPlugin</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QImageIOPlugin::~QImageIOPlugin()</primary></indexterm>non-virtual thunk to QImageIOPlugin::~QImageIOPlugin()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QImageIOPlugin::~QImageIOPlugin()</primary></indexterm>non-virtual thunk to QImageIOPlugin::~QImageIOPlugin()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QImageIOPlugin  class
is described by <XREF LINKEND="rtti-38767">
</PARA>
<!--classdata-->
<TABLE ID="rtti-38767">
<TITLE>typeinfo for QImageIOPlugin</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__vmi_class_type_info</primary></indexterm>vtable for __cxxabiv1::__vmi_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QImageIOPlugin</primary></indexterm>typeinfo name for QImageIOPlugin</ENTRY>
</ROW>
<ROW>
<ENTRY>flags:</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QObject</primary></indexterm>typeinfo for QObject</ENTRY>
<ENTRY>2</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QImageIOHandlerFactoryInterface</primary></indexterm>typeinfo for QImageIOHandlerFactoryInterface</ENTRY>
<ENTRY>2050</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QPicture</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QPicture class
is described by <XREF LINKEND="cls-39066-0">
</PARA>
<!--classdata-->
<TABLE id="cls-39066-0">
<TITLE>Primary vtable for QPicture</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QPicture</primary></indexterm>typeinfo for QPicture</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPicture::~QPicture()</primary></indexterm>QPicture::~QPicture()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPicture::~QPicture()</primary></indexterm>QPicture::~QPicture()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPicture::devType() const</primary></indexterm>QPicture::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPicture::paintEngine() const</primary></indexterm>QPicture::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPicture::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>QPicture::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPicture::setData(char const*, unsigned int)</primary></indexterm>QPicture::setData(char const*, unsigned int)</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QPicture  class
is described by <XREF LINKEND="rtti-38861">
</PARA>
<!--classdata-->
<TABLE ID="rtti-38861">
<TITLE>typeinfo for QPicture</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QPicture</primary></indexterm>typeinfo name for QPicture</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QPaintDevice</primary></indexterm>typeinfo for QPaintDevice</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QMovie</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QMovie class
is described by <XREF LINKEND="cls-39054-0">
</PARA>
<!--classdata-->
<TABLE id="cls-39054-0">
<TITLE>Primary vtable for QMovie</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QMovie</primary></indexterm>typeinfo for QMovie</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMovie::metaObject() const</primary></indexterm>QMovie::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMovie::qt_metacast(char const*)</primary></indexterm>QMovie::qt_metacast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMovie::qt_metacall(QMetaObject::Call, int, void**)</primary></indexterm>QMovie::qt_metacall(QMetaObject::Call, int, void**)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMovie::~QMovie()</primary></indexterm>QMovie::~QMovie()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMovie::~QMovie()</primary></indexterm>QMovie::~QMovie()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::event(QEvent*)</primary></indexterm>QObject::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::eventFilter(QObject*, QEvent*)</primary></indexterm>QObject::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QEvent*)</primary></indexterm>QObject::customEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QMovie  class
is described by <XREF LINKEND="rtti-38849">
</PARA>
<!--classdata-->
<TABLE ID="rtti-38849">
<TITLE>typeinfo for QMovie</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QMovie</primary></indexterm>typeinfo name for QMovie</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QObject</primary></indexterm>typeinfo for QObject</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QIconEngineFactoryInterface</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QIconEngineFactoryInterface class
is described by <XREF LINKEND="cls-39044-0">
</PARA>
<!--classdata-->
<TABLE id="cls-39044-0">
<TITLE>Primary vtable for QIconEngineFactoryInterface</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QIconEngineFactoryInterface</primary></indexterm>typeinfo for QIconEngineFactoryInterface</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QIconEngineFactoryInterface::~QIconEngineFactoryInterface()</primary></indexterm>QIconEngineFactoryInterface::~QIconEngineFactoryInterface()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QIconEngineFactoryInterface::~QIconEngineFactoryInterface()</primary></indexterm>QIconEngineFactoryInterface::~QIconEngineFactoryInterface()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QIconEngineFactoryInterface  class
is described by <XREF LINKEND="rtti-38839">
</PARA>
<!--classdata-->
<TABLE ID="rtti-38839">
<TITLE>typeinfo for QIconEngineFactoryInterface</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QIconEngineFactoryInterface</primary></indexterm>typeinfo name for QIconEngineFactoryInterface</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QFactoryInterface</primary></indexterm>typeinfo for QFactoryInterface</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QIconEnginePlugin</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QIconEnginePlugin class
is described by <XREF LINKEND="cls-39007-0">
</PARA>
<!--classdata-->
<TABLE id="cls-39007-0">
<TITLE>Primary vtable for QIconEnginePlugin</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QIconEnginePlugin</primary></indexterm>typeinfo for QIconEnginePlugin</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QIconEnginePlugin::metaObject() const</primary></indexterm>QIconEnginePlugin::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QIconEnginePlugin::qt_metacast(char const*)</primary></indexterm>QIconEnginePlugin::qt_metacast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QIconEnginePlugin::qt_metacall(QMetaObject::Call, int, void**)</primary></indexterm>QIconEnginePlugin::qt_metacall(QMetaObject::Call, int, void**)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QIconEnginePlugin::~QIconEnginePlugin()</primary></indexterm>QIconEnginePlugin::~QIconEnginePlugin()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QIconEnginePlugin::~QIconEnginePlugin()</primary></indexterm>QIconEnginePlugin::~QIconEnginePlugin()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::event(QEvent*)</primary></indexterm>QObject::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::eventFilter(QObject*, QEvent*)</primary></indexterm>QObject::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QEvent*)</primary></indexterm>QObject::customEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--classdata-->
<TABLE id="cls-39007-1">
<TITLE>Secondary vtable for QIconEnginePlugin</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>-16</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QIconEnginePlugin</primary></indexterm>typeinfo for QIconEnginePlugin</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QIconEnginePlugin::~QIconEnginePlugin()</primary></indexterm>non-virtual thunk to QIconEnginePlugin::~QIconEnginePlugin()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QIconEnginePlugin::~QIconEnginePlugin()</primary></indexterm>non-virtual thunk to QIconEnginePlugin::~QIconEnginePlugin()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QIconEnginePlugin  class
is described by <XREF LINKEND="rtti-38802">
</PARA>
<!--classdata-->
<TABLE ID="rtti-38802">
<TITLE>typeinfo for QIconEnginePlugin</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__vmi_class_type_info</primary></indexterm>vtable for __cxxabiv1::__vmi_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QIconEnginePlugin</primary></indexterm>typeinfo name for QIconEnginePlugin</ENTRY>
</ROW>
<ROW>
<ENTRY>flags:</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QObject</primary></indexterm>typeinfo for QObject</ENTRY>
<ENTRY>2</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QIconEngineFactoryInterface</primary></indexterm>typeinfo for QIconEngineFactoryInterface</ENTRY>
<ENTRY>2050</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QIconEngine</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QIconEngine class
is described by <XREF LINKEND="cls-38911-0">
</PARA>
<!--classdata-->
<TABLE id="cls-38911-0">
<TITLE>Primary vtable for QIconEngine</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QIconEngine</primary></indexterm>typeinfo for QIconEngine</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QIconEngine::~QIconEngine()</primary></indexterm>QIconEngine::~QIconEngine()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QIconEngine::~QIconEngine()</primary></indexterm>QIconEngine::~QIconEngine()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QIconEngine::actualSize(QSize const&, QIcon::Mode, QIcon::State)</primary></indexterm>QIconEngine::actualSize(QSize const&, QIcon::Mode, QIcon::State)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QIconEngine::pixmap(QSize const&, QIcon::Mode, QIcon::State)</primary></indexterm>QIconEngine::pixmap(QSize const&, QIcon::Mode, QIcon::State)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QIconEngine::addPixmap(QPixmap const&, QIcon::Mode, QIcon::State)</primary></indexterm>QIconEngine::addPixmap(QPixmap const&, QIcon::Mode, QIcon::State)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QIconEngine::addFile(QString const&, QSize const&, QIcon::Mode, QIcon::State)</primary></indexterm>QIconEngine::addFile(QString const&, QSize const&, QIcon::Mode, QIcon::State)</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QIconEngine  class
is described by <XREF LINKEND="rtti-38706">
</PARA>
<!--classdata-->
<TABLE ID="rtti-38706">
<TITLE>typeinfo for QIconEngine</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__class_type_info</primary></indexterm>vtable for __cxxabiv1::__class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QIconEngine</primary></indexterm>typeinfo name for QIconEngine</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QBitmap</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QBitmap class
is described by <XREF LINKEND="cls-39058-0">
</PARA>
<!--classdata-->
<TABLE id="cls-39058-0">
<TITLE>Primary vtable for QBitmap</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QBitmap</primary></indexterm>typeinfo for QBitmap</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QBitmap::~QBitmap()</primary></indexterm>QBitmap::~QBitmap()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QBitmap::~QBitmap()</primary></indexterm>QBitmap::~QBitmap()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPixmap::devType() const</primary></indexterm>QPixmap::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPixmap::paintEngine() const</primary></indexterm>QPixmap::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPixmap::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>QPixmap::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QBitmap  class
is described by <XREF LINKEND="rtti-38853">
</PARA>
<!--classdata-->
<TABLE ID="rtti-38853">
<TITLE>typeinfo for QBitmap</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QBitmap</primary></indexterm>typeinfo name for QBitmap</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QPixmap</primary></indexterm>typeinfo for QPixmap</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QPictureFormatInterface</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QPictureFormatInterface class
is described by <XREF LINKEND="cls-39037-0">
</PARA>
<!--classdata-->
<TABLE id="cls-39037-0">
<TITLE>Primary vtable for QPictureFormatInterface</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QPictureFormatInterface</primary></indexterm>typeinfo for QPictureFormatInterface</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPictureFormatInterface::~QPictureFormatInterface()</primary></indexterm>QPictureFormatInterface::~QPictureFormatInterface()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPictureFormatInterface::~QPictureFormatInterface()</primary></indexterm>QPictureFormatInterface::~QPictureFormatInterface()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QPictureFormatInterface  class
is described by <XREF LINKEND="rtti-38832">
</PARA>
<!--classdata-->
<TABLE ID="rtti-38832">
<TITLE>typeinfo for QPictureFormatInterface</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QPictureFormatInterface</primary></indexterm>typeinfo name for QPictureFormatInterface</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QFactoryInterface</primary></indexterm>typeinfo for QFactoryInterface</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QPictureFormatPlugin</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QPictureFormatPlugin class
is described by <XREF LINKEND="cls-39027-0">
</PARA>
<!--classdata-->
<TABLE id="cls-39027-0">
<TITLE>Primary vtable for QPictureFormatPlugin</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QPictureFormatPlugin</primary></indexterm>typeinfo for QPictureFormatPlugin</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPictureFormatPlugin::metaObject() const</primary></indexterm>QPictureFormatPlugin::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPictureFormatPlugin::qt_metacast(char const*)</primary></indexterm>QPictureFormatPlugin::qt_metacast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPictureFormatPlugin::qt_metacall(QMetaObject::Call, int, void**)</primary></indexterm>QPictureFormatPlugin::qt_metacall(QMetaObject::Call, int, void**)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPictureFormatPlugin::~QPictureFormatPlugin()</primary></indexterm>QPictureFormatPlugin::~QPictureFormatPlugin()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPictureFormatPlugin::~QPictureFormatPlugin()</primary></indexterm>QPictureFormatPlugin::~QPictureFormatPlugin()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::event(QEvent*)</primary></indexterm>QObject::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::eventFilter(QObject*, QEvent*)</primary></indexterm>QObject::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QEvent*)</primary></indexterm>QObject::customEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPictureFormatPlugin::loadPicture(QString const&, QString const&, QPicture*)</primary></indexterm>QPictureFormatPlugin::loadPicture(QString const&, QString const&, QPicture*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPictureFormatPlugin::savePicture(QString const&, QString const&, QPicture const&)</primary></indexterm>QPictureFormatPlugin::savePicture(QString const&, QString const&, QPicture const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--classdata-->
<TABLE id="cls-39027-1">
<TITLE>Secondary vtable for QPictureFormatPlugin</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>-16</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QPictureFormatPlugin</primary></indexterm>typeinfo for QPictureFormatPlugin</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QPictureFormatPlugin::~QPictureFormatPlugin()</primary></indexterm>non-virtual thunk to QPictureFormatPlugin::~QPictureFormatPlugin()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QPictureFormatPlugin::~QPictureFormatPlugin()</primary></indexterm>non-virtual thunk to QPictureFormatPlugin::~QPictureFormatPlugin()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QPictureFormatPlugin::loadPicture(QString const&, QString const&, QPicture*)</primary></indexterm>non-virtual thunk to QPictureFormatPlugin::loadPicture(QString const&, QString const&, QPicture*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QPictureFormatPlugin::savePicture(QString const&, QString const&, QPicture const&)</primary></indexterm>non-virtual thunk to QPictureFormatPlugin::savePicture(QString const&, QString const&, QPicture const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QPictureFormatPlugin  class
is described by <XREF LINKEND="rtti-38822">
</PARA>
<!--classdata-->
<TABLE ID="rtti-38822">
<TITLE>typeinfo for QPictureFormatPlugin</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__vmi_class_type_info</primary></indexterm>vtable for __cxxabiv1::__vmi_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QPictureFormatPlugin</primary></indexterm>typeinfo name for QPictureFormatPlugin</ENTRY>
</ROW>
<ROW>
<ENTRY>flags:</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QObject</primary></indexterm>typeinfo for QObject</ENTRY>
<ENTRY>2</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QPictureFormatInterface</primary></indexterm>typeinfo for QPictureFormatInterface</ENTRY>
<ENTRY>2050</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QPrinter</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QPrinter class
is described by <XREF LINKEND="cls-39067-0">
</PARA>
<!--classdata-->
<TABLE id="cls-39067-0">
<TITLE>Primary vtable for QPrinter</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QPrinter</primary></indexterm>typeinfo for QPrinter</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPrinter::~QPrinter()</primary></indexterm>QPrinter::~QPrinter()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPrinter::~QPrinter()</primary></indexterm>QPrinter::~QPrinter()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPrinter::devType() const</primary></indexterm>QPrinter::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPrinter::paintEngine() const</primary></indexterm>QPrinter::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPrinter::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>QPrinter::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QPrinter  class
is described by <XREF LINKEND="rtti-38862">
</PARA>
<!--classdata-->
<TABLE ID="rtti-38862">
<TITLE>typeinfo for QPrinter</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QPrinter</primary></indexterm>typeinfo name for QPrinter</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QPaintDevice</primary></indexterm>typeinfo for QPaintDevice</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QPrintEngine</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QPrintEngine class
is described by <XREF LINKEND="cls-38949-0">
</PARA>
<!--classdata-->
<TABLE id="cls-38949-0">
<TITLE>Primary vtable for QPrintEngine</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QPrintEngine</primary></indexterm>typeinfo for QPrintEngine</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPrintEngine::~QPrintEngine()</primary></indexterm>QPrintEngine::~QPrintEngine()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPrintEngine::~QPrintEngine()</primary></indexterm>QPrintEngine::~QPrintEngine()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QPrintEngine  class
is described by <XREF LINKEND="rtti-38744">
</PARA>
<!--classdata-->
<TABLE ID="rtti-38744">
<TITLE>typeinfo for QPrintEngine</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__class_type_info</primary></indexterm>vtable for __cxxabiv1::__class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QPrintEngine</primary></indexterm>typeinfo name for QPrintEngine</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QStyle</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QStyle class
is described by <XREF LINKEND="cls-39056-0">
</PARA>
<!--classdata-->
<TABLE id="cls-39056-0">
<TITLE>Primary vtable for QStyle</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QStyle</primary></indexterm>typeinfo for QStyle</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStyle::metaObject() const</primary></indexterm>QStyle::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStyle::qt_metacast(char const*)</primary></indexterm>QStyle::qt_metacast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStyle::qt_metacall(QMetaObject::Call, int, void**)</primary></indexterm>QStyle::qt_metacall(QMetaObject::Call, int, void**)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStyle::~QStyle()</primary></indexterm>QStyle::~QStyle()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStyle::~QStyle()</primary></indexterm>QStyle::~QStyle()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::event(QEvent*)</primary></indexterm>QObject::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::eventFilter(QObject*, QEvent*)</primary></indexterm>QObject::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QEvent*)</primary></indexterm>QObject::customEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStyle::polish(QWidget*)</primary></indexterm>QStyle::polish(QWidget*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStyle::unpolish(QWidget*)</primary></indexterm>QStyle::unpolish(QWidget*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStyle::polish(QApplication*)</primary></indexterm>QStyle::polish(QApplication*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStyle::unpolish(QApplication*)</primary></indexterm>QStyle::unpolish(QApplication*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStyle::polish(QPalette&)</primary></indexterm>QStyle::polish(QPalette&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStyle::itemTextRect(QFontMetrics const&, QRect const&, int, bool, QString const&) const</primary></indexterm>QStyle::itemTextRect(QFontMetrics const&, QRect const&, int, bool, QString const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStyle::itemPixmapRect(QRect const&, int, QPixmap const&) const</primary></indexterm>QStyle::itemPixmapRect(QRect const&, int, QPixmap const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStyle::drawItemText(QPainter*, QRect const&, int, QPalette const&, bool, QString const&, QPalette::ColorRole) const</primary></indexterm>QStyle::drawItemText(QPainter*, QRect const&, int, QPalette const&, bool, QString const&, QPalette::ColorRole) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStyle::drawItemPixmap(QPainter*, QRect const&, int, QPixmap const&) const</primary></indexterm>QStyle::drawItemPixmap(QPainter*, QRect const&, int, QPixmap const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStyle::standardPalette() const</primary></indexterm>QStyle::standardPalette() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QStyle  class
is described by <XREF LINKEND="rtti-38851">
</PARA>
<!--classdata-->
<TABLE ID="rtti-38851">
<TITLE>typeinfo for QStyle</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QStyle</primary></indexterm>typeinfo name for QStyle</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QObject</primary></indexterm>typeinfo for QObject</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QPaintEngine</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QPaintEngine class
is described by <XREF LINKEND="cls-38947-0">
</PARA>
<!--classdata-->
<TABLE id="cls-38947-0">
<TITLE>Primary vtable for QPaintEngine</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QPaintEngine</primary></indexterm>typeinfo for QPaintEngine</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintEngine::~QPaintEngine()</primary></indexterm>QPaintEngine::~QPaintEngine()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintEngine::~QPaintEngine()</primary></indexterm>QPaintEngine::~QPaintEngine()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintEngine::drawRects(QRect const*, int)</primary></indexterm>QPaintEngine::drawRects(QRect const*, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintEngine::drawRects(QRectF const*, int)</primary></indexterm>QPaintEngine::drawRects(QRectF const*, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintEngine::drawLines(QLine const*, int)</primary></indexterm>QPaintEngine::drawLines(QLine const*, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintEngine::drawLines(QLineF const*, int)</primary></indexterm>QPaintEngine::drawLines(QLineF const*, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintEngine::drawEllipse(QRectF const&)</primary></indexterm>QPaintEngine::drawEllipse(QRectF const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintEngine::drawEllipse(QRect const&)</primary></indexterm>QPaintEngine::drawEllipse(QRect const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintEngine::drawPath(QPainterPath const&)</primary></indexterm>QPaintEngine::drawPath(QPainterPath const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintEngine::drawPoints(QPointF const*, int)</primary></indexterm>QPaintEngine::drawPoints(QPointF const*, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintEngine::drawPoints(QPoint const*, int)</primary></indexterm>QPaintEngine::drawPoints(QPoint const*, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintEngine::drawPolygon(QPointF const*, int, QPaintEngine::PolygonDrawMode)</primary></indexterm>QPaintEngine::drawPolygon(QPointF const*, int, QPaintEngine::PolygonDrawMode)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintEngine::drawPolygon(QPoint const*, int, QPaintEngine::PolygonDrawMode)</primary></indexterm>QPaintEngine::drawPolygon(QPoint const*, int, QPaintEngine::PolygonDrawMode)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintEngine::drawTextItem(QPointF const&, QTextItem const&)</primary></indexterm>QPaintEngine::drawTextItem(QPointF const&, QTextItem const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintEngine::drawTiledPixmap(QRectF const&, QPixmap const&, QPointF const&)</primary></indexterm>QPaintEngine::drawTiledPixmap(QRectF const&, QPixmap const&, QPointF const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintEngine::drawImage(QRectF const&, QImage const&, QRectF const&, QFlags&lt;Qt::ImageConversionFlag&gt;)</primary></indexterm>QPaintEngine::drawImage(QRectF const&, QImage const&, QRectF const&, QFlags&lt;Qt::ImageConversionFlag&gt;)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintEngine::coordinateOffset() const</primary></indexterm>QPaintEngine::coordinateOffset() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QPaintEngine  class
is described by <XREF LINKEND="rtti-38742">
</PARA>
<!--classdata-->
<TABLE ID="rtti-38742">
<TITLE>typeinfo for QPaintEngine</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__class_type_info</primary></indexterm>vtable for __cxxabiv1::__class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QPaintEngine</primary></indexterm>typeinfo name for QPaintEngine</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QItemSelectionModel</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QItemSelectionModel class
is described by <XREF LINKEND="cls-39021-0">
</PARA>
<!--classdata-->
<TABLE id="cls-39021-0">
<TITLE>Primary vtable for QItemSelectionModel</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QItemSelectionModel</primary></indexterm>typeinfo for QItemSelectionModel</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QItemSelectionModel::metaObject() const</primary></indexterm>QItemSelectionModel::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QItemSelectionModel::qt_metacast(char const*)</primary></indexterm>QItemSelectionModel::qt_metacast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QItemSelectionModel::qt_metacall(QMetaObject::Call, int, void**)</primary></indexterm>QItemSelectionModel::qt_metacall(QMetaObject::Call, int, void**)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QItemSelectionModel::~QItemSelectionModel()</primary></indexterm>QItemSelectionModel::~QItemSelectionModel()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QItemSelectionModel::~QItemSelectionModel()</primary></indexterm>QItemSelectionModel::~QItemSelectionModel()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::event(QEvent*)</primary></indexterm>QObject::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::eventFilter(QObject*, QEvent*)</primary></indexterm>QObject::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QEvent*)</primary></indexterm>QObject::customEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QItemSelectionModel::select(QModelIndex const&, QFlags&lt;QItemSelectionModel::SelectionFlag&gt;)</primary></indexterm>QItemSelectionModel::select(QModelIndex const&, QFlags&lt;QItemSelectionModel::SelectionFlag&gt;)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QItemSelectionModel::select(QItemSelection const&, QFlags&lt;QItemSelectionModel::SelectionFlag&gt;)</primary></indexterm>QItemSelectionModel::select(QItemSelection const&, QFlags&lt;QItemSelectionModel::SelectionFlag&gt;)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QItemSelectionModel::clear()</primary></indexterm>QItemSelectionModel::clear()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QItemSelectionModel::reset()</primary></indexterm>QItemSelectionModel::reset()</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QItemSelectionModel  class
is described by <XREF LINKEND="rtti-38816">
</PARA>
<!--classdata-->
<TABLE ID="rtti-38816">
<TITLE>typeinfo for QItemSelectionModel</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QItemSelectionModel</primary></indexterm>typeinfo name for QItemSelectionModel</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QObject</primary></indexterm>typeinfo for QObject</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QAbstractScrollArea</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QAbstractScrollArea class
is described by <XREF LINKEND="cls-39018-0">
</PARA>
<!--classdata-->
<TABLE id="cls-39018-0">
<TITLE>Primary vtable for QAbstractScrollArea</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QAbstractScrollArea</primary></indexterm>typeinfo for QAbstractScrollArea</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractScrollArea::metaObject() const</primary></indexterm>QAbstractScrollArea::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractScrollArea::qt_metacast(char const*)</primary></indexterm>QAbstractScrollArea::qt_metacast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractScrollArea::qt_metacall(QMetaObject::Call, int, void**)</primary></indexterm>QAbstractScrollArea::qt_metacall(QMetaObject::Call, int, void**)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractScrollArea::~QAbstractScrollArea()</primary></indexterm>QAbstractScrollArea::~QAbstractScrollArea()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractScrollArea::~QAbstractScrollArea()</primary></indexterm>QAbstractScrollArea::~QAbstractScrollArea()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractScrollArea::event(QEvent*)</primary></indexterm>QAbstractScrollArea::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::eventFilter(QObject*, QEvent*)</primary></indexterm>QObject::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QEvent*)</primary></indexterm>QObject::customEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::devType() const</primary></indexterm>QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setVisible(bool)</primary></indexterm>QWidget::setVisible(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractScrollArea::sizeHint() const</primary></indexterm>QAbstractScrollArea::sizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractScrollArea::minimumSizeHint() const</primary></indexterm>QAbstractScrollArea::minimumSizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::heightForWidth(int) const</primary></indexterm>QWidget::heightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paintEngine() const</primary></indexterm>QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractScrollArea::mousePressEvent(QMouseEvent*)</primary></indexterm>QAbstractScrollArea::mousePressEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractScrollArea::mouseReleaseEvent(QMouseEvent*)</primary></indexterm>QAbstractScrollArea::mouseReleaseEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractScrollArea::mouseDoubleClickEvent(QMouseEvent*)</primary></indexterm>QAbstractScrollArea::mouseDoubleClickEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractScrollArea::mouseMoveEvent(QMouseEvent*)</primary></indexterm>QAbstractScrollArea::mouseMoveEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractScrollArea::wheelEvent(QWheelEvent*)</primary></indexterm>QAbstractScrollArea::wheelEvent(QWheelEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractScrollArea::keyPressEvent(QKeyEvent*)</primary></indexterm>QAbstractScrollArea::keyPressEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyReleaseEvent(QKeyEvent*)</primary></indexterm>QWidget::keyReleaseEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusInEvent(QFocusEvent*)</primary></indexterm>QWidget::focusInEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusOutEvent(QFocusEvent*)</primary></indexterm>QWidget::focusOutEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enterEvent(QEvent*)</primary></indexterm>QWidget::enterEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::leaveEvent(QEvent*)</primary></indexterm>QWidget::leaveEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractScrollArea::paintEvent(QPaintEvent*)</primary></indexterm>QAbstractScrollArea::paintEvent(QPaintEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::moveEvent(QMoveEvent*)</primary></indexterm>QWidget::moveEvent(QMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractScrollArea::resizeEvent(QResizeEvent*)</primary></indexterm>QAbstractScrollArea::resizeEvent(QResizeEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::closeEvent(QCloseEvent*)</primary></indexterm>QWidget::closeEvent(QCloseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;33&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractScrollArea::contextMenuEvent(QContextMenuEvent*)</primary></indexterm>QAbstractScrollArea::contextMenuEvent(QContextMenuEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;34&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::tabletEvent(QTabletEvent*)</primary></indexterm>QWidget::tabletEvent(QTabletEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;35&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::actionEvent(QActionEvent*)</primary></indexterm>QWidget::actionEvent(QActionEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;36&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractScrollArea::dragEnterEvent(QDragEnterEvent*)</primary></indexterm>QAbstractScrollArea::dragEnterEvent(QDragEnterEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;37&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractScrollArea::dragMoveEvent(QDragMoveEvent*)</primary></indexterm>QAbstractScrollArea::dragMoveEvent(QDragMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;38&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractScrollArea::dragLeaveEvent(QDragLeaveEvent*)</primary></indexterm>QAbstractScrollArea::dragLeaveEvent(QDragLeaveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;39&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractScrollArea::dropEvent(QDropEvent*)</primary></indexterm>QAbstractScrollArea::dropEvent(QDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;40&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showEvent(QShowEvent*)</primary></indexterm>QWidget::showEvent(QShowEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;41&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::hideEvent(QHideEvent*)</primary></indexterm>QWidget::hideEvent(QHideEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;42&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::x11Event(_XEvent*)</primary></indexterm>QWidget::x11Event(_XEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;43&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::changeEvent(QEvent*)</primary></indexterm>QFrame::changeEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;44&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;45&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::inputMethodEvent(QInputMethodEvent*)</primary></indexterm>QWidget::inputMethodEvent(QInputMethodEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;46&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::inputMethodQuery(Qt::InputMethodQuery) const</primary></indexterm>QWidget::inputMethodQuery(Qt::InputMethodQuery) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;47&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusNextPrevChild(bool)</primary></indexterm>QWidget::focusNextPrevChild(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;48&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::styleChange(QStyle&)</primary></indexterm>QWidget::styleChange(QStyle&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;49&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enabledChange(bool)</primary></indexterm>QWidget::enabledChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;50&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paletteChange(QPalette const&)</primary></indexterm>QWidget::paletteChange(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;51&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::fontChange(QFont const&)</primary></indexterm>QWidget::fontChange(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;52&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::windowActivationChange(bool)</primary></indexterm>QWidget::windowActivationChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;53&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::languageChange()</primary></indexterm>QWidget::languageChange()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;54&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractScrollArea::viewportEvent(QEvent*)</primary></indexterm>QAbstractScrollArea::viewportEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;55&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractScrollArea::scrollContentsBy(int, int)</primary></indexterm>QAbstractScrollArea::scrollContentsBy(int, int)</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--classdata-->
<TABLE id="cls-39018-1">
<TITLE>Secondary vtable for QAbstractScrollArea</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>-16</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QAbstractScrollArea</primary></indexterm>typeinfo for QAbstractScrollArea</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QAbstractScrollArea::~QAbstractScrollArea()</primary></indexterm>non-virtual thunk to QAbstractScrollArea::~QAbstractScrollArea()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QAbstractScrollArea::~QAbstractScrollArea()</primary></indexterm>non-virtual thunk to QAbstractScrollArea::~QAbstractScrollArea()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::devType() const</primary></indexterm>non-virtual thunk to QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::paintEngine() const</primary></indexterm>non-virtual thunk to QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QAbstractScrollArea  class
is described by <XREF LINKEND="rtti-38813">
</PARA>
<!--classdata-->
<TABLE ID="rtti-38813">
<TITLE>typeinfo for QAbstractScrollArea</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QAbstractScrollArea</primary></indexterm>typeinfo name for QAbstractScrollArea</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QFrame</primary></indexterm>typeinfo for QFrame</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QValidator</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QValidator class
is described by <XREF LINKEND="cls-38898-0">
</PARA>
<!--classdata-->
<TABLE id="cls-38898-0">
<TITLE>Primary vtable for QValidator</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QValidator</primary></indexterm>typeinfo for QValidator</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QValidator::metaObject() const</primary></indexterm>QValidator::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QValidator::qt_metacast(char const*)</primary></indexterm>QValidator::qt_metacast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QValidator::qt_metacall(QMetaObject::Call, int, void**)</primary></indexterm>QValidator::qt_metacall(QMetaObject::Call, int, void**)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QValidator::~QValidator()</primary></indexterm>QValidator::~QValidator()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QValidator::~QValidator()</primary></indexterm>QValidator::~QValidator()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::event(QEvent*)</primary></indexterm>QObject::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::eventFilter(QObject*, QEvent*)</primary></indexterm>QObject::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QEvent*)</primary></indexterm>QObject::customEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QValidator::fixup(QString&) const</primary></indexterm>QValidator::fixup(QString&) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QValidator  class
is described by <XREF LINKEND="rtti-38692">
</PARA>
<!--classdata-->
<TABLE ID="rtti-38692">
<TITLE>typeinfo for QValidator</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QValidator</primary></indexterm>typeinfo name for QValidator</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QObject</primary></indexterm>typeinfo for QObject</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QIntValidator</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QIntValidator class
is described by <XREF LINKEND="cls-38962-0">
</PARA>
<!--classdata-->
<TABLE id="cls-38962-0">
<TITLE>Primary vtable for QIntValidator</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QIntValidator</primary></indexterm>typeinfo for QIntValidator</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QIntValidator::metaObject() const</primary></indexterm>QIntValidator::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QIntValidator::qt_metacast(char const*)</primary></indexterm>QIntValidator::qt_metacast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QIntValidator::qt_metacall(QMetaObject::Call, int, void**)</primary></indexterm>QIntValidator::qt_metacall(QMetaObject::Call, int, void**)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QIntValidator::~QIntValidator()</primary></indexterm>QIntValidator::~QIntValidator()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QIntValidator::~QIntValidator()</primary></indexterm>QIntValidator::~QIntValidator()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::event(QEvent*)</primary></indexterm>QObject::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::eventFilter(QObject*, QEvent*)</primary></indexterm>QObject::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QEvent*)</primary></indexterm>QObject::customEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QIntValidator::validate(QString&, int&) const</primary></indexterm>QIntValidator::validate(QString&, int&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QValidator::fixup(QString&) const</primary></indexterm>QValidator::fixup(QString&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QIntValidator::setRange(int, int)</primary></indexterm>QIntValidator::setRange(int, int)</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QIntValidator  class
is described by <XREF LINKEND="rtti-38757">
</PARA>
<!--classdata-->
<TABLE ID="rtti-38757">
<TITLE>typeinfo for QIntValidator</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QIntValidator</primary></indexterm>typeinfo name for QIntValidator</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QValidator</primary></indexterm>typeinfo for QValidator</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QDoubleValidator</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QDoubleValidator class
is described by <XREF LINKEND="cls-38994-0">
</PARA>
<!--classdata-->
<TABLE id="cls-38994-0">
<TITLE>Primary vtable for QDoubleValidator</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QDoubleValidator</primary></indexterm>typeinfo for QDoubleValidator</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDoubleValidator::metaObject() const</primary></indexterm>QDoubleValidator::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDoubleValidator::qt_metacast(char const*)</primary></indexterm>QDoubleValidator::qt_metacast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDoubleValidator::qt_metacall(QMetaObject::Call, int, void**)</primary></indexterm>QDoubleValidator::qt_metacall(QMetaObject::Call, int, void**)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDoubleValidator::~QDoubleValidator()</primary></indexterm>QDoubleValidator::~QDoubleValidator()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDoubleValidator::~QDoubleValidator()</primary></indexterm>QDoubleValidator::~QDoubleValidator()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::event(QEvent*)</primary></indexterm>QObject::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::eventFilter(QObject*, QEvent*)</primary></indexterm>QObject::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QEvent*)</primary></indexterm>QObject::customEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDoubleValidator::validate(QString&, int&) const</primary></indexterm>QDoubleValidator::validate(QString&, int&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QValidator::fixup(QString&) const</primary></indexterm>QValidator::fixup(QString&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDoubleValidator::setRange(double, double, int)</primary></indexterm>QDoubleValidator::setRange(double, double, int)</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QDoubleValidator  class
is described by <XREF LINKEND="rtti-38789">
</PARA>
<!--classdata-->
<TABLE ID="rtti-38789">
<TITLE>typeinfo for QDoubleValidator</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QDoubleValidator</primary></indexterm>typeinfo name for QDoubleValidator</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QValidator</primary></indexterm>typeinfo for QValidator</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QRegExpValidator</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QRegExpValidator class
is described by <XREF LINKEND="cls-38997-0">
</PARA>
<!--classdata-->
<TABLE id="cls-38997-0">
<TITLE>Primary vtable for QRegExpValidator</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QRegExpValidator</primary></indexterm>typeinfo for QRegExpValidator</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QRegExpValidator::metaObject() const</primary></indexterm>QRegExpValidator::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QRegExpValidator::qt_metacast(char const*)</primary></indexterm>QRegExpValidator::qt_metacast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QRegExpValidator::qt_metacall(QMetaObject::Call, int, void**)</primary></indexterm>QRegExpValidator::qt_metacall(QMetaObject::Call, int, void**)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QRegExpValidator::~QRegExpValidator()</primary></indexterm>QRegExpValidator::~QRegExpValidator()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QRegExpValidator::~QRegExpValidator()</primary></indexterm>QRegExpValidator::~QRegExpValidator()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::event(QEvent*)</primary></indexterm>QObject::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::eventFilter(QObject*, QEvent*)</primary></indexterm>QObject::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QEvent*)</primary></indexterm>QObject::customEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QRegExpValidator::validate(QString&, int&) const</primary></indexterm>QRegExpValidator::validate(QString&, int&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QValidator::fixup(QString&) const</primary></indexterm>QValidator::fixup(QString&) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QRegExpValidator  class
is described by <XREF LINKEND="rtti-38792">
</PARA>
<!--classdata-->
<TABLE ID="rtti-38792">
<TITLE>typeinfo for QRegExpValidator</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QRegExpValidator</primary></indexterm>typeinfo name for QRegExpValidator</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QValidator</primary></indexterm>typeinfo for QValidator</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QAbstractSpinBox</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QAbstractSpinBox class
is described by <XREF LINKEND="cls-38993-0">
</PARA>
<!--classdata-->
<TABLE id="cls-38993-0">
<TITLE>Primary vtable for QAbstractSpinBox</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QAbstractSpinBox</primary></indexterm>typeinfo for QAbstractSpinBox</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSpinBox::metaObject() const</primary></indexterm>QAbstractSpinBox::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSpinBox::qt_metacast(char const*)</primary></indexterm>QAbstractSpinBox::qt_metacast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSpinBox::qt_metacall(QMetaObject::Call, int, void**)</primary></indexterm>QAbstractSpinBox::qt_metacall(QMetaObject::Call, int, void**)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSpinBox::~QAbstractSpinBox()</primary></indexterm>QAbstractSpinBox::~QAbstractSpinBox()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSpinBox::~QAbstractSpinBox()</primary></indexterm>QAbstractSpinBox::~QAbstractSpinBox()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSpinBox::event(QEvent*)</primary></indexterm>QAbstractSpinBox::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::eventFilter(QObject*, QEvent*)</primary></indexterm>QObject::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSpinBox::timerEvent(QTimerEvent*)</primary></indexterm>QAbstractSpinBox::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QEvent*)</primary></indexterm>QObject::customEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::devType() const</primary></indexterm>QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setVisible(bool)</primary></indexterm>QWidget::setVisible(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSpinBox::sizeHint() const</primary></indexterm>QAbstractSpinBox::sizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSpinBox::minimumSizeHint() const</primary></indexterm>QAbstractSpinBox::minimumSizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::heightForWidth(int) const</primary></indexterm>QWidget::heightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paintEngine() const</primary></indexterm>QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSpinBox::mousePressEvent(QMouseEvent*)</primary></indexterm>QAbstractSpinBox::mousePressEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSpinBox::mouseReleaseEvent(QMouseEvent*)</primary></indexterm>QAbstractSpinBox::mouseReleaseEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseDoubleClickEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseDoubleClickEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSpinBox::mouseMoveEvent(QMouseEvent*)</primary></indexterm>QAbstractSpinBox::mouseMoveEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSpinBox::wheelEvent(QWheelEvent*)</primary></indexterm>QAbstractSpinBox::wheelEvent(QWheelEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSpinBox::keyPressEvent(QKeyEvent*)</primary></indexterm>QAbstractSpinBox::keyPressEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSpinBox::keyReleaseEvent(QKeyEvent*)</primary></indexterm>QAbstractSpinBox::keyReleaseEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSpinBox::focusInEvent(QFocusEvent*)</primary></indexterm>QAbstractSpinBox::focusInEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSpinBox::focusOutEvent(QFocusEvent*)</primary></indexterm>QAbstractSpinBox::focusOutEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enterEvent(QEvent*)</primary></indexterm>QWidget::enterEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::leaveEvent(QEvent*)</primary></indexterm>QWidget::leaveEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSpinBox::paintEvent(QPaintEvent*)</primary></indexterm>QAbstractSpinBox::paintEvent(QPaintEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::moveEvent(QMoveEvent*)</primary></indexterm>QWidget::moveEvent(QMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSpinBox::resizeEvent(QResizeEvent*)</primary></indexterm>QAbstractSpinBox::resizeEvent(QResizeEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSpinBox::closeEvent(QCloseEvent*)</primary></indexterm>QAbstractSpinBox::closeEvent(QCloseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;33&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSpinBox::contextMenuEvent(QContextMenuEvent*)</primary></indexterm>QAbstractSpinBox::contextMenuEvent(QContextMenuEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;34&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::tabletEvent(QTabletEvent*)</primary></indexterm>QWidget::tabletEvent(QTabletEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;35&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::actionEvent(QActionEvent*)</primary></indexterm>QWidget::actionEvent(QActionEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;36&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragEnterEvent(QDragEnterEvent*)</primary></indexterm>QWidget::dragEnterEvent(QDragEnterEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;37&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragMoveEvent(QDragMoveEvent*)</primary></indexterm>QWidget::dragMoveEvent(QDragMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;38&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragLeaveEvent(QDragLeaveEvent*)</primary></indexterm>QWidget::dragLeaveEvent(QDragLeaveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;39&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dropEvent(QDropEvent*)</primary></indexterm>QWidget::dropEvent(QDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;40&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSpinBox::showEvent(QShowEvent*)</primary></indexterm>QAbstractSpinBox::showEvent(QShowEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;41&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSpinBox::hideEvent(QHideEvent*)</primary></indexterm>QAbstractSpinBox::hideEvent(QHideEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;42&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::x11Event(_XEvent*)</primary></indexterm>QWidget::x11Event(_XEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;43&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSpinBox::changeEvent(QEvent*)</primary></indexterm>QAbstractSpinBox::changeEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;44&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;45&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::inputMethodEvent(QInputMethodEvent*)</primary></indexterm>QWidget::inputMethodEvent(QInputMethodEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;46&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::inputMethodQuery(Qt::InputMethodQuery) const</primary></indexterm>QWidget::inputMethodQuery(Qt::InputMethodQuery) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;47&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusNextPrevChild(bool)</primary></indexterm>QWidget::focusNextPrevChild(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;48&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::styleChange(QStyle&)</primary></indexterm>QWidget::styleChange(QStyle&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;49&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enabledChange(bool)</primary></indexterm>QWidget::enabledChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;50&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paletteChange(QPalette const&)</primary></indexterm>QWidget::paletteChange(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;51&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::fontChange(QFont const&)</primary></indexterm>QWidget::fontChange(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;52&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::windowActivationChange(bool)</primary></indexterm>QWidget::windowActivationChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;53&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::languageChange()</primary></indexterm>QWidget::languageChange()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;54&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSpinBox::validate(QString&, int&) const</primary></indexterm>QAbstractSpinBox::validate(QString&, int&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;55&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSpinBox::fixup(QString&) const</primary></indexterm>QAbstractSpinBox::fixup(QString&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;56&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSpinBox::stepBy(int)</primary></indexterm>QAbstractSpinBox::stepBy(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;57&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSpinBox::clear()</primary></indexterm>QAbstractSpinBox::clear()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;58&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSpinBox::stepEnabled() const</primary></indexterm>QAbstractSpinBox::stepEnabled() const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--classdata-->
<TABLE id="cls-38993-1">
<TITLE>Secondary vtable for QAbstractSpinBox</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>-16</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QAbstractSpinBox</primary></indexterm>typeinfo for QAbstractSpinBox</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QAbstractSpinBox::~QAbstractSpinBox()</primary></indexterm>non-virtual thunk to QAbstractSpinBox::~QAbstractSpinBox()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QAbstractSpinBox::~QAbstractSpinBox()</primary></indexterm>non-virtual thunk to QAbstractSpinBox::~QAbstractSpinBox()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::devType() const</primary></indexterm>non-virtual thunk to QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::paintEngine() const</primary></indexterm>non-virtual thunk to QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QAbstractSpinBox  class
is described by <XREF LINKEND="rtti-38788">
</PARA>
<!--classdata-->
<TABLE ID="rtti-38788">
<TITLE>typeinfo for QAbstractSpinBox</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QAbstractSpinBox</primary></indexterm>typeinfo name for QAbstractSpinBox</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QWidget</primary></indexterm>typeinfo for QWidget</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QAbstractSlider</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QAbstractSlider class
is described by <XREF LINKEND="cls-38979-0">
</PARA>
<!--classdata-->
<TABLE id="cls-38979-0">
<TITLE>Primary vtable for QAbstractSlider</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QAbstractSlider</primary></indexterm>typeinfo for QAbstractSlider</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSlider::metaObject() const</primary></indexterm>QAbstractSlider::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSlider::qt_metacast(char const*)</primary></indexterm>QAbstractSlider::qt_metacast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSlider::qt_metacall(QMetaObject::Call, int, void**)</primary></indexterm>QAbstractSlider::qt_metacall(QMetaObject::Call, int, void**)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSlider::~QAbstractSlider()</primary></indexterm>QAbstractSlider::~QAbstractSlider()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSlider::~QAbstractSlider()</primary></indexterm>QAbstractSlider::~QAbstractSlider()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSlider::event(QEvent*)</primary></indexterm>QAbstractSlider::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::eventFilter(QObject*, QEvent*)</primary></indexterm>QObject::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSlider::timerEvent(QTimerEvent*)</primary></indexterm>QAbstractSlider::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QEvent*)</primary></indexterm>QObject::customEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::devType() const</primary></indexterm>QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setVisible(bool)</primary></indexterm>QWidget::setVisible(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::sizeHint() const</primary></indexterm>QWidget::sizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::minimumSizeHint() const</primary></indexterm>QWidget::minimumSizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::heightForWidth(int) const</primary></indexterm>QWidget::heightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paintEngine() const</primary></indexterm>QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mousePressEvent(QMouseEvent*)</primary></indexterm>QWidget::mousePressEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseReleaseEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseReleaseEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseDoubleClickEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseDoubleClickEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseMoveEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseMoveEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSlider::wheelEvent(QWheelEvent*)</primary></indexterm>QAbstractSlider::wheelEvent(QWheelEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSlider::keyPressEvent(QKeyEvent*)</primary></indexterm>QAbstractSlider::keyPressEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyReleaseEvent(QKeyEvent*)</primary></indexterm>QWidget::keyReleaseEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusInEvent(QFocusEvent*)</primary></indexterm>QWidget::focusInEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusOutEvent(QFocusEvent*)</primary></indexterm>QWidget::focusOutEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enterEvent(QEvent*)</primary></indexterm>QWidget::enterEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::leaveEvent(QEvent*)</primary></indexterm>QWidget::leaveEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paintEvent(QPaintEvent*)</primary></indexterm>QWidget::paintEvent(QPaintEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::moveEvent(QMoveEvent*)</primary></indexterm>QWidget::moveEvent(QMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::resizeEvent(QResizeEvent*)</primary></indexterm>QWidget::resizeEvent(QResizeEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::closeEvent(QCloseEvent*)</primary></indexterm>QWidget::closeEvent(QCloseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;33&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::contextMenuEvent(QContextMenuEvent*)</primary></indexterm>QWidget::contextMenuEvent(QContextMenuEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;34&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::tabletEvent(QTabletEvent*)</primary></indexterm>QWidget::tabletEvent(QTabletEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;35&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::actionEvent(QActionEvent*)</primary></indexterm>QWidget::actionEvent(QActionEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;36&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragEnterEvent(QDragEnterEvent*)</primary></indexterm>QWidget::dragEnterEvent(QDragEnterEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;37&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragMoveEvent(QDragMoveEvent*)</primary></indexterm>QWidget::dragMoveEvent(QDragMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;38&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragLeaveEvent(QDragLeaveEvent*)</primary></indexterm>QWidget::dragLeaveEvent(QDragLeaveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;39&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dropEvent(QDropEvent*)</primary></indexterm>QWidget::dropEvent(QDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;40&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showEvent(QShowEvent*)</primary></indexterm>QWidget::showEvent(QShowEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;41&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::hideEvent(QHideEvent*)</primary></indexterm>QWidget::hideEvent(QHideEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;42&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::x11Event(_XEvent*)</primary></indexterm>QWidget::x11Event(_XEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;43&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSlider::changeEvent(QEvent*)</primary></indexterm>QAbstractSlider::changeEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;44&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;45&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::inputMethodEvent(QInputMethodEvent*)</primary></indexterm>QWidget::inputMethodEvent(QInputMethodEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;46&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::inputMethodQuery(Qt::InputMethodQuery) const</primary></indexterm>QWidget::inputMethodQuery(Qt::InputMethodQuery) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;47&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusNextPrevChild(bool)</primary></indexterm>QWidget::focusNextPrevChild(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;48&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::styleChange(QStyle&)</primary></indexterm>QWidget::styleChange(QStyle&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;49&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enabledChange(bool)</primary></indexterm>QWidget::enabledChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;50&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paletteChange(QPalette const&)</primary></indexterm>QWidget::paletteChange(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;51&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::fontChange(QFont const&)</primary></indexterm>QWidget::fontChange(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;52&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::windowActivationChange(bool)</primary></indexterm>QWidget::windowActivationChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;53&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::languageChange()</primary></indexterm>QWidget::languageChange()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;54&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSlider::sliderChange(QAbstractSlider::SliderChange)</primary></indexterm>QAbstractSlider::sliderChange(QAbstractSlider::SliderChange)</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--classdata-->
<TABLE id="cls-38979-1">
<TITLE>Secondary vtable for QAbstractSlider</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>-16</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QAbstractSlider</primary></indexterm>typeinfo for QAbstractSlider</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QAbstractSlider::~QAbstractSlider()</primary></indexterm>non-virtual thunk to QAbstractSlider::~QAbstractSlider()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QAbstractSlider::~QAbstractSlider()</primary></indexterm>non-virtual thunk to QAbstractSlider::~QAbstractSlider()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::devType() const</primary></indexterm>non-virtual thunk to QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::paintEngine() const</primary></indexterm>non-virtual thunk to QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QAbstractSlider  class
is described by <XREF LINKEND="rtti-38774">
</PARA>
<!--classdata-->
<TABLE ID="rtti-38774">
<TITLE>typeinfo for QAbstractSlider</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QAbstractSlider</primary></indexterm>typeinfo name for QAbstractSlider</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QWidget</primary></indexterm>typeinfo for QWidget</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QSlider</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QSlider class
is described by <XREF LINKEND="cls-39062-0">
</PARA>
<!--classdata-->
<TABLE id="cls-39062-0">
<TITLE>Primary vtable for QSlider</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QSlider</primary></indexterm>typeinfo for QSlider</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSlider::metaObject() const</primary></indexterm>QSlider::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSlider::qt_metacast(char const*)</primary></indexterm>QSlider::qt_metacast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSlider::qt_metacall(QMetaObject::Call, int, void**)</primary></indexterm>QSlider::qt_metacall(QMetaObject::Call, int, void**)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSlider::~QSlider()</primary></indexterm>QSlider::~QSlider()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSlider::~QSlider()</primary></indexterm>QSlider::~QSlider()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSlider::event(QEvent*)</primary></indexterm>QSlider::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::eventFilter(QObject*, QEvent*)</primary></indexterm>QObject::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSlider::timerEvent(QTimerEvent*)</primary></indexterm>QAbstractSlider::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QEvent*)</primary></indexterm>QObject::customEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::devType() const</primary></indexterm>QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setVisible(bool)</primary></indexterm>QWidget::setVisible(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSlider::sizeHint() const</primary></indexterm>QSlider::sizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSlider::minimumSizeHint() const</primary></indexterm>QSlider::minimumSizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::heightForWidth(int) const</primary></indexterm>QWidget::heightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paintEngine() const</primary></indexterm>QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSlider::mousePressEvent(QMouseEvent*)</primary></indexterm>QSlider::mousePressEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSlider::mouseReleaseEvent(QMouseEvent*)</primary></indexterm>QSlider::mouseReleaseEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseDoubleClickEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseDoubleClickEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSlider::mouseMoveEvent(QMouseEvent*)</primary></indexterm>QSlider::mouseMoveEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSlider::wheelEvent(QWheelEvent*)</primary></indexterm>QAbstractSlider::wheelEvent(QWheelEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSlider::keyPressEvent(QKeyEvent*)</primary></indexterm>QAbstractSlider::keyPressEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyReleaseEvent(QKeyEvent*)</primary></indexterm>QWidget::keyReleaseEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusInEvent(QFocusEvent*)</primary></indexterm>QWidget::focusInEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusOutEvent(QFocusEvent*)</primary></indexterm>QWidget::focusOutEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enterEvent(QEvent*)</primary></indexterm>QWidget::enterEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::leaveEvent(QEvent*)</primary></indexterm>QWidget::leaveEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSlider::paintEvent(QPaintEvent*)</primary></indexterm>QSlider::paintEvent(QPaintEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::moveEvent(QMoveEvent*)</primary></indexterm>QWidget::moveEvent(QMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::resizeEvent(QResizeEvent*)</primary></indexterm>QWidget::resizeEvent(QResizeEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::closeEvent(QCloseEvent*)</primary></indexterm>QWidget::closeEvent(QCloseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;33&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::contextMenuEvent(QContextMenuEvent*)</primary></indexterm>QWidget::contextMenuEvent(QContextMenuEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;34&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::tabletEvent(QTabletEvent*)</primary></indexterm>QWidget::tabletEvent(QTabletEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;35&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::actionEvent(QActionEvent*)</primary></indexterm>QWidget::actionEvent(QActionEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;36&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragEnterEvent(QDragEnterEvent*)</primary></indexterm>QWidget::dragEnterEvent(QDragEnterEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;37&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragMoveEvent(QDragMoveEvent*)</primary></indexterm>QWidget::dragMoveEvent(QDragMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;38&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragLeaveEvent(QDragLeaveEvent*)</primary></indexterm>QWidget::dragLeaveEvent(QDragLeaveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;39&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dropEvent(QDropEvent*)</primary></indexterm>QWidget::dropEvent(QDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;40&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showEvent(QShowEvent*)</primary></indexterm>QWidget::showEvent(QShowEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;41&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::hideEvent(QHideEvent*)</primary></indexterm>QWidget::hideEvent(QHideEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;42&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::x11Event(_XEvent*)</primary></indexterm>QWidget::x11Event(_XEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;43&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSlider::changeEvent(QEvent*)</primary></indexterm>QAbstractSlider::changeEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;44&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;45&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::inputMethodEvent(QInputMethodEvent*)</primary></indexterm>QWidget::inputMethodEvent(QInputMethodEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;46&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::inputMethodQuery(Qt::InputMethodQuery) const</primary></indexterm>QWidget::inputMethodQuery(Qt::InputMethodQuery) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;47&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusNextPrevChild(bool)</primary></indexterm>QWidget::focusNextPrevChild(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;48&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::styleChange(QStyle&)</primary></indexterm>QWidget::styleChange(QStyle&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;49&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enabledChange(bool)</primary></indexterm>QWidget::enabledChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;50&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paletteChange(QPalette const&)</primary></indexterm>QWidget::paletteChange(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;51&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::fontChange(QFont const&)</primary></indexterm>QWidget::fontChange(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;52&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::windowActivationChange(bool)</primary></indexterm>QWidget::windowActivationChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;53&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::languageChange()</primary></indexterm>QWidget::languageChange()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;54&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSlider::sliderChange(QAbstractSlider::SliderChange)</primary></indexterm>QAbstractSlider::sliderChange(QAbstractSlider::SliderChange)</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--classdata-->
<TABLE id="cls-39062-1">
<TITLE>Secondary vtable for QSlider</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>-16</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QSlider</primary></indexterm>typeinfo for QSlider</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QSlider::~QSlider()</primary></indexterm>non-virtual thunk to QSlider::~QSlider()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QSlider::~QSlider()</primary></indexterm>non-virtual thunk to QSlider::~QSlider()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::devType() const</primary></indexterm>non-virtual thunk to QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::paintEngine() const</primary></indexterm>non-virtual thunk to QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QSlider  class
is described by <XREF LINKEND="rtti-38857">
</PARA>
<!--classdata-->
<TABLE ID="rtti-38857">
<TITLE>typeinfo for QSlider</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QSlider</primary></indexterm>typeinfo name for QSlider</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QAbstractSlider</primary></indexterm>typeinfo for QAbstractSlider</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QTabBar</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QTabBar class
is described by <XREF LINKEND="cls-39063-0">
</PARA>
<!--classdata-->
<TABLE id="cls-39063-0">
<TITLE>Primary vtable for QTabBar</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QTabBar</primary></indexterm>typeinfo for QTabBar</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTabBar::metaObject() const</primary></indexterm>QTabBar::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTabBar::qt_metacast(char const*)</primary></indexterm>QTabBar::qt_metacast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTabBar::qt_metacall(QMetaObject::Call, int, void**)</primary></indexterm>QTabBar::qt_metacall(QMetaObject::Call, int, void**)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTabBar::~QTabBar()</primary></indexterm>QTabBar::~QTabBar()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTabBar::~QTabBar()</primary></indexterm>QTabBar::~QTabBar()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTabBar::event(QEvent*)</primary></indexterm>QTabBar::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::eventFilter(QObject*, QEvent*)</primary></indexterm>QObject::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QEvent*)</primary></indexterm>QObject::customEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::devType() const</primary></indexterm>QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setVisible(bool)</primary></indexterm>QWidget::setVisible(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTabBar::sizeHint() const</primary></indexterm>QTabBar::sizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTabBar::minimumSizeHint() const</primary></indexterm>QTabBar::minimumSizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::heightForWidth(int) const</primary></indexterm>QWidget::heightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paintEngine() const</primary></indexterm>QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTabBar::mousePressEvent(QMouseEvent*)</primary></indexterm>QTabBar::mousePressEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTabBar::mouseReleaseEvent(QMouseEvent*)</primary></indexterm>QTabBar::mouseReleaseEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseDoubleClickEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseDoubleClickEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTabBar::mouseMoveEvent(QMouseEvent*)</primary></indexterm>QTabBar::mouseMoveEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::wheelEvent(QWheelEvent*)</primary></indexterm>QWidget::wheelEvent(QWheelEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTabBar::keyPressEvent(QKeyEvent*)</primary></indexterm>QTabBar::keyPressEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyReleaseEvent(QKeyEvent*)</primary></indexterm>QWidget::keyReleaseEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusInEvent(QFocusEvent*)</primary></indexterm>QWidget::focusInEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusOutEvent(QFocusEvent*)</primary></indexterm>QWidget::focusOutEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enterEvent(QEvent*)</primary></indexterm>QWidget::enterEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::leaveEvent(QEvent*)</primary></indexterm>QWidget::leaveEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTabBar::paintEvent(QPaintEvent*)</primary></indexterm>QTabBar::paintEvent(QPaintEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::moveEvent(QMoveEvent*)</primary></indexterm>QWidget::moveEvent(QMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTabBar::resizeEvent(QResizeEvent*)</primary></indexterm>QTabBar::resizeEvent(QResizeEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::closeEvent(QCloseEvent*)</primary></indexterm>QWidget::closeEvent(QCloseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;33&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::contextMenuEvent(QContextMenuEvent*)</primary></indexterm>QWidget::contextMenuEvent(QContextMenuEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;34&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::tabletEvent(QTabletEvent*)</primary></indexterm>QWidget::tabletEvent(QTabletEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;35&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::actionEvent(QActionEvent*)</primary></indexterm>QWidget::actionEvent(QActionEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;36&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragEnterEvent(QDragEnterEvent*)</primary></indexterm>QWidget::dragEnterEvent(QDragEnterEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;37&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragMoveEvent(QDragMoveEvent*)</primary></indexterm>QWidget::dragMoveEvent(QDragMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;38&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragLeaveEvent(QDragLeaveEvent*)</primary></indexterm>QWidget::dragLeaveEvent(QDragLeaveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;39&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dropEvent(QDropEvent*)</primary></indexterm>QWidget::dropEvent(QDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;40&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTabBar::showEvent(QShowEvent*)</primary></indexterm>QTabBar::showEvent(QShowEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;41&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::hideEvent(QHideEvent*)</primary></indexterm>QWidget::hideEvent(QHideEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;42&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::x11Event(_XEvent*)</primary></indexterm>QWidget::x11Event(_XEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;43&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTabBar::changeEvent(QEvent*)</primary></indexterm>QTabBar::changeEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;44&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;45&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::inputMethodEvent(QInputMethodEvent*)</primary></indexterm>QWidget::inputMethodEvent(QInputMethodEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;46&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::inputMethodQuery(Qt::InputMethodQuery) const</primary></indexterm>QWidget::inputMethodQuery(Qt::InputMethodQuery) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;47&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusNextPrevChild(bool)</primary></indexterm>QWidget::focusNextPrevChild(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;48&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::styleChange(QStyle&)</primary></indexterm>QWidget::styleChange(QStyle&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;49&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enabledChange(bool)</primary></indexterm>QWidget::enabledChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;50&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paletteChange(QPalette const&)</primary></indexterm>QWidget::paletteChange(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;51&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::fontChange(QFont const&)</primary></indexterm>QWidget::fontChange(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;52&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::windowActivationChange(bool)</primary></indexterm>QWidget::windowActivationChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;53&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::languageChange()</primary></indexterm>QWidget::languageChange()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;54&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTabBar::tabSizeHint(int) const</primary></indexterm>QTabBar::tabSizeHint(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;55&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTabBar::tabInserted(int)</primary></indexterm>QTabBar::tabInserted(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;56&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTabBar::tabRemoved(int)</primary></indexterm>QTabBar::tabRemoved(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;57&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTabBar::tabLayoutChange()</primary></indexterm>QTabBar::tabLayoutChange()</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--classdata-->
<TABLE id="cls-39063-1">
<TITLE>Secondary vtable for QTabBar</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>-16</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QTabBar</primary></indexterm>typeinfo for QTabBar</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QTabBar::~QTabBar()</primary></indexterm>non-virtual thunk to QTabBar::~QTabBar()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QTabBar::~QTabBar()</primary></indexterm>non-virtual thunk to QTabBar::~QTabBar()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::devType() const</primary></indexterm>non-virtual thunk to QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::paintEngine() const</primary></indexterm>non-virtual thunk to QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QTabBar  class
is described by <XREF LINKEND="rtti-38858">
</PARA>
<!--classdata-->
<TABLE ID="rtti-38858">
<TITLE>typeinfo for QTabBar</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QTabBar</primary></indexterm>typeinfo name for QTabBar</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QWidget</primary></indexterm>typeinfo for QWidget</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QTabWidget</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QTabWidget class
is described by <XREF LINKEND="cls-38895-0">
</PARA>
<!--classdata-->
<TABLE id="cls-38895-0">
<TITLE>Primary vtable for QTabWidget</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QTabWidget</primary></indexterm>typeinfo for QTabWidget</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTabWidget::metaObject() const</primary></indexterm>QTabWidget::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTabWidget::qt_metacast(char const*)</primary></indexterm>QTabWidget::qt_metacast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTabWidget::qt_metacall(QMetaObject::Call, int, void**)</primary></indexterm>QTabWidget::qt_metacall(QMetaObject::Call, int, void**)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTabWidget::~QTabWidget()</primary></indexterm>QTabWidget::~QTabWidget()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTabWidget::~QTabWidget()</primary></indexterm>QTabWidget::~QTabWidget()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTabWidget::event(QEvent*)</primary></indexterm>QTabWidget::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::eventFilter(QObject*, QEvent*)</primary></indexterm>QObject::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QEvent*)</primary></indexterm>QObject::customEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::devType() const</primary></indexterm>QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setVisible(bool)</primary></indexterm>QWidget::setVisible(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTabWidget::sizeHint() const</primary></indexterm>QTabWidget::sizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTabWidget::minimumSizeHint() const</primary></indexterm>QTabWidget::minimumSizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::heightForWidth(int) const</primary></indexterm>QWidget::heightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paintEngine() const</primary></indexterm>QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mousePressEvent(QMouseEvent*)</primary></indexterm>QWidget::mousePressEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseReleaseEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseReleaseEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseDoubleClickEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseDoubleClickEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseMoveEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseMoveEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::wheelEvent(QWheelEvent*)</primary></indexterm>QWidget::wheelEvent(QWheelEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTabWidget::keyPressEvent(QKeyEvent*)</primary></indexterm>QTabWidget::keyPressEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyReleaseEvent(QKeyEvent*)</primary></indexterm>QWidget::keyReleaseEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusInEvent(QFocusEvent*)</primary></indexterm>QWidget::focusInEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusOutEvent(QFocusEvent*)</primary></indexterm>QWidget::focusOutEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enterEvent(QEvent*)</primary></indexterm>QWidget::enterEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::leaveEvent(QEvent*)</primary></indexterm>QWidget::leaveEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTabWidget::paintEvent(QPaintEvent*)</primary></indexterm>QTabWidget::paintEvent(QPaintEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::moveEvent(QMoveEvent*)</primary></indexterm>QWidget::moveEvent(QMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTabWidget::resizeEvent(QResizeEvent*)</primary></indexterm>QTabWidget::resizeEvent(QResizeEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::closeEvent(QCloseEvent*)</primary></indexterm>QWidget::closeEvent(QCloseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;33&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::contextMenuEvent(QContextMenuEvent*)</primary></indexterm>QWidget::contextMenuEvent(QContextMenuEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;34&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::tabletEvent(QTabletEvent*)</primary></indexterm>QWidget::tabletEvent(QTabletEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;35&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::actionEvent(QActionEvent*)</primary></indexterm>QWidget::actionEvent(QActionEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;36&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragEnterEvent(QDragEnterEvent*)</primary></indexterm>QWidget::dragEnterEvent(QDragEnterEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;37&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragMoveEvent(QDragMoveEvent*)</primary></indexterm>QWidget::dragMoveEvent(QDragMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;38&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragLeaveEvent(QDragLeaveEvent*)</primary></indexterm>QWidget::dragLeaveEvent(QDragLeaveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;39&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dropEvent(QDropEvent*)</primary></indexterm>QWidget::dropEvent(QDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;40&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTabWidget::showEvent(QShowEvent*)</primary></indexterm>QTabWidget::showEvent(QShowEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;41&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::hideEvent(QHideEvent*)</primary></indexterm>QWidget::hideEvent(QHideEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;42&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::x11Event(_XEvent*)</primary></indexterm>QWidget::x11Event(_XEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;43&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTabWidget::changeEvent(QEvent*)</primary></indexterm>QTabWidget::changeEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;44&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;45&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::inputMethodEvent(QInputMethodEvent*)</primary></indexterm>QWidget::inputMethodEvent(QInputMethodEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;46&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::inputMethodQuery(Qt::InputMethodQuery) const</primary></indexterm>QWidget::inputMethodQuery(Qt::InputMethodQuery) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;47&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusNextPrevChild(bool)</primary></indexterm>QWidget::focusNextPrevChild(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;48&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::styleChange(QStyle&)</primary></indexterm>QWidget::styleChange(QStyle&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;49&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enabledChange(bool)</primary></indexterm>QWidget::enabledChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;50&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paletteChange(QPalette const&)</primary></indexterm>QWidget::paletteChange(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;51&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::fontChange(QFont const&)</primary></indexterm>QWidget::fontChange(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;52&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::windowActivationChange(bool)</primary></indexterm>QWidget::windowActivationChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;53&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::languageChange()</primary></indexterm>QWidget::languageChange()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;54&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTabWidget::tabInserted(int)</primary></indexterm>QTabWidget::tabInserted(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;55&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTabWidget::tabRemoved(int)</primary></indexterm>QTabWidget::tabRemoved(int)</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--classdata-->
<TABLE id="cls-38895-1">
<TITLE>Secondary vtable for QTabWidget</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>-16</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QTabWidget</primary></indexterm>typeinfo for QTabWidget</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QTabWidget::~QTabWidget()</primary></indexterm>non-virtual thunk to QTabWidget::~QTabWidget()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QTabWidget::~QTabWidget()</primary></indexterm>non-virtual thunk to QTabWidget::~QTabWidget()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::devType() const</primary></indexterm>non-virtual thunk to QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::paintEngine() const</primary></indexterm>non-virtual thunk to QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QTabWidget  class
is described by <XREF LINKEND="rtti-38689">
</PARA>
<!--classdata-->
<TABLE ID="rtti-38689">
<TITLE>typeinfo for QTabWidget</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QTabWidget</primary></indexterm>typeinfo name for QTabWidget</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QWidget</primary></indexterm>typeinfo for QWidget</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QRubberBand</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QRubberBand class
is described by <XREF LINKEND="cls-38925-0">
</PARA>
<!--classdata-->
<TABLE id="cls-38925-0">
<TITLE>Primary vtable for QRubberBand</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QRubberBand</primary></indexterm>typeinfo for QRubberBand</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QRubberBand::metaObject() const</primary></indexterm>QRubberBand::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QRubberBand::qt_metacast(char const*)</primary></indexterm>QRubberBand::qt_metacast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QRubberBand::qt_metacall(QMetaObject::Call, int, void**)</primary></indexterm>QRubberBand::qt_metacall(QMetaObject::Call, int, void**)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QRubberBand::~QRubberBand()</primary></indexterm>QRubberBand::~QRubberBand()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QRubberBand::~QRubberBand()</primary></indexterm>QRubberBand::~QRubberBand()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QRubberBand::event(QEvent*)</primary></indexterm>QRubberBand::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::eventFilter(QObject*, QEvent*)</primary></indexterm>QObject::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QEvent*)</primary></indexterm>QObject::customEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::devType() const</primary></indexterm>QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setVisible(bool)</primary></indexterm>QWidget::setVisible(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::sizeHint() const</primary></indexterm>QWidget::sizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::minimumSizeHint() const</primary></indexterm>QWidget::minimumSizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::heightForWidth(int) const</primary></indexterm>QWidget::heightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paintEngine() const</primary></indexterm>QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mousePressEvent(QMouseEvent*)</primary></indexterm>QWidget::mousePressEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseReleaseEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseReleaseEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseDoubleClickEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseDoubleClickEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseMoveEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseMoveEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::wheelEvent(QWheelEvent*)</primary></indexterm>QWidget::wheelEvent(QWheelEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyPressEvent(QKeyEvent*)</primary></indexterm>QWidget::keyPressEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyReleaseEvent(QKeyEvent*)</primary></indexterm>QWidget::keyReleaseEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusInEvent(QFocusEvent*)</primary></indexterm>QWidget::focusInEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusOutEvent(QFocusEvent*)</primary></indexterm>QWidget::focusOutEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enterEvent(QEvent*)</primary></indexterm>QWidget::enterEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::leaveEvent(QEvent*)</primary></indexterm>QWidget::leaveEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QRubberBand::paintEvent(QPaintEvent*)</primary></indexterm>QRubberBand::paintEvent(QPaintEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QRubberBand::moveEvent(QMoveEvent*)</primary></indexterm>QRubberBand::moveEvent(QMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QRubberBand::resizeEvent(QResizeEvent*)</primary></indexterm>QRubberBand::resizeEvent(QResizeEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::closeEvent(QCloseEvent*)</primary></indexterm>QWidget::closeEvent(QCloseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;33&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::contextMenuEvent(QContextMenuEvent*)</primary></indexterm>QWidget::contextMenuEvent(QContextMenuEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;34&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::tabletEvent(QTabletEvent*)</primary></indexterm>QWidget::tabletEvent(QTabletEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;35&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::actionEvent(QActionEvent*)</primary></indexterm>QWidget::actionEvent(QActionEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;36&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragEnterEvent(QDragEnterEvent*)</primary></indexterm>QWidget::dragEnterEvent(QDragEnterEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;37&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragMoveEvent(QDragMoveEvent*)</primary></indexterm>QWidget::dragMoveEvent(QDragMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;38&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragLeaveEvent(QDragLeaveEvent*)</primary></indexterm>QWidget::dragLeaveEvent(QDragLeaveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;39&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dropEvent(QDropEvent*)</primary></indexterm>QWidget::dropEvent(QDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;40&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QRubberBand::showEvent(QShowEvent*)</primary></indexterm>QRubberBand::showEvent(QShowEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;41&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::hideEvent(QHideEvent*)</primary></indexterm>QWidget::hideEvent(QHideEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;42&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::x11Event(_XEvent*)</primary></indexterm>QWidget::x11Event(_XEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;43&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QRubberBand::changeEvent(QEvent*)</primary></indexterm>QRubberBand::changeEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;44&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;45&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::inputMethodEvent(QInputMethodEvent*)</primary></indexterm>QWidget::inputMethodEvent(QInputMethodEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;46&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::inputMethodQuery(Qt::InputMethodQuery) const</primary></indexterm>QWidget::inputMethodQuery(Qt::InputMethodQuery) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;47&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusNextPrevChild(bool)</primary></indexterm>QWidget::focusNextPrevChild(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;48&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::styleChange(QStyle&)</primary></indexterm>QWidget::styleChange(QStyle&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;49&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enabledChange(bool)</primary></indexterm>QWidget::enabledChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;50&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paletteChange(QPalette const&)</primary></indexterm>QWidget::paletteChange(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;51&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::fontChange(QFont const&)</primary></indexterm>QWidget::fontChange(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;52&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::windowActivationChange(bool)</primary></indexterm>QWidget::windowActivationChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;53&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::languageChange()</primary></indexterm>QWidget::languageChange()</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--classdata-->
<TABLE id="cls-38925-1">
<TITLE>Secondary vtable for QRubberBand</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>-16</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QRubberBand</primary></indexterm>typeinfo for QRubberBand</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QRubberBand::~QRubberBand()</primary></indexterm>non-virtual thunk to QRubberBand::~QRubberBand()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QRubberBand::~QRubberBand()</primary></indexterm>non-virtual thunk to QRubberBand::~QRubberBand()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::devType() const</primary></indexterm>non-virtual thunk to QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::paintEngine() const</primary></indexterm>non-virtual thunk to QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QRubberBand  class
is described by <XREF LINKEND="rtti-38720">
</PARA>
<!--classdata-->
<TABLE ID="rtti-38720">
<TITLE>typeinfo for QRubberBand</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QRubberBand</primary></indexterm>typeinfo name for QRubberBand</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QWidget</primary></indexterm>typeinfo for QWidget</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QAbstractItemDelegate</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QAbstractItemDelegate class
is described by <XREF LINKEND="cls-39031-0">
</PARA>
<!--classdata-->
<TABLE id="cls-39031-0">
<TITLE>Primary vtable for QAbstractItemDelegate</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QAbstractItemDelegate</primary></indexterm>typeinfo for QAbstractItemDelegate</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemDelegate::metaObject() const</primary></indexterm>QAbstractItemDelegate::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemDelegate::qt_metacast(char const*)</primary></indexterm>QAbstractItemDelegate::qt_metacast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemDelegate::qt_metacall(QMetaObject::Call, int, void**)</primary></indexterm>QAbstractItemDelegate::qt_metacall(QMetaObject::Call, int, void**)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemDelegate::~QAbstractItemDelegate()</primary></indexterm>QAbstractItemDelegate::~QAbstractItemDelegate()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemDelegate::~QAbstractItemDelegate()</primary></indexterm>QAbstractItemDelegate::~QAbstractItemDelegate()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::event(QEvent*)</primary></indexterm>QObject::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::eventFilter(QObject*, QEvent*)</primary></indexterm>QObject::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QEvent*)</primary></indexterm>QObject::customEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemDelegate::createEditor(QWidget*, QStyleOptionViewItem const&, QModelIndex const&) const</primary></indexterm>QAbstractItemDelegate::createEditor(QWidget*, QStyleOptionViewItem const&, QModelIndex const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemDelegate::setEditorData(QWidget*, QModelIndex const&) const</primary></indexterm>QAbstractItemDelegate::setEditorData(QWidget*, QModelIndex const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemDelegate::setModelData(QWidget*, QAbstractItemModel*, QModelIndex const&) const</primary></indexterm>QAbstractItemDelegate::setModelData(QWidget*, QAbstractItemModel*, QModelIndex const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemDelegate::updateEditorGeometry(QWidget*, QStyleOptionViewItem const&, QModelIndex const&) const</primary></indexterm>QAbstractItemDelegate::updateEditorGeometry(QWidget*, QStyleOptionViewItem const&, QModelIndex const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemDelegate::editorEvent(QEvent*, QAbstractItemModel*, QStyleOptionViewItem const&, QModelIndex const&)</primary></indexterm>QAbstractItemDelegate::editorEvent(QEvent*, QAbstractItemModel*, QStyleOptionViewItem const&, QModelIndex const&)</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QAbstractItemDelegate  class
is described by <XREF LINKEND="rtti-38826">
</PARA>
<!--classdata-->
<TABLE ID="rtti-38826">
<TITLE>typeinfo for QAbstractItemDelegate</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QAbstractItemDelegate</primary></indexterm>typeinfo name for QAbstractItemDelegate</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QObject</primary></indexterm>typeinfo for QObject</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QAbstractItemView</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QAbstractItemView class
is described by <XREF LINKEND="cls-39000-0">
</PARA>
<!--classdata-->
<TABLE id="cls-39000-0">
<TITLE>Primary vtable for QAbstractItemView</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QAbstractItemView</primary></indexterm>typeinfo for QAbstractItemView</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::metaObject() const</primary></indexterm>QAbstractItemView::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::qt_metacast(char const*)</primary></indexterm>QAbstractItemView::qt_metacast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::qt_metacall(QMetaObject::Call, int, void**)</primary></indexterm>QAbstractItemView::qt_metacall(QMetaObject::Call, int, void**)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::~QAbstractItemView()</primary></indexterm>QAbstractItemView::~QAbstractItemView()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::~QAbstractItemView()</primary></indexterm>QAbstractItemView::~QAbstractItemView()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::event(QEvent*)</primary></indexterm>QAbstractItemView::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::eventFilter(QObject*, QEvent*)</primary></indexterm>QObject::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::timerEvent(QTimerEvent*)</primary></indexterm>QAbstractItemView::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QEvent*)</primary></indexterm>QObject::customEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::devType() const</primary></indexterm>QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setVisible(bool)</primary></indexterm>QWidget::setVisible(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractScrollArea::sizeHint() const</primary></indexterm>QAbstractScrollArea::sizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractScrollArea::minimumSizeHint() const</primary></indexterm>QAbstractScrollArea::minimumSizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::heightForWidth(int) const</primary></indexterm>QWidget::heightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paintEngine() const</primary></indexterm>QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::mousePressEvent(QMouseEvent*)</primary></indexterm>QAbstractItemView::mousePressEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::mouseReleaseEvent(QMouseEvent*)</primary></indexterm>QAbstractItemView::mouseReleaseEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::mouseDoubleClickEvent(QMouseEvent*)</primary></indexterm>QAbstractItemView::mouseDoubleClickEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::mouseMoveEvent(QMouseEvent*)</primary></indexterm>QAbstractItemView::mouseMoveEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractScrollArea::wheelEvent(QWheelEvent*)</primary></indexterm>QAbstractScrollArea::wheelEvent(QWheelEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::keyPressEvent(QKeyEvent*)</primary></indexterm>QAbstractItemView::keyPressEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyReleaseEvent(QKeyEvent*)</primary></indexterm>QWidget::keyReleaseEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::focusInEvent(QFocusEvent*)</primary></indexterm>QAbstractItemView::focusInEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::focusOutEvent(QFocusEvent*)</primary></indexterm>QAbstractItemView::focusOutEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enterEvent(QEvent*)</primary></indexterm>QWidget::enterEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::leaveEvent(QEvent*)</primary></indexterm>QWidget::leaveEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractScrollArea::paintEvent(QPaintEvent*)</primary></indexterm>QAbstractScrollArea::paintEvent(QPaintEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::moveEvent(QMoveEvent*)</primary></indexterm>QWidget::moveEvent(QMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::resizeEvent(QResizeEvent*)</primary></indexterm>QAbstractItemView::resizeEvent(QResizeEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::closeEvent(QCloseEvent*)</primary></indexterm>QWidget::closeEvent(QCloseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;33&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractScrollArea::contextMenuEvent(QContextMenuEvent*)</primary></indexterm>QAbstractScrollArea::contextMenuEvent(QContextMenuEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;34&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::tabletEvent(QTabletEvent*)</primary></indexterm>QWidget::tabletEvent(QTabletEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;35&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::actionEvent(QActionEvent*)</primary></indexterm>QWidget::actionEvent(QActionEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;36&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::dragEnterEvent(QDragEnterEvent*)</primary></indexterm>QAbstractItemView::dragEnterEvent(QDragEnterEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;37&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::dragMoveEvent(QDragMoveEvent*)</primary></indexterm>QAbstractItemView::dragMoveEvent(QDragMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;38&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::dragLeaveEvent(QDragLeaveEvent*)</primary></indexterm>QAbstractItemView::dragLeaveEvent(QDragLeaveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;39&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::dropEvent(QDropEvent*)</primary></indexterm>QAbstractItemView::dropEvent(QDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;40&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showEvent(QShowEvent*)</primary></indexterm>QWidget::showEvent(QShowEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;41&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::hideEvent(QHideEvent*)</primary></indexterm>QWidget::hideEvent(QHideEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;42&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::x11Event(_XEvent*)</primary></indexterm>QWidget::x11Event(_XEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;43&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::changeEvent(QEvent*)</primary></indexterm>QFrame::changeEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;44&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;45&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::inputMethodEvent(QInputMethodEvent*)</primary></indexterm>QWidget::inputMethodEvent(QInputMethodEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;46&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::inputMethodQuery(Qt::InputMethodQuery) const</primary></indexterm>QWidget::inputMethodQuery(Qt::InputMethodQuery) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;47&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusNextPrevChild(bool)</primary></indexterm>QWidget::focusNextPrevChild(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;48&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::styleChange(QStyle&)</primary></indexterm>QWidget::styleChange(QStyle&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;49&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enabledChange(bool)</primary></indexterm>QWidget::enabledChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;50&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paletteChange(QPalette const&)</primary></indexterm>QWidget::paletteChange(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;51&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::fontChange(QFont const&)</primary></indexterm>QWidget::fontChange(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;52&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::windowActivationChange(bool)</primary></indexterm>QWidget::windowActivationChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;53&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::languageChange()</primary></indexterm>QWidget::languageChange()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;54&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::viewportEvent(QEvent*)</primary></indexterm>QAbstractItemView::viewportEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;55&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractScrollArea::scrollContentsBy(int, int)</primary></indexterm>QAbstractScrollArea::scrollContentsBy(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;56&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::setModel(QAbstractItemModel*)</primary></indexterm>QAbstractItemView::setModel(QAbstractItemModel*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;57&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::setSelectionModel(QItemSelectionModel*)</primary></indexterm>QAbstractItemView::setSelectionModel(QItemSelectionModel*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;58&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::keyboardSearch(QString const&)</primary></indexterm>QAbstractItemView::keyboardSearch(QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;59&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;60&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;61&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;62&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::sizeHintForRow(int) const</primary></indexterm>QAbstractItemView::sizeHintForRow(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;63&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::sizeHintForColumn(int) const</primary></indexterm>QAbstractItemView::sizeHintForColumn(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;64&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::reset()</primary></indexterm>QAbstractItemView::reset()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;65&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::setRootIndex(QModelIndex const&)</primary></indexterm>QAbstractItemView::setRootIndex(QModelIndex const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;66&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::doItemsLayout()</primary></indexterm>QAbstractItemView::doItemsLayout()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;67&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::selectAll()</primary></indexterm>QAbstractItemView::selectAll()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;68&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::dataChanged(QModelIndex const&, QModelIndex const&)</primary></indexterm>QAbstractItemView::dataChanged(QModelIndex const&, QModelIndex const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;69&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::rowsInserted(QModelIndex const&, int, int)</primary></indexterm>QAbstractItemView::rowsInserted(QModelIndex const&, int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;70&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::rowsAboutToBeRemoved(QModelIndex const&, int, int)</primary></indexterm>QAbstractItemView::rowsAboutToBeRemoved(QModelIndex const&, int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;71&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::selectionChanged(QItemSelection const&, QItemSelection const&)</primary></indexterm>QAbstractItemView::selectionChanged(QItemSelection const&, QItemSelection const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;72&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::currentChanged(QModelIndex const&, QModelIndex const&)</primary></indexterm>QAbstractItemView::currentChanged(QModelIndex const&, QModelIndex const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;73&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::updateEditorData()</primary></indexterm>QAbstractItemView::updateEditorData()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;74&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::updateEditorGeometries()</primary></indexterm>QAbstractItemView::updateEditorGeometries()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;75&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::updateGeometries()</primary></indexterm>QAbstractItemView::updateGeometries()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;76&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::verticalScrollbarAction(int)</primary></indexterm>QAbstractItemView::verticalScrollbarAction(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;77&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::horizontalScrollbarAction(int)</primary></indexterm>QAbstractItemView::horizontalScrollbarAction(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;78&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::verticalScrollbarValueChanged(int)</primary></indexterm>QAbstractItemView::verticalScrollbarValueChanged(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;79&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::horizontalScrollbarValueChanged(int)</primary></indexterm>QAbstractItemView::horizontalScrollbarValueChanged(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;80&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::closeEditor(QWidget*, QAbstractItemDelegate::EndEditHint)</primary></indexterm>QAbstractItemView::closeEditor(QWidget*, QAbstractItemDelegate::EndEditHint)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;81&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::commitData(QWidget*)</primary></indexterm>QAbstractItemView::commitData(QWidget*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;82&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::editorDestroyed(QObject*)</primary></indexterm>QAbstractItemView::editorDestroyed(QObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;83&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;84&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;85&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;86&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;87&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;88&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;89&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::selectedIndexes() const</primary></indexterm>QAbstractItemView::selectedIndexes() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;90&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::edit(QModelIndex const&, QAbstractItemView::EditTrigger, QEvent*)</primary></indexterm>QAbstractItemView::edit(QModelIndex const&, QAbstractItemView::EditTrigger, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;91&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::selectionCommand(QModelIndex const&, QEvent const*) const</primary></indexterm>QAbstractItemView::selectionCommand(QModelIndex const&, QEvent const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;92&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::startDrag(QFlags&lt;Qt::DropAction&gt;)</primary></indexterm>QAbstractItemView::startDrag(QFlags&lt;Qt::DropAction&gt;)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;93&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::viewOptions() const</primary></indexterm>QAbstractItemView::viewOptions() const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--classdata-->
<TABLE id="cls-39000-1">
<TITLE>Secondary vtable for QAbstractItemView</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>-16</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QAbstractItemView</primary></indexterm>typeinfo for QAbstractItemView</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QAbstractItemView::~QAbstractItemView()</primary></indexterm>non-virtual thunk to QAbstractItemView::~QAbstractItemView()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QAbstractItemView::~QAbstractItemView()</primary></indexterm>non-virtual thunk to QAbstractItemView::~QAbstractItemView()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::devType() const</primary></indexterm>non-virtual thunk to QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::paintEngine() const</primary></indexterm>non-virtual thunk to QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QAbstractItemView  class
is described by <XREF LINKEND="rtti-38795">
</PARA>
<!--classdata-->
<TABLE ID="rtti-38795">
<TITLE>typeinfo for QAbstractItemView</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QAbstractItemView</primary></indexterm>typeinfo name for QAbstractItemView</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QAbstractScrollArea</primary></indexterm>typeinfo for QAbstractScrollArea</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QStringListModel</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QStringListModel class
is described by <XREF LINKEND="cls-38998-0">
</PARA>
<!--classdata-->
<TABLE id="cls-38998-0">
<TITLE>Primary vtable for QStringListModel</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QStringListModel</primary></indexterm>typeinfo for QStringListModel</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStringListModel::metaObject() const</primary></indexterm>QStringListModel::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStringListModel::qt_metacast(char const*)</primary></indexterm>QStringListModel::qt_metacast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStringListModel::qt_metacall(QMetaObject::Call, int, void**)</primary></indexterm>QStringListModel::qt_metacall(QMetaObject::Call, int, void**)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStringListModel::~QStringListModel()</primary></indexterm>QStringListModel::~QStringListModel()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStringListModel::~QStringListModel()</primary></indexterm>QStringListModel::~QStringListModel()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::event(QEvent*)</primary></indexterm>QObject::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::eventFilter(QObject*, QEvent*)</primary></indexterm>QObject::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QEvent*)</primary></indexterm>QObject::customEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractListModel::index(int, int, QModelIndex const&) const</primary></indexterm>QAbstractListModel::index(int, int, QModelIndex const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractListModel::parent(QModelIndex const&) const</primary></indexterm>QAbstractListModel::parent(QModelIndex const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStringListModel::rowCount(QModelIndex const&) const</primary></indexterm>QStringListModel::rowCount(QModelIndex const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractListModel::columnCount(QModelIndex const&) const</primary></indexterm>QAbstractListModel::columnCount(QModelIndex const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractListModel::hasChildren(QModelIndex const&) const</primary></indexterm>QAbstractListModel::hasChildren(QModelIndex const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStringListModel::data(QModelIndex const&, int) const</primary></indexterm>QStringListModel::data(QModelIndex const&, int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStringListModel::setData(QModelIndex const&, QVariant const&, int)</primary></indexterm>QStringListModel::setData(QModelIndex const&, QVariant const&, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemModel::headerData(int, Qt::Orientation, int) const</primary></indexterm>QAbstractItemModel::headerData(int, Qt::Orientation, int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemModel::setHeaderData(int, Qt::Orientation, QVariant const&, int)</primary></indexterm>QAbstractItemModel::setHeaderData(int, Qt::Orientation, QVariant const&, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemModel::itemData(QModelIndex const&) const</primary></indexterm>QAbstractItemModel::itemData(QModelIndex const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemModel::setItemData(QModelIndex const&, QMap&lt;int, QVariant&gt; const&)</primary></indexterm>QAbstractItemModel::setItemData(QModelIndex const&, QMap&lt;int, QVariant&gt; const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemModel::mimeTypes() const</primary></indexterm>QAbstractItemModel::mimeTypes() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemModel::mimeData(QList&lt;QModelIndex&gt; const&) const</primary></indexterm>QAbstractItemModel::mimeData(QList&lt;QModelIndex&gt; const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractListModel::dropMimeData(QMimeData const*, Qt::DropAction, int, int, QModelIndex const&)</primary></indexterm>QAbstractListModel::dropMimeData(QMimeData const*, Qt::DropAction, int, int, QModelIndex const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemModel::supportedDropActions() const</primary></indexterm>QAbstractItemModel::supportedDropActions() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStringListModel::insertRows(int, int, QModelIndex const&)</primary></indexterm>QStringListModel::insertRows(int, int, QModelIndex const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemModel::insertColumns(int, int, QModelIndex const&)</primary></indexterm>QAbstractItemModel::insertColumns(int, int, QModelIndex const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStringListModel::removeRows(int, int, QModelIndex const&)</primary></indexterm>QStringListModel::removeRows(int, int, QModelIndex const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemModel::removeColumns(int, int, QModelIndex const&)</primary></indexterm>QAbstractItemModel::removeColumns(int, int, QModelIndex const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemModel::fetchMore(QModelIndex const&)</primary></indexterm>QAbstractItemModel::fetchMore(QModelIndex const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemModel::canFetchMore(QModelIndex const&) const</primary></indexterm>QAbstractItemModel::canFetchMore(QModelIndex const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;33&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStringListModel::flags(QModelIndex const&) const</primary></indexterm>QStringListModel::flags(QModelIndex const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;34&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStringListModel::sort(int, Qt::SortOrder)</primary></indexterm>QStringListModel::sort(int, Qt::SortOrder)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;35&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemModel::buddy(QModelIndex const&) const</primary></indexterm>QAbstractItemModel::buddy(QModelIndex const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;36&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemModel::match(QModelIndex const&, int, QVariant const&, int, QFlags&lt;Qt::MatchFlag&gt;) const</primary></indexterm>QAbstractItemModel::match(QModelIndex const&, int, QVariant const&, int, QFlags&lt;Qt::MatchFlag&gt;) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;37&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemModel::span(QModelIndex const&) const</primary></indexterm>QAbstractItemModel::span(QModelIndex const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;38&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemModel::submit()</primary></indexterm>QAbstractItemModel::submit()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;39&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemModel::revert()</primary></indexterm>QAbstractItemModel::revert()</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QStringListModel  class
is described by <XREF LINKEND="rtti-38793">
</PARA>
<!--classdata-->
<TABLE ID="rtti-38793">
<TITLE>typeinfo for QStringListModel</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QStringListModel</primary></indexterm>typeinfo name for QStringListModel</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QAbstractListModel</primary></indexterm>typeinfo for QAbstractListModel</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QListView</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QListView class
is described by <XREF LINKEND="cls-39080-0">
</PARA>
<!--classdata-->
<TABLE id="cls-39080-0">
<TITLE>Primary vtable for QListView</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QListView</primary></indexterm>typeinfo for QListView</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListView::metaObject() const</primary></indexterm>QListView::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListView::qt_metacast(char const*)</primary></indexterm>QListView::qt_metacast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListView::qt_metacall(QMetaObject::Call, int, void**)</primary></indexterm>QListView::qt_metacall(QMetaObject::Call, int, void**)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListView::~QListView()</primary></indexterm>QListView::~QListView()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListView::~QListView()</primary></indexterm>QListView::~QListView()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListView::event(QEvent*)</primary></indexterm>QListView::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::eventFilter(QObject*, QEvent*)</primary></indexterm>QObject::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListView::timerEvent(QTimerEvent*)</primary></indexterm>QListView::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QEvent*)</primary></indexterm>QObject::customEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::devType() const</primary></indexterm>QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setVisible(bool)</primary></indexterm>QWidget::setVisible(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractScrollArea::sizeHint() const</primary></indexterm>QAbstractScrollArea::sizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractScrollArea::minimumSizeHint() const</primary></indexterm>QAbstractScrollArea::minimumSizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::heightForWidth(int) const</primary></indexterm>QWidget::heightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paintEngine() const</primary></indexterm>QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::mousePressEvent(QMouseEvent*)</primary></indexterm>QAbstractItemView::mousePressEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListView::mouseReleaseEvent(QMouseEvent*)</primary></indexterm>QListView::mouseReleaseEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::mouseDoubleClickEvent(QMouseEvent*)</primary></indexterm>QAbstractItemView::mouseDoubleClickEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListView::mouseMoveEvent(QMouseEvent*)</primary></indexterm>QListView::mouseMoveEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractScrollArea::wheelEvent(QWheelEvent*)</primary></indexterm>QAbstractScrollArea::wheelEvent(QWheelEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::keyPressEvent(QKeyEvent*)</primary></indexterm>QAbstractItemView::keyPressEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyReleaseEvent(QKeyEvent*)</primary></indexterm>QWidget::keyReleaseEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::focusInEvent(QFocusEvent*)</primary></indexterm>QAbstractItemView::focusInEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::focusOutEvent(QFocusEvent*)</primary></indexterm>QAbstractItemView::focusOutEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enterEvent(QEvent*)</primary></indexterm>QWidget::enterEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::leaveEvent(QEvent*)</primary></indexterm>QWidget::leaveEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListView::paintEvent(QPaintEvent*)</primary></indexterm>QListView::paintEvent(QPaintEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::moveEvent(QMoveEvent*)</primary></indexterm>QWidget::moveEvent(QMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListView::resizeEvent(QResizeEvent*)</primary></indexterm>QListView::resizeEvent(QResizeEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::closeEvent(QCloseEvent*)</primary></indexterm>QWidget::closeEvent(QCloseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;33&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractScrollArea::contextMenuEvent(QContextMenuEvent*)</primary></indexterm>QAbstractScrollArea::contextMenuEvent(QContextMenuEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;34&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::tabletEvent(QTabletEvent*)</primary></indexterm>QWidget::tabletEvent(QTabletEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;35&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::actionEvent(QActionEvent*)</primary></indexterm>QWidget::actionEvent(QActionEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;36&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::dragEnterEvent(QDragEnterEvent*)</primary></indexterm>QAbstractItemView::dragEnterEvent(QDragEnterEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;37&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListView::dragMoveEvent(QDragMoveEvent*)</primary></indexterm>QListView::dragMoveEvent(QDragMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;38&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListView::dragLeaveEvent(QDragLeaveEvent*)</primary></indexterm>QListView::dragLeaveEvent(QDragLeaveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;39&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListView::dropEvent(QDropEvent*)</primary></indexterm>QListView::dropEvent(QDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;40&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showEvent(QShowEvent*)</primary></indexterm>QWidget::showEvent(QShowEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;41&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::hideEvent(QHideEvent*)</primary></indexterm>QWidget::hideEvent(QHideEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;42&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::x11Event(_XEvent*)</primary></indexterm>QWidget::x11Event(_XEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;43&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::changeEvent(QEvent*)</primary></indexterm>QFrame::changeEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;44&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;45&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::inputMethodEvent(QInputMethodEvent*)</primary></indexterm>QWidget::inputMethodEvent(QInputMethodEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;46&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::inputMethodQuery(Qt::InputMethodQuery) const</primary></indexterm>QWidget::inputMethodQuery(Qt::InputMethodQuery) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;47&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusNextPrevChild(bool)</primary></indexterm>QWidget::focusNextPrevChild(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;48&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::styleChange(QStyle&)</primary></indexterm>QWidget::styleChange(QStyle&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;49&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enabledChange(bool)</primary></indexterm>QWidget::enabledChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;50&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paletteChange(QPalette const&)</primary></indexterm>QWidget::paletteChange(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;51&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::fontChange(QFont const&)</primary></indexterm>QWidget::fontChange(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;52&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::windowActivationChange(bool)</primary></indexterm>QWidget::windowActivationChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;53&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::languageChange()</primary></indexterm>QWidget::languageChange()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;54&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::viewportEvent(QEvent*)</primary></indexterm>QAbstractItemView::viewportEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;55&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListView::scrollContentsBy(int, int)</primary></indexterm>QListView::scrollContentsBy(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;56&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::setModel(QAbstractItemModel*)</primary></indexterm>QAbstractItemView::setModel(QAbstractItemModel*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;57&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::setSelectionModel(QItemSelectionModel*)</primary></indexterm>QAbstractItemView::setSelectionModel(QItemSelectionModel*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;58&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::keyboardSearch(QString const&)</primary></indexterm>QAbstractItemView::keyboardSearch(QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;59&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListView::visualRect(QModelIndex const&) const</primary></indexterm>QListView::visualRect(QModelIndex const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;60&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListView::scrollTo(QModelIndex const&, QAbstractItemView::ScrollHint)</primary></indexterm>QListView::scrollTo(QModelIndex const&, QAbstractItemView::ScrollHint)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;61&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListView::indexAt(QPoint const&) const</primary></indexterm>QListView::indexAt(QPoint const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;62&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::sizeHintForRow(int) const</primary></indexterm>QAbstractItemView::sizeHintForRow(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;63&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::sizeHintForColumn(int) const</primary></indexterm>QAbstractItemView::sizeHintForColumn(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;64&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListView::reset()</primary></indexterm>QListView::reset()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;65&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListView::setRootIndex(QModelIndex const&)</primary></indexterm>QListView::setRootIndex(QModelIndex const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;66&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListView::doItemsLayout()</primary></indexterm>QListView::doItemsLayout()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;67&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::selectAll()</primary></indexterm>QAbstractItemView::selectAll()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;68&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListView::dataChanged(QModelIndex const&, QModelIndex const&)</primary></indexterm>QListView::dataChanged(QModelIndex const&, QModelIndex const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;69&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListView::rowsInserted(QModelIndex const&, int, int)</primary></indexterm>QListView::rowsInserted(QModelIndex const&, int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;70&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListView::rowsAboutToBeRemoved(QModelIndex const&, int, int)</primary></indexterm>QListView::rowsAboutToBeRemoved(QModelIndex const&, int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;71&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::selectionChanged(QItemSelection const&, QItemSelection const&)</primary></indexterm>QAbstractItemView::selectionChanged(QItemSelection const&, QItemSelection const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;72&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::currentChanged(QModelIndex const&, QModelIndex const&)</primary></indexterm>QAbstractItemView::currentChanged(QModelIndex const&, QModelIndex const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;73&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::updateEditorData()</primary></indexterm>QAbstractItemView::updateEditorData()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;74&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::updateEditorGeometries()</primary></indexterm>QAbstractItemView::updateEditorGeometries()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;75&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListView::updateGeometries()</primary></indexterm>QListView::updateGeometries()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;76&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::verticalScrollbarAction(int)</primary></indexterm>QAbstractItemView::verticalScrollbarAction(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;77&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::horizontalScrollbarAction(int)</primary></indexterm>QAbstractItemView::horizontalScrollbarAction(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;78&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::verticalScrollbarValueChanged(int)</primary></indexterm>QAbstractItemView::verticalScrollbarValueChanged(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;79&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::horizontalScrollbarValueChanged(int)</primary></indexterm>QAbstractItemView::horizontalScrollbarValueChanged(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;80&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::closeEditor(QWidget*, QAbstractItemDelegate::EndEditHint)</primary></indexterm>QAbstractItemView::closeEditor(QWidget*, QAbstractItemDelegate::EndEditHint)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;81&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::commitData(QWidget*)</primary></indexterm>QAbstractItemView::commitData(QWidget*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;82&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::editorDestroyed(QObject*)</primary></indexterm>QAbstractItemView::editorDestroyed(QObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;83&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListView::moveCursor(QAbstractItemView::CursorAction, QFlags&lt;Qt::KeyboardModifier&gt;)</primary></indexterm>QListView::moveCursor(QAbstractItemView::CursorAction, QFlags&lt;Qt::KeyboardModifier&gt;)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;84&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListView::horizontalOffset() const</primary></indexterm>QListView::horizontalOffset() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;85&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListView::verticalOffset() const</primary></indexterm>QListView::verticalOffset() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;86&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListView::isIndexHidden(QModelIndex const&) const</primary></indexterm>QListView::isIndexHidden(QModelIndex const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;87&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListView::setSelection(QRect const&, QFlags&lt;QItemSelectionModel::SelectionFlag&gt;)</primary></indexterm>QListView::setSelection(QRect const&, QFlags&lt;QItemSelectionModel::SelectionFlag&gt;)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;88&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListView::visualRegionForSelection(QItemSelection const&) const</primary></indexterm>QListView::visualRegionForSelection(QItemSelection const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;89&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListView::selectedIndexes() const</primary></indexterm>QListView::selectedIndexes() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;90&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::edit(QModelIndex const&, QAbstractItemView::EditTrigger, QEvent*)</primary></indexterm>QAbstractItemView::edit(QModelIndex const&, QAbstractItemView::EditTrigger, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;91&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::selectionCommand(QModelIndex const&, QEvent const*) const</primary></indexterm>QAbstractItemView::selectionCommand(QModelIndex const&, QEvent const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;92&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListView::startDrag(QFlags&lt;Qt::DropAction&gt;)</primary></indexterm>QListView::startDrag(QFlags&lt;Qt::DropAction&gt;)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;93&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListView::viewOptions() const</primary></indexterm>QListView::viewOptions() const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--classdata-->
<TABLE id="cls-39080-1">
<TITLE>Secondary vtable for QListView</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>-16</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QListView</primary></indexterm>typeinfo for QListView</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QListView::~QListView()</primary></indexterm>non-virtual thunk to QListView::~QListView()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QListView::~QListView()</primary></indexterm>non-virtual thunk to QListView::~QListView()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::devType() const</primary></indexterm>non-virtual thunk to QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::paintEngine() const</primary></indexterm>non-virtual thunk to QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QListView  class
is described by <XREF LINKEND="rtti-38875">
</PARA>
<!--classdata-->
<TABLE ID="rtti-38875">
<TITLE>typeinfo for QListView</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QListView</primary></indexterm>typeinfo name for QListView</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QAbstractItemView</primary></indexterm>typeinfo for QAbstractItemView</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QListWidgetItem</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QListWidgetItem class
is described by <XREF LINKEND="cls-38984-0">
</PARA>
<!--classdata-->
<TABLE id="cls-38984-0">
<TITLE>Primary vtable for QListWidgetItem</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QListWidgetItem</primary></indexterm>typeinfo for QListWidgetItem</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListWidgetItem::~QListWidgetItem()</primary></indexterm>QListWidgetItem::~QListWidgetItem()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListWidgetItem::~QListWidgetItem()</primary></indexterm>QListWidgetItem::~QListWidgetItem()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListWidgetItem::clone() const</primary></indexterm>QListWidgetItem::clone() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListWidgetItem::setBackgroundColor(QColor const&)</primary></indexterm>QListWidgetItem::setBackgroundColor(QColor const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListWidgetItem::data(int) const</primary></indexterm>QListWidgetItem::data(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListWidgetItem::setData(int, QVariant const&)</primary></indexterm>QListWidgetItem::setData(int, QVariant const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListWidgetItem::operator&lt;(QListWidgetItem const&) const</primary></indexterm>QListWidgetItem::operator&lt;(QListWidgetItem const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListWidgetItem::read(QDataStream&)</primary></indexterm>QListWidgetItem::read(QDataStream&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListWidgetItem::write(QDataStream&) const</primary></indexterm>QListWidgetItem::write(QDataStream&) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QListWidgetItem  class
is described by <XREF LINKEND="rtti-38779">
</PARA>
<!--classdata-->
<TABLE ID="rtti-38779">
<TITLE>typeinfo for QListWidgetItem</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__class_type_info</primary></indexterm>vtable for __cxxabiv1::__class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QListWidgetItem</primary></indexterm>typeinfo name for QListWidgetItem</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QListWidget</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QListWidget class
is described by <XREF LINKEND="cls-38914-0">
</PARA>
<!--classdata-->
<TABLE id="cls-38914-0">
<TITLE>Primary vtable for QListWidget</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QListWidget</primary></indexterm>typeinfo for QListWidget</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListWidget::metaObject() const</primary></indexterm>QListWidget::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListWidget::qt_metacast(char const*)</primary></indexterm>QListWidget::qt_metacast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListWidget::qt_metacall(QMetaObject::Call, int, void**)</primary></indexterm>QListWidget::qt_metacall(QMetaObject::Call, int, void**)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListWidget::~QListWidget()</primary></indexterm>QListWidget::~QListWidget()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListWidget::~QListWidget()</primary></indexterm>QListWidget::~QListWidget()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListWidget::event(QEvent*)</primary></indexterm>QListWidget::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::eventFilter(QObject*, QEvent*)</primary></indexterm>QObject::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListView::timerEvent(QTimerEvent*)</primary></indexterm>QListView::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QEvent*)</primary></indexterm>QObject::customEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::devType() const</primary></indexterm>QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setVisible(bool)</primary></indexterm>QWidget::setVisible(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractScrollArea::sizeHint() const</primary></indexterm>QAbstractScrollArea::sizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractScrollArea::minimumSizeHint() const</primary></indexterm>QAbstractScrollArea::minimumSizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::heightForWidth(int) const</primary></indexterm>QWidget::heightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paintEngine() const</primary></indexterm>QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::mousePressEvent(QMouseEvent*)</primary></indexterm>QAbstractItemView::mousePressEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListView::mouseReleaseEvent(QMouseEvent*)</primary></indexterm>QListView::mouseReleaseEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::mouseDoubleClickEvent(QMouseEvent*)</primary></indexterm>QAbstractItemView::mouseDoubleClickEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListView::mouseMoveEvent(QMouseEvent*)</primary></indexterm>QListView::mouseMoveEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractScrollArea::wheelEvent(QWheelEvent*)</primary></indexterm>QAbstractScrollArea::wheelEvent(QWheelEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::keyPressEvent(QKeyEvent*)</primary></indexterm>QAbstractItemView::keyPressEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyReleaseEvent(QKeyEvent*)</primary></indexterm>QWidget::keyReleaseEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::focusInEvent(QFocusEvent*)</primary></indexterm>QAbstractItemView::focusInEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::focusOutEvent(QFocusEvent*)</primary></indexterm>QAbstractItemView::focusOutEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enterEvent(QEvent*)</primary></indexterm>QWidget::enterEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::leaveEvent(QEvent*)</primary></indexterm>QWidget::leaveEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListView::paintEvent(QPaintEvent*)</primary></indexterm>QListView::paintEvent(QPaintEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::moveEvent(QMoveEvent*)</primary></indexterm>QWidget::moveEvent(QMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListView::resizeEvent(QResizeEvent*)</primary></indexterm>QListView::resizeEvent(QResizeEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::closeEvent(QCloseEvent*)</primary></indexterm>QWidget::closeEvent(QCloseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;33&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractScrollArea::contextMenuEvent(QContextMenuEvent*)</primary></indexterm>QAbstractScrollArea::contextMenuEvent(QContextMenuEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;34&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::tabletEvent(QTabletEvent*)</primary></indexterm>QWidget::tabletEvent(QTabletEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;35&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::actionEvent(QActionEvent*)</primary></indexterm>QWidget::actionEvent(QActionEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;36&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::dragEnterEvent(QDragEnterEvent*)</primary></indexterm>QAbstractItemView::dragEnterEvent(QDragEnterEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;37&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListView::dragMoveEvent(QDragMoveEvent*)</primary></indexterm>QListView::dragMoveEvent(QDragMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;38&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListView::dragLeaveEvent(QDragLeaveEvent*)</primary></indexterm>QListView::dragLeaveEvent(QDragLeaveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;39&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListView::dropEvent(QDropEvent*)</primary></indexterm>QListView::dropEvent(QDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;40&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showEvent(QShowEvent*)</primary></indexterm>QWidget::showEvent(QShowEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;41&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::hideEvent(QHideEvent*)</primary></indexterm>QWidget::hideEvent(QHideEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;42&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::x11Event(_XEvent*)</primary></indexterm>QWidget::x11Event(_XEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;43&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::changeEvent(QEvent*)</primary></indexterm>QFrame::changeEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;44&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;45&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::inputMethodEvent(QInputMethodEvent*)</primary></indexterm>QWidget::inputMethodEvent(QInputMethodEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;46&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::inputMethodQuery(Qt::InputMethodQuery) const</primary></indexterm>QWidget::inputMethodQuery(Qt::InputMethodQuery) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;47&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusNextPrevChild(bool)</primary></indexterm>QWidget::focusNextPrevChild(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;48&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::styleChange(QStyle&)</primary></indexterm>QWidget::styleChange(QStyle&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;49&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enabledChange(bool)</primary></indexterm>QWidget::enabledChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;50&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paletteChange(QPalette const&)</primary></indexterm>QWidget::paletteChange(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;51&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::fontChange(QFont const&)</primary></indexterm>QWidget::fontChange(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;52&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::windowActivationChange(bool)</primary></indexterm>QWidget::windowActivationChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;53&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::languageChange()</primary></indexterm>QWidget::languageChange()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;54&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::viewportEvent(QEvent*)</primary></indexterm>QAbstractItemView::viewportEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;55&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListView::scrollContentsBy(int, int)</primary></indexterm>QListView::scrollContentsBy(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;56&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListWidget::setModel(QAbstractItemModel*)</primary></indexterm>QListWidget::setModel(QAbstractItemModel*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;57&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::setSelectionModel(QItemSelectionModel*)</primary></indexterm>QAbstractItemView::setSelectionModel(QItemSelectionModel*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;58&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::keyboardSearch(QString const&)</primary></indexterm>QAbstractItemView::keyboardSearch(QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;59&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListView::visualRect(QModelIndex const&) const</primary></indexterm>QListView::visualRect(QModelIndex const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;60&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListView::scrollTo(QModelIndex const&, QAbstractItemView::ScrollHint)</primary></indexterm>QListView::scrollTo(QModelIndex const&, QAbstractItemView::ScrollHint)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;61&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListView::indexAt(QPoint const&) const</primary></indexterm>QListView::indexAt(QPoint const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;62&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::sizeHintForRow(int) const</primary></indexterm>QAbstractItemView::sizeHintForRow(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;63&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::sizeHintForColumn(int) const</primary></indexterm>QAbstractItemView::sizeHintForColumn(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;64&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListView::reset()</primary></indexterm>QListView::reset()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;65&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListView::setRootIndex(QModelIndex const&)</primary></indexterm>QListView::setRootIndex(QModelIndex const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;66&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListView::doItemsLayout()</primary></indexterm>QListView::doItemsLayout()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;67&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::selectAll()</primary></indexterm>QAbstractItemView::selectAll()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;68&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListView::dataChanged(QModelIndex const&, QModelIndex const&)</primary></indexterm>QListView::dataChanged(QModelIndex const&, QModelIndex const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;69&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListView::rowsInserted(QModelIndex const&, int, int)</primary></indexterm>QListView::rowsInserted(QModelIndex const&, int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;70&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListView::rowsAboutToBeRemoved(QModelIndex const&, int, int)</primary></indexterm>QListView::rowsAboutToBeRemoved(QModelIndex const&, int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;71&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::selectionChanged(QItemSelection const&, QItemSelection const&)</primary></indexterm>QAbstractItemView::selectionChanged(QItemSelection const&, QItemSelection const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;72&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::currentChanged(QModelIndex const&, QModelIndex const&)</primary></indexterm>QAbstractItemView::currentChanged(QModelIndex const&, QModelIndex const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;73&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::updateEditorData()</primary></indexterm>QAbstractItemView::updateEditorData()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;74&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::updateEditorGeometries()</primary></indexterm>QAbstractItemView::updateEditorGeometries()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;75&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListView::updateGeometries()</primary></indexterm>QListView::updateGeometries()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;76&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::verticalScrollbarAction(int)</primary></indexterm>QAbstractItemView::verticalScrollbarAction(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;77&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::horizontalScrollbarAction(int)</primary></indexterm>QAbstractItemView::horizontalScrollbarAction(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;78&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::verticalScrollbarValueChanged(int)</primary></indexterm>QAbstractItemView::verticalScrollbarValueChanged(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;79&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::horizontalScrollbarValueChanged(int)</primary></indexterm>QAbstractItemView::horizontalScrollbarValueChanged(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;80&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::closeEditor(QWidget*, QAbstractItemDelegate::EndEditHint)</primary></indexterm>QAbstractItemView::closeEditor(QWidget*, QAbstractItemDelegate::EndEditHint)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;81&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::commitData(QWidget*)</primary></indexterm>QAbstractItemView::commitData(QWidget*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;82&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::editorDestroyed(QObject*)</primary></indexterm>QAbstractItemView::editorDestroyed(QObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;83&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListView::moveCursor(QAbstractItemView::CursorAction, QFlags&lt;Qt::KeyboardModifier&gt;)</primary></indexterm>QListView::moveCursor(QAbstractItemView::CursorAction, QFlags&lt;Qt::KeyboardModifier&gt;)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;84&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListView::horizontalOffset() const</primary></indexterm>QListView::horizontalOffset() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;85&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListView::verticalOffset() const</primary></indexterm>QListView::verticalOffset() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;86&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListView::isIndexHidden(QModelIndex const&) const</primary></indexterm>QListView::isIndexHidden(QModelIndex const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;87&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListView::setSelection(QRect const&, QFlags&lt;QItemSelectionModel::SelectionFlag&gt;)</primary></indexterm>QListView::setSelection(QRect const&, QFlags&lt;QItemSelectionModel::SelectionFlag&gt;)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;88&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListView::visualRegionForSelection(QItemSelection const&) const</primary></indexterm>QListView::visualRegionForSelection(QItemSelection const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;89&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListView::selectedIndexes() const</primary></indexterm>QListView::selectedIndexes() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;90&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::edit(QModelIndex const&, QAbstractItemView::EditTrigger, QEvent*)</primary></indexterm>QAbstractItemView::edit(QModelIndex const&, QAbstractItemView::EditTrigger, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;91&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::selectionCommand(QModelIndex const&, QEvent const*) const</primary></indexterm>QAbstractItemView::selectionCommand(QModelIndex const&, QEvent const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;92&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListView::startDrag(QFlags&lt;Qt::DropAction&gt;)</primary></indexterm>QListView::startDrag(QFlags&lt;Qt::DropAction&gt;)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;93&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListView::viewOptions() const</primary></indexterm>QListView::viewOptions() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;94&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListWidget::mimeTypes() const</primary></indexterm>QListWidget::mimeTypes() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;95&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListWidget::mimeData(QList&lt;QListWidgetItem*&gt;) const</primary></indexterm>QListWidget::mimeData(QList&lt;QListWidgetItem*&gt;) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;96&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListWidget::dropMimeData(int, QMimeData const*, Qt::DropAction)</primary></indexterm>QListWidget::dropMimeData(int, QMimeData const*, Qt::DropAction)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;97&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListWidget::supportedDropActions() const</primary></indexterm>QListWidget::supportedDropActions() const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--classdata-->
<TABLE id="cls-38914-1">
<TITLE>Secondary vtable for QListWidget</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>-16</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QListWidget</primary></indexterm>typeinfo for QListWidget</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QListWidget::~QListWidget()</primary></indexterm>non-virtual thunk to QListWidget::~QListWidget()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QListWidget::~QListWidget()</primary></indexterm>non-virtual thunk to QListWidget::~QListWidget()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::devType() const</primary></indexterm>non-virtual thunk to QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::paintEngine() const</primary></indexterm>non-virtual thunk to QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QListWidget  class
is described by <XREF LINKEND="rtti-38709">
</PARA>
<!--classdata-->
<TABLE ID="rtti-38709">
<TITLE>typeinfo for QListWidget</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QListWidget</primary></indexterm>typeinfo name for QListWidget</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QListView</primary></indexterm>typeinfo for QListView</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QFileIconProvider</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QFileIconProvider class
is described by <XREF LINKEND="cls-39006-0">
</PARA>
<!--classdata-->
<TABLE id="cls-39006-0">
<TITLE>Primary vtable for QFileIconProvider</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QFileIconProvider</primary></indexterm>typeinfo for QFileIconProvider</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFileIconProvider::~QFileIconProvider()</primary></indexterm>QFileIconProvider::~QFileIconProvider()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFileIconProvider::~QFileIconProvider()</primary></indexterm>QFileIconProvider::~QFileIconProvider()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFileIconProvider::icon(QFileIconProvider::IconType) const</primary></indexterm>QFileIconProvider::icon(QFileIconProvider::IconType) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFileIconProvider::icon(QFileInfo const&) const</primary></indexterm>QFileIconProvider::icon(QFileInfo const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFileIconProvider::type(QFileInfo const&) const</primary></indexterm>QFileIconProvider::type(QFileInfo const&) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QFileIconProvider  class
is described by <XREF LINKEND="rtti-38801">
</PARA>
<!--classdata-->
<TABLE ID="rtti-38801">
<TITLE>typeinfo for QFileIconProvider</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__class_type_info</primary></indexterm>vtable for __cxxabiv1::__class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QFileIconProvider</primary></indexterm>typeinfo name for QFileIconProvider</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QDirModel</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QDirModel class
is described by <XREF LINKEND="cls-39076-0">
</PARA>
<!--classdata-->
<TABLE id="cls-39076-0">
<TITLE>Primary vtable for QDirModel</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QDirModel</primary></indexterm>typeinfo for QDirModel</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDirModel::metaObject() const</primary></indexterm>QDirModel::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDirModel::qt_metacast(char const*)</primary></indexterm>QDirModel::qt_metacast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDirModel::qt_metacall(QMetaObject::Call, int, void**)</primary></indexterm>QDirModel::qt_metacall(QMetaObject::Call, int, void**)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDirModel::~QDirModel()</primary></indexterm>QDirModel::~QDirModel()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDirModel::~QDirModel()</primary></indexterm>QDirModel::~QDirModel()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::event(QEvent*)</primary></indexterm>QObject::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::eventFilter(QObject*, QEvent*)</primary></indexterm>QObject::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QEvent*)</primary></indexterm>QObject::customEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDirModel::index(int, int, QModelIndex const&) const</primary></indexterm>QDirModel::index(int, int, QModelIndex const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDirModel::parent(QModelIndex const&) const</primary></indexterm>QDirModel::parent(QModelIndex const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDirModel::rowCount(QModelIndex const&) const</primary></indexterm>QDirModel::rowCount(QModelIndex const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDirModel::columnCount(QModelIndex const&) const</primary></indexterm>QDirModel::columnCount(QModelIndex const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDirModel::hasChildren(QModelIndex const&) const</primary></indexterm>QDirModel::hasChildren(QModelIndex const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDirModel::data(QModelIndex const&, int) const</primary></indexterm>QDirModel::data(QModelIndex const&, int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDirModel::setData(QModelIndex const&, QVariant const&, int)</primary></indexterm>QDirModel::setData(QModelIndex const&, QVariant const&, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDirModel::headerData(int, Qt::Orientation, int) const</primary></indexterm>QDirModel::headerData(int, Qt::Orientation, int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemModel::setHeaderData(int, Qt::Orientation, QVariant const&, int)</primary></indexterm>QAbstractItemModel::setHeaderData(int, Qt::Orientation, QVariant const&, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemModel::itemData(QModelIndex const&) const</primary></indexterm>QAbstractItemModel::itemData(QModelIndex const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemModel::setItemData(QModelIndex const&, QMap&lt;int, QVariant&gt; const&)</primary></indexterm>QAbstractItemModel::setItemData(QModelIndex const&, QMap&lt;int, QVariant&gt; const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDirModel::mimeTypes() const</primary></indexterm>QDirModel::mimeTypes() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDirModel::mimeData(QList&lt;QModelIndex&gt; const&) const</primary></indexterm>QDirModel::mimeData(QList&lt;QModelIndex&gt; const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDirModel::dropMimeData(QMimeData const*, Qt::DropAction, int, int, QModelIndex const&)</primary></indexterm>QDirModel::dropMimeData(QMimeData const*, Qt::DropAction, int, int, QModelIndex const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDirModel::supportedDropActions() const</primary></indexterm>QDirModel::supportedDropActions() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemModel::insertRows(int, int, QModelIndex const&)</primary></indexterm>QAbstractItemModel::insertRows(int, int, QModelIndex const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemModel::insertColumns(int, int, QModelIndex const&)</primary></indexterm>QAbstractItemModel::insertColumns(int, int, QModelIndex const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemModel::removeRows(int, int, QModelIndex const&)</primary></indexterm>QAbstractItemModel::removeRows(int, int, QModelIndex const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemModel::removeColumns(int, int, QModelIndex const&)</primary></indexterm>QAbstractItemModel::removeColumns(int, int, QModelIndex const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemModel::fetchMore(QModelIndex const&)</primary></indexterm>QAbstractItemModel::fetchMore(QModelIndex const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemModel::canFetchMore(QModelIndex const&) const</primary></indexterm>QAbstractItemModel::canFetchMore(QModelIndex const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;33&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDirModel::flags(QModelIndex const&) const</primary></indexterm>QDirModel::flags(QModelIndex const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;34&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDirModel::sort(int, Qt::SortOrder)</primary></indexterm>QDirModel::sort(int, Qt::SortOrder)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;35&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemModel::buddy(QModelIndex const&) const</primary></indexterm>QAbstractItemModel::buddy(QModelIndex const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;36&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemModel::match(QModelIndex const&, int, QVariant const&, int, QFlags&lt;Qt::MatchFlag&gt;) const</primary></indexterm>QAbstractItemModel::match(QModelIndex const&, int, QVariant const&, int, QFlags&lt;Qt::MatchFlag&gt;) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;37&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemModel::span(QModelIndex const&) const</primary></indexterm>QAbstractItemModel::span(QModelIndex const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;38&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemModel::submit()</primary></indexterm>QAbstractItemModel::submit()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;39&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemModel::revert()</primary></indexterm>QAbstractItemModel::revert()</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QDirModel  class
is described by <XREF LINKEND="rtti-38871">
</PARA>
<!--classdata-->
<TABLE ID="rtti-38871">
<TITLE>typeinfo for QDirModel</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QDirModel</primary></indexterm>typeinfo name for QDirModel</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QAbstractItemModel</primary></indexterm>typeinfo for QAbstractItemModel</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QStandardItemModel</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QStandardItemModel class
is described by <XREF LINKEND="cls-39013-0">
</PARA>
<!--classdata-->
<TABLE id="cls-39013-0">
<TITLE>Primary vtable for QStandardItemModel</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QStandardItemModel</primary></indexterm>typeinfo for QStandardItemModel</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStandardItemModel::metaObject() const</primary></indexterm>QStandardItemModel::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStandardItemModel::qt_metacast(char const*)</primary></indexterm>QStandardItemModel::qt_metacast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStandardItemModel::qt_metacall(QMetaObject::Call, int, void**)</primary></indexterm>QStandardItemModel::qt_metacall(QMetaObject::Call, int, void**)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStandardItemModel::~QStandardItemModel()</primary></indexterm>QStandardItemModel::~QStandardItemModel()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStandardItemModel::~QStandardItemModel()</primary></indexterm>QStandardItemModel::~QStandardItemModel()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::event(QEvent*)</primary></indexterm>QObject::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::eventFilter(QObject*, QEvent*)</primary></indexterm>QObject::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QEvent*)</primary></indexterm>QObject::customEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStandardItemModel::index(int, int, QModelIndex const&) const</primary></indexterm>QStandardItemModel::index(int, int, QModelIndex const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStandardItemModel::parent(QModelIndex const&) const</primary></indexterm>QStandardItemModel::parent(QModelIndex const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStandardItemModel::rowCount(QModelIndex const&) const</primary></indexterm>QStandardItemModel::rowCount(QModelIndex const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStandardItemModel::columnCount(QModelIndex const&) const</primary></indexterm>QStandardItemModel::columnCount(QModelIndex const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStandardItemModel::hasChildren(QModelIndex const&) const</primary></indexterm>QStandardItemModel::hasChildren(QModelIndex const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStandardItemModel::data(QModelIndex const&, int) const</primary></indexterm>QStandardItemModel::data(QModelIndex const&, int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStandardItemModel::setData(QModelIndex const&, QVariant const&, int)</primary></indexterm>QStandardItemModel::setData(QModelIndex const&, QVariant const&, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStandardItemModel::headerData(int, Qt::Orientation, int) const</primary></indexterm>QStandardItemModel::headerData(int, Qt::Orientation, int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStandardItemModel::setHeaderData(int, Qt::Orientation, QVariant const&, int)</primary></indexterm>QStandardItemModel::setHeaderData(int, Qt::Orientation, QVariant const&, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemModel::itemData(QModelIndex const&) const</primary></indexterm>QAbstractItemModel::itemData(QModelIndex const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemModel::setItemData(QModelIndex const&, QMap&lt;int, QVariant&gt; const&)</primary></indexterm>QAbstractItemModel::setItemData(QModelIndex const&, QMap&lt;int, QVariant&gt; const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemModel::mimeTypes() const</primary></indexterm>QAbstractItemModel::mimeTypes() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemModel::mimeData(QList&lt;QModelIndex&gt; const&) const</primary></indexterm>QAbstractItemModel::mimeData(QList&lt;QModelIndex&gt; const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemModel::dropMimeData(QMimeData const*, Qt::DropAction, int, int, QModelIndex const&)</primary></indexterm>QAbstractItemModel::dropMimeData(QMimeData const*, Qt::DropAction, int, int, QModelIndex const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemModel::supportedDropActions() const</primary></indexterm>QAbstractItemModel::supportedDropActions() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStandardItemModel::insertRows(int, int, QModelIndex const&)</primary></indexterm>QStandardItemModel::insertRows(int, int, QModelIndex const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStandardItemModel::insertColumns(int, int, QModelIndex const&)</primary></indexterm>QStandardItemModel::insertColumns(int, int, QModelIndex const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStandardItemModel::removeRows(int, int, QModelIndex const&)</primary></indexterm>QStandardItemModel::removeRows(int, int, QModelIndex const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStandardItemModel::removeColumns(int, int, QModelIndex const&)</primary></indexterm>QStandardItemModel::removeColumns(int, int, QModelIndex const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemModel::fetchMore(QModelIndex const&)</primary></indexterm>QAbstractItemModel::fetchMore(QModelIndex const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemModel::canFetchMore(QModelIndex const&) const</primary></indexterm>QAbstractItemModel::canFetchMore(QModelIndex const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;33&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStandardItemModel::flags(QModelIndex const&) const</primary></indexterm>QStandardItemModel::flags(QModelIndex const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;34&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemModel::sort(int, Qt::SortOrder)</primary></indexterm>QAbstractItemModel::sort(int, Qt::SortOrder)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;35&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemModel::buddy(QModelIndex const&) const</primary></indexterm>QAbstractItemModel::buddy(QModelIndex const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;36&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemModel::match(QModelIndex const&, int, QVariant const&, int, QFlags&lt;Qt::MatchFlag&gt;) const</primary></indexterm>QAbstractItemModel::match(QModelIndex const&, int, QVariant const&, int, QFlags&lt;Qt::MatchFlag&gt;) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;37&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemModel::span(QModelIndex const&) const</primary></indexterm>QAbstractItemModel::span(QModelIndex const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;38&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemModel::submit()</primary></indexterm>QAbstractItemModel::submit()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;39&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemModel::revert()</primary></indexterm>QAbstractItemModel::revert()</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QStandardItemModel  class
is described by <XREF LINKEND="rtti-38808">
</PARA>
<!--classdata-->
<TABLE ID="rtti-38808">
<TITLE>typeinfo for QStandardItemModel</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QStandardItemModel</primary></indexterm>typeinfo name for QStandardItemModel</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QAbstractItemModel</primary></indexterm>typeinfo for QAbstractItemModel</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QAbstractProxyModel</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QAbstractProxyModel class
is described by <XREF LINKEND="cls-39017-0">
</PARA>
<!--classdata-->
<TABLE id="cls-39017-0">
<TITLE>Primary vtable for QAbstractProxyModel</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QAbstractProxyModel</primary></indexterm>typeinfo for QAbstractProxyModel</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractProxyModel::metaObject() const</primary></indexterm>QAbstractProxyModel::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractProxyModel::qt_metacast(char const*)</primary></indexterm>QAbstractProxyModel::qt_metacast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractProxyModel::qt_metacall(QMetaObject::Call, int, void**)</primary></indexterm>QAbstractProxyModel::qt_metacall(QMetaObject::Call, int, void**)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractProxyModel::~QAbstractProxyModel()</primary></indexterm>QAbstractProxyModel::~QAbstractProxyModel()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractProxyModel::~QAbstractProxyModel()</primary></indexterm>QAbstractProxyModel::~QAbstractProxyModel()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::event(QEvent*)</primary></indexterm>QObject::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::eventFilter(QObject*, QEvent*)</primary></indexterm>QObject::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QEvent*)</primary></indexterm>QObject::customEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemModel::hasChildren(QModelIndex const&) const</primary></indexterm>QAbstractItemModel::hasChildren(QModelIndex const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemModel::setData(QModelIndex const&, QVariant const&, int)</primary></indexterm>QAbstractItemModel::setData(QModelIndex const&, QVariant const&, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemModel::headerData(int, Qt::Orientation, int) const</primary></indexterm>QAbstractItemModel::headerData(int, Qt::Orientation, int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemModel::setHeaderData(int, Qt::Orientation, QVariant const&, int)</primary></indexterm>QAbstractItemModel::setHeaderData(int, Qt::Orientation, QVariant const&, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemModel::itemData(QModelIndex const&) const</primary></indexterm>QAbstractItemModel::itemData(QModelIndex const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemModel::setItemData(QModelIndex const&, QMap&lt;int, QVariant&gt; const&)</primary></indexterm>QAbstractItemModel::setItemData(QModelIndex const&, QMap&lt;int, QVariant&gt; const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemModel::mimeTypes() const</primary></indexterm>QAbstractItemModel::mimeTypes() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemModel::mimeData(QList&lt;QModelIndex&gt; const&) const</primary></indexterm>QAbstractItemModel::mimeData(QList&lt;QModelIndex&gt; const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemModel::dropMimeData(QMimeData const*, Qt::DropAction, int, int, QModelIndex const&)</primary></indexterm>QAbstractItemModel::dropMimeData(QMimeData const*, Qt::DropAction, int, int, QModelIndex const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemModel::supportedDropActions() const</primary></indexterm>QAbstractItemModel::supportedDropActions() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemModel::insertRows(int, int, QModelIndex const&)</primary></indexterm>QAbstractItemModel::insertRows(int, int, QModelIndex const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemModel::insertColumns(int, int, QModelIndex const&)</primary></indexterm>QAbstractItemModel::insertColumns(int, int, QModelIndex const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemModel::removeRows(int, int, QModelIndex const&)</primary></indexterm>QAbstractItemModel::removeRows(int, int, QModelIndex const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemModel::removeColumns(int, int, QModelIndex const&)</primary></indexterm>QAbstractItemModel::removeColumns(int, int, QModelIndex const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemModel::fetchMore(QModelIndex const&)</primary></indexterm>QAbstractItemModel::fetchMore(QModelIndex const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemModel::canFetchMore(QModelIndex const&) const</primary></indexterm>QAbstractItemModel::canFetchMore(QModelIndex const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;33&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemModel::flags(QModelIndex const&) const</primary></indexterm>QAbstractItemModel::flags(QModelIndex const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;34&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemModel::sort(int, Qt::SortOrder)</primary></indexterm>QAbstractItemModel::sort(int, Qt::SortOrder)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;35&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemModel::buddy(QModelIndex const&) const</primary></indexterm>QAbstractItemModel::buddy(QModelIndex const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;36&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemModel::match(QModelIndex const&, int, QVariant const&, int, QFlags&lt;Qt::MatchFlag&gt;) const</primary></indexterm>QAbstractItemModel::match(QModelIndex const&, int, QVariant const&, int, QFlags&lt;Qt::MatchFlag&gt;) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;37&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemModel::span(QModelIndex const&) const</primary></indexterm>QAbstractItemModel::span(QModelIndex const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;38&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractProxyModel::submit()</primary></indexterm>QAbstractProxyModel::submit()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;39&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractProxyModel::revert()</primary></indexterm>QAbstractProxyModel::revert()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;40&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractProxyModel::setSourceModel(QAbstractItemModel*)</primary></indexterm>QAbstractProxyModel::setSourceModel(QAbstractItemModel*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;41&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;42&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;43&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractProxyModel::mapSelectionToSource(QItemSelection const&) const</primary></indexterm>QAbstractProxyModel::mapSelectionToSource(QItemSelection const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;44&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractProxyModel::mapSelectionFromSource(QItemSelection const&) const</primary></indexterm>QAbstractProxyModel::mapSelectionFromSource(QItemSelection const&) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QAbstractProxyModel  class
is described by <XREF LINKEND="rtti-38812">
</PARA>
<!--classdata-->
<TABLE ID="rtti-38812">
<TITLE>typeinfo for QAbstractProxyModel</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QAbstractProxyModel</primary></indexterm>typeinfo name for QAbstractProxyModel</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QAbstractItemModel</primary></indexterm>typeinfo for QAbstractItemModel</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QSortFilterProxyModel</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QSortFilterProxyModel class
is described by <XREF LINKEND="cls-39032-0">
</PARA>
<!--classdata-->
<TABLE id="cls-39032-0">
<TITLE>Primary vtable for QSortFilterProxyModel</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QSortFilterProxyModel</primary></indexterm>typeinfo for QSortFilterProxyModel</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSortFilterProxyModel::metaObject() const</primary></indexterm>QSortFilterProxyModel::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSortFilterProxyModel::qt_metacast(char const*)</primary></indexterm>QSortFilterProxyModel::qt_metacast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSortFilterProxyModel::qt_metacall(QMetaObject::Call, int, void**)</primary></indexterm>QSortFilterProxyModel::qt_metacall(QMetaObject::Call, int, void**)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSortFilterProxyModel::~QSortFilterProxyModel()</primary></indexterm>QSortFilterProxyModel::~QSortFilterProxyModel()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSortFilterProxyModel::~QSortFilterProxyModel()</primary></indexterm>QSortFilterProxyModel::~QSortFilterProxyModel()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::event(QEvent*)</primary></indexterm>QObject::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::eventFilter(QObject*, QEvent*)</primary></indexterm>QObject::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QEvent*)</primary></indexterm>QObject::customEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSortFilterProxyModel::index(int, int, QModelIndex const&) const</primary></indexterm>QSortFilterProxyModel::index(int, int, QModelIndex const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSortFilterProxyModel::parent(QModelIndex const&) const</primary></indexterm>QSortFilterProxyModel::parent(QModelIndex const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSortFilterProxyModel::rowCount(QModelIndex const&) const</primary></indexterm>QSortFilterProxyModel::rowCount(QModelIndex const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSortFilterProxyModel::columnCount(QModelIndex const&) const</primary></indexterm>QSortFilterProxyModel::columnCount(QModelIndex const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSortFilterProxyModel::hasChildren(QModelIndex const&) const</primary></indexterm>QSortFilterProxyModel::hasChildren(QModelIndex const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSortFilterProxyModel::data(QModelIndex const&, int) const</primary></indexterm>QSortFilterProxyModel::data(QModelIndex const&, int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSortFilterProxyModel::setData(QModelIndex const&, QVariant const&, int)</primary></indexterm>QSortFilterProxyModel::setData(QModelIndex const&, QVariant const&, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSortFilterProxyModel::headerData(int, Qt::Orientation, int) const</primary></indexterm>QSortFilterProxyModel::headerData(int, Qt::Orientation, int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSortFilterProxyModel::setHeaderData(int, Qt::Orientation, QVariant const&, int)</primary></indexterm>QSortFilterProxyModel::setHeaderData(int, Qt::Orientation, QVariant const&, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemModel::itemData(QModelIndex const&) const</primary></indexterm>QAbstractItemModel::itemData(QModelIndex const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemModel::setItemData(QModelIndex const&, QMap&lt;int, QVariant&gt; const&)</primary></indexterm>QAbstractItemModel::setItemData(QModelIndex const&, QMap&lt;int, QVariant&gt; const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemModel::mimeTypes() const</primary></indexterm>QAbstractItemModel::mimeTypes() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSortFilterProxyModel::mimeData(QList&lt;QModelIndex&gt; const&) const</primary></indexterm>QSortFilterProxyModel::mimeData(QList&lt;QModelIndex&gt; const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSortFilterProxyModel::dropMimeData(QMimeData const*, Qt::DropAction, int, int, QModelIndex const&)</primary></indexterm>QSortFilterProxyModel::dropMimeData(QMimeData const*, Qt::DropAction, int, int, QModelIndex const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemModel::supportedDropActions() const</primary></indexterm>QAbstractItemModel::supportedDropActions() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSortFilterProxyModel::insertRows(int, int, QModelIndex const&)</primary></indexterm>QSortFilterProxyModel::insertRows(int, int, QModelIndex const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSortFilterProxyModel::insertColumns(int, int, QModelIndex const&)</primary></indexterm>QSortFilterProxyModel::insertColumns(int, int, QModelIndex const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSortFilterProxyModel::removeRows(int, int, QModelIndex const&)</primary></indexterm>QSortFilterProxyModel::removeRows(int, int, QModelIndex const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSortFilterProxyModel::removeColumns(int, int, QModelIndex const&)</primary></indexterm>QSortFilterProxyModel::removeColumns(int, int, QModelIndex const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSortFilterProxyModel::fetchMore(QModelIndex const&)</primary></indexterm>QSortFilterProxyModel::fetchMore(QModelIndex const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSortFilterProxyModel::canFetchMore(QModelIndex const&) const</primary></indexterm>QSortFilterProxyModel::canFetchMore(QModelIndex const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;33&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSortFilterProxyModel::flags(QModelIndex const&) const</primary></indexterm>QSortFilterProxyModel::flags(QModelIndex const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;34&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSortFilterProxyModel::sort(int, Qt::SortOrder)</primary></indexterm>QSortFilterProxyModel::sort(int, Qt::SortOrder)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;35&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSortFilterProxyModel::buddy(QModelIndex const&) const</primary></indexterm>QSortFilterProxyModel::buddy(QModelIndex const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;36&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSortFilterProxyModel::match(QModelIndex const&, int, QVariant const&, int, QFlags&lt;Qt::MatchFlag&gt;) const</primary></indexterm>QSortFilterProxyModel::match(QModelIndex const&, int, QVariant const&, int, QFlags&lt;Qt::MatchFlag&gt;) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;37&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSortFilterProxyModel::span(QModelIndex const&) const</primary></indexterm>QSortFilterProxyModel::span(QModelIndex const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;38&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractProxyModel::submit()</primary></indexterm>QAbstractProxyModel::submit()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;39&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractProxyModel::revert()</primary></indexterm>QAbstractProxyModel::revert()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;40&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSortFilterProxyModel::setSourceModel(QAbstractItemModel*)</primary></indexterm>QSortFilterProxyModel::setSourceModel(QAbstractItemModel*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;41&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSortFilterProxyModel::mapToSource(QModelIndex const&) const</primary></indexterm>QSortFilterProxyModel::mapToSource(QModelIndex const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;42&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSortFilterProxyModel::mapFromSource(QModelIndex const&) const</primary></indexterm>QSortFilterProxyModel::mapFromSource(QModelIndex const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;43&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSortFilterProxyModel::mapSelectionToSource(QItemSelection const&) const</primary></indexterm>QSortFilterProxyModel::mapSelectionToSource(QItemSelection const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;44&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSortFilterProxyModel::mapSelectionFromSource(QItemSelection const&) const</primary></indexterm>QSortFilterProxyModel::mapSelectionFromSource(QItemSelection const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;45&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSortFilterProxyModel::filterAcceptsRow(int, QModelIndex const&) const</primary></indexterm>QSortFilterProxyModel::filterAcceptsRow(int, QModelIndex const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;46&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSortFilterProxyModel::filterAcceptsColumn(int, QModelIndex const&) const</primary></indexterm>QSortFilterProxyModel::filterAcceptsColumn(int, QModelIndex const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;47&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSortFilterProxyModel::lessThan(QModelIndex const&, QModelIndex const&) const</primary></indexterm>QSortFilterProxyModel::lessThan(QModelIndex const&, QModelIndex const&) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QSortFilterProxyModel  class
is described by <XREF LINKEND="rtti-38827">
</PARA>
<!--classdata-->
<TABLE ID="rtti-38827">
<TITLE>typeinfo for QSortFilterProxyModel</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QSortFilterProxyModel</primary></indexterm>typeinfo name for QSortFilterProxyModel</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QAbstractProxyModel</primary></indexterm>typeinfo for QAbstractProxyModel</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QItemDelegate</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QItemDelegate class
is described by <XREF LINKEND="cls-38963-0">
</PARA>
<!--classdata-->
<TABLE id="cls-38963-0">
<TITLE>Primary vtable for QItemDelegate</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QItemDelegate</primary></indexterm>typeinfo for QItemDelegate</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QItemDelegate::metaObject() const</primary></indexterm>QItemDelegate::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QItemDelegate::qt_metacast(char const*)</primary></indexterm>QItemDelegate::qt_metacast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QItemDelegate::qt_metacall(QMetaObject::Call, int, void**)</primary></indexterm>QItemDelegate::qt_metacall(QMetaObject::Call, int, void**)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QItemDelegate::~QItemDelegate()</primary></indexterm>QItemDelegate::~QItemDelegate()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QItemDelegate::~QItemDelegate()</primary></indexterm>QItemDelegate::~QItemDelegate()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::event(QEvent*)</primary></indexterm>QObject::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QItemDelegate::eventFilter(QObject*, QEvent*)</primary></indexterm>QItemDelegate::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QEvent*)</primary></indexterm>QObject::customEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QItemDelegate::paint(QPainter*, QStyleOptionViewItem const&, QModelIndex const&) const</primary></indexterm>QItemDelegate::paint(QPainter*, QStyleOptionViewItem const&, QModelIndex const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QItemDelegate::sizeHint(QStyleOptionViewItem const&, QModelIndex const&) const</primary></indexterm>QItemDelegate::sizeHint(QStyleOptionViewItem const&, QModelIndex const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QItemDelegate::createEditor(QWidget*, QStyleOptionViewItem const&, QModelIndex const&) const</primary></indexterm>QItemDelegate::createEditor(QWidget*, QStyleOptionViewItem const&, QModelIndex const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QItemDelegate::setEditorData(QWidget*, QModelIndex const&) const</primary></indexterm>QItemDelegate::setEditorData(QWidget*, QModelIndex const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QItemDelegate::setModelData(QWidget*, QAbstractItemModel*, QModelIndex const&) const</primary></indexterm>QItemDelegate::setModelData(QWidget*, QAbstractItemModel*, QModelIndex const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QItemDelegate::updateEditorGeometry(QWidget*, QStyleOptionViewItem const&, QModelIndex const&) const</primary></indexterm>QItemDelegate::updateEditorGeometry(QWidget*, QStyleOptionViewItem const&, QModelIndex const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QItemDelegate::editorEvent(QEvent*, QAbstractItemModel*, QStyleOptionViewItem const&, QModelIndex const&)</primary></indexterm>QItemDelegate::editorEvent(QEvent*, QAbstractItemModel*, QStyleOptionViewItem const&, QModelIndex const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QItemDelegate::drawDisplay(QPainter*, QStyleOptionViewItem const&, QRect const&, QString const&) const</primary></indexterm>QItemDelegate::drawDisplay(QPainter*, QStyleOptionViewItem const&, QRect const&, QString const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QItemDelegate::drawDecoration(QPainter*, QStyleOptionViewItem const&, QRect const&, QPixmap const&) const</primary></indexterm>QItemDelegate::drawDecoration(QPainter*, QStyleOptionViewItem const&, QRect const&, QPixmap const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QItemDelegate::drawFocus(QPainter*, QStyleOptionViewItem const&, QRect const&) const</primary></indexterm>QItemDelegate::drawFocus(QPainter*, QStyleOptionViewItem const&, QRect const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QItemDelegate::drawCheck(QPainter*, QStyleOptionViewItem const&, QRect const&, Qt::CheckState) const</primary></indexterm>QItemDelegate::drawCheck(QPainter*, QStyleOptionViewItem const&, QRect const&, Qt::CheckState) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QItemDelegate  class
is described by <XREF LINKEND="rtti-38758">
</PARA>
<!--classdata-->
<TABLE ID="rtti-38758">
<TITLE>typeinfo for QItemDelegate</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QItemDelegate</primary></indexterm>typeinfo name for QItemDelegate</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QAbstractItemDelegate</primary></indexterm>typeinfo for QAbstractItemDelegate</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QTableView</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QTableView class
is described by <XREF LINKEND="cls-38894-0">
</PARA>
<!--classdata-->
<TABLE id="cls-38894-0">
<TITLE>Primary vtable for QTableView</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QTableView</primary></indexterm>typeinfo for QTableView</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTableView::metaObject() const</primary></indexterm>QTableView::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTableView::qt_metacast(char const*)</primary></indexterm>QTableView::qt_metacast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTableView::qt_metacall(QMetaObject::Call, int, void**)</primary></indexterm>QTableView::qt_metacall(QMetaObject::Call, int, void**)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTableView::~QTableView()</primary></indexterm>QTableView::~QTableView()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTableView::~QTableView()</primary></indexterm>QTableView::~QTableView()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::event(QEvent*)</primary></indexterm>QAbstractItemView::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::eventFilter(QObject*, QEvent*)</primary></indexterm>QObject::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTableView::timerEvent(QTimerEvent*)</primary></indexterm>QTableView::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QEvent*)</primary></indexterm>QObject::customEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::devType() const</primary></indexterm>QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setVisible(bool)</primary></indexterm>QWidget::setVisible(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractScrollArea::sizeHint() const</primary></indexterm>QAbstractScrollArea::sizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractScrollArea::minimumSizeHint() const</primary></indexterm>QAbstractScrollArea::minimumSizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::heightForWidth(int) const</primary></indexterm>QWidget::heightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paintEngine() const</primary></indexterm>QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::mousePressEvent(QMouseEvent*)</primary></indexterm>QAbstractItemView::mousePressEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::mouseReleaseEvent(QMouseEvent*)</primary></indexterm>QAbstractItemView::mouseReleaseEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::mouseDoubleClickEvent(QMouseEvent*)</primary></indexterm>QAbstractItemView::mouseDoubleClickEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::mouseMoveEvent(QMouseEvent*)</primary></indexterm>QAbstractItemView::mouseMoveEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractScrollArea::wheelEvent(QWheelEvent*)</primary></indexterm>QAbstractScrollArea::wheelEvent(QWheelEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::keyPressEvent(QKeyEvent*)</primary></indexterm>QAbstractItemView::keyPressEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyReleaseEvent(QKeyEvent*)</primary></indexterm>QWidget::keyReleaseEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::focusInEvent(QFocusEvent*)</primary></indexterm>QAbstractItemView::focusInEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::focusOutEvent(QFocusEvent*)</primary></indexterm>QAbstractItemView::focusOutEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enterEvent(QEvent*)</primary></indexterm>QWidget::enterEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::leaveEvent(QEvent*)</primary></indexterm>QWidget::leaveEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTableView::paintEvent(QPaintEvent*)</primary></indexterm>QTableView::paintEvent(QPaintEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::moveEvent(QMoveEvent*)</primary></indexterm>QWidget::moveEvent(QMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::resizeEvent(QResizeEvent*)</primary></indexterm>QAbstractItemView::resizeEvent(QResizeEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::closeEvent(QCloseEvent*)</primary></indexterm>QWidget::closeEvent(QCloseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;33&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractScrollArea::contextMenuEvent(QContextMenuEvent*)</primary></indexterm>QAbstractScrollArea::contextMenuEvent(QContextMenuEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;34&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::tabletEvent(QTabletEvent*)</primary></indexterm>QWidget::tabletEvent(QTabletEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;35&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::actionEvent(QActionEvent*)</primary></indexterm>QWidget::actionEvent(QActionEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;36&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::dragEnterEvent(QDragEnterEvent*)</primary></indexterm>QAbstractItemView::dragEnterEvent(QDragEnterEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;37&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::dragMoveEvent(QDragMoveEvent*)</primary></indexterm>QAbstractItemView::dragMoveEvent(QDragMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;38&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::dragLeaveEvent(QDragLeaveEvent*)</primary></indexterm>QAbstractItemView::dragLeaveEvent(QDragLeaveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;39&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::dropEvent(QDropEvent*)</primary></indexterm>QAbstractItemView::dropEvent(QDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;40&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showEvent(QShowEvent*)</primary></indexterm>QWidget::showEvent(QShowEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;41&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::hideEvent(QHideEvent*)</primary></indexterm>QWidget::hideEvent(QHideEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;42&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::x11Event(_XEvent*)</primary></indexterm>QWidget::x11Event(_XEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;43&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::changeEvent(QEvent*)</primary></indexterm>QFrame::changeEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;44&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;45&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::inputMethodEvent(QInputMethodEvent*)</primary></indexterm>QWidget::inputMethodEvent(QInputMethodEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;46&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::inputMethodQuery(Qt::InputMethodQuery) const</primary></indexterm>QWidget::inputMethodQuery(Qt::InputMethodQuery) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;47&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusNextPrevChild(bool)</primary></indexterm>QWidget::focusNextPrevChild(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;48&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::styleChange(QStyle&)</primary></indexterm>QWidget::styleChange(QStyle&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;49&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enabledChange(bool)</primary></indexterm>QWidget::enabledChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;50&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paletteChange(QPalette const&)</primary></indexterm>QWidget::paletteChange(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;51&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::fontChange(QFont const&)</primary></indexterm>QWidget::fontChange(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;52&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::windowActivationChange(bool)</primary></indexterm>QWidget::windowActivationChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;53&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::languageChange()</primary></indexterm>QWidget::languageChange()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;54&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::viewportEvent(QEvent*)</primary></indexterm>QAbstractItemView::viewportEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;55&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTableView::scrollContentsBy(int, int)</primary></indexterm>QTableView::scrollContentsBy(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;56&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTableView::setModel(QAbstractItemModel*)</primary></indexterm>QTableView::setModel(QAbstractItemModel*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;57&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTableView::setSelectionModel(QItemSelectionModel*)</primary></indexterm>QTableView::setSelectionModel(QItemSelectionModel*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;58&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::keyboardSearch(QString const&)</primary></indexterm>QAbstractItemView::keyboardSearch(QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;59&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTableView::visualRect(QModelIndex const&) const</primary></indexterm>QTableView::visualRect(QModelIndex const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;60&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTableView::scrollTo(QModelIndex const&, QAbstractItemView::ScrollHint)</primary></indexterm>QTableView::scrollTo(QModelIndex const&, QAbstractItemView::ScrollHint)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;61&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTableView::indexAt(QPoint const&) const</primary></indexterm>QTableView::indexAt(QPoint const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;62&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTableView::sizeHintForRow(int) const</primary></indexterm>QTableView::sizeHintForRow(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;63&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTableView::sizeHintForColumn(int) const</primary></indexterm>QTableView::sizeHintForColumn(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;64&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::reset()</primary></indexterm>QAbstractItemView::reset()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;65&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTableView::setRootIndex(QModelIndex const&)</primary></indexterm>QTableView::setRootIndex(QModelIndex const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;66&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::doItemsLayout()</primary></indexterm>QAbstractItemView::doItemsLayout()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;67&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::selectAll()</primary></indexterm>QAbstractItemView::selectAll()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;68&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::dataChanged(QModelIndex const&, QModelIndex const&)</primary></indexterm>QAbstractItemView::dataChanged(QModelIndex const&, QModelIndex const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;69&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::rowsInserted(QModelIndex const&, int, int)</primary></indexterm>QAbstractItemView::rowsInserted(QModelIndex const&, int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;70&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::rowsAboutToBeRemoved(QModelIndex const&, int, int)</primary></indexterm>QAbstractItemView::rowsAboutToBeRemoved(QModelIndex const&, int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;71&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::selectionChanged(QItemSelection const&, QItemSelection const&)</primary></indexterm>QAbstractItemView::selectionChanged(QItemSelection const&, QItemSelection const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;72&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::currentChanged(QModelIndex const&, QModelIndex const&)</primary></indexterm>QAbstractItemView::currentChanged(QModelIndex const&, QModelIndex const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;73&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::updateEditorData()</primary></indexterm>QAbstractItemView::updateEditorData()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;74&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::updateEditorGeometries()</primary></indexterm>QAbstractItemView::updateEditorGeometries()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;75&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTableView::updateGeometries()</primary></indexterm>QTableView::updateGeometries()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;76&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTableView::verticalScrollbarAction(int)</primary></indexterm>QTableView::verticalScrollbarAction(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;77&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTableView::horizontalScrollbarAction(int)</primary></indexterm>QTableView::horizontalScrollbarAction(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;78&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::verticalScrollbarValueChanged(int)</primary></indexterm>QAbstractItemView::verticalScrollbarValueChanged(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;79&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::horizontalScrollbarValueChanged(int)</primary></indexterm>QAbstractItemView::horizontalScrollbarValueChanged(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;80&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::closeEditor(QWidget*, QAbstractItemDelegate::EndEditHint)</primary></indexterm>QAbstractItemView::closeEditor(QWidget*, QAbstractItemDelegate::EndEditHint)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;81&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::commitData(QWidget*)</primary></indexterm>QAbstractItemView::commitData(QWidget*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;82&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::editorDestroyed(QObject*)</primary></indexterm>QAbstractItemView::editorDestroyed(QObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;83&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTableView::moveCursor(QAbstractItemView::CursorAction, QFlags&lt;Qt::KeyboardModifier&gt;)</primary></indexterm>QTableView::moveCursor(QAbstractItemView::CursorAction, QFlags&lt;Qt::KeyboardModifier&gt;)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;84&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTableView::horizontalOffset() const</primary></indexterm>QTableView::horizontalOffset() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;85&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTableView::verticalOffset() const</primary></indexterm>QTableView::verticalOffset() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;86&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTableView::isIndexHidden(QModelIndex const&) const</primary></indexterm>QTableView::isIndexHidden(QModelIndex const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;87&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTableView::setSelection(QRect const&, QFlags&lt;QItemSelectionModel::SelectionFlag&gt;)</primary></indexterm>QTableView::setSelection(QRect const&, QFlags&lt;QItemSelectionModel::SelectionFlag&gt;)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;88&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTableView::visualRegionForSelection(QItemSelection const&) const</primary></indexterm>QTableView::visualRegionForSelection(QItemSelection const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;89&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTableView::selectedIndexes() const</primary></indexterm>QTableView::selectedIndexes() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;90&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::edit(QModelIndex const&, QAbstractItemView::EditTrigger, QEvent*)</primary></indexterm>QAbstractItemView::edit(QModelIndex const&, QAbstractItemView::EditTrigger, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;91&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::selectionCommand(QModelIndex const&, QEvent const*) const</primary></indexterm>QAbstractItemView::selectionCommand(QModelIndex const&, QEvent const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;92&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::startDrag(QFlags&lt;Qt::DropAction&gt;)</primary></indexterm>QAbstractItemView::startDrag(QFlags&lt;Qt::DropAction&gt;)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;93&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTableView::viewOptions() const</primary></indexterm>QTableView::viewOptions() const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--classdata-->
<TABLE id="cls-38894-1">
<TITLE>Secondary vtable for QTableView</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>-16</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QTableView</primary></indexterm>typeinfo for QTableView</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QTableView::~QTableView()</primary></indexterm>non-virtual thunk to QTableView::~QTableView()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QTableView::~QTableView()</primary></indexterm>non-virtual thunk to QTableView::~QTableView()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::devType() const</primary></indexterm>non-virtual thunk to QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::paintEngine() const</primary></indexterm>non-virtual thunk to QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QTableView  class
is described by <XREF LINKEND="rtti-38688">
</PARA>
<!--classdata-->
<TABLE ID="rtti-38688">
<TITLE>typeinfo for QTableView</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QTableView</primary></indexterm>typeinfo name for QTableView</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QAbstractItemView</primary></indexterm>typeinfo for QAbstractItemView</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QTableWidgetItem</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QTableWidgetItem class
is described by <XREF LINKEND="cls-38999-0">
</PARA>
<!--classdata-->
<TABLE id="cls-38999-0">
<TITLE>Primary vtable for QTableWidgetItem</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QTableWidgetItem</primary></indexterm>typeinfo for QTableWidgetItem</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTableWidgetItem::~QTableWidgetItem()</primary></indexterm>QTableWidgetItem::~QTableWidgetItem()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTableWidgetItem::~QTableWidgetItem()</primary></indexterm>QTableWidgetItem::~QTableWidgetItem()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTableWidgetItem::clone() const</primary></indexterm>QTableWidgetItem::clone() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTableWidgetItem::data(int) const</primary></indexterm>QTableWidgetItem::data(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTableWidgetItem::setData(int, QVariant const&)</primary></indexterm>QTableWidgetItem::setData(int, QVariant const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTableWidgetItem::operator&lt;(QTableWidgetItem const&) const</primary></indexterm>QTableWidgetItem::operator&lt;(QTableWidgetItem const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTableWidgetItem::read(QDataStream&)</primary></indexterm>QTableWidgetItem::read(QDataStream&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTableWidgetItem::write(QDataStream&) const</primary></indexterm>QTableWidgetItem::write(QDataStream&) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QTableWidgetItem  class
is described by <XREF LINKEND="rtti-38794">
</PARA>
<!--classdata-->
<TABLE ID="rtti-38794">
<TITLE>typeinfo for QTableWidgetItem</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__class_type_info</primary></indexterm>vtable for __cxxabiv1::__class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QTableWidgetItem</primary></indexterm>typeinfo name for QTableWidgetItem</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QTableWidget</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QTableWidget class
is described by <XREF LINKEND="cls-38955-0">
</PARA>
<!--classdata-->
<TABLE id="cls-38955-0">
<TITLE>Primary vtable for QTableWidget</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QTableWidget</primary></indexterm>typeinfo for QTableWidget</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTableWidget::metaObject() const</primary></indexterm>QTableWidget::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTableWidget::qt_metacast(char const*)</primary></indexterm>QTableWidget::qt_metacast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTableWidget::qt_metacall(QMetaObject::Call, int, void**)</primary></indexterm>QTableWidget::qt_metacall(QMetaObject::Call, int, void**)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTableWidget::~QTableWidget()</primary></indexterm>QTableWidget::~QTableWidget()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTableWidget::~QTableWidget()</primary></indexterm>QTableWidget::~QTableWidget()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTableWidget::event(QEvent*)</primary></indexterm>QTableWidget::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::eventFilter(QObject*, QEvent*)</primary></indexterm>QObject::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTableView::timerEvent(QTimerEvent*)</primary></indexterm>QTableView::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QEvent*)</primary></indexterm>QObject::customEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::devType() const</primary></indexterm>QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setVisible(bool)</primary></indexterm>QWidget::setVisible(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractScrollArea::sizeHint() const</primary></indexterm>QAbstractScrollArea::sizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractScrollArea::minimumSizeHint() const</primary></indexterm>QAbstractScrollArea::minimumSizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::heightForWidth(int) const</primary></indexterm>QWidget::heightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paintEngine() const</primary></indexterm>QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::mousePressEvent(QMouseEvent*)</primary></indexterm>QAbstractItemView::mousePressEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::mouseReleaseEvent(QMouseEvent*)</primary></indexterm>QAbstractItemView::mouseReleaseEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::mouseDoubleClickEvent(QMouseEvent*)</primary></indexterm>QAbstractItemView::mouseDoubleClickEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::mouseMoveEvent(QMouseEvent*)</primary></indexterm>QAbstractItemView::mouseMoveEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractScrollArea::wheelEvent(QWheelEvent*)</primary></indexterm>QAbstractScrollArea::wheelEvent(QWheelEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::keyPressEvent(QKeyEvent*)</primary></indexterm>QAbstractItemView::keyPressEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyReleaseEvent(QKeyEvent*)</primary></indexterm>QWidget::keyReleaseEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::focusInEvent(QFocusEvent*)</primary></indexterm>QAbstractItemView::focusInEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::focusOutEvent(QFocusEvent*)</primary></indexterm>QAbstractItemView::focusOutEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enterEvent(QEvent*)</primary></indexterm>QWidget::enterEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::leaveEvent(QEvent*)</primary></indexterm>QWidget::leaveEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTableView::paintEvent(QPaintEvent*)</primary></indexterm>QTableView::paintEvent(QPaintEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::moveEvent(QMoveEvent*)</primary></indexterm>QWidget::moveEvent(QMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::resizeEvent(QResizeEvent*)</primary></indexterm>QAbstractItemView::resizeEvent(QResizeEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::closeEvent(QCloseEvent*)</primary></indexterm>QWidget::closeEvent(QCloseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;33&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractScrollArea::contextMenuEvent(QContextMenuEvent*)</primary></indexterm>QAbstractScrollArea::contextMenuEvent(QContextMenuEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;34&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::tabletEvent(QTabletEvent*)</primary></indexterm>QWidget::tabletEvent(QTabletEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;35&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::actionEvent(QActionEvent*)</primary></indexterm>QWidget::actionEvent(QActionEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;36&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::dragEnterEvent(QDragEnterEvent*)</primary></indexterm>QAbstractItemView::dragEnterEvent(QDragEnterEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;37&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::dragMoveEvent(QDragMoveEvent*)</primary></indexterm>QAbstractItemView::dragMoveEvent(QDragMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;38&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::dragLeaveEvent(QDragLeaveEvent*)</primary></indexterm>QAbstractItemView::dragLeaveEvent(QDragLeaveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;39&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::dropEvent(QDropEvent*)</primary></indexterm>QAbstractItemView::dropEvent(QDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;40&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showEvent(QShowEvent*)</primary></indexterm>QWidget::showEvent(QShowEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;41&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::hideEvent(QHideEvent*)</primary></indexterm>QWidget::hideEvent(QHideEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;42&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::x11Event(_XEvent*)</primary></indexterm>QWidget::x11Event(_XEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;43&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::changeEvent(QEvent*)</primary></indexterm>QFrame::changeEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;44&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;45&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::inputMethodEvent(QInputMethodEvent*)</primary></indexterm>QWidget::inputMethodEvent(QInputMethodEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;46&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::inputMethodQuery(Qt::InputMethodQuery) const</primary></indexterm>QWidget::inputMethodQuery(Qt::InputMethodQuery) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;47&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusNextPrevChild(bool)</primary></indexterm>QWidget::focusNextPrevChild(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;48&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::styleChange(QStyle&)</primary></indexterm>QWidget::styleChange(QStyle&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;49&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enabledChange(bool)</primary></indexterm>QWidget::enabledChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;50&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paletteChange(QPalette const&)</primary></indexterm>QWidget::paletteChange(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;51&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::fontChange(QFont const&)</primary></indexterm>QWidget::fontChange(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;52&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::windowActivationChange(bool)</primary></indexterm>QWidget::windowActivationChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;53&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::languageChange()</primary></indexterm>QWidget::languageChange()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;54&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::viewportEvent(QEvent*)</primary></indexterm>QAbstractItemView::viewportEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;55&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTableView::scrollContentsBy(int, int)</primary></indexterm>QTableView::scrollContentsBy(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;56&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTableWidget::setModel(QAbstractItemModel*)</primary></indexterm>QTableWidget::setModel(QAbstractItemModel*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;57&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTableView::setSelectionModel(QItemSelectionModel*)</primary></indexterm>QTableView::setSelectionModel(QItemSelectionModel*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;58&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::keyboardSearch(QString const&)</primary></indexterm>QAbstractItemView::keyboardSearch(QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;59&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTableView::visualRect(QModelIndex const&) const</primary></indexterm>QTableView::visualRect(QModelIndex const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;60&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTableView::scrollTo(QModelIndex const&, QAbstractItemView::ScrollHint)</primary></indexterm>QTableView::scrollTo(QModelIndex const&, QAbstractItemView::ScrollHint)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;61&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTableView::indexAt(QPoint const&) const</primary></indexterm>QTableView::indexAt(QPoint const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;62&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTableView::sizeHintForRow(int) const</primary></indexterm>QTableView::sizeHintForRow(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;63&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTableView::sizeHintForColumn(int) const</primary></indexterm>QTableView::sizeHintForColumn(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;64&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::reset()</primary></indexterm>QAbstractItemView::reset()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;65&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTableView::setRootIndex(QModelIndex const&)</primary></indexterm>QTableView::setRootIndex(QModelIndex const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;66&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::doItemsLayout()</primary></indexterm>QAbstractItemView::doItemsLayout()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;67&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::selectAll()</primary></indexterm>QAbstractItemView::selectAll()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;68&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::dataChanged(QModelIndex const&, QModelIndex const&)</primary></indexterm>QAbstractItemView::dataChanged(QModelIndex const&, QModelIndex const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;69&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::rowsInserted(QModelIndex const&, int, int)</primary></indexterm>QAbstractItemView::rowsInserted(QModelIndex const&, int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;70&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::rowsAboutToBeRemoved(QModelIndex const&, int, int)</primary></indexterm>QAbstractItemView::rowsAboutToBeRemoved(QModelIndex const&, int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;71&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::selectionChanged(QItemSelection const&, QItemSelection const&)</primary></indexterm>QAbstractItemView::selectionChanged(QItemSelection const&, QItemSelection const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;72&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::currentChanged(QModelIndex const&, QModelIndex const&)</primary></indexterm>QAbstractItemView::currentChanged(QModelIndex const&, QModelIndex const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;73&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::updateEditorData()</primary></indexterm>QAbstractItemView::updateEditorData()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;74&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::updateEditorGeometries()</primary></indexterm>QAbstractItemView::updateEditorGeometries()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;75&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTableView::updateGeometries()</primary></indexterm>QTableView::updateGeometries()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;76&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTableView::verticalScrollbarAction(int)</primary></indexterm>QTableView::verticalScrollbarAction(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;77&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTableView::horizontalScrollbarAction(int)</primary></indexterm>QTableView::horizontalScrollbarAction(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;78&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::verticalScrollbarValueChanged(int)</primary></indexterm>QAbstractItemView::verticalScrollbarValueChanged(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;79&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::horizontalScrollbarValueChanged(int)</primary></indexterm>QAbstractItemView::horizontalScrollbarValueChanged(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;80&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::closeEditor(QWidget*, QAbstractItemDelegate::EndEditHint)</primary></indexterm>QAbstractItemView::closeEditor(QWidget*, QAbstractItemDelegate::EndEditHint)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;81&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::commitData(QWidget*)</primary></indexterm>QAbstractItemView::commitData(QWidget*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;82&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::editorDestroyed(QObject*)</primary></indexterm>QAbstractItemView::editorDestroyed(QObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;83&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTableView::moveCursor(QAbstractItemView::CursorAction, QFlags&lt;Qt::KeyboardModifier&gt;)</primary></indexterm>QTableView::moveCursor(QAbstractItemView::CursorAction, QFlags&lt;Qt::KeyboardModifier&gt;)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;84&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTableView::horizontalOffset() const</primary></indexterm>QTableView::horizontalOffset() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;85&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTableView::verticalOffset() const</primary></indexterm>QTableView::verticalOffset() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;86&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTableView::isIndexHidden(QModelIndex const&) const</primary></indexterm>QTableView::isIndexHidden(QModelIndex const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;87&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTableView::setSelection(QRect const&, QFlags&lt;QItemSelectionModel::SelectionFlag&gt;)</primary></indexterm>QTableView::setSelection(QRect const&, QFlags&lt;QItemSelectionModel::SelectionFlag&gt;)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;88&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTableView::visualRegionForSelection(QItemSelection const&) const</primary></indexterm>QTableView::visualRegionForSelection(QItemSelection const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;89&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTableView::selectedIndexes() const</primary></indexterm>QTableView::selectedIndexes() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;90&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::edit(QModelIndex const&, QAbstractItemView::EditTrigger, QEvent*)</primary></indexterm>QAbstractItemView::edit(QModelIndex const&, QAbstractItemView::EditTrigger, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;91&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::selectionCommand(QModelIndex const&, QEvent const*) const</primary></indexterm>QAbstractItemView::selectionCommand(QModelIndex const&, QEvent const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;92&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::startDrag(QFlags&lt;Qt::DropAction&gt;)</primary></indexterm>QAbstractItemView::startDrag(QFlags&lt;Qt::DropAction&gt;)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;93&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTableView::viewOptions() const</primary></indexterm>QTableView::viewOptions() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;94&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTableWidget::mimeTypes() const</primary></indexterm>QTableWidget::mimeTypes() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;95&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTableWidget::mimeData(QList&lt;QTableWidgetItem*&gt;) const</primary></indexterm>QTableWidget::mimeData(QList&lt;QTableWidgetItem*&gt;) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;96&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTableWidget::dropMimeData(int, int, QMimeData const*, Qt::DropAction)</primary></indexterm>QTableWidget::dropMimeData(int, int, QMimeData const*, Qt::DropAction)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;97&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTableWidget::supportedDropActions() const</primary></indexterm>QTableWidget::supportedDropActions() const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--classdata-->
<TABLE id="cls-38955-1">
<TITLE>Secondary vtable for QTableWidget</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>-16</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QTableWidget</primary></indexterm>typeinfo for QTableWidget</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QTableWidget::~QTableWidget()</primary></indexterm>non-virtual thunk to QTableWidget::~QTableWidget()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QTableWidget::~QTableWidget()</primary></indexterm>non-virtual thunk to QTableWidget::~QTableWidget()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::devType() const</primary></indexterm>non-virtual thunk to QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::paintEngine() const</primary></indexterm>non-virtual thunk to QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QTableWidget  class
is described by <XREF LINKEND="rtti-38750">
</PARA>
<!--classdata-->
<TABLE ID="rtti-38750">
<TITLE>typeinfo for QTableWidget</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QTableWidget</primary></indexterm>typeinfo name for QTableWidget</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QTableView</primary></indexterm>typeinfo for QTableView</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QTreeView</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QTreeView class
is described by <XREF LINKEND="cls-39088-0">
</PARA>
<!--classdata-->
<TABLE id="cls-39088-0">
<TITLE>Primary vtable for QTreeView</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QTreeView</primary></indexterm>typeinfo for QTreeView</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTreeView::metaObject() const</primary></indexterm>QTreeView::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTreeView::qt_metacast(char const*)</primary></indexterm>QTreeView::qt_metacast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTreeView::qt_metacall(QMetaObject::Call, int, void**)</primary></indexterm>QTreeView::qt_metacall(QMetaObject::Call, int, void**)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTreeView::~QTreeView()</primary></indexterm>QTreeView::~QTreeView()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTreeView::~QTreeView()</primary></indexterm>QTreeView::~QTreeView()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::event(QEvent*)</primary></indexterm>QAbstractItemView::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::eventFilter(QObject*, QEvent*)</primary></indexterm>QObject::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTreeView::timerEvent(QTimerEvent*)</primary></indexterm>QTreeView::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QEvent*)</primary></indexterm>QObject::customEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::devType() const</primary></indexterm>QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setVisible(bool)</primary></indexterm>QWidget::setVisible(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractScrollArea::sizeHint() const</primary></indexterm>QAbstractScrollArea::sizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractScrollArea::minimumSizeHint() const</primary></indexterm>QAbstractScrollArea::minimumSizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::heightForWidth(int) const</primary></indexterm>QWidget::heightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paintEngine() const</primary></indexterm>QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTreeView::mousePressEvent(QMouseEvent*)</primary></indexterm>QTreeView::mousePressEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTreeView::mouseReleaseEvent(QMouseEvent*)</primary></indexterm>QTreeView::mouseReleaseEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTreeView::mouseDoubleClickEvent(QMouseEvent*)</primary></indexterm>QTreeView::mouseDoubleClickEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::mouseMoveEvent(QMouseEvent*)</primary></indexterm>QAbstractItemView::mouseMoveEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractScrollArea::wheelEvent(QWheelEvent*)</primary></indexterm>QAbstractScrollArea::wheelEvent(QWheelEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::keyPressEvent(QKeyEvent*)</primary></indexterm>QAbstractItemView::keyPressEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyReleaseEvent(QKeyEvent*)</primary></indexterm>QWidget::keyReleaseEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::focusInEvent(QFocusEvent*)</primary></indexterm>QAbstractItemView::focusInEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::focusOutEvent(QFocusEvent*)</primary></indexterm>QAbstractItemView::focusOutEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enterEvent(QEvent*)</primary></indexterm>QWidget::enterEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::leaveEvent(QEvent*)</primary></indexterm>QWidget::leaveEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTreeView::paintEvent(QPaintEvent*)</primary></indexterm>QTreeView::paintEvent(QPaintEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::moveEvent(QMoveEvent*)</primary></indexterm>QWidget::moveEvent(QMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::resizeEvent(QResizeEvent*)</primary></indexterm>QAbstractItemView::resizeEvent(QResizeEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::closeEvent(QCloseEvent*)</primary></indexterm>QWidget::closeEvent(QCloseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;33&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractScrollArea::contextMenuEvent(QContextMenuEvent*)</primary></indexterm>QAbstractScrollArea::contextMenuEvent(QContextMenuEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;34&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::tabletEvent(QTabletEvent*)</primary></indexterm>QWidget::tabletEvent(QTabletEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;35&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::actionEvent(QActionEvent*)</primary></indexterm>QWidget::actionEvent(QActionEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;36&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::dragEnterEvent(QDragEnterEvent*)</primary></indexterm>QAbstractItemView::dragEnterEvent(QDragEnterEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;37&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::dragMoveEvent(QDragMoveEvent*)</primary></indexterm>QAbstractItemView::dragMoveEvent(QDragMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;38&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::dragLeaveEvent(QDragLeaveEvent*)</primary></indexterm>QAbstractItemView::dragLeaveEvent(QDragLeaveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;39&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::dropEvent(QDropEvent*)</primary></indexterm>QAbstractItemView::dropEvent(QDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;40&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showEvent(QShowEvent*)</primary></indexterm>QWidget::showEvent(QShowEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;41&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::hideEvent(QHideEvent*)</primary></indexterm>QWidget::hideEvent(QHideEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;42&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::x11Event(_XEvent*)</primary></indexterm>QWidget::x11Event(_XEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;43&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::changeEvent(QEvent*)</primary></indexterm>QFrame::changeEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;44&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;45&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::inputMethodEvent(QInputMethodEvent*)</primary></indexterm>QWidget::inputMethodEvent(QInputMethodEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;46&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::inputMethodQuery(Qt::InputMethodQuery) const</primary></indexterm>QWidget::inputMethodQuery(Qt::InputMethodQuery) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;47&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusNextPrevChild(bool)</primary></indexterm>QWidget::focusNextPrevChild(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;48&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::styleChange(QStyle&)</primary></indexterm>QWidget::styleChange(QStyle&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;49&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enabledChange(bool)</primary></indexterm>QWidget::enabledChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;50&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paletteChange(QPalette const&)</primary></indexterm>QWidget::paletteChange(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;51&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::fontChange(QFont const&)</primary></indexterm>QWidget::fontChange(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;52&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::windowActivationChange(bool)</primary></indexterm>QWidget::windowActivationChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;53&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::languageChange()</primary></indexterm>QWidget::languageChange()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;54&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::viewportEvent(QEvent*)</primary></indexterm>QAbstractItemView::viewportEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;55&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTreeView::scrollContentsBy(int, int)</primary></indexterm>QTreeView::scrollContentsBy(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;56&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTreeView::setModel(QAbstractItemModel*)</primary></indexterm>QTreeView::setModel(QAbstractItemModel*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;57&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTreeView::setSelectionModel(QItemSelectionModel*)</primary></indexterm>QTreeView::setSelectionModel(QItemSelectionModel*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;58&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTreeView::keyboardSearch(QString const&)</primary></indexterm>QTreeView::keyboardSearch(QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;59&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTreeView::visualRect(QModelIndex const&) const</primary></indexterm>QTreeView::visualRect(QModelIndex const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;60&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTreeView::scrollTo(QModelIndex const&, QAbstractItemView::ScrollHint)</primary></indexterm>QTreeView::scrollTo(QModelIndex const&, QAbstractItemView::ScrollHint)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;61&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTreeView::indexAt(QPoint const&) const</primary></indexterm>QTreeView::indexAt(QPoint const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;62&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::sizeHintForRow(int) const</primary></indexterm>QAbstractItemView::sizeHintForRow(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;63&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTreeView::sizeHintForColumn(int) const</primary></indexterm>QTreeView::sizeHintForColumn(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;64&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTreeView::reset()</primary></indexterm>QTreeView::reset()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;65&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTreeView::setRootIndex(QModelIndex const&)</primary></indexterm>QTreeView::setRootIndex(QModelIndex const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;66&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTreeView::doItemsLayout()</primary></indexterm>QTreeView::doItemsLayout()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;67&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTreeView::selectAll()</primary></indexterm>QTreeView::selectAll()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;68&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTreeView::dataChanged(QModelIndex const&, QModelIndex const&)</primary></indexterm>QTreeView::dataChanged(QModelIndex const&, QModelIndex const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;69&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTreeView::rowsInserted(QModelIndex const&, int, int)</primary></indexterm>QTreeView::rowsInserted(QModelIndex const&, int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;70&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTreeView::rowsAboutToBeRemoved(QModelIndex const&, int, int)</primary></indexterm>QTreeView::rowsAboutToBeRemoved(QModelIndex const&, int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;71&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::selectionChanged(QItemSelection const&, QItemSelection const&)</primary></indexterm>QAbstractItemView::selectionChanged(QItemSelection const&, QItemSelection const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;72&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::currentChanged(QModelIndex const&, QModelIndex const&)</primary></indexterm>QAbstractItemView::currentChanged(QModelIndex const&, QModelIndex const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;73&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::updateEditorData()</primary></indexterm>QAbstractItemView::updateEditorData()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;74&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::updateEditorGeometries()</primary></indexterm>QAbstractItemView::updateEditorGeometries()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;75&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTreeView::updateGeometries()</primary></indexterm>QTreeView::updateGeometries()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;76&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::verticalScrollbarAction(int)</primary></indexterm>QAbstractItemView::verticalScrollbarAction(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;77&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTreeView::horizontalScrollbarAction(int)</primary></indexterm>QTreeView::horizontalScrollbarAction(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;78&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::verticalScrollbarValueChanged(int)</primary></indexterm>QAbstractItemView::verticalScrollbarValueChanged(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;79&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::horizontalScrollbarValueChanged(int)</primary></indexterm>QAbstractItemView::horizontalScrollbarValueChanged(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;80&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::closeEditor(QWidget*, QAbstractItemDelegate::EndEditHint)</primary></indexterm>QAbstractItemView::closeEditor(QWidget*, QAbstractItemDelegate::EndEditHint)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;81&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::commitData(QWidget*)</primary></indexterm>QAbstractItemView::commitData(QWidget*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;82&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::editorDestroyed(QObject*)</primary></indexterm>QAbstractItemView::editorDestroyed(QObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;83&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTreeView::moveCursor(QAbstractItemView::CursorAction, QFlags&lt;Qt::KeyboardModifier&gt;)</primary></indexterm>QTreeView::moveCursor(QAbstractItemView::CursorAction, QFlags&lt;Qt::KeyboardModifier&gt;)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;84&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTreeView::horizontalOffset() const</primary></indexterm>QTreeView::horizontalOffset() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;85&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTreeView::verticalOffset() const</primary></indexterm>QTreeView::verticalOffset() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;86&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTreeView::isIndexHidden(QModelIndex const&) const</primary></indexterm>QTreeView::isIndexHidden(QModelIndex const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;87&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTreeView::setSelection(QRect const&, QFlags&lt;QItemSelectionModel::SelectionFlag&gt;)</primary></indexterm>QTreeView::setSelection(QRect const&, QFlags&lt;QItemSelectionModel::SelectionFlag&gt;)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;88&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTreeView::visualRegionForSelection(QItemSelection const&) const</primary></indexterm>QTreeView::visualRegionForSelection(QItemSelection const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;89&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTreeView::selectedIndexes() const</primary></indexterm>QTreeView::selectedIndexes() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;90&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::edit(QModelIndex const&, QAbstractItemView::EditTrigger, QEvent*)</primary></indexterm>QAbstractItemView::edit(QModelIndex const&, QAbstractItemView::EditTrigger, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;91&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::selectionCommand(QModelIndex const&, QEvent const*) const</primary></indexterm>QAbstractItemView::selectionCommand(QModelIndex const&, QEvent const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;92&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::startDrag(QFlags&lt;Qt::DropAction&gt;)</primary></indexterm>QAbstractItemView::startDrag(QFlags&lt;Qt::DropAction&gt;)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;93&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::viewOptions() const</primary></indexterm>QAbstractItemView::viewOptions() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;94&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTreeView::drawRow(QPainter*, QStyleOptionViewItem const&, QModelIndex const&) const</primary></indexterm>QTreeView::drawRow(QPainter*, QStyleOptionViewItem const&, QModelIndex const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;95&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTreeView::drawBranches(QPainter*, QRect const&, QModelIndex const&) const</primary></indexterm>QTreeView::drawBranches(QPainter*, QRect const&, QModelIndex const&) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--classdata-->
<TABLE id="cls-39088-1">
<TITLE>Secondary vtable for QTreeView</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>-16</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QTreeView</primary></indexterm>typeinfo for QTreeView</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QTreeView::~QTreeView()</primary></indexterm>non-virtual thunk to QTreeView::~QTreeView()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QTreeView::~QTreeView()</primary></indexterm>non-virtual thunk to QTreeView::~QTreeView()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::devType() const</primary></indexterm>non-virtual thunk to QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::paintEngine() const</primary></indexterm>non-virtual thunk to QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QTreeView  class
is described by <XREF LINKEND="rtti-38883">
</PARA>
<!--classdata-->
<TABLE ID="rtti-38883">
<TITLE>typeinfo for QTreeView</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QTreeView</primary></indexterm>typeinfo name for QTreeView</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QAbstractItemView</primary></indexterm>typeinfo for QAbstractItemView</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QProxyModel</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QProxyModel class
is described by <XREF LINKEND="cls-38923-0">
</PARA>
<!--classdata-->
<TABLE id="cls-38923-0">
<TITLE>Primary vtable for QProxyModel</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QProxyModel</primary></indexterm>typeinfo for QProxyModel</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QProxyModel::metaObject() const</primary></indexterm>QProxyModel::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QProxyModel::qt_metacast(char const*)</primary></indexterm>QProxyModel::qt_metacast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QProxyModel::qt_metacall(QMetaObject::Call, int, void**)</primary></indexterm>QProxyModel::qt_metacall(QMetaObject::Call, int, void**)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QProxyModel::~QProxyModel()</primary></indexterm>QProxyModel::~QProxyModel()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QProxyModel::~QProxyModel()</primary></indexterm>QProxyModel::~QProxyModel()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::event(QEvent*)</primary></indexterm>QObject::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::eventFilter(QObject*, QEvent*)</primary></indexterm>QObject::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QEvent*)</primary></indexterm>QObject::customEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QProxyModel::index(int, int, QModelIndex const&) const</primary></indexterm>QProxyModel::index(int, int, QModelIndex const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QProxyModel::parent(QModelIndex const&) const</primary></indexterm>QProxyModel::parent(QModelIndex const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QProxyModel::rowCount(QModelIndex const&) const</primary></indexterm>QProxyModel::rowCount(QModelIndex const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QProxyModel::columnCount(QModelIndex const&) const</primary></indexterm>QProxyModel::columnCount(QModelIndex const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QProxyModel::hasChildren(QModelIndex const&) const</primary></indexterm>QProxyModel::hasChildren(QModelIndex const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QProxyModel::data(QModelIndex const&, int) const</primary></indexterm>QProxyModel::data(QModelIndex const&, int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QProxyModel::setData(QModelIndex const&, QVariant const&, int)</primary></indexterm>QProxyModel::setData(QModelIndex const&, QVariant const&, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QProxyModel::headerData(int, Qt::Orientation, int) const</primary></indexterm>QProxyModel::headerData(int, Qt::Orientation, int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QProxyModel::setHeaderData(int, Qt::Orientation, QVariant const&, int)</primary></indexterm>QProxyModel::setHeaderData(int, Qt::Orientation, QVariant const&, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemModel::itemData(QModelIndex const&) const</primary></indexterm>QAbstractItemModel::itemData(QModelIndex const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemModel::setItemData(QModelIndex const&, QMap&lt;int, QVariant&gt; const&)</primary></indexterm>QAbstractItemModel::setItemData(QModelIndex const&, QMap&lt;int, QVariant&gt; const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QProxyModel::mimeTypes() const</primary></indexterm>QProxyModel::mimeTypes() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QProxyModel::mimeData(QList&lt;QModelIndex&gt; const&) const</primary></indexterm>QProxyModel::mimeData(QList&lt;QModelIndex&gt; const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QProxyModel::dropMimeData(QMimeData const*, Qt::DropAction, int, int, QModelIndex const&)</primary></indexterm>QProxyModel::dropMimeData(QMimeData const*, Qt::DropAction, int, int, QModelIndex const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QProxyModel::supportedDropActions() const</primary></indexterm>QProxyModel::supportedDropActions() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QProxyModel::insertRows(int, int, QModelIndex const&)</primary></indexterm>QProxyModel::insertRows(int, int, QModelIndex const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QProxyModel::insertColumns(int, int, QModelIndex const&)</primary></indexterm>QProxyModel::insertColumns(int, int, QModelIndex const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemModel::removeRows(int, int, QModelIndex const&)</primary></indexterm>QAbstractItemModel::removeRows(int, int, QModelIndex const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemModel::removeColumns(int, int, QModelIndex const&)</primary></indexterm>QAbstractItemModel::removeColumns(int, int, QModelIndex const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QProxyModel::fetchMore(QModelIndex const&)</primary></indexterm>QProxyModel::fetchMore(QModelIndex const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemModel::canFetchMore(QModelIndex const&) const</primary></indexterm>QAbstractItemModel::canFetchMore(QModelIndex const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;33&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QProxyModel::flags(QModelIndex const&) const</primary></indexterm>QProxyModel::flags(QModelIndex const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;34&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QProxyModel::sort(int, Qt::SortOrder)</primary></indexterm>QProxyModel::sort(int, Qt::SortOrder)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;35&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemModel::buddy(QModelIndex const&) const</primary></indexterm>QAbstractItemModel::buddy(QModelIndex const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;36&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QProxyModel::match(QModelIndex const&, int, QVariant const&, int, QFlags&lt;Qt::MatchFlag&gt;) const</primary></indexterm>QProxyModel::match(QModelIndex const&, int, QVariant const&, int, QFlags&lt;Qt::MatchFlag&gt;) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;37&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QProxyModel::span(QModelIndex const&) const</primary></indexterm>QProxyModel::span(QModelIndex const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;38&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QProxyModel::submit()</primary></indexterm>QProxyModel::submit()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;39&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QProxyModel::revert()</primary></indexterm>QProxyModel::revert()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;40&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QProxyModel::setModel(QAbstractItemModel*)</primary></indexterm>QProxyModel::setModel(QAbstractItemModel*)</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QProxyModel  class
is described by <XREF LINKEND="rtti-38718">
</PARA>
<!--classdata-->
<TABLE ID="rtti-38718">
<TITLE>typeinfo for QProxyModel</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QProxyModel</primary></indexterm>typeinfo name for QProxyModel</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QAbstractItemModel</primary></indexterm>typeinfo for QAbstractItemModel</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QHeaderView</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QHeaderView class
is described by <XREF LINKEND="cls-38909-0">
</PARA>
<!--classdata-->
<TABLE id="cls-38909-0">
<TITLE>Primary vtable for QHeaderView</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QHeaderView</primary></indexterm>typeinfo for QHeaderView</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QHeaderView::metaObject() const</primary></indexterm>QHeaderView::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QHeaderView::qt_metacast(char const*)</primary></indexterm>QHeaderView::qt_metacast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QHeaderView::qt_metacall(QMetaObject::Call, int, void**)</primary></indexterm>QHeaderView::qt_metacall(QMetaObject::Call, int, void**)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QHeaderView::~QHeaderView()</primary></indexterm>QHeaderView::~QHeaderView()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QHeaderView::~QHeaderView()</primary></indexterm>QHeaderView::~QHeaderView()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QHeaderView::event(QEvent*)</primary></indexterm>QHeaderView::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::eventFilter(QObject*, QEvent*)</primary></indexterm>QObject::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::timerEvent(QTimerEvent*)</primary></indexterm>QAbstractItemView::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QEvent*)</primary></indexterm>QObject::customEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::devType() const</primary></indexterm>QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setVisible(bool)</primary></indexterm>QWidget::setVisible(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QHeaderView::sizeHint() const</primary></indexterm>QHeaderView::sizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractScrollArea::minimumSizeHint() const</primary></indexterm>QAbstractScrollArea::minimumSizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::heightForWidth(int) const</primary></indexterm>QWidget::heightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paintEngine() const</primary></indexterm>QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QHeaderView::mousePressEvent(QMouseEvent*)</primary></indexterm>QHeaderView::mousePressEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QHeaderView::mouseReleaseEvent(QMouseEvent*)</primary></indexterm>QHeaderView::mouseReleaseEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QHeaderView::mouseDoubleClickEvent(QMouseEvent*)</primary></indexterm>QHeaderView::mouseDoubleClickEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QHeaderView::mouseMoveEvent(QMouseEvent*)</primary></indexterm>QHeaderView::mouseMoveEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractScrollArea::wheelEvent(QWheelEvent*)</primary></indexterm>QAbstractScrollArea::wheelEvent(QWheelEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::keyPressEvent(QKeyEvent*)</primary></indexterm>QAbstractItemView::keyPressEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyReleaseEvent(QKeyEvent*)</primary></indexterm>QWidget::keyReleaseEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::focusInEvent(QFocusEvent*)</primary></indexterm>QAbstractItemView::focusInEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::focusOutEvent(QFocusEvent*)</primary></indexterm>QAbstractItemView::focusOutEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enterEvent(QEvent*)</primary></indexterm>QWidget::enterEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::leaveEvent(QEvent*)</primary></indexterm>QWidget::leaveEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QHeaderView::paintEvent(QPaintEvent*)</primary></indexterm>QHeaderView::paintEvent(QPaintEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::moveEvent(QMoveEvent*)</primary></indexterm>QWidget::moveEvent(QMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::resizeEvent(QResizeEvent*)</primary></indexterm>QAbstractItemView::resizeEvent(QResizeEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::closeEvent(QCloseEvent*)</primary></indexterm>QWidget::closeEvent(QCloseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;33&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractScrollArea::contextMenuEvent(QContextMenuEvent*)</primary></indexterm>QAbstractScrollArea::contextMenuEvent(QContextMenuEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;34&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::tabletEvent(QTabletEvent*)</primary></indexterm>QWidget::tabletEvent(QTabletEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;35&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::actionEvent(QActionEvent*)</primary></indexterm>QWidget::actionEvent(QActionEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;36&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::dragEnterEvent(QDragEnterEvent*)</primary></indexterm>QAbstractItemView::dragEnterEvent(QDragEnterEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;37&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::dragMoveEvent(QDragMoveEvent*)</primary></indexterm>QAbstractItemView::dragMoveEvent(QDragMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;38&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::dragLeaveEvent(QDragLeaveEvent*)</primary></indexterm>QAbstractItemView::dragLeaveEvent(QDragLeaveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;39&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::dropEvent(QDropEvent*)</primary></indexterm>QAbstractItemView::dropEvent(QDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;40&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showEvent(QShowEvent*)</primary></indexterm>QWidget::showEvent(QShowEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;41&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::hideEvent(QHideEvent*)</primary></indexterm>QWidget::hideEvent(QHideEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;42&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::x11Event(_XEvent*)</primary></indexterm>QWidget::x11Event(_XEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;43&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::changeEvent(QEvent*)</primary></indexterm>QFrame::changeEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;44&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;45&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::inputMethodEvent(QInputMethodEvent*)</primary></indexterm>QWidget::inputMethodEvent(QInputMethodEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;46&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::inputMethodQuery(Qt::InputMethodQuery) const</primary></indexterm>QWidget::inputMethodQuery(Qt::InputMethodQuery) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;47&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusNextPrevChild(bool)</primary></indexterm>QWidget::focusNextPrevChild(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;48&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::styleChange(QStyle&)</primary></indexterm>QWidget::styleChange(QStyle&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;49&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enabledChange(bool)</primary></indexterm>QWidget::enabledChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;50&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paletteChange(QPalette const&)</primary></indexterm>QWidget::paletteChange(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;51&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::fontChange(QFont const&)</primary></indexterm>QWidget::fontChange(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;52&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::windowActivationChange(bool)</primary></indexterm>QWidget::windowActivationChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;53&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::languageChange()</primary></indexterm>QWidget::languageChange()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;54&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QHeaderView::viewportEvent(QEvent*)</primary></indexterm>QHeaderView::viewportEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;55&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QHeaderView::scrollContentsBy(int, int)</primary></indexterm>QHeaderView::scrollContentsBy(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;56&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QHeaderView::setModel(QAbstractItemModel*)</primary></indexterm>QHeaderView::setModel(QAbstractItemModel*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;57&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::setSelectionModel(QItemSelectionModel*)</primary></indexterm>QAbstractItemView::setSelectionModel(QItemSelectionModel*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;58&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::keyboardSearch(QString const&)</primary></indexterm>QAbstractItemView::keyboardSearch(QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;59&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QHeaderView::visualRect(QModelIndex const&) const</primary></indexterm>QHeaderView::visualRect(QModelIndex const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;60&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QHeaderView::scrollTo(QModelIndex const&, QAbstractItemView::ScrollHint)</primary></indexterm>QHeaderView::scrollTo(QModelIndex const&, QAbstractItemView::ScrollHint)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;61&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QHeaderView::indexAt(QPoint const&) const</primary></indexterm>QHeaderView::indexAt(QPoint const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;62&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::sizeHintForRow(int) const</primary></indexterm>QAbstractItemView::sizeHintForRow(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;63&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::sizeHintForColumn(int) const</primary></indexterm>QAbstractItemView::sizeHintForColumn(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;64&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::reset()</primary></indexterm>QAbstractItemView::reset()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;65&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::setRootIndex(QModelIndex const&)</primary></indexterm>QAbstractItemView::setRootIndex(QModelIndex const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;66&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QHeaderView::doItemsLayout()</primary></indexterm>QHeaderView::doItemsLayout()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;67&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::selectAll()</primary></indexterm>QAbstractItemView::selectAll()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;68&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QHeaderView::dataChanged(QModelIndex const&, QModelIndex const&)</primary></indexterm>QHeaderView::dataChanged(QModelIndex const&, QModelIndex const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;69&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QHeaderView::rowsInserted(QModelIndex const&, int, int)</primary></indexterm>QHeaderView::rowsInserted(QModelIndex const&, int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;70&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::rowsAboutToBeRemoved(QModelIndex const&, int, int)</primary></indexterm>QAbstractItemView::rowsAboutToBeRemoved(QModelIndex const&, int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;71&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::selectionChanged(QItemSelection const&, QItemSelection const&)</primary></indexterm>QAbstractItemView::selectionChanged(QItemSelection const&, QItemSelection const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;72&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QHeaderView::currentChanged(QModelIndex const&, QModelIndex const&)</primary></indexterm>QHeaderView::currentChanged(QModelIndex const&, QModelIndex const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;73&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::updateEditorData()</primary></indexterm>QAbstractItemView::updateEditorData()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;74&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::updateEditorGeometries()</primary></indexterm>QAbstractItemView::updateEditorGeometries()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;75&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QHeaderView::updateGeometries()</primary></indexterm>QHeaderView::updateGeometries()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;76&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::verticalScrollbarAction(int)</primary></indexterm>QAbstractItemView::verticalScrollbarAction(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;77&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::horizontalScrollbarAction(int)</primary></indexterm>QAbstractItemView::horizontalScrollbarAction(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;78&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::verticalScrollbarValueChanged(int)</primary></indexterm>QAbstractItemView::verticalScrollbarValueChanged(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;79&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::horizontalScrollbarValueChanged(int)</primary></indexterm>QAbstractItemView::horizontalScrollbarValueChanged(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;80&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::closeEditor(QWidget*, QAbstractItemDelegate::EndEditHint)</primary></indexterm>QAbstractItemView::closeEditor(QWidget*, QAbstractItemDelegate::EndEditHint)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;81&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::commitData(QWidget*)</primary></indexterm>QAbstractItemView::commitData(QWidget*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;82&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::editorDestroyed(QObject*)</primary></indexterm>QAbstractItemView::editorDestroyed(QObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;83&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QHeaderView::moveCursor(QAbstractItemView::CursorAction, QFlags&lt;Qt::KeyboardModifier&gt;)</primary></indexterm>QHeaderView::moveCursor(QAbstractItemView::CursorAction, QFlags&lt;Qt::KeyboardModifier&gt;)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;84&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QHeaderView::horizontalOffset() const</primary></indexterm>QHeaderView::horizontalOffset() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;85&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QHeaderView::verticalOffset() const</primary></indexterm>QHeaderView::verticalOffset() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;86&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QHeaderView::isIndexHidden(QModelIndex const&) const</primary></indexterm>QHeaderView::isIndexHidden(QModelIndex const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;87&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QHeaderView::setSelection(QRect const&, QFlags&lt;QItemSelectionModel::SelectionFlag&gt;)</primary></indexterm>QHeaderView::setSelection(QRect const&, QFlags&lt;QItemSelectionModel::SelectionFlag&gt;)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;88&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QHeaderView::visualRegionForSelection(QItemSelection const&) const</primary></indexterm>QHeaderView::visualRegionForSelection(QItemSelection const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;89&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::selectedIndexes() const</primary></indexterm>QAbstractItemView::selectedIndexes() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;90&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::edit(QModelIndex const&, QAbstractItemView::EditTrigger, QEvent*)</primary></indexterm>QAbstractItemView::edit(QModelIndex const&, QAbstractItemView::EditTrigger, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;91&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::selectionCommand(QModelIndex const&, QEvent const*) const</primary></indexterm>QAbstractItemView::selectionCommand(QModelIndex const&, QEvent const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;92&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::startDrag(QFlags&lt;Qt::DropAction&gt;)</primary></indexterm>QAbstractItemView::startDrag(QFlags&lt;Qt::DropAction&gt;)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;93&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::viewOptions() const</primary></indexterm>QAbstractItemView::viewOptions() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;94&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QHeaderView::paintSection(QPainter*, QRect const&, int) const</primary></indexterm>QHeaderView::paintSection(QPainter*, QRect const&, int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;95&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QHeaderView::sectionSizeFromContents(int) const</primary></indexterm>QHeaderView::sectionSizeFromContents(int) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--classdata-->
<TABLE id="cls-38909-1">
<TITLE>Secondary vtable for QHeaderView</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>-16</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QHeaderView</primary></indexterm>typeinfo for QHeaderView</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QHeaderView::~QHeaderView()</primary></indexterm>non-virtual thunk to QHeaderView::~QHeaderView()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QHeaderView::~QHeaderView()</primary></indexterm>non-virtual thunk to QHeaderView::~QHeaderView()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::devType() const</primary></indexterm>non-virtual thunk to QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::paintEngine() const</primary></indexterm>non-virtual thunk to QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QHeaderView  class
is described by <XREF LINKEND="rtti-38704">
</PARA>
<!--classdata-->
<TABLE ID="rtti-38704">
<TITLE>typeinfo for QHeaderView</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QHeaderView</primary></indexterm>typeinfo name for QHeaderView</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QAbstractItemView</primary></indexterm>typeinfo for QAbstractItemView</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QItemEditorFactory</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QItemEditorFactory class
is described by <XREF LINKEND="cls-39012-0">
</PARA>
<!--classdata-->
<TABLE id="cls-39012-0">
<TITLE>Primary vtable for QItemEditorFactory</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QItemEditorFactory</primary></indexterm>typeinfo for QItemEditorFactory</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QItemEditorFactory::~QItemEditorFactory()</primary></indexterm>QItemEditorFactory::~QItemEditorFactory()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QItemEditorFactory::~QItemEditorFactory()</primary></indexterm>QItemEditorFactory::~QItemEditorFactory()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QItemEditorFactory::createEditor(QVariant::Type, QWidget*) const</primary></indexterm>QItemEditorFactory::createEditor(QVariant::Type, QWidget*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QItemEditorFactory::valuePropertyName(QVariant::Type) const</primary></indexterm>QItemEditorFactory::valuePropertyName(QVariant::Type) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QItemEditorFactory  class
is described by <XREF LINKEND="rtti-38807">
</PARA>
<!--classdata-->
<TABLE ID="rtti-38807">
<TITLE>typeinfo for QItemEditorFactory</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__class_type_info</primary></indexterm>vtable for __cxxabiv1::__class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QItemEditorFactory</primary></indexterm>typeinfo name for QItemEditorFactory</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QTreeWidgetItem</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QTreeWidgetItem class
is described by <XREF LINKEND="cls-38991-0">
</PARA>
<!--classdata-->
<TABLE id="cls-38991-0">
<TITLE>Primary vtable for QTreeWidgetItem</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QTreeWidgetItem</primary></indexterm>typeinfo for QTreeWidgetItem</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTreeWidgetItem::~QTreeWidgetItem()</primary></indexterm>QTreeWidgetItem::~QTreeWidgetItem()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTreeWidgetItem::~QTreeWidgetItem()</primary></indexterm>QTreeWidgetItem::~QTreeWidgetItem()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTreeWidgetItem::clone() const</primary></indexterm>QTreeWidgetItem::clone() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTreeWidgetItem::data(int, int) const</primary></indexterm>QTreeWidgetItem::data(int, int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTreeWidgetItem::setData(int, int, QVariant const&)</primary></indexterm>QTreeWidgetItem::setData(int, int, QVariant const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTreeWidgetItem::operator&lt;(QTreeWidgetItem const&) const</primary></indexterm>QTreeWidgetItem::operator&lt;(QTreeWidgetItem const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTreeWidgetItem::read(QDataStream&)</primary></indexterm>QTreeWidgetItem::read(QDataStream&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTreeWidgetItem::write(QDataStream&) const</primary></indexterm>QTreeWidgetItem::write(QDataStream&) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QTreeWidgetItem  class
is described by <XREF LINKEND="rtti-38786">
</PARA>
<!--classdata-->
<TABLE ID="rtti-38786">
<TITLE>typeinfo for QTreeWidgetItem</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__class_type_info</primary></indexterm>vtable for __cxxabiv1::__class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QTreeWidgetItem</primary></indexterm>typeinfo name for QTreeWidgetItem</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QTreeWidget</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QTreeWidget class
is described by <XREF LINKEND="cls-38931-0">
</PARA>
<!--classdata-->
<TABLE id="cls-38931-0">
<TITLE>Primary vtable for QTreeWidget</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QTreeWidget</primary></indexterm>typeinfo for QTreeWidget</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTreeWidget::metaObject() const</primary></indexterm>QTreeWidget::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTreeWidget::qt_metacast(char const*)</primary></indexterm>QTreeWidget::qt_metacast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTreeWidget::qt_metacall(QMetaObject::Call, int, void**)</primary></indexterm>QTreeWidget::qt_metacall(QMetaObject::Call, int, void**)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTreeWidget::~QTreeWidget()</primary></indexterm>QTreeWidget::~QTreeWidget()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTreeWidget::~QTreeWidget()</primary></indexterm>QTreeWidget::~QTreeWidget()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTreeWidget::event(QEvent*)</primary></indexterm>QTreeWidget::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::eventFilter(QObject*, QEvent*)</primary></indexterm>QObject::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTreeView::timerEvent(QTimerEvent*)</primary></indexterm>QTreeView::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QEvent*)</primary></indexterm>QObject::customEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::devType() const</primary></indexterm>QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setVisible(bool)</primary></indexterm>QWidget::setVisible(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractScrollArea::sizeHint() const</primary></indexterm>QAbstractScrollArea::sizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractScrollArea::minimumSizeHint() const</primary></indexterm>QAbstractScrollArea::minimumSizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::heightForWidth(int) const</primary></indexterm>QWidget::heightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paintEngine() const</primary></indexterm>QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTreeView::mousePressEvent(QMouseEvent*)</primary></indexterm>QTreeView::mousePressEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTreeView::mouseReleaseEvent(QMouseEvent*)</primary></indexterm>QTreeView::mouseReleaseEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTreeView::mouseDoubleClickEvent(QMouseEvent*)</primary></indexterm>QTreeView::mouseDoubleClickEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::mouseMoveEvent(QMouseEvent*)</primary></indexterm>QAbstractItemView::mouseMoveEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractScrollArea::wheelEvent(QWheelEvent*)</primary></indexterm>QAbstractScrollArea::wheelEvent(QWheelEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::keyPressEvent(QKeyEvent*)</primary></indexterm>QAbstractItemView::keyPressEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyReleaseEvent(QKeyEvent*)</primary></indexterm>QWidget::keyReleaseEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::focusInEvent(QFocusEvent*)</primary></indexterm>QAbstractItemView::focusInEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::focusOutEvent(QFocusEvent*)</primary></indexterm>QAbstractItemView::focusOutEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enterEvent(QEvent*)</primary></indexterm>QWidget::enterEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::leaveEvent(QEvent*)</primary></indexterm>QWidget::leaveEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTreeView::paintEvent(QPaintEvent*)</primary></indexterm>QTreeView::paintEvent(QPaintEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::moveEvent(QMoveEvent*)</primary></indexterm>QWidget::moveEvent(QMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::resizeEvent(QResizeEvent*)</primary></indexterm>QAbstractItemView::resizeEvent(QResizeEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::closeEvent(QCloseEvent*)</primary></indexterm>QWidget::closeEvent(QCloseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;33&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractScrollArea::contextMenuEvent(QContextMenuEvent*)</primary></indexterm>QAbstractScrollArea::contextMenuEvent(QContextMenuEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;34&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::tabletEvent(QTabletEvent*)</primary></indexterm>QWidget::tabletEvent(QTabletEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;35&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::actionEvent(QActionEvent*)</primary></indexterm>QWidget::actionEvent(QActionEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;36&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::dragEnterEvent(QDragEnterEvent*)</primary></indexterm>QAbstractItemView::dragEnterEvent(QDragEnterEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;37&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::dragMoveEvent(QDragMoveEvent*)</primary></indexterm>QAbstractItemView::dragMoveEvent(QDragMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;38&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::dragLeaveEvent(QDragLeaveEvent*)</primary></indexterm>QAbstractItemView::dragLeaveEvent(QDragLeaveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;39&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::dropEvent(QDropEvent*)</primary></indexterm>QAbstractItemView::dropEvent(QDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;40&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showEvent(QShowEvent*)</primary></indexterm>QWidget::showEvent(QShowEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;41&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::hideEvent(QHideEvent*)</primary></indexterm>QWidget::hideEvent(QHideEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;42&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::x11Event(_XEvent*)</primary></indexterm>QWidget::x11Event(_XEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;43&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::changeEvent(QEvent*)</primary></indexterm>QFrame::changeEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;44&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;45&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::inputMethodEvent(QInputMethodEvent*)</primary></indexterm>QWidget::inputMethodEvent(QInputMethodEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;46&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::inputMethodQuery(Qt::InputMethodQuery) const</primary></indexterm>QWidget::inputMethodQuery(Qt::InputMethodQuery) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;47&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusNextPrevChild(bool)</primary></indexterm>QWidget::focusNextPrevChild(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;48&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::styleChange(QStyle&)</primary></indexterm>QWidget::styleChange(QStyle&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;49&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enabledChange(bool)</primary></indexterm>QWidget::enabledChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;50&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paletteChange(QPalette const&)</primary></indexterm>QWidget::paletteChange(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;51&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::fontChange(QFont const&)</primary></indexterm>QWidget::fontChange(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;52&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::windowActivationChange(bool)</primary></indexterm>QWidget::windowActivationChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;53&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::languageChange()</primary></indexterm>QWidget::languageChange()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;54&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::viewportEvent(QEvent*)</primary></indexterm>QAbstractItemView::viewportEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;55&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTreeView::scrollContentsBy(int, int)</primary></indexterm>QTreeView::scrollContentsBy(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;56&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTreeWidget::setModel(QAbstractItemModel*)</primary></indexterm>QTreeWidget::setModel(QAbstractItemModel*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;57&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTreeView::setSelectionModel(QItemSelectionModel*)</primary></indexterm>QTreeView::setSelectionModel(QItemSelectionModel*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;58&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTreeView::keyboardSearch(QString const&)</primary></indexterm>QTreeView::keyboardSearch(QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;59&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTreeView::visualRect(QModelIndex const&) const</primary></indexterm>QTreeView::visualRect(QModelIndex const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;60&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTreeView::scrollTo(QModelIndex const&, QAbstractItemView::ScrollHint)</primary></indexterm>QTreeView::scrollTo(QModelIndex const&, QAbstractItemView::ScrollHint)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;61&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTreeView::indexAt(QPoint const&) const</primary></indexterm>QTreeView::indexAt(QPoint const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;62&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::sizeHintForRow(int) const</primary></indexterm>QAbstractItemView::sizeHintForRow(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;63&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTreeView::sizeHintForColumn(int) const</primary></indexterm>QTreeView::sizeHintForColumn(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;64&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTreeView::reset()</primary></indexterm>QTreeView::reset()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;65&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTreeView::setRootIndex(QModelIndex const&)</primary></indexterm>QTreeView::setRootIndex(QModelIndex const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;66&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTreeView::doItemsLayout()</primary></indexterm>QTreeView::doItemsLayout()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;67&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTreeView::selectAll()</primary></indexterm>QTreeView::selectAll()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;68&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTreeView::dataChanged(QModelIndex const&, QModelIndex const&)</primary></indexterm>QTreeView::dataChanged(QModelIndex const&, QModelIndex const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;69&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTreeView::rowsInserted(QModelIndex const&, int, int)</primary></indexterm>QTreeView::rowsInserted(QModelIndex const&, int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;70&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTreeView::rowsAboutToBeRemoved(QModelIndex const&, int, int)</primary></indexterm>QTreeView::rowsAboutToBeRemoved(QModelIndex const&, int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;71&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::selectionChanged(QItemSelection const&, QItemSelection const&)</primary></indexterm>QAbstractItemView::selectionChanged(QItemSelection const&, QItemSelection const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;72&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::currentChanged(QModelIndex const&, QModelIndex const&)</primary></indexterm>QAbstractItemView::currentChanged(QModelIndex const&, QModelIndex const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;73&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::updateEditorData()</primary></indexterm>QAbstractItemView::updateEditorData()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;74&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::updateEditorGeometries()</primary></indexterm>QAbstractItemView::updateEditorGeometries()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;75&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTreeView::updateGeometries()</primary></indexterm>QTreeView::updateGeometries()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;76&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::verticalScrollbarAction(int)</primary></indexterm>QAbstractItemView::verticalScrollbarAction(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;77&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTreeView::horizontalScrollbarAction(int)</primary></indexterm>QTreeView::horizontalScrollbarAction(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;78&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::verticalScrollbarValueChanged(int)</primary></indexterm>QAbstractItemView::verticalScrollbarValueChanged(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;79&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::horizontalScrollbarValueChanged(int)</primary></indexterm>QAbstractItemView::horizontalScrollbarValueChanged(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;80&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::closeEditor(QWidget*, QAbstractItemDelegate::EndEditHint)</primary></indexterm>QAbstractItemView::closeEditor(QWidget*, QAbstractItemDelegate::EndEditHint)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;81&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::commitData(QWidget*)</primary></indexterm>QAbstractItemView::commitData(QWidget*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;82&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::editorDestroyed(QObject*)</primary></indexterm>QAbstractItemView::editorDestroyed(QObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;83&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTreeView::moveCursor(QAbstractItemView::CursorAction, QFlags&lt;Qt::KeyboardModifier&gt;)</primary></indexterm>QTreeView::moveCursor(QAbstractItemView::CursorAction, QFlags&lt;Qt::KeyboardModifier&gt;)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;84&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTreeView::horizontalOffset() const</primary></indexterm>QTreeView::horizontalOffset() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;85&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTreeView::verticalOffset() const</primary></indexterm>QTreeView::verticalOffset() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;86&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTreeView::isIndexHidden(QModelIndex const&) const</primary></indexterm>QTreeView::isIndexHidden(QModelIndex const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;87&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTreeView::setSelection(QRect const&, QFlags&lt;QItemSelectionModel::SelectionFlag&gt;)</primary></indexterm>QTreeView::setSelection(QRect const&, QFlags&lt;QItemSelectionModel::SelectionFlag&gt;)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;88&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTreeView::visualRegionForSelection(QItemSelection const&) const</primary></indexterm>QTreeView::visualRegionForSelection(QItemSelection const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;89&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTreeView::selectedIndexes() const</primary></indexterm>QTreeView::selectedIndexes() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;90&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::edit(QModelIndex const&, QAbstractItemView::EditTrigger, QEvent*)</primary></indexterm>QAbstractItemView::edit(QModelIndex const&, QAbstractItemView::EditTrigger, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;91&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::selectionCommand(QModelIndex const&, QEvent const*) const</primary></indexterm>QAbstractItemView::selectionCommand(QModelIndex const&, QEvent const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;92&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::startDrag(QFlags&lt;Qt::DropAction&gt;)</primary></indexterm>QAbstractItemView::startDrag(QFlags&lt;Qt::DropAction&gt;)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;93&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::viewOptions() const</primary></indexterm>QAbstractItemView::viewOptions() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;94&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTreeView::drawRow(QPainter*, QStyleOptionViewItem const&, QModelIndex const&) const</primary></indexterm>QTreeView::drawRow(QPainter*, QStyleOptionViewItem const&, QModelIndex const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;95&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTreeView::drawBranches(QPainter*, QRect const&, QModelIndex const&) const</primary></indexterm>QTreeView::drawBranches(QPainter*, QRect const&, QModelIndex const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;96&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTreeWidget::mimeTypes() const</primary></indexterm>QTreeWidget::mimeTypes() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;97&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTreeWidget::mimeData(QList&lt;QTreeWidgetItem*&gt;) const</primary></indexterm>QTreeWidget::mimeData(QList&lt;QTreeWidgetItem*&gt;) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;98&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTreeWidget::dropMimeData(QTreeWidgetItem*, int, QMimeData const*, Qt::DropAction)</primary></indexterm>QTreeWidget::dropMimeData(QTreeWidgetItem*, int, QMimeData const*, Qt::DropAction)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;99&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTreeWidget::supportedDropActions() const</primary></indexterm>QTreeWidget::supportedDropActions() const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--classdata-->
<TABLE id="cls-38931-1">
<TITLE>Secondary vtable for QTreeWidget</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>-16</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QTreeWidget</primary></indexterm>typeinfo for QTreeWidget</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QTreeWidget::~QTreeWidget()</primary></indexterm>non-virtual thunk to QTreeWidget::~QTreeWidget()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QTreeWidget::~QTreeWidget()</primary></indexterm>non-virtual thunk to QTreeWidget::~QTreeWidget()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::devType() const</primary></indexterm>non-virtual thunk to QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::paintEngine() const</primary></indexterm>non-virtual thunk to QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QTreeWidget  class
is described by <XREF LINKEND="rtti-38726">
</PARA>
<!--classdata-->
<TABLE ID="rtti-38726">
<TITLE>typeinfo for QTreeWidget</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QTreeWidget</primary></indexterm>typeinfo name for QTreeWidget</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QTreeView</primary></indexterm>typeinfo for QTreeView</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QAccessibleBridgeFactoryInterface</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QAccessibleBridgeFactoryInterface class
is described by <XREF LINKEND="cls-39047-0">
</PARA>
<!--classdata-->
<TABLE id="cls-39047-0">
<TITLE>Primary vtable for QAccessibleBridgeFactoryInterface</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QAccessibleBridgeFactoryInterface</primary></indexterm>typeinfo for QAccessibleBridgeFactoryInterface</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAccessibleBridgeFactoryInterface::~QAccessibleBridgeFactoryInterface()</primary></indexterm>QAccessibleBridgeFactoryInterface::~QAccessibleBridgeFactoryInterface()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAccessibleBridgeFactoryInterface::~QAccessibleBridgeFactoryInterface()</primary></indexterm>QAccessibleBridgeFactoryInterface::~QAccessibleBridgeFactoryInterface()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QAccessibleBridgeFactoryInterface  class
is described by <XREF LINKEND="rtti-38842">
</PARA>
<!--classdata-->
<TABLE ID="rtti-38842">
<TITLE>typeinfo for QAccessibleBridgeFactoryInterface</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QAccessibleBridgeFactoryInterface</primary></indexterm>typeinfo name for QAccessibleBridgeFactoryInterface</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QFactoryInterface</primary></indexterm>typeinfo for QFactoryInterface</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QAccessibleBridgePlugin</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QAccessibleBridgePlugin class
is described by <XREF LINKEND="cls-39036-0">
</PARA>
<!--classdata-->
<TABLE id="cls-39036-0">
<TITLE>Primary vtable for QAccessibleBridgePlugin</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QAccessibleBridgePlugin</primary></indexterm>typeinfo for QAccessibleBridgePlugin</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAccessibleBridgePlugin::metaObject() const</primary></indexterm>QAccessibleBridgePlugin::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAccessibleBridgePlugin::qt_metacast(char const*)</primary></indexterm>QAccessibleBridgePlugin::qt_metacast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAccessibleBridgePlugin::qt_metacall(QMetaObject::Call, int, void**)</primary></indexterm>QAccessibleBridgePlugin::qt_metacall(QMetaObject::Call, int, void**)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAccessibleBridgePlugin::~QAccessibleBridgePlugin()</primary></indexterm>QAccessibleBridgePlugin::~QAccessibleBridgePlugin()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAccessibleBridgePlugin::~QAccessibleBridgePlugin()</primary></indexterm>QAccessibleBridgePlugin::~QAccessibleBridgePlugin()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::event(QEvent*)</primary></indexterm>QObject::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::eventFilter(QObject*, QEvent*)</primary></indexterm>QObject::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QEvent*)</primary></indexterm>QObject::customEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--classdata-->
<TABLE id="cls-39036-1">
<TITLE>Secondary vtable for QAccessibleBridgePlugin</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>-16</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QAccessibleBridgePlugin</primary></indexterm>typeinfo for QAccessibleBridgePlugin</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QAccessibleBridgePlugin::~QAccessibleBridgePlugin()</primary></indexterm>non-virtual thunk to QAccessibleBridgePlugin::~QAccessibleBridgePlugin()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QAccessibleBridgePlugin::~QAccessibleBridgePlugin()</primary></indexterm>non-virtual thunk to QAccessibleBridgePlugin::~QAccessibleBridgePlugin()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QAccessibleBridgePlugin  class
is described by <XREF LINKEND="rtti-38831">
</PARA>
<!--classdata-->
<TABLE ID="rtti-38831">
<TITLE>typeinfo for QAccessibleBridgePlugin</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__vmi_class_type_info</primary></indexterm>vtable for __cxxabiv1::__vmi_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QAccessibleBridgePlugin</primary></indexterm>typeinfo name for QAccessibleBridgePlugin</ENTRY>
</ROW>
<ROW>
<ENTRY>flags:</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QObject</primary></indexterm>typeinfo for QObject</ENTRY>
<ENTRY>2</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QAccessibleBridgeFactoryInterface</primary></indexterm>typeinfo for QAccessibleBridgeFactoryInterface</ENTRY>
<ENTRY>2050</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QAccessibleInterface</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QAccessibleInterface class
is described by <XREF LINKEND="cls-39025-0">
</PARA>
<!--classdata-->
<TABLE id="cls-39025-0">
<TITLE>Primary vtable for QAccessibleInterface</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QAccessibleInterface</primary></indexterm>typeinfo for QAccessibleInterface</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAccessibleInterface::~QAccessibleInterface()</primary></indexterm>QAccessibleInterface::~QAccessibleInterface()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAccessibleInterface::~QAccessibleInterface()</primary></indexterm>QAccessibleInterface::~QAccessibleInterface()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QAccessibleInterface  class
is described by <XREF LINKEND="rtti-38820">
</PARA>
<!--classdata-->
<TABLE ID="rtti-38820">
<TITLE>typeinfo for QAccessibleInterface</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QAccessibleInterface</primary></indexterm>typeinfo name for QAccessibleInterface</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QAccessible</primary></indexterm>typeinfo for QAccessible</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QAccessibleObject</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QAccessibleObject class
is described by <XREF LINKEND="cls-39001-0">
</PARA>
<!--classdata-->
<TABLE id="cls-39001-0">
<TITLE>Primary vtable for QAccessibleObject</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QAccessibleObject</primary></indexterm>typeinfo for QAccessibleObject</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAccessibleObject::~QAccessibleObject()</primary></indexterm>QAccessibleObject::~QAccessibleObject()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAccessibleObject::~QAccessibleObject()</primary></indexterm>QAccessibleObject::~QAccessibleObject()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAccessibleObject::isValid() const</primary></indexterm>QAccessibleObject::isValid() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAccessibleObject::object() const</primary></indexterm>QAccessibleObject::object() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAccessibleObject::setText(QAccessible::Text, int, QString const&)</primary></indexterm>QAccessibleObject::setText(QAccessible::Text, int, QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAccessibleObject::rect(int) const</primary></indexterm>QAccessibleObject::rect(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAccessibleObject::userActionCount(int) const</primary></indexterm>QAccessibleObject::userActionCount(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAccessibleObject::actionText(int, QAccessible::Text, int) const</primary></indexterm>QAccessibleObject::actionText(int, QAccessible::Text, int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAccessibleObject::doAction(int, int, QList&lt;QVariant&gt; const&)</primary></indexterm>QAccessibleObject::doAction(int, int, QList&lt;QVariant&gt; const&)</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QAccessibleObject  class
is described by <XREF LINKEND="rtti-38796">
</PARA>
<!--classdata-->
<TABLE ID="rtti-38796">
<TITLE>typeinfo for QAccessibleObject</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QAccessibleObject</primary></indexterm>typeinfo name for QAccessibleObject</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QAccessibleInterface</primary></indexterm>typeinfo for QAccessibleInterface</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QAccessibleApplication</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QAccessibleApplication class
is described by <XREF LINKEND="cls-39033-0">
</PARA>
<!--classdata-->
<TABLE id="cls-39033-0">
<TITLE>Primary vtable for QAccessibleApplication</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QAccessibleApplication</primary></indexterm>typeinfo for QAccessibleApplication</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAccessibleApplication::~QAccessibleApplication()</primary></indexterm>QAccessibleApplication::~QAccessibleApplication()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAccessibleApplication::~QAccessibleApplication()</primary></indexterm>QAccessibleApplication::~QAccessibleApplication()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAccessibleObject::isValid() const</primary></indexterm>QAccessibleObject::isValid() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAccessibleObject::object() const</primary></indexterm>QAccessibleObject::object() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAccessibleApplication::childCount() const</primary></indexterm>QAccessibleApplication::childCount() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAccessibleApplication::indexOfChild(QAccessibleInterface const*) const</primary></indexterm>QAccessibleApplication::indexOfChild(QAccessibleInterface const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAccessibleApplication::relationTo(int, QAccessibleInterface const*, int) const</primary></indexterm>QAccessibleApplication::relationTo(int, QAccessibleInterface const*, int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAccessibleApplication::childAt(int, int) const</primary></indexterm>QAccessibleApplication::childAt(int, int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAccessibleApplication::navigate(QAccessible::RelationFlag, int, QAccessibleInterface**) const</primary></indexterm>QAccessibleApplication::navigate(QAccessible::RelationFlag, int, QAccessibleInterface**) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAccessibleApplication::text(QAccessible::Text, int) const</primary></indexterm>QAccessibleApplication::text(QAccessible::Text, int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAccessibleObject::setText(QAccessible::Text, int, QString const&)</primary></indexterm>QAccessibleObject::setText(QAccessible::Text, int, QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAccessibleObject::rect(int) const</primary></indexterm>QAccessibleObject::rect(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAccessibleApplication::role(int) const</primary></indexterm>QAccessibleApplication::role(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAccessibleApplication::state(int) const</primary></indexterm>QAccessibleApplication::state(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAccessibleApplication::userActionCount(int) const</primary></indexterm>QAccessibleApplication::userActionCount(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAccessibleApplication::actionText(int, QAccessible::Text, int) const</primary></indexterm>QAccessibleApplication::actionText(int, QAccessible::Text, int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAccessibleApplication::doAction(int, int, QList&lt;QVariant&gt; const&)</primary></indexterm>QAccessibleApplication::doAction(int, int, QList&lt;QVariant&gt; const&)</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QAccessibleApplication  class
is described by <XREF LINKEND="rtti-38828">
</PARA>
<!--classdata-->
<TABLE ID="rtti-38828">
<TITLE>typeinfo for QAccessibleApplication</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QAccessibleApplication</primary></indexterm>typeinfo name for QAccessibleApplication</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QAccessibleObject</primary></indexterm>typeinfo for QAccessibleObject</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QAccessibleWidget</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QAccessibleWidget class
is described by <XREF LINKEND="cls-39003-0">
</PARA>
<!--classdata-->
<TABLE id="cls-39003-0">
<TITLE>Primary vtable for QAccessibleWidget</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QAccessibleWidget</primary></indexterm>typeinfo for QAccessibleWidget</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAccessibleWidget::~QAccessibleWidget()</primary></indexterm>QAccessibleWidget::~QAccessibleWidget()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAccessibleWidget::~QAccessibleWidget()</primary></indexterm>QAccessibleWidget::~QAccessibleWidget()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAccessibleObject::isValid() const</primary></indexterm>QAccessibleObject::isValid() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAccessibleObject::object() const</primary></indexterm>QAccessibleObject::object() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAccessibleWidget::childCount() const</primary></indexterm>QAccessibleWidget::childCount() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAccessibleWidget::indexOfChild(QAccessibleInterface const*) const</primary></indexterm>QAccessibleWidget::indexOfChild(QAccessibleInterface const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAccessibleWidget::relationTo(int, QAccessibleInterface const*, int) const</primary></indexterm>QAccessibleWidget::relationTo(int, QAccessibleInterface const*, int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAccessibleWidget::childAt(int, int) const</primary></indexterm>QAccessibleWidget::childAt(int, int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAccessibleWidget::navigate(QAccessible::RelationFlag, int, QAccessibleInterface**) const</primary></indexterm>QAccessibleWidget::navigate(QAccessible::RelationFlag, int, QAccessibleInterface**) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAccessibleWidget::text(QAccessible::Text, int) const</primary></indexterm>QAccessibleWidget::text(QAccessible::Text, int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAccessibleObject::setText(QAccessible::Text, int, QString const&)</primary></indexterm>QAccessibleObject::setText(QAccessible::Text, int, QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAccessibleWidget::rect(int) const</primary></indexterm>QAccessibleWidget::rect(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAccessibleWidget::role(int) const</primary></indexterm>QAccessibleWidget::role(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAccessibleWidget::state(int) const</primary></indexterm>QAccessibleWidget::state(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAccessibleObject::userActionCount(int) const</primary></indexterm>QAccessibleObject::userActionCount(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAccessibleWidget::actionText(int, QAccessible::Text, int) const</primary></indexterm>QAccessibleWidget::actionText(int, QAccessible::Text, int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAccessibleWidget::doAction(int, int, QList&lt;QVariant&gt; const&)</primary></indexterm>QAccessibleWidget::doAction(int, int, QList&lt;QVariant&gt; const&)</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QAccessibleWidget  class
is described by <XREF LINKEND="rtti-38798">
</PARA>
<!--classdata-->
<TABLE ID="rtti-38798">
<TITLE>typeinfo for QAccessibleWidget</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QAccessibleWidget</primary></indexterm>typeinfo name for QAccessibleWidget</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QAccessibleObject</primary></indexterm>typeinfo for QAccessibleObject</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QAccessibleFactoryInterface</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QAccessibleFactoryInterface class
is described by <XREF LINKEND="cls-39043-0">
</PARA>
<!--classdata-->
<TABLE id="cls-39043-0">
<TITLE>Primary vtable for QAccessibleFactoryInterface</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QAccessibleFactoryInterface</primary></indexterm>typeinfo for QAccessibleFactoryInterface</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAccessibleFactoryInterface::~QAccessibleFactoryInterface()</primary></indexterm>QAccessibleFactoryInterface::~QAccessibleFactoryInterface()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAccessibleFactoryInterface::~QAccessibleFactoryInterface()</primary></indexterm>QAccessibleFactoryInterface::~QAccessibleFactoryInterface()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QAccessibleFactoryInterface  class
is described by <XREF LINKEND="rtti-38838">
</PARA>
<!--classdata-->
<TABLE ID="rtti-38838">
<TITLE>typeinfo for QAccessibleFactoryInterface</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__vmi_class_type_info</primary></indexterm>vtable for __cxxabiv1::__vmi_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QAccessibleFactoryInterface</primary></indexterm>typeinfo name for QAccessibleFactoryInterface</ENTRY>
</ROW>
<ROW>
<ENTRY>flags:</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QAccessible</primary></indexterm>typeinfo for QAccessible</ENTRY>
<ENTRY>2</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QFactoryInterface</primary></indexterm>typeinfo for QFactoryInterface</ENTRY>
<ENTRY>2</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QAccessiblePlugin</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QAccessiblePlugin class
is described by <XREF LINKEND="cls-39002-0">
</PARA>
<!--classdata-->
<TABLE id="cls-39002-0">
<TITLE>Primary vtable for QAccessiblePlugin</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QAccessiblePlugin</primary></indexterm>typeinfo for QAccessiblePlugin</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAccessiblePlugin::metaObject() const</primary></indexterm>QAccessiblePlugin::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAccessiblePlugin::qt_metacast(char const*)</primary></indexterm>QAccessiblePlugin::qt_metacast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAccessiblePlugin::qt_metacall(QMetaObject::Call, int, void**)</primary></indexterm>QAccessiblePlugin::qt_metacall(QMetaObject::Call, int, void**)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAccessiblePlugin::~QAccessiblePlugin()</primary></indexterm>QAccessiblePlugin::~QAccessiblePlugin()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAccessiblePlugin::~QAccessiblePlugin()</primary></indexterm>QAccessiblePlugin::~QAccessiblePlugin()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::event(QEvent*)</primary></indexterm>QObject::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::eventFilter(QObject*, QEvent*)</primary></indexterm>QObject::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QEvent*)</primary></indexterm>QObject::customEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--classdata-->
<TABLE id="cls-39002-1">
<TITLE>Secondary vtable for QAccessiblePlugin</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>-16</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QAccessiblePlugin</primary></indexterm>typeinfo for QAccessiblePlugin</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QAccessiblePlugin::~QAccessiblePlugin()</primary></indexterm>non-virtual thunk to QAccessiblePlugin::~QAccessiblePlugin()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QAccessiblePlugin::~QAccessiblePlugin()</primary></indexterm>non-virtual thunk to QAccessiblePlugin::~QAccessiblePlugin()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QAccessiblePlugin  class
is described by <XREF LINKEND="rtti-38797">
</PARA>
<!--classdata-->
<TABLE ID="rtti-38797">
<TITLE>typeinfo for QAccessiblePlugin</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__vmi_class_type_info</primary></indexterm>vtable for __cxxabiv1::__vmi_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QAccessiblePlugin</primary></indexterm>typeinfo name for QAccessiblePlugin</ENTRY>
</ROW>
<ROW>
<ENTRY>flags:</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QObject</primary></indexterm>typeinfo for QObject</ENTRY>
<ENTRY>2</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QAccessibleFactoryInterface</primary></indexterm>typeinfo for QAccessibleFactoryInterface</ENTRY>
<ENTRY>2050</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QClipboard</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QClipboard class
is described by <XREF LINKEND="cls-38885-0">
</PARA>
<!--classdata-->
<TABLE id="cls-38885-0">
<TITLE>Primary vtable for QClipboard</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QClipboard</primary></indexterm>typeinfo for QClipboard</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QClipboard::metaObject() const</primary></indexterm>QClipboard::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QClipboard::qt_metacast(char const*)</primary></indexterm>QClipboard::qt_metacast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QClipboard::qt_metacall(QMetaObject::Call, int, void**)</primary></indexterm>QClipboard::qt_metacall(QMetaObject::Call, int, void**)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QClipboard::~QClipboard()</primary></indexterm>QClipboard::~QClipboard()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QClipboard::~QClipboard()</primary></indexterm>QClipboard::~QClipboard()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QClipboard::event(QEvent*)</primary></indexterm>QClipboard::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::eventFilter(QObject*, QEvent*)</primary></indexterm>QObject::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QEvent*)</primary></indexterm>QObject::customEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QClipboard::connectNotify(char const*)</primary></indexterm>QClipboard::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QClipboard  class
is described by <XREF LINKEND="rtti-38679">
</PARA>
<!--classdata-->
<TABLE ID="rtti-38679">
<TITLE>typeinfo for QClipboard</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QClipboard</primary></indexterm>typeinfo name for QClipboard</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QObject</primary></indexterm>typeinfo for QObject</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QDesktopWidget</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QDesktopWidget class
is described by <XREF LINKEND="cls-38967-0">
</PARA>
<!--classdata-->
<TABLE id="cls-38967-0">
<TITLE>Primary vtable for QDesktopWidget</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QDesktopWidget</primary></indexterm>typeinfo for QDesktopWidget</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDesktopWidget::metaObject() const</primary></indexterm>QDesktopWidget::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDesktopWidget::qt_metacast(char const*)</primary></indexterm>QDesktopWidget::qt_metacast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDesktopWidget::qt_metacall(QMetaObject::Call, int, void**)</primary></indexterm>QDesktopWidget::qt_metacall(QMetaObject::Call, int, void**)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDesktopWidget::~QDesktopWidget()</primary></indexterm>QDesktopWidget::~QDesktopWidget()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDesktopWidget::~QDesktopWidget()</primary></indexterm>QDesktopWidget::~QDesktopWidget()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::event(QEvent*)</primary></indexterm>QWidget::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::eventFilter(QObject*, QEvent*)</primary></indexterm>QObject::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QEvent*)</primary></indexterm>QObject::customEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::devType() const</primary></indexterm>QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setVisible(bool)</primary></indexterm>QWidget::setVisible(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::sizeHint() const</primary></indexterm>QWidget::sizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::minimumSizeHint() const</primary></indexterm>QWidget::minimumSizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::heightForWidth(int) const</primary></indexterm>QWidget::heightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paintEngine() const</primary></indexterm>QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mousePressEvent(QMouseEvent*)</primary></indexterm>QWidget::mousePressEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseReleaseEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseReleaseEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseDoubleClickEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseDoubleClickEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseMoveEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseMoveEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::wheelEvent(QWheelEvent*)</primary></indexterm>QWidget::wheelEvent(QWheelEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyPressEvent(QKeyEvent*)</primary></indexterm>QWidget::keyPressEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyReleaseEvent(QKeyEvent*)</primary></indexterm>QWidget::keyReleaseEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusInEvent(QFocusEvent*)</primary></indexterm>QWidget::focusInEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusOutEvent(QFocusEvent*)</primary></indexterm>QWidget::focusOutEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enterEvent(QEvent*)</primary></indexterm>QWidget::enterEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::leaveEvent(QEvent*)</primary></indexterm>QWidget::leaveEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paintEvent(QPaintEvent*)</primary></indexterm>QWidget::paintEvent(QPaintEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::moveEvent(QMoveEvent*)</primary></indexterm>QWidget::moveEvent(QMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDesktopWidget::resizeEvent(QResizeEvent*)</primary></indexterm>QDesktopWidget::resizeEvent(QResizeEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::closeEvent(QCloseEvent*)</primary></indexterm>QWidget::closeEvent(QCloseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;33&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::contextMenuEvent(QContextMenuEvent*)</primary></indexterm>QWidget::contextMenuEvent(QContextMenuEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;34&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::tabletEvent(QTabletEvent*)</primary></indexterm>QWidget::tabletEvent(QTabletEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;35&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::actionEvent(QActionEvent*)</primary></indexterm>QWidget::actionEvent(QActionEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;36&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragEnterEvent(QDragEnterEvent*)</primary></indexterm>QWidget::dragEnterEvent(QDragEnterEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;37&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragMoveEvent(QDragMoveEvent*)</primary></indexterm>QWidget::dragMoveEvent(QDragMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;38&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragLeaveEvent(QDragLeaveEvent*)</primary></indexterm>QWidget::dragLeaveEvent(QDragLeaveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;39&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dropEvent(QDropEvent*)</primary></indexterm>QWidget::dropEvent(QDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;40&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showEvent(QShowEvent*)</primary></indexterm>QWidget::showEvent(QShowEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;41&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::hideEvent(QHideEvent*)</primary></indexterm>QWidget::hideEvent(QHideEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;42&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::x11Event(_XEvent*)</primary></indexterm>QWidget::x11Event(_XEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;43&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::changeEvent(QEvent*)</primary></indexterm>QWidget::changeEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;44&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;45&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::inputMethodEvent(QInputMethodEvent*)</primary></indexterm>QWidget::inputMethodEvent(QInputMethodEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;46&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::inputMethodQuery(Qt::InputMethodQuery) const</primary></indexterm>QWidget::inputMethodQuery(Qt::InputMethodQuery) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;47&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusNextPrevChild(bool)</primary></indexterm>QWidget::focusNextPrevChild(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;48&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::styleChange(QStyle&)</primary></indexterm>QWidget::styleChange(QStyle&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;49&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enabledChange(bool)</primary></indexterm>QWidget::enabledChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;50&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paletteChange(QPalette const&)</primary></indexterm>QWidget::paletteChange(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;51&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::fontChange(QFont const&)</primary></indexterm>QWidget::fontChange(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;52&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::windowActivationChange(bool)</primary></indexterm>QWidget::windowActivationChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;53&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::languageChange()</primary></indexterm>QWidget::languageChange()</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--classdata-->
<TABLE id="cls-38967-1">
<TITLE>Secondary vtable for QDesktopWidget</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>-16</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QDesktopWidget</primary></indexterm>typeinfo for QDesktopWidget</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QDesktopWidget::~QDesktopWidget()</primary></indexterm>non-virtual thunk to QDesktopWidget::~QDesktopWidget()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QDesktopWidget::~QDesktopWidget()</primary></indexterm>non-virtual thunk to QDesktopWidget::~QDesktopWidget()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::devType() const</primary></indexterm>non-virtual thunk to QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::paintEngine() const</primary></indexterm>non-virtual thunk to QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QDesktopWidget  class
is described by <XREF LINKEND="rtti-38762">
</PARA>
<!--classdata-->
<TABLE ID="rtti-38762">
<TITLE>typeinfo for QDesktopWidget</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QDesktopWidget</primary></indexterm>typeinfo name for QDesktopWidget</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QWidget</primary></indexterm>typeinfo for QWidget</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QLayoutItem</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QLayoutItem class
is described by <XREF LINKEND="cls-38913-0">
</PARA>
<!--classdata-->
<TABLE id="cls-38913-0">
<TITLE>Primary vtable for QLayoutItem</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QLayoutItem</primary></indexterm>typeinfo for QLayoutItem</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLayoutItem::~QLayoutItem()</primary></indexterm>QLayoutItem::~QLayoutItem()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLayoutItem::~QLayoutItem()</primary></indexterm>QLayoutItem::~QLayoutItem()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLayoutItem::hasHeightForWidth() const</primary></indexterm>QLayoutItem::hasHeightForWidth() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLayoutItem::heightForWidth(int) const</primary></indexterm>QLayoutItem::heightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLayoutItem::minimumHeightForWidth(int) const</primary></indexterm>QLayoutItem::minimumHeightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLayoutItem::invalidate()</primary></indexterm>QLayoutItem::invalidate()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLayoutItem::widget()</primary></indexterm>QLayoutItem::widget()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLayoutItem::layout()</primary></indexterm>QLayoutItem::layout()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLayoutItem::spacerItem()</primary></indexterm>QLayoutItem::spacerItem()</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QLayoutItem  class
is described by <XREF LINKEND="rtti-38708">
</PARA>
<!--classdata-->
<TABLE ID="rtti-38708">
<TITLE>typeinfo for QLayoutItem</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__class_type_info</primary></indexterm>vtable for __cxxabiv1::__class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QLayoutItem</primary></indexterm>typeinfo name for QLayoutItem</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QSpacerItem</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QSpacerItem class
is described by <XREF LINKEND="cls-38927-0">
</PARA>
<!--classdata-->
<TABLE id="cls-38927-0">
<TITLE>Primary vtable for QSpacerItem</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QSpacerItem</primary></indexterm>typeinfo for QSpacerItem</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSpacerItem::~QSpacerItem()</primary></indexterm>QSpacerItem::~QSpacerItem()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSpacerItem::~QSpacerItem()</primary></indexterm>QSpacerItem::~QSpacerItem()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSpacerItem::sizeHint() const</primary></indexterm>QSpacerItem::sizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSpacerItem::minimumSize() const</primary></indexterm>QSpacerItem::minimumSize() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSpacerItem::maximumSize() const</primary></indexterm>QSpacerItem::maximumSize() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSpacerItem::expandingDirections() const</primary></indexterm>QSpacerItem::expandingDirections() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSpacerItem::setGeometry(QRect const&)</primary></indexterm>QSpacerItem::setGeometry(QRect const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSpacerItem::geometry() const</primary></indexterm>QSpacerItem::geometry() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSpacerItem::isEmpty() const</primary></indexterm>QSpacerItem::isEmpty() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLayoutItem::hasHeightForWidth() const</primary></indexterm>QLayoutItem::hasHeightForWidth() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLayoutItem::heightForWidth(int) const</primary></indexterm>QLayoutItem::heightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLayoutItem::minimumHeightForWidth(int) const</primary></indexterm>QLayoutItem::minimumHeightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLayoutItem::invalidate()</primary></indexterm>QLayoutItem::invalidate()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLayoutItem::widget()</primary></indexterm>QLayoutItem::widget()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLayoutItem::layout()</primary></indexterm>QLayoutItem::layout()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSpacerItem::spacerItem()</primary></indexterm>QSpacerItem::spacerItem()</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QSpacerItem  class
is described by <XREF LINKEND="rtti-38722">
</PARA>
<!--classdata-->
<TABLE ID="rtti-38722">
<TITLE>typeinfo for QSpacerItem</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QSpacerItem</primary></indexterm>typeinfo name for QSpacerItem</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QLayoutItem</primary></indexterm>typeinfo for QLayoutItem</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QWidgetItem</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QWidgetItem class
is described by <XREF LINKEND="cls-38934-0">
</PARA>
<!--classdata-->
<TABLE id="cls-38934-0">
<TITLE>Primary vtable for QWidgetItem</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QWidgetItem</primary></indexterm>typeinfo for QWidgetItem</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidgetItem::~QWidgetItem()</primary></indexterm>QWidgetItem::~QWidgetItem()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidgetItem::~QWidgetItem()</primary></indexterm>QWidgetItem::~QWidgetItem()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidgetItem::sizeHint() const</primary></indexterm>QWidgetItem::sizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidgetItem::minimumSize() const</primary></indexterm>QWidgetItem::minimumSize() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidgetItem::maximumSize() const</primary></indexterm>QWidgetItem::maximumSize() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidgetItem::expandingDirections() const</primary></indexterm>QWidgetItem::expandingDirections() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidgetItem::setGeometry(QRect const&)</primary></indexterm>QWidgetItem::setGeometry(QRect const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidgetItem::geometry() const</primary></indexterm>QWidgetItem::geometry() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidgetItem::isEmpty() const</primary></indexterm>QWidgetItem::isEmpty() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidgetItem::hasHeightForWidth() const</primary></indexterm>QWidgetItem::hasHeightForWidth() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidgetItem::heightForWidth(int) const</primary></indexterm>QWidgetItem::heightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLayoutItem::minimumHeightForWidth(int) const</primary></indexterm>QLayoutItem::minimumHeightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLayoutItem::invalidate()</primary></indexterm>QLayoutItem::invalidate()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidgetItem::widget()</primary></indexterm>QWidgetItem::widget()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLayoutItem::layout()</primary></indexterm>QLayoutItem::layout()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLayoutItem::spacerItem()</primary></indexterm>QLayoutItem::spacerItem()</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QWidgetItem  class
is described by <XREF LINKEND="rtti-38729">
</PARA>
<!--classdata-->
<TABLE ID="rtti-38729">
<TITLE>typeinfo for QWidgetItem</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QWidgetItem</primary></indexterm>typeinfo name for QWidgetItem</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QLayoutItem</primary></indexterm>typeinfo for QLayoutItem</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QLayout</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QLayout class
is described by <XREF LINKEND="cls-39060-0">
</PARA>
<!--classdata-->
<TABLE id="cls-39060-0">
<TITLE>Primary vtable for QLayout</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QLayout</primary></indexterm>typeinfo for QLayout</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLayout::metaObject() const</primary></indexterm>QLayout::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLayout::qt_metacast(char const*)</primary></indexterm>QLayout::qt_metacast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLayout::qt_metacall(QMetaObject::Call, int, void**)</primary></indexterm>QLayout::qt_metacall(QMetaObject::Call, int, void**)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLayout::~QLayout()</primary></indexterm>QLayout::~QLayout()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLayout::~QLayout()</primary></indexterm>QLayout::~QLayout()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::event(QEvent*)</primary></indexterm>QObject::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::eventFilter(QObject*, QEvent*)</primary></indexterm>QObject::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLayout::childEvent(QChildEvent*)</primary></indexterm>QLayout::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QEvent*)</primary></indexterm>QObject::customEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLayout::invalidate()</primary></indexterm>QLayout::invalidate()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLayout::geometry() const</primary></indexterm>QLayout::geometry() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLayout::expandingDirections() const</primary></indexterm>QLayout::expandingDirections() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLayout::minimumSize() const</primary></indexterm>QLayout::minimumSize() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLayout::maximumSize() const</primary></indexterm>QLayout::maximumSize() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLayout::indexOf(QWidget*) const</primary></indexterm>QLayout::indexOf(QWidget*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLayout::isEmpty() const</primary></indexterm>QLayout::isEmpty() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLayout::layout()</primary></indexterm>QLayout::layout()</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--classdata-->
<TABLE id="cls-39060-1">
<TITLE>Secondary vtable for QLayout</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>-16</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QLayout</primary></indexterm>typeinfo for QLayout</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QLayout::~QLayout()</primary></indexterm>non-virtual thunk to QLayout::~QLayout()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QLayout::~QLayout()</primary></indexterm>non-virtual thunk to QLayout::~QLayout()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QLayout::minimumSize() const</primary></indexterm>non-virtual thunk to QLayout::minimumSize() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QLayout::maximumSize() const</primary></indexterm>non-virtual thunk to QLayout::maximumSize() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QLayout::expandingDirections() const</primary></indexterm>non-virtual thunk to QLayout::expandingDirections() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QLayout::geometry() const</primary></indexterm>non-virtual thunk to QLayout::geometry() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QLayout::isEmpty() const</primary></indexterm>non-virtual thunk to QLayout::isEmpty() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLayoutItem::hasHeightForWidth() const</primary></indexterm>QLayoutItem::hasHeightForWidth() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLayoutItem::heightForWidth(int) const</primary></indexterm>QLayoutItem::heightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLayoutItem::minimumHeightForWidth(int) const</primary></indexterm>QLayoutItem::minimumHeightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QLayout::invalidate()</primary></indexterm>non-virtual thunk to QLayout::invalidate()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLayoutItem::widget()</primary></indexterm>QLayoutItem::widget()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QLayout::layout()</primary></indexterm>non-virtual thunk to QLayout::layout()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLayoutItem::spacerItem()</primary></indexterm>QLayoutItem::spacerItem()</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QLayout  class
is described by <XREF LINKEND="rtti-38855">
</PARA>
<!--classdata-->
<TABLE ID="rtti-38855">
<TITLE>typeinfo for QLayout</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__vmi_class_type_info</primary></indexterm>vtable for __cxxabiv1::__vmi_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QLayout</primary></indexterm>typeinfo name for QLayout</ENTRY>
</ROW>
<ROW>
<ENTRY>flags:</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QObject</primary></indexterm>typeinfo for QObject</ENTRY>
<ENTRY>2</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QLayoutItem</primary></indexterm>typeinfo for QLayoutItem</ENTRY>
<ENTRY>2050</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QGridLayout</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QGridLayout class
is described by <XREF LINKEND="cls-38907-0">
</PARA>
<!--classdata-->
<TABLE id="cls-38907-0">
<TITLE>Primary vtable for QGridLayout</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QGridLayout</primary></indexterm>typeinfo for QGridLayout</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGridLayout::metaObject() const</primary></indexterm>QGridLayout::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGridLayout::qt_metacast(char const*)</primary></indexterm>QGridLayout::qt_metacast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGridLayout::qt_metacall(QMetaObject::Call, int, void**)</primary></indexterm>QGridLayout::qt_metacall(QMetaObject::Call, int, void**)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGridLayout::~QGridLayout()</primary></indexterm>QGridLayout::~QGridLayout()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGridLayout::~QGridLayout()</primary></indexterm>QGridLayout::~QGridLayout()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::event(QEvent*)</primary></indexterm>QObject::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::eventFilter(QObject*, QEvent*)</primary></indexterm>QObject::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLayout::childEvent(QChildEvent*)</primary></indexterm>QLayout::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QEvent*)</primary></indexterm>QObject::customEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGridLayout::invalidate()</primary></indexterm>QGridLayout::invalidate()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLayout::geometry() const</primary></indexterm>QLayout::geometry() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGridLayout::addItem(QLayoutItem*)</primary></indexterm>QGridLayout::addItem(QLayoutItem*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGridLayout::expandingDirections() const</primary></indexterm>QGridLayout::expandingDirections() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGridLayout::minimumSize() const</primary></indexterm>QGridLayout::minimumSize() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGridLayout::maximumSize() const</primary></indexterm>QGridLayout::maximumSize() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGridLayout::setGeometry(QRect const&)</primary></indexterm>QGridLayout::setGeometry(QRect const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGridLayout::itemAt(int) const</primary></indexterm>QGridLayout::itemAt(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGridLayout::takeAt(int)</primary></indexterm>QGridLayout::takeAt(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLayout::indexOf(QWidget*) const</primary></indexterm>QLayout::indexOf(QWidget*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGridLayout::count() const</primary></indexterm>QGridLayout::count() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLayout::isEmpty() const</primary></indexterm>QLayout::isEmpty() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLayout::layout()</primary></indexterm>QLayout::layout()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGridLayout::sizeHint() const</primary></indexterm>QGridLayout::sizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGridLayout::hasHeightForWidth() const</primary></indexterm>QGridLayout::hasHeightForWidth() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGridLayout::heightForWidth(int) const</primary></indexterm>QGridLayout::heightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGridLayout::minimumHeightForWidth(int) const</primary></indexterm>QGridLayout::minimumHeightForWidth(int) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--classdata-->
<TABLE id="cls-38907-1">
<TITLE>Secondary vtable for QGridLayout</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>-16</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QGridLayout</primary></indexterm>typeinfo for QGridLayout</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QGridLayout::~QGridLayout()</primary></indexterm>non-virtual thunk to QGridLayout::~QGridLayout()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QGridLayout::~QGridLayout()</primary></indexterm>non-virtual thunk to QGridLayout::~QGridLayout()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QGridLayout::sizeHint() const</primary></indexterm>non-virtual thunk to QGridLayout::sizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QGridLayout::minimumSize() const</primary></indexterm>non-virtual thunk to QGridLayout::minimumSize() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QGridLayout::maximumSize() const</primary></indexterm>non-virtual thunk to QGridLayout::maximumSize() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QGridLayout::expandingDirections() const</primary></indexterm>non-virtual thunk to QGridLayout::expandingDirections() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QGridLayout::setGeometry(QRect const&)</primary></indexterm>non-virtual thunk to QGridLayout::setGeometry(QRect const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QLayout::geometry() const</primary></indexterm>non-virtual thunk to QLayout::geometry() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QLayout::isEmpty() const</primary></indexterm>non-virtual thunk to QLayout::isEmpty() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QGridLayout::hasHeightForWidth() const</primary></indexterm>non-virtual thunk to QGridLayout::hasHeightForWidth() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QGridLayout::heightForWidth(int) const</primary></indexterm>non-virtual thunk to QGridLayout::heightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QGridLayout::minimumHeightForWidth(int) const</primary></indexterm>non-virtual thunk to QGridLayout::minimumHeightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QGridLayout::invalidate()</primary></indexterm>non-virtual thunk to QGridLayout::invalidate()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLayoutItem::widget()</primary></indexterm>QLayoutItem::widget()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QLayout::layout()</primary></indexterm>non-virtual thunk to QLayout::layout()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLayoutItem::spacerItem()</primary></indexterm>QLayoutItem::spacerItem()</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QGridLayout  class
is described by <XREF LINKEND="rtti-38702">
</PARA>
<!--classdata-->
<TABLE ID="rtti-38702">
<TITLE>typeinfo for QGridLayout</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QGridLayout</primary></indexterm>typeinfo name for QGridLayout</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QLayout</primary></indexterm>typeinfo for QLayout</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QBoxLayout</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QBoxLayout class
is described by <XREF LINKEND="cls-38884-0">
</PARA>
<!--classdata-->
<TABLE id="cls-38884-0">
<TITLE>Primary vtable for QBoxLayout</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QBoxLayout</primary></indexterm>typeinfo for QBoxLayout</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QBoxLayout::metaObject() const</primary></indexterm>QBoxLayout::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QBoxLayout::qt_metacast(char const*)</primary></indexterm>QBoxLayout::qt_metacast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QBoxLayout::qt_metacall(QMetaObject::Call, int, void**)</primary></indexterm>QBoxLayout::qt_metacall(QMetaObject::Call, int, void**)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QBoxLayout::~QBoxLayout()</primary></indexterm>QBoxLayout::~QBoxLayout()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QBoxLayout::~QBoxLayout()</primary></indexterm>QBoxLayout::~QBoxLayout()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::event(QEvent*)</primary></indexterm>QObject::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::eventFilter(QObject*, QEvent*)</primary></indexterm>QObject::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLayout::childEvent(QChildEvent*)</primary></indexterm>QLayout::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QEvent*)</primary></indexterm>QObject::customEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QBoxLayout::invalidate()</primary></indexterm>QBoxLayout::invalidate()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLayout::geometry() const</primary></indexterm>QLayout::geometry() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QBoxLayout::addItem(QLayoutItem*)</primary></indexterm>QBoxLayout::addItem(QLayoutItem*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QBoxLayout::expandingDirections() const</primary></indexterm>QBoxLayout::expandingDirections() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QBoxLayout::minimumSize() const</primary></indexterm>QBoxLayout::minimumSize() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QBoxLayout::maximumSize() const</primary></indexterm>QBoxLayout::maximumSize() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QBoxLayout::setGeometry(QRect const&)</primary></indexterm>QBoxLayout::setGeometry(QRect const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QBoxLayout::itemAt(int) const</primary></indexterm>QBoxLayout::itemAt(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QBoxLayout::takeAt(int)</primary></indexterm>QBoxLayout::takeAt(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLayout::indexOf(QWidget*) const</primary></indexterm>QLayout::indexOf(QWidget*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QBoxLayout::count() const</primary></indexterm>QBoxLayout::count() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLayout::isEmpty() const</primary></indexterm>QLayout::isEmpty() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLayout::layout()</primary></indexterm>QLayout::layout()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QBoxLayout::sizeHint() const</primary></indexterm>QBoxLayout::sizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QBoxLayout::hasHeightForWidth() const</primary></indexterm>QBoxLayout::hasHeightForWidth() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QBoxLayout::heightForWidth(int) const</primary></indexterm>QBoxLayout::heightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QBoxLayout::minimumHeightForWidth(int) const</primary></indexterm>QBoxLayout::minimumHeightForWidth(int) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--classdata-->
<TABLE id="cls-38884-1">
<TITLE>Secondary vtable for QBoxLayout</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>-16</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QBoxLayout</primary></indexterm>typeinfo for QBoxLayout</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QBoxLayout::~QBoxLayout()</primary></indexterm>non-virtual thunk to QBoxLayout::~QBoxLayout()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QBoxLayout::~QBoxLayout()</primary></indexterm>non-virtual thunk to QBoxLayout::~QBoxLayout()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QBoxLayout::sizeHint() const</primary></indexterm>non-virtual thunk to QBoxLayout::sizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QBoxLayout::minimumSize() const</primary></indexterm>non-virtual thunk to QBoxLayout::minimumSize() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QBoxLayout::maximumSize() const</primary></indexterm>non-virtual thunk to QBoxLayout::maximumSize() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QBoxLayout::expandingDirections() const</primary></indexterm>non-virtual thunk to QBoxLayout::expandingDirections() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QBoxLayout::setGeometry(QRect const&)</primary></indexterm>non-virtual thunk to QBoxLayout::setGeometry(QRect const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QLayout::geometry() const</primary></indexterm>non-virtual thunk to QLayout::geometry() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QLayout::isEmpty() const</primary></indexterm>non-virtual thunk to QLayout::isEmpty() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QBoxLayout::hasHeightForWidth() const</primary></indexterm>non-virtual thunk to QBoxLayout::hasHeightForWidth() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QBoxLayout::heightForWidth(int) const</primary></indexterm>non-virtual thunk to QBoxLayout::heightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QBoxLayout::minimumHeightForWidth(int) const</primary></indexterm>non-virtual thunk to QBoxLayout::minimumHeightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QBoxLayout::invalidate()</primary></indexterm>non-virtual thunk to QBoxLayout::invalidate()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLayoutItem::widget()</primary></indexterm>QLayoutItem::widget()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QLayout::layout()</primary></indexterm>non-virtual thunk to QLayout::layout()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLayoutItem::spacerItem()</primary></indexterm>QLayoutItem::spacerItem()</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QBoxLayout  class
is described by <XREF LINKEND="rtti-38678">
</PARA>
<!--classdata-->
<TABLE ID="rtti-38678">
<TITLE>typeinfo for QBoxLayout</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QBoxLayout</primary></indexterm>typeinfo name for QBoxLayout</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QLayout</primary></indexterm>typeinfo for QLayout</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QHBoxLayout</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QHBoxLayout class
is described by <XREF LINKEND="cls-38908-0">
</PARA>
<!--classdata-->
<TABLE id="cls-38908-0">
<TITLE>Primary vtable for QHBoxLayout</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QHBoxLayout</primary></indexterm>typeinfo for QHBoxLayout</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QHBoxLayout::metaObject() const</primary></indexterm>QHBoxLayout::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QHBoxLayout::qt_metacast(char const*)</primary></indexterm>QHBoxLayout::qt_metacast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QHBoxLayout::qt_metacall(QMetaObject::Call, int, void**)</primary></indexterm>QHBoxLayout::qt_metacall(QMetaObject::Call, int, void**)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QHBoxLayout::~QHBoxLayout()</primary></indexterm>QHBoxLayout::~QHBoxLayout()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QHBoxLayout::~QHBoxLayout()</primary></indexterm>QHBoxLayout::~QHBoxLayout()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::event(QEvent*)</primary></indexterm>QObject::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::eventFilter(QObject*, QEvent*)</primary></indexterm>QObject::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLayout::childEvent(QChildEvent*)</primary></indexterm>QLayout::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QEvent*)</primary></indexterm>QObject::customEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QBoxLayout::invalidate()</primary></indexterm>QBoxLayout::invalidate()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLayout::geometry() const</primary></indexterm>QLayout::geometry() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QBoxLayout::addItem(QLayoutItem*)</primary></indexterm>QBoxLayout::addItem(QLayoutItem*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QBoxLayout::expandingDirections() const</primary></indexterm>QBoxLayout::expandingDirections() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QBoxLayout::minimumSize() const</primary></indexterm>QBoxLayout::minimumSize() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QBoxLayout::maximumSize() const</primary></indexterm>QBoxLayout::maximumSize() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QBoxLayout::setGeometry(QRect const&)</primary></indexterm>QBoxLayout::setGeometry(QRect const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QBoxLayout::itemAt(int) const</primary></indexterm>QBoxLayout::itemAt(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QBoxLayout::takeAt(int)</primary></indexterm>QBoxLayout::takeAt(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLayout::indexOf(QWidget*) const</primary></indexterm>QLayout::indexOf(QWidget*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QBoxLayout::count() const</primary></indexterm>QBoxLayout::count() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLayout::isEmpty() const</primary></indexterm>QLayout::isEmpty() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLayout::layout()</primary></indexterm>QLayout::layout()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QBoxLayout::sizeHint() const</primary></indexterm>QBoxLayout::sizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QBoxLayout::hasHeightForWidth() const</primary></indexterm>QBoxLayout::hasHeightForWidth() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QBoxLayout::heightForWidth(int) const</primary></indexterm>QBoxLayout::heightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QBoxLayout::minimumHeightForWidth(int) const</primary></indexterm>QBoxLayout::minimumHeightForWidth(int) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--classdata-->
<TABLE id="cls-38908-1">
<TITLE>Secondary vtable for QHBoxLayout</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>-16</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QHBoxLayout</primary></indexterm>typeinfo for QHBoxLayout</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QHBoxLayout::~QHBoxLayout()</primary></indexterm>non-virtual thunk to QHBoxLayout::~QHBoxLayout()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QHBoxLayout::~QHBoxLayout()</primary></indexterm>non-virtual thunk to QHBoxLayout::~QHBoxLayout()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QBoxLayout::sizeHint() const</primary></indexterm>non-virtual thunk to QBoxLayout::sizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QBoxLayout::minimumSize() const</primary></indexterm>non-virtual thunk to QBoxLayout::minimumSize() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QBoxLayout::maximumSize() const</primary></indexterm>non-virtual thunk to QBoxLayout::maximumSize() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QBoxLayout::expandingDirections() const</primary></indexterm>non-virtual thunk to QBoxLayout::expandingDirections() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QBoxLayout::setGeometry(QRect const&)</primary></indexterm>non-virtual thunk to QBoxLayout::setGeometry(QRect const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QLayout::geometry() const</primary></indexterm>non-virtual thunk to QLayout::geometry() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QLayout::isEmpty() const</primary></indexterm>non-virtual thunk to QLayout::isEmpty() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QBoxLayout::hasHeightForWidth() const</primary></indexterm>non-virtual thunk to QBoxLayout::hasHeightForWidth() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QBoxLayout::heightForWidth(int) const</primary></indexterm>non-virtual thunk to QBoxLayout::heightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QBoxLayout::minimumHeightForWidth(int) const</primary></indexterm>non-virtual thunk to QBoxLayout::minimumHeightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QBoxLayout::invalidate()</primary></indexterm>non-virtual thunk to QBoxLayout::invalidate()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLayoutItem::widget()</primary></indexterm>QLayoutItem::widget()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QLayout::layout()</primary></indexterm>non-virtual thunk to QLayout::layout()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLayoutItem::spacerItem()</primary></indexterm>QLayoutItem::spacerItem()</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QHBoxLayout  class
is described by <XREF LINKEND="rtti-38703">
</PARA>
<!--classdata-->
<TABLE ID="rtti-38703">
<TITLE>typeinfo for QHBoxLayout</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QHBoxLayout</primary></indexterm>typeinfo name for QHBoxLayout</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QBoxLayout</primary></indexterm>typeinfo for QBoxLayout</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QVBoxLayout</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QVBoxLayout class
is described by <XREF LINKEND="cls-38932-0">
</PARA>
<!--classdata-->
<TABLE id="cls-38932-0">
<TITLE>Primary vtable for QVBoxLayout</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QVBoxLayout</primary></indexterm>typeinfo for QVBoxLayout</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QVBoxLayout::metaObject() const</primary></indexterm>QVBoxLayout::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QVBoxLayout::qt_metacast(char const*)</primary></indexterm>QVBoxLayout::qt_metacast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QVBoxLayout::qt_metacall(QMetaObject::Call, int, void**)</primary></indexterm>QVBoxLayout::qt_metacall(QMetaObject::Call, int, void**)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QVBoxLayout::~QVBoxLayout()</primary></indexterm>QVBoxLayout::~QVBoxLayout()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QVBoxLayout::~QVBoxLayout()</primary></indexterm>QVBoxLayout::~QVBoxLayout()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::event(QEvent*)</primary></indexterm>QObject::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::eventFilter(QObject*, QEvent*)</primary></indexterm>QObject::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLayout::childEvent(QChildEvent*)</primary></indexterm>QLayout::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QEvent*)</primary></indexterm>QObject::customEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QBoxLayout::invalidate()</primary></indexterm>QBoxLayout::invalidate()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLayout::geometry() const</primary></indexterm>QLayout::geometry() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QBoxLayout::addItem(QLayoutItem*)</primary></indexterm>QBoxLayout::addItem(QLayoutItem*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QBoxLayout::expandingDirections() const</primary></indexterm>QBoxLayout::expandingDirections() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QBoxLayout::minimumSize() const</primary></indexterm>QBoxLayout::minimumSize() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QBoxLayout::maximumSize() const</primary></indexterm>QBoxLayout::maximumSize() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QBoxLayout::setGeometry(QRect const&)</primary></indexterm>QBoxLayout::setGeometry(QRect const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QBoxLayout::itemAt(int) const</primary></indexterm>QBoxLayout::itemAt(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QBoxLayout::takeAt(int)</primary></indexterm>QBoxLayout::takeAt(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLayout::indexOf(QWidget*) const</primary></indexterm>QLayout::indexOf(QWidget*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QBoxLayout::count() const</primary></indexterm>QBoxLayout::count() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLayout::isEmpty() const</primary></indexterm>QLayout::isEmpty() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLayout::layout()</primary></indexterm>QLayout::layout()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QBoxLayout::sizeHint() const</primary></indexterm>QBoxLayout::sizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QBoxLayout::hasHeightForWidth() const</primary></indexterm>QBoxLayout::hasHeightForWidth() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QBoxLayout::heightForWidth(int) const</primary></indexterm>QBoxLayout::heightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QBoxLayout::minimumHeightForWidth(int) const</primary></indexterm>QBoxLayout::minimumHeightForWidth(int) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--classdata-->
<TABLE id="cls-38932-1">
<TITLE>Secondary vtable for QVBoxLayout</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>-16</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QVBoxLayout</primary></indexterm>typeinfo for QVBoxLayout</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QVBoxLayout::~QVBoxLayout()</primary></indexterm>non-virtual thunk to QVBoxLayout::~QVBoxLayout()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QVBoxLayout::~QVBoxLayout()</primary></indexterm>non-virtual thunk to QVBoxLayout::~QVBoxLayout()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QBoxLayout::sizeHint() const</primary></indexterm>non-virtual thunk to QBoxLayout::sizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QBoxLayout::minimumSize() const</primary></indexterm>non-virtual thunk to QBoxLayout::minimumSize() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QBoxLayout::maximumSize() const</primary></indexterm>non-virtual thunk to QBoxLayout::maximumSize() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QBoxLayout::expandingDirections() const</primary></indexterm>non-virtual thunk to QBoxLayout::expandingDirections() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QBoxLayout::setGeometry(QRect const&)</primary></indexterm>non-virtual thunk to QBoxLayout::setGeometry(QRect const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QLayout::geometry() const</primary></indexterm>non-virtual thunk to QLayout::geometry() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QLayout::isEmpty() const</primary></indexterm>non-virtual thunk to QLayout::isEmpty() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QBoxLayout::hasHeightForWidth() const</primary></indexterm>non-virtual thunk to QBoxLayout::hasHeightForWidth() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QBoxLayout::heightForWidth(int) const</primary></indexterm>non-virtual thunk to QBoxLayout::heightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QBoxLayout::minimumHeightForWidth(int) const</primary></indexterm>non-virtual thunk to QBoxLayout::minimumHeightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QBoxLayout::invalidate()</primary></indexterm>non-virtual thunk to QBoxLayout::invalidate()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLayoutItem::widget()</primary></indexterm>QLayoutItem::widget()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QLayout::layout()</primary></indexterm>non-virtual thunk to QLayout::layout()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLayoutItem::spacerItem()</primary></indexterm>QLayoutItem::spacerItem()</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QVBoxLayout  class
is described by <XREF LINKEND="rtti-38727">
</PARA>
<!--classdata-->
<TABLE ID="rtti-38727">
<TITLE>typeinfo for QVBoxLayout</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QVBoxLayout</primary></indexterm>typeinfo name for QVBoxLayout</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QBoxLayout</primary></indexterm>typeinfo for QBoxLayout</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QShortcut</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QShortcut class
is described by <XREF LINKEND="cls-39082-0">
</PARA>
<!--classdata-->
<TABLE id="cls-39082-0">
<TITLE>Primary vtable for QShortcut</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QShortcut</primary></indexterm>typeinfo for QShortcut</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QShortcut::metaObject() const</primary></indexterm>QShortcut::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QShortcut::qt_metacast(char const*)</primary></indexterm>QShortcut::qt_metacast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QShortcut::qt_metacall(QMetaObject::Call, int, void**)</primary></indexterm>QShortcut::qt_metacall(QMetaObject::Call, int, void**)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QShortcut::~QShortcut()</primary></indexterm>QShortcut::~QShortcut()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QShortcut::~QShortcut()</primary></indexterm>QShortcut::~QShortcut()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QShortcut::event(QEvent*)</primary></indexterm>QShortcut::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::eventFilter(QObject*, QEvent*)</primary></indexterm>QObject::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QEvent*)</primary></indexterm>QObject::customEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QShortcut  class
is described by <XREF LINKEND="rtti-38877">
</PARA>
<!--classdata-->
<TABLE ID="rtti-38877">
<TITLE>typeinfo for QShortcut</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QShortcut</primary></indexterm>typeinfo name for QShortcut</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QObject</primary></indexterm>typeinfo for QObject</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QSessionManager</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QSessionManager class
is described by <XREF LINKEND="cls-38987-0">
</PARA>
<!--classdata-->
<TABLE id="cls-38987-0">
<TITLE>Primary vtable for QSessionManager</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QSessionManager</primary></indexterm>typeinfo for QSessionManager</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSessionManager::metaObject() const</primary></indexterm>QSessionManager::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSessionManager::qt_metacast(char const*)</primary></indexterm>QSessionManager::qt_metacast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSessionManager::qt_metacall(QMetaObject::Call, int, void**)</primary></indexterm>QSessionManager::qt_metacall(QMetaObject::Call, int, void**)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSessionManager::~QSessionManager()</primary></indexterm>QSessionManager::~QSessionManager()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSessionManager::~QSessionManager()</primary></indexterm>QSessionManager::~QSessionManager()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::event(QEvent*)</primary></indexterm>QObject::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::eventFilter(QObject*, QEvent*)</primary></indexterm>QObject::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QEvent*)</primary></indexterm>QObject::customEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QSessionManager  class
is described by <XREF LINKEND="rtti-38782">
</PARA>
<!--classdata-->
<TABLE ID="rtti-38782">
<TITLE>typeinfo for QSessionManager</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QSessionManager</primary></indexterm>typeinfo name for QSessionManager</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QObject</primary></indexterm>typeinfo for QObject</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QApplication</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QApplication class
is described by <XREF LINKEND="cls-38939-0">
</PARA>
<!--classdata-->
<TABLE id="cls-38939-0">
<TITLE>Primary vtable for QApplication</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QApplication</primary></indexterm>typeinfo for QApplication</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QApplication::metaObject() const</primary></indexterm>QApplication::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QApplication::qt_metacast(char const*)</primary></indexterm>QApplication::qt_metacast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QApplication::qt_metacall(QMetaObject::Call, int, void**)</primary></indexterm>QApplication::qt_metacall(QMetaObject::Call, int, void**)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QApplication::~QApplication()</primary></indexterm>QApplication::~QApplication()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QApplication::~QApplication()</primary></indexterm>QApplication::~QApplication()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QApplication::event(QEvent*)</primary></indexterm>QApplication::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::eventFilter(QObject*, QEvent*)</primary></indexterm>QObject::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QEvent*)</primary></indexterm>QObject::customEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QApplication::notify(QObject*, QEvent*)</primary></indexterm>QApplication::notify(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QApplication::compressEvent(QEvent*, QObject*, QPostEventList*)</primary></indexterm>QApplication::compressEvent(QEvent*, QObject*, QPostEventList*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QApplication::x11EventFilter(_XEvent*)</primary></indexterm>QApplication::x11EventFilter(_XEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QApplication::x11ClientMessage(QWidget*, _XEvent*, bool)</primary></indexterm>QApplication::x11ClientMessage(QWidget*, _XEvent*, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QApplication::commitData(QSessionManager&)</primary></indexterm>QApplication::commitData(QSessionManager&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QApplication::saveState(QSessionManager&)</primary></indexterm>QApplication::saveState(QSessionManager&)</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QApplication  class
is described by <XREF LINKEND="rtti-38734">
</PARA>
<!--classdata-->
<TABLE ID="rtti-38734">
<TITLE>typeinfo for QApplication</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QApplication</primary></indexterm>typeinfo name for QApplication</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QCoreApplication</primary></indexterm>typeinfo for QCoreApplication</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QAction</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QAction class
is described by <XREF LINKEND="cls-39057-0">
</PARA>
<!--classdata-->
<TABLE id="cls-39057-0">
<TITLE>Primary vtable for QAction</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QAction</primary></indexterm>typeinfo for QAction</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAction::metaObject() const</primary></indexterm>QAction::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAction::qt_metacast(char const*)</primary></indexterm>QAction::qt_metacast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAction::qt_metacall(QMetaObject::Call, int, void**)</primary></indexterm>QAction::qt_metacall(QMetaObject::Call, int, void**)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAction::~QAction()</primary></indexterm>QAction::~QAction()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAction::~QAction()</primary></indexterm>QAction::~QAction()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAction::event(QEvent*)</primary></indexterm>QAction::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::eventFilter(QObject*, QEvent*)</primary></indexterm>QObject::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QEvent*)</primary></indexterm>QObject::customEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QAction  class
is described by <XREF LINKEND="rtti-38852">
</PARA>
<!--classdata-->
<TABLE ID="rtti-38852">
<TITLE>typeinfo for QAction</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QAction</primary></indexterm>typeinfo name for QAction</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QObject</primary></indexterm>typeinfo for QObject</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QActionGroup</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QActionGroup class
is described by <XREF LINKEND="cls-38938-0">
</PARA>
<!--classdata-->
<TABLE id="cls-38938-0">
<TITLE>Primary vtable for QActionGroup</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QActionGroup</primary></indexterm>typeinfo for QActionGroup</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QActionGroup::metaObject() const</primary></indexterm>QActionGroup::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QActionGroup::qt_metacast(char const*)</primary></indexterm>QActionGroup::qt_metacast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QActionGroup::qt_metacall(QMetaObject::Call, int, void**)</primary></indexterm>QActionGroup::qt_metacall(QMetaObject::Call, int, void**)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QActionGroup::~QActionGroup()</primary></indexterm>QActionGroup::~QActionGroup()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QActionGroup::~QActionGroup()</primary></indexterm>QActionGroup::~QActionGroup()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::event(QEvent*)</primary></indexterm>QObject::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::eventFilter(QObject*, QEvent*)</primary></indexterm>QObject::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QEvent*)</primary></indexterm>QObject::customEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QActionGroup  class
is described by <XREF LINKEND="rtti-38733">
</PARA>
<!--classdata-->
<TABLE ID="rtti-38733">
<TITLE>typeinfo for QActionGroup</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QActionGroup</primary></indexterm>typeinfo name for QActionGroup</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QObject</primary></indexterm>typeinfo for QObject</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QSound</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QSound class
is described by <XREF LINKEND="cls-39055-0">
</PARA>
<!--classdata-->
<TABLE id="cls-39055-0">
<TITLE>Primary vtable for QSound</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QSound</primary></indexterm>typeinfo for QSound</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSound::metaObject() const</primary></indexterm>QSound::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSound::qt_metacast(char const*)</primary></indexterm>QSound::qt_metacast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSound::qt_metacall(QMetaObject::Call, int, void**)</primary></indexterm>QSound::qt_metacall(QMetaObject::Call, int, void**)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSound::~QSound()</primary></indexterm>QSound::~QSound()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSound::~QSound()</primary></indexterm>QSound::~QSound()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::event(QEvent*)</primary></indexterm>QObject::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::eventFilter(QObject*, QEvent*)</primary></indexterm>QObject::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QEvent*)</primary></indexterm>QObject::customEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QSound  class
is described by <XREF LINKEND="rtti-38850">
</PARA>
<!--classdata-->
<TABLE ID="rtti-38850">
<TITLE>typeinfo for QSound</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QSound</primary></indexterm>typeinfo name for QSound</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QObject</primary></indexterm>typeinfo for QObject</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QStackedLayout</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QStackedLayout class
is described by <XREF LINKEND="cls-38975-0">
</PARA>
<!--classdata-->
<TABLE id="cls-38975-0">
<TITLE>Primary vtable for QStackedLayout</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QStackedLayout</primary></indexterm>typeinfo for QStackedLayout</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStackedLayout::metaObject() const</primary></indexterm>QStackedLayout::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStackedLayout::qt_metacast(char const*)</primary></indexterm>QStackedLayout::qt_metacast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStackedLayout::qt_metacall(QMetaObject::Call, int, void**)</primary></indexterm>QStackedLayout::qt_metacall(QMetaObject::Call, int, void**)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStackedLayout::~QStackedLayout()</primary></indexterm>QStackedLayout::~QStackedLayout()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStackedLayout::~QStackedLayout()</primary></indexterm>QStackedLayout::~QStackedLayout()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::event(QEvent*)</primary></indexterm>QObject::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::eventFilter(QObject*, QEvent*)</primary></indexterm>QObject::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLayout::childEvent(QChildEvent*)</primary></indexterm>QLayout::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QEvent*)</primary></indexterm>QObject::customEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLayout::invalidate()</primary></indexterm>QLayout::invalidate()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLayout::geometry() const</primary></indexterm>QLayout::geometry() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStackedLayout::addItem(QLayoutItem*)</primary></indexterm>QStackedLayout::addItem(QLayoutItem*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLayout::expandingDirections() const</primary></indexterm>QLayout::expandingDirections() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStackedLayout::minimumSize() const</primary></indexterm>QStackedLayout::minimumSize() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLayout::maximumSize() const</primary></indexterm>QLayout::maximumSize() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStackedLayout::setGeometry(QRect const&)</primary></indexterm>QStackedLayout::setGeometry(QRect const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStackedLayout::itemAt(int) const</primary></indexterm>QStackedLayout::itemAt(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStackedLayout::takeAt(int)</primary></indexterm>QStackedLayout::takeAt(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLayout::indexOf(QWidget*) const</primary></indexterm>QLayout::indexOf(QWidget*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStackedLayout::count() const</primary></indexterm>QStackedLayout::count() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLayout::isEmpty() const</primary></indexterm>QLayout::isEmpty() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLayout::layout()</primary></indexterm>QLayout::layout()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStackedLayout::sizeHint() const</primary></indexterm>QStackedLayout::sizeHint() const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--classdata-->
<TABLE id="cls-38975-1">
<TITLE>Secondary vtable for QStackedLayout</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>-16</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QStackedLayout</primary></indexterm>typeinfo for QStackedLayout</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QStackedLayout::~QStackedLayout()</primary></indexterm>non-virtual thunk to QStackedLayout::~QStackedLayout()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QStackedLayout::~QStackedLayout()</primary></indexterm>non-virtual thunk to QStackedLayout::~QStackedLayout()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QStackedLayout::sizeHint() const</primary></indexterm>non-virtual thunk to QStackedLayout::sizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QStackedLayout::minimumSize() const</primary></indexterm>non-virtual thunk to QStackedLayout::minimumSize() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QLayout::maximumSize() const</primary></indexterm>non-virtual thunk to QLayout::maximumSize() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QLayout::expandingDirections() const</primary></indexterm>non-virtual thunk to QLayout::expandingDirections() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QStackedLayout::setGeometry(QRect const&)</primary></indexterm>non-virtual thunk to QStackedLayout::setGeometry(QRect const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QLayout::geometry() const</primary></indexterm>non-virtual thunk to QLayout::geometry() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QLayout::isEmpty() const</primary></indexterm>non-virtual thunk to QLayout::isEmpty() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLayoutItem::hasHeightForWidth() const</primary></indexterm>QLayoutItem::hasHeightForWidth() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLayoutItem::heightForWidth(int) const</primary></indexterm>QLayoutItem::heightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLayoutItem::minimumHeightForWidth(int) const</primary></indexterm>QLayoutItem::minimumHeightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QLayout::invalidate()</primary></indexterm>non-virtual thunk to QLayout::invalidate()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLayoutItem::widget()</primary></indexterm>QLayoutItem::widget()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QLayout::layout()</primary></indexterm>non-virtual thunk to QLayout::layout()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLayoutItem::spacerItem()</primary></indexterm>QLayoutItem::spacerItem()</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QStackedLayout  class
is described by <XREF LINKEND="rtti-38770">
</PARA>
<!--classdata-->
<TABLE ID="rtti-38770">
<TITLE>typeinfo for QStackedLayout</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QStackedLayout</primary></indexterm>typeinfo name for QStackedLayout</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QLayout</primary></indexterm>typeinfo for QLayout</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QCommonStyle</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QCommonStyle class
is described by <XREF LINKEND="cls-38942-0">
</PARA>
<!--classdata-->
<TABLE id="cls-38942-0">
<TITLE>Primary vtable for QCommonStyle</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QCommonStyle</primary></indexterm>typeinfo for QCommonStyle</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QCommonStyle::metaObject() const</primary></indexterm>QCommonStyle::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QCommonStyle::qt_metacast(char const*)</primary></indexterm>QCommonStyle::qt_metacast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QCommonStyle::qt_metacall(QMetaObject::Call, int, void**)</primary></indexterm>QCommonStyle::qt_metacall(QMetaObject::Call, int, void**)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QCommonStyle::~QCommonStyle()</primary></indexterm>QCommonStyle::~QCommonStyle()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QCommonStyle::~QCommonStyle()</primary></indexterm>QCommonStyle::~QCommonStyle()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::event(QEvent*)</primary></indexterm>QObject::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::eventFilter(QObject*, QEvent*)</primary></indexterm>QObject::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QEvent*)</primary></indexterm>QObject::customEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStyle::polish(QWidget*)</primary></indexterm>QStyle::polish(QWidget*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStyle::unpolish(QWidget*)</primary></indexterm>QStyle::unpolish(QWidget*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStyle::polish(QApplication*)</primary></indexterm>QStyle::polish(QApplication*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStyle::unpolish(QApplication*)</primary></indexterm>QStyle::unpolish(QApplication*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStyle::polish(QPalette&)</primary></indexterm>QStyle::polish(QPalette&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStyle::itemTextRect(QFontMetrics const&, QRect const&, int, bool, QString const&) const</primary></indexterm>QStyle::itemTextRect(QFontMetrics const&, QRect const&, int, bool, QString const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStyle::itemPixmapRect(QRect const&, int, QPixmap const&) const</primary></indexterm>QStyle::itemPixmapRect(QRect const&, int, QPixmap const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStyle::drawItemText(QPainter*, QRect const&, int, QPalette const&, bool, QString const&, QPalette::ColorRole) const</primary></indexterm>QStyle::drawItemText(QPainter*, QRect const&, int, QPalette const&, bool, QString const&, QPalette::ColorRole) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStyle::drawItemPixmap(QPainter*, QRect const&, int, QPixmap const&) const</primary></indexterm>QStyle::drawItemPixmap(QPainter*, QRect const&, int, QPixmap const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStyle::standardPalette() const</primary></indexterm>QStyle::standardPalette() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QCommonStyle::drawPrimitive(QStyle::PrimitiveElement, QStyleOption const*, QPainter*, QWidget const*) const</primary></indexterm>QCommonStyle::drawPrimitive(QStyle::PrimitiveElement, QStyleOption const*, QPainter*, QWidget const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QCommonStyle::drawControl(QStyle::ControlElement, QStyleOption const*, QPainter*, QWidget const*) const</primary></indexterm>QCommonStyle::drawControl(QStyle::ControlElement, QStyleOption const*, QPainter*, QWidget const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QCommonStyle::subElementRect(QStyle::SubElement, QStyleOption const*, QWidget const*) const</primary></indexterm>QCommonStyle::subElementRect(QStyle::SubElement, QStyleOption const*, QWidget const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QCommonStyle::drawComplexControl(QStyle::ComplexControl, QStyleOptionComplex const*, QPainter*, QWidget const*) const</primary></indexterm>QCommonStyle::drawComplexControl(QStyle::ComplexControl, QStyleOptionComplex const*, QPainter*, QWidget const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QCommonStyle::hitTestComplexControl(QStyle::ComplexControl, QStyleOptionComplex const*, QPoint const&, QWidget const*) const</primary></indexterm>QCommonStyle::hitTestComplexControl(QStyle::ComplexControl, QStyleOptionComplex const*, QPoint const&, QWidget const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QCommonStyle::subControlRect(QStyle::ComplexControl, QStyleOptionComplex const*, QStyle::SubControl, QWidget const*) const</primary></indexterm>QCommonStyle::subControlRect(QStyle::ComplexControl, QStyleOptionComplex const*, QStyle::SubControl, QWidget const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QCommonStyle::pixelMetric(QStyle::PixelMetric, QStyleOption const*, QWidget const*) const</primary></indexterm>QCommonStyle::pixelMetric(QStyle::PixelMetric, QStyleOption const*, QWidget const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QCommonStyle::sizeFromContents(QStyle::ContentsType, QStyleOption const*, QSize const&, QWidget const*) const</primary></indexterm>QCommonStyle::sizeFromContents(QStyle::ContentsType, QStyleOption const*, QSize const&, QWidget const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QCommonStyle::styleHint(QStyle::StyleHint, QStyleOption const*, QWidget const*, QStyleHintReturn*) const</primary></indexterm>QCommonStyle::styleHint(QStyle::StyleHint, QStyleOption const*, QWidget const*, QStyleHintReturn*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QCommonStyle::standardPixmap(QStyle::StandardPixmap, QStyleOption const*, QWidget const*) const</primary></indexterm>QCommonStyle::standardPixmap(QStyle::StandardPixmap, QStyleOption const*, QWidget const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QCommonStyle::generatedIconPixmap(QIcon::Mode, QPixmap const&, QStyleOption const*) const</primary></indexterm>QCommonStyle::generatedIconPixmap(QIcon::Mode, QPixmap const&, QStyleOption const*) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QCommonStyle  class
is described by <XREF LINKEND="rtti-38737">
</PARA>
<!--classdata-->
<TABLE ID="rtti-38737">
<TITLE>typeinfo for QCommonStyle</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QCommonStyle</primary></indexterm>typeinfo name for QCommonStyle</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QStyle</primary></indexterm>typeinfo for QStyle</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QMotifStyle</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QMotifStyle class
is described by <XREF LINKEND="cls-38918-0">
</PARA>
<!--classdata-->
<TABLE id="cls-38918-0">
<TITLE>Primary vtable for QMotifStyle</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QMotifStyle</primary></indexterm>typeinfo for QMotifStyle</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMotifStyle::metaObject() const</primary></indexterm>QMotifStyle::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMotifStyle::qt_metacast(char const*)</primary></indexterm>QMotifStyle::qt_metacast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMotifStyle::qt_metacall(QMetaObject::Call, int, void**)</primary></indexterm>QMotifStyle::qt_metacall(QMetaObject::Call, int, void**)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMotifStyle::~QMotifStyle()</primary></indexterm>QMotifStyle::~QMotifStyle()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMotifStyle::~QMotifStyle()</primary></indexterm>QMotifStyle::~QMotifStyle()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMotifStyle::event(QEvent*)</primary></indexterm>QMotifStyle::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMotifStyle::eventFilter(QObject*, QEvent*)</primary></indexterm>QMotifStyle::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMotifStyle::timerEvent(QTimerEvent*)</primary></indexterm>QMotifStyle::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QEvent*)</primary></indexterm>QObject::customEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMotifStyle::polish(QWidget*)</primary></indexterm>QMotifStyle::polish(QWidget*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMotifStyle::unpolish(QWidget*)</primary></indexterm>QMotifStyle::unpolish(QWidget*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMotifStyle::polish(QApplication*)</primary></indexterm>QMotifStyle::polish(QApplication*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMotifStyle::unpolish(QApplication*)</primary></indexterm>QMotifStyle::unpolish(QApplication*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMotifStyle::polish(QPalette&)</primary></indexterm>QMotifStyle::polish(QPalette&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStyle::itemTextRect(QFontMetrics const&, QRect const&, int, bool, QString const&) const</primary></indexterm>QStyle::itemTextRect(QFontMetrics const&, QRect const&, int, bool, QString const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStyle::itemPixmapRect(QRect const&, int, QPixmap const&) const</primary></indexterm>QStyle::itemPixmapRect(QRect const&, int, QPixmap const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStyle::drawItemText(QPainter*, QRect const&, int, QPalette const&, bool, QString const&, QPalette::ColorRole) const</primary></indexterm>QStyle::drawItemText(QPainter*, QRect const&, int, QPalette const&, bool, QString const&, QPalette::ColorRole) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStyle::drawItemPixmap(QPainter*, QRect const&, int, QPixmap const&) const</primary></indexterm>QStyle::drawItemPixmap(QPainter*, QRect const&, int, QPixmap const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMotifStyle::standardPalette() const</primary></indexterm>QMotifStyle::standardPalette() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMotifStyle::drawPrimitive(QStyle::PrimitiveElement, QStyleOption const*, QPainter*, QWidget const*) const</primary></indexterm>QMotifStyle::drawPrimitive(QStyle::PrimitiveElement, QStyleOption const*, QPainter*, QWidget const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMotifStyle::drawControl(QStyle::ControlElement, QStyleOption const*, QPainter*, QWidget const*) const</primary></indexterm>QMotifStyle::drawControl(QStyle::ControlElement, QStyleOption const*, QPainter*, QWidget const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMotifStyle::subElementRect(QStyle::SubElement, QStyleOption const*, QWidget const*) const</primary></indexterm>QMotifStyle::subElementRect(QStyle::SubElement, QStyleOption const*, QWidget const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMotifStyle::drawComplexControl(QStyle::ComplexControl, QStyleOptionComplex const*, QPainter*, QWidget const*) const</primary></indexterm>QMotifStyle::drawComplexControl(QStyle::ComplexControl, QStyleOptionComplex const*, QPainter*, QWidget const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QCommonStyle::hitTestComplexControl(QStyle::ComplexControl, QStyleOptionComplex const*, QPoint const&, QWidget const*) const</primary></indexterm>QCommonStyle::hitTestComplexControl(QStyle::ComplexControl, QStyleOptionComplex const*, QPoint const&, QWidget const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMotifStyle::subControlRect(QStyle::ComplexControl, QStyleOptionComplex const*, QStyle::SubControl, QWidget const*) const</primary></indexterm>QMotifStyle::subControlRect(QStyle::ComplexControl, QStyleOptionComplex const*, QStyle::SubControl, QWidget const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMotifStyle::pixelMetric(QStyle::PixelMetric, QStyleOption const*, QWidget const*) const</primary></indexterm>QMotifStyle::pixelMetric(QStyle::PixelMetric, QStyleOption const*, QWidget const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMotifStyle::sizeFromContents(QStyle::ContentsType, QStyleOption const*, QSize const&, QWidget const*) const</primary></indexterm>QMotifStyle::sizeFromContents(QStyle::ContentsType, QStyleOption const*, QSize const&, QWidget const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMotifStyle::styleHint(QStyle::StyleHint, QStyleOption const*, QWidget const*, QStyleHintReturn*) const</primary></indexterm>QMotifStyle::styleHint(QStyle::StyleHint, QStyleOption const*, QWidget const*, QStyleHintReturn*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMotifStyle::standardPixmap(QStyle::StandardPixmap, QStyleOption const*, QWidget const*) const</primary></indexterm>QMotifStyle::standardPixmap(QStyle::StandardPixmap, QStyleOption const*, QWidget const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QCommonStyle::generatedIconPixmap(QIcon::Mode, QPixmap const&, QStyleOption const*) const</primary></indexterm>QCommonStyle::generatedIconPixmap(QIcon::Mode, QPixmap const&, QStyleOption const*) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QMotifStyle  class
is described by <XREF LINKEND="rtti-38713">
</PARA>
<!--classdata-->
<TABLE ID="rtti-38713">
<TITLE>typeinfo for QMotifStyle</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QMotifStyle</primary></indexterm>typeinfo name for QMotifStyle</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QCommonStyle</primary></indexterm>typeinfo for QCommonStyle</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QStyleFactoryInterface</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QStyleFactoryInterface class
is described by <XREF LINKEND="cls-39034-0">
</PARA>
<!--classdata-->
<TABLE id="cls-39034-0">
<TITLE>Primary vtable for QStyleFactoryInterface</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QStyleFactoryInterface</primary></indexterm>typeinfo for QStyleFactoryInterface</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStyleFactoryInterface::~QStyleFactoryInterface()</primary></indexterm>QStyleFactoryInterface::~QStyleFactoryInterface()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStyleFactoryInterface::~QStyleFactoryInterface()</primary></indexterm>QStyleFactoryInterface::~QStyleFactoryInterface()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QStyleFactoryInterface  class
is described by <XREF LINKEND="rtti-38829">
</PARA>
<!--classdata-->
<TABLE ID="rtti-38829">
<TITLE>typeinfo for QStyleFactoryInterface</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QStyleFactoryInterface</primary></indexterm>typeinfo name for QStyleFactoryInterface</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QFactoryInterface</primary></indexterm>typeinfo for QFactoryInterface</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QStylePlugin</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QStylePlugin class
is described by <XREF LINKEND="cls-38953-0">
</PARA>
<!--classdata-->
<TABLE id="cls-38953-0">
<TITLE>Primary vtable for QStylePlugin</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QStylePlugin</primary></indexterm>typeinfo for QStylePlugin</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStylePlugin::metaObject() const</primary></indexterm>QStylePlugin::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStylePlugin::qt_metacast(char const*)</primary></indexterm>QStylePlugin::qt_metacast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStylePlugin::qt_metacall(QMetaObject::Call, int, void**)</primary></indexterm>QStylePlugin::qt_metacall(QMetaObject::Call, int, void**)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStylePlugin::~QStylePlugin()</primary></indexterm>QStylePlugin::~QStylePlugin()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStylePlugin::~QStylePlugin()</primary></indexterm>QStylePlugin::~QStylePlugin()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::event(QEvent*)</primary></indexterm>QObject::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::eventFilter(QObject*, QEvent*)</primary></indexterm>QObject::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QEvent*)</primary></indexterm>QObject::customEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--classdata-->
<TABLE id="cls-38953-1">
<TITLE>Secondary vtable for QStylePlugin</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>-16</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QStylePlugin</primary></indexterm>typeinfo for QStylePlugin</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QStylePlugin::~QStylePlugin()</primary></indexterm>non-virtual thunk to QStylePlugin::~QStylePlugin()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QStylePlugin::~QStylePlugin()</primary></indexterm>non-virtual thunk to QStylePlugin::~QStylePlugin()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QStylePlugin  class
is described by <XREF LINKEND="rtti-38748">
</PARA>
<!--classdata-->
<TABLE ID="rtti-38748">
<TITLE>typeinfo for QStylePlugin</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__vmi_class_type_info</primary></indexterm>vtable for __cxxabiv1::__vmi_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QStylePlugin</primary></indexterm>typeinfo name for QStylePlugin</ENTRY>
</ROW>
<ROW>
<ENTRY>flags:</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QObject</primary></indexterm>typeinfo for QObject</ENTRY>
<ENTRY>2</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QStyleFactoryInterface</primary></indexterm>typeinfo for QStyleFactoryInterface</ENTRY>
<ENTRY>2050</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QWindowsStyle</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QWindowsStyle class
is described by <XREF LINKEND="cls-38966-0">
</PARA>
<!--classdata-->
<TABLE id="cls-38966-0">
<TITLE>Primary vtable for QWindowsStyle</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QWindowsStyle</primary></indexterm>typeinfo for QWindowsStyle</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWindowsStyle::metaObject() const</primary></indexterm>QWindowsStyle::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWindowsStyle::qt_metacast(char const*)</primary></indexterm>QWindowsStyle::qt_metacast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWindowsStyle::qt_metacall(QMetaObject::Call, int, void**)</primary></indexterm>QWindowsStyle::qt_metacall(QMetaObject::Call, int, void**)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWindowsStyle::~QWindowsStyle()</primary></indexterm>QWindowsStyle::~QWindowsStyle()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWindowsStyle::~QWindowsStyle()</primary></indexterm>QWindowsStyle::~QWindowsStyle()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::event(QEvent*)</primary></indexterm>QObject::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWindowsStyle::eventFilter(QObject*, QEvent*)</primary></indexterm>QWindowsStyle::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWindowsStyle::timerEvent(QTimerEvent*)</primary></indexterm>QWindowsStyle::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QEvent*)</primary></indexterm>QObject::customEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWindowsStyle::polish(QWidget*)</primary></indexterm>QWindowsStyle::polish(QWidget*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWindowsStyle::unpolish(QWidget*)</primary></indexterm>QWindowsStyle::unpolish(QWidget*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWindowsStyle::polish(QApplication*)</primary></indexterm>QWindowsStyle::polish(QApplication*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWindowsStyle::unpolish(QApplication*)</primary></indexterm>QWindowsStyle::unpolish(QApplication*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWindowsStyle::polish(QPalette&)</primary></indexterm>QWindowsStyle::polish(QPalette&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStyle::itemTextRect(QFontMetrics const&, QRect const&, int, bool, QString const&) const</primary></indexterm>QStyle::itemTextRect(QFontMetrics const&, QRect const&, int, bool, QString const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStyle::itemPixmapRect(QRect const&, int, QPixmap const&) const</primary></indexterm>QStyle::itemPixmapRect(QRect const&, int, QPixmap const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStyle::drawItemText(QPainter*, QRect const&, int, QPalette const&, bool, QString const&, QPalette::ColorRole) const</primary></indexterm>QStyle::drawItemText(QPainter*, QRect const&, int, QPalette const&, bool, QString const&, QPalette::ColorRole) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStyle::drawItemPixmap(QPainter*, QRect const&, int, QPixmap const&) const</primary></indexterm>QStyle::drawItemPixmap(QPainter*, QRect const&, int, QPixmap const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStyle::standardPalette() const</primary></indexterm>QStyle::standardPalette() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWindowsStyle::drawPrimitive(QStyle::PrimitiveElement, QStyleOption const*, QPainter*, QWidget const*) const</primary></indexterm>QWindowsStyle::drawPrimitive(QStyle::PrimitiveElement, QStyleOption const*, QPainter*, QWidget const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWindowsStyle::drawControl(QStyle::ControlElement, QStyleOption const*, QPainter*, QWidget const*) const</primary></indexterm>QWindowsStyle::drawControl(QStyle::ControlElement, QStyleOption const*, QPainter*, QWidget const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWindowsStyle::subElementRect(QStyle::SubElement, QStyleOption const*, QWidget const*) const</primary></indexterm>QWindowsStyle::subElementRect(QStyle::SubElement, QStyleOption const*, QWidget const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWindowsStyle::drawComplexControl(QStyle::ComplexControl, QStyleOptionComplex const*, QPainter*, QWidget const*) const</primary></indexterm>QWindowsStyle::drawComplexControl(QStyle::ComplexControl, QStyleOptionComplex const*, QPainter*, QWidget const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QCommonStyle::hitTestComplexControl(QStyle::ComplexControl, QStyleOptionComplex const*, QPoint const&, QWidget const*) const</primary></indexterm>QCommonStyle::hitTestComplexControl(QStyle::ComplexControl, QStyleOptionComplex const*, QPoint const&, QWidget const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QCommonStyle::subControlRect(QStyle::ComplexControl, QStyleOptionComplex const*, QStyle::SubControl, QWidget const*) const</primary></indexterm>QCommonStyle::subControlRect(QStyle::ComplexControl, QStyleOptionComplex const*, QStyle::SubControl, QWidget const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWindowsStyle::pixelMetric(QStyle::PixelMetric, QStyleOption const*, QWidget const*) const</primary></indexterm>QWindowsStyle::pixelMetric(QStyle::PixelMetric, QStyleOption const*, QWidget const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWindowsStyle::sizeFromContents(QStyle::ContentsType, QStyleOption const*, QSize const&, QWidget const*) const</primary></indexterm>QWindowsStyle::sizeFromContents(QStyle::ContentsType, QStyleOption const*, QSize const&, QWidget const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWindowsStyle::styleHint(QStyle::StyleHint, QStyleOption const*, QWidget const*, QStyleHintReturn*) const</primary></indexterm>QWindowsStyle::styleHint(QStyle::StyleHint, QStyleOption const*, QWidget const*, QStyleHintReturn*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWindowsStyle::standardPixmap(QStyle::StandardPixmap, QStyleOption const*, QWidget const*) const</primary></indexterm>QWindowsStyle::standardPixmap(QStyle::StandardPixmap, QStyleOption const*, QWidget const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QCommonStyle::generatedIconPixmap(QIcon::Mode, QPixmap const&, QStyleOption const*) const</primary></indexterm>QCommonStyle::generatedIconPixmap(QIcon::Mode, QPixmap const&, QStyleOption const*) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QWindowsStyle  class
is described by <XREF LINKEND="rtti-38761">
</PARA>
<!--classdata-->
<TABLE ID="rtti-38761">
<TITLE>typeinfo for QWindowsStyle</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QWindowsStyle</primary></indexterm>typeinfo name for QWindowsStyle</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QCommonStyle</primary></indexterm>typeinfo for QCommonStyle</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QCDEStyle</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QCDEStyle class
is described by <XREF LINKEND="cls-39072-0">
</PARA>
<!--classdata-->
<TABLE id="cls-39072-0">
<TITLE>Primary vtable for QCDEStyle</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QCDEStyle</primary></indexterm>typeinfo for QCDEStyle</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QCDEStyle::metaObject() const</primary></indexterm>QCDEStyle::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QCDEStyle::qt_metacast(char const*)</primary></indexterm>QCDEStyle::qt_metacast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QCDEStyle::qt_metacall(QMetaObject::Call, int, void**)</primary></indexterm>QCDEStyle::qt_metacall(QMetaObject::Call, int, void**)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QCDEStyle::~QCDEStyle()</primary></indexterm>QCDEStyle::~QCDEStyle()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QCDEStyle::~QCDEStyle()</primary></indexterm>QCDEStyle::~QCDEStyle()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMotifStyle::event(QEvent*)</primary></indexterm>QMotifStyle::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMotifStyle::eventFilter(QObject*, QEvent*)</primary></indexterm>QMotifStyle::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMotifStyle::timerEvent(QTimerEvent*)</primary></indexterm>QMotifStyle::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QEvent*)</primary></indexterm>QObject::customEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMotifStyle::polish(QWidget*)</primary></indexterm>QMotifStyle::polish(QWidget*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMotifStyle::unpolish(QWidget*)</primary></indexterm>QMotifStyle::unpolish(QWidget*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMotifStyle::polish(QApplication*)</primary></indexterm>QMotifStyle::polish(QApplication*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMotifStyle::unpolish(QApplication*)</primary></indexterm>QMotifStyle::unpolish(QApplication*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMotifStyle::polish(QPalette&)</primary></indexterm>QMotifStyle::polish(QPalette&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStyle::itemTextRect(QFontMetrics const&, QRect const&, int, bool, QString const&) const</primary></indexterm>QStyle::itemTextRect(QFontMetrics const&, QRect const&, int, bool, QString const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStyle::itemPixmapRect(QRect const&, int, QPixmap const&) const</primary></indexterm>QStyle::itemPixmapRect(QRect const&, int, QPixmap const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStyle::drawItemText(QPainter*, QRect const&, int, QPalette const&, bool, QString const&, QPalette::ColorRole) const</primary></indexterm>QStyle::drawItemText(QPainter*, QRect const&, int, QPalette const&, bool, QString const&, QPalette::ColorRole) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStyle::drawItemPixmap(QPainter*, QRect const&, int, QPixmap const&) const</primary></indexterm>QStyle::drawItemPixmap(QPainter*, QRect const&, int, QPixmap const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QCDEStyle::standardPalette() const</primary></indexterm>QCDEStyle::standardPalette() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QCDEStyle::drawPrimitive(QStyle::PrimitiveElement, QStyleOption const*, QPainter*, QWidget const*) const</primary></indexterm>QCDEStyle::drawPrimitive(QStyle::PrimitiveElement, QStyleOption const*, QPainter*, QWidget const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QCDEStyle::drawControl(QStyle::ControlElement, QStyleOption const*, QPainter*, QWidget const*) const</primary></indexterm>QCDEStyle::drawControl(QStyle::ControlElement, QStyleOption const*, QPainter*, QWidget const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMotifStyle::subElementRect(QStyle::SubElement, QStyleOption const*, QWidget const*) const</primary></indexterm>QMotifStyle::subElementRect(QStyle::SubElement, QStyleOption const*, QWidget const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMotifStyle::drawComplexControl(QStyle::ComplexControl, QStyleOptionComplex const*, QPainter*, QWidget const*) const</primary></indexterm>QMotifStyle::drawComplexControl(QStyle::ComplexControl, QStyleOptionComplex const*, QPainter*, QWidget const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QCommonStyle::hitTestComplexControl(QStyle::ComplexControl, QStyleOptionComplex const*, QPoint const&, QWidget const*) const</primary></indexterm>QCommonStyle::hitTestComplexControl(QStyle::ComplexControl, QStyleOptionComplex const*, QPoint const&, QWidget const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMotifStyle::subControlRect(QStyle::ComplexControl, QStyleOptionComplex const*, QStyle::SubControl, QWidget const*) const</primary></indexterm>QMotifStyle::subControlRect(QStyle::ComplexControl, QStyleOptionComplex const*, QStyle::SubControl, QWidget const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QCDEStyle::pixelMetric(QStyle::PixelMetric, QStyleOption const*, QWidget const*) const</primary></indexterm>QCDEStyle::pixelMetric(QStyle::PixelMetric, QStyleOption const*, QWidget const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMotifStyle::sizeFromContents(QStyle::ContentsType, QStyleOption const*, QSize const&, QWidget const*) const</primary></indexterm>QMotifStyle::sizeFromContents(QStyle::ContentsType, QStyleOption const*, QSize const&, QWidget const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMotifStyle::styleHint(QStyle::StyleHint, QStyleOption const*, QWidget const*, QStyleHintReturn*) const</primary></indexterm>QMotifStyle::styleHint(QStyle::StyleHint, QStyleOption const*, QWidget const*, QStyleHintReturn*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMotifStyle::standardPixmap(QStyle::StandardPixmap, QStyleOption const*, QWidget const*) const</primary></indexterm>QMotifStyle::standardPixmap(QStyle::StandardPixmap, QStyleOption const*, QWidget const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QCommonStyle::generatedIconPixmap(QIcon::Mode, QPixmap const&, QStyleOption const*) const</primary></indexterm>QCommonStyle::generatedIconPixmap(QIcon::Mode, QPixmap const&, QStyleOption const*) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QCDEStyle  class
is described by <XREF LINKEND="rtti-38867">
</PARA>
<!--classdata-->
<TABLE ID="rtti-38867">
<TITLE>typeinfo for QCDEStyle</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QCDEStyle</primary></indexterm>typeinfo name for QCDEStyle</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QMotifStyle</primary></indexterm>typeinfo for QMotifStyle</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QPlastiqueStyle</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QPlastiqueStyle class
is described by <XREF LINKEND="cls-38985-0">
</PARA>
<!--classdata-->
<TABLE id="cls-38985-0">
<TITLE>Primary vtable for QPlastiqueStyle</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QPlastiqueStyle</primary></indexterm>typeinfo for QPlastiqueStyle</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPlastiqueStyle::metaObject() const</primary></indexterm>QPlastiqueStyle::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPlastiqueStyle::qt_metacast(char const*)</primary></indexterm>QPlastiqueStyle::qt_metacast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPlastiqueStyle::qt_metacall(QMetaObject::Call, int, void**)</primary></indexterm>QPlastiqueStyle::qt_metacall(QMetaObject::Call, int, void**)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPlastiqueStyle::~QPlastiqueStyle()</primary></indexterm>QPlastiqueStyle::~QPlastiqueStyle()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPlastiqueStyle::~QPlastiqueStyle()</primary></indexterm>QPlastiqueStyle::~QPlastiqueStyle()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::event(QEvent*)</primary></indexterm>QObject::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPlastiqueStyle::eventFilter(QObject*, QEvent*)</primary></indexterm>QPlastiqueStyle::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPlastiqueStyle::timerEvent(QTimerEvent*)</primary></indexterm>QPlastiqueStyle::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QEvent*)</primary></indexterm>QObject::customEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPlastiqueStyle::polish(QWidget*)</primary></indexterm>QPlastiqueStyle::polish(QWidget*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPlastiqueStyle::unpolish(QWidget*)</primary></indexterm>QPlastiqueStyle::unpolish(QWidget*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPlastiqueStyle::polish(QApplication*)</primary></indexterm>QPlastiqueStyle::polish(QApplication*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPlastiqueStyle::unpolish(QApplication*)</primary></indexterm>QPlastiqueStyle::unpolish(QApplication*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPlastiqueStyle::polish(QPalette&)</primary></indexterm>QPlastiqueStyle::polish(QPalette&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStyle::itemTextRect(QFontMetrics const&, QRect const&, int, bool, QString const&) const</primary></indexterm>QStyle::itemTextRect(QFontMetrics const&, QRect const&, int, bool, QString const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStyle::itemPixmapRect(QRect const&, int, QPixmap const&) const</primary></indexterm>QStyle::itemPixmapRect(QRect const&, int, QPixmap const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStyle::drawItemText(QPainter*, QRect const&, int, QPalette const&, bool, QString const&, QPalette::ColorRole) const</primary></indexterm>QStyle::drawItemText(QPainter*, QRect const&, int, QPalette const&, bool, QString const&, QPalette::ColorRole) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStyle::drawItemPixmap(QPainter*, QRect const&, int, QPixmap const&) const</primary></indexterm>QStyle::drawItemPixmap(QPainter*, QRect const&, int, QPixmap const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPlastiqueStyle::standardPalette() const</primary></indexterm>QPlastiqueStyle::standardPalette() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPlastiqueStyle::drawPrimitive(QStyle::PrimitiveElement, QStyleOption const*, QPainter*, QWidget const*) const</primary></indexterm>QPlastiqueStyle::drawPrimitive(QStyle::PrimitiveElement, QStyleOption const*, QPainter*, QWidget const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPlastiqueStyle::drawControl(QStyle::ControlElement, QStyleOption const*, QPainter*, QWidget const*) const</primary></indexterm>QPlastiqueStyle::drawControl(QStyle::ControlElement, QStyleOption const*, QPainter*, QWidget const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPlastiqueStyle::subElementRect(QStyle::SubElement, QStyleOption const*, QWidget const*) const</primary></indexterm>QPlastiqueStyle::subElementRect(QStyle::SubElement, QStyleOption const*, QWidget const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPlastiqueStyle::drawComplexControl(QStyle::ComplexControl, QStyleOptionComplex const*, QPainter*, QWidget const*) const</primary></indexterm>QPlastiqueStyle::drawComplexControl(QStyle::ComplexControl, QStyleOptionComplex const*, QPainter*, QWidget const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPlastiqueStyle::hitTestComplexControl(QStyle::ComplexControl, QStyleOptionComplex const*, QPoint const&, QWidget const*) const</primary></indexterm>QPlastiqueStyle::hitTestComplexControl(QStyle::ComplexControl, QStyleOptionComplex const*, QPoint const&, QWidget const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPlastiqueStyle::subControlRect(QStyle::ComplexControl, QStyleOptionComplex const*, QStyle::SubControl, QWidget const*) const</primary></indexterm>QPlastiqueStyle::subControlRect(QStyle::ComplexControl, QStyleOptionComplex const*, QStyle::SubControl, QWidget const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPlastiqueStyle::pixelMetric(QStyle::PixelMetric, QStyleOption const*, QWidget const*) const</primary></indexterm>QPlastiqueStyle::pixelMetric(QStyle::PixelMetric, QStyleOption const*, QWidget const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPlastiqueStyle::sizeFromContents(QStyle::ContentsType, QStyleOption const*, QSize const&, QWidget const*) const</primary></indexterm>QPlastiqueStyle::sizeFromContents(QStyle::ContentsType, QStyleOption const*, QSize const&, QWidget const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPlastiqueStyle::styleHint(QStyle::StyleHint, QStyleOption const*, QWidget const*, QStyleHintReturn*) const</primary></indexterm>QPlastiqueStyle::styleHint(QStyle::StyleHint, QStyleOption const*, QWidget const*, QStyleHintReturn*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWindowsStyle::standardPixmap(QStyle::StandardPixmap, QStyleOption const*, QWidget const*) const</primary></indexterm>QWindowsStyle::standardPixmap(QStyle::StandardPixmap, QStyleOption const*, QWidget const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QCommonStyle::generatedIconPixmap(QIcon::Mode, QPixmap const&, QStyleOption const*) const</primary></indexterm>QCommonStyle::generatedIconPixmap(QIcon::Mode, QPixmap const&, QStyleOption const*) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QPlastiqueStyle  class
is described by <XREF LINKEND="rtti-38780">
</PARA>
<!--classdata-->
<TABLE ID="rtti-38780">
<TITLE>typeinfo for QPlastiqueStyle</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QPlastiqueStyle</primary></indexterm>typeinfo name for QPlastiqueStyle</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QWindowsStyle</primary></indexterm>typeinfo for QWindowsStyle</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QInputContextFactoryInterface</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QInputContextFactoryInterface class
is described by <XREF LINKEND="cls-39045-0">
</PARA>
<!--classdata-->
<TABLE id="cls-39045-0">
<TITLE>Primary vtable for QInputContextFactoryInterface</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QInputContextFactoryInterface</primary></indexterm>typeinfo for QInputContextFactoryInterface</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QInputContextFactoryInterface::~QInputContextFactoryInterface()</primary></indexterm>QInputContextFactoryInterface::~QInputContextFactoryInterface()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QInputContextFactoryInterface::~QInputContextFactoryInterface()</primary></indexterm>QInputContextFactoryInterface::~QInputContextFactoryInterface()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QInputContextFactoryInterface  class
is described by <XREF LINKEND="rtti-38840">
</PARA>
<!--classdata-->
<TABLE ID="rtti-38840">
<TITLE>typeinfo for QInputContextFactoryInterface</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QInputContextFactoryInterface</primary></indexterm>typeinfo name for QInputContextFactoryInterface</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QFactoryInterface</primary></indexterm>typeinfo for QFactoryInterface</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QInputContextPlugin</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QInputContextPlugin class
is described by <XREF LINKEND="cls-39020-0">
</PARA>
<!--classdata-->
<TABLE id="cls-39020-0">
<TITLE>Primary vtable for QInputContextPlugin</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QInputContextPlugin</primary></indexterm>typeinfo for QInputContextPlugin</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QInputContextPlugin::metaObject() const</primary></indexterm>QInputContextPlugin::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QInputContextPlugin::qt_metacast(char const*)</primary></indexterm>QInputContextPlugin::qt_metacast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QInputContextPlugin::qt_metacall(QMetaObject::Call, int, void**)</primary></indexterm>QInputContextPlugin::qt_metacall(QMetaObject::Call, int, void**)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QInputContextPlugin::~QInputContextPlugin()</primary></indexterm>QInputContextPlugin::~QInputContextPlugin()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QInputContextPlugin::~QInputContextPlugin()</primary></indexterm>QInputContextPlugin::~QInputContextPlugin()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::event(QEvent*)</primary></indexterm>QObject::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::eventFilter(QObject*, QEvent*)</primary></indexterm>QObject::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QEvent*)</primary></indexterm>QObject::customEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--classdata-->
<TABLE id="cls-39020-1">
<TITLE>Secondary vtable for QInputContextPlugin</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>-16</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QInputContextPlugin</primary></indexterm>typeinfo for QInputContextPlugin</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QInputContextPlugin::~QInputContextPlugin()</primary></indexterm>non-virtual thunk to QInputContextPlugin::~QInputContextPlugin()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QInputContextPlugin::~QInputContextPlugin()</primary></indexterm>non-virtual thunk to QInputContextPlugin::~QInputContextPlugin()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QInputContextPlugin  class
is described by <XREF LINKEND="rtti-38815">
</PARA>
<!--classdata-->
<TABLE ID="rtti-38815">
<TITLE>typeinfo for QInputContextPlugin</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__vmi_class_type_info</primary></indexterm>vtable for __cxxabiv1::__vmi_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QInputContextPlugin</primary></indexterm>typeinfo name for QInputContextPlugin</ENTRY>
</ROW>
<ROW>
<ENTRY>flags:</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QObject</primary></indexterm>typeinfo for QObject</ENTRY>
<ENTRY>2</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QInputContextFactoryInterface</primary></indexterm>typeinfo for QInputContextFactoryInterface</ENTRY>
<ENTRY>2050</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QInputContext</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QInputContext class
is described by <XREF LINKEND="cls-38961-0">
</PARA>
<!--classdata-->
<TABLE id="cls-38961-0">
<TITLE>Primary vtable for QInputContext</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QInputContext</primary></indexterm>typeinfo for QInputContext</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QInputContext::metaObject() const</primary></indexterm>QInputContext::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QInputContext::qt_metacast(char const*)</primary></indexterm>QInputContext::qt_metacast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QInputContext::qt_metacall(QMetaObject::Call, int, void**)</primary></indexterm>QInputContext::qt_metacall(QMetaObject::Call, int, void**)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QInputContext::~QInputContext()</primary></indexterm>QInputContext::~QInputContext()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QInputContext::~QInputContext()</primary></indexterm>QInputContext::~QInputContext()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::event(QEvent*)</primary></indexterm>QObject::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::eventFilter(QObject*, QEvent*)</primary></indexterm>QObject::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QEvent*)</primary></indexterm>QObject::customEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QInputContext::update()</primary></indexterm>QInputContext::update()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QInputContext::mouseHandler(int, QMouseEvent*)</primary></indexterm>QInputContext::mouseHandler(int, QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QInputContext::font() const</primary></indexterm>QInputContext::font() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QInputContext::setFocusWidget(QWidget*)</primary></indexterm>QInputContext::setFocusWidget(QWidget*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QInputContext::widgetDestroyed(QWidget*)</primary></indexterm>QInputContext::widgetDestroyed(QWidget*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QInputContext::actions()</primary></indexterm>QInputContext::actions()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QInputContext::x11FilterEvent(QWidget*, _XEvent*)</primary></indexterm>QInputContext::x11FilterEvent(QWidget*, _XEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QInputContext::filterEvent(QEvent const*)</primary></indexterm>QInputContext::filterEvent(QEvent const*)</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QInputContext  class
is described by <XREF LINKEND="rtti-38756">
</PARA>
<!--classdata-->
<TABLE ID="rtti-38756">
<TITLE>typeinfo for QInputContext</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QInputContext</primary></indexterm>typeinfo name for QInputContext</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QObject</primary></indexterm>typeinfo for QObject</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QAbstractButton</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QAbstractButton class
is described by <XREF LINKEND="cls-38978-0">
</PARA>
<!--classdata-->
<TABLE id="cls-38978-0">
<TITLE>Primary vtable for QAbstractButton</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QAbstractButton</primary></indexterm>typeinfo for QAbstractButton</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractButton::metaObject() const</primary></indexterm>QAbstractButton::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractButton::qt_metacast(char const*)</primary></indexterm>QAbstractButton::qt_metacast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractButton::qt_metacall(QMetaObject::Call, int, void**)</primary></indexterm>QAbstractButton::qt_metacall(QMetaObject::Call, int, void**)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractButton::~QAbstractButton()</primary></indexterm>QAbstractButton::~QAbstractButton()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractButton::~QAbstractButton()</primary></indexterm>QAbstractButton::~QAbstractButton()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractButton::event(QEvent*)</primary></indexterm>QAbstractButton::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::eventFilter(QObject*, QEvent*)</primary></indexterm>QObject::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractButton::timerEvent(QTimerEvent*)</primary></indexterm>QAbstractButton::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QEvent*)</primary></indexterm>QObject::customEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::devType() const</primary></indexterm>QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setVisible(bool)</primary></indexterm>QWidget::setVisible(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::sizeHint() const</primary></indexterm>QWidget::sizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::minimumSizeHint() const</primary></indexterm>QWidget::minimumSizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::heightForWidth(int) const</primary></indexterm>QWidget::heightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paintEngine() const</primary></indexterm>QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractButton::mousePressEvent(QMouseEvent*)</primary></indexterm>QAbstractButton::mousePressEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractButton::mouseReleaseEvent(QMouseEvent*)</primary></indexterm>QAbstractButton::mouseReleaseEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseDoubleClickEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseDoubleClickEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractButton::mouseMoveEvent(QMouseEvent*)</primary></indexterm>QAbstractButton::mouseMoveEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::wheelEvent(QWheelEvent*)</primary></indexterm>QWidget::wheelEvent(QWheelEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractButton::keyPressEvent(QKeyEvent*)</primary></indexterm>QAbstractButton::keyPressEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractButton::keyReleaseEvent(QKeyEvent*)</primary></indexterm>QAbstractButton::keyReleaseEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractButton::focusInEvent(QFocusEvent*)</primary></indexterm>QAbstractButton::focusInEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractButton::focusOutEvent(QFocusEvent*)</primary></indexterm>QAbstractButton::focusOutEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enterEvent(QEvent*)</primary></indexterm>QWidget::enterEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::leaveEvent(QEvent*)</primary></indexterm>QWidget::leaveEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::moveEvent(QMoveEvent*)</primary></indexterm>QWidget::moveEvent(QMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::resizeEvent(QResizeEvent*)</primary></indexterm>QWidget::resizeEvent(QResizeEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::closeEvent(QCloseEvent*)</primary></indexterm>QWidget::closeEvent(QCloseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;33&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::contextMenuEvent(QContextMenuEvent*)</primary></indexterm>QWidget::contextMenuEvent(QContextMenuEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;34&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::tabletEvent(QTabletEvent*)</primary></indexterm>QWidget::tabletEvent(QTabletEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;35&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::actionEvent(QActionEvent*)</primary></indexterm>QWidget::actionEvent(QActionEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;36&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragEnterEvent(QDragEnterEvent*)</primary></indexterm>QWidget::dragEnterEvent(QDragEnterEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;37&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragMoveEvent(QDragMoveEvent*)</primary></indexterm>QWidget::dragMoveEvent(QDragMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;38&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragLeaveEvent(QDragLeaveEvent*)</primary></indexterm>QWidget::dragLeaveEvent(QDragLeaveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;39&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dropEvent(QDropEvent*)</primary></indexterm>QWidget::dropEvent(QDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;40&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showEvent(QShowEvent*)</primary></indexterm>QWidget::showEvent(QShowEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;41&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::hideEvent(QHideEvent*)</primary></indexterm>QWidget::hideEvent(QHideEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;42&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::x11Event(_XEvent*)</primary></indexterm>QWidget::x11Event(_XEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;43&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractButton::changeEvent(QEvent*)</primary></indexterm>QAbstractButton::changeEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;44&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;45&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::inputMethodEvent(QInputMethodEvent*)</primary></indexterm>QWidget::inputMethodEvent(QInputMethodEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;46&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::inputMethodQuery(Qt::InputMethodQuery) const</primary></indexterm>QWidget::inputMethodQuery(Qt::InputMethodQuery) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;47&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusNextPrevChild(bool)</primary></indexterm>QWidget::focusNextPrevChild(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;48&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::styleChange(QStyle&)</primary></indexterm>QWidget::styleChange(QStyle&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;49&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enabledChange(bool)</primary></indexterm>QWidget::enabledChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;50&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paletteChange(QPalette const&)</primary></indexterm>QWidget::paletteChange(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;51&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::fontChange(QFont const&)</primary></indexterm>QWidget::fontChange(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;52&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::windowActivationChange(bool)</primary></indexterm>QWidget::windowActivationChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;53&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::languageChange()</primary></indexterm>QWidget::languageChange()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;54&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractButton::hitButton(QPoint const&) const</primary></indexterm>QAbstractButton::hitButton(QPoint const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;55&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractButton::checkStateSet()</primary></indexterm>QAbstractButton::checkStateSet()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;56&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractButton::nextCheckState()</primary></indexterm>QAbstractButton::nextCheckState()</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--classdata-->
<TABLE id="cls-38978-1">
<TITLE>Secondary vtable for QAbstractButton</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>-16</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QAbstractButton</primary></indexterm>typeinfo for QAbstractButton</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QAbstractButton::~QAbstractButton()</primary></indexterm>non-virtual thunk to QAbstractButton::~QAbstractButton()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QAbstractButton::~QAbstractButton()</primary></indexterm>non-virtual thunk to QAbstractButton::~QAbstractButton()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::devType() const</primary></indexterm>non-virtual thunk to QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::paintEngine() const</primary></indexterm>non-virtual thunk to QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QAbstractButton  class
is described by <XREF LINKEND="rtti-38773">
</PARA>
<!--classdata-->
<TABLE ID="rtti-38773">
<TITLE>typeinfo for QAbstractButton</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QAbstractButton</primary></indexterm>typeinfo name for QAbstractButton</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QWidget</primary></indexterm>typeinfo for QWidget</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QCheckBox</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QCheckBox class
is described by <XREF LINKEND="cls-39073-0">
</PARA>
<!--classdata-->
<TABLE id="cls-39073-0">
<TITLE>Primary vtable for QCheckBox</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QCheckBox</primary></indexterm>typeinfo for QCheckBox</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QCheckBox::metaObject() const</primary></indexterm>QCheckBox::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QCheckBox::qt_metacast(char const*)</primary></indexterm>QCheckBox::qt_metacast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QCheckBox::qt_metacall(QMetaObject::Call, int, void**)</primary></indexterm>QCheckBox::qt_metacall(QMetaObject::Call, int, void**)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QCheckBox::~QCheckBox()</primary></indexterm>QCheckBox::~QCheckBox()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QCheckBox::~QCheckBox()</primary></indexterm>QCheckBox::~QCheckBox()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QCheckBox::event(QEvent*)</primary></indexterm>QCheckBox::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::eventFilter(QObject*, QEvent*)</primary></indexterm>QObject::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractButton::timerEvent(QTimerEvent*)</primary></indexterm>QAbstractButton::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QEvent*)</primary></indexterm>QObject::customEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::devType() const</primary></indexterm>QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setVisible(bool)</primary></indexterm>QWidget::setVisible(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QCheckBox::sizeHint() const</primary></indexterm>QCheckBox::sizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::minimumSizeHint() const</primary></indexterm>QWidget::minimumSizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::heightForWidth(int) const</primary></indexterm>QWidget::heightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paintEngine() const</primary></indexterm>QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractButton::mousePressEvent(QMouseEvent*)</primary></indexterm>QAbstractButton::mousePressEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractButton::mouseReleaseEvent(QMouseEvent*)</primary></indexterm>QAbstractButton::mouseReleaseEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseDoubleClickEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseDoubleClickEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QCheckBox::mouseMoveEvent(QMouseEvent*)</primary></indexterm>QCheckBox::mouseMoveEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::wheelEvent(QWheelEvent*)</primary></indexterm>QWidget::wheelEvent(QWheelEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractButton::keyPressEvent(QKeyEvent*)</primary></indexterm>QAbstractButton::keyPressEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractButton::keyReleaseEvent(QKeyEvent*)</primary></indexterm>QAbstractButton::keyReleaseEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractButton::focusInEvent(QFocusEvent*)</primary></indexterm>QAbstractButton::focusInEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractButton::focusOutEvent(QFocusEvent*)</primary></indexterm>QAbstractButton::focusOutEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enterEvent(QEvent*)</primary></indexterm>QWidget::enterEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::leaveEvent(QEvent*)</primary></indexterm>QWidget::leaveEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QCheckBox::paintEvent(QPaintEvent*)</primary></indexterm>QCheckBox::paintEvent(QPaintEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::moveEvent(QMoveEvent*)</primary></indexterm>QWidget::moveEvent(QMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::resizeEvent(QResizeEvent*)</primary></indexterm>QWidget::resizeEvent(QResizeEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::closeEvent(QCloseEvent*)</primary></indexterm>QWidget::closeEvent(QCloseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;33&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::contextMenuEvent(QContextMenuEvent*)</primary></indexterm>QWidget::contextMenuEvent(QContextMenuEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;34&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::tabletEvent(QTabletEvent*)</primary></indexterm>QWidget::tabletEvent(QTabletEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;35&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::actionEvent(QActionEvent*)</primary></indexterm>QWidget::actionEvent(QActionEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;36&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragEnterEvent(QDragEnterEvent*)</primary></indexterm>QWidget::dragEnterEvent(QDragEnterEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;37&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragMoveEvent(QDragMoveEvent*)</primary></indexterm>QWidget::dragMoveEvent(QDragMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;38&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragLeaveEvent(QDragLeaveEvent*)</primary></indexterm>QWidget::dragLeaveEvent(QDragLeaveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;39&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dropEvent(QDropEvent*)</primary></indexterm>QWidget::dropEvent(QDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;40&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showEvent(QShowEvent*)</primary></indexterm>QWidget::showEvent(QShowEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;41&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::hideEvent(QHideEvent*)</primary></indexterm>QWidget::hideEvent(QHideEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;42&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::x11Event(_XEvent*)</primary></indexterm>QWidget::x11Event(_XEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;43&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractButton::changeEvent(QEvent*)</primary></indexterm>QAbstractButton::changeEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;44&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;45&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::inputMethodEvent(QInputMethodEvent*)</primary></indexterm>QWidget::inputMethodEvent(QInputMethodEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;46&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::inputMethodQuery(Qt::InputMethodQuery) const</primary></indexterm>QWidget::inputMethodQuery(Qt::InputMethodQuery) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;47&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusNextPrevChild(bool)</primary></indexterm>QWidget::focusNextPrevChild(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;48&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::styleChange(QStyle&)</primary></indexterm>QWidget::styleChange(QStyle&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;49&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enabledChange(bool)</primary></indexterm>QWidget::enabledChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;50&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paletteChange(QPalette const&)</primary></indexterm>QWidget::paletteChange(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;51&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::fontChange(QFont const&)</primary></indexterm>QWidget::fontChange(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;52&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::windowActivationChange(bool)</primary></indexterm>QWidget::windowActivationChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;53&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::languageChange()</primary></indexterm>QWidget::languageChange()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;54&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QCheckBox::hitButton(QPoint const&) const</primary></indexterm>QCheckBox::hitButton(QPoint const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;55&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QCheckBox::checkStateSet()</primary></indexterm>QCheckBox::checkStateSet()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;56&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QCheckBox::nextCheckState()</primary></indexterm>QCheckBox::nextCheckState()</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--classdata-->
<TABLE id="cls-39073-1">
<TITLE>Secondary vtable for QCheckBox</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>-16</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QCheckBox</primary></indexterm>typeinfo for QCheckBox</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QCheckBox::~QCheckBox()</primary></indexterm>non-virtual thunk to QCheckBox::~QCheckBox()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QCheckBox::~QCheckBox()</primary></indexterm>non-virtual thunk to QCheckBox::~QCheckBox()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::devType() const</primary></indexterm>non-virtual thunk to QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::paintEngine() const</primary></indexterm>non-virtual thunk to QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QCheckBox  class
is described by <XREF LINKEND="rtti-38868">
</PARA>
<!--classdata-->
<TABLE ID="rtti-38868">
<TITLE>typeinfo for QCheckBox</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QCheckBox</primary></indexterm>typeinfo name for QCheckBox</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QAbstractButton</primary></indexterm>typeinfo for QAbstractButton</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QMenu</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QMenu class
is described by <XREF LINKEND="cls-39050-0">
</PARA>
<!--classdata-->
<TABLE id="cls-39050-0">
<TITLE>Primary vtable for QMenu</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QMenu</primary></indexterm>typeinfo for QMenu</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMenu::metaObject() const</primary></indexterm>QMenu::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMenu::qt_metacast(char const*)</primary></indexterm>QMenu::qt_metacast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMenu::qt_metacall(QMetaObject::Call, int, void**)</primary></indexterm>QMenu::qt_metacall(QMetaObject::Call, int, void**)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMenu::~QMenu()</primary></indexterm>QMenu::~QMenu()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMenu::~QMenu()</primary></indexterm>QMenu::~QMenu()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMenu::event(QEvent*)</primary></indexterm>QMenu::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::eventFilter(QObject*, QEvent*)</primary></indexterm>QObject::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMenu::timerEvent(QTimerEvent*)</primary></indexterm>QMenu::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QEvent*)</primary></indexterm>QObject::customEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::devType() const</primary></indexterm>QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setVisible(bool)</primary></indexterm>QWidget::setVisible(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMenu::sizeHint() const</primary></indexterm>QMenu::sizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::minimumSizeHint() const</primary></indexterm>QWidget::minimumSizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::heightForWidth(int) const</primary></indexterm>QWidget::heightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paintEngine() const</primary></indexterm>QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMenu::mousePressEvent(QMouseEvent*)</primary></indexterm>QMenu::mousePressEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMenu::mouseReleaseEvent(QMouseEvent*)</primary></indexterm>QMenu::mouseReleaseEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseDoubleClickEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseDoubleClickEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMenu::mouseMoveEvent(QMouseEvent*)</primary></indexterm>QMenu::mouseMoveEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMenu::wheelEvent(QWheelEvent*)</primary></indexterm>QMenu::wheelEvent(QWheelEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMenu::keyPressEvent(QKeyEvent*)</primary></indexterm>QMenu::keyPressEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyReleaseEvent(QKeyEvent*)</primary></indexterm>QWidget::keyReleaseEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusInEvent(QFocusEvent*)</primary></indexterm>QWidget::focusInEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusOutEvent(QFocusEvent*)</primary></indexterm>QWidget::focusOutEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMenu::enterEvent(QEvent*)</primary></indexterm>QMenu::enterEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMenu::leaveEvent(QEvent*)</primary></indexterm>QMenu::leaveEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMenu::paintEvent(QPaintEvent*)</primary></indexterm>QMenu::paintEvent(QPaintEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::moveEvent(QMoveEvent*)</primary></indexterm>QWidget::moveEvent(QMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::resizeEvent(QResizeEvent*)</primary></indexterm>QWidget::resizeEvent(QResizeEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::closeEvent(QCloseEvent*)</primary></indexterm>QWidget::closeEvent(QCloseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;33&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::contextMenuEvent(QContextMenuEvent*)</primary></indexterm>QWidget::contextMenuEvent(QContextMenuEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;34&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::tabletEvent(QTabletEvent*)</primary></indexterm>QWidget::tabletEvent(QTabletEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;35&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMenu::actionEvent(QActionEvent*)</primary></indexterm>QMenu::actionEvent(QActionEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;36&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragEnterEvent(QDragEnterEvent*)</primary></indexterm>QWidget::dragEnterEvent(QDragEnterEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;37&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragMoveEvent(QDragMoveEvent*)</primary></indexterm>QWidget::dragMoveEvent(QDragMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;38&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragLeaveEvent(QDragLeaveEvent*)</primary></indexterm>QWidget::dragLeaveEvent(QDragLeaveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;39&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dropEvent(QDropEvent*)</primary></indexterm>QWidget::dropEvent(QDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;40&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showEvent(QShowEvent*)</primary></indexterm>QWidget::showEvent(QShowEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;41&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMenu::hideEvent(QHideEvent*)</primary></indexterm>QMenu::hideEvent(QHideEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;42&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::x11Event(_XEvent*)</primary></indexterm>QWidget::x11Event(_XEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;43&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMenu::changeEvent(QEvent*)</primary></indexterm>QMenu::changeEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;44&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;45&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::inputMethodEvent(QInputMethodEvent*)</primary></indexterm>QWidget::inputMethodEvent(QInputMethodEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;46&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::inputMethodQuery(Qt::InputMethodQuery) const</primary></indexterm>QWidget::inputMethodQuery(Qt::InputMethodQuery) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;47&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusNextPrevChild(bool)</primary></indexterm>QWidget::focusNextPrevChild(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;48&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::styleChange(QStyle&)</primary></indexterm>QWidget::styleChange(QStyle&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;49&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enabledChange(bool)</primary></indexterm>QWidget::enabledChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;50&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paletteChange(QPalette const&)</primary></indexterm>QWidget::paletteChange(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;51&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::fontChange(QFont const&)</primary></indexterm>QWidget::fontChange(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;52&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::windowActivationChange(bool)</primary></indexterm>QWidget::windowActivationChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;53&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::languageChange()</primary></indexterm>QWidget::languageChange()</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--classdata-->
<TABLE id="cls-39050-1">
<TITLE>Secondary vtable for QMenu</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>-16</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QMenu</primary></indexterm>typeinfo for QMenu</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QMenu::~QMenu()</primary></indexterm>non-virtual thunk to QMenu::~QMenu()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QMenu::~QMenu()</primary></indexterm>non-virtual thunk to QMenu::~QMenu()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::devType() const</primary></indexterm>non-virtual thunk to QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::paintEngine() const</primary></indexterm>non-virtual thunk to QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QMenu  class
is described by <XREF LINKEND="rtti-38845">
</PARA>
<!--classdata-->
<TABLE ID="rtti-38845">
<TITLE>typeinfo for QMenu</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QMenu</primary></indexterm>typeinfo name for QMenu</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QWidget</primary></indexterm>typeinfo for QWidget</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QWorkspace</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QWorkspace class
is described by <XREF LINKEND="cls-38899-0">
</PARA>
<!--classdata-->
<TABLE id="cls-38899-0">
<TITLE>Primary vtable for QWorkspace</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QWorkspace</primary></indexterm>typeinfo for QWorkspace</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWorkspace::metaObject() const</primary></indexterm>QWorkspace::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWorkspace::qt_metacast(char const*)</primary></indexterm>QWorkspace::qt_metacast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWorkspace::qt_metacall(QMetaObject::Call, int, void**)</primary></indexterm>QWorkspace::qt_metacall(QMetaObject::Call, int, void**)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWorkspace::~QWorkspace()</primary></indexterm>QWorkspace::~QWorkspace()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWorkspace::~QWorkspace()</primary></indexterm>QWorkspace::~QWorkspace()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWorkspace::event(QEvent*)</primary></indexterm>QWorkspace::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWorkspace::eventFilter(QObject*, QEvent*)</primary></indexterm>QWorkspace::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWorkspace::childEvent(QChildEvent*)</primary></indexterm>QWorkspace::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QEvent*)</primary></indexterm>QObject::customEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::devType() const</primary></indexterm>QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setVisible(bool)</primary></indexterm>QWidget::setVisible(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWorkspace::sizeHint() const</primary></indexterm>QWorkspace::sizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::minimumSizeHint() const</primary></indexterm>QWidget::minimumSizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::heightForWidth(int) const</primary></indexterm>QWidget::heightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paintEngine() const</primary></indexterm>QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mousePressEvent(QMouseEvent*)</primary></indexterm>QWidget::mousePressEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseReleaseEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseReleaseEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseDoubleClickEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseDoubleClickEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseMoveEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseMoveEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWorkspace::wheelEvent(QWheelEvent*)</primary></indexterm>QWorkspace::wheelEvent(QWheelEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyPressEvent(QKeyEvent*)</primary></indexterm>QWidget::keyPressEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyReleaseEvent(QKeyEvent*)</primary></indexterm>QWidget::keyReleaseEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusInEvent(QFocusEvent*)</primary></indexterm>QWidget::focusInEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusOutEvent(QFocusEvent*)</primary></indexterm>QWidget::focusOutEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enterEvent(QEvent*)</primary></indexterm>QWidget::enterEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::leaveEvent(QEvent*)</primary></indexterm>QWidget::leaveEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWorkspace::paintEvent(QPaintEvent*)</primary></indexterm>QWorkspace::paintEvent(QPaintEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::moveEvent(QMoveEvent*)</primary></indexterm>QWidget::moveEvent(QMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWorkspace::resizeEvent(QResizeEvent*)</primary></indexterm>QWorkspace::resizeEvent(QResizeEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::closeEvent(QCloseEvent*)</primary></indexterm>QWidget::closeEvent(QCloseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;33&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::contextMenuEvent(QContextMenuEvent*)</primary></indexterm>QWidget::contextMenuEvent(QContextMenuEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;34&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::tabletEvent(QTabletEvent*)</primary></indexterm>QWidget::tabletEvent(QTabletEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;35&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::actionEvent(QActionEvent*)</primary></indexterm>QWidget::actionEvent(QActionEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;36&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragEnterEvent(QDragEnterEvent*)</primary></indexterm>QWidget::dragEnterEvent(QDragEnterEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;37&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragMoveEvent(QDragMoveEvent*)</primary></indexterm>QWidget::dragMoveEvent(QDragMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;38&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragLeaveEvent(QDragLeaveEvent*)</primary></indexterm>QWidget::dragLeaveEvent(QDragLeaveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;39&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dropEvent(QDropEvent*)</primary></indexterm>QWidget::dropEvent(QDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;40&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWorkspace::showEvent(QShowEvent*)</primary></indexterm>QWorkspace::showEvent(QShowEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;41&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWorkspace::hideEvent(QHideEvent*)</primary></indexterm>QWorkspace::hideEvent(QHideEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;42&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::x11Event(_XEvent*)</primary></indexterm>QWidget::x11Event(_XEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;43&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWorkspace::changeEvent(QEvent*)</primary></indexterm>QWorkspace::changeEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;44&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;45&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::inputMethodEvent(QInputMethodEvent*)</primary></indexterm>QWidget::inputMethodEvent(QInputMethodEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;46&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::inputMethodQuery(Qt::InputMethodQuery) const</primary></indexterm>QWidget::inputMethodQuery(Qt::InputMethodQuery) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;47&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusNextPrevChild(bool)</primary></indexterm>QWidget::focusNextPrevChild(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;48&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::styleChange(QStyle&)</primary></indexterm>QWidget::styleChange(QStyle&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;49&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enabledChange(bool)</primary></indexterm>QWidget::enabledChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;50&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paletteChange(QPalette const&)</primary></indexterm>QWidget::paletteChange(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;51&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::fontChange(QFont const&)</primary></indexterm>QWidget::fontChange(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;52&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::windowActivationChange(bool)</primary></indexterm>QWidget::windowActivationChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;53&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::languageChange()</primary></indexterm>QWidget::languageChange()</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--classdata-->
<TABLE id="cls-38899-1">
<TITLE>Secondary vtable for QWorkspace</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>-16</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QWorkspace</primary></indexterm>typeinfo for QWorkspace</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWorkspace::~QWorkspace()</primary></indexterm>non-virtual thunk to QWorkspace::~QWorkspace()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWorkspace::~QWorkspace()</primary></indexterm>non-virtual thunk to QWorkspace::~QWorkspace()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::devType() const</primary></indexterm>non-virtual thunk to QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::paintEngine() const</primary></indexterm>non-virtual thunk to QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QWorkspace  class
is described by <XREF LINKEND="rtti-38693">
</PARA>
<!--classdata-->
<TABLE ID="rtti-38693">
<TITLE>typeinfo for QWorkspace</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QWorkspace</primary></indexterm>typeinfo name for QWorkspace</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QWidget</primary></indexterm>typeinfo for QWidget</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QButtonGroup</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QButtonGroup class
is described by <XREF LINKEND="cls-38940-0">
</PARA>
<!--classdata-->
<TABLE id="cls-38940-0">
<TITLE>Primary vtable for QButtonGroup</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QButtonGroup</primary></indexterm>typeinfo for QButtonGroup</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QButtonGroup::metaObject() const</primary></indexterm>QButtonGroup::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QButtonGroup::qt_metacast(char const*)</primary></indexterm>QButtonGroup::qt_metacast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QButtonGroup::qt_metacall(QMetaObject::Call, int, void**)</primary></indexterm>QButtonGroup::qt_metacall(QMetaObject::Call, int, void**)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QButtonGroup::~QButtonGroup()</primary></indexterm>QButtonGroup::~QButtonGroup()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QButtonGroup::~QButtonGroup()</primary></indexterm>QButtonGroup::~QButtonGroup()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::event(QEvent*)</primary></indexterm>QObject::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::eventFilter(QObject*, QEvent*)</primary></indexterm>QObject::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QEvent*)</primary></indexterm>QObject::customEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QButtonGroup  class
is described by <XREF LINKEND="rtti-38735">
</PARA>
<!--classdata-->
<TABLE ID="rtti-38735">
<TITLE>typeinfo for QButtonGroup</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QButtonGroup</primary></indexterm>typeinfo name for QButtonGroup</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QObject</primary></indexterm>typeinfo for QObject</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QSpinBox</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QSpinBox class
is described by <XREF LINKEND="cls-39068-0">
</PARA>
<!--classdata-->
<TABLE id="cls-39068-0">
<TITLE>Primary vtable for QSpinBox</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QSpinBox</primary></indexterm>typeinfo for QSpinBox</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSpinBox::metaObject() const</primary></indexterm>QSpinBox::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSpinBox::qt_metacast(char const*)</primary></indexterm>QSpinBox::qt_metacast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSpinBox::qt_metacall(QMetaObject::Call, int, void**)</primary></indexterm>QSpinBox::qt_metacall(QMetaObject::Call, int, void**)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSpinBox::~QSpinBox()</primary></indexterm>QSpinBox::~QSpinBox()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSpinBox::~QSpinBox()</primary></indexterm>QSpinBox::~QSpinBox()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSpinBox::event(QEvent*)</primary></indexterm>QSpinBox::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::eventFilter(QObject*, QEvent*)</primary></indexterm>QObject::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSpinBox::timerEvent(QTimerEvent*)</primary></indexterm>QAbstractSpinBox::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QEvent*)</primary></indexterm>QObject::customEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::devType() const</primary></indexterm>QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setVisible(bool)</primary></indexterm>QWidget::setVisible(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSpinBox::sizeHint() const</primary></indexterm>QAbstractSpinBox::sizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSpinBox::minimumSizeHint() const</primary></indexterm>QAbstractSpinBox::minimumSizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::heightForWidth(int) const</primary></indexterm>QWidget::heightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paintEngine() const</primary></indexterm>QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSpinBox::mousePressEvent(QMouseEvent*)</primary></indexterm>QAbstractSpinBox::mousePressEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSpinBox::mouseReleaseEvent(QMouseEvent*)</primary></indexterm>QAbstractSpinBox::mouseReleaseEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseDoubleClickEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseDoubleClickEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSpinBox::mouseMoveEvent(QMouseEvent*)</primary></indexterm>QAbstractSpinBox::mouseMoveEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSpinBox::wheelEvent(QWheelEvent*)</primary></indexterm>QAbstractSpinBox::wheelEvent(QWheelEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSpinBox::keyPressEvent(QKeyEvent*)</primary></indexterm>QAbstractSpinBox::keyPressEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSpinBox::keyReleaseEvent(QKeyEvent*)</primary></indexterm>QAbstractSpinBox::keyReleaseEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSpinBox::focusInEvent(QFocusEvent*)</primary></indexterm>QAbstractSpinBox::focusInEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSpinBox::focusOutEvent(QFocusEvent*)</primary></indexterm>QAbstractSpinBox::focusOutEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enterEvent(QEvent*)</primary></indexterm>QWidget::enterEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::leaveEvent(QEvent*)</primary></indexterm>QWidget::leaveEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSpinBox::paintEvent(QPaintEvent*)</primary></indexterm>QAbstractSpinBox::paintEvent(QPaintEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::moveEvent(QMoveEvent*)</primary></indexterm>QWidget::moveEvent(QMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSpinBox::resizeEvent(QResizeEvent*)</primary></indexterm>QAbstractSpinBox::resizeEvent(QResizeEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSpinBox::closeEvent(QCloseEvent*)</primary></indexterm>QAbstractSpinBox::closeEvent(QCloseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;33&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSpinBox::contextMenuEvent(QContextMenuEvent*)</primary></indexterm>QAbstractSpinBox::contextMenuEvent(QContextMenuEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;34&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::tabletEvent(QTabletEvent*)</primary></indexterm>QWidget::tabletEvent(QTabletEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;35&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::actionEvent(QActionEvent*)</primary></indexterm>QWidget::actionEvent(QActionEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;36&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragEnterEvent(QDragEnterEvent*)</primary></indexterm>QWidget::dragEnterEvent(QDragEnterEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;37&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragMoveEvent(QDragMoveEvent*)</primary></indexterm>QWidget::dragMoveEvent(QDragMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;38&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragLeaveEvent(QDragLeaveEvent*)</primary></indexterm>QWidget::dragLeaveEvent(QDragLeaveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;39&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dropEvent(QDropEvent*)</primary></indexterm>QWidget::dropEvent(QDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;40&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSpinBox::showEvent(QShowEvent*)</primary></indexterm>QAbstractSpinBox::showEvent(QShowEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;41&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSpinBox::hideEvent(QHideEvent*)</primary></indexterm>QAbstractSpinBox::hideEvent(QHideEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;42&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::x11Event(_XEvent*)</primary></indexterm>QWidget::x11Event(_XEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;43&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSpinBox::changeEvent(QEvent*)</primary></indexterm>QAbstractSpinBox::changeEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;44&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;45&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::inputMethodEvent(QInputMethodEvent*)</primary></indexterm>QWidget::inputMethodEvent(QInputMethodEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;46&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::inputMethodQuery(Qt::InputMethodQuery) const</primary></indexterm>QWidget::inputMethodQuery(Qt::InputMethodQuery) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;47&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusNextPrevChild(bool)</primary></indexterm>QWidget::focusNextPrevChild(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;48&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::styleChange(QStyle&)</primary></indexterm>QWidget::styleChange(QStyle&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;49&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enabledChange(bool)</primary></indexterm>QWidget::enabledChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;50&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paletteChange(QPalette const&)</primary></indexterm>QWidget::paletteChange(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;51&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::fontChange(QFont const&)</primary></indexterm>QWidget::fontChange(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;52&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::windowActivationChange(bool)</primary></indexterm>QWidget::windowActivationChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;53&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::languageChange()</primary></indexterm>QWidget::languageChange()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;54&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSpinBox::validate(QString&, int&) const</primary></indexterm>QSpinBox::validate(QString&, int&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;55&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSpinBox::fixup(QString&) const</primary></indexterm>QSpinBox::fixup(QString&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;56&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSpinBox::stepBy(int)</primary></indexterm>QAbstractSpinBox::stepBy(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;57&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSpinBox::clear()</primary></indexterm>QAbstractSpinBox::clear()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;58&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSpinBox::stepEnabled() const</primary></indexterm>QAbstractSpinBox::stepEnabled() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;59&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSpinBox::valueFromText(QString const&) const</primary></indexterm>QSpinBox::valueFromText(QString const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;60&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSpinBox::textFromValue(int) const</primary></indexterm>QSpinBox::textFromValue(int) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--classdata-->
<TABLE id="cls-39068-1">
<TITLE>Secondary vtable for QSpinBox</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>-16</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QSpinBox</primary></indexterm>typeinfo for QSpinBox</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QSpinBox::~QSpinBox()</primary></indexterm>non-virtual thunk to QSpinBox::~QSpinBox()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QSpinBox::~QSpinBox()</primary></indexterm>non-virtual thunk to QSpinBox::~QSpinBox()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::devType() const</primary></indexterm>non-virtual thunk to QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::paintEngine() const</primary></indexterm>non-virtual thunk to QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QSpinBox  class
is described by <XREF LINKEND="rtti-38863">
</PARA>
<!--classdata-->
<TABLE ID="rtti-38863">
<TITLE>typeinfo for QSpinBox</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QSpinBox</primary></indexterm>typeinfo name for QSpinBox</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QAbstractSpinBox</primary></indexterm>typeinfo for QAbstractSpinBox</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QDoubleSpinBox</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QDoubleSpinBox class
is described by <XREF LINKEND="cls-38968-0">
</PARA>
<!--classdata-->
<TABLE id="cls-38968-0">
<TITLE>Primary vtable for QDoubleSpinBox</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QDoubleSpinBox</primary></indexterm>typeinfo for QDoubleSpinBox</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDoubleSpinBox::metaObject() const</primary></indexterm>QDoubleSpinBox::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDoubleSpinBox::qt_metacast(char const*)</primary></indexterm>QDoubleSpinBox::qt_metacast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDoubleSpinBox::qt_metacall(QMetaObject::Call, int, void**)</primary></indexterm>QDoubleSpinBox::qt_metacall(QMetaObject::Call, int, void**)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDoubleSpinBox::~QDoubleSpinBox()</primary></indexterm>QDoubleSpinBox::~QDoubleSpinBox()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDoubleSpinBox::~QDoubleSpinBox()</primary></indexterm>QDoubleSpinBox::~QDoubleSpinBox()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSpinBox::event(QEvent*)</primary></indexterm>QAbstractSpinBox::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::eventFilter(QObject*, QEvent*)</primary></indexterm>QObject::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSpinBox::timerEvent(QTimerEvent*)</primary></indexterm>QAbstractSpinBox::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QEvent*)</primary></indexterm>QObject::customEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::devType() const</primary></indexterm>QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setVisible(bool)</primary></indexterm>QWidget::setVisible(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSpinBox::sizeHint() const</primary></indexterm>QAbstractSpinBox::sizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSpinBox::minimumSizeHint() const</primary></indexterm>QAbstractSpinBox::minimumSizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::heightForWidth(int) const</primary></indexterm>QWidget::heightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paintEngine() const</primary></indexterm>QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSpinBox::mousePressEvent(QMouseEvent*)</primary></indexterm>QAbstractSpinBox::mousePressEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSpinBox::mouseReleaseEvent(QMouseEvent*)</primary></indexterm>QAbstractSpinBox::mouseReleaseEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseDoubleClickEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseDoubleClickEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSpinBox::mouseMoveEvent(QMouseEvent*)</primary></indexterm>QAbstractSpinBox::mouseMoveEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSpinBox::wheelEvent(QWheelEvent*)</primary></indexterm>QAbstractSpinBox::wheelEvent(QWheelEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSpinBox::keyPressEvent(QKeyEvent*)</primary></indexterm>QAbstractSpinBox::keyPressEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSpinBox::keyReleaseEvent(QKeyEvent*)</primary></indexterm>QAbstractSpinBox::keyReleaseEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSpinBox::focusInEvent(QFocusEvent*)</primary></indexterm>QAbstractSpinBox::focusInEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSpinBox::focusOutEvent(QFocusEvent*)</primary></indexterm>QAbstractSpinBox::focusOutEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enterEvent(QEvent*)</primary></indexterm>QWidget::enterEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::leaveEvent(QEvent*)</primary></indexterm>QWidget::leaveEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSpinBox::paintEvent(QPaintEvent*)</primary></indexterm>QAbstractSpinBox::paintEvent(QPaintEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::moveEvent(QMoveEvent*)</primary></indexterm>QWidget::moveEvent(QMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSpinBox::resizeEvent(QResizeEvent*)</primary></indexterm>QAbstractSpinBox::resizeEvent(QResizeEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSpinBox::closeEvent(QCloseEvent*)</primary></indexterm>QAbstractSpinBox::closeEvent(QCloseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;33&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSpinBox::contextMenuEvent(QContextMenuEvent*)</primary></indexterm>QAbstractSpinBox::contextMenuEvent(QContextMenuEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;34&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::tabletEvent(QTabletEvent*)</primary></indexterm>QWidget::tabletEvent(QTabletEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;35&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::actionEvent(QActionEvent*)</primary></indexterm>QWidget::actionEvent(QActionEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;36&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragEnterEvent(QDragEnterEvent*)</primary></indexterm>QWidget::dragEnterEvent(QDragEnterEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;37&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragMoveEvent(QDragMoveEvent*)</primary></indexterm>QWidget::dragMoveEvent(QDragMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;38&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragLeaveEvent(QDragLeaveEvent*)</primary></indexterm>QWidget::dragLeaveEvent(QDragLeaveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;39&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dropEvent(QDropEvent*)</primary></indexterm>QWidget::dropEvent(QDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;40&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSpinBox::showEvent(QShowEvent*)</primary></indexterm>QAbstractSpinBox::showEvent(QShowEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;41&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSpinBox::hideEvent(QHideEvent*)</primary></indexterm>QAbstractSpinBox::hideEvent(QHideEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;42&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::x11Event(_XEvent*)</primary></indexterm>QWidget::x11Event(_XEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;43&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSpinBox::changeEvent(QEvent*)</primary></indexterm>QAbstractSpinBox::changeEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;44&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;45&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::inputMethodEvent(QInputMethodEvent*)</primary></indexterm>QWidget::inputMethodEvent(QInputMethodEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;46&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::inputMethodQuery(Qt::InputMethodQuery) const</primary></indexterm>QWidget::inputMethodQuery(Qt::InputMethodQuery) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;47&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusNextPrevChild(bool)</primary></indexterm>QWidget::focusNextPrevChild(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;48&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::styleChange(QStyle&)</primary></indexterm>QWidget::styleChange(QStyle&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;49&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enabledChange(bool)</primary></indexterm>QWidget::enabledChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;50&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paletteChange(QPalette const&)</primary></indexterm>QWidget::paletteChange(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;51&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::fontChange(QFont const&)</primary></indexterm>QWidget::fontChange(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;52&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::windowActivationChange(bool)</primary></indexterm>QWidget::windowActivationChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;53&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::languageChange()</primary></indexterm>QWidget::languageChange()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;54&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDoubleSpinBox::validate(QString&, int&) const</primary></indexterm>QDoubleSpinBox::validate(QString&, int&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;55&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDoubleSpinBox::fixup(QString&) const</primary></indexterm>QDoubleSpinBox::fixup(QString&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;56&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSpinBox::stepBy(int)</primary></indexterm>QAbstractSpinBox::stepBy(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;57&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSpinBox::clear()</primary></indexterm>QAbstractSpinBox::clear()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;58&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSpinBox::stepEnabled() const</primary></indexterm>QAbstractSpinBox::stepEnabled() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;59&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDoubleSpinBox::valueFromText(QString const&) const</primary></indexterm>QDoubleSpinBox::valueFromText(QString const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;60&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDoubleSpinBox::textFromValue(double) const</primary></indexterm>QDoubleSpinBox::textFromValue(double) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--classdata-->
<TABLE id="cls-38968-1">
<TITLE>Secondary vtable for QDoubleSpinBox</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>-16</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QDoubleSpinBox</primary></indexterm>typeinfo for QDoubleSpinBox</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QDoubleSpinBox::~QDoubleSpinBox()</primary></indexterm>non-virtual thunk to QDoubleSpinBox::~QDoubleSpinBox()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QDoubleSpinBox::~QDoubleSpinBox()</primary></indexterm>non-virtual thunk to QDoubleSpinBox::~QDoubleSpinBox()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::devType() const</primary></indexterm>non-virtual thunk to QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::paintEngine() const</primary></indexterm>non-virtual thunk to QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QDoubleSpinBox  class
is described by <XREF LINKEND="rtti-38763">
</PARA>
<!--classdata-->
<TABLE ID="rtti-38763">
<TITLE>typeinfo for QDoubleSpinBox</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QDoubleSpinBox</primary></indexterm>typeinfo name for QDoubleSpinBox</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QAbstractSpinBox</primary></indexterm>typeinfo for QAbstractSpinBox</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QLCDNumber</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QLCDNumber class
is described by <XREF LINKEND="cls-38889-0">
</PARA>
<!--classdata-->
<TABLE id="cls-38889-0">
<TITLE>Primary vtable for QLCDNumber</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QLCDNumber</primary></indexterm>typeinfo for QLCDNumber</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLCDNumber::metaObject() const</primary></indexterm>QLCDNumber::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLCDNumber::qt_metacast(char const*)</primary></indexterm>QLCDNumber::qt_metacast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLCDNumber::qt_metacall(QMetaObject::Call, int, void**)</primary></indexterm>QLCDNumber::qt_metacall(QMetaObject::Call, int, void**)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLCDNumber::~QLCDNumber()</primary></indexterm>QLCDNumber::~QLCDNumber()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLCDNumber::~QLCDNumber()</primary></indexterm>QLCDNumber::~QLCDNumber()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLCDNumber::event(QEvent*)</primary></indexterm>QLCDNumber::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::eventFilter(QObject*, QEvent*)</primary></indexterm>QObject::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QEvent*)</primary></indexterm>QObject::customEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::devType() const</primary></indexterm>QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setVisible(bool)</primary></indexterm>QWidget::setVisible(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLCDNumber::sizeHint() const</primary></indexterm>QLCDNumber::sizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::minimumSizeHint() const</primary></indexterm>QWidget::minimumSizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::heightForWidth(int) const</primary></indexterm>QWidget::heightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paintEngine() const</primary></indexterm>QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mousePressEvent(QMouseEvent*)</primary></indexterm>QWidget::mousePressEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseReleaseEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseReleaseEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseDoubleClickEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseDoubleClickEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseMoveEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseMoveEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::wheelEvent(QWheelEvent*)</primary></indexterm>QWidget::wheelEvent(QWheelEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyPressEvent(QKeyEvent*)</primary></indexterm>QWidget::keyPressEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyReleaseEvent(QKeyEvent*)</primary></indexterm>QWidget::keyReleaseEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusInEvent(QFocusEvent*)</primary></indexterm>QWidget::focusInEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusOutEvent(QFocusEvent*)</primary></indexterm>QWidget::focusOutEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enterEvent(QEvent*)</primary></indexterm>QWidget::enterEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::leaveEvent(QEvent*)</primary></indexterm>QWidget::leaveEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLCDNumber::paintEvent(QPaintEvent*)</primary></indexterm>QLCDNumber::paintEvent(QPaintEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::moveEvent(QMoveEvent*)</primary></indexterm>QWidget::moveEvent(QMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::resizeEvent(QResizeEvent*)</primary></indexterm>QWidget::resizeEvent(QResizeEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::closeEvent(QCloseEvent*)</primary></indexterm>QWidget::closeEvent(QCloseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;33&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::contextMenuEvent(QContextMenuEvent*)</primary></indexterm>QWidget::contextMenuEvent(QContextMenuEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;34&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::tabletEvent(QTabletEvent*)</primary></indexterm>QWidget::tabletEvent(QTabletEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;35&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::actionEvent(QActionEvent*)</primary></indexterm>QWidget::actionEvent(QActionEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;36&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragEnterEvent(QDragEnterEvent*)</primary></indexterm>QWidget::dragEnterEvent(QDragEnterEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;37&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragMoveEvent(QDragMoveEvent*)</primary></indexterm>QWidget::dragMoveEvent(QDragMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;38&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragLeaveEvent(QDragLeaveEvent*)</primary></indexterm>QWidget::dragLeaveEvent(QDragLeaveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;39&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dropEvent(QDropEvent*)</primary></indexterm>QWidget::dropEvent(QDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;40&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showEvent(QShowEvent*)</primary></indexterm>QWidget::showEvent(QShowEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;41&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::hideEvent(QHideEvent*)</primary></indexterm>QWidget::hideEvent(QHideEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;42&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::x11Event(_XEvent*)</primary></indexterm>QWidget::x11Event(_XEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;43&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::changeEvent(QEvent*)</primary></indexterm>QFrame::changeEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;44&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;45&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::inputMethodEvent(QInputMethodEvent*)</primary></indexterm>QWidget::inputMethodEvent(QInputMethodEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;46&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::inputMethodQuery(Qt::InputMethodQuery) const</primary></indexterm>QWidget::inputMethodQuery(Qt::InputMethodQuery) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;47&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusNextPrevChild(bool)</primary></indexterm>QWidget::focusNextPrevChild(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;48&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::styleChange(QStyle&)</primary></indexterm>QWidget::styleChange(QStyle&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;49&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enabledChange(bool)</primary></indexterm>QWidget::enabledChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;50&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paletteChange(QPalette const&)</primary></indexterm>QWidget::paletteChange(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;51&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::fontChange(QFont const&)</primary></indexterm>QWidget::fontChange(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;52&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::windowActivationChange(bool)</primary></indexterm>QWidget::windowActivationChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;53&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::languageChange()</primary></indexterm>QWidget::languageChange()</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--classdata-->
<TABLE id="cls-38889-1">
<TITLE>Secondary vtable for QLCDNumber</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>-16</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QLCDNumber</primary></indexterm>typeinfo for QLCDNumber</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QLCDNumber::~QLCDNumber()</primary></indexterm>non-virtual thunk to QLCDNumber::~QLCDNumber()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QLCDNumber::~QLCDNumber()</primary></indexterm>non-virtual thunk to QLCDNumber::~QLCDNumber()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::devType() const</primary></indexterm>non-virtual thunk to QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::paintEngine() const</primary></indexterm>non-virtual thunk to QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QLCDNumber  class
is described by <XREF LINKEND="rtti-38683">
</PARA>
<!--classdata-->
<TABLE ID="rtti-38683">
<TITLE>typeinfo for QLCDNumber</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QLCDNumber</primary></indexterm>typeinfo name for QLCDNumber</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QFrame</primary></indexterm>typeinfo for QFrame</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QStackedWidget</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QStackedWidget class
is described by <XREF LINKEND="cls-38976-0">
</PARA>
<!--classdata-->
<TABLE id="cls-38976-0">
<TITLE>Primary vtable for QStackedWidget</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QStackedWidget</primary></indexterm>typeinfo for QStackedWidget</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStackedWidget::metaObject() const</primary></indexterm>QStackedWidget::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStackedWidget::qt_metacast(char const*)</primary></indexterm>QStackedWidget::qt_metacast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStackedWidget::qt_metacall(QMetaObject::Call, int, void**)</primary></indexterm>QStackedWidget::qt_metacall(QMetaObject::Call, int, void**)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStackedWidget::~QStackedWidget()</primary></indexterm>QStackedWidget::~QStackedWidget()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStackedWidget::~QStackedWidget()</primary></indexterm>QStackedWidget::~QStackedWidget()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStackedWidget::event(QEvent*)</primary></indexterm>QStackedWidget::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::eventFilter(QObject*, QEvent*)</primary></indexterm>QObject::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QEvent*)</primary></indexterm>QObject::customEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::devType() const</primary></indexterm>QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setVisible(bool)</primary></indexterm>QWidget::setVisible(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::sizeHint() const</primary></indexterm>QFrame::sizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::minimumSizeHint() const</primary></indexterm>QWidget::minimumSizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::heightForWidth(int) const</primary></indexterm>QWidget::heightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paintEngine() const</primary></indexterm>QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mousePressEvent(QMouseEvent*)</primary></indexterm>QWidget::mousePressEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseReleaseEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseReleaseEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseDoubleClickEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseDoubleClickEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseMoveEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseMoveEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::wheelEvent(QWheelEvent*)</primary></indexterm>QWidget::wheelEvent(QWheelEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyPressEvent(QKeyEvent*)</primary></indexterm>QWidget::keyPressEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyReleaseEvent(QKeyEvent*)</primary></indexterm>QWidget::keyReleaseEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusInEvent(QFocusEvent*)</primary></indexterm>QWidget::focusInEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusOutEvent(QFocusEvent*)</primary></indexterm>QWidget::focusOutEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enterEvent(QEvent*)</primary></indexterm>QWidget::enterEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::leaveEvent(QEvent*)</primary></indexterm>QWidget::leaveEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::paintEvent(QPaintEvent*)</primary></indexterm>QFrame::paintEvent(QPaintEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::moveEvent(QMoveEvent*)</primary></indexterm>QWidget::moveEvent(QMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::resizeEvent(QResizeEvent*)</primary></indexterm>QWidget::resizeEvent(QResizeEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::closeEvent(QCloseEvent*)</primary></indexterm>QWidget::closeEvent(QCloseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;33&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::contextMenuEvent(QContextMenuEvent*)</primary></indexterm>QWidget::contextMenuEvent(QContextMenuEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;34&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::tabletEvent(QTabletEvent*)</primary></indexterm>QWidget::tabletEvent(QTabletEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;35&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::actionEvent(QActionEvent*)</primary></indexterm>QWidget::actionEvent(QActionEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;36&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragEnterEvent(QDragEnterEvent*)</primary></indexterm>QWidget::dragEnterEvent(QDragEnterEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;37&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragMoveEvent(QDragMoveEvent*)</primary></indexterm>QWidget::dragMoveEvent(QDragMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;38&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragLeaveEvent(QDragLeaveEvent*)</primary></indexterm>QWidget::dragLeaveEvent(QDragLeaveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;39&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dropEvent(QDropEvent*)</primary></indexterm>QWidget::dropEvent(QDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;40&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showEvent(QShowEvent*)</primary></indexterm>QWidget::showEvent(QShowEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;41&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::hideEvent(QHideEvent*)</primary></indexterm>QWidget::hideEvent(QHideEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;42&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::x11Event(_XEvent*)</primary></indexterm>QWidget::x11Event(_XEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;43&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::changeEvent(QEvent*)</primary></indexterm>QFrame::changeEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;44&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;45&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::inputMethodEvent(QInputMethodEvent*)</primary></indexterm>QWidget::inputMethodEvent(QInputMethodEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;46&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::inputMethodQuery(Qt::InputMethodQuery) const</primary></indexterm>QWidget::inputMethodQuery(Qt::InputMethodQuery) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;47&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusNextPrevChild(bool)</primary></indexterm>QWidget::focusNextPrevChild(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;48&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::styleChange(QStyle&)</primary></indexterm>QWidget::styleChange(QStyle&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;49&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enabledChange(bool)</primary></indexterm>QWidget::enabledChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;50&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paletteChange(QPalette const&)</primary></indexterm>QWidget::paletteChange(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;51&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::fontChange(QFont const&)</primary></indexterm>QWidget::fontChange(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;52&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::windowActivationChange(bool)</primary></indexterm>QWidget::windowActivationChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;53&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::languageChange()</primary></indexterm>QWidget::languageChange()</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--classdata-->
<TABLE id="cls-38976-1">
<TITLE>Secondary vtable for QStackedWidget</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>-16</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QStackedWidget</primary></indexterm>typeinfo for QStackedWidget</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QStackedWidget::~QStackedWidget()</primary></indexterm>non-virtual thunk to QStackedWidget::~QStackedWidget()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QStackedWidget::~QStackedWidget()</primary></indexterm>non-virtual thunk to QStackedWidget::~QStackedWidget()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::devType() const</primary></indexterm>non-virtual thunk to QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::paintEngine() const</primary></indexterm>non-virtual thunk to QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QStackedWidget  class
is described by <XREF LINKEND="rtti-38771">
</PARA>
<!--classdata-->
<TABLE ID="rtti-38771">
<TITLE>typeinfo for QStackedWidget</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QStackedWidget</primary></indexterm>typeinfo name for QStackedWidget</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QFrame</primary></indexterm>typeinfo for QFrame</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QPushButton</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QPushButton class
is described by <XREF LINKEND="cls-38924-0">
</PARA>
<!--classdata-->
<TABLE id="cls-38924-0">
<TITLE>Primary vtable for QPushButton</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QPushButton</primary></indexterm>typeinfo for QPushButton</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPushButton::metaObject() const</primary></indexterm>QPushButton::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPushButton::qt_metacast(char const*)</primary></indexterm>QPushButton::qt_metacast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPushButton::qt_metacall(QMetaObject::Call, int, void**)</primary></indexterm>QPushButton::qt_metacall(QMetaObject::Call, int, void**)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPushButton::~QPushButton()</primary></indexterm>QPushButton::~QPushButton()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPushButton::~QPushButton()</primary></indexterm>QPushButton::~QPushButton()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPushButton::event(QEvent*)</primary></indexterm>QPushButton::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::eventFilter(QObject*, QEvent*)</primary></indexterm>QObject::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractButton::timerEvent(QTimerEvent*)</primary></indexterm>QAbstractButton::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QEvent*)</primary></indexterm>QObject::customEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::devType() const</primary></indexterm>QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setVisible(bool)</primary></indexterm>QWidget::setVisible(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPushButton::sizeHint() const</primary></indexterm>QPushButton::sizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::minimumSizeHint() const</primary></indexterm>QWidget::minimumSizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::heightForWidth(int) const</primary></indexterm>QWidget::heightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paintEngine() const</primary></indexterm>QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractButton::mousePressEvent(QMouseEvent*)</primary></indexterm>QAbstractButton::mousePressEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractButton::mouseReleaseEvent(QMouseEvent*)</primary></indexterm>QAbstractButton::mouseReleaseEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseDoubleClickEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseDoubleClickEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractButton::mouseMoveEvent(QMouseEvent*)</primary></indexterm>QAbstractButton::mouseMoveEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::wheelEvent(QWheelEvent*)</primary></indexterm>QWidget::wheelEvent(QWheelEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPushButton::keyPressEvent(QKeyEvent*)</primary></indexterm>QPushButton::keyPressEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractButton::keyReleaseEvent(QKeyEvent*)</primary></indexterm>QAbstractButton::keyReleaseEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPushButton::focusInEvent(QFocusEvent*)</primary></indexterm>QPushButton::focusInEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPushButton::focusOutEvent(QFocusEvent*)</primary></indexterm>QPushButton::focusOutEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enterEvent(QEvent*)</primary></indexterm>QWidget::enterEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::leaveEvent(QEvent*)</primary></indexterm>QWidget::leaveEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPushButton::paintEvent(QPaintEvent*)</primary></indexterm>QPushButton::paintEvent(QPaintEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::moveEvent(QMoveEvent*)</primary></indexterm>QWidget::moveEvent(QMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::resizeEvent(QResizeEvent*)</primary></indexterm>QWidget::resizeEvent(QResizeEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::closeEvent(QCloseEvent*)</primary></indexterm>QWidget::closeEvent(QCloseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;33&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::contextMenuEvent(QContextMenuEvent*)</primary></indexterm>QWidget::contextMenuEvent(QContextMenuEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;34&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::tabletEvent(QTabletEvent*)</primary></indexterm>QWidget::tabletEvent(QTabletEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;35&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::actionEvent(QActionEvent*)</primary></indexterm>QWidget::actionEvent(QActionEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;36&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragEnterEvent(QDragEnterEvent*)</primary></indexterm>QWidget::dragEnterEvent(QDragEnterEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;37&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragMoveEvent(QDragMoveEvent*)</primary></indexterm>QWidget::dragMoveEvent(QDragMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;38&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragLeaveEvent(QDragLeaveEvent*)</primary></indexterm>QWidget::dragLeaveEvent(QDragLeaveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;39&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dropEvent(QDropEvent*)</primary></indexterm>QWidget::dropEvent(QDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;40&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showEvent(QShowEvent*)</primary></indexterm>QWidget::showEvent(QShowEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;41&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::hideEvent(QHideEvent*)</primary></indexterm>QWidget::hideEvent(QHideEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;42&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::x11Event(_XEvent*)</primary></indexterm>QWidget::x11Event(_XEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;43&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractButton::changeEvent(QEvent*)</primary></indexterm>QAbstractButton::changeEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;44&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;45&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::inputMethodEvent(QInputMethodEvent*)</primary></indexterm>QWidget::inputMethodEvent(QInputMethodEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;46&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::inputMethodQuery(Qt::InputMethodQuery) const</primary></indexterm>QWidget::inputMethodQuery(Qt::InputMethodQuery) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;47&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusNextPrevChild(bool)</primary></indexterm>QWidget::focusNextPrevChild(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;48&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::styleChange(QStyle&)</primary></indexterm>QWidget::styleChange(QStyle&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;49&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enabledChange(bool)</primary></indexterm>QWidget::enabledChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;50&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paletteChange(QPalette const&)</primary></indexterm>QWidget::paletteChange(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;51&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::fontChange(QFont const&)</primary></indexterm>QWidget::fontChange(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;52&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::windowActivationChange(bool)</primary></indexterm>QWidget::windowActivationChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;53&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::languageChange()</primary></indexterm>QWidget::languageChange()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;54&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractButton::hitButton(QPoint const&) const</primary></indexterm>QAbstractButton::hitButton(QPoint const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;55&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractButton::checkStateSet()</primary></indexterm>QAbstractButton::checkStateSet()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;56&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractButton::nextCheckState()</primary></indexterm>QAbstractButton::nextCheckState()</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--classdata-->
<TABLE id="cls-38924-1">
<TITLE>Secondary vtable for QPushButton</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>-16</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QPushButton</primary></indexterm>typeinfo for QPushButton</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QPushButton::~QPushButton()</primary></indexterm>non-virtual thunk to QPushButton::~QPushButton()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QPushButton::~QPushButton()</primary></indexterm>non-virtual thunk to QPushButton::~QPushButton()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::devType() const</primary></indexterm>non-virtual thunk to QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::paintEngine() const</primary></indexterm>non-virtual thunk to QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QPushButton  class
is described by <XREF LINKEND="rtti-38719">
</PARA>
<!--classdata-->
<TABLE ID="rtti-38719">
<TITLE>typeinfo for QPushButton</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QPushButton</primary></indexterm>typeinfo name for QPushButton</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QAbstractButton</primary></indexterm>typeinfo for QAbstractButton</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QSplashScreen</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QSplashScreen class
is described by <XREF LINKEND="cls-38964-0">
</PARA>
<!--classdata-->
<TABLE id="cls-38964-0">
<TITLE>Primary vtable for QSplashScreen</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QSplashScreen</primary></indexterm>typeinfo for QSplashScreen</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSplashScreen::metaObject() const</primary></indexterm>QSplashScreen::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSplashScreen::qt_metacast(char const*)</primary></indexterm>QSplashScreen::qt_metacast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSplashScreen::qt_metacall(QMetaObject::Call, int, void**)</primary></indexterm>QSplashScreen::qt_metacall(QMetaObject::Call, int, void**)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSplashScreen::~QSplashScreen()</primary></indexterm>QSplashScreen::~QSplashScreen()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSplashScreen::~QSplashScreen()</primary></indexterm>QSplashScreen::~QSplashScreen()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSplashScreen::event(QEvent*)</primary></indexterm>QSplashScreen::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::eventFilter(QObject*, QEvent*)</primary></indexterm>QObject::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QEvent*)</primary></indexterm>QObject::customEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::devType() const</primary></indexterm>QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setVisible(bool)</primary></indexterm>QWidget::setVisible(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::sizeHint() const</primary></indexterm>QWidget::sizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::minimumSizeHint() const</primary></indexterm>QWidget::minimumSizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::heightForWidth(int) const</primary></indexterm>QWidget::heightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paintEngine() const</primary></indexterm>QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSplashScreen::mousePressEvent(QMouseEvent*)</primary></indexterm>QSplashScreen::mousePressEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseReleaseEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseReleaseEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseDoubleClickEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseDoubleClickEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseMoveEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseMoveEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::wheelEvent(QWheelEvent*)</primary></indexterm>QWidget::wheelEvent(QWheelEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyPressEvent(QKeyEvent*)</primary></indexterm>QWidget::keyPressEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyReleaseEvent(QKeyEvent*)</primary></indexterm>QWidget::keyReleaseEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusInEvent(QFocusEvent*)</primary></indexterm>QWidget::focusInEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusOutEvent(QFocusEvent*)</primary></indexterm>QWidget::focusOutEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enterEvent(QEvent*)</primary></indexterm>QWidget::enterEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::leaveEvent(QEvent*)</primary></indexterm>QWidget::leaveEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paintEvent(QPaintEvent*)</primary></indexterm>QWidget::paintEvent(QPaintEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::moveEvent(QMoveEvent*)</primary></indexterm>QWidget::moveEvent(QMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::resizeEvent(QResizeEvent*)</primary></indexterm>QWidget::resizeEvent(QResizeEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::closeEvent(QCloseEvent*)</primary></indexterm>QWidget::closeEvent(QCloseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;33&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::contextMenuEvent(QContextMenuEvent*)</primary></indexterm>QWidget::contextMenuEvent(QContextMenuEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;34&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::tabletEvent(QTabletEvent*)</primary></indexterm>QWidget::tabletEvent(QTabletEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;35&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::actionEvent(QActionEvent*)</primary></indexterm>QWidget::actionEvent(QActionEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;36&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragEnterEvent(QDragEnterEvent*)</primary></indexterm>QWidget::dragEnterEvent(QDragEnterEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;37&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragMoveEvent(QDragMoveEvent*)</primary></indexterm>QWidget::dragMoveEvent(QDragMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;38&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragLeaveEvent(QDragLeaveEvent*)</primary></indexterm>QWidget::dragLeaveEvent(QDragLeaveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;39&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dropEvent(QDropEvent*)</primary></indexterm>QWidget::dropEvent(QDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;40&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showEvent(QShowEvent*)</primary></indexterm>QWidget::showEvent(QShowEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;41&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::hideEvent(QHideEvent*)</primary></indexterm>QWidget::hideEvent(QHideEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;42&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::x11Event(_XEvent*)</primary></indexterm>QWidget::x11Event(_XEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;43&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::changeEvent(QEvent*)</primary></indexterm>QWidget::changeEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;44&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;45&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::inputMethodEvent(QInputMethodEvent*)</primary></indexterm>QWidget::inputMethodEvent(QInputMethodEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;46&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::inputMethodQuery(Qt::InputMethodQuery) const</primary></indexterm>QWidget::inputMethodQuery(Qt::InputMethodQuery) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;47&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusNextPrevChild(bool)</primary></indexterm>QWidget::focusNextPrevChild(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;48&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::styleChange(QStyle&)</primary></indexterm>QWidget::styleChange(QStyle&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;49&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enabledChange(bool)</primary></indexterm>QWidget::enabledChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;50&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paletteChange(QPalette const&)</primary></indexterm>QWidget::paletteChange(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;51&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::fontChange(QFont const&)</primary></indexterm>QWidget::fontChange(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;52&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::windowActivationChange(bool)</primary></indexterm>QWidget::windowActivationChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;53&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::languageChange()</primary></indexterm>QWidget::languageChange()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;54&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSplashScreen::drawContents(QPainter*)</primary></indexterm>QSplashScreen::drawContents(QPainter*)</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--classdata-->
<TABLE id="cls-38964-1">
<TITLE>Secondary vtable for QSplashScreen</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>-16</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QSplashScreen</primary></indexterm>typeinfo for QSplashScreen</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QSplashScreen::~QSplashScreen()</primary></indexterm>non-virtual thunk to QSplashScreen::~QSplashScreen()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QSplashScreen::~QSplashScreen()</primary></indexterm>non-virtual thunk to QSplashScreen::~QSplashScreen()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::devType() const</primary></indexterm>non-virtual thunk to QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::paintEngine() const</primary></indexterm>non-virtual thunk to QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QSplashScreen  class
is described by <XREF LINKEND="rtti-38759">
</PARA>
<!--classdata-->
<TABLE ID="rtti-38759">
<TITLE>typeinfo for QSplashScreen</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QSplashScreen</primary></indexterm>typeinfo name for QSplashScreen</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QWidget</primary></indexterm>typeinfo for QWidget</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QDateTimeEdit</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QDateTimeEdit class
is described by <XREF LINKEND="cls-38957-0">
</PARA>
<!--classdata-->
<TABLE id="cls-38957-0">
<TITLE>Primary vtable for QDateTimeEdit</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QDateTimeEdit</primary></indexterm>typeinfo for QDateTimeEdit</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDateTimeEdit::metaObject() const</primary></indexterm>QDateTimeEdit::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDateTimeEdit::qt_metacast(char const*)</primary></indexterm>QDateTimeEdit::qt_metacast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDateTimeEdit::qt_metacall(QMetaObject::Call, int, void**)</primary></indexterm>QDateTimeEdit::qt_metacall(QMetaObject::Call, int, void**)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDateTimeEdit::~QDateTimeEdit()</primary></indexterm>QDateTimeEdit::~QDateTimeEdit()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDateTimeEdit::~QDateTimeEdit()</primary></indexterm>QDateTimeEdit::~QDateTimeEdit()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDateTimeEdit::event(QEvent*)</primary></indexterm>QDateTimeEdit::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::eventFilter(QObject*, QEvent*)</primary></indexterm>QObject::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSpinBox::timerEvent(QTimerEvent*)</primary></indexterm>QAbstractSpinBox::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QEvent*)</primary></indexterm>QObject::customEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::devType() const</primary></indexterm>QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setVisible(bool)</primary></indexterm>QWidget::setVisible(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDateTimeEdit::sizeHint() const</primary></indexterm>QDateTimeEdit::sizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSpinBox::minimumSizeHint() const</primary></indexterm>QAbstractSpinBox::minimumSizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::heightForWidth(int) const</primary></indexterm>QWidget::heightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paintEngine() const</primary></indexterm>QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSpinBox::mousePressEvent(QMouseEvent*)</primary></indexterm>QAbstractSpinBox::mousePressEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSpinBox::mouseReleaseEvent(QMouseEvent*)</primary></indexterm>QAbstractSpinBox::mouseReleaseEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseDoubleClickEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseDoubleClickEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSpinBox::mouseMoveEvent(QMouseEvent*)</primary></indexterm>QAbstractSpinBox::mouseMoveEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDateTimeEdit::wheelEvent(QWheelEvent*)</primary></indexterm>QDateTimeEdit::wheelEvent(QWheelEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDateTimeEdit::keyPressEvent(QKeyEvent*)</primary></indexterm>QDateTimeEdit::keyPressEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSpinBox::keyReleaseEvent(QKeyEvent*)</primary></indexterm>QAbstractSpinBox::keyReleaseEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDateTimeEdit::focusInEvent(QFocusEvent*)</primary></indexterm>QDateTimeEdit::focusInEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSpinBox::focusOutEvent(QFocusEvent*)</primary></indexterm>QAbstractSpinBox::focusOutEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enterEvent(QEvent*)</primary></indexterm>QWidget::enterEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::leaveEvent(QEvent*)</primary></indexterm>QWidget::leaveEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSpinBox::paintEvent(QPaintEvent*)</primary></indexterm>QAbstractSpinBox::paintEvent(QPaintEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::moveEvent(QMoveEvent*)</primary></indexterm>QWidget::moveEvent(QMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSpinBox::resizeEvent(QResizeEvent*)</primary></indexterm>QAbstractSpinBox::resizeEvent(QResizeEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSpinBox::closeEvent(QCloseEvent*)</primary></indexterm>QAbstractSpinBox::closeEvent(QCloseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;33&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSpinBox::contextMenuEvent(QContextMenuEvent*)</primary></indexterm>QAbstractSpinBox::contextMenuEvent(QContextMenuEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;34&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::tabletEvent(QTabletEvent*)</primary></indexterm>QWidget::tabletEvent(QTabletEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;35&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::actionEvent(QActionEvent*)</primary></indexterm>QWidget::actionEvent(QActionEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;36&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragEnterEvent(QDragEnterEvent*)</primary></indexterm>QWidget::dragEnterEvent(QDragEnterEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;37&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragMoveEvent(QDragMoveEvent*)</primary></indexterm>QWidget::dragMoveEvent(QDragMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;38&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragLeaveEvent(QDragLeaveEvent*)</primary></indexterm>QWidget::dragLeaveEvent(QDragLeaveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;39&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dropEvent(QDropEvent*)</primary></indexterm>QWidget::dropEvent(QDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;40&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSpinBox::showEvent(QShowEvent*)</primary></indexterm>QAbstractSpinBox::showEvent(QShowEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;41&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSpinBox::hideEvent(QHideEvent*)</primary></indexterm>QAbstractSpinBox::hideEvent(QHideEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;42&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::x11Event(_XEvent*)</primary></indexterm>QWidget::x11Event(_XEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;43&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSpinBox::changeEvent(QEvent*)</primary></indexterm>QAbstractSpinBox::changeEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;44&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;45&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::inputMethodEvent(QInputMethodEvent*)</primary></indexterm>QWidget::inputMethodEvent(QInputMethodEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;46&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::inputMethodQuery(Qt::InputMethodQuery) const</primary></indexterm>QWidget::inputMethodQuery(Qt::InputMethodQuery) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;47&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDateTimeEdit::focusNextPrevChild(bool)</primary></indexterm>QDateTimeEdit::focusNextPrevChild(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;48&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::styleChange(QStyle&)</primary></indexterm>QWidget::styleChange(QStyle&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;49&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enabledChange(bool)</primary></indexterm>QWidget::enabledChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;50&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paletteChange(QPalette const&)</primary></indexterm>QWidget::paletteChange(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;51&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::fontChange(QFont const&)</primary></indexterm>QWidget::fontChange(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;52&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::windowActivationChange(bool)</primary></indexterm>QWidget::windowActivationChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;53&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::languageChange()</primary></indexterm>QWidget::languageChange()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;54&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDateTimeEdit::validate(QString&, int&) const</primary></indexterm>QDateTimeEdit::validate(QString&, int&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;55&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDateTimeEdit::fixup(QString&) const</primary></indexterm>QDateTimeEdit::fixup(QString&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;56&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDateTimeEdit::stepBy(int)</primary></indexterm>QDateTimeEdit::stepBy(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;57&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDateTimeEdit::clear()</primary></indexterm>QDateTimeEdit::clear()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;58&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDateTimeEdit::stepEnabled() const</primary></indexterm>QDateTimeEdit::stepEnabled() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;59&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDateTimeEdit::dateTimeFromText(QString const&) const</primary></indexterm>QDateTimeEdit::dateTimeFromText(QString const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;60&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDateTimeEdit::textFromDateTime(QDateTime const&) const</primary></indexterm>QDateTimeEdit::textFromDateTime(QDateTime const&) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--classdata-->
<TABLE id="cls-38957-1">
<TITLE>Secondary vtable for QDateTimeEdit</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>-16</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QDateTimeEdit</primary></indexterm>typeinfo for QDateTimeEdit</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QDateTimeEdit::~QDateTimeEdit()</primary></indexterm>non-virtual thunk to QDateTimeEdit::~QDateTimeEdit()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QDateTimeEdit::~QDateTimeEdit()</primary></indexterm>non-virtual thunk to QDateTimeEdit::~QDateTimeEdit()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::devType() const</primary></indexterm>non-virtual thunk to QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::paintEngine() const</primary></indexterm>non-virtual thunk to QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QDateTimeEdit  class
is described by <XREF LINKEND="rtti-38752">
</PARA>
<!--classdata-->
<TABLE ID="rtti-38752">
<TITLE>typeinfo for QDateTimeEdit</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QDateTimeEdit</primary></indexterm>typeinfo name for QDateTimeEdit</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QAbstractSpinBox</primary></indexterm>typeinfo for QAbstractSpinBox</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QTimeEdit</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QTimeEdit class
is described by <XREF LINKEND="cls-39087-0">
</PARA>
<!--classdata-->
<TABLE id="cls-39087-0">
<TITLE>Primary vtable for QTimeEdit</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QTimeEdit</primary></indexterm>typeinfo for QTimeEdit</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTimeEdit::metaObject() const</primary></indexterm>QTimeEdit::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTimeEdit::qt_metacast(char const*)</primary></indexterm>QTimeEdit::qt_metacast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTimeEdit::qt_metacall(QMetaObject::Call, int, void**)</primary></indexterm>QTimeEdit::qt_metacall(QMetaObject::Call, int, void**)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTimeEdit::~QTimeEdit()</primary></indexterm>QTimeEdit::~QTimeEdit()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTimeEdit::~QTimeEdit()</primary></indexterm>QTimeEdit::~QTimeEdit()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDateTimeEdit::event(QEvent*)</primary></indexterm>QDateTimeEdit::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::eventFilter(QObject*, QEvent*)</primary></indexterm>QObject::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSpinBox::timerEvent(QTimerEvent*)</primary></indexterm>QAbstractSpinBox::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QEvent*)</primary></indexterm>QObject::customEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::devType() const</primary></indexterm>QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setVisible(bool)</primary></indexterm>QWidget::setVisible(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDateTimeEdit::sizeHint() const</primary></indexterm>QDateTimeEdit::sizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSpinBox::minimumSizeHint() const</primary></indexterm>QAbstractSpinBox::minimumSizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::heightForWidth(int) const</primary></indexterm>QWidget::heightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paintEngine() const</primary></indexterm>QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSpinBox::mousePressEvent(QMouseEvent*)</primary></indexterm>QAbstractSpinBox::mousePressEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSpinBox::mouseReleaseEvent(QMouseEvent*)</primary></indexterm>QAbstractSpinBox::mouseReleaseEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseDoubleClickEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseDoubleClickEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSpinBox::mouseMoveEvent(QMouseEvent*)</primary></indexterm>QAbstractSpinBox::mouseMoveEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDateTimeEdit::wheelEvent(QWheelEvent*)</primary></indexterm>QDateTimeEdit::wheelEvent(QWheelEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDateTimeEdit::keyPressEvent(QKeyEvent*)</primary></indexterm>QDateTimeEdit::keyPressEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSpinBox::keyReleaseEvent(QKeyEvent*)</primary></indexterm>QAbstractSpinBox::keyReleaseEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDateTimeEdit::focusInEvent(QFocusEvent*)</primary></indexterm>QDateTimeEdit::focusInEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSpinBox::focusOutEvent(QFocusEvent*)</primary></indexterm>QAbstractSpinBox::focusOutEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enterEvent(QEvent*)</primary></indexterm>QWidget::enterEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::leaveEvent(QEvent*)</primary></indexterm>QWidget::leaveEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSpinBox::paintEvent(QPaintEvent*)</primary></indexterm>QAbstractSpinBox::paintEvent(QPaintEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::moveEvent(QMoveEvent*)</primary></indexterm>QWidget::moveEvent(QMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSpinBox::resizeEvent(QResizeEvent*)</primary></indexterm>QAbstractSpinBox::resizeEvent(QResizeEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSpinBox::closeEvent(QCloseEvent*)</primary></indexterm>QAbstractSpinBox::closeEvent(QCloseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;33&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSpinBox::contextMenuEvent(QContextMenuEvent*)</primary></indexterm>QAbstractSpinBox::contextMenuEvent(QContextMenuEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;34&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::tabletEvent(QTabletEvent*)</primary></indexterm>QWidget::tabletEvent(QTabletEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;35&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::actionEvent(QActionEvent*)</primary></indexterm>QWidget::actionEvent(QActionEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;36&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragEnterEvent(QDragEnterEvent*)</primary></indexterm>QWidget::dragEnterEvent(QDragEnterEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;37&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragMoveEvent(QDragMoveEvent*)</primary></indexterm>QWidget::dragMoveEvent(QDragMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;38&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragLeaveEvent(QDragLeaveEvent*)</primary></indexterm>QWidget::dragLeaveEvent(QDragLeaveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;39&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dropEvent(QDropEvent*)</primary></indexterm>QWidget::dropEvent(QDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;40&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSpinBox::showEvent(QShowEvent*)</primary></indexterm>QAbstractSpinBox::showEvent(QShowEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;41&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSpinBox::hideEvent(QHideEvent*)</primary></indexterm>QAbstractSpinBox::hideEvent(QHideEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;42&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::x11Event(_XEvent*)</primary></indexterm>QWidget::x11Event(_XEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;43&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSpinBox::changeEvent(QEvent*)</primary></indexterm>QAbstractSpinBox::changeEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;44&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;45&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::inputMethodEvent(QInputMethodEvent*)</primary></indexterm>QWidget::inputMethodEvent(QInputMethodEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;46&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::inputMethodQuery(Qt::InputMethodQuery) const</primary></indexterm>QWidget::inputMethodQuery(Qt::InputMethodQuery) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;47&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDateTimeEdit::focusNextPrevChild(bool)</primary></indexterm>QDateTimeEdit::focusNextPrevChild(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;48&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::styleChange(QStyle&)</primary></indexterm>QWidget::styleChange(QStyle&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;49&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enabledChange(bool)</primary></indexterm>QWidget::enabledChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;50&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paletteChange(QPalette const&)</primary></indexterm>QWidget::paletteChange(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;51&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::fontChange(QFont const&)</primary></indexterm>QWidget::fontChange(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;52&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::windowActivationChange(bool)</primary></indexterm>QWidget::windowActivationChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;53&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::languageChange()</primary></indexterm>QWidget::languageChange()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;54&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDateTimeEdit::validate(QString&, int&) const</primary></indexterm>QDateTimeEdit::validate(QString&, int&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;55&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDateTimeEdit::fixup(QString&) const</primary></indexterm>QDateTimeEdit::fixup(QString&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;56&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDateTimeEdit::stepBy(int)</primary></indexterm>QDateTimeEdit::stepBy(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;57&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDateTimeEdit::clear()</primary></indexterm>QDateTimeEdit::clear()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;58&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDateTimeEdit::stepEnabled() const</primary></indexterm>QDateTimeEdit::stepEnabled() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;59&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDateTimeEdit::dateTimeFromText(QString const&) const</primary></indexterm>QDateTimeEdit::dateTimeFromText(QString const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;60&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDateTimeEdit::textFromDateTime(QDateTime const&) const</primary></indexterm>QDateTimeEdit::textFromDateTime(QDateTime const&) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--classdata-->
<TABLE id="cls-39087-1">
<TITLE>Secondary vtable for QTimeEdit</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>-16</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QTimeEdit</primary></indexterm>typeinfo for QTimeEdit</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QTimeEdit::~QTimeEdit()</primary></indexterm>non-virtual thunk to QTimeEdit::~QTimeEdit()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QTimeEdit::~QTimeEdit()</primary></indexterm>non-virtual thunk to QTimeEdit::~QTimeEdit()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::devType() const</primary></indexterm>non-virtual thunk to QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::paintEngine() const</primary></indexterm>non-virtual thunk to QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QTimeEdit  class
is described by <XREF LINKEND="rtti-38882">
</PARA>
<!--classdata-->
<TABLE ID="rtti-38882">
<TITLE>typeinfo for QTimeEdit</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QTimeEdit</primary></indexterm>typeinfo name for QTimeEdit</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QDateTimeEdit</primary></indexterm>typeinfo for QDateTimeEdit</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QDateEdit</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QDateEdit class
is described by <XREF LINKEND="cls-39075-0">
</PARA>
<!--classdata-->
<TABLE id="cls-39075-0">
<TITLE>Primary vtable for QDateEdit</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QDateEdit</primary></indexterm>typeinfo for QDateEdit</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDateEdit::metaObject() const</primary></indexterm>QDateEdit::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDateEdit::qt_metacast(char const*)</primary></indexterm>QDateEdit::qt_metacast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDateEdit::qt_metacall(QMetaObject::Call, int, void**)</primary></indexterm>QDateEdit::qt_metacall(QMetaObject::Call, int, void**)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDateEdit::~QDateEdit()</primary></indexterm>QDateEdit::~QDateEdit()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDateEdit::~QDateEdit()</primary></indexterm>QDateEdit::~QDateEdit()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDateTimeEdit::event(QEvent*)</primary></indexterm>QDateTimeEdit::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::eventFilter(QObject*, QEvent*)</primary></indexterm>QObject::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSpinBox::timerEvent(QTimerEvent*)</primary></indexterm>QAbstractSpinBox::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QEvent*)</primary></indexterm>QObject::customEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::devType() const</primary></indexterm>QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setVisible(bool)</primary></indexterm>QWidget::setVisible(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDateTimeEdit::sizeHint() const</primary></indexterm>QDateTimeEdit::sizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSpinBox::minimumSizeHint() const</primary></indexterm>QAbstractSpinBox::minimumSizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::heightForWidth(int) const</primary></indexterm>QWidget::heightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paintEngine() const</primary></indexterm>QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSpinBox::mousePressEvent(QMouseEvent*)</primary></indexterm>QAbstractSpinBox::mousePressEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSpinBox::mouseReleaseEvent(QMouseEvent*)</primary></indexterm>QAbstractSpinBox::mouseReleaseEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseDoubleClickEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseDoubleClickEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSpinBox::mouseMoveEvent(QMouseEvent*)</primary></indexterm>QAbstractSpinBox::mouseMoveEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDateTimeEdit::wheelEvent(QWheelEvent*)</primary></indexterm>QDateTimeEdit::wheelEvent(QWheelEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDateTimeEdit::keyPressEvent(QKeyEvent*)</primary></indexterm>QDateTimeEdit::keyPressEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSpinBox::keyReleaseEvent(QKeyEvent*)</primary></indexterm>QAbstractSpinBox::keyReleaseEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDateTimeEdit::focusInEvent(QFocusEvent*)</primary></indexterm>QDateTimeEdit::focusInEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSpinBox::focusOutEvent(QFocusEvent*)</primary></indexterm>QAbstractSpinBox::focusOutEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enterEvent(QEvent*)</primary></indexterm>QWidget::enterEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::leaveEvent(QEvent*)</primary></indexterm>QWidget::leaveEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSpinBox::paintEvent(QPaintEvent*)</primary></indexterm>QAbstractSpinBox::paintEvent(QPaintEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::moveEvent(QMoveEvent*)</primary></indexterm>QWidget::moveEvent(QMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSpinBox::resizeEvent(QResizeEvent*)</primary></indexterm>QAbstractSpinBox::resizeEvent(QResizeEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSpinBox::closeEvent(QCloseEvent*)</primary></indexterm>QAbstractSpinBox::closeEvent(QCloseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;33&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSpinBox::contextMenuEvent(QContextMenuEvent*)</primary></indexterm>QAbstractSpinBox::contextMenuEvent(QContextMenuEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;34&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::tabletEvent(QTabletEvent*)</primary></indexterm>QWidget::tabletEvent(QTabletEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;35&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::actionEvent(QActionEvent*)</primary></indexterm>QWidget::actionEvent(QActionEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;36&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragEnterEvent(QDragEnterEvent*)</primary></indexterm>QWidget::dragEnterEvent(QDragEnterEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;37&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragMoveEvent(QDragMoveEvent*)</primary></indexterm>QWidget::dragMoveEvent(QDragMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;38&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragLeaveEvent(QDragLeaveEvent*)</primary></indexterm>QWidget::dragLeaveEvent(QDragLeaveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;39&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dropEvent(QDropEvent*)</primary></indexterm>QWidget::dropEvent(QDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;40&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSpinBox::showEvent(QShowEvent*)</primary></indexterm>QAbstractSpinBox::showEvent(QShowEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;41&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSpinBox::hideEvent(QHideEvent*)</primary></indexterm>QAbstractSpinBox::hideEvent(QHideEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;42&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::x11Event(_XEvent*)</primary></indexterm>QWidget::x11Event(_XEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;43&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSpinBox::changeEvent(QEvent*)</primary></indexterm>QAbstractSpinBox::changeEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;44&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;45&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::inputMethodEvent(QInputMethodEvent*)</primary></indexterm>QWidget::inputMethodEvent(QInputMethodEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;46&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::inputMethodQuery(Qt::InputMethodQuery) const</primary></indexterm>QWidget::inputMethodQuery(Qt::InputMethodQuery) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;47&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDateTimeEdit::focusNextPrevChild(bool)</primary></indexterm>QDateTimeEdit::focusNextPrevChild(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;48&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::styleChange(QStyle&)</primary></indexterm>QWidget::styleChange(QStyle&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;49&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enabledChange(bool)</primary></indexterm>QWidget::enabledChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;50&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paletteChange(QPalette const&)</primary></indexterm>QWidget::paletteChange(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;51&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::fontChange(QFont const&)</primary></indexterm>QWidget::fontChange(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;52&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::windowActivationChange(bool)</primary></indexterm>QWidget::windowActivationChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;53&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::languageChange()</primary></indexterm>QWidget::languageChange()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;54&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDateTimeEdit::validate(QString&, int&) const</primary></indexterm>QDateTimeEdit::validate(QString&, int&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;55&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDateTimeEdit::fixup(QString&) const</primary></indexterm>QDateTimeEdit::fixup(QString&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;56&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDateTimeEdit::stepBy(int)</primary></indexterm>QDateTimeEdit::stepBy(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;57&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDateTimeEdit::clear()</primary></indexterm>QDateTimeEdit::clear()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;58&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDateTimeEdit::stepEnabled() const</primary></indexterm>QDateTimeEdit::stepEnabled() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;59&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDateTimeEdit::dateTimeFromText(QString const&) const</primary></indexterm>QDateTimeEdit::dateTimeFromText(QString const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;60&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDateTimeEdit::textFromDateTime(QDateTime const&) const</primary></indexterm>QDateTimeEdit::textFromDateTime(QDateTime const&) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--classdata-->
<TABLE id="cls-39075-1">
<TITLE>Secondary vtable for QDateEdit</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>-16</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QDateEdit</primary></indexterm>typeinfo for QDateEdit</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QDateEdit::~QDateEdit()</primary></indexterm>non-virtual thunk to QDateEdit::~QDateEdit()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QDateEdit::~QDateEdit()</primary></indexterm>non-virtual thunk to QDateEdit::~QDateEdit()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::devType() const</primary></indexterm>non-virtual thunk to QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::paintEngine() const</primary></indexterm>non-virtual thunk to QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QDateEdit  class
is described by <XREF LINKEND="rtti-38870">
</PARA>
<!--classdata-->
<TABLE ID="rtti-38870">
<TITLE>typeinfo for QDateEdit</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QDateEdit</primary></indexterm>typeinfo name for QDateEdit</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QDateTimeEdit</primary></indexterm>typeinfo for QDateTimeEdit</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QLabel</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QLabel class
is described by <XREF LINKEND="cls-39053-0">
</PARA>
<!--classdata-->
<TABLE id="cls-39053-0">
<TITLE>Primary vtable for QLabel</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QLabel</primary></indexterm>typeinfo for QLabel</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLabel::metaObject() const</primary></indexterm>QLabel::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLabel::qt_metacast(char const*)</primary></indexterm>QLabel::qt_metacast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLabel::qt_metacall(QMetaObject::Call, int, void**)</primary></indexterm>QLabel::qt_metacall(QMetaObject::Call, int, void**)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLabel::~QLabel()</primary></indexterm>QLabel::~QLabel()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLabel::~QLabel()</primary></indexterm>QLabel::~QLabel()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLabel::event(QEvent*)</primary></indexterm>QLabel::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::eventFilter(QObject*, QEvent*)</primary></indexterm>QObject::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QEvent*)</primary></indexterm>QObject::customEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::devType() const</primary></indexterm>QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setVisible(bool)</primary></indexterm>QWidget::setVisible(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLabel::sizeHint() const</primary></indexterm>QLabel::sizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLabel::minimumSizeHint() const</primary></indexterm>QLabel::minimumSizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLabel::heightForWidth(int) const</primary></indexterm>QLabel::heightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paintEngine() const</primary></indexterm>QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mousePressEvent(QMouseEvent*)</primary></indexterm>QWidget::mousePressEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseReleaseEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseReleaseEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseDoubleClickEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseDoubleClickEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseMoveEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseMoveEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::wheelEvent(QWheelEvent*)</primary></indexterm>QWidget::wheelEvent(QWheelEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyPressEvent(QKeyEvent*)</primary></indexterm>QWidget::keyPressEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyReleaseEvent(QKeyEvent*)</primary></indexterm>QWidget::keyReleaseEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusInEvent(QFocusEvent*)</primary></indexterm>QWidget::focusInEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusOutEvent(QFocusEvent*)</primary></indexterm>QWidget::focusOutEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enterEvent(QEvent*)</primary></indexterm>QWidget::enterEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::leaveEvent(QEvent*)</primary></indexterm>QWidget::leaveEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLabel::paintEvent(QPaintEvent*)</primary></indexterm>QLabel::paintEvent(QPaintEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::moveEvent(QMoveEvent*)</primary></indexterm>QWidget::moveEvent(QMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::resizeEvent(QResizeEvent*)</primary></indexterm>QWidget::resizeEvent(QResizeEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::closeEvent(QCloseEvent*)</primary></indexterm>QWidget::closeEvent(QCloseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;33&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::contextMenuEvent(QContextMenuEvent*)</primary></indexterm>QWidget::contextMenuEvent(QContextMenuEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;34&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::tabletEvent(QTabletEvent*)</primary></indexterm>QWidget::tabletEvent(QTabletEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;35&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::actionEvent(QActionEvent*)</primary></indexterm>QWidget::actionEvent(QActionEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;36&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragEnterEvent(QDragEnterEvent*)</primary></indexterm>QWidget::dragEnterEvent(QDragEnterEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;37&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragMoveEvent(QDragMoveEvent*)</primary></indexterm>QWidget::dragMoveEvent(QDragMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;38&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragLeaveEvent(QDragLeaveEvent*)</primary></indexterm>QWidget::dragLeaveEvent(QDragLeaveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;39&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dropEvent(QDropEvent*)</primary></indexterm>QWidget::dropEvent(QDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;40&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showEvent(QShowEvent*)</primary></indexterm>QWidget::showEvent(QShowEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;41&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::hideEvent(QHideEvent*)</primary></indexterm>QWidget::hideEvent(QHideEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;42&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::x11Event(_XEvent*)</primary></indexterm>QWidget::x11Event(_XEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;43&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLabel::changeEvent(QEvent*)</primary></indexterm>QLabel::changeEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;44&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;45&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::inputMethodEvent(QInputMethodEvent*)</primary></indexterm>QWidget::inputMethodEvent(QInputMethodEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;46&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::inputMethodQuery(Qt::InputMethodQuery) const</primary></indexterm>QWidget::inputMethodQuery(Qt::InputMethodQuery) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;47&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusNextPrevChild(bool)</primary></indexterm>QWidget::focusNextPrevChild(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;48&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::styleChange(QStyle&)</primary></indexterm>QWidget::styleChange(QStyle&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;49&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enabledChange(bool)</primary></indexterm>QWidget::enabledChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;50&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paletteChange(QPalette const&)</primary></indexterm>QWidget::paletteChange(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;51&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::fontChange(QFont const&)</primary></indexterm>QWidget::fontChange(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;52&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::windowActivationChange(bool)</primary></indexterm>QWidget::windowActivationChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;53&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::languageChange()</primary></indexterm>QWidget::languageChange()</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--classdata-->
<TABLE id="cls-39053-1">
<TITLE>Secondary vtable for QLabel</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>-16</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QLabel</primary></indexterm>typeinfo for QLabel</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QLabel::~QLabel()</primary></indexterm>non-virtual thunk to QLabel::~QLabel()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QLabel::~QLabel()</primary></indexterm>non-virtual thunk to QLabel::~QLabel()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::devType() const</primary></indexterm>non-virtual thunk to QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::paintEngine() const</primary></indexterm>non-virtual thunk to QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QLabel  class
is described by <XREF LINKEND="rtti-38848">
</PARA>
<!--classdata-->
<TABLE ID="rtti-38848">
<TITLE>typeinfo for QLabel</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QLabel</primary></indexterm>typeinfo name for QLabel</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QFrame</primary></indexterm>typeinfo for QFrame</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QDockWidget</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QDockWidget class
is described by <XREF LINKEND="cls-38902-0">
</PARA>
<!--classdata-->
<TABLE id="cls-38902-0">
<TITLE>Primary vtable for QDockWidget</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QDockWidget</primary></indexterm>typeinfo for QDockWidget</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDockWidget::metaObject() const</primary></indexterm>QDockWidget::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDockWidget::qt_metacast(char const*)</primary></indexterm>QDockWidget::qt_metacast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDockWidget::qt_metacall(QMetaObject::Call, int, void**)</primary></indexterm>QDockWidget::qt_metacall(QMetaObject::Call, int, void**)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDockWidget::~QDockWidget()</primary></indexterm>QDockWidget::~QDockWidget()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDockWidget::~QDockWidget()</primary></indexterm>QDockWidget::~QDockWidget()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDockWidget::event(QEvent*)</primary></indexterm>QDockWidget::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::eventFilter(QObject*, QEvent*)</primary></indexterm>QObject::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QEvent*)</primary></indexterm>QObject::customEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::devType() const</primary></indexterm>QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setVisible(bool)</primary></indexterm>QWidget::setVisible(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::sizeHint() const</primary></indexterm>QWidget::sizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::minimumSizeHint() const</primary></indexterm>QWidget::minimumSizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::heightForWidth(int) const</primary></indexterm>QWidget::heightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paintEngine() const</primary></indexterm>QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mousePressEvent(QMouseEvent*)</primary></indexterm>QWidget::mousePressEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseReleaseEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseReleaseEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseDoubleClickEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseDoubleClickEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseMoveEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseMoveEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::wheelEvent(QWheelEvent*)</primary></indexterm>QWidget::wheelEvent(QWheelEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyPressEvent(QKeyEvent*)</primary></indexterm>QWidget::keyPressEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyReleaseEvent(QKeyEvent*)</primary></indexterm>QWidget::keyReleaseEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusInEvent(QFocusEvent*)</primary></indexterm>QWidget::focusInEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusOutEvent(QFocusEvent*)</primary></indexterm>QWidget::focusOutEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enterEvent(QEvent*)</primary></indexterm>QWidget::enterEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::leaveEvent(QEvent*)</primary></indexterm>QWidget::leaveEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDockWidget::paintEvent(QPaintEvent*)</primary></indexterm>QDockWidget::paintEvent(QPaintEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::moveEvent(QMoveEvent*)</primary></indexterm>QWidget::moveEvent(QMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::resizeEvent(QResizeEvent*)</primary></indexterm>QWidget::resizeEvent(QResizeEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDockWidget::closeEvent(QCloseEvent*)</primary></indexterm>QDockWidget::closeEvent(QCloseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;33&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::contextMenuEvent(QContextMenuEvent*)</primary></indexterm>QWidget::contextMenuEvent(QContextMenuEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;34&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::tabletEvent(QTabletEvent*)</primary></indexterm>QWidget::tabletEvent(QTabletEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;35&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::actionEvent(QActionEvent*)</primary></indexterm>QWidget::actionEvent(QActionEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;36&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragEnterEvent(QDragEnterEvent*)</primary></indexterm>QWidget::dragEnterEvent(QDragEnterEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;37&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragMoveEvent(QDragMoveEvent*)</primary></indexterm>QWidget::dragMoveEvent(QDragMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;38&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragLeaveEvent(QDragLeaveEvent*)</primary></indexterm>QWidget::dragLeaveEvent(QDragLeaveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;39&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dropEvent(QDropEvent*)</primary></indexterm>QWidget::dropEvent(QDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;40&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showEvent(QShowEvent*)</primary></indexterm>QWidget::showEvent(QShowEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;41&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::hideEvent(QHideEvent*)</primary></indexterm>QWidget::hideEvent(QHideEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;42&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::x11Event(_XEvent*)</primary></indexterm>QWidget::x11Event(_XEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;43&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDockWidget::changeEvent(QEvent*)</primary></indexterm>QDockWidget::changeEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;44&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;45&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::inputMethodEvent(QInputMethodEvent*)</primary></indexterm>QWidget::inputMethodEvent(QInputMethodEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;46&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::inputMethodQuery(Qt::InputMethodQuery) const</primary></indexterm>QWidget::inputMethodQuery(Qt::InputMethodQuery) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;47&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusNextPrevChild(bool)</primary></indexterm>QWidget::focusNextPrevChild(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;48&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::styleChange(QStyle&)</primary></indexterm>QWidget::styleChange(QStyle&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;49&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enabledChange(bool)</primary></indexterm>QWidget::enabledChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;50&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paletteChange(QPalette const&)</primary></indexterm>QWidget::paletteChange(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;51&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::fontChange(QFont const&)</primary></indexterm>QWidget::fontChange(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;52&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::windowActivationChange(bool)</primary></indexterm>QWidget::windowActivationChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;53&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::languageChange()</primary></indexterm>QWidget::languageChange()</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--classdata-->
<TABLE id="cls-38902-1">
<TITLE>Secondary vtable for QDockWidget</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>-16</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QDockWidget</primary></indexterm>typeinfo for QDockWidget</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QDockWidget::~QDockWidget()</primary></indexterm>non-virtual thunk to QDockWidget::~QDockWidget()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QDockWidget::~QDockWidget()</primary></indexterm>non-virtual thunk to QDockWidget::~QDockWidget()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::devType() const</primary></indexterm>non-virtual thunk to QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::paintEngine() const</primary></indexterm>non-virtual thunk to QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QDockWidget  class
is described by <XREF LINKEND="rtti-38697">
</PARA>
<!--classdata-->
<TABLE ID="rtti-38697">
<TITLE>typeinfo for QDockWidget</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QDockWidget</primary></indexterm>typeinfo name for QDockWidget</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QWidget</primary></indexterm>typeinfo for QWidget</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QGroupBox</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QGroupBox class
is described by <XREF LINKEND="cls-39077-0">
</PARA>
<!--classdata-->
<TABLE id="cls-39077-0">
<TITLE>Primary vtable for QGroupBox</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QGroupBox</primary></indexterm>typeinfo for QGroupBox</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGroupBox::metaObject() const</primary></indexterm>QGroupBox::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGroupBox::qt_metacast(char const*)</primary></indexterm>QGroupBox::qt_metacast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGroupBox::qt_metacall(QMetaObject::Call, int, void**)</primary></indexterm>QGroupBox::qt_metacall(QMetaObject::Call, int, void**)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGroupBox::~QGroupBox()</primary></indexterm>QGroupBox::~QGroupBox()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGroupBox::~QGroupBox()</primary></indexterm>QGroupBox::~QGroupBox()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGroupBox::event(QEvent*)</primary></indexterm>QGroupBox::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::eventFilter(QObject*, QEvent*)</primary></indexterm>QObject::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGroupBox::childEvent(QChildEvent*)</primary></indexterm>QGroupBox::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QEvent*)</primary></indexterm>QObject::customEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::devType() const</primary></indexterm>QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setVisible(bool)</primary></indexterm>QWidget::setVisible(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::sizeHint() const</primary></indexterm>QWidget::sizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGroupBox::minimumSizeHint() const</primary></indexterm>QGroupBox::minimumSizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::heightForWidth(int) const</primary></indexterm>QWidget::heightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paintEngine() const</primary></indexterm>QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGroupBox::mousePressEvent(QMouseEvent*)</primary></indexterm>QGroupBox::mousePressEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGroupBox::mouseReleaseEvent(QMouseEvent*)</primary></indexterm>QGroupBox::mouseReleaseEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseDoubleClickEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseDoubleClickEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGroupBox::mouseMoveEvent(QMouseEvent*)</primary></indexterm>QGroupBox::mouseMoveEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::wheelEvent(QWheelEvent*)</primary></indexterm>QWidget::wheelEvent(QWheelEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyPressEvent(QKeyEvent*)</primary></indexterm>QWidget::keyPressEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyReleaseEvent(QKeyEvent*)</primary></indexterm>QWidget::keyReleaseEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGroupBox::focusInEvent(QFocusEvent*)</primary></indexterm>QGroupBox::focusInEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusOutEvent(QFocusEvent*)</primary></indexterm>QWidget::focusOutEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enterEvent(QEvent*)</primary></indexterm>QWidget::enterEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::leaveEvent(QEvent*)</primary></indexterm>QWidget::leaveEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGroupBox::paintEvent(QPaintEvent*)</primary></indexterm>QGroupBox::paintEvent(QPaintEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::moveEvent(QMoveEvent*)</primary></indexterm>QWidget::moveEvent(QMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGroupBox::resizeEvent(QResizeEvent*)</primary></indexterm>QGroupBox::resizeEvent(QResizeEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::closeEvent(QCloseEvent*)</primary></indexterm>QWidget::closeEvent(QCloseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;33&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::contextMenuEvent(QContextMenuEvent*)</primary></indexterm>QWidget::contextMenuEvent(QContextMenuEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;34&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::tabletEvent(QTabletEvent*)</primary></indexterm>QWidget::tabletEvent(QTabletEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;35&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::actionEvent(QActionEvent*)</primary></indexterm>QWidget::actionEvent(QActionEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;36&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragEnterEvent(QDragEnterEvent*)</primary></indexterm>QWidget::dragEnterEvent(QDragEnterEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;37&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragMoveEvent(QDragMoveEvent*)</primary></indexterm>QWidget::dragMoveEvent(QDragMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;38&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragLeaveEvent(QDragLeaveEvent*)</primary></indexterm>QWidget::dragLeaveEvent(QDragLeaveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;39&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dropEvent(QDropEvent*)</primary></indexterm>QWidget::dropEvent(QDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;40&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showEvent(QShowEvent*)</primary></indexterm>QWidget::showEvent(QShowEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;41&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::hideEvent(QHideEvent*)</primary></indexterm>QWidget::hideEvent(QHideEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;42&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::x11Event(_XEvent*)</primary></indexterm>QWidget::x11Event(_XEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;43&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGroupBox::changeEvent(QEvent*)</primary></indexterm>QGroupBox::changeEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;44&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;45&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::inputMethodEvent(QInputMethodEvent*)</primary></indexterm>QWidget::inputMethodEvent(QInputMethodEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;46&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::inputMethodQuery(Qt::InputMethodQuery) const</primary></indexterm>QWidget::inputMethodQuery(Qt::InputMethodQuery) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;47&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusNextPrevChild(bool)</primary></indexterm>QWidget::focusNextPrevChild(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;48&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::styleChange(QStyle&)</primary></indexterm>QWidget::styleChange(QStyle&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;49&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enabledChange(bool)</primary></indexterm>QWidget::enabledChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;50&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paletteChange(QPalette const&)</primary></indexterm>QWidget::paletteChange(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;51&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::fontChange(QFont const&)</primary></indexterm>QWidget::fontChange(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;52&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::windowActivationChange(bool)</primary></indexterm>QWidget::windowActivationChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;53&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::languageChange()</primary></indexterm>QWidget::languageChange()</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--classdata-->
<TABLE id="cls-39077-1">
<TITLE>Secondary vtable for QGroupBox</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>-16</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QGroupBox</primary></indexterm>typeinfo for QGroupBox</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QGroupBox::~QGroupBox()</primary></indexterm>non-virtual thunk to QGroupBox::~QGroupBox()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QGroupBox::~QGroupBox()</primary></indexterm>non-virtual thunk to QGroupBox::~QGroupBox()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::devType() const</primary></indexterm>non-virtual thunk to QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::paintEngine() const</primary></indexterm>non-virtual thunk to QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QGroupBox  class
is described by <XREF LINKEND="rtti-38872">
</PARA>
<!--classdata-->
<TABLE ID="rtti-38872">
<TITLE>typeinfo for QGroupBox</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QGroupBox</primary></indexterm>typeinfo name for QGroupBox</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QWidget</primary></indexterm>typeinfo for QWidget</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QMainWindow</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QMainWindow class
is described by <XREF LINKEND="cls-38915-0">
</PARA>
<!--classdata-->
<TABLE id="cls-38915-0">
<TITLE>Primary vtable for QMainWindow</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QMainWindow</primary></indexterm>typeinfo for QMainWindow</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMainWindow::metaObject() const</primary></indexterm>QMainWindow::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMainWindow::qt_metacast(char const*)</primary></indexterm>QMainWindow::qt_metacast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMainWindow::qt_metacall(QMetaObject::Call, int, void**)</primary></indexterm>QMainWindow::qt_metacall(QMetaObject::Call, int, void**)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMainWindow::~QMainWindow()</primary></indexterm>QMainWindow::~QMainWindow()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMainWindow::~QMainWindow()</primary></indexterm>QMainWindow::~QMainWindow()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMainWindow::event(QEvent*)</primary></indexterm>QMainWindow::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::eventFilter(QObject*, QEvent*)</primary></indexterm>QObject::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QEvent*)</primary></indexterm>QObject::customEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::devType() const</primary></indexterm>QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setVisible(bool)</primary></indexterm>QWidget::setVisible(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::sizeHint() const</primary></indexterm>QWidget::sizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::minimumSizeHint() const</primary></indexterm>QWidget::minimumSizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::heightForWidth(int) const</primary></indexterm>QWidget::heightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paintEngine() const</primary></indexterm>QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mousePressEvent(QMouseEvent*)</primary></indexterm>QWidget::mousePressEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseReleaseEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseReleaseEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseDoubleClickEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseDoubleClickEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseMoveEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseMoveEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::wheelEvent(QWheelEvent*)</primary></indexterm>QWidget::wheelEvent(QWheelEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyPressEvent(QKeyEvent*)</primary></indexterm>QWidget::keyPressEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyReleaseEvent(QKeyEvent*)</primary></indexterm>QWidget::keyReleaseEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusInEvent(QFocusEvent*)</primary></indexterm>QWidget::focusInEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusOutEvent(QFocusEvent*)</primary></indexterm>QWidget::focusOutEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enterEvent(QEvent*)</primary></indexterm>QWidget::enterEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::leaveEvent(QEvent*)</primary></indexterm>QWidget::leaveEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paintEvent(QPaintEvent*)</primary></indexterm>QWidget::paintEvent(QPaintEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::moveEvent(QMoveEvent*)</primary></indexterm>QWidget::moveEvent(QMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::resizeEvent(QResizeEvent*)</primary></indexterm>QWidget::resizeEvent(QResizeEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::closeEvent(QCloseEvent*)</primary></indexterm>QWidget::closeEvent(QCloseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;33&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMainWindow::contextMenuEvent(QContextMenuEvent*)</primary></indexterm>QMainWindow::contextMenuEvent(QContextMenuEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;34&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::tabletEvent(QTabletEvent*)</primary></indexterm>QWidget::tabletEvent(QTabletEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;35&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::actionEvent(QActionEvent*)</primary></indexterm>QWidget::actionEvent(QActionEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;36&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragEnterEvent(QDragEnterEvent*)</primary></indexterm>QWidget::dragEnterEvent(QDragEnterEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;37&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragMoveEvent(QDragMoveEvent*)</primary></indexterm>QWidget::dragMoveEvent(QDragMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;38&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragLeaveEvent(QDragLeaveEvent*)</primary></indexterm>QWidget::dragLeaveEvent(QDragLeaveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;39&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dropEvent(QDropEvent*)</primary></indexterm>QWidget::dropEvent(QDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;40&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showEvent(QShowEvent*)</primary></indexterm>QWidget::showEvent(QShowEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;41&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::hideEvent(QHideEvent*)</primary></indexterm>QWidget::hideEvent(QHideEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;42&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::x11Event(_XEvent*)</primary></indexterm>QWidget::x11Event(_XEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;43&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::changeEvent(QEvent*)</primary></indexterm>QWidget::changeEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;44&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;45&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::inputMethodEvent(QInputMethodEvent*)</primary></indexterm>QWidget::inputMethodEvent(QInputMethodEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;46&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::inputMethodQuery(Qt::InputMethodQuery) const</primary></indexterm>QWidget::inputMethodQuery(Qt::InputMethodQuery) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;47&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusNextPrevChild(bool)</primary></indexterm>QWidget::focusNextPrevChild(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;48&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::styleChange(QStyle&)</primary></indexterm>QWidget::styleChange(QStyle&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;49&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enabledChange(bool)</primary></indexterm>QWidget::enabledChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;50&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paletteChange(QPalette const&)</primary></indexterm>QWidget::paletteChange(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;51&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::fontChange(QFont const&)</primary></indexterm>QWidget::fontChange(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;52&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::windowActivationChange(bool)</primary></indexterm>QWidget::windowActivationChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;53&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::languageChange()</primary></indexterm>QWidget::languageChange()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;54&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMainWindow::createPopupMenu()</primary></indexterm>QMainWindow::createPopupMenu()</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--classdata-->
<TABLE id="cls-38915-1">
<TITLE>Secondary vtable for QMainWindow</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>-16</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QMainWindow</primary></indexterm>typeinfo for QMainWindow</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QMainWindow::~QMainWindow()</primary></indexterm>non-virtual thunk to QMainWindow::~QMainWindow()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QMainWindow::~QMainWindow()</primary></indexterm>non-virtual thunk to QMainWindow::~QMainWindow()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::devType() const</primary></indexterm>non-virtual thunk to QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::paintEngine() const</primary></indexterm>non-virtual thunk to QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QMainWindow  class
is described by <XREF LINKEND="rtti-38710">
</PARA>
<!--classdata-->
<TABLE ID="rtti-38710">
<TITLE>typeinfo for QMainWindow</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QMainWindow</primary></indexterm>typeinfo name for QMainWindow</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QWidget</primary></indexterm>typeinfo for QWidget</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QTextEdit</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QTextEdit class
is described by <XREF LINKEND="cls-39085-0">
</PARA>
<!--classdata-->
<TABLE id="cls-39085-0">
<TITLE>Primary vtable for QTextEdit</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QTextEdit</primary></indexterm>typeinfo for QTextEdit</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::metaObject() const</primary></indexterm>QTextEdit::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::qt_metacast(char const*)</primary></indexterm>QTextEdit::qt_metacast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::qt_metacall(QMetaObject::Call, int, void**)</primary></indexterm>QTextEdit::qt_metacall(QMetaObject::Call, int, void**)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::~QTextEdit()</primary></indexterm>QTextEdit::~QTextEdit()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::~QTextEdit()</primary></indexterm>QTextEdit::~QTextEdit()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::event(QEvent*)</primary></indexterm>QTextEdit::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::eventFilter(QObject*, QEvent*)</primary></indexterm>QObject::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::timerEvent(QTimerEvent*)</primary></indexterm>QTextEdit::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QEvent*)</primary></indexterm>QObject::customEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::devType() const</primary></indexterm>QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setVisible(bool)</primary></indexterm>QWidget::setVisible(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractScrollArea::sizeHint() const</primary></indexterm>QAbstractScrollArea::sizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractScrollArea::minimumSizeHint() const</primary></indexterm>QAbstractScrollArea::minimumSizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::heightForWidth(int) const</primary></indexterm>QWidget::heightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paintEngine() const</primary></indexterm>QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::mousePressEvent(QMouseEvent*)</primary></indexterm>QTextEdit::mousePressEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::mouseReleaseEvent(QMouseEvent*)</primary></indexterm>QTextEdit::mouseReleaseEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::mouseDoubleClickEvent(QMouseEvent*)</primary></indexterm>QTextEdit::mouseDoubleClickEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::mouseMoveEvent(QMouseEvent*)</primary></indexterm>QTextEdit::mouseMoveEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::wheelEvent(QWheelEvent*)</primary></indexterm>QTextEdit::wheelEvent(QWheelEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::keyPressEvent(QKeyEvent*)</primary></indexterm>QTextEdit::keyPressEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyReleaseEvent(QKeyEvent*)</primary></indexterm>QWidget::keyReleaseEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::focusInEvent(QFocusEvent*)</primary></indexterm>QTextEdit::focusInEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::focusOutEvent(QFocusEvent*)</primary></indexterm>QTextEdit::focusOutEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enterEvent(QEvent*)</primary></indexterm>QWidget::enterEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::leaveEvent(QEvent*)</primary></indexterm>QWidget::leaveEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::paintEvent(QPaintEvent*)</primary></indexterm>QTextEdit::paintEvent(QPaintEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::moveEvent(QMoveEvent*)</primary></indexterm>QWidget::moveEvent(QMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::resizeEvent(QResizeEvent*)</primary></indexterm>QTextEdit::resizeEvent(QResizeEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::closeEvent(QCloseEvent*)</primary></indexterm>QWidget::closeEvent(QCloseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;33&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::contextMenuEvent(QContextMenuEvent*)</primary></indexterm>QTextEdit::contextMenuEvent(QContextMenuEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;34&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::tabletEvent(QTabletEvent*)</primary></indexterm>QWidget::tabletEvent(QTabletEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;35&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::actionEvent(QActionEvent*)</primary></indexterm>QWidget::actionEvent(QActionEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;36&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::dragEnterEvent(QDragEnterEvent*)</primary></indexterm>QTextEdit::dragEnterEvent(QDragEnterEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;37&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::dragMoveEvent(QDragMoveEvent*)</primary></indexterm>QTextEdit::dragMoveEvent(QDragMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;38&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::dragLeaveEvent(QDragLeaveEvent*)</primary></indexterm>QTextEdit::dragLeaveEvent(QDragLeaveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;39&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::dropEvent(QDropEvent*)</primary></indexterm>QTextEdit::dropEvent(QDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;40&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::showEvent(QShowEvent*)</primary></indexterm>QTextEdit::showEvent(QShowEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;41&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::hideEvent(QHideEvent*)</primary></indexterm>QWidget::hideEvent(QHideEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;42&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::x11Event(_XEvent*)</primary></indexterm>QWidget::x11Event(_XEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;43&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::changeEvent(QEvent*)</primary></indexterm>QTextEdit::changeEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;44&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;45&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::inputMethodEvent(QInputMethodEvent*)</primary></indexterm>QTextEdit::inputMethodEvent(QInputMethodEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;46&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::inputMethodQuery(Qt::InputMethodQuery) const</primary></indexterm>QTextEdit::inputMethodQuery(Qt::InputMethodQuery) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;47&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::focusNextPrevChild(bool)</primary></indexterm>QTextEdit::focusNextPrevChild(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;48&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::styleChange(QStyle&)</primary></indexterm>QWidget::styleChange(QStyle&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;49&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enabledChange(bool)</primary></indexterm>QWidget::enabledChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;50&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paletteChange(QPalette const&)</primary></indexterm>QWidget::paletteChange(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;51&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::fontChange(QFont const&)</primary></indexterm>QWidget::fontChange(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;52&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::windowActivationChange(bool)</primary></indexterm>QWidget::windowActivationChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;53&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::languageChange()</primary></indexterm>QWidget::languageChange()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;54&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractScrollArea::viewportEvent(QEvent*)</primary></indexterm>QAbstractScrollArea::viewportEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;55&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::scrollContentsBy(int, int)</primary></indexterm>QTextEdit::scrollContentsBy(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;56&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::loadResource(int, QUrl const&)</primary></indexterm>QTextEdit::loadResource(int, QUrl const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;57&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::createMimeDataFromSelection() const</primary></indexterm>QTextEdit::createMimeDataFromSelection() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;58&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::canInsertFromMimeData(QMimeData const*) const</primary></indexterm>QTextEdit::canInsertFromMimeData(QMimeData const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;59&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::insertFromMimeData(QMimeData const*)</primary></indexterm>QTextEdit::insertFromMimeData(QMimeData const*)</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--classdata-->
<TABLE id="cls-39085-1">
<TITLE>Secondary vtable for QTextEdit</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>-16</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QTextEdit</primary></indexterm>typeinfo for QTextEdit</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QTextEdit::~QTextEdit()</primary></indexterm>non-virtual thunk to QTextEdit::~QTextEdit()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QTextEdit::~QTextEdit()</primary></indexterm>non-virtual thunk to QTextEdit::~QTextEdit()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::devType() const</primary></indexterm>non-virtual thunk to QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::paintEngine() const</primary></indexterm>non-virtual thunk to QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QTextEdit  class
is described by <XREF LINKEND="rtti-38880">
</PARA>
<!--classdata-->
<TABLE ID="rtti-38880">
<TITLE>typeinfo for QTextEdit</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QTextEdit</primary></indexterm>typeinfo name for QTextEdit</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QAbstractScrollArea</primary></indexterm>typeinfo for QAbstractScrollArea</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QProgressBar</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QProgressBar class
is described by <XREF LINKEND="cls-38950-0">
</PARA>
<!--classdata-->
<TABLE id="cls-38950-0">
<TITLE>Primary vtable for QProgressBar</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QProgressBar</primary></indexterm>typeinfo for QProgressBar</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QProgressBar::metaObject() const</primary></indexterm>QProgressBar::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QProgressBar::qt_metacast(char const*)</primary></indexterm>QProgressBar::qt_metacast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QProgressBar::qt_metacall(QMetaObject::Call, int, void**)</primary></indexterm>QProgressBar::qt_metacall(QMetaObject::Call, int, void**)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QProgressBar::~QProgressBar()</primary></indexterm>QProgressBar::~QProgressBar()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QProgressBar::~QProgressBar()</primary></indexterm>QProgressBar::~QProgressBar()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QProgressBar::event(QEvent*)</primary></indexterm>QProgressBar::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::eventFilter(QObject*, QEvent*)</primary></indexterm>QObject::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QEvent*)</primary></indexterm>QObject::customEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::devType() const</primary></indexterm>QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setVisible(bool)</primary></indexterm>QWidget::setVisible(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QProgressBar::sizeHint() const</primary></indexterm>QProgressBar::sizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QProgressBar::minimumSizeHint() const</primary></indexterm>QProgressBar::minimumSizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::heightForWidth(int) const</primary></indexterm>QWidget::heightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paintEngine() const</primary></indexterm>QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mousePressEvent(QMouseEvent*)</primary></indexterm>QWidget::mousePressEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseReleaseEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseReleaseEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseDoubleClickEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseDoubleClickEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseMoveEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseMoveEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::wheelEvent(QWheelEvent*)</primary></indexterm>QWidget::wheelEvent(QWheelEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyPressEvent(QKeyEvent*)</primary></indexterm>QWidget::keyPressEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyReleaseEvent(QKeyEvent*)</primary></indexterm>QWidget::keyReleaseEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusInEvent(QFocusEvent*)</primary></indexterm>QWidget::focusInEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusOutEvent(QFocusEvent*)</primary></indexterm>QWidget::focusOutEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enterEvent(QEvent*)</primary></indexterm>QWidget::enterEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::leaveEvent(QEvent*)</primary></indexterm>QWidget::leaveEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QProgressBar::paintEvent(QPaintEvent*)</primary></indexterm>QProgressBar::paintEvent(QPaintEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::moveEvent(QMoveEvent*)</primary></indexterm>QWidget::moveEvent(QMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::resizeEvent(QResizeEvent*)</primary></indexterm>QWidget::resizeEvent(QResizeEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::closeEvent(QCloseEvent*)</primary></indexterm>QWidget::closeEvent(QCloseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;33&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::contextMenuEvent(QContextMenuEvent*)</primary></indexterm>QWidget::contextMenuEvent(QContextMenuEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;34&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::tabletEvent(QTabletEvent*)</primary></indexterm>QWidget::tabletEvent(QTabletEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;35&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::actionEvent(QActionEvent*)</primary></indexterm>QWidget::actionEvent(QActionEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;36&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragEnterEvent(QDragEnterEvent*)</primary></indexterm>QWidget::dragEnterEvent(QDragEnterEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;37&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragMoveEvent(QDragMoveEvent*)</primary></indexterm>QWidget::dragMoveEvent(QDragMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;38&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragLeaveEvent(QDragLeaveEvent*)</primary></indexterm>QWidget::dragLeaveEvent(QDragLeaveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;39&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dropEvent(QDropEvent*)</primary></indexterm>QWidget::dropEvent(QDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;40&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showEvent(QShowEvent*)</primary></indexterm>QWidget::showEvent(QShowEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;41&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::hideEvent(QHideEvent*)</primary></indexterm>QWidget::hideEvent(QHideEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;42&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::x11Event(_XEvent*)</primary></indexterm>QWidget::x11Event(_XEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;43&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::changeEvent(QEvent*)</primary></indexterm>QWidget::changeEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;44&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;45&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::inputMethodEvent(QInputMethodEvent*)</primary></indexterm>QWidget::inputMethodEvent(QInputMethodEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;46&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::inputMethodQuery(Qt::InputMethodQuery) const</primary></indexterm>QWidget::inputMethodQuery(Qt::InputMethodQuery) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;47&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusNextPrevChild(bool)</primary></indexterm>QWidget::focusNextPrevChild(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;48&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::styleChange(QStyle&)</primary></indexterm>QWidget::styleChange(QStyle&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;49&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enabledChange(bool)</primary></indexterm>QWidget::enabledChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;50&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paletteChange(QPalette const&)</primary></indexterm>QWidget::paletteChange(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;51&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::fontChange(QFont const&)</primary></indexterm>QWidget::fontChange(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;52&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::windowActivationChange(bool)</primary></indexterm>QWidget::windowActivationChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;53&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::languageChange()</primary></indexterm>QWidget::languageChange()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;54&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QProgressBar::text() const</primary></indexterm>QProgressBar::text() const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--classdata-->
<TABLE id="cls-38950-1">
<TITLE>Secondary vtable for QProgressBar</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>-16</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QProgressBar</primary></indexterm>typeinfo for QProgressBar</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QProgressBar::~QProgressBar()</primary></indexterm>non-virtual thunk to QProgressBar::~QProgressBar()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QProgressBar::~QProgressBar()</primary></indexterm>non-virtual thunk to QProgressBar::~QProgressBar()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::devType() const</primary></indexterm>non-virtual thunk to QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::paintEngine() const</primary></indexterm>non-virtual thunk to QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QProgressBar  class
is described by <XREF LINKEND="rtti-38745">
</PARA>
<!--classdata-->
<TABLE ID="rtti-38745">
<TITLE>typeinfo for QProgressBar</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QProgressBar</primary></indexterm>typeinfo name for QProgressBar</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QWidget</primary></indexterm>typeinfo for QWidget</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QScrollBar</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QScrollBar class
is described by <XREF LINKEND="cls-38891-0">
</PARA>
<!--classdata-->
<TABLE id="cls-38891-0">
<TITLE>Primary vtable for QScrollBar</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QScrollBar</primary></indexterm>typeinfo for QScrollBar</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollBar::metaObject() const</primary></indexterm>QScrollBar::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollBar::qt_metacast(char const*)</primary></indexterm>QScrollBar::qt_metacast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollBar::qt_metacall(QMetaObject::Call, int, void**)</primary></indexterm>QScrollBar::qt_metacall(QMetaObject::Call, int, void**)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollBar::~QScrollBar()</primary></indexterm>QScrollBar::~QScrollBar()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollBar::~QScrollBar()</primary></indexterm>QScrollBar::~QScrollBar()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollBar::event(QEvent*)</primary></indexterm>QScrollBar::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::eventFilter(QObject*, QEvent*)</primary></indexterm>QObject::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSlider::timerEvent(QTimerEvent*)</primary></indexterm>QAbstractSlider::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QEvent*)</primary></indexterm>QObject::customEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::devType() const</primary></indexterm>QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setVisible(bool)</primary></indexterm>QWidget::setVisible(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollBar::sizeHint() const</primary></indexterm>QScrollBar::sizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::minimumSizeHint() const</primary></indexterm>QWidget::minimumSizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::heightForWidth(int) const</primary></indexterm>QWidget::heightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paintEngine() const</primary></indexterm>QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollBar::mousePressEvent(QMouseEvent*)</primary></indexterm>QScrollBar::mousePressEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollBar::mouseReleaseEvent(QMouseEvent*)</primary></indexterm>QScrollBar::mouseReleaseEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseDoubleClickEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseDoubleClickEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollBar::mouseMoveEvent(QMouseEvent*)</primary></indexterm>QScrollBar::mouseMoveEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSlider::wheelEvent(QWheelEvent*)</primary></indexterm>QAbstractSlider::wheelEvent(QWheelEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSlider::keyPressEvent(QKeyEvent*)</primary></indexterm>QAbstractSlider::keyPressEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyReleaseEvent(QKeyEvent*)</primary></indexterm>QWidget::keyReleaseEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusInEvent(QFocusEvent*)</primary></indexterm>QWidget::focusInEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusOutEvent(QFocusEvent*)</primary></indexterm>QWidget::focusOutEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enterEvent(QEvent*)</primary></indexterm>QWidget::enterEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::leaveEvent(QEvent*)</primary></indexterm>QWidget::leaveEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollBar::paintEvent(QPaintEvent*)</primary></indexterm>QScrollBar::paintEvent(QPaintEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::moveEvent(QMoveEvent*)</primary></indexterm>QWidget::moveEvent(QMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::resizeEvent(QResizeEvent*)</primary></indexterm>QWidget::resizeEvent(QResizeEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::closeEvent(QCloseEvent*)</primary></indexterm>QWidget::closeEvent(QCloseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;33&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollBar::contextMenuEvent(QContextMenuEvent*)</primary></indexterm>QScrollBar::contextMenuEvent(QContextMenuEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;34&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::tabletEvent(QTabletEvent*)</primary></indexterm>QWidget::tabletEvent(QTabletEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;35&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::actionEvent(QActionEvent*)</primary></indexterm>QWidget::actionEvent(QActionEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;36&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragEnterEvent(QDragEnterEvent*)</primary></indexterm>QWidget::dragEnterEvent(QDragEnterEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;37&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragMoveEvent(QDragMoveEvent*)</primary></indexterm>QWidget::dragMoveEvent(QDragMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;38&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragLeaveEvent(QDragLeaveEvent*)</primary></indexterm>QWidget::dragLeaveEvent(QDragLeaveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;39&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dropEvent(QDropEvent*)</primary></indexterm>QWidget::dropEvent(QDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;40&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showEvent(QShowEvent*)</primary></indexterm>QWidget::showEvent(QShowEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;41&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollBar::hideEvent(QHideEvent*)</primary></indexterm>QScrollBar::hideEvent(QHideEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;42&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::x11Event(_XEvent*)</primary></indexterm>QWidget::x11Event(_XEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;43&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSlider::changeEvent(QEvent*)</primary></indexterm>QAbstractSlider::changeEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;44&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;45&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::inputMethodEvent(QInputMethodEvent*)</primary></indexterm>QWidget::inputMethodEvent(QInputMethodEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;46&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::inputMethodQuery(Qt::InputMethodQuery) const</primary></indexterm>QWidget::inputMethodQuery(Qt::InputMethodQuery) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;47&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusNextPrevChild(bool)</primary></indexterm>QWidget::focusNextPrevChild(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;48&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::styleChange(QStyle&)</primary></indexterm>QWidget::styleChange(QStyle&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;49&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enabledChange(bool)</primary></indexterm>QWidget::enabledChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;50&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paletteChange(QPalette const&)</primary></indexterm>QWidget::paletteChange(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;51&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::fontChange(QFont const&)</primary></indexterm>QWidget::fontChange(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;52&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::windowActivationChange(bool)</primary></indexterm>QWidget::windowActivationChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;53&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::languageChange()</primary></indexterm>QWidget::languageChange()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;54&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollBar::sliderChange(QAbstractSlider::SliderChange)</primary></indexterm>QScrollBar::sliderChange(QAbstractSlider::SliderChange)</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--classdata-->
<TABLE id="cls-38891-1">
<TITLE>Secondary vtable for QScrollBar</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>-16</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QScrollBar</primary></indexterm>typeinfo for QScrollBar</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QScrollBar::~QScrollBar()</primary></indexterm>non-virtual thunk to QScrollBar::~QScrollBar()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QScrollBar::~QScrollBar()</primary></indexterm>non-virtual thunk to QScrollBar::~QScrollBar()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::devType() const</primary></indexterm>non-virtual thunk to QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::paintEngine() const</primary></indexterm>non-virtual thunk to QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QScrollBar  class
is described by <XREF LINKEND="rtti-38685">
</PARA>
<!--classdata-->
<TABLE ID="rtti-38685">
<TITLE>typeinfo for QScrollBar</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QScrollBar</primary></indexterm>typeinfo name for QScrollBar</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QAbstractSlider</primary></indexterm>typeinfo for QAbstractSlider</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QSizeGrip</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QSizeGrip class
is described by <XREF LINKEND="cls-39083-0">
</PARA>
<!--classdata-->
<TABLE id="cls-39083-0">
<TITLE>Primary vtable for QSizeGrip</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QSizeGrip</primary></indexterm>typeinfo for QSizeGrip</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSizeGrip::metaObject() const</primary></indexterm>QSizeGrip::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSizeGrip::qt_metacast(char const*)</primary></indexterm>QSizeGrip::qt_metacast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSizeGrip::qt_metacall(QMetaObject::Call, int, void**)</primary></indexterm>QSizeGrip::qt_metacall(QMetaObject::Call, int, void**)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSizeGrip::~QSizeGrip()</primary></indexterm>QSizeGrip::~QSizeGrip()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSizeGrip::~QSizeGrip()</primary></indexterm>QSizeGrip::~QSizeGrip()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSizeGrip::event(QEvent*)</primary></indexterm>QSizeGrip::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSizeGrip::eventFilter(QObject*, QEvent*)</primary></indexterm>QSizeGrip::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QEvent*)</primary></indexterm>QObject::customEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::devType() const</primary></indexterm>QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSizeGrip::setVisible(bool)</primary></indexterm>QSizeGrip::setVisible(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSizeGrip::sizeHint() const</primary></indexterm>QSizeGrip::sizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::minimumSizeHint() const</primary></indexterm>QWidget::minimumSizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::heightForWidth(int) const</primary></indexterm>QWidget::heightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paintEngine() const</primary></indexterm>QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSizeGrip::mousePressEvent(QMouseEvent*)</primary></indexterm>QSizeGrip::mousePressEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseReleaseEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseReleaseEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseDoubleClickEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseDoubleClickEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSizeGrip::mouseMoveEvent(QMouseEvent*)</primary></indexterm>QSizeGrip::mouseMoveEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::wheelEvent(QWheelEvent*)</primary></indexterm>QWidget::wheelEvent(QWheelEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyPressEvent(QKeyEvent*)</primary></indexterm>QWidget::keyPressEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyReleaseEvent(QKeyEvent*)</primary></indexterm>QWidget::keyReleaseEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusInEvent(QFocusEvent*)</primary></indexterm>QWidget::focusInEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusOutEvent(QFocusEvent*)</primary></indexterm>QWidget::focusOutEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enterEvent(QEvent*)</primary></indexterm>QWidget::enterEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::leaveEvent(QEvent*)</primary></indexterm>QWidget::leaveEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSizeGrip::paintEvent(QPaintEvent*)</primary></indexterm>QSizeGrip::paintEvent(QPaintEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::moveEvent(QMoveEvent*)</primary></indexterm>QWidget::moveEvent(QMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::resizeEvent(QResizeEvent*)</primary></indexterm>QWidget::resizeEvent(QResizeEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::closeEvent(QCloseEvent*)</primary></indexterm>QWidget::closeEvent(QCloseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;33&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::contextMenuEvent(QContextMenuEvent*)</primary></indexterm>QWidget::contextMenuEvent(QContextMenuEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;34&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::tabletEvent(QTabletEvent*)</primary></indexterm>QWidget::tabletEvent(QTabletEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;35&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::actionEvent(QActionEvent*)</primary></indexterm>QWidget::actionEvent(QActionEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;36&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragEnterEvent(QDragEnterEvent*)</primary></indexterm>QWidget::dragEnterEvent(QDragEnterEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;37&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragMoveEvent(QDragMoveEvent*)</primary></indexterm>QWidget::dragMoveEvent(QDragMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;38&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragLeaveEvent(QDragLeaveEvent*)</primary></indexterm>QWidget::dragLeaveEvent(QDragLeaveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;39&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dropEvent(QDropEvent*)</primary></indexterm>QWidget::dropEvent(QDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;40&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showEvent(QShowEvent*)</primary></indexterm>QWidget::showEvent(QShowEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;41&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::hideEvent(QHideEvent*)</primary></indexterm>QWidget::hideEvent(QHideEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;42&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::x11Event(_XEvent*)</primary></indexterm>QWidget::x11Event(_XEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;43&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::changeEvent(QEvent*)</primary></indexterm>QWidget::changeEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;44&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;45&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::inputMethodEvent(QInputMethodEvent*)</primary></indexterm>QWidget::inputMethodEvent(QInputMethodEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;46&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::inputMethodQuery(Qt::InputMethodQuery) const</primary></indexterm>QWidget::inputMethodQuery(Qt::InputMethodQuery) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;47&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusNextPrevChild(bool)</primary></indexterm>QWidget::focusNextPrevChild(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;48&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::styleChange(QStyle&)</primary></indexterm>QWidget::styleChange(QStyle&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;49&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enabledChange(bool)</primary></indexterm>QWidget::enabledChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;50&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paletteChange(QPalette const&)</primary></indexterm>QWidget::paletteChange(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;51&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::fontChange(QFont const&)</primary></indexterm>QWidget::fontChange(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;52&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::windowActivationChange(bool)</primary></indexterm>QWidget::windowActivationChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;53&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::languageChange()</primary></indexterm>QWidget::languageChange()</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--classdata-->
<TABLE id="cls-39083-1">
<TITLE>Secondary vtable for QSizeGrip</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>-16</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QSizeGrip</primary></indexterm>typeinfo for QSizeGrip</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QSizeGrip::~QSizeGrip()</primary></indexterm>non-virtual thunk to QSizeGrip::~QSizeGrip()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QSizeGrip::~QSizeGrip()</primary></indexterm>non-virtual thunk to QSizeGrip::~QSizeGrip()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::devType() const</primary></indexterm>non-virtual thunk to QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::paintEngine() const</primary></indexterm>non-virtual thunk to QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QSizeGrip  class
is described by <XREF LINKEND="rtti-38878">
</PARA>
<!--classdata-->
<TABLE ID="rtti-38878">
<TITLE>typeinfo for QSizeGrip</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QSizeGrip</primary></indexterm>typeinfo name for QSizeGrip</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QWidget</primary></indexterm>typeinfo for QWidget</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QTextBrowser</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QTextBrowser class
is described by <XREF LINKEND="cls-38956-0">
</PARA>
<!--classdata-->
<TABLE id="cls-38956-0">
<TITLE>Primary vtable for QTextBrowser</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QTextBrowser</primary></indexterm>typeinfo for QTextBrowser</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextBrowser::metaObject() const</primary></indexterm>QTextBrowser::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextBrowser::qt_metacast(char const*)</primary></indexterm>QTextBrowser::qt_metacast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextBrowser::qt_metacall(QMetaObject::Call, int, void**)</primary></indexterm>QTextBrowser::qt_metacall(QMetaObject::Call, int, void**)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextBrowser::~QTextBrowser()</primary></indexterm>QTextBrowser::~QTextBrowser()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextBrowser::~QTextBrowser()</primary></indexterm>QTextBrowser::~QTextBrowser()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextBrowser::event(QEvent*)</primary></indexterm>QTextBrowser::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::eventFilter(QObject*, QEvent*)</primary></indexterm>QObject::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::timerEvent(QTimerEvent*)</primary></indexterm>QTextEdit::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QEvent*)</primary></indexterm>QObject::customEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::devType() const</primary></indexterm>QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setVisible(bool)</primary></indexterm>QWidget::setVisible(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractScrollArea::sizeHint() const</primary></indexterm>QAbstractScrollArea::sizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractScrollArea::minimumSizeHint() const</primary></indexterm>QAbstractScrollArea::minimumSizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::heightForWidth(int) const</primary></indexterm>QWidget::heightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paintEngine() const</primary></indexterm>QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextBrowser::mousePressEvent(QMouseEvent*)</primary></indexterm>QTextBrowser::mousePressEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextBrowser::mouseReleaseEvent(QMouseEvent*)</primary></indexterm>QTextBrowser::mouseReleaseEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::mouseDoubleClickEvent(QMouseEvent*)</primary></indexterm>QTextEdit::mouseDoubleClickEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextBrowser::mouseMoveEvent(QMouseEvent*)</primary></indexterm>QTextBrowser::mouseMoveEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::wheelEvent(QWheelEvent*)</primary></indexterm>QTextEdit::wheelEvent(QWheelEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextBrowser::keyPressEvent(QKeyEvent*)</primary></indexterm>QTextBrowser::keyPressEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyReleaseEvent(QKeyEvent*)</primary></indexterm>QWidget::keyReleaseEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::focusInEvent(QFocusEvent*)</primary></indexterm>QTextEdit::focusInEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextBrowser::focusOutEvent(QFocusEvent*)</primary></indexterm>QTextBrowser::focusOutEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enterEvent(QEvent*)</primary></indexterm>QWidget::enterEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::leaveEvent(QEvent*)</primary></indexterm>QWidget::leaveEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextBrowser::paintEvent(QPaintEvent*)</primary></indexterm>QTextBrowser::paintEvent(QPaintEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::moveEvent(QMoveEvent*)</primary></indexterm>QWidget::moveEvent(QMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::resizeEvent(QResizeEvent*)</primary></indexterm>QTextEdit::resizeEvent(QResizeEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::closeEvent(QCloseEvent*)</primary></indexterm>QWidget::closeEvent(QCloseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;33&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::contextMenuEvent(QContextMenuEvent*)</primary></indexterm>QTextEdit::contextMenuEvent(QContextMenuEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;34&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::tabletEvent(QTabletEvent*)</primary></indexterm>QWidget::tabletEvent(QTabletEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;35&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::actionEvent(QActionEvent*)</primary></indexterm>QWidget::actionEvent(QActionEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;36&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::dragEnterEvent(QDragEnterEvent*)</primary></indexterm>QTextEdit::dragEnterEvent(QDragEnterEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;37&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::dragMoveEvent(QDragMoveEvent*)</primary></indexterm>QTextEdit::dragMoveEvent(QDragMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;38&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::dragLeaveEvent(QDragLeaveEvent*)</primary></indexterm>QTextEdit::dragLeaveEvent(QDragLeaveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;39&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::dropEvent(QDropEvent*)</primary></indexterm>QTextEdit::dropEvent(QDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;40&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::showEvent(QShowEvent*)</primary></indexterm>QTextEdit::showEvent(QShowEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;41&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::hideEvent(QHideEvent*)</primary></indexterm>QWidget::hideEvent(QHideEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;42&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::x11Event(_XEvent*)</primary></indexterm>QWidget::x11Event(_XEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;43&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::changeEvent(QEvent*)</primary></indexterm>QTextEdit::changeEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;44&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;45&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::inputMethodEvent(QInputMethodEvent*)</primary></indexterm>QTextEdit::inputMethodEvent(QInputMethodEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;46&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::inputMethodQuery(Qt::InputMethodQuery) const</primary></indexterm>QTextEdit::inputMethodQuery(Qt::InputMethodQuery) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;47&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextBrowser::focusNextPrevChild(bool)</primary></indexterm>QTextBrowser::focusNextPrevChild(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;48&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::styleChange(QStyle&)</primary></indexterm>QWidget::styleChange(QStyle&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;49&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enabledChange(bool)</primary></indexterm>QWidget::enabledChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;50&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paletteChange(QPalette const&)</primary></indexterm>QWidget::paletteChange(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;51&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::fontChange(QFont const&)</primary></indexterm>QWidget::fontChange(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;52&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::windowActivationChange(bool)</primary></indexterm>QWidget::windowActivationChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;53&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::languageChange()</primary></indexterm>QWidget::languageChange()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;54&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractScrollArea::viewportEvent(QEvent*)</primary></indexterm>QAbstractScrollArea::viewportEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;55&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::scrollContentsBy(int, int)</primary></indexterm>QTextEdit::scrollContentsBy(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;56&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextBrowser::loadResource(int, QUrl const&)</primary></indexterm>QTextBrowser::loadResource(int, QUrl const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;57&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::createMimeDataFromSelection() const</primary></indexterm>QTextEdit::createMimeDataFromSelection() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;58&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::canInsertFromMimeData(QMimeData const*) const</primary></indexterm>QTextEdit::canInsertFromMimeData(QMimeData const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;59&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::insertFromMimeData(QMimeData const*)</primary></indexterm>QTextEdit::insertFromMimeData(QMimeData const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;60&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextBrowser::setSource(QUrl const&)</primary></indexterm>QTextBrowser::setSource(QUrl const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;61&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextBrowser::backward()</primary></indexterm>QTextBrowser::backward()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;62&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextBrowser::forward()</primary></indexterm>QTextBrowser::forward()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;63&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextBrowser::home()</primary></indexterm>QTextBrowser::home()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;64&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextBrowser::reload()</primary></indexterm>QTextBrowser::reload()</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--classdata-->
<TABLE id="cls-38956-1">
<TITLE>Secondary vtable for QTextBrowser</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>-16</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QTextBrowser</primary></indexterm>typeinfo for QTextBrowser</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QTextBrowser::~QTextBrowser()</primary></indexterm>non-virtual thunk to QTextBrowser::~QTextBrowser()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QTextBrowser::~QTextBrowser()</primary></indexterm>non-virtual thunk to QTextBrowser::~QTextBrowser()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::devType() const</primary></indexterm>non-virtual thunk to QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::paintEngine() const</primary></indexterm>non-virtual thunk to QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QTextBrowser  class
is described by <XREF LINKEND="rtti-38751">
</PARA>
<!--classdata-->
<TABLE ID="rtti-38751">
<TITLE>typeinfo for QTextBrowser</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QTextBrowser</primary></indexterm>typeinfo name for QTextBrowser</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QTextEdit</primary></indexterm>typeinfo for QTextEdit</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QStatusBar</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QStatusBar class
is described by <XREF LINKEND="cls-38893-0">
</PARA>
<!--classdata-->
<TABLE id="cls-38893-0">
<TITLE>Primary vtable for QStatusBar</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QStatusBar</primary></indexterm>typeinfo for QStatusBar</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStatusBar::metaObject() const</primary></indexterm>QStatusBar::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStatusBar::qt_metacast(char const*)</primary></indexterm>QStatusBar::qt_metacast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStatusBar::qt_metacall(QMetaObject::Call, int, void**)</primary></indexterm>QStatusBar::qt_metacall(QMetaObject::Call, int, void**)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStatusBar::~QStatusBar()</primary></indexterm>QStatusBar::~QStatusBar()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStatusBar::~QStatusBar()</primary></indexterm>QStatusBar::~QStatusBar()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStatusBar::event(QEvent*)</primary></indexterm>QStatusBar::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::eventFilter(QObject*, QEvent*)</primary></indexterm>QObject::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QEvent*)</primary></indexterm>QObject::customEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::devType() const</primary></indexterm>QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setVisible(bool)</primary></indexterm>QWidget::setVisible(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::sizeHint() const</primary></indexterm>QWidget::sizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::minimumSizeHint() const</primary></indexterm>QWidget::minimumSizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::heightForWidth(int) const</primary></indexterm>QWidget::heightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paintEngine() const</primary></indexterm>QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mousePressEvent(QMouseEvent*)</primary></indexterm>QWidget::mousePressEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseReleaseEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseReleaseEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseDoubleClickEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseDoubleClickEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseMoveEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseMoveEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::wheelEvent(QWheelEvent*)</primary></indexterm>QWidget::wheelEvent(QWheelEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyPressEvent(QKeyEvent*)</primary></indexterm>QWidget::keyPressEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyReleaseEvent(QKeyEvent*)</primary></indexterm>QWidget::keyReleaseEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusInEvent(QFocusEvent*)</primary></indexterm>QWidget::focusInEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusOutEvent(QFocusEvent*)</primary></indexterm>QWidget::focusOutEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enterEvent(QEvent*)</primary></indexterm>QWidget::enterEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::leaveEvent(QEvent*)</primary></indexterm>QWidget::leaveEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStatusBar::paintEvent(QPaintEvent*)</primary></indexterm>QStatusBar::paintEvent(QPaintEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::moveEvent(QMoveEvent*)</primary></indexterm>QWidget::moveEvent(QMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStatusBar::resizeEvent(QResizeEvent*)</primary></indexterm>QStatusBar::resizeEvent(QResizeEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::closeEvent(QCloseEvent*)</primary></indexterm>QWidget::closeEvent(QCloseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;33&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::contextMenuEvent(QContextMenuEvent*)</primary></indexterm>QWidget::contextMenuEvent(QContextMenuEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;34&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::tabletEvent(QTabletEvent*)</primary></indexterm>QWidget::tabletEvent(QTabletEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;35&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::actionEvent(QActionEvent*)</primary></indexterm>QWidget::actionEvent(QActionEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;36&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragEnterEvent(QDragEnterEvent*)</primary></indexterm>QWidget::dragEnterEvent(QDragEnterEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;37&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragMoveEvent(QDragMoveEvent*)</primary></indexterm>QWidget::dragMoveEvent(QDragMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;38&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragLeaveEvent(QDragLeaveEvent*)</primary></indexterm>QWidget::dragLeaveEvent(QDragLeaveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;39&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dropEvent(QDropEvent*)</primary></indexterm>QWidget::dropEvent(QDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;40&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showEvent(QShowEvent*)</primary></indexterm>QWidget::showEvent(QShowEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;41&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::hideEvent(QHideEvent*)</primary></indexterm>QWidget::hideEvent(QHideEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;42&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::x11Event(_XEvent*)</primary></indexterm>QWidget::x11Event(_XEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;43&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::changeEvent(QEvent*)</primary></indexterm>QWidget::changeEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;44&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;45&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::inputMethodEvent(QInputMethodEvent*)</primary></indexterm>QWidget::inputMethodEvent(QInputMethodEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;46&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::inputMethodQuery(Qt::InputMethodQuery) const</primary></indexterm>QWidget::inputMethodQuery(Qt::InputMethodQuery) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;47&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusNextPrevChild(bool)</primary></indexterm>QWidget::focusNextPrevChild(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;48&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::styleChange(QStyle&)</primary></indexterm>QWidget::styleChange(QStyle&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;49&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enabledChange(bool)</primary></indexterm>QWidget::enabledChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;50&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paletteChange(QPalette const&)</primary></indexterm>QWidget::paletteChange(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;51&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::fontChange(QFont const&)</primary></indexterm>QWidget::fontChange(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;52&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::windowActivationChange(bool)</primary></indexterm>QWidget::windowActivationChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;53&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::languageChange()</primary></indexterm>QWidget::languageChange()</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--classdata-->
<TABLE id="cls-38893-1">
<TITLE>Secondary vtable for QStatusBar</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>-16</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QStatusBar</primary></indexterm>typeinfo for QStatusBar</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QStatusBar::~QStatusBar()</primary></indexterm>non-virtual thunk to QStatusBar::~QStatusBar()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QStatusBar::~QStatusBar()</primary></indexterm>non-virtual thunk to QStatusBar::~QStatusBar()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::devType() const</primary></indexterm>non-virtual thunk to QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::paintEngine() const</primary></indexterm>non-virtual thunk to QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QStatusBar  class
is described by <XREF LINKEND="rtti-38687">
</PARA>
<!--classdata-->
<TABLE ID="rtti-38687">
<TITLE>typeinfo for QStatusBar</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QStatusBar</primary></indexterm>typeinfo name for QStatusBar</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QWidget</primary></indexterm>typeinfo for QWidget</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QScrollArea</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QScrollArea class
is described by <XREF LINKEND="cls-38926-0">
</PARA>
<!--classdata-->
<TABLE id="cls-38926-0">
<TITLE>Primary vtable for QScrollArea</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QScrollArea</primary></indexterm>typeinfo for QScrollArea</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollArea::metaObject() const</primary></indexterm>QScrollArea::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollArea::qt_metacast(char const*)</primary></indexterm>QScrollArea::qt_metacast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollArea::qt_metacall(QMetaObject::Call, int, void**)</primary></indexterm>QScrollArea::qt_metacall(QMetaObject::Call, int, void**)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollArea::~QScrollArea()</primary></indexterm>QScrollArea::~QScrollArea()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollArea::~QScrollArea()</primary></indexterm>QScrollArea::~QScrollArea()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollArea::event(QEvent*)</primary></indexterm>QScrollArea::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollArea::eventFilter(QObject*, QEvent*)</primary></indexterm>QScrollArea::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QEvent*)</primary></indexterm>QObject::customEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::devType() const</primary></indexterm>QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setVisible(bool)</primary></indexterm>QWidget::setVisible(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollArea::sizeHint() const</primary></indexterm>QScrollArea::sizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractScrollArea::minimumSizeHint() const</primary></indexterm>QAbstractScrollArea::minimumSizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::heightForWidth(int) const</primary></indexterm>QWidget::heightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paintEngine() const</primary></indexterm>QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractScrollArea::mousePressEvent(QMouseEvent*)</primary></indexterm>QAbstractScrollArea::mousePressEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractScrollArea::mouseReleaseEvent(QMouseEvent*)</primary></indexterm>QAbstractScrollArea::mouseReleaseEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractScrollArea::mouseDoubleClickEvent(QMouseEvent*)</primary></indexterm>QAbstractScrollArea::mouseDoubleClickEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractScrollArea::mouseMoveEvent(QMouseEvent*)</primary></indexterm>QAbstractScrollArea::mouseMoveEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractScrollArea::wheelEvent(QWheelEvent*)</primary></indexterm>QAbstractScrollArea::wheelEvent(QWheelEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractScrollArea::keyPressEvent(QKeyEvent*)</primary></indexterm>QAbstractScrollArea::keyPressEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyReleaseEvent(QKeyEvent*)</primary></indexterm>QWidget::keyReleaseEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusInEvent(QFocusEvent*)</primary></indexterm>QWidget::focusInEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusOutEvent(QFocusEvent*)</primary></indexterm>QWidget::focusOutEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enterEvent(QEvent*)</primary></indexterm>QWidget::enterEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::leaveEvent(QEvent*)</primary></indexterm>QWidget::leaveEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractScrollArea::paintEvent(QPaintEvent*)</primary></indexterm>QAbstractScrollArea::paintEvent(QPaintEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::moveEvent(QMoveEvent*)</primary></indexterm>QWidget::moveEvent(QMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollArea::resizeEvent(QResizeEvent*)</primary></indexterm>QScrollArea::resizeEvent(QResizeEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::closeEvent(QCloseEvent*)</primary></indexterm>QWidget::closeEvent(QCloseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;33&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractScrollArea::contextMenuEvent(QContextMenuEvent*)</primary></indexterm>QAbstractScrollArea::contextMenuEvent(QContextMenuEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;34&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::tabletEvent(QTabletEvent*)</primary></indexterm>QWidget::tabletEvent(QTabletEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;35&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::actionEvent(QActionEvent*)</primary></indexterm>QWidget::actionEvent(QActionEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;36&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractScrollArea::dragEnterEvent(QDragEnterEvent*)</primary></indexterm>QAbstractScrollArea::dragEnterEvent(QDragEnterEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;37&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractScrollArea::dragMoveEvent(QDragMoveEvent*)</primary></indexterm>QAbstractScrollArea::dragMoveEvent(QDragMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;38&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractScrollArea::dragLeaveEvent(QDragLeaveEvent*)</primary></indexterm>QAbstractScrollArea::dragLeaveEvent(QDragLeaveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;39&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractScrollArea::dropEvent(QDropEvent*)</primary></indexterm>QAbstractScrollArea::dropEvent(QDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;40&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showEvent(QShowEvent*)</primary></indexterm>QWidget::showEvent(QShowEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;41&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::hideEvent(QHideEvent*)</primary></indexterm>QWidget::hideEvent(QHideEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;42&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::x11Event(_XEvent*)</primary></indexterm>QWidget::x11Event(_XEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;43&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::changeEvent(QEvent*)</primary></indexterm>QFrame::changeEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;44&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;45&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::inputMethodEvent(QInputMethodEvent*)</primary></indexterm>QWidget::inputMethodEvent(QInputMethodEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;46&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::inputMethodQuery(Qt::InputMethodQuery) const</primary></indexterm>QWidget::inputMethodQuery(Qt::InputMethodQuery) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;47&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollArea::focusNextPrevChild(bool)</primary></indexterm>QScrollArea::focusNextPrevChild(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;48&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::styleChange(QStyle&)</primary></indexterm>QWidget::styleChange(QStyle&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;49&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enabledChange(bool)</primary></indexterm>QWidget::enabledChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;50&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paletteChange(QPalette const&)</primary></indexterm>QWidget::paletteChange(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;51&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::fontChange(QFont const&)</primary></indexterm>QWidget::fontChange(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;52&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::windowActivationChange(bool)</primary></indexterm>QWidget::windowActivationChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;53&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::languageChange()</primary></indexterm>QWidget::languageChange()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;54&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractScrollArea::viewportEvent(QEvent*)</primary></indexterm>QAbstractScrollArea::viewportEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;55&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollArea::scrollContentsBy(int, int)</primary></indexterm>QScrollArea::scrollContentsBy(int, int)</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--classdata-->
<TABLE id="cls-38926-1">
<TITLE>Secondary vtable for QScrollArea</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>-16</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QScrollArea</primary></indexterm>typeinfo for QScrollArea</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QScrollArea::~QScrollArea()</primary></indexterm>non-virtual thunk to QScrollArea::~QScrollArea()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QScrollArea::~QScrollArea()</primary></indexterm>non-virtual thunk to QScrollArea::~QScrollArea()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::devType() const</primary></indexterm>non-virtual thunk to QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::paintEngine() const</primary></indexterm>non-virtual thunk to QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QScrollArea  class
is described by <XREF LINKEND="rtti-38721">
</PARA>
<!--classdata-->
<TABLE ID="rtti-38721">
<TITLE>typeinfo for QScrollArea</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QScrollArea</primary></indexterm>typeinfo name for QScrollArea</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QAbstractScrollArea</primary></indexterm>typeinfo for QAbstractScrollArea</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QToolButton</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QToolButton class
is described by <XREF LINKEND="cls-38930-0">
</PARA>
<!--classdata-->
<TABLE id="cls-38930-0">
<TITLE>Primary vtable for QToolButton</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QToolButton</primary></indexterm>typeinfo for QToolButton</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QToolButton::metaObject() const</primary></indexterm>QToolButton::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QToolButton::qt_metacast(char const*)</primary></indexterm>QToolButton::qt_metacast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QToolButton::qt_metacall(QMetaObject::Call, int, void**)</primary></indexterm>QToolButton::qt_metacall(QMetaObject::Call, int, void**)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QToolButton::~QToolButton()</primary></indexterm>QToolButton::~QToolButton()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QToolButton::~QToolButton()</primary></indexterm>QToolButton::~QToolButton()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QToolButton::event(QEvent*)</primary></indexterm>QToolButton::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::eventFilter(QObject*, QEvent*)</primary></indexterm>QObject::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QToolButton::timerEvent(QTimerEvent*)</primary></indexterm>QToolButton::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QEvent*)</primary></indexterm>QObject::customEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::devType() const</primary></indexterm>QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setVisible(bool)</primary></indexterm>QWidget::setVisible(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QToolButton::sizeHint() const</primary></indexterm>QToolButton::sizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QToolButton::minimumSizeHint() const</primary></indexterm>QToolButton::minimumSizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::heightForWidth(int) const</primary></indexterm>QWidget::heightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paintEngine() const</primary></indexterm>QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QToolButton::mousePressEvent(QMouseEvent*)</primary></indexterm>QToolButton::mousePressEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractButton::mouseReleaseEvent(QMouseEvent*)</primary></indexterm>QAbstractButton::mouseReleaseEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseDoubleClickEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseDoubleClickEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractButton::mouseMoveEvent(QMouseEvent*)</primary></indexterm>QAbstractButton::mouseMoveEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::wheelEvent(QWheelEvent*)</primary></indexterm>QWidget::wheelEvent(QWheelEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractButton::keyPressEvent(QKeyEvent*)</primary></indexterm>QAbstractButton::keyPressEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractButton::keyReleaseEvent(QKeyEvent*)</primary></indexterm>QAbstractButton::keyReleaseEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractButton::focusInEvent(QFocusEvent*)</primary></indexterm>QAbstractButton::focusInEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractButton::focusOutEvent(QFocusEvent*)</primary></indexterm>QAbstractButton::focusOutEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QToolButton::enterEvent(QEvent*)</primary></indexterm>QToolButton::enterEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QToolButton::leaveEvent(QEvent*)</primary></indexterm>QToolButton::leaveEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QToolButton::paintEvent(QPaintEvent*)</primary></indexterm>QToolButton::paintEvent(QPaintEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::moveEvent(QMoveEvent*)</primary></indexterm>QWidget::moveEvent(QMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::resizeEvent(QResizeEvent*)</primary></indexterm>QWidget::resizeEvent(QResizeEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::closeEvent(QCloseEvent*)</primary></indexterm>QWidget::closeEvent(QCloseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;33&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::contextMenuEvent(QContextMenuEvent*)</primary></indexterm>QWidget::contextMenuEvent(QContextMenuEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;34&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::tabletEvent(QTabletEvent*)</primary></indexterm>QWidget::tabletEvent(QTabletEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;35&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QToolButton::actionEvent(QActionEvent*)</primary></indexterm>QToolButton::actionEvent(QActionEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;36&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragEnterEvent(QDragEnterEvent*)</primary></indexterm>QWidget::dragEnterEvent(QDragEnterEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;37&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragMoveEvent(QDragMoveEvent*)</primary></indexterm>QWidget::dragMoveEvent(QDragMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;38&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragLeaveEvent(QDragLeaveEvent*)</primary></indexterm>QWidget::dragLeaveEvent(QDragLeaveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;39&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dropEvent(QDropEvent*)</primary></indexterm>QWidget::dropEvent(QDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;40&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showEvent(QShowEvent*)</primary></indexterm>QWidget::showEvent(QShowEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;41&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::hideEvent(QHideEvent*)</primary></indexterm>QWidget::hideEvent(QHideEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;42&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::x11Event(_XEvent*)</primary></indexterm>QWidget::x11Event(_XEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;43&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QToolButton::changeEvent(QEvent*)</primary></indexterm>QToolButton::changeEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;44&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;45&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::inputMethodEvent(QInputMethodEvent*)</primary></indexterm>QWidget::inputMethodEvent(QInputMethodEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;46&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::inputMethodQuery(Qt::InputMethodQuery) const</primary></indexterm>QWidget::inputMethodQuery(Qt::InputMethodQuery) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;47&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusNextPrevChild(bool)</primary></indexterm>QWidget::focusNextPrevChild(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;48&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::styleChange(QStyle&)</primary></indexterm>QWidget::styleChange(QStyle&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;49&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enabledChange(bool)</primary></indexterm>QWidget::enabledChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;50&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paletteChange(QPalette const&)</primary></indexterm>QWidget::paletteChange(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;51&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::fontChange(QFont const&)</primary></indexterm>QWidget::fontChange(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;52&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::windowActivationChange(bool)</primary></indexterm>QWidget::windowActivationChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;53&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::languageChange()</primary></indexterm>QWidget::languageChange()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;54&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractButton::hitButton(QPoint const&) const</primary></indexterm>QAbstractButton::hitButton(QPoint const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;55&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractButton::checkStateSet()</primary></indexterm>QAbstractButton::checkStateSet()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;56&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QToolButton::nextCheckState()</primary></indexterm>QToolButton::nextCheckState()</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--classdata-->
<TABLE id="cls-38930-1">
<TITLE>Secondary vtable for QToolButton</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>-16</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QToolButton</primary></indexterm>typeinfo for QToolButton</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QToolButton::~QToolButton()</primary></indexterm>non-virtual thunk to QToolButton::~QToolButton()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QToolButton::~QToolButton()</primary></indexterm>non-virtual thunk to QToolButton::~QToolButton()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::devType() const</primary></indexterm>non-virtual thunk to QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::paintEngine() const</primary></indexterm>non-virtual thunk to QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QToolButton  class
is described by <XREF LINKEND="rtti-38725">
</PARA>
<!--classdata-->
<TABLE ID="rtti-38725">
<TITLE>typeinfo for QToolButton</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QToolButton</primary></indexterm>typeinfo name for QToolButton</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QAbstractButton</primary></indexterm>typeinfo for QAbstractButton</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QComboBox</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QComboBox class
is described by <XREF LINKEND="cls-39074-0">
</PARA>
<!--classdata-->
<TABLE id="cls-39074-0">
<TITLE>Primary vtable for QComboBox</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QComboBox</primary></indexterm>typeinfo for QComboBox</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QComboBox::metaObject() const</primary></indexterm>QComboBox::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QComboBox::qt_metacast(char const*)</primary></indexterm>QComboBox::qt_metacast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QComboBox::qt_metacall(QMetaObject::Call, int, void**)</primary></indexterm>QComboBox::qt_metacall(QMetaObject::Call, int, void**)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QComboBox::~QComboBox()</primary></indexterm>QComboBox::~QComboBox()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QComboBox::~QComboBox()</primary></indexterm>QComboBox::~QComboBox()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QComboBox::event(QEvent*)</primary></indexterm>QComboBox::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::eventFilter(QObject*, QEvent*)</primary></indexterm>QObject::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QEvent*)</primary></indexterm>QObject::customEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::devType() const</primary></indexterm>QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setVisible(bool)</primary></indexterm>QWidget::setVisible(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QComboBox::sizeHint() const</primary></indexterm>QComboBox::sizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QComboBox::minimumSizeHint() const</primary></indexterm>QComboBox::minimumSizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::heightForWidth(int) const</primary></indexterm>QWidget::heightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paintEngine() const</primary></indexterm>QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QComboBox::mousePressEvent(QMouseEvent*)</primary></indexterm>QComboBox::mousePressEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QComboBox::mouseReleaseEvent(QMouseEvent*)</primary></indexterm>QComboBox::mouseReleaseEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseDoubleClickEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseDoubleClickEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseMoveEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseMoveEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QComboBox::wheelEvent(QWheelEvent*)</primary></indexterm>QComboBox::wheelEvent(QWheelEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QComboBox::keyPressEvent(QKeyEvent*)</primary></indexterm>QComboBox::keyPressEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QComboBox::keyReleaseEvent(QKeyEvent*)</primary></indexterm>QComboBox::keyReleaseEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QComboBox::focusInEvent(QFocusEvent*)</primary></indexterm>QComboBox::focusInEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QComboBox::focusOutEvent(QFocusEvent*)</primary></indexterm>QComboBox::focusOutEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enterEvent(QEvent*)</primary></indexterm>QWidget::enterEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::leaveEvent(QEvent*)</primary></indexterm>QWidget::leaveEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QComboBox::paintEvent(QPaintEvent*)</primary></indexterm>QComboBox::paintEvent(QPaintEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::moveEvent(QMoveEvent*)</primary></indexterm>QWidget::moveEvent(QMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QComboBox::resizeEvent(QResizeEvent*)</primary></indexterm>QComboBox::resizeEvent(QResizeEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::closeEvent(QCloseEvent*)</primary></indexterm>QWidget::closeEvent(QCloseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;33&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QComboBox::contextMenuEvent(QContextMenuEvent*)</primary></indexterm>QComboBox::contextMenuEvent(QContextMenuEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;34&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::tabletEvent(QTabletEvent*)</primary></indexterm>QWidget::tabletEvent(QTabletEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;35&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::actionEvent(QActionEvent*)</primary></indexterm>QWidget::actionEvent(QActionEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;36&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragEnterEvent(QDragEnterEvent*)</primary></indexterm>QWidget::dragEnterEvent(QDragEnterEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;37&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragMoveEvent(QDragMoveEvent*)</primary></indexterm>QWidget::dragMoveEvent(QDragMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;38&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragLeaveEvent(QDragLeaveEvent*)</primary></indexterm>QWidget::dragLeaveEvent(QDragLeaveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;39&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dropEvent(QDropEvent*)</primary></indexterm>QWidget::dropEvent(QDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;40&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QComboBox::showEvent(QShowEvent*)</primary></indexterm>QComboBox::showEvent(QShowEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;41&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QComboBox::hideEvent(QHideEvent*)</primary></indexterm>QComboBox::hideEvent(QHideEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;42&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::x11Event(_XEvent*)</primary></indexterm>QWidget::x11Event(_XEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;43&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QComboBox::changeEvent(QEvent*)</primary></indexterm>QComboBox::changeEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;44&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;45&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QComboBox::inputMethodEvent(QInputMethodEvent*)</primary></indexterm>QComboBox::inputMethodEvent(QInputMethodEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;46&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QComboBox::inputMethodQuery(Qt::InputMethodQuery) const</primary></indexterm>QComboBox::inputMethodQuery(Qt::InputMethodQuery) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;47&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusNextPrevChild(bool)</primary></indexterm>QWidget::focusNextPrevChild(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;48&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::styleChange(QStyle&)</primary></indexterm>QWidget::styleChange(QStyle&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;49&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enabledChange(bool)</primary></indexterm>QWidget::enabledChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;50&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paletteChange(QPalette const&)</primary></indexterm>QWidget::paletteChange(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;51&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::fontChange(QFont const&)</primary></indexterm>QWidget::fontChange(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;52&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::windowActivationChange(bool)</primary></indexterm>QWidget::windowActivationChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;53&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::languageChange()</primary></indexterm>QWidget::languageChange()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;54&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QComboBox::showPopup()</primary></indexterm>QComboBox::showPopup()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;55&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QComboBox::hidePopup()</primary></indexterm>QComboBox::hidePopup()</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--classdata-->
<TABLE id="cls-39074-1">
<TITLE>Secondary vtable for QComboBox</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>-16</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QComboBox</primary></indexterm>typeinfo for QComboBox</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QComboBox::~QComboBox()</primary></indexterm>non-virtual thunk to QComboBox::~QComboBox()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QComboBox::~QComboBox()</primary></indexterm>non-virtual thunk to QComboBox::~QComboBox()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::devType() const</primary></indexterm>non-virtual thunk to QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::paintEngine() const</primary></indexterm>non-virtual thunk to QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QComboBox  class
is described by <XREF LINKEND="rtti-38869">
</PARA>
<!--classdata-->
<TABLE ID="rtti-38869">
<TITLE>typeinfo for QComboBox</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QComboBox</primary></indexterm>typeinfo name for QComboBox</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QWidget</primary></indexterm>typeinfo for QWidget</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QMenuItem</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QMenuItem class
is described by <XREF LINKEND="cls-39081-0">
</PARA>
<!--classdata-->
<TABLE id="cls-39081-0">
<TITLE>Primary vtable for QMenuItem</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QMenuItem</primary></indexterm>typeinfo for QMenuItem</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAction::metaObject() const</primary></indexterm>QAction::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAction::qt_metacast(char const*)</primary></indexterm>QAction::qt_metacast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAction::qt_metacall(QMetaObject::Call, int, void**)</primary></indexterm>QAction::qt_metacall(QMetaObject::Call, int, void**)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMenuItem::~QMenuItem()</primary></indexterm>QMenuItem::~QMenuItem()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMenuItem::~QMenuItem()</primary></indexterm>QMenuItem::~QMenuItem()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAction::event(QEvent*)</primary></indexterm>QAction::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::eventFilter(QObject*, QEvent*)</primary></indexterm>QObject::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QEvent*)</primary></indexterm>QObject::customEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QMenuItem  class
is described by <XREF LINKEND="rtti-38876">
</PARA>
<!--classdata-->
<TABLE ID="rtti-38876">
<TITLE>typeinfo for QMenuItem</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QMenuItem</primary></indexterm>typeinfo name for QMenuItem</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QAction</primary></indexterm>typeinfo for QAction</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QRadioButton</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QRadioButton class
is described by <XREF LINKEND="cls-38951-0">
</PARA>
<!--classdata-->
<TABLE id="cls-38951-0">
<TITLE>Primary vtable for QRadioButton</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QRadioButton</primary></indexterm>typeinfo for QRadioButton</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QRadioButton::metaObject() const</primary></indexterm>QRadioButton::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QRadioButton::qt_metacast(char const*)</primary></indexterm>QRadioButton::qt_metacast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QRadioButton::qt_metacall(QMetaObject::Call, int, void**)</primary></indexterm>QRadioButton::qt_metacall(QMetaObject::Call, int, void**)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QRadioButton::~QRadioButton()</primary></indexterm>QRadioButton::~QRadioButton()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QRadioButton::~QRadioButton()</primary></indexterm>QRadioButton::~QRadioButton()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QRadioButton::event(QEvent*)</primary></indexterm>QRadioButton::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::eventFilter(QObject*, QEvent*)</primary></indexterm>QObject::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractButton::timerEvent(QTimerEvent*)</primary></indexterm>QAbstractButton::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QEvent*)</primary></indexterm>QObject::customEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::devType() const</primary></indexterm>QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setVisible(bool)</primary></indexterm>QWidget::setVisible(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QRadioButton::sizeHint() const</primary></indexterm>QRadioButton::sizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::minimumSizeHint() const</primary></indexterm>QWidget::minimumSizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::heightForWidth(int) const</primary></indexterm>QWidget::heightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paintEngine() const</primary></indexterm>QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractButton::mousePressEvent(QMouseEvent*)</primary></indexterm>QAbstractButton::mousePressEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractButton::mouseReleaseEvent(QMouseEvent*)</primary></indexterm>QAbstractButton::mouseReleaseEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseDoubleClickEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseDoubleClickEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QRadioButton::mouseMoveEvent(QMouseEvent*)</primary></indexterm>QRadioButton::mouseMoveEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::wheelEvent(QWheelEvent*)</primary></indexterm>QWidget::wheelEvent(QWheelEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractButton::keyPressEvent(QKeyEvent*)</primary></indexterm>QAbstractButton::keyPressEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractButton::keyReleaseEvent(QKeyEvent*)</primary></indexterm>QAbstractButton::keyReleaseEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractButton::focusInEvent(QFocusEvent*)</primary></indexterm>QAbstractButton::focusInEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractButton::focusOutEvent(QFocusEvent*)</primary></indexterm>QAbstractButton::focusOutEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enterEvent(QEvent*)</primary></indexterm>QWidget::enterEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::leaveEvent(QEvent*)</primary></indexterm>QWidget::leaveEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QRadioButton::paintEvent(QPaintEvent*)</primary></indexterm>QRadioButton::paintEvent(QPaintEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::moveEvent(QMoveEvent*)</primary></indexterm>QWidget::moveEvent(QMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::resizeEvent(QResizeEvent*)</primary></indexterm>QWidget::resizeEvent(QResizeEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::closeEvent(QCloseEvent*)</primary></indexterm>QWidget::closeEvent(QCloseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;33&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::contextMenuEvent(QContextMenuEvent*)</primary></indexterm>QWidget::contextMenuEvent(QContextMenuEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;34&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::tabletEvent(QTabletEvent*)</primary></indexterm>QWidget::tabletEvent(QTabletEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;35&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::actionEvent(QActionEvent*)</primary></indexterm>QWidget::actionEvent(QActionEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;36&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragEnterEvent(QDragEnterEvent*)</primary></indexterm>QWidget::dragEnterEvent(QDragEnterEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;37&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragMoveEvent(QDragMoveEvent*)</primary></indexterm>QWidget::dragMoveEvent(QDragMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;38&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragLeaveEvent(QDragLeaveEvent*)</primary></indexterm>QWidget::dragLeaveEvent(QDragLeaveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;39&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dropEvent(QDropEvent*)</primary></indexterm>QWidget::dropEvent(QDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;40&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showEvent(QShowEvent*)</primary></indexterm>QWidget::showEvent(QShowEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;41&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::hideEvent(QHideEvent*)</primary></indexterm>QWidget::hideEvent(QHideEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;42&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::x11Event(_XEvent*)</primary></indexterm>QWidget::x11Event(_XEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;43&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractButton::changeEvent(QEvent*)</primary></indexterm>QAbstractButton::changeEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;44&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;45&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::inputMethodEvent(QInputMethodEvent*)</primary></indexterm>QWidget::inputMethodEvent(QInputMethodEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;46&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::inputMethodQuery(Qt::InputMethodQuery) const</primary></indexterm>QWidget::inputMethodQuery(Qt::InputMethodQuery) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;47&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusNextPrevChild(bool)</primary></indexterm>QWidget::focusNextPrevChild(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;48&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::styleChange(QStyle&)</primary></indexterm>QWidget::styleChange(QStyle&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;49&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enabledChange(bool)</primary></indexterm>QWidget::enabledChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;50&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paletteChange(QPalette const&)</primary></indexterm>QWidget::paletteChange(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;51&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::fontChange(QFont const&)</primary></indexterm>QWidget::fontChange(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;52&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::windowActivationChange(bool)</primary></indexterm>QWidget::windowActivationChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;53&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::languageChange()</primary></indexterm>QWidget::languageChange()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;54&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QRadioButton::hitButton(QPoint const&) const</primary></indexterm>QRadioButton::hitButton(QPoint const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;55&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractButton::checkStateSet()</primary></indexterm>QAbstractButton::checkStateSet()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;56&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractButton::nextCheckState()</primary></indexterm>QAbstractButton::nextCheckState()</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--classdata-->
<TABLE id="cls-38951-1">
<TITLE>Secondary vtable for QRadioButton</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>-16</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QRadioButton</primary></indexterm>typeinfo for QRadioButton</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QRadioButton::~QRadioButton()</primary></indexterm>non-virtual thunk to QRadioButton::~QRadioButton()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QRadioButton::~QRadioButton()</primary></indexterm>non-virtual thunk to QRadioButton::~QRadioButton()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::devType() const</primary></indexterm>non-virtual thunk to QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::paintEngine() const</primary></indexterm>non-virtual thunk to QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QRadioButton  class
is described by <XREF LINKEND="rtti-38746">
</PARA>
<!--classdata-->
<TABLE ID="rtti-38746">
<TITLE>typeinfo for QRadioButton</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QRadioButton</primary></indexterm>typeinfo name for QRadioButton</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QAbstractButton</primary></indexterm>typeinfo for QAbstractButton</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QMenuBar</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QMenuBar class
is described by <XREF LINKEND="cls-39065-0">
</PARA>
<!--classdata-->
<TABLE id="cls-39065-0">
<TITLE>Primary vtable for QMenuBar</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QMenuBar</primary></indexterm>typeinfo for QMenuBar</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMenuBar::metaObject() const</primary></indexterm>QMenuBar::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMenuBar::qt_metacast(char const*)</primary></indexterm>QMenuBar::qt_metacast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMenuBar::qt_metacall(QMetaObject::Call, int, void**)</primary></indexterm>QMenuBar::qt_metacall(QMetaObject::Call, int, void**)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMenuBar::~QMenuBar()</primary></indexterm>QMenuBar::~QMenuBar()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMenuBar::~QMenuBar()</primary></indexterm>QMenuBar::~QMenuBar()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMenuBar::event(QEvent*)</primary></indexterm>QMenuBar::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMenuBar::eventFilter(QObject*, QEvent*)</primary></indexterm>QMenuBar::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QEvent*)</primary></indexterm>QObject::customEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::devType() const</primary></indexterm>QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setVisible(bool)</primary></indexterm>QWidget::setVisible(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMenuBar::sizeHint() const</primary></indexterm>QMenuBar::sizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMenuBar::minimumSizeHint() const</primary></indexterm>QMenuBar::minimumSizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMenuBar::heightForWidth(int) const</primary></indexterm>QMenuBar::heightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paintEngine() const</primary></indexterm>QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMenuBar::mousePressEvent(QMouseEvent*)</primary></indexterm>QMenuBar::mousePressEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMenuBar::mouseReleaseEvent(QMouseEvent*)</primary></indexterm>QMenuBar::mouseReleaseEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseDoubleClickEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseDoubleClickEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMenuBar::mouseMoveEvent(QMouseEvent*)</primary></indexterm>QMenuBar::mouseMoveEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::wheelEvent(QWheelEvent*)</primary></indexterm>QWidget::wheelEvent(QWheelEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMenuBar::keyPressEvent(QKeyEvent*)</primary></indexterm>QMenuBar::keyPressEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyReleaseEvent(QKeyEvent*)</primary></indexterm>QWidget::keyReleaseEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMenuBar::focusInEvent(QFocusEvent*)</primary></indexterm>QMenuBar::focusInEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMenuBar::focusOutEvent(QFocusEvent*)</primary></indexterm>QMenuBar::focusOutEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enterEvent(QEvent*)</primary></indexterm>QWidget::enterEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMenuBar::leaveEvent(QEvent*)</primary></indexterm>QMenuBar::leaveEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMenuBar::paintEvent(QPaintEvent*)</primary></indexterm>QMenuBar::paintEvent(QPaintEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::moveEvent(QMoveEvent*)</primary></indexterm>QWidget::moveEvent(QMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMenuBar::resizeEvent(QResizeEvent*)</primary></indexterm>QMenuBar::resizeEvent(QResizeEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::closeEvent(QCloseEvent*)</primary></indexterm>QWidget::closeEvent(QCloseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;33&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::contextMenuEvent(QContextMenuEvent*)</primary></indexterm>QWidget::contextMenuEvent(QContextMenuEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;34&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::tabletEvent(QTabletEvent*)</primary></indexterm>QWidget::tabletEvent(QTabletEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;35&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMenuBar::actionEvent(QActionEvent*)</primary></indexterm>QMenuBar::actionEvent(QActionEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;36&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragEnterEvent(QDragEnterEvent*)</primary></indexterm>QWidget::dragEnterEvent(QDragEnterEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;37&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragMoveEvent(QDragMoveEvent*)</primary></indexterm>QWidget::dragMoveEvent(QDragMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;38&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragLeaveEvent(QDragLeaveEvent*)</primary></indexterm>QWidget::dragLeaveEvent(QDragLeaveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;39&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dropEvent(QDropEvent*)</primary></indexterm>QWidget::dropEvent(QDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;40&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showEvent(QShowEvent*)</primary></indexterm>QWidget::showEvent(QShowEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;41&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::hideEvent(QHideEvent*)</primary></indexterm>QWidget::hideEvent(QHideEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;42&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::x11Event(_XEvent*)</primary></indexterm>QWidget::x11Event(_XEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;43&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMenuBar::changeEvent(QEvent*)</primary></indexterm>QMenuBar::changeEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;44&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;45&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::inputMethodEvent(QInputMethodEvent*)</primary></indexterm>QWidget::inputMethodEvent(QInputMethodEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;46&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::inputMethodQuery(Qt::InputMethodQuery) const</primary></indexterm>QWidget::inputMethodQuery(Qt::InputMethodQuery) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;47&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusNextPrevChild(bool)</primary></indexterm>QWidget::focusNextPrevChild(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;48&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::styleChange(QStyle&)</primary></indexterm>QWidget::styleChange(QStyle&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;49&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enabledChange(bool)</primary></indexterm>QWidget::enabledChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;50&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paletteChange(QPalette const&)</primary></indexterm>QWidget::paletteChange(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;51&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::fontChange(QFont const&)</primary></indexterm>QWidget::fontChange(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;52&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::windowActivationChange(bool)</primary></indexterm>QWidget::windowActivationChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;53&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::languageChange()</primary></indexterm>QWidget::languageChange()</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--classdata-->
<TABLE id="cls-39065-1">
<TITLE>Secondary vtable for QMenuBar</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>-16</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QMenuBar</primary></indexterm>typeinfo for QMenuBar</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QMenuBar::~QMenuBar()</primary></indexterm>non-virtual thunk to QMenuBar::~QMenuBar()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QMenuBar::~QMenuBar()</primary></indexterm>non-virtual thunk to QMenuBar::~QMenuBar()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::devType() const</primary></indexterm>non-virtual thunk to QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::paintEngine() const</primary></indexterm>non-virtual thunk to QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QMenuBar  class
is described by <XREF LINKEND="rtti-38860">
</PARA>
<!--classdata-->
<TABLE ID="rtti-38860">
<TITLE>typeinfo for QMenuBar</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QMenuBar</primary></indexterm>typeinfo name for QMenuBar</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QWidget</primary></indexterm>typeinfo for QWidget</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QFocusFrame</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QFocusFrame class
is described by <XREF LINKEND="cls-38905-0">
</PARA>
<!--classdata-->
<TABLE id="cls-38905-0">
<TITLE>Primary vtable for QFocusFrame</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QFocusFrame</primary></indexterm>typeinfo for QFocusFrame</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFocusFrame::metaObject() const</primary></indexterm>QFocusFrame::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFocusFrame::qt_metacast(char const*)</primary></indexterm>QFocusFrame::qt_metacast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFocusFrame::qt_metacall(QMetaObject::Call, int, void**)</primary></indexterm>QFocusFrame::qt_metacall(QMetaObject::Call, int, void**)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFocusFrame::~QFocusFrame()</primary></indexterm>QFocusFrame::~QFocusFrame()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFocusFrame::~QFocusFrame()</primary></indexterm>QFocusFrame::~QFocusFrame()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFocusFrame::event(QEvent*)</primary></indexterm>QFocusFrame::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFocusFrame::eventFilter(QObject*, QEvent*)</primary></indexterm>QFocusFrame::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QEvent*)</primary></indexterm>QObject::customEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::devType() const</primary></indexterm>QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setVisible(bool)</primary></indexterm>QWidget::setVisible(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::sizeHint() const</primary></indexterm>QWidget::sizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::minimumSizeHint() const</primary></indexterm>QWidget::minimumSizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::heightForWidth(int) const</primary></indexterm>QWidget::heightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paintEngine() const</primary></indexterm>QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mousePressEvent(QMouseEvent*)</primary></indexterm>QWidget::mousePressEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseReleaseEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseReleaseEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseDoubleClickEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseDoubleClickEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseMoveEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseMoveEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::wheelEvent(QWheelEvent*)</primary></indexterm>QWidget::wheelEvent(QWheelEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyPressEvent(QKeyEvent*)</primary></indexterm>QWidget::keyPressEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyReleaseEvent(QKeyEvent*)</primary></indexterm>QWidget::keyReleaseEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusInEvent(QFocusEvent*)</primary></indexterm>QWidget::focusInEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusOutEvent(QFocusEvent*)</primary></indexterm>QWidget::focusOutEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enterEvent(QEvent*)</primary></indexterm>QWidget::enterEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::leaveEvent(QEvent*)</primary></indexterm>QWidget::leaveEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFocusFrame::paintEvent(QPaintEvent*)</primary></indexterm>QFocusFrame::paintEvent(QPaintEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::moveEvent(QMoveEvent*)</primary></indexterm>QWidget::moveEvent(QMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::resizeEvent(QResizeEvent*)</primary></indexterm>QWidget::resizeEvent(QResizeEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::closeEvent(QCloseEvent*)</primary></indexterm>QWidget::closeEvent(QCloseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;33&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::contextMenuEvent(QContextMenuEvent*)</primary></indexterm>QWidget::contextMenuEvent(QContextMenuEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;34&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::tabletEvent(QTabletEvent*)</primary></indexterm>QWidget::tabletEvent(QTabletEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;35&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::actionEvent(QActionEvent*)</primary></indexterm>QWidget::actionEvent(QActionEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;36&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragEnterEvent(QDragEnterEvent*)</primary></indexterm>QWidget::dragEnterEvent(QDragEnterEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;37&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragMoveEvent(QDragMoveEvent*)</primary></indexterm>QWidget::dragMoveEvent(QDragMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;38&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragLeaveEvent(QDragLeaveEvent*)</primary></indexterm>QWidget::dragLeaveEvent(QDragLeaveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;39&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dropEvent(QDropEvent*)</primary></indexterm>QWidget::dropEvent(QDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;40&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showEvent(QShowEvent*)</primary></indexterm>QWidget::showEvent(QShowEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;41&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::hideEvent(QHideEvent*)</primary></indexterm>QWidget::hideEvent(QHideEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;42&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::x11Event(_XEvent*)</primary></indexterm>QWidget::x11Event(_XEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;43&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::changeEvent(QEvent*)</primary></indexterm>QWidget::changeEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;44&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;45&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::inputMethodEvent(QInputMethodEvent*)</primary></indexterm>QWidget::inputMethodEvent(QInputMethodEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;46&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::inputMethodQuery(Qt::InputMethodQuery) const</primary></indexterm>QWidget::inputMethodQuery(Qt::InputMethodQuery) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;47&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusNextPrevChild(bool)</primary></indexterm>QWidget::focusNextPrevChild(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;48&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::styleChange(QStyle&)</primary></indexterm>QWidget::styleChange(QStyle&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;49&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enabledChange(bool)</primary></indexterm>QWidget::enabledChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;50&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paletteChange(QPalette const&)</primary></indexterm>QWidget::paletteChange(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;51&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::fontChange(QFont const&)</primary></indexterm>QWidget::fontChange(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;52&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::windowActivationChange(bool)</primary></indexterm>QWidget::windowActivationChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;53&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::languageChange()</primary></indexterm>QWidget::languageChange()</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--classdata-->
<TABLE id="cls-38905-1">
<TITLE>Secondary vtable for QFocusFrame</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>-16</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QFocusFrame</primary></indexterm>typeinfo for QFocusFrame</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QFocusFrame::~QFocusFrame()</primary></indexterm>non-virtual thunk to QFocusFrame::~QFocusFrame()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QFocusFrame::~QFocusFrame()</primary></indexterm>non-virtual thunk to QFocusFrame::~QFocusFrame()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::devType() const</primary></indexterm>non-virtual thunk to QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::paintEngine() const</primary></indexterm>non-virtual thunk to QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QFocusFrame  class
is described by <XREF LINKEND="rtti-38700">
</PARA>
<!--classdata-->
<TABLE ID="rtti-38700">
<TITLE>typeinfo for QFocusFrame</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QFocusFrame</primary></indexterm>typeinfo name for QFocusFrame</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QWidget</primary></indexterm>typeinfo for QWidget</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QToolBar</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QToolBar class
is described by <XREF LINKEND="cls-39070-0">
</PARA>
<!--classdata-->
<TABLE id="cls-39070-0">
<TITLE>Primary vtable for QToolBar</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QToolBar</primary></indexterm>typeinfo for QToolBar</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QToolBar::metaObject() const</primary></indexterm>QToolBar::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QToolBar::qt_metacast(char const*)</primary></indexterm>QToolBar::qt_metacast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QToolBar::qt_metacall(QMetaObject::Call, int, void**)</primary></indexterm>QToolBar::qt_metacall(QMetaObject::Call, int, void**)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QToolBar::~QToolBar()</primary></indexterm>QToolBar::~QToolBar()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QToolBar::~QToolBar()</primary></indexterm>QToolBar::~QToolBar()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QToolBar::event(QEvent*)</primary></indexterm>QToolBar::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::eventFilter(QObject*, QEvent*)</primary></indexterm>QObject::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QToolBar::childEvent(QChildEvent*)</primary></indexterm>QToolBar::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QEvent*)</primary></indexterm>QObject::customEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::devType() const</primary></indexterm>QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setVisible(bool)</primary></indexterm>QWidget::setVisible(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::sizeHint() const</primary></indexterm>QWidget::sizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::minimumSizeHint() const</primary></indexterm>QWidget::minimumSizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::heightForWidth(int) const</primary></indexterm>QWidget::heightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paintEngine() const</primary></indexterm>QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mousePressEvent(QMouseEvent*)</primary></indexterm>QWidget::mousePressEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseReleaseEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseReleaseEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseDoubleClickEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseDoubleClickEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseMoveEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseMoveEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::wheelEvent(QWheelEvent*)</primary></indexterm>QWidget::wheelEvent(QWheelEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyPressEvent(QKeyEvent*)</primary></indexterm>QWidget::keyPressEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyReleaseEvent(QKeyEvent*)</primary></indexterm>QWidget::keyReleaseEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusInEvent(QFocusEvent*)</primary></indexterm>QWidget::focusInEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusOutEvent(QFocusEvent*)</primary></indexterm>QWidget::focusOutEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enterEvent(QEvent*)</primary></indexterm>QWidget::enterEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::leaveEvent(QEvent*)</primary></indexterm>QWidget::leaveEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QToolBar::paintEvent(QPaintEvent*)</primary></indexterm>QToolBar::paintEvent(QPaintEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::moveEvent(QMoveEvent*)</primary></indexterm>QWidget::moveEvent(QMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QToolBar::resizeEvent(QResizeEvent*)</primary></indexterm>QToolBar::resizeEvent(QResizeEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::closeEvent(QCloseEvent*)</primary></indexterm>QWidget::closeEvent(QCloseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;33&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::contextMenuEvent(QContextMenuEvent*)</primary></indexterm>QWidget::contextMenuEvent(QContextMenuEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;34&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::tabletEvent(QTabletEvent*)</primary></indexterm>QWidget::tabletEvent(QTabletEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;35&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QToolBar::actionEvent(QActionEvent*)</primary></indexterm>QToolBar::actionEvent(QActionEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;36&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragEnterEvent(QDragEnterEvent*)</primary></indexterm>QWidget::dragEnterEvent(QDragEnterEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;37&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragMoveEvent(QDragMoveEvent*)</primary></indexterm>QWidget::dragMoveEvent(QDragMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;38&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragLeaveEvent(QDragLeaveEvent*)</primary></indexterm>QWidget::dragLeaveEvent(QDragLeaveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;39&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dropEvent(QDropEvent*)</primary></indexterm>QWidget::dropEvent(QDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;40&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showEvent(QShowEvent*)</primary></indexterm>QWidget::showEvent(QShowEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;41&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::hideEvent(QHideEvent*)</primary></indexterm>QWidget::hideEvent(QHideEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;42&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::x11Event(_XEvent*)</primary></indexterm>QWidget::x11Event(_XEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;43&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QToolBar::changeEvent(QEvent*)</primary></indexterm>QToolBar::changeEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;44&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;45&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::inputMethodEvent(QInputMethodEvent*)</primary></indexterm>QWidget::inputMethodEvent(QInputMethodEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;46&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::inputMethodQuery(Qt::InputMethodQuery) const</primary></indexterm>QWidget::inputMethodQuery(Qt::InputMethodQuery) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;47&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusNextPrevChild(bool)</primary></indexterm>QWidget::focusNextPrevChild(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;48&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::styleChange(QStyle&)</primary></indexterm>QWidget::styleChange(QStyle&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;49&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enabledChange(bool)</primary></indexterm>QWidget::enabledChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;50&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paletteChange(QPalette const&)</primary></indexterm>QWidget::paletteChange(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;51&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::fontChange(QFont const&)</primary></indexterm>QWidget::fontChange(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;52&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::windowActivationChange(bool)</primary></indexterm>QWidget::windowActivationChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;53&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::languageChange()</primary></indexterm>QWidget::languageChange()</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--classdata-->
<TABLE id="cls-39070-1">
<TITLE>Secondary vtable for QToolBar</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>-16</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QToolBar</primary></indexterm>typeinfo for QToolBar</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QToolBar::~QToolBar()</primary></indexterm>non-virtual thunk to QToolBar::~QToolBar()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QToolBar::~QToolBar()</primary></indexterm>non-virtual thunk to QToolBar::~QToolBar()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::devType() const</primary></indexterm>non-virtual thunk to QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::paintEngine() const</primary></indexterm>non-virtual thunk to QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QToolBar  class
is described by <XREF LINKEND="rtti-38865">
</PARA>
<!--classdata-->
<TABLE ID="rtti-38865">
<TITLE>typeinfo for QToolBar</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QToolBar</primary></indexterm>typeinfo name for QToolBar</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QWidget</primary></indexterm>typeinfo for QWidget</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QToolBox</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QToolBox class
is described by <XREF LINKEND="cls-39071-0">
</PARA>
<!--classdata-->
<TABLE id="cls-39071-0">
<TITLE>Primary vtable for QToolBox</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QToolBox</primary></indexterm>typeinfo for QToolBox</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QToolBox::metaObject() const</primary></indexterm>QToolBox::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QToolBox::qt_metacast(char const*)</primary></indexterm>QToolBox::qt_metacast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QToolBox::qt_metacall(QMetaObject::Call, int, void**)</primary></indexterm>QToolBox::qt_metacall(QMetaObject::Call, int, void**)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QToolBox::~QToolBox()</primary></indexterm>QToolBox::~QToolBox()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QToolBox::~QToolBox()</primary></indexterm>QToolBox::~QToolBox()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QToolBox::event(QEvent*)</primary></indexterm>QToolBox::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::eventFilter(QObject*, QEvent*)</primary></indexterm>QObject::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QEvent*)</primary></indexterm>QObject::customEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::devType() const</primary></indexterm>QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setVisible(bool)</primary></indexterm>QWidget::setVisible(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::sizeHint() const</primary></indexterm>QFrame::sizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::minimumSizeHint() const</primary></indexterm>QWidget::minimumSizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::heightForWidth(int) const</primary></indexterm>QWidget::heightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paintEngine() const</primary></indexterm>QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mousePressEvent(QMouseEvent*)</primary></indexterm>QWidget::mousePressEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseReleaseEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseReleaseEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseDoubleClickEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseDoubleClickEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseMoveEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseMoveEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::wheelEvent(QWheelEvent*)</primary></indexterm>QWidget::wheelEvent(QWheelEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyPressEvent(QKeyEvent*)</primary></indexterm>QWidget::keyPressEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyReleaseEvent(QKeyEvent*)</primary></indexterm>QWidget::keyReleaseEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusInEvent(QFocusEvent*)</primary></indexterm>QWidget::focusInEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusOutEvent(QFocusEvent*)</primary></indexterm>QWidget::focusOutEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enterEvent(QEvent*)</primary></indexterm>QWidget::enterEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::leaveEvent(QEvent*)</primary></indexterm>QWidget::leaveEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::paintEvent(QPaintEvent*)</primary></indexterm>QFrame::paintEvent(QPaintEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::moveEvent(QMoveEvent*)</primary></indexterm>QWidget::moveEvent(QMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::resizeEvent(QResizeEvent*)</primary></indexterm>QWidget::resizeEvent(QResizeEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::closeEvent(QCloseEvent*)</primary></indexterm>QWidget::closeEvent(QCloseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;33&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::contextMenuEvent(QContextMenuEvent*)</primary></indexterm>QWidget::contextMenuEvent(QContextMenuEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;34&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::tabletEvent(QTabletEvent*)</primary></indexterm>QWidget::tabletEvent(QTabletEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;35&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::actionEvent(QActionEvent*)</primary></indexterm>QWidget::actionEvent(QActionEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;36&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragEnterEvent(QDragEnterEvent*)</primary></indexterm>QWidget::dragEnterEvent(QDragEnterEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;37&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragMoveEvent(QDragMoveEvent*)</primary></indexterm>QWidget::dragMoveEvent(QDragMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;38&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragLeaveEvent(QDragLeaveEvent*)</primary></indexterm>QWidget::dragLeaveEvent(QDragLeaveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;39&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dropEvent(QDropEvent*)</primary></indexterm>QWidget::dropEvent(QDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;40&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QToolBox::showEvent(QShowEvent*)</primary></indexterm>QToolBox::showEvent(QShowEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;41&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::hideEvent(QHideEvent*)</primary></indexterm>QWidget::hideEvent(QHideEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;42&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::x11Event(_XEvent*)</primary></indexterm>QWidget::x11Event(_XEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;43&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QToolBox::changeEvent(QEvent*)</primary></indexterm>QToolBox::changeEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;44&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;45&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::inputMethodEvent(QInputMethodEvent*)</primary></indexterm>QWidget::inputMethodEvent(QInputMethodEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;46&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::inputMethodQuery(Qt::InputMethodQuery) const</primary></indexterm>QWidget::inputMethodQuery(Qt::InputMethodQuery) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;47&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusNextPrevChild(bool)</primary></indexterm>QWidget::focusNextPrevChild(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;48&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::styleChange(QStyle&)</primary></indexterm>QWidget::styleChange(QStyle&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;49&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enabledChange(bool)</primary></indexterm>QWidget::enabledChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;50&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paletteChange(QPalette const&)</primary></indexterm>QWidget::paletteChange(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;51&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::fontChange(QFont const&)</primary></indexterm>QWidget::fontChange(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;52&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::windowActivationChange(bool)</primary></indexterm>QWidget::windowActivationChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;53&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::languageChange()</primary></indexterm>QWidget::languageChange()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;54&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QToolBox::itemInserted(int)</primary></indexterm>QToolBox::itemInserted(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;55&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QToolBox::itemRemoved(int)</primary></indexterm>QToolBox::itemRemoved(int)</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--classdata-->
<TABLE id="cls-39071-1">
<TITLE>Secondary vtable for QToolBox</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>-16</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QToolBox</primary></indexterm>typeinfo for QToolBox</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QToolBox::~QToolBox()</primary></indexterm>non-virtual thunk to QToolBox::~QToolBox()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QToolBox::~QToolBox()</primary></indexterm>non-virtual thunk to QToolBox::~QToolBox()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::devType() const</primary></indexterm>non-virtual thunk to QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::paintEngine() const</primary></indexterm>non-virtual thunk to QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QToolBox  class
is described by <XREF LINKEND="rtti-38866">
</PARA>
<!--classdata-->
<TABLE ID="rtti-38866">
<TITLE>typeinfo for QToolBox</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QToolBox</primary></indexterm>typeinfo name for QToolBox</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QFrame</primary></indexterm>typeinfo for QFrame</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QSplitter</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QSplitter class
is described by <XREF LINKEND="cls-39084-0">
</PARA>
<!--classdata-->
<TABLE id="cls-39084-0">
<TITLE>Primary vtable for QSplitter</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QSplitter</primary></indexterm>typeinfo for QSplitter</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSplitter::metaObject() const</primary></indexterm>QSplitter::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSplitter::qt_metacast(char const*)</primary></indexterm>QSplitter::qt_metacast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSplitter::qt_metacall(QMetaObject::Call, int, void**)</primary></indexterm>QSplitter::qt_metacall(QMetaObject::Call, int, void**)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSplitter::~QSplitter()</primary></indexterm>QSplitter::~QSplitter()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSplitter::~QSplitter()</primary></indexterm>QSplitter::~QSplitter()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSplitter::event(QEvent*)</primary></indexterm>QSplitter::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::eventFilter(QObject*, QEvent*)</primary></indexterm>QObject::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSplitter::childEvent(QChildEvent*)</primary></indexterm>QSplitter::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QEvent*)</primary></indexterm>QObject::customEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::devType() const</primary></indexterm>QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setVisible(bool)</primary></indexterm>QWidget::setVisible(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSplitter::sizeHint() const</primary></indexterm>QSplitter::sizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSplitter::minimumSizeHint() const</primary></indexterm>QSplitter::minimumSizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::heightForWidth(int) const</primary></indexterm>QWidget::heightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paintEngine() const</primary></indexterm>QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mousePressEvent(QMouseEvent*)</primary></indexterm>QWidget::mousePressEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseReleaseEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseReleaseEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseDoubleClickEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseDoubleClickEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseMoveEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseMoveEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::wheelEvent(QWheelEvent*)</primary></indexterm>QWidget::wheelEvent(QWheelEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyPressEvent(QKeyEvent*)</primary></indexterm>QWidget::keyPressEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyReleaseEvent(QKeyEvent*)</primary></indexterm>QWidget::keyReleaseEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusInEvent(QFocusEvent*)</primary></indexterm>QWidget::focusInEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusOutEvent(QFocusEvent*)</primary></indexterm>QWidget::focusOutEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enterEvent(QEvent*)</primary></indexterm>QWidget::enterEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::leaveEvent(QEvent*)</primary></indexterm>QWidget::leaveEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::paintEvent(QPaintEvent*)</primary></indexterm>QFrame::paintEvent(QPaintEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::moveEvent(QMoveEvent*)</primary></indexterm>QWidget::moveEvent(QMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSplitter::resizeEvent(QResizeEvent*)</primary></indexterm>QSplitter::resizeEvent(QResizeEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::closeEvent(QCloseEvent*)</primary></indexterm>QWidget::closeEvent(QCloseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;33&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::contextMenuEvent(QContextMenuEvent*)</primary></indexterm>QWidget::contextMenuEvent(QContextMenuEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;34&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::tabletEvent(QTabletEvent*)</primary></indexterm>QWidget::tabletEvent(QTabletEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;35&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::actionEvent(QActionEvent*)</primary></indexterm>QWidget::actionEvent(QActionEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;36&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragEnterEvent(QDragEnterEvent*)</primary></indexterm>QWidget::dragEnterEvent(QDragEnterEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;37&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragMoveEvent(QDragMoveEvent*)</primary></indexterm>QWidget::dragMoveEvent(QDragMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;38&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragLeaveEvent(QDragLeaveEvent*)</primary></indexterm>QWidget::dragLeaveEvent(QDragLeaveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;39&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dropEvent(QDropEvent*)</primary></indexterm>QWidget::dropEvent(QDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;40&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showEvent(QShowEvent*)</primary></indexterm>QWidget::showEvent(QShowEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;41&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::hideEvent(QHideEvent*)</primary></indexterm>QWidget::hideEvent(QHideEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;42&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::x11Event(_XEvent*)</primary></indexterm>QWidget::x11Event(_XEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;43&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSplitter::changeEvent(QEvent*)</primary></indexterm>QSplitter::changeEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;44&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;45&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::inputMethodEvent(QInputMethodEvent*)</primary></indexterm>QWidget::inputMethodEvent(QInputMethodEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;46&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::inputMethodQuery(Qt::InputMethodQuery) const</primary></indexterm>QWidget::inputMethodQuery(Qt::InputMethodQuery) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;47&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusNextPrevChild(bool)</primary></indexterm>QWidget::focusNextPrevChild(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;48&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::styleChange(QStyle&)</primary></indexterm>QWidget::styleChange(QStyle&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;49&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enabledChange(bool)</primary></indexterm>QWidget::enabledChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;50&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paletteChange(QPalette const&)</primary></indexterm>QWidget::paletteChange(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;51&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::fontChange(QFont const&)</primary></indexterm>QWidget::fontChange(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;52&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::windowActivationChange(bool)</primary></indexterm>QWidget::windowActivationChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;53&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::languageChange()</primary></indexterm>QWidget::languageChange()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;54&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSplitter::createHandle()</primary></indexterm>QSplitter::createHandle()</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--classdata-->
<TABLE id="cls-39084-1">
<TITLE>Secondary vtable for QSplitter</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>-16</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QSplitter</primary></indexterm>typeinfo for QSplitter</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QSplitter::~QSplitter()</primary></indexterm>non-virtual thunk to QSplitter::~QSplitter()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QSplitter::~QSplitter()</primary></indexterm>non-virtual thunk to QSplitter::~QSplitter()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::devType() const</primary></indexterm>non-virtual thunk to QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::paintEngine() const</primary></indexterm>non-virtual thunk to QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QSplitter  class
is described by <XREF LINKEND="rtti-38879">
</PARA>
<!--classdata-->
<TABLE ID="rtti-38879">
<TITLE>typeinfo for QSplitter</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QSplitter</primary></indexterm>typeinfo name for QSplitter</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QFrame</primary></indexterm>typeinfo for QFrame</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QSplitterHandle</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QSplitterHandle class
is described by <XREF LINKEND="cls-38988-0">
</PARA>
<!--classdata-->
<TABLE id="cls-38988-0">
<TITLE>Primary vtable for QSplitterHandle</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QSplitterHandle</primary></indexterm>typeinfo for QSplitterHandle</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSplitterHandle::metaObject() const</primary></indexterm>QSplitterHandle::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSplitterHandle::qt_metacast(char const*)</primary></indexterm>QSplitterHandle::qt_metacast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSplitterHandle::qt_metacall(QMetaObject::Call, int, void**)</primary></indexterm>QSplitterHandle::qt_metacall(QMetaObject::Call, int, void**)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSplitterHandle::~QSplitterHandle()</primary></indexterm>QSplitterHandle::~QSplitterHandle()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSplitterHandle::~QSplitterHandle()</primary></indexterm>QSplitterHandle::~QSplitterHandle()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSplitterHandle::event(QEvent*)</primary></indexterm>QSplitterHandle::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::eventFilter(QObject*, QEvent*)</primary></indexterm>QObject::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QEvent*)</primary></indexterm>QObject::customEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::devType() const</primary></indexterm>QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setVisible(bool)</primary></indexterm>QWidget::setVisible(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSplitterHandle::sizeHint() const</primary></indexterm>QSplitterHandle::sizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::minimumSizeHint() const</primary></indexterm>QWidget::minimumSizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::heightForWidth(int) const</primary></indexterm>QWidget::heightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paintEngine() const</primary></indexterm>QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSplitterHandle::mousePressEvent(QMouseEvent*)</primary></indexterm>QSplitterHandle::mousePressEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSplitterHandle::mouseReleaseEvent(QMouseEvent*)</primary></indexterm>QSplitterHandle::mouseReleaseEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseDoubleClickEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseDoubleClickEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSplitterHandle::mouseMoveEvent(QMouseEvent*)</primary></indexterm>QSplitterHandle::mouseMoveEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::wheelEvent(QWheelEvent*)</primary></indexterm>QWidget::wheelEvent(QWheelEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyPressEvent(QKeyEvent*)</primary></indexterm>QWidget::keyPressEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyReleaseEvent(QKeyEvent*)</primary></indexterm>QWidget::keyReleaseEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusInEvent(QFocusEvent*)</primary></indexterm>QWidget::focusInEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusOutEvent(QFocusEvent*)</primary></indexterm>QWidget::focusOutEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enterEvent(QEvent*)</primary></indexterm>QWidget::enterEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::leaveEvent(QEvent*)</primary></indexterm>QWidget::leaveEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSplitterHandle::paintEvent(QPaintEvent*)</primary></indexterm>QSplitterHandle::paintEvent(QPaintEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::moveEvent(QMoveEvent*)</primary></indexterm>QWidget::moveEvent(QMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::resizeEvent(QResizeEvent*)</primary></indexterm>QWidget::resizeEvent(QResizeEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::closeEvent(QCloseEvent*)</primary></indexterm>QWidget::closeEvent(QCloseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;33&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::contextMenuEvent(QContextMenuEvent*)</primary></indexterm>QWidget::contextMenuEvent(QContextMenuEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;34&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::tabletEvent(QTabletEvent*)</primary></indexterm>QWidget::tabletEvent(QTabletEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;35&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::actionEvent(QActionEvent*)</primary></indexterm>QWidget::actionEvent(QActionEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;36&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragEnterEvent(QDragEnterEvent*)</primary></indexterm>QWidget::dragEnterEvent(QDragEnterEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;37&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragMoveEvent(QDragMoveEvent*)</primary></indexterm>QWidget::dragMoveEvent(QDragMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;38&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragLeaveEvent(QDragLeaveEvent*)</primary></indexterm>QWidget::dragLeaveEvent(QDragLeaveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;39&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dropEvent(QDropEvent*)</primary></indexterm>QWidget::dropEvent(QDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;40&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showEvent(QShowEvent*)</primary></indexterm>QWidget::showEvent(QShowEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;41&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::hideEvent(QHideEvent*)</primary></indexterm>QWidget::hideEvent(QHideEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;42&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::x11Event(_XEvent*)</primary></indexterm>QWidget::x11Event(_XEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;43&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::changeEvent(QEvent*)</primary></indexterm>QWidget::changeEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;44&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;45&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::inputMethodEvent(QInputMethodEvent*)</primary></indexterm>QWidget::inputMethodEvent(QInputMethodEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;46&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::inputMethodQuery(Qt::InputMethodQuery) const</primary></indexterm>QWidget::inputMethodQuery(Qt::InputMethodQuery) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;47&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusNextPrevChild(bool)</primary></indexterm>QWidget::focusNextPrevChild(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;48&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::styleChange(QStyle&)</primary></indexterm>QWidget::styleChange(QStyle&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;49&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enabledChange(bool)</primary></indexterm>QWidget::enabledChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;50&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paletteChange(QPalette const&)</primary></indexterm>QWidget::paletteChange(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;51&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::fontChange(QFont const&)</primary></indexterm>QWidget::fontChange(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;52&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::windowActivationChange(bool)</primary></indexterm>QWidget::windowActivationChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;53&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::languageChange()</primary></indexterm>QWidget::languageChange()</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--classdata-->
<TABLE id="cls-38988-1">
<TITLE>Secondary vtable for QSplitterHandle</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>-16</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QSplitterHandle</primary></indexterm>typeinfo for QSplitterHandle</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QSplitterHandle::~QSplitterHandle()</primary></indexterm>non-virtual thunk to QSplitterHandle::~QSplitterHandle()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QSplitterHandle::~QSplitterHandle()</primary></indexterm>non-virtual thunk to QSplitterHandle::~QSplitterHandle()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::devType() const</primary></indexterm>non-virtual thunk to QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::paintEngine() const</primary></indexterm>non-virtual thunk to QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QSplitterHandle  class
is described by <XREF LINKEND="rtti-38783">
</PARA>
<!--classdata-->
<TABLE ID="rtti-38783">
<TITLE>typeinfo for QSplitterHandle</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QSplitterHandle</primary></indexterm>typeinfo name for QSplitterHandle</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QWidget</primary></indexterm>typeinfo for QWidget</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QDial</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QDial class
is described by <XREF LINKEND="cls-39048-0">
</PARA>
<!--classdata-->
<TABLE id="cls-39048-0">
<TITLE>Primary vtable for QDial</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QDial</primary></indexterm>typeinfo for QDial</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDial::metaObject() const</primary></indexterm>QDial::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDial::qt_metacast(char const*)</primary></indexterm>QDial::qt_metacast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDial::qt_metacall(QMetaObject::Call, int, void**)</primary></indexterm>QDial::qt_metacall(QMetaObject::Call, int, void**)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDial::~QDial()</primary></indexterm>QDial::~QDial()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDial::~QDial()</primary></indexterm>QDial::~QDial()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDial::event(QEvent*)</primary></indexterm>QDial::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::eventFilter(QObject*, QEvent*)</primary></indexterm>QObject::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSlider::timerEvent(QTimerEvent*)</primary></indexterm>QAbstractSlider::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QEvent*)</primary></indexterm>QObject::customEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::devType() const</primary></indexterm>QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setVisible(bool)</primary></indexterm>QWidget::setVisible(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDial::sizeHint() const</primary></indexterm>QDial::sizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDial::minimumSizeHint() const</primary></indexterm>QDial::minimumSizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::heightForWidth(int) const</primary></indexterm>QWidget::heightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paintEngine() const</primary></indexterm>QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDial::mousePressEvent(QMouseEvent*)</primary></indexterm>QDial::mousePressEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDial::mouseReleaseEvent(QMouseEvent*)</primary></indexterm>QDial::mouseReleaseEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseDoubleClickEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseDoubleClickEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDial::mouseMoveEvent(QMouseEvent*)</primary></indexterm>QDial::mouseMoveEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSlider::wheelEvent(QWheelEvent*)</primary></indexterm>QAbstractSlider::wheelEvent(QWheelEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSlider::keyPressEvent(QKeyEvent*)</primary></indexterm>QAbstractSlider::keyPressEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyReleaseEvent(QKeyEvent*)</primary></indexterm>QWidget::keyReleaseEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusInEvent(QFocusEvent*)</primary></indexterm>QWidget::focusInEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusOutEvent(QFocusEvent*)</primary></indexterm>QWidget::focusOutEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enterEvent(QEvent*)</primary></indexterm>QWidget::enterEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::leaveEvent(QEvent*)</primary></indexterm>QWidget::leaveEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDial::paintEvent(QPaintEvent*)</primary></indexterm>QDial::paintEvent(QPaintEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::moveEvent(QMoveEvent*)</primary></indexterm>QWidget::moveEvent(QMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDial::resizeEvent(QResizeEvent*)</primary></indexterm>QDial::resizeEvent(QResizeEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::closeEvent(QCloseEvent*)</primary></indexterm>QWidget::closeEvent(QCloseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;33&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::contextMenuEvent(QContextMenuEvent*)</primary></indexterm>QWidget::contextMenuEvent(QContextMenuEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;34&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::tabletEvent(QTabletEvent*)</primary></indexterm>QWidget::tabletEvent(QTabletEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;35&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::actionEvent(QActionEvent*)</primary></indexterm>QWidget::actionEvent(QActionEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;36&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragEnterEvent(QDragEnterEvent*)</primary></indexterm>QWidget::dragEnterEvent(QDragEnterEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;37&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragMoveEvent(QDragMoveEvent*)</primary></indexterm>QWidget::dragMoveEvent(QDragMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;38&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragLeaveEvent(QDragLeaveEvent*)</primary></indexterm>QWidget::dragLeaveEvent(QDragLeaveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;39&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dropEvent(QDropEvent*)</primary></indexterm>QWidget::dropEvent(QDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;40&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showEvent(QShowEvent*)</primary></indexterm>QWidget::showEvent(QShowEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;41&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::hideEvent(QHideEvent*)</primary></indexterm>QWidget::hideEvent(QHideEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;42&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::x11Event(_XEvent*)</primary></indexterm>QWidget::x11Event(_XEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;43&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSlider::changeEvent(QEvent*)</primary></indexterm>QAbstractSlider::changeEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;44&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;45&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::inputMethodEvent(QInputMethodEvent*)</primary></indexterm>QWidget::inputMethodEvent(QInputMethodEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;46&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::inputMethodQuery(Qt::InputMethodQuery) const</primary></indexterm>QWidget::inputMethodQuery(Qt::InputMethodQuery) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;47&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusNextPrevChild(bool)</primary></indexterm>QWidget::focusNextPrevChild(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;48&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::styleChange(QStyle&)</primary></indexterm>QWidget::styleChange(QStyle&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;49&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enabledChange(bool)</primary></indexterm>QWidget::enabledChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;50&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paletteChange(QPalette const&)</primary></indexterm>QWidget::paletteChange(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;51&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::fontChange(QFont const&)</primary></indexterm>QWidget::fontChange(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;52&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::windowActivationChange(bool)</primary></indexterm>QWidget::windowActivationChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;53&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::languageChange()</primary></indexterm>QWidget::languageChange()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;54&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDial::sliderChange(QAbstractSlider::SliderChange)</primary></indexterm>QDial::sliderChange(QAbstractSlider::SliderChange)</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--classdata-->
<TABLE id="cls-39048-1">
<TITLE>Secondary vtable for QDial</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>-16</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QDial</primary></indexterm>typeinfo for QDial</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QDial::~QDial()</primary></indexterm>non-virtual thunk to QDial::~QDial()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QDial::~QDial()</primary></indexterm>non-virtual thunk to QDial::~QDial()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::devType() const</primary></indexterm>non-virtual thunk to QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::paintEngine() const</primary></indexterm>non-virtual thunk to QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QDial  class
is described by <XREF LINKEND="rtti-38843">
</PARA>
<!--classdata-->
<TABLE ID="rtti-38843">
<TITLE>typeinfo for QDial</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QDial</primary></indexterm>typeinfo name for QDial</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QAbstractSlider</primary></indexterm>typeinfo for QAbstractSlider</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QAbstractGraphicsShapeItem</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QAbstractGraphicsShapeItem class
is described by <XREF LINKEND="cls-92112-0">
</PARA>
<!--classdata-->
<TABLE id="cls-92112-0">
<TITLE>Primary vtable for QAbstractGraphicsShapeItem</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QAbstractGraphicsShapeItem</primary></indexterm>typeinfo for QAbstractGraphicsShapeItem</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractGraphicsShapeItem::~QAbstractGraphicsShapeItem()</primary></indexterm>QAbstractGraphicsShapeItem::~QAbstractGraphicsShapeItem()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractGraphicsShapeItem::~QAbstractGraphicsShapeItem()</primary></indexterm>QAbstractGraphicsShapeItem::~QAbstractGraphicsShapeItem()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::advance(int)</primary></indexterm>QGraphicsItem::advance(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::shape() const</primary></indexterm>QGraphicsItem::shape() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::contains(QPointF const&) const</primary></indexterm>QGraphicsItem::contains(QPointF const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::collidesWithItem(QGraphicsItem const*, Qt::ItemSelectionMode) const</primary></indexterm>QGraphicsItem::collidesWithItem(QGraphicsItem const*, Qt::ItemSelectionMode) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::collidesWithPath(QPainterPath const&, Qt::ItemSelectionMode) const</primary></indexterm>QGraphicsItem::collidesWithPath(QPainterPath const&, Qt::ItemSelectionMode) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractGraphicsShapeItem::isObscuredBy(QGraphicsItem const*) const</primary></indexterm>QAbstractGraphicsShapeItem::isObscuredBy(QGraphicsItem const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractGraphicsShapeItem::opaqueArea() const</primary></indexterm>QAbstractGraphicsShapeItem::opaqueArea() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::type() const</primary></indexterm>QGraphicsItem::type() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::sceneEventFilter(QGraphicsItem*, QEvent*)</primary></indexterm>QGraphicsItem::sceneEventFilter(QGraphicsItem*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::sceneEvent(QEvent*)</primary></indexterm>QGraphicsItem::sceneEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::contextMenuEvent(QGraphicsSceneContextMenuEvent*)</primary></indexterm>QGraphicsItem::contextMenuEvent(QGraphicsSceneContextMenuEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::dragEnterEvent(QGraphicsSceneDragDropEvent*)</primary></indexterm>QGraphicsItem::dragEnterEvent(QGraphicsSceneDragDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::dragLeaveEvent(QGraphicsSceneDragDropEvent*)</primary></indexterm>QGraphicsItem::dragLeaveEvent(QGraphicsSceneDragDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::dragMoveEvent(QGraphicsSceneDragDropEvent*)</primary></indexterm>QGraphicsItem::dragMoveEvent(QGraphicsSceneDragDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::dropEvent(QGraphicsSceneDragDropEvent*)</primary></indexterm>QGraphicsItem::dropEvent(QGraphicsSceneDragDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::focusInEvent(QFocusEvent*)</primary></indexterm>QGraphicsItem::focusInEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::focusOutEvent(QFocusEvent*)</primary></indexterm>QGraphicsItem::focusOutEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::hoverEnterEvent(QGraphicsSceneHoverEvent*)</primary></indexterm>QGraphicsItem::hoverEnterEvent(QGraphicsSceneHoverEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::hoverMoveEvent(QGraphicsSceneHoverEvent*)</primary></indexterm>QGraphicsItem::hoverMoveEvent(QGraphicsSceneHoverEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::hoverLeaveEvent(QGraphicsSceneHoverEvent*)</primary></indexterm>QGraphicsItem::hoverLeaveEvent(QGraphicsSceneHoverEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::keyPressEvent(QKeyEvent*)</primary></indexterm>QGraphicsItem::keyPressEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::keyReleaseEvent(QKeyEvent*)</primary></indexterm>QGraphicsItem::keyReleaseEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::mousePressEvent(QGraphicsSceneMouseEvent*)</primary></indexterm>QGraphicsItem::mousePressEvent(QGraphicsSceneMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::mouseMoveEvent(QGraphicsSceneMouseEvent*)</primary></indexterm>QGraphicsItem::mouseMoveEvent(QGraphicsSceneMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::mouseReleaseEvent(QGraphicsSceneMouseEvent*)</primary></indexterm>QGraphicsItem::mouseReleaseEvent(QGraphicsSceneMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::mouseDoubleClickEvent(QGraphicsSceneMouseEvent*)</primary></indexterm>QGraphicsItem::mouseDoubleClickEvent(QGraphicsSceneMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::wheelEvent(QGraphicsSceneWheelEvent*)</primary></indexterm>QGraphicsItem::wheelEvent(QGraphicsSceneWheelEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::inputMethodEvent(QInputMethodEvent*)</primary></indexterm>QGraphicsItem::inputMethodEvent(QInputMethodEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::inputMethodQuery(Qt::InputMethodQuery) const</primary></indexterm>QGraphicsItem::inputMethodQuery(Qt::InputMethodQuery) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;33&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::itemChange(QGraphicsItem::GraphicsItemChange, QVariant const&)</primary></indexterm>QGraphicsItem::itemChange(QGraphicsItem::GraphicsItemChange, QVariant const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;34&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::supportsExtension(QGraphicsItem::Extension) const</primary></indexterm>QGraphicsItem::supportsExtension(QGraphicsItem::Extension) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;35&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::setExtension(QGraphicsItem::Extension, QVariant const&)</primary></indexterm>QGraphicsItem::setExtension(QGraphicsItem::Extension, QVariant const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;36&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::extension(QVariant const&) const</primary></indexterm>QGraphicsItem::extension(QVariant const&) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QCleanlooksStyle</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QCleanlooksStyle class
is described by <XREF LINKEND="cls-92118-0">
</PARA>
<!--classdata-->
<TABLE id="cls-92118-0">
<TITLE>Primary vtable for QCleanlooksStyle</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QCleanlooksStyle</primary></indexterm>typeinfo for QCleanlooksStyle</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QCleanlooksStyle::metaObject() const</primary></indexterm>QCleanlooksStyle::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QCleanlooksStyle::qt_metacast(char const*)</primary></indexterm>QCleanlooksStyle::qt_metacast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QCleanlooksStyle::qt_metacall(QMetaObject::Call, int, void**)</primary></indexterm>QCleanlooksStyle::qt_metacall(QMetaObject::Call, int, void**)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QCleanlooksStyle::~QCleanlooksStyle()</primary></indexterm>QCleanlooksStyle::~QCleanlooksStyle()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QCleanlooksStyle::~QCleanlooksStyle()</primary></indexterm>QCleanlooksStyle::~QCleanlooksStyle()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::event(QEvent*)</primary></indexterm>QObject::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWindowsStyle::eventFilter(QObject*, QEvent*)</primary></indexterm>QWindowsStyle::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWindowsStyle::timerEvent(QTimerEvent*)</primary></indexterm>QWindowsStyle::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QEvent*)</primary></indexterm>QObject::customEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QCleanlooksStyle::polish(QWidget*)</primary></indexterm>QCleanlooksStyle::polish(QWidget*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QCleanlooksStyle::unpolish(QWidget*)</primary></indexterm>QCleanlooksStyle::unpolish(QWidget*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QCleanlooksStyle::polish(QApplication*)</primary></indexterm>QCleanlooksStyle::polish(QApplication*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QCleanlooksStyle::unpolish(QApplication*)</primary></indexterm>QCleanlooksStyle::unpolish(QApplication*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QCleanlooksStyle::polish(QPalette&)</primary></indexterm>QCleanlooksStyle::polish(QPalette&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStyle::itemTextRect(QFontMetrics const&, QRect const&, int, bool, QString const&) const</primary></indexterm>QStyle::itemTextRect(QFontMetrics const&, QRect const&, int, bool, QString const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QCleanlooksStyle::itemPixmapRect(QRect const&, int, QPixmap const&) const</primary></indexterm>QCleanlooksStyle::itemPixmapRect(QRect const&, int, QPixmap const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QCleanlooksStyle::drawItemText(QPainter*, QRect const&, int, QPalette const&, bool, QString const&, QPalette::ColorRole) const</primary></indexterm>QCleanlooksStyle::drawItemText(QPainter*, QRect const&, int, QPalette const&, bool, QString const&, QPalette::ColorRole) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QCleanlooksStyle::drawItemPixmap(QPainter*, QRect const&, int, QPixmap const&) const</primary></indexterm>QCleanlooksStyle::drawItemPixmap(QPainter*, QRect const&, int, QPixmap const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QCleanlooksStyle::standardPalette() const</primary></indexterm>QCleanlooksStyle::standardPalette() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QCleanlooksStyle::drawPrimitive(QStyle::PrimitiveElement, QStyleOption const*, QPainter*, QWidget const*) const</primary></indexterm>QCleanlooksStyle::drawPrimitive(QStyle::PrimitiveElement, QStyleOption const*, QPainter*, QWidget const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QCleanlooksStyle::drawControl(QStyle::ControlElement, QStyleOption const*, QPainter*, QWidget const*) const</primary></indexterm>QCleanlooksStyle::drawControl(QStyle::ControlElement, QStyleOption const*, QPainter*, QWidget const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QCleanlooksStyle::subElementRect(QStyle::SubElement, QStyleOption const*, QWidget const*) const</primary></indexterm>QCleanlooksStyle::subElementRect(QStyle::SubElement, QStyleOption const*, QWidget const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QCleanlooksStyle::drawComplexControl(QStyle::ComplexControl, QStyleOptionComplex const*, QPainter*, QWidget const*) const</primary></indexterm>QCleanlooksStyle::drawComplexControl(QStyle::ComplexControl, QStyleOptionComplex const*, QPainter*, QWidget const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QCleanlooksStyle::hitTestComplexControl(QStyle::ComplexControl, QStyleOptionComplex const*, QPoint const&, QWidget const*) const</primary></indexterm>QCleanlooksStyle::hitTestComplexControl(QStyle::ComplexControl, QStyleOptionComplex const*, QPoint const&, QWidget const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QCleanlooksStyle::subControlRect(QStyle::ComplexControl, QStyleOptionComplex const*, QStyle::SubControl, QWidget const*) const</primary></indexterm>QCleanlooksStyle::subControlRect(QStyle::ComplexControl, QStyleOptionComplex const*, QStyle::SubControl, QWidget const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QCleanlooksStyle::pixelMetric(QStyle::PixelMetric, QStyleOption const*, QWidget const*) const</primary></indexterm>QCleanlooksStyle::pixelMetric(QStyle::PixelMetric, QStyleOption const*, QWidget const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QCleanlooksStyle::sizeFromContents(QStyle::ContentsType, QStyleOption const*, QSize const&, QWidget const*) const</primary></indexterm>QCleanlooksStyle::sizeFromContents(QStyle::ContentsType, QStyleOption const*, QSize const&, QWidget const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QCleanlooksStyle::styleHint(QStyle::StyleHint, QStyleOption const*, QWidget const*, QStyleHintReturn*) const</primary></indexterm>QCleanlooksStyle::styleHint(QStyle::StyleHint, QStyleOption const*, QWidget const*, QStyleHintReturn*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QCleanlooksStyle::standardPixmap(QStyle::StandardPixmap, QStyleOption const*, QWidget const*) const</primary></indexterm>QCleanlooksStyle::standardPixmap(QStyle::StandardPixmap, QStyleOption const*, QWidget const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QCleanlooksStyle::generatedIconPixmap(QIcon::Mode, QPixmap const&, QStyleOption const*) const</primary></indexterm>QCleanlooksStyle::generatedIconPixmap(QIcon::Mode, QPixmap const&, QStyleOption const*) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QCompleter</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QCompleter class
is described by <XREF LINKEND="cls-92119-0">
</PARA>
<!--classdata-->
<TABLE id="cls-92119-0">
<TITLE>Primary vtable for QCompleter</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QCompleter</primary></indexterm>typeinfo for QCompleter</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QCompleter::metaObject() const</primary></indexterm>QCompleter::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QCompleter::qt_metacast(char const*)</primary></indexterm>QCompleter::qt_metacast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QCompleter::qt_metacall(QMetaObject::Call, int, void**)</primary></indexterm>QCompleter::qt_metacall(QMetaObject::Call, int, void**)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QCompleter::~QCompleter()</primary></indexterm>QCompleter::~QCompleter()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QCompleter::~QCompleter()</primary></indexterm>QCompleter::~QCompleter()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QCompleter::event(QEvent*)</primary></indexterm>QCompleter::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QCompleter::eventFilter(QObject*, QEvent*)</primary></indexterm>QCompleter::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QEvent*)</primary></indexterm>QObject::customEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QCompleter::pathFromIndex(QModelIndex const&) const</primary></indexterm>QCompleter::pathFromIndex(QModelIndex const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QCompleter::splitPath(QString const&) const</primary></indexterm>QCompleter::splitPath(QString const&) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QDataWidgetMapper</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QDataWidgetMapper class
is described by <XREF LINKEND="cls-92121-0">
</PARA>
<!--classdata-->
<TABLE id="cls-92121-0">
<TITLE>Primary vtable for QDataWidgetMapper</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QDataWidgetMapper</primary></indexterm>typeinfo for QDataWidgetMapper</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDataWidgetMapper::metaObject() const</primary></indexterm>QDataWidgetMapper::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDataWidgetMapper::qt_metacast(char const*)</primary></indexterm>QDataWidgetMapper::qt_metacast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDataWidgetMapper::qt_metacall(QMetaObject::Call, int, void**)</primary></indexterm>QDataWidgetMapper::qt_metacall(QMetaObject::Call, int, void**)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDataWidgetMapper::~QDataWidgetMapper()</primary></indexterm>QDataWidgetMapper::~QDataWidgetMapper()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDataWidgetMapper::~QDataWidgetMapper()</primary></indexterm>QDataWidgetMapper::~QDataWidgetMapper()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::event(QEvent*)</primary></indexterm>QObject::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::eventFilter(QObject*, QEvent*)</primary></indexterm>QObject::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QEvent*)</primary></indexterm>QObject::customEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDataWidgetMapper::setCurrentIndex(int)</primary></indexterm>QDataWidgetMapper::setCurrentIndex(int)</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QGraphicsEllipseItem</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QGraphicsEllipseItem class
is described by <XREF LINKEND="cls-92125-0">
</PARA>
<!--classdata-->
<TABLE id="cls-92125-0">
<TITLE>Primary vtable for QGraphicsEllipseItem</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QGraphicsEllipseItem</primary></indexterm>typeinfo for QGraphicsEllipseItem</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsEllipseItem::~QGraphicsEllipseItem()</primary></indexterm>QGraphicsEllipseItem::~QGraphicsEllipseItem()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsEllipseItem::~QGraphicsEllipseItem()</primary></indexterm>QGraphicsEllipseItem::~QGraphicsEllipseItem()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::advance(int)</primary></indexterm>QGraphicsItem::advance(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsEllipseItem::boundingRect() const</primary></indexterm>QGraphicsEllipseItem::boundingRect() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsEllipseItem::shape() const</primary></indexterm>QGraphicsEllipseItem::shape() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsEllipseItem::contains(QPointF const&) const</primary></indexterm>QGraphicsEllipseItem::contains(QPointF const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::collidesWithItem(QGraphicsItem const*, Qt::ItemSelectionMode) const</primary></indexterm>QGraphicsItem::collidesWithItem(QGraphicsItem const*, Qt::ItemSelectionMode) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::collidesWithPath(QPainterPath const&, Qt::ItemSelectionMode) const</primary></indexterm>QGraphicsItem::collidesWithPath(QPainterPath const&, Qt::ItemSelectionMode) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsEllipseItem::isObscuredBy(QGraphicsItem const*) const</primary></indexterm>QGraphicsEllipseItem::isObscuredBy(QGraphicsItem const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsEllipseItem::opaqueArea() const</primary></indexterm>QGraphicsEllipseItem::opaqueArea() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsEllipseItem::paint(QPainter*, QStyleOptionGraphicsItem const*, QWidget*)</primary></indexterm>QGraphicsEllipseItem::paint(QPainter*, QStyleOptionGraphicsItem const*, QWidget*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsEllipseItem::type() const</primary></indexterm>QGraphicsEllipseItem::type() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::sceneEventFilter(QGraphicsItem*, QEvent*)</primary></indexterm>QGraphicsItem::sceneEventFilter(QGraphicsItem*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::sceneEvent(QEvent*)</primary></indexterm>QGraphicsItem::sceneEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::contextMenuEvent(QGraphicsSceneContextMenuEvent*)</primary></indexterm>QGraphicsItem::contextMenuEvent(QGraphicsSceneContextMenuEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::dragEnterEvent(QGraphicsSceneDragDropEvent*)</primary></indexterm>QGraphicsItem::dragEnterEvent(QGraphicsSceneDragDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::dragLeaveEvent(QGraphicsSceneDragDropEvent*)</primary></indexterm>QGraphicsItem::dragLeaveEvent(QGraphicsSceneDragDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::dragMoveEvent(QGraphicsSceneDragDropEvent*)</primary></indexterm>QGraphicsItem::dragMoveEvent(QGraphicsSceneDragDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::dropEvent(QGraphicsSceneDragDropEvent*)</primary></indexterm>QGraphicsItem::dropEvent(QGraphicsSceneDragDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::focusInEvent(QFocusEvent*)</primary></indexterm>QGraphicsItem::focusInEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::focusOutEvent(QFocusEvent*)</primary></indexterm>QGraphicsItem::focusOutEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::hoverEnterEvent(QGraphicsSceneHoverEvent*)</primary></indexterm>QGraphicsItem::hoverEnterEvent(QGraphicsSceneHoverEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::hoverMoveEvent(QGraphicsSceneHoverEvent*)</primary></indexterm>QGraphicsItem::hoverMoveEvent(QGraphicsSceneHoverEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::hoverLeaveEvent(QGraphicsSceneHoverEvent*)</primary></indexterm>QGraphicsItem::hoverLeaveEvent(QGraphicsSceneHoverEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::keyPressEvent(QKeyEvent*)</primary></indexterm>QGraphicsItem::keyPressEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::keyReleaseEvent(QKeyEvent*)</primary></indexterm>QGraphicsItem::keyReleaseEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::mousePressEvent(QGraphicsSceneMouseEvent*)</primary></indexterm>QGraphicsItem::mousePressEvent(QGraphicsSceneMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::mouseMoveEvent(QGraphicsSceneMouseEvent*)</primary></indexterm>QGraphicsItem::mouseMoveEvent(QGraphicsSceneMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::mouseReleaseEvent(QGraphicsSceneMouseEvent*)</primary></indexterm>QGraphicsItem::mouseReleaseEvent(QGraphicsSceneMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::mouseDoubleClickEvent(QGraphicsSceneMouseEvent*)</primary></indexterm>QGraphicsItem::mouseDoubleClickEvent(QGraphicsSceneMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::wheelEvent(QGraphicsSceneWheelEvent*)</primary></indexterm>QGraphicsItem::wheelEvent(QGraphicsSceneWheelEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::inputMethodEvent(QInputMethodEvent*)</primary></indexterm>QGraphicsItem::inputMethodEvent(QInputMethodEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::inputMethodQuery(Qt::InputMethodQuery) const</primary></indexterm>QGraphicsItem::inputMethodQuery(Qt::InputMethodQuery) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;33&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::itemChange(QGraphicsItem::GraphicsItemChange, QVariant const&)</primary></indexterm>QGraphicsItem::itemChange(QGraphicsItem::GraphicsItemChange, QVariant const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;34&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsEllipseItem::supportsExtension(QGraphicsItem::Extension) const</primary></indexterm>QGraphicsEllipseItem::supportsExtension(QGraphicsItem::Extension) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;35&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsEllipseItem::setExtension(QGraphicsItem::Extension, QVariant const&)</primary></indexterm>QGraphicsEllipseItem::setExtension(QGraphicsItem::Extension, QVariant const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;36&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsEllipseItem::extension(QVariant const&) const</primary></indexterm>QGraphicsEllipseItem::extension(QVariant const&) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QGraphicsItem</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QGraphicsItem class
is described by <XREF LINKEND="cls-92126-0">
</PARA>
<!--classdata-->
<TABLE id="cls-92126-0">
<TITLE>Primary vtable for QGraphicsItem</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QGraphicsItem</primary></indexterm>typeinfo for QGraphicsItem</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::~QGraphicsItem()</primary></indexterm>QGraphicsItem::~QGraphicsItem()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::~QGraphicsItem()</primary></indexterm>QGraphicsItem::~QGraphicsItem()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::advance(int)</primary></indexterm>QGraphicsItem::advance(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::shape() const</primary></indexterm>QGraphicsItem::shape() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::contains(QPointF const&) const</primary></indexterm>QGraphicsItem::contains(QPointF const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::collidesWithItem(QGraphicsItem const*, Qt::ItemSelectionMode) const</primary></indexterm>QGraphicsItem::collidesWithItem(QGraphicsItem const*, Qt::ItemSelectionMode) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::collidesWithPath(QPainterPath const&, Qt::ItemSelectionMode) const</primary></indexterm>QGraphicsItem::collidesWithPath(QPainterPath const&, Qt::ItemSelectionMode) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::isObscuredBy(QGraphicsItem const*) const</primary></indexterm>QGraphicsItem::isObscuredBy(QGraphicsItem const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::opaqueArea() const</primary></indexterm>QGraphicsItem::opaqueArea() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::type() const</primary></indexterm>QGraphicsItem::type() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::sceneEventFilter(QGraphicsItem*, QEvent*)</primary></indexterm>QGraphicsItem::sceneEventFilter(QGraphicsItem*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::sceneEvent(QEvent*)</primary></indexterm>QGraphicsItem::sceneEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::contextMenuEvent(QGraphicsSceneContextMenuEvent*)</primary></indexterm>QGraphicsItem::contextMenuEvent(QGraphicsSceneContextMenuEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::dragEnterEvent(QGraphicsSceneDragDropEvent*)</primary></indexterm>QGraphicsItem::dragEnterEvent(QGraphicsSceneDragDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::dragLeaveEvent(QGraphicsSceneDragDropEvent*)</primary></indexterm>QGraphicsItem::dragLeaveEvent(QGraphicsSceneDragDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::dragMoveEvent(QGraphicsSceneDragDropEvent*)</primary></indexterm>QGraphicsItem::dragMoveEvent(QGraphicsSceneDragDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::dropEvent(QGraphicsSceneDragDropEvent*)</primary></indexterm>QGraphicsItem::dropEvent(QGraphicsSceneDragDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::focusInEvent(QFocusEvent*)</primary></indexterm>QGraphicsItem::focusInEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::focusOutEvent(QFocusEvent*)</primary></indexterm>QGraphicsItem::focusOutEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::hoverEnterEvent(QGraphicsSceneHoverEvent*)</primary></indexterm>QGraphicsItem::hoverEnterEvent(QGraphicsSceneHoverEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::hoverMoveEvent(QGraphicsSceneHoverEvent*)</primary></indexterm>QGraphicsItem::hoverMoveEvent(QGraphicsSceneHoverEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::hoverLeaveEvent(QGraphicsSceneHoverEvent*)</primary></indexterm>QGraphicsItem::hoverLeaveEvent(QGraphicsSceneHoverEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::keyPressEvent(QKeyEvent*)</primary></indexterm>QGraphicsItem::keyPressEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::keyReleaseEvent(QKeyEvent*)</primary></indexterm>QGraphicsItem::keyReleaseEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::mousePressEvent(QGraphicsSceneMouseEvent*)</primary></indexterm>QGraphicsItem::mousePressEvent(QGraphicsSceneMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::mouseMoveEvent(QGraphicsSceneMouseEvent*)</primary></indexterm>QGraphicsItem::mouseMoveEvent(QGraphicsSceneMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::mouseReleaseEvent(QGraphicsSceneMouseEvent*)</primary></indexterm>QGraphicsItem::mouseReleaseEvent(QGraphicsSceneMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::mouseDoubleClickEvent(QGraphicsSceneMouseEvent*)</primary></indexterm>QGraphicsItem::mouseDoubleClickEvent(QGraphicsSceneMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::wheelEvent(QGraphicsSceneWheelEvent*)</primary></indexterm>QGraphicsItem::wheelEvent(QGraphicsSceneWheelEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::inputMethodEvent(QInputMethodEvent*)</primary></indexterm>QGraphicsItem::inputMethodEvent(QInputMethodEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::inputMethodQuery(Qt::InputMethodQuery) const</primary></indexterm>QGraphicsItem::inputMethodQuery(Qt::InputMethodQuery) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;33&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::itemChange(QGraphicsItem::GraphicsItemChange, QVariant const&)</primary></indexterm>QGraphicsItem::itemChange(QGraphicsItem::GraphicsItemChange, QVariant const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;34&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::supportsExtension(QGraphicsItem::Extension) const</primary></indexterm>QGraphicsItem::supportsExtension(QGraphicsItem::Extension) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;35&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::setExtension(QGraphicsItem::Extension, QVariant const&)</primary></indexterm>QGraphicsItem::setExtension(QGraphicsItem::Extension, QVariant const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;36&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::extension(QVariant const&) const</primary></indexterm>QGraphicsItem::extension(QVariant const&) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QGraphicsItemAnimation</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QGraphicsItemAnimation class
is described by <XREF LINKEND="cls-92127-0">
</PARA>
<!--classdata-->
<TABLE id="cls-92127-0">
<TITLE>Primary vtable for QGraphicsItemAnimation</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QGraphicsItemAnimation</primary></indexterm>typeinfo for QGraphicsItemAnimation</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItemAnimation::metaObject() const</primary></indexterm>QGraphicsItemAnimation::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItemAnimation::qt_metacast(char const*)</primary></indexterm>QGraphicsItemAnimation::qt_metacast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItemAnimation::qt_metacall(QMetaObject::Call, int, void**)</primary></indexterm>QGraphicsItemAnimation::qt_metacall(QMetaObject::Call, int, void**)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItemAnimation::~QGraphicsItemAnimation()</primary></indexterm>QGraphicsItemAnimation::~QGraphicsItemAnimation()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItemAnimation::~QGraphicsItemAnimation()</primary></indexterm>QGraphicsItemAnimation::~QGraphicsItemAnimation()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::event(QEvent*)</primary></indexterm>QObject::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::eventFilter(QObject*, QEvent*)</primary></indexterm>QObject::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QEvent*)</primary></indexterm>QObject::customEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItemAnimation::beforeAnimationStep(double)</primary></indexterm>QGraphicsItemAnimation::beforeAnimationStep(double)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItemAnimation::afterAnimationStep(double)</primary></indexterm>QGraphicsItemAnimation::afterAnimationStep(double)</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QGraphicsItemGroup</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QGraphicsItemGroup class
is described by <XREF LINKEND="cls-92128-0">
</PARA>
<!--classdata-->
<TABLE id="cls-92128-0">
<TITLE>Primary vtable for QGraphicsItemGroup</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QGraphicsItemGroup</primary></indexterm>typeinfo for QGraphicsItemGroup</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItemGroup::~QGraphicsItemGroup()</primary></indexterm>QGraphicsItemGroup::~QGraphicsItemGroup()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItemGroup::~QGraphicsItemGroup()</primary></indexterm>QGraphicsItemGroup::~QGraphicsItemGroup()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::advance(int)</primary></indexterm>QGraphicsItem::advance(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItemGroup::boundingRect() const</primary></indexterm>QGraphicsItemGroup::boundingRect() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::shape() const</primary></indexterm>QGraphicsItem::shape() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::contains(QPointF const&) const</primary></indexterm>QGraphicsItem::contains(QPointF const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::collidesWithItem(QGraphicsItem const*, Qt::ItemSelectionMode) const</primary></indexterm>QGraphicsItem::collidesWithItem(QGraphicsItem const*, Qt::ItemSelectionMode) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::collidesWithPath(QPainterPath const&, Qt::ItemSelectionMode) const</primary></indexterm>QGraphicsItem::collidesWithPath(QPainterPath const&, Qt::ItemSelectionMode) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItemGroup::isObscuredBy(QGraphicsItem const*) const</primary></indexterm>QGraphicsItemGroup::isObscuredBy(QGraphicsItem const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItemGroup::opaqueArea() const</primary></indexterm>QGraphicsItemGroup::opaqueArea() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItemGroup::paint(QPainter*, QStyleOptionGraphicsItem const*, QWidget*)</primary></indexterm>QGraphicsItemGroup::paint(QPainter*, QStyleOptionGraphicsItem const*, QWidget*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItemGroup::type() const</primary></indexterm>QGraphicsItemGroup::type() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::sceneEventFilter(QGraphicsItem*, QEvent*)</primary></indexterm>QGraphicsItem::sceneEventFilter(QGraphicsItem*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::sceneEvent(QEvent*)</primary></indexterm>QGraphicsItem::sceneEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::contextMenuEvent(QGraphicsSceneContextMenuEvent*)</primary></indexterm>QGraphicsItem::contextMenuEvent(QGraphicsSceneContextMenuEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::dragEnterEvent(QGraphicsSceneDragDropEvent*)</primary></indexterm>QGraphicsItem::dragEnterEvent(QGraphicsSceneDragDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::dragLeaveEvent(QGraphicsSceneDragDropEvent*)</primary></indexterm>QGraphicsItem::dragLeaveEvent(QGraphicsSceneDragDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::dragMoveEvent(QGraphicsSceneDragDropEvent*)</primary></indexterm>QGraphicsItem::dragMoveEvent(QGraphicsSceneDragDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::dropEvent(QGraphicsSceneDragDropEvent*)</primary></indexterm>QGraphicsItem::dropEvent(QGraphicsSceneDragDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::focusInEvent(QFocusEvent*)</primary></indexterm>QGraphicsItem::focusInEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::focusOutEvent(QFocusEvent*)</primary></indexterm>QGraphicsItem::focusOutEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::hoverEnterEvent(QGraphicsSceneHoverEvent*)</primary></indexterm>QGraphicsItem::hoverEnterEvent(QGraphicsSceneHoverEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::hoverMoveEvent(QGraphicsSceneHoverEvent*)</primary></indexterm>QGraphicsItem::hoverMoveEvent(QGraphicsSceneHoverEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::hoverLeaveEvent(QGraphicsSceneHoverEvent*)</primary></indexterm>QGraphicsItem::hoverLeaveEvent(QGraphicsSceneHoverEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::keyPressEvent(QKeyEvent*)</primary></indexterm>QGraphicsItem::keyPressEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::keyReleaseEvent(QKeyEvent*)</primary></indexterm>QGraphicsItem::keyReleaseEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::mousePressEvent(QGraphicsSceneMouseEvent*)</primary></indexterm>QGraphicsItem::mousePressEvent(QGraphicsSceneMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::mouseMoveEvent(QGraphicsSceneMouseEvent*)</primary></indexterm>QGraphicsItem::mouseMoveEvent(QGraphicsSceneMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::mouseReleaseEvent(QGraphicsSceneMouseEvent*)</primary></indexterm>QGraphicsItem::mouseReleaseEvent(QGraphicsSceneMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::mouseDoubleClickEvent(QGraphicsSceneMouseEvent*)</primary></indexterm>QGraphicsItem::mouseDoubleClickEvent(QGraphicsSceneMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::wheelEvent(QGraphicsSceneWheelEvent*)</primary></indexterm>QGraphicsItem::wheelEvent(QGraphicsSceneWheelEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::inputMethodEvent(QInputMethodEvent*)</primary></indexterm>QGraphicsItem::inputMethodEvent(QInputMethodEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::inputMethodQuery(Qt::InputMethodQuery) const</primary></indexterm>QGraphicsItem::inputMethodQuery(Qt::InputMethodQuery) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;33&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::itemChange(QGraphicsItem::GraphicsItemChange, QVariant const&)</primary></indexterm>QGraphicsItem::itemChange(QGraphicsItem::GraphicsItemChange, QVariant const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;34&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::supportsExtension(QGraphicsItem::Extension) const</primary></indexterm>QGraphicsItem::supportsExtension(QGraphicsItem::Extension) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;35&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::setExtension(QGraphicsItem::Extension, QVariant const&)</primary></indexterm>QGraphicsItem::setExtension(QGraphicsItem::Extension, QVariant const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;36&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::extension(QVariant const&) const</primary></indexterm>QGraphicsItem::extension(QVariant const&) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QGraphicsLineItem</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QGraphicsLineItem class
is described by <XREF LINKEND="cls-92129-0">
</PARA>
<!--classdata-->
<TABLE id="cls-92129-0">
<TITLE>Primary vtable for QGraphicsLineItem</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QGraphicsLineItem</primary></indexterm>typeinfo for QGraphicsLineItem</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsLineItem::~QGraphicsLineItem()</primary></indexterm>QGraphicsLineItem::~QGraphicsLineItem()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsLineItem::~QGraphicsLineItem()</primary></indexterm>QGraphicsLineItem::~QGraphicsLineItem()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::advance(int)</primary></indexterm>QGraphicsItem::advance(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsLineItem::boundingRect() const</primary></indexterm>QGraphicsLineItem::boundingRect() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsLineItem::shape() const</primary></indexterm>QGraphicsLineItem::shape() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsLineItem::contains(QPointF const&) const</primary></indexterm>QGraphicsLineItem::contains(QPointF const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::collidesWithItem(QGraphicsItem const*, Qt::ItemSelectionMode) const</primary></indexterm>QGraphicsItem::collidesWithItem(QGraphicsItem const*, Qt::ItemSelectionMode) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::collidesWithPath(QPainterPath const&, Qt::ItemSelectionMode) const</primary></indexterm>QGraphicsItem::collidesWithPath(QPainterPath const&, Qt::ItemSelectionMode) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsLineItem::isObscuredBy(QGraphicsItem const*) const</primary></indexterm>QGraphicsLineItem::isObscuredBy(QGraphicsItem const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsLineItem::opaqueArea() const</primary></indexterm>QGraphicsLineItem::opaqueArea() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsLineItem::paint(QPainter*, QStyleOptionGraphicsItem const*, QWidget*)</primary></indexterm>QGraphicsLineItem::paint(QPainter*, QStyleOptionGraphicsItem const*, QWidget*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsLineItem::type() const</primary></indexterm>QGraphicsLineItem::type() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::sceneEventFilter(QGraphicsItem*, QEvent*)</primary></indexterm>QGraphicsItem::sceneEventFilter(QGraphicsItem*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::sceneEvent(QEvent*)</primary></indexterm>QGraphicsItem::sceneEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::contextMenuEvent(QGraphicsSceneContextMenuEvent*)</primary></indexterm>QGraphicsItem::contextMenuEvent(QGraphicsSceneContextMenuEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::dragEnterEvent(QGraphicsSceneDragDropEvent*)</primary></indexterm>QGraphicsItem::dragEnterEvent(QGraphicsSceneDragDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::dragLeaveEvent(QGraphicsSceneDragDropEvent*)</primary></indexterm>QGraphicsItem::dragLeaveEvent(QGraphicsSceneDragDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::dragMoveEvent(QGraphicsSceneDragDropEvent*)</primary></indexterm>QGraphicsItem::dragMoveEvent(QGraphicsSceneDragDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::dropEvent(QGraphicsSceneDragDropEvent*)</primary></indexterm>QGraphicsItem::dropEvent(QGraphicsSceneDragDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::focusInEvent(QFocusEvent*)</primary></indexterm>QGraphicsItem::focusInEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::focusOutEvent(QFocusEvent*)</primary></indexterm>QGraphicsItem::focusOutEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::hoverEnterEvent(QGraphicsSceneHoverEvent*)</primary></indexterm>QGraphicsItem::hoverEnterEvent(QGraphicsSceneHoverEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::hoverMoveEvent(QGraphicsSceneHoverEvent*)</primary></indexterm>QGraphicsItem::hoverMoveEvent(QGraphicsSceneHoverEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::hoverLeaveEvent(QGraphicsSceneHoverEvent*)</primary></indexterm>QGraphicsItem::hoverLeaveEvent(QGraphicsSceneHoverEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::keyPressEvent(QKeyEvent*)</primary></indexterm>QGraphicsItem::keyPressEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::keyReleaseEvent(QKeyEvent*)</primary></indexterm>QGraphicsItem::keyReleaseEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::mousePressEvent(QGraphicsSceneMouseEvent*)</primary></indexterm>QGraphicsItem::mousePressEvent(QGraphicsSceneMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::mouseMoveEvent(QGraphicsSceneMouseEvent*)</primary></indexterm>QGraphicsItem::mouseMoveEvent(QGraphicsSceneMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::mouseReleaseEvent(QGraphicsSceneMouseEvent*)</primary></indexterm>QGraphicsItem::mouseReleaseEvent(QGraphicsSceneMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::mouseDoubleClickEvent(QGraphicsSceneMouseEvent*)</primary></indexterm>QGraphicsItem::mouseDoubleClickEvent(QGraphicsSceneMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::wheelEvent(QGraphicsSceneWheelEvent*)</primary></indexterm>QGraphicsItem::wheelEvent(QGraphicsSceneWheelEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::inputMethodEvent(QInputMethodEvent*)</primary></indexterm>QGraphicsItem::inputMethodEvent(QInputMethodEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::inputMethodQuery(Qt::InputMethodQuery) const</primary></indexterm>QGraphicsItem::inputMethodQuery(Qt::InputMethodQuery) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;33&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::itemChange(QGraphicsItem::GraphicsItemChange, QVariant const&)</primary></indexterm>QGraphicsItem::itemChange(QGraphicsItem::GraphicsItemChange, QVariant const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;34&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsLineItem::supportsExtension(QGraphicsItem::Extension) const</primary></indexterm>QGraphicsLineItem::supportsExtension(QGraphicsItem::Extension) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;35&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsLineItem::setExtension(QGraphicsItem::Extension, QVariant const&)</primary></indexterm>QGraphicsLineItem::setExtension(QGraphicsItem::Extension, QVariant const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;36&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsLineItem::extension(QVariant const&) const</primary></indexterm>QGraphicsLineItem::extension(QVariant const&) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QGraphicsPathItem</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QGraphicsPathItem class
is described by <XREF LINKEND="cls-92130-0">
</PARA>
<!--classdata-->
<TABLE id="cls-92130-0">
<TITLE>Primary vtable for QGraphicsPathItem</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QGraphicsPathItem</primary></indexterm>typeinfo for QGraphicsPathItem</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsPathItem::~QGraphicsPathItem()</primary></indexterm>QGraphicsPathItem::~QGraphicsPathItem()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsPathItem::~QGraphicsPathItem()</primary></indexterm>QGraphicsPathItem::~QGraphicsPathItem()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::advance(int)</primary></indexterm>QGraphicsItem::advance(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsPathItem::boundingRect() const</primary></indexterm>QGraphicsPathItem::boundingRect() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsPathItem::shape() const</primary></indexterm>QGraphicsPathItem::shape() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsPathItem::contains(QPointF const&) const</primary></indexterm>QGraphicsPathItem::contains(QPointF const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::collidesWithItem(QGraphicsItem const*, Qt::ItemSelectionMode) const</primary></indexterm>QGraphicsItem::collidesWithItem(QGraphicsItem const*, Qt::ItemSelectionMode) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::collidesWithPath(QPainterPath const&, Qt::ItemSelectionMode) const</primary></indexterm>QGraphicsItem::collidesWithPath(QPainterPath const&, Qt::ItemSelectionMode) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsPathItem::isObscuredBy(QGraphicsItem const*) const</primary></indexterm>QGraphicsPathItem::isObscuredBy(QGraphicsItem const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsPathItem::opaqueArea() const</primary></indexterm>QGraphicsPathItem::opaqueArea() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsPathItem::paint(QPainter*, QStyleOptionGraphicsItem const*, QWidget*)</primary></indexterm>QGraphicsPathItem::paint(QPainter*, QStyleOptionGraphicsItem const*, QWidget*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsPathItem::type() const</primary></indexterm>QGraphicsPathItem::type() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::sceneEventFilter(QGraphicsItem*, QEvent*)</primary></indexterm>QGraphicsItem::sceneEventFilter(QGraphicsItem*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::sceneEvent(QEvent*)</primary></indexterm>QGraphicsItem::sceneEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::contextMenuEvent(QGraphicsSceneContextMenuEvent*)</primary></indexterm>QGraphicsItem::contextMenuEvent(QGraphicsSceneContextMenuEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::dragEnterEvent(QGraphicsSceneDragDropEvent*)</primary></indexterm>QGraphicsItem::dragEnterEvent(QGraphicsSceneDragDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::dragLeaveEvent(QGraphicsSceneDragDropEvent*)</primary></indexterm>QGraphicsItem::dragLeaveEvent(QGraphicsSceneDragDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::dragMoveEvent(QGraphicsSceneDragDropEvent*)</primary></indexterm>QGraphicsItem::dragMoveEvent(QGraphicsSceneDragDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::dropEvent(QGraphicsSceneDragDropEvent*)</primary></indexterm>QGraphicsItem::dropEvent(QGraphicsSceneDragDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::focusInEvent(QFocusEvent*)</primary></indexterm>QGraphicsItem::focusInEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::focusOutEvent(QFocusEvent*)</primary></indexterm>QGraphicsItem::focusOutEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::hoverEnterEvent(QGraphicsSceneHoverEvent*)</primary></indexterm>QGraphicsItem::hoverEnterEvent(QGraphicsSceneHoverEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::hoverMoveEvent(QGraphicsSceneHoverEvent*)</primary></indexterm>QGraphicsItem::hoverMoveEvent(QGraphicsSceneHoverEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::hoverLeaveEvent(QGraphicsSceneHoverEvent*)</primary></indexterm>QGraphicsItem::hoverLeaveEvent(QGraphicsSceneHoverEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::keyPressEvent(QKeyEvent*)</primary></indexterm>QGraphicsItem::keyPressEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::keyReleaseEvent(QKeyEvent*)</primary></indexterm>QGraphicsItem::keyReleaseEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::mousePressEvent(QGraphicsSceneMouseEvent*)</primary></indexterm>QGraphicsItem::mousePressEvent(QGraphicsSceneMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::mouseMoveEvent(QGraphicsSceneMouseEvent*)</primary></indexterm>QGraphicsItem::mouseMoveEvent(QGraphicsSceneMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::mouseReleaseEvent(QGraphicsSceneMouseEvent*)</primary></indexterm>QGraphicsItem::mouseReleaseEvent(QGraphicsSceneMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::mouseDoubleClickEvent(QGraphicsSceneMouseEvent*)</primary></indexterm>QGraphicsItem::mouseDoubleClickEvent(QGraphicsSceneMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::wheelEvent(QGraphicsSceneWheelEvent*)</primary></indexterm>QGraphicsItem::wheelEvent(QGraphicsSceneWheelEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::inputMethodEvent(QInputMethodEvent*)</primary></indexterm>QGraphicsItem::inputMethodEvent(QInputMethodEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::inputMethodQuery(Qt::InputMethodQuery) const</primary></indexterm>QGraphicsItem::inputMethodQuery(Qt::InputMethodQuery) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;33&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::itemChange(QGraphicsItem::GraphicsItemChange, QVariant const&)</primary></indexterm>QGraphicsItem::itemChange(QGraphicsItem::GraphicsItemChange, QVariant const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;34&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsPathItem::supportsExtension(QGraphicsItem::Extension) const</primary></indexterm>QGraphicsPathItem::supportsExtension(QGraphicsItem::Extension) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;35&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsPathItem::setExtension(QGraphicsItem::Extension, QVariant const&)</primary></indexterm>QGraphicsPathItem::setExtension(QGraphicsItem::Extension, QVariant const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;36&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsPathItem::extension(QVariant const&) const</primary></indexterm>QGraphicsPathItem::extension(QVariant const&) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QGraphicsPixmapItem</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QGraphicsPixmapItem class
is described by <XREF LINKEND="cls-92131-0">
</PARA>
<!--classdata-->
<TABLE id="cls-92131-0">
<TITLE>Primary vtable for QGraphicsPixmapItem</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QGraphicsPixmapItem</primary></indexterm>typeinfo for QGraphicsPixmapItem</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsPixmapItem::~QGraphicsPixmapItem()</primary></indexterm>QGraphicsPixmapItem::~QGraphicsPixmapItem()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsPixmapItem::~QGraphicsPixmapItem()</primary></indexterm>QGraphicsPixmapItem::~QGraphicsPixmapItem()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::advance(int)</primary></indexterm>QGraphicsItem::advance(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsPixmapItem::boundingRect() const</primary></indexterm>QGraphicsPixmapItem::boundingRect() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsPixmapItem::shape() const</primary></indexterm>QGraphicsPixmapItem::shape() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsPixmapItem::contains(QPointF const&) const</primary></indexterm>QGraphicsPixmapItem::contains(QPointF const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::collidesWithItem(QGraphicsItem const*, Qt::ItemSelectionMode) const</primary></indexterm>QGraphicsItem::collidesWithItem(QGraphicsItem const*, Qt::ItemSelectionMode) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::collidesWithPath(QPainterPath const&, Qt::ItemSelectionMode) const</primary></indexterm>QGraphicsItem::collidesWithPath(QPainterPath const&, Qt::ItemSelectionMode) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsPixmapItem::isObscuredBy(QGraphicsItem const*) const</primary></indexterm>QGraphicsPixmapItem::isObscuredBy(QGraphicsItem const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsPixmapItem::opaqueArea() const</primary></indexterm>QGraphicsPixmapItem::opaqueArea() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsPixmapItem::paint(QPainter*, QStyleOptionGraphicsItem const*, QWidget*)</primary></indexterm>QGraphicsPixmapItem::paint(QPainter*, QStyleOptionGraphicsItem const*, QWidget*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsPixmapItem::type() const</primary></indexterm>QGraphicsPixmapItem::type() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::sceneEventFilter(QGraphicsItem*, QEvent*)</primary></indexterm>QGraphicsItem::sceneEventFilter(QGraphicsItem*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::sceneEvent(QEvent*)</primary></indexterm>QGraphicsItem::sceneEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::contextMenuEvent(QGraphicsSceneContextMenuEvent*)</primary></indexterm>QGraphicsItem::contextMenuEvent(QGraphicsSceneContextMenuEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::dragEnterEvent(QGraphicsSceneDragDropEvent*)</primary></indexterm>QGraphicsItem::dragEnterEvent(QGraphicsSceneDragDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::dragLeaveEvent(QGraphicsSceneDragDropEvent*)</primary></indexterm>QGraphicsItem::dragLeaveEvent(QGraphicsSceneDragDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::dragMoveEvent(QGraphicsSceneDragDropEvent*)</primary></indexterm>QGraphicsItem::dragMoveEvent(QGraphicsSceneDragDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::dropEvent(QGraphicsSceneDragDropEvent*)</primary></indexterm>QGraphicsItem::dropEvent(QGraphicsSceneDragDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::focusInEvent(QFocusEvent*)</primary></indexterm>QGraphicsItem::focusInEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::focusOutEvent(QFocusEvent*)</primary></indexterm>QGraphicsItem::focusOutEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::hoverEnterEvent(QGraphicsSceneHoverEvent*)</primary></indexterm>QGraphicsItem::hoverEnterEvent(QGraphicsSceneHoverEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::hoverMoveEvent(QGraphicsSceneHoverEvent*)</primary></indexterm>QGraphicsItem::hoverMoveEvent(QGraphicsSceneHoverEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::hoverLeaveEvent(QGraphicsSceneHoverEvent*)</primary></indexterm>QGraphicsItem::hoverLeaveEvent(QGraphicsSceneHoverEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::keyPressEvent(QKeyEvent*)</primary></indexterm>QGraphicsItem::keyPressEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::keyReleaseEvent(QKeyEvent*)</primary></indexterm>QGraphicsItem::keyReleaseEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::mousePressEvent(QGraphicsSceneMouseEvent*)</primary></indexterm>QGraphicsItem::mousePressEvent(QGraphicsSceneMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::mouseMoveEvent(QGraphicsSceneMouseEvent*)</primary></indexterm>QGraphicsItem::mouseMoveEvent(QGraphicsSceneMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::mouseReleaseEvent(QGraphicsSceneMouseEvent*)</primary></indexterm>QGraphicsItem::mouseReleaseEvent(QGraphicsSceneMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::mouseDoubleClickEvent(QGraphicsSceneMouseEvent*)</primary></indexterm>QGraphicsItem::mouseDoubleClickEvent(QGraphicsSceneMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::wheelEvent(QGraphicsSceneWheelEvent*)</primary></indexterm>QGraphicsItem::wheelEvent(QGraphicsSceneWheelEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::inputMethodEvent(QInputMethodEvent*)</primary></indexterm>QGraphicsItem::inputMethodEvent(QInputMethodEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::inputMethodQuery(Qt::InputMethodQuery) const</primary></indexterm>QGraphicsItem::inputMethodQuery(Qt::InputMethodQuery) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;33&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::itemChange(QGraphicsItem::GraphicsItemChange, QVariant const&)</primary></indexterm>QGraphicsItem::itemChange(QGraphicsItem::GraphicsItemChange, QVariant const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;34&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsPixmapItem::supportsExtension(QGraphicsItem::Extension) const</primary></indexterm>QGraphicsPixmapItem::supportsExtension(QGraphicsItem::Extension) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;35&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsPixmapItem::setExtension(QGraphicsItem::Extension, QVariant const&)</primary></indexterm>QGraphicsPixmapItem::setExtension(QGraphicsItem::Extension, QVariant const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;36&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsPixmapItem::extension(QVariant const&) const</primary></indexterm>QGraphicsPixmapItem::extension(QVariant const&) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QGraphicsPolygonItem</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QGraphicsPolygonItem class
is described by <XREF LINKEND="cls-92132-0">
</PARA>
<!--classdata-->
<TABLE id="cls-92132-0">
<TITLE>Primary vtable for QGraphicsPolygonItem</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QGraphicsPolygonItem</primary></indexterm>typeinfo for QGraphicsPolygonItem</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsPolygonItem::~QGraphicsPolygonItem()</primary></indexterm>QGraphicsPolygonItem::~QGraphicsPolygonItem()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsPolygonItem::~QGraphicsPolygonItem()</primary></indexterm>QGraphicsPolygonItem::~QGraphicsPolygonItem()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::advance(int)</primary></indexterm>QGraphicsItem::advance(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsPolygonItem::boundingRect() const</primary></indexterm>QGraphicsPolygonItem::boundingRect() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsPolygonItem::shape() const</primary></indexterm>QGraphicsPolygonItem::shape() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsPolygonItem::contains(QPointF const&) const</primary></indexterm>QGraphicsPolygonItem::contains(QPointF const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::collidesWithItem(QGraphicsItem const*, Qt::ItemSelectionMode) const</primary></indexterm>QGraphicsItem::collidesWithItem(QGraphicsItem const*, Qt::ItemSelectionMode) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::collidesWithPath(QPainterPath const&, Qt::ItemSelectionMode) const</primary></indexterm>QGraphicsItem::collidesWithPath(QPainterPath const&, Qt::ItemSelectionMode) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsPolygonItem::isObscuredBy(QGraphicsItem const*) const</primary></indexterm>QGraphicsPolygonItem::isObscuredBy(QGraphicsItem const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsPolygonItem::opaqueArea() const</primary></indexterm>QGraphicsPolygonItem::opaqueArea() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsPolygonItem::paint(QPainter*, QStyleOptionGraphicsItem const*, QWidget*)</primary></indexterm>QGraphicsPolygonItem::paint(QPainter*, QStyleOptionGraphicsItem const*, QWidget*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsPolygonItem::type() const</primary></indexterm>QGraphicsPolygonItem::type() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::sceneEventFilter(QGraphicsItem*, QEvent*)</primary></indexterm>QGraphicsItem::sceneEventFilter(QGraphicsItem*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::sceneEvent(QEvent*)</primary></indexterm>QGraphicsItem::sceneEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::contextMenuEvent(QGraphicsSceneContextMenuEvent*)</primary></indexterm>QGraphicsItem::contextMenuEvent(QGraphicsSceneContextMenuEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::dragEnterEvent(QGraphicsSceneDragDropEvent*)</primary></indexterm>QGraphicsItem::dragEnterEvent(QGraphicsSceneDragDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::dragLeaveEvent(QGraphicsSceneDragDropEvent*)</primary></indexterm>QGraphicsItem::dragLeaveEvent(QGraphicsSceneDragDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::dragMoveEvent(QGraphicsSceneDragDropEvent*)</primary></indexterm>QGraphicsItem::dragMoveEvent(QGraphicsSceneDragDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::dropEvent(QGraphicsSceneDragDropEvent*)</primary></indexterm>QGraphicsItem::dropEvent(QGraphicsSceneDragDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::focusInEvent(QFocusEvent*)</primary></indexterm>QGraphicsItem::focusInEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::focusOutEvent(QFocusEvent*)</primary></indexterm>QGraphicsItem::focusOutEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::hoverEnterEvent(QGraphicsSceneHoverEvent*)</primary></indexterm>QGraphicsItem::hoverEnterEvent(QGraphicsSceneHoverEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::hoverMoveEvent(QGraphicsSceneHoverEvent*)</primary></indexterm>QGraphicsItem::hoverMoveEvent(QGraphicsSceneHoverEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::hoverLeaveEvent(QGraphicsSceneHoverEvent*)</primary></indexterm>QGraphicsItem::hoverLeaveEvent(QGraphicsSceneHoverEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::keyPressEvent(QKeyEvent*)</primary></indexterm>QGraphicsItem::keyPressEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::keyReleaseEvent(QKeyEvent*)</primary></indexterm>QGraphicsItem::keyReleaseEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::mousePressEvent(QGraphicsSceneMouseEvent*)</primary></indexterm>QGraphicsItem::mousePressEvent(QGraphicsSceneMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::mouseMoveEvent(QGraphicsSceneMouseEvent*)</primary></indexterm>QGraphicsItem::mouseMoveEvent(QGraphicsSceneMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::mouseReleaseEvent(QGraphicsSceneMouseEvent*)</primary></indexterm>QGraphicsItem::mouseReleaseEvent(QGraphicsSceneMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::mouseDoubleClickEvent(QGraphicsSceneMouseEvent*)</primary></indexterm>QGraphicsItem::mouseDoubleClickEvent(QGraphicsSceneMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::wheelEvent(QGraphicsSceneWheelEvent*)</primary></indexterm>QGraphicsItem::wheelEvent(QGraphicsSceneWheelEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::inputMethodEvent(QInputMethodEvent*)</primary></indexterm>QGraphicsItem::inputMethodEvent(QInputMethodEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::inputMethodQuery(Qt::InputMethodQuery) const</primary></indexterm>QGraphicsItem::inputMethodQuery(Qt::InputMethodQuery) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;33&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::itemChange(QGraphicsItem::GraphicsItemChange, QVariant const&)</primary></indexterm>QGraphicsItem::itemChange(QGraphicsItem::GraphicsItemChange, QVariant const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;34&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsPolygonItem::supportsExtension(QGraphicsItem::Extension) const</primary></indexterm>QGraphicsPolygonItem::supportsExtension(QGraphicsItem::Extension) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;35&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsPolygonItem::setExtension(QGraphicsItem::Extension, QVariant const&)</primary></indexterm>QGraphicsPolygonItem::setExtension(QGraphicsItem::Extension, QVariant const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;36&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsPolygonItem::extension(QVariant const&) const</primary></indexterm>QGraphicsPolygonItem::extension(QVariant const&) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QGraphicsRectItem</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QGraphicsRectItem class
is described by <XREF LINKEND="cls-92133-0">
</PARA>
<!--classdata-->
<TABLE id="cls-92133-0">
<TITLE>Primary vtable for QGraphicsRectItem</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QGraphicsRectItem</primary></indexterm>typeinfo for QGraphicsRectItem</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsRectItem::~QGraphicsRectItem()</primary></indexterm>QGraphicsRectItem::~QGraphicsRectItem()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsRectItem::~QGraphicsRectItem()</primary></indexterm>QGraphicsRectItem::~QGraphicsRectItem()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::advance(int)</primary></indexterm>QGraphicsItem::advance(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsRectItem::boundingRect() const</primary></indexterm>QGraphicsRectItem::boundingRect() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsRectItem::shape() const</primary></indexterm>QGraphicsRectItem::shape() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsRectItem::contains(QPointF const&) const</primary></indexterm>QGraphicsRectItem::contains(QPointF const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::collidesWithItem(QGraphicsItem const*, Qt::ItemSelectionMode) const</primary></indexterm>QGraphicsItem::collidesWithItem(QGraphicsItem const*, Qt::ItemSelectionMode) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::collidesWithPath(QPainterPath const&, Qt::ItemSelectionMode) const</primary></indexterm>QGraphicsItem::collidesWithPath(QPainterPath const&, Qt::ItemSelectionMode) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsRectItem::isObscuredBy(QGraphicsItem const*) const</primary></indexterm>QGraphicsRectItem::isObscuredBy(QGraphicsItem const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsRectItem::opaqueArea() const</primary></indexterm>QGraphicsRectItem::opaqueArea() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsRectItem::paint(QPainter*, QStyleOptionGraphicsItem const*, QWidget*)</primary></indexterm>QGraphicsRectItem::paint(QPainter*, QStyleOptionGraphicsItem const*, QWidget*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsRectItem::type() const</primary></indexterm>QGraphicsRectItem::type() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::sceneEventFilter(QGraphicsItem*, QEvent*)</primary></indexterm>QGraphicsItem::sceneEventFilter(QGraphicsItem*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::sceneEvent(QEvent*)</primary></indexterm>QGraphicsItem::sceneEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::contextMenuEvent(QGraphicsSceneContextMenuEvent*)</primary></indexterm>QGraphicsItem::contextMenuEvent(QGraphicsSceneContextMenuEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::dragEnterEvent(QGraphicsSceneDragDropEvent*)</primary></indexterm>QGraphicsItem::dragEnterEvent(QGraphicsSceneDragDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::dragLeaveEvent(QGraphicsSceneDragDropEvent*)</primary></indexterm>QGraphicsItem::dragLeaveEvent(QGraphicsSceneDragDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::dragMoveEvent(QGraphicsSceneDragDropEvent*)</primary></indexterm>QGraphicsItem::dragMoveEvent(QGraphicsSceneDragDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::dropEvent(QGraphicsSceneDragDropEvent*)</primary></indexterm>QGraphicsItem::dropEvent(QGraphicsSceneDragDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::focusInEvent(QFocusEvent*)</primary></indexterm>QGraphicsItem::focusInEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::focusOutEvent(QFocusEvent*)</primary></indexterm>QGraphicsItem::focusOutEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::hoverEnterEvent(QGraphicsSceneHoverEvent*)</primary></indexterm>QGraphicsItem::hoverEnterEvent(QGraphicsSceneHoverEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::hoverMoveEvent(QGraphicsSceneHoverEvent*)</primary></indexterm>QGraphicsItem::hoverMoveEvent(QGraphicsSceneHoverEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::hoverLeaveEvent(QGraphicsSceneHoverEvent*)</primary></indexterm>QGraphicsItem::hoverLeaveEvent(QGraphicsSceneHoverEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::keyPressEvent(QKeyEvent*)</primary></indexterm>QGraphicsItem::keyPressEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::keyReleaseEvent(QKeyEvent*)</primary></indexterm>QGraphicsItem::keyReleaseEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::mousePressEvent(QGraphicsSceneMouseEvent*)</primary></indexterm>QGraphicsItem::mousePressEvent(QGraphicsSceneMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::mouseMoveEvent(QGraphicsSceneMouseEvent*)</primary></indexterm>QGraphicsItem::mouseMoveEvent(QGraphicsSceneMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::mouseReleaseEvent(QGraphicsSceneMouseEvent*)</primary></indexterm>QGraphicsItem::mouseReleaseEvent(QGraphicsSceneMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::mouseDoubleClickEvent(QGraphicsSceneMouseEvent*)</primary></indexterm>QGraphicsItem::mouseDoubleClickEvent(QGraphicsSceneMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::wheelEvent(QGraphicsSceneWheelEvent*)</primary></indexterm>QGraphicsItem::wheelEvent(QGraphicsSceneWheelEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::inputMethodEvent(QInputMethodEvent*)</primary></indexterm>QGraphicsItem::inputMethodEvent(QInputMethodEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::inputMethodQuery(Qt::InputMethodQuery) const</primary></indexterm>QGraphicsItem::inputMethodQuery(Qt::InputMethodQuery) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;33&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::itemChange(QGraphicsItem::GraphicsItemChange, QVariant const&)</primary></indexterm>QGraphicsItem::itemChange(QGraphicsItem::GraphicsItemChange, QVariant const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;34&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsRectItem::supportsExtension(QGraphicsItem::Extension) const</primary></indexterm>QGraphicsRectItem::supportsExtension(QGraphicsItem::Extension) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;35&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsRectItem::setExtension(QGraphicsItem::Extension, QVariant const&)</primary></indexterm>QGraphicsRectItem::setExtension(QGraphicsItem::Extension, QVariant const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;36&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsRectItem::extension(QVariant const&) const</primary></indexterm>QGraphicsRectItem::extension(QVariant const&) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QGraphicsScene</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QGraphicsScene class
is described by <XREF LINKEND="cls-92134-0">
</PARA>
<!--classdata-->
<TABLE id="cls-92134-0">
<TITLE>Primary vtable for QGraphicsScene</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QGraphicsScene</primary></indexterm>typeinfo for QGraphicsScene</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsScene::metaObject() const</primary></indexterm>QGraphicsScene::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsScene::qt_metacast(char const*)</primary></indexterm>QGraphicsScene::qt_metacast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsScene::qt_metacall(QMetaObject::Call, int, void**)</primary></indexterm>QGraphicsScene::qt_metacall(QMetaObject::Call, int, void**)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsScene::~QGraphicsScene()</primary></indexterm>QGraphicsScene::~QGraphicsScene()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsScene::~QGraphicsScene()</primary></indexterm>QGraphicsScene::~QGraphicsScene()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsScene::event(QEvent*)</primary></indexterm>QGraphicsScene::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::eventFilter(QObject*, QEvent*)</primary></indexterm>QObject::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QEvent*)</primary></indexterm>QObject::customEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsScene::inputMethodQuery(Qt::InputMethodQuery) const</primary></indexterm>QGraphicsScene::inputMethodQuery(Qt::InputMethodQuery) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsScene::contextMenuEvent(QGraphicsSceneContextMenuEvent*)</primary></indexterm>QGraphicsScene::contextMenuEvent(QGraphicsSceneContextMenuEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsScene::dragEnterEvent(QGraphicsSceneDragDropEvent*)</primary></indexterm>QGraphicsScene::dragEnterEvent(QGraphicsSceneDragDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsScene::dragMoveEvent(QGraphicsSceneDragDropEvent*)</primary></indexterm>QGraphicsScene::dragMoveEvent(QGraphicsSceneDragDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsScene::dragLeaveEvent(QGraphicsSceneDragDropEvent*)</primary></indexterm>QGraphicsScene::dragLeaveEvent(QGraphicsSceneDragDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsScene::dropEvent(QGraphicsSceneDragDropEvent*)</primary></indexterm>QGraphicsScene::dropEvent(QGraphicsSceneDragDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsScene::focusInEvent(QFocusEvent*)</primary></indexterm>QGraphicsScene::focusInEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsScene::focusOutEvent(QFocusEvent*)</primary></indexterm>QGraphicsScene::focusOutEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsScene::helpEvent(QGraphicsSceneHelpEvent*)</primary></indexterm>QGraphicsScene::helpEvent(QGraphicsSceneHelpEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsScene::keyPressEvent(QKeyEvent*)</primary></indexterm>QGraphicsScene::keyPressEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsScene::keyReleaseEvent(QKeyEvent*)</primary></indexterm>QGraphicsScene::keyReleaseEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsScene::mousePressEvent(QGraphicsSceneMouseEvent*)</primary></indexterm>QGraphicsScene::mousePressEvent(QGraphicsSceneMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsScene::mouseMoveEvent(QGraphicsSceneMouseEvent*)</primary></indexterm>QGraphicsScene::mouseMoveEvent(QGraphicsSceneMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsScene::mouseReleaseEvent(QGraphicsSceneMouseEvent*)</primary></indexterm>QGraphicsScene::mouseReleaseEvent(QGraphicsSceneMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsScene::mouseDoubleClickEvent(QGraphicsSceneMouseEvent*)</primary></indexterm>QGraphicsScene::mouseDoubleClickEvent(QGraphicsSceneMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsScene::wheelEvent(QGraphicsSceneWheelEvent*)</primary></indexterm>QGraphicsScene::wheelEvent(QGraphicsSceneWheelEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsScene::inputMethodEvent(QInputMethodEvent*)</primary></indexterm>QGraphicsScene::inputMethodEvent(QInputMethodEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsScene::drawBackground(QPainter*, QRectF const&)</primary></indexterm>QGraphicsScene::drawBackground(QPainter*, QRectF const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsScene::drawForeground(QPainter*, QRectF const&)</primary></indexterm>QGraphicsScene::drawForeground(QPainter*, QRectF const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsScene::drawItems(QPainter*, int, QGraphicsItem**, QStyleOptionGraphicsItem const*, QWidget*)</primary></indexterm>QGraphicsScene::drawItems(QPainter*, int, QGraphicsItem**, QStyleOptionGraphicsItem const*, QWidget*)</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QGraphicsSceneContextMenuEvent</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QGraphicsSceneContextMenuEvent class
is described by <XREF LINKEND="cls-92135-0">
</PARA>
<!--classdata-->
<TABLE id="cls-92135-0">
<TITLE>Primary vtable for QGraphicsSceneContextMenuEvent</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QGraphicsSceneContextMenuEvent</primary></indexterm>typeinfo for QGraphicsSceneContextMenuEvent</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsSceneContextMenuEvent::~QGraphicsSceneContextMenuEvent()</primary></indexterm>QGraphicsSceneContextMenuEvent::~QGraphicsSceneContextMenuEvent()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsSceneContextMenuEvent::~QGraphicsSceneContextMenuEvent()</primary></indexterm>QGraphicsSceneContextMenuEvent::~QGraphicsSceneContextMenuEvent()</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QGraphicsSceneDragDropEvent</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QGraphicsSceneDragDropEvent class
is described by <XREF LINKEND="cls-92136-0">
</PARA>
<!--classdata-->
<TABLE id="cls-92136-0">
<TITLE>Primary vtable for QGraphicsSceneDragDropEvent</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QGraphicsSceneDragDropEvent</primary></indexterm>typeinfo for QGraphicsSceneDragDropEvent</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsSceneDragDropEvent::~QGraphicsSceneDragDropEvent()</primary></indexterm>QGraphicsSceneDragDropEvent::~QGraphicsSceneDragDropEvent()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsSceneDragDropEvent::~QGraphicsSceneDragDropEvent()</primary></indexterm>QGraphicsSceneDragDropEvent::~QGraphicsSceneDragDropEvent()</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QGraphicsSceneEvent</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QGraphicsSceneEvent class
is described by <XREF LINKEND="cls-92137-0">
</PARA>
<!--classdata-->
<TABLE id="cls-92137-0">
<TITLE>Primary vtable for QGraphicsSceneEvent</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QGraphicsSceneEvent</primary></indexterm>typeinfo for QGraphicsSceneEvent</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsSceneEvent::~QGraphicsSceneEvent()</primary></indexterm>QGraphicsSceneEvent::~QGraphicsSceneEvent()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsSceneEvent::~QGraphicsSceneEvent()</primary></indexterm>QGraphicsSceneEvent::~QGraphicsSceneEvent()</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QGraphicsSceneHelpEvent</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QGraphicsSceneHelpEvent class
is described by <XREF LINKEND="cls-92138-0">
</PARA>
<!--classdata-->
<TABLE id="cls-92138-0">
<TITLE>Primary vtable for QGraphicsSceneHelpEvent</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QGraphicsSceneHelpEvent</primary></indexterm>typeinfo for QGraphicsSceneHelpEvent</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsSceneHelpEvent::~QGraphicsSceneHelpEvent()</primary></indexterm>QGraphicsSceneHelpEvent::~QGraphicsSceneHelpEvent()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsSceneHelpEvent::~QGraphicsSceneHelpEvent()</primary></indexterm>QGraphicsSceneHelpEvent::~QGraphicsSceneHelpEvent()</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QGraphicsSceneHoverEvent</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QGraphicsSceneHoverEvent class
is described by <XREF LINKEND="cls-92139-0">
</PARA>
<!--classdata-->
<TABLE id="cls-92139-0">
<TITLE>Primary vtable for QGraphicsSceneHoverEvent</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QGraphicsSceneHoverEvent</primary></indexterm>typeinfo for QGraphicsSceneHoverEvent</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsSceneHoverEvent::~QGraphicsSceneHoverEvent()</primary></indexterm>QGraphicsSceneHoverEvent::~QGraphicsSceneHoverEvent()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsSceneHoverEvent::~QGraphicsSceneHoverEvent()</primary></indexterm>QGraphicsSceneHoverEvent::~QGraphicsSceneHoverEvent()</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QGraphicsSceneMouseEvent</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QGraphicsSceneMouseEvent class
is described by <XREF LINKEND="cls-92140-0">
</PARA>
<!--classdata-->
<TABLE id="cls-92140-0">
<TITLE>Primary vtable for QGraphicsSceneMouseEvent</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QGraphicsSceneMouseEvent</primary></indexterm>typeinfo for QGraphicsSceneMouseEvent</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsSceneMouseEvent::~QGraphicsSceneMouseEvent()</primary></indexterm>QGraphicsSceneMouseEvent::~QGraphicsSceneMouseEvent()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsSceneMouseEvent::~QGraphicsSceneMouseEvent()</primary></indexterm>QGraphicsSceneMouseEvent::~QGraphicsSceneMouseEvent()</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QGraphicsSceneWheelEvent</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QGraphicsSceneWheelEvent class
is described by <XREF LINKEND="cls-92141-0">
</PARA>
<!--classdata-->
<TABLE id="cls-92141-0">
<TITLE>Primary vtable for QGraphicsSceneWheelEvent</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QGraphicsSceneWheelEvent</primary></indexterm>typeinfo for QGraphicsSceneWheelEvent</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsSceneWheelEvent::~QGraphicsSceneWheelEvent()</primary></indexterm>QGraphicsSceneWheelEvent::~QGraphicsSceneWheelEvent()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsSceneWheelEvent::~QGraphicsSceneWheelEvent()</primary></indexterm>QGraphicsSceneWheelEvent::~QGraphicsSceneWheelEvent()</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QGraphicsSimpleTextItem</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QGraphicsSimpleTextItem class
is described by <XREF LINKEND="cls-92142-0">
</PARA>
<!--classdata-->
<TABLE id="cls-92142-0">
<TITLE>Primary vtable for QGraphicsSimpleTextItem</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QGraphicsSimpleTextItem</primary></indexterm>typeinfo for QGraphicsSimpleTextItem</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsSimpleTextItem::~QGraphicsSimpleTextItem()</primary></indexterm>QGraphicsSimpleTextItem::~QGraphicsSimpleTextItem()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsSimpleTextItem::~QGraphicsSimpleTextItem()</primary></indexterm>QGraphicsSimpleTextItem::~QGraphicsSimpleTextItem()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::advance(int)</primary></indexterm>QGraphicsItem::advance(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsSimpleTextItem::boundingRect() const</primary></indexterm>QGraphicsSimpleTextItem::boundingRect() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsSimpleTextItem::shape() const</primary></indexterm>QGraphicsSimpleTextItem::shape() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsSimpleTextItem::contains(QPointF const&) const</primary></indexterm>QGraphicsSimpleTextItem::contains(QPointF const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::collidesWithItem(QGraphicsItem const*, Qt::ItemSelectionMode) const</primary></indexterm>QGraphicsItem::collidesWithItem(QGraphicsItem const*, Qt::ItemSelectionMode) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::collidesWithPath(QPainterPath const&, Qt::ItemSelectionMode) const</primary></indexterm>QGraphicsItem::collidesWithPath(QPainterPath const&, Qt::ItemSelectionMode) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsSimpleTextItem::isObscuredBy(QGraphicsItem const*) const</primary></indexterm>QGraphicsSimpleTextItem::isObscuredBy(QGraphicsItem const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsSimpleTextItem::opaqueArea() const</primary></indexterm>QGraphicsSimpleTextItem::opaqueArea() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsSimpleTextItem::paint(QPainter*, QStyleOptionGraphicsItem const*, QWidget*)</primary></indexterm>QGraphicsSimpleTextItem::paint(QPainter*, QStyleOptionGraphicsItem const*, QWidget*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsSimpleTextItem::type() const</primary></indexterm>QGraphicsSimpleTextItem::type() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::sceneEventFilter(QGraphicsItem*, QEvent*)</primary></indexterm>QGraphicsItem::sceneEventFilter(QGraphicsItem*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::sceneEvent(QEvent*)</primary></indexterm>QGraphicsItem::sceneEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::contextMenuEvent(QGraphicsSceneContextMenuEvent*)</primary></indexterm>QGraphicsItem::contextMenuEvent(QGraphicsSceneContextMenuEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::dragEnterEvent(QGraphicsSceneDragDropEvent*)</primary></indexterm>QGraphicsItem::dragEnterEvent(QGraphicsSceneDragDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::dragLeaveEvent(QGraphicsSceneDragDropEvent*)</primary></indexterm>QGraphicsItem::dragLeaveEvent(QGraphicsSceneDragDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::dragMoveEvent(QGraphicsSceneDragDropEvent*)</primary></indexterm>QGraphicsItem::dragMoveEvent(QGraphicsSceneDragDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::dropEvent(QGraphicsSceneDragDropEvent*)</primary></indexterm>QGraphicsItem::dropEvent(QGraphicsSceneDragDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::focusInEvent(QFocusEvent*)</primary></indexterm>QGraphicsItem::focusInEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::focusOutEvent(QFocusEvent*)</primary></indexterm>QGraphicsItem::focusOutEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::hoverEnterEvent(QGraphicsSceneHoverEvent*)</primary></indexterm>QGraphicsItem::hoverEnterEvent(QGraphicsSceneHoverEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::hoverMoveEvent(QGraphicsSceneHoverEvent*)</primary></indexterm>QGraphicsItem::hoverMoveEvent(QGraphicsSceneHoverEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::hoverLeaveEvent(QGraphicsSceneHoverEvent*)</primary></indexterm>QGraphicsItem::hoverLeaveEvent(QGraphicsSceneHoverEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::keyPressEvent(QKeyEvent*)</primary></indexterm>QGraphicsItem::keyPressEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::keyReleaseEvent(QKeyEvent*)</primary></indexterm>QGraphicsItem::keyReleaseEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::mousePressEvent(QGraphicsSceneMouseEvent*)</primary></indexterm>QGraphicsItem::mousePressEvent(QGraphicsSceneMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::mouseMoveEvent(QGraphicsSceneMouseEvent*)</primary></indexterm>QGraphicsItem::mouseMoveEvent(QGraphicsSceneMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::mouseReleaseEvent(QGraphicsSceneMouseEvent*)</primary></indexterm>QGraphicsItem::mouseReleaseEvent(QGraphicsSceneMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::mouseDoubleClickEvent(QGraphicsSceneMouseEvent*)</primary></indexterm>QGraphicsItem::mouseDoubleClickEvent(QGraphicsSceneMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::wheelEvent(QGraphicsSceneWheelEvent*)</primary></indexterm>QGraphicsItem::wheelEvent(QGraphicsSceneWheelEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::inputMethodEvent(QInputMethodEvent*)</primary></indexterm>QGraphicsItem::inputMethodEvent(QInputMethodEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::inputMethodQuery(Qt::InputMethodQuery) const</primary></indexterm>QGraphicsItem::inputMethodQuery(Qt::InputMethodQuery) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;33&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsItem::itemChange(QGraphicsItem::GraphicsItemChange, QVariant const&)</primary></indexterm>QGraphicsItem::itemChange(QGraphicsItem::GraphicsItemChange, QVariant const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;34&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsSimpleTextItem::supportsExtension(QGraphicsItem::Extension) const</primary></indexterm>QGraphicsSimpleTextItem::supportsExtension(QGraphicsItem::Extension) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;35&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsSimpleTextItem::setExtension(QGraphicsItem::Extension, QVariant const&)</primary></indexterm>QGraphicsSimpleTextItem::setExtension(QGraphicsItem::Extension, QVariant const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;36&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGraphicsSimpleTextItem::extension(QVariant const&) const</primary></indexterm>QGraphicsSimpleTextItem::extension(QVariant const&) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QStandardItem</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QStandardItem class
is described by <XREF LINKEND="cls-92146-0">
</PARA>
<!--classdata-->
<TABLE id="cls-92146-0">
<TITLE>Primary vtable for QStandardItem</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QStandardItem</primary></indexterm>typeinfo for QStandardItem</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStandardItem::~QStandardItem()</primary></indexterm>QStandardItem::~QStandardItem()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStandardItem::~QStandardItem()</primary></indexterm>QStandardItem::~QStandardItem()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStandardItem::data(int) const</primary></indexterm>QStandardItem::data(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStandardItem::setData(QVariant const&, int)</primary></indexterm>QStandardItem::setData(QVariant const&, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStandardItem::clone() const</primary></indexterm>QStandardItem::clone() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStandardItem::type() const</primary></indexterm>QStandardItem::type() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStandardItem::read(QDataStream&)</primary></indexterm>QStandardItem::read(QDataStream&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStandardItem::write(QDataStream&) const</primary></indexterm>QStandardItem::write(QDataStream&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStandardItem::operator&lt;(QStandardItem const&) const</primary></indexterm>QStandardItem::operator&lt;(QStandardItem const&) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QSystemTrayIcon</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QSystemTrayIcon class
is described by <XREF LINKEND="cls-92147-0">
</PARA>
<!--classdata-->
<TABLE id="cls-92147-0">
<TITLE>Primary vtable for QSystemTrayIcon</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QSystemTrayIcon</primary></indexterm>typeinfo for QSystemTrayIcon</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSystemTrayIcon::metaObject() const</primary></indexterm>QSystemTrayIcon::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSystemTrayIcon::qt_metacast(char const*)</primary></indexterm>QSystemTrayIcon::qt_metacast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSystemTrayIcon::qt_metacall(QMetaObject::Call, int, void**)</primary></indexterm>QSystemTrayIcon::qt_metacall(QMetaObject::Call, int, void**)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSystemTrayIcon::~QSystemTrayIcon()</primary></indexterm>QSystemTrayIcon::~QSystemTrayIcon()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSystemTrayIcon::~QSystemTrayIcon()</primary></indexterm>QSystemTrayIcon::~QSystemTrayIcon()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSystemTrayIcon::event(QEvent*)</primary></indexterm>QSystemTrayIcon::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::eventFilter(QObject*, QEvent*)</primary></indexterm>QObject::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QEvent*)</primary></indexterm>QObject::customEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QUndoCommand</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QUndoCommand class
is described by <XREF LINKEND="cls-92149-0">
</PARA>
<!--classdata-->
<TABLE id="cls-92149-0">
<TITLE>Primary vtable for QUndoCommand</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QUndoCommand</primary></indexterm>typeinfo for QUndoCommand</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QUndoCommand::~QUndoCommand()</primary></indexterm>QUndoCommand::~QUndoCommand()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QUndoCommand::~QUndoCommand()</primary></indexterm>QUndoCommand::~QUndoCommand()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QUndoCommand::undo()</primary></indexterm>QUndoCommand::undo()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QUndoCommand::redo()</primary></indexterm>QUndoCommand::redo()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QUndoCommand::id() const</primary></indexterm>QUndoCommand::id() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QUndoCommand::mergeWith(QUndoCommand const*)</primary></indexterm>QUndoCommand::mergeWith(QUndoCommand const*)</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QUndoStack</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QUndoStack class
is described by <XREF LINKEND="cls-92151-0">
</PARA>
<!--classdata-->
<TABLE id="cls-92151-0">
<TITLE>Primary vtable for QUndoStack</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QUndoStack</primary></indexterm>typeinfo for QUndoStack</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QUndoStack::metaObject() const</primary></indexterm>QUndoStack::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QUndoStack::qt_metacast(char const*)</primary></indexterm>QUndoStack::qt_metacast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QUndoStack::qt_metacall(QMetaObject::Call, int, void**)</primary></indexterm>QUndoStack::qt_metacall(QMetaObject::Call, int, void**)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QUndoStack::~QUndoStack()</primary></indexterm>QUndoStack::~QUndoStack()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QUndoStack::~QUndoStack()</primary></indexterm>QUndoStack::~QUndoStack()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::event(QEvent*)</primary></indexterm>QObject::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::eventFilter(QObject*, QEvent*)</primary></indexterm>QObject::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QEvent*)</primary></indexterm>QObject::customEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QWidgetAction</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QWidgetAction class
is described by <XREF LINKEND="cls-92153-0">
</PARA>
<!--classdata-->
<TABLE id="cls-92153-0">
<TITLE>Primary vtable for QWidgetAction</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QWidgetAction</primary></indexterm>typeinfo for QWidgetAction</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidgetAction::metaObject() const</primary></indexterm>QWidgetAction::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidgetAction::qt_metacast(char const*)</primary></indexterm>QWidgetAction::qt_metacast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidgetAction::qt_metacall(QMetaObject::Call, int, void**)</primary></indexterm>QWidgetAction::qt_metacall(QMetaObject::Call, int, void**)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidgetAction::~QWidgetAction()</primary></indexterm>QWidgetAction::~QWidgetAction()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidgetAction::~QWidgetAction()</primary></indexterm>QWidgetAction::~QWidgetAction()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidgetAction::event(QEvent*)</primary></indexterm>QWidgetAction::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::eventFilter(QObject*, QEvent*)</primary></indexterm>QObject::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QEvent*)</primary></indexterm>QObject::customEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidgetAction::createWidget(QWidget*)</primary></indexterm>QWidgetAction::createWidget(QWidget*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidgetAction::deleteWidget(QWidget*)</primary></indexterm>QWidgetAction::deleteWidget(QWidget*)</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Interfaces for QtGui</TITLE>
<PARA>
An LSB conforming implementation shall provide the architecture specific functions
for QtGui specified in <XREF linkend="tbl-libQtGui-qtgui-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<TABLE id="tbl-libQtGui-qtgui-ints">
<TITLE>libQtGui - QtGui Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>_ZThn16_N10QBoxLayout10invalidateEv</primary></indexterm>_ZThn16_N10QBoxLayout10invalidateEv <LINK LINKEND="REFSTD.libQtGui.1">[CXXABI]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn16_N10QBoxLayout11setGeometryERK5QRect</primary></indexterm>_ZThn16_N10QBoxLayout11setGeometryERK5QRect <LINK LINKEND="REFSTD.libQtGui.1">[CXXABI]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn16_N10QBoxLayoutD0Ev</primary></indexterm>_ZThn16_N10QBoxLayoutD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[CXXABI]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn16_N10QBoxLayoutD1Ev</primary></indexterm>_ZThn16_N10QBoxLayoutD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[CXXABI]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn16_N10QLCDNumberD0Ev</primary></indexterm>_ZThn16_N10QLCDNumberD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[CXXABI]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn16_N10QLCDNumberD1Ev</primary></indexterm>_ZThn16_N10QLCDNumberD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[CXXABI]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn16_N10QScrollBarD0Ev</primary></indexterm>_ZThn16_N10QScrollBarD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[CXXABI]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn16_N10QScrollBarD1Ev</primary></indexterm>_ZThn16_N10QScrollBarD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[CXXABI]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn16_N10QStatusBarD0Ev</primary></indexterm>_ZThn16_N10QStatusBarD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[CXXABI]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn16_N10QStatusBarD1Ev</primary></indexterm>_ZThn16_N10QStatusBarD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[CXXABI]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn16_N10QTabWidgetD0Ev</primary></indexterm>_ZThn16_N10QTabWidgetD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[CXXABI]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn16_N10QTabWidgetD1Ev</primary></indexterm>_ZThn16_N10QTabWidgetD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[CXXABI]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn16_N10QTableViewD0Ev</primary></indexterm>_ZThn16_N10QTableViewD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[CXXABI]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn16_N10QTableViewD1Ev</primary></indexterm>_ZThn16_N10QTableViewD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[CXXABI]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn16_N10QWorkspaceD0Ev</primary></indexterm>_ZThn16_N10QWorkspaceD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[CXXABI]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn16_N10QWorkspaceD1Ev</primary></indexterm>_ZThn16_N10QWorkspaceD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[CXXABI]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn16_N11QDockWidgetD0Ev</primary></indexterm>_ZThn16_N11QDockWidgetD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[CXXABI]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn16_N11QDockWidgetD1Ev</primary></indexterm>_ZThn16_N11QDockWidgetD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[CXXABI]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn16_N11QFileDialogD0Ev</primary></indexterm>_ZThn16_N11QFileDialogD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[CXXABI]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn16_N11QFileDialogD1Ev</primary></indexterm>_ZThn16_N11QFileDialogD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[CXXABI]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn16_N11QFocusFrameD0Ev</primary></indexterm>_ZThn16_N11QFocusFrameD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[CXXABI]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn16_N11QFocusFrameD1Ev</primary></indexterm>_ZThn16_N11QFocusFrameD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[CXXABI]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn16_N11QFontDialogD0Ev</primary></indexterm>_ZThn16_N11QFontDialogD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[CXXABI]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn16_N11QFontDialogD1Ev</primary></indexterm>_ZThn16_N11QFontDialogD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[CXXABI]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn16_N11QGridLayout10invalidateEv</primary></indexterm>_ZThn16_N11QGridLayout10invalidateEv <LINK LINKEND="REFSTD.libQtGui.1">[CXXABI]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn16_N11QGridLayout11setGeometryERK5QRect</primary></indexterm>_ZThn16_N11QGridLayout11setGeometryERK5QRect <LINK LINKEND="REFSTD.libQtGui.1">[CXXABI]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn16_N11QGridLayoutD0Ev</primary></indexterm>_ZThn16_N11QGridLayoutD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[CXXABI]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn16_N11QGridLayoutD1Ev</primary></indexterm>_ZThn16_N11QGridLayoutD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[CXXABI]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn16_N11QHBoxLayoutD0Ev</primary></indexterm>_ZThn16_N11QHBoxLayoutD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[CXXABI]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn16_N11QHBoxLayoutD1Ev</primary></indexterm>_ZThn16_N11QHBoxLayoutD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[CXXABI]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn16_N11QHeaderViewD0Ev</primary></indexterm>_ZThn16_N11QHeaderViewD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[CXXABI]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn16_N11QHeaderViewD1Ev</primary></indexterm>_ZThn16_N11QHeaderViewD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[CXXABI]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn16_N11QListWidgetD0Ev</primary></indexterm>_ZThn16_N11QListWidgetD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[CXXABI]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn16_N11QListWidgetD1Ev</primary></indexterm>_ZThn16_N11QListWidgetD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[CXXABI]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn16_N11QMainWindowD0Ev</primary></indexterm>_ZThn16_N11QMainWindowD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[CXXABI]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn16_N11QMainWindowD1Ev</primary></indexterm>_ZThn16_N11QMainWindowD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[CXXABI]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn16_N11QMessageBoxD0Ev</primary></indexterm>_ZThn16_N11QMessageBoxD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[CXXABI]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn16_N11QMessageBoxD1Ev</primary></indexterm>_ZThn16_N11QMessageBoxD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[CXXABI]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn16_N11QPushButtonD0Ev</primary></indexterm>_ZThn16_N11QPushButtonD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[CXXABI]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn16_N11QPushButtonD1Ev</primary></indexterm>_ZThn16_N11QPushButtonD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[CXXABI]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn16_N11QRubberBandD0Ev</primary></indexterm>_ZThn16_N11QRubberBandD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[CXXABI]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn16_N11QRubberBandD1Ev</primary></indexterm>_ZThn16_N11QRubberBandD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[CXXABI]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn16_N11QScrollAreaD0Ev</primary></indexterm>_ZThn16_N11QScrollAreaD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[CXXABI]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn16_N11QScrollAreaD1Ev</primary></indexterm>_ZThn16_N11QScrollAreaD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[CXXABI]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn16_N11QToolButtonD0Ev</primary></indexterm>_ZThn16_N11QToolButtonD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[CXXABI]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn16_N11QToolButtonD1Ev</primary></indexterm>_ZThn16_N11QToolButtonD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[CXXABI]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn16_N11QTreeWidgetD0Ev</primary></indexterm>_ZThn16_N11QTreeWidgetD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[CXXABI]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn16_N11QTreeWidgetD1Ev</primary></indexterm>_ZThn16_N11QTreeWidgetD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[CXXABI]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn16_N11QVBoxLayoutD0Ev</primary></indexterm>_ZThn16_N11QVBoxLayoutD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[CXXABI]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn16_N11QVBoxLayoutD1Ev</primary></indexterm>_ZThn16_N11QVBoxLayoutD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[CXXABI]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn16_N12QColorDialogD0Ev</primary></indexterm>_ZThn16_N12QColorDialogD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[CXXABI]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn16_N12QColorDialogD1Ev</primary></indexterm>_ZThn16_N12QColorDialogD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[CXXABI]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn16_N12QInputDialogD0Ev</primary></indexterm>_ZThn16_N12QInputDialogD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[CXXABI]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn16_N12QInputDialogD1Ev</primary></indexterm>_ZThn16_N12QInputDialogD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[CXXABI]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn16_N12QPrintDialogD0Ev</primary></indexterm>_ZThn16_N12QPrintDialogD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[CXXABI]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn16_N12QPrintDialogD1Ev</primary></indexterm>_ZThn16_N12QPrintDialogD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[CXXABI]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn16_N12QStylePluginD0Ev</primary></indexterm>_ZThn16_N12QStylePluginD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[CXXABI]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn16_N12QStylePluginD1Ev</primary></indexterm>_ZThn16_N12QStylePluginD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[CXXABI]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn16_N12QTableWidgetD0Ev</primary></indexterm>_ZThn16_N12QTableWidgetD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[CXXABI]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn16_N12QTableWidgetD1Ev</primary></indexterm>_ZThn16_N12QTableWidgetD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[CXXABI]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn16_N12QTextBrowserD0Ev</primary></indexterm>_ZThn16_N12QTextBrowserD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[CXXABI]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn16_N12QTextBrowserD1Ev</primary></indexterm>_ZThn16_N12QTextBrowserD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[CXXABI]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn16_N13QErrorMessageD0Ev</primary></indexterm>_ZThn16_N13QErrorMessageD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[CXXABI]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn16_N13QErrorMessageD1Ev</primary></indexterm>_ZThn16_N13QErrorMessageD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[CXXABI]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn16_N13QSplashScreenD0Ev</primary></indexterm>_ZThn16_N13QSplashScreenD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[CXXABI]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn16_N13QSplashScreenD1Ev</primary></indexterm>_ZThn16_N13QSplashScreenD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[CXXABI]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn16_N14QDesktopWidgetD0Ev</primary></indexterm>_ZThn16_N14QDesktopWidgetD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[CXXABI]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn16_N14QDesktopWidgetD1Ev</primary></indexterm>_ZThn16_N14QDesktopWidgetD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[CXXABI]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn16_N14QImageIOPluginD0Ev</primary></indexterm>_ZThn16_N14QImageIOPluginD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[CXXABI]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn16_N14QImageIOPluginD1Ev</primary></indexterm>_ZThn16_N14QImageIOPluginD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[CXXABI]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn16_N14QStackedLayout11setGeometryERK5QRect</primary></indexterm>_ZThn16_N14QStackedLayout11setGeometryERK5QRect <LINK LINKEND="REFSTD.libQtGui.1">[CXXABI]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn16_N14QStackedLayoutD0Ev</primary></indexterm>_ZThn16_N14QStackedLayoutD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[CXXABI]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn16_N14QStackedLayoutD1Ev</primary></indexterm>_ZThn16_N14QStackedLayoutD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[CXXABI]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn16_N14QStackedWidgetD0Ev</primary></indexterm>_ZThn16_N14QStackedWidgetD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[CXXABI]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn16_N14QStackedWidgetD1Ev</primary></indexterm>_ZThn16_N14QStackedWidgetD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[CXXABI]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn16_N15QAbstractButtonD0Ev</primary></indexterm>_ZThn16_N15QAbstractButtonD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[CXXABI]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn16_N15QAbstractButtonD1Ev</primary></indexterm>_ZThn16_N15QAbstractButtonD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[CXXABI]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn16_N15QAbstractSliderD0Ev</primary></indexterm>_ZThn16_N15QAbstractSliderD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[CXXABI]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn16_N15QAbstractSliderD1Ev</primary></indexterm>_ZThn16_N15QAbstractSliderD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[CXXABI]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn16_N15QProgressDialogD0Ev</primary></indexterm>_ZThn16_N15QProgressDialogD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[CXXABI]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn16_N15QProgressDialogD1Ev</primary></indexterm>_ZThn16_N15QProgressDialogD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[CXXABI]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn16_N15QX11EmbedWidgetD0Ev</primary></indexterm>_ZThn16_N15QX11EmbedWidgetD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[CXXABI]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn16_N15QX11EmbedWidgetD1Ev</primary></indexterm>_ZThn16_N15QX11EmbedWidgetD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[CXXABI]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn16_N16QAbstractSpinBoxD0Ev</primary></indexterm>_ZThn16_N16QAbstractSpinBoxD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[CXXABI]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn16_N16QAbstractSpinBoxD1Ev</primary></indexterm>_ZThn16_N16QAbstractSpinBoxD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[CXXABI]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn16_N17QAbstractItemViewD0Ev</primary></indexterm>_ZThn16_N17QAbstractItemViewD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[CXXABI]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn16_N17QAbstractItemViewD1Ev</primary></indexterm>_ZThn16_N17QAbstractItemViewD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[CXXABI]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn16_N17QAccessiblePluginD0Ev</primary></indexterm>_ZThn16_N17QAccessiblePluginD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[CXXABI]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn16_N17QAccessiblePluginD1Ev</primary></indexterm>_ZThn16_N17QAccessiblePluginD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[CXXABI]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn16_N17QIconEnginePluginD0Ev</primary></indexterm>_ZThn16_N17QIconEnginePluginD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[CXXABI]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn16_N17QIconEnginePluginD1Ev</primary></indexterm>_ZThn16_N17QIconEnginePluginD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[CXXABI]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn16_N17QTextImageHandler10drawObjectEP8QPainterRK6QRectFP13QTextDocumentiRK11QTextFormat</primary></indexterm>_ZThn16_N17QTextImageHandler10drawObjectEP8QPainterRK6QRectFP13QTextDocumentiRK11QTextFormat <LINK LINKEND="REFSTD.libQtGui.1">[CXXABI]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn16_N17QTextImageHandler13intrinsicSizeEP13QTextDocumentiRK11QTextFormat</primary></indexterm>_ZThn16_N17QTextImageHandler13intrinsicSizeEP13QTextDocumentiRK11QTextFormat <LINK LINKEND="REFSTD.libQtGui.1">[CXXABI]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn16_N18QX11EmbedContainerD0Ev</primary></indexterm>_ZThn16_N18QX11EmbedContainerD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[CXXABI]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn16_N18QX11EmbedContainerD1Ev</primary></indexterm>_ZThn16_N18QX11EmbedContainerD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[CXXABI]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn16_N19QAbstractScrollAreaD0Ev</primary></indexterm>_ZThn16_N19QAbstractScrollAreaD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[CXXABI]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn16_N19QAbstractScrollAreaD1Ev</primary></indexterm>_ZThn16_N19QAbstractScrollAreaD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[CXXABI]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn16_N19QInputContextPluginD0Ev</primary></indexterm>_ZThn16_N19QInputContextPluginD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[CXXABI]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn16_N19QInputContextPluginD1Ev</primary></indexterm>_ZThn16_N19QInputContextPluginD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[CXXABI]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn16_N20QPictureFormatPlugin11loadPictureERK7QStringS2_P8QPicture</primary></indexterm>_ZThn16_N20QPictureFormatPlugin11loadPictureERK7QStringS2_P8QPicture <LINK LINKEND="REFSTD.libQtGui.1">[CXXABI]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn16_N20QPictureFormatPlugin11savePictureERK7QStringS2_RK8QPicture</primary></indexterm>_ZThn16_N20QPictureFormatPlugin11savePictureERK7QStringS2_RK8QPicture <LINK LINKEND="REFSTD.libQtGui.1">[CXXABI]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn16_N20QPictureFormatPluginD0Ev</primary></indexterm>_ZThn16_N20QPictureFormatPluginD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[CXXABI]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn16_N20QPictureFormatPluginD1Ev</primary></indexterm>_ZThn16_N20QPictureFormatPluginD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[CXXABI]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn16_N23QAccessibleBridgePluginD0Ev</primary></indexterm>_ZThn16_N23QAccessibleBridgePluginD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[CXXABI]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn16_N23QAccessibleBridgePluginD1Ev</primary></indexterm>_ZThn16_N23QAccessibleBridgePluginD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[CXXABI]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn16_N5QDialD0Ev</primary></indexterm>_ZThn16_N5QDialD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[CXXABI]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn16_N5QDialD1Ev</primary></indexterm>_ZThn16_N5QDialD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[CXXABI]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn16_N5QMenuD0Ev</primary></indexterm>_ZThn16_N5QMenuD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[CXXABI]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn16_N5QMenuD1Ev</primary></indexterm>_ZThn16_N5QMenuD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[CXXABI]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn16_N6QFrameD0Ev</primary></indexterm>_ZThn16_N6QFrameD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[CXXABI]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn16_N6QFrameD1Ev</primary></indexterm>_ZThn16_N6QFrameD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[CXXABI]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn16_N6QLabelD0Ev</primary></indexterm>_ZThn16_N6QLabelD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[CXXABI]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn16_N6QLabelD1Ev</primary></indexterm>_ZThn16_N6QLabelD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[CXXABI]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn16_N7QDialogD0Ev</primary></indexterm>_ZThn16_N7QDialogD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[CXXABI]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn16_N7QDialogD1Ev</primary></indexterm>_ZThn16_N7QDialogD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[CXXABI]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn16_N7QLayout10invalidateEv</primary></indexterm>_ZThn16_N7QLayout10invalidateEv <LINK LINKEND="REFSTD.libQtGui.1">[CXXABI]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn16_N7QLayout6layoutEv</primary></indexterm>_ZThn16_N7QLayout6layoutEv <LINK LINKEND="REFSTD.libQtGui.1">[CXXABI]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn16_N7QLayoutD0Ev</primary></indexterm>_ZThn16_N7QLayoutD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[CXXABI]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn16_N7QLayoutD1Ev</primary></indexterm>_ZThn16_N7QLayoutD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[CXXABI]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn16_N7QSliderD0Ev</primary></indexterm>_ZThn16_N7QSliderD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[CXXABI]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn16_N7QSliderD1Ev</primary></indexterm>_ZThn16_N7QSliderD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[CXXABI]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn16_N7QTabBarD0Ev</primary></indexterm>_ZThn16_N7QTabBarD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[CXXABI]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn16_N7QTabBarD1Ev</primary></indexterm>_ZThn16_N7QTabBarD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[CXXABI]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn16_N7QWidgetD0Ev</primary></indexterm>_ZThn16_N7QWidgetD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[CXXABI]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn16_N7QWidgetD1Ev</primary></indexterm>_ZThn16_N7QWidgetD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[CXXABI]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn16_N8QMenuBarD0Ev</primary></indexterm>_ZThn16_N8QMenuBarD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[CXXABI]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn16_N8QMenuBarD1Ev</primary></indexterm>_ZThn16_N8QMenuBarD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[CXXABI]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn16_N8QToolBarD0Ev</primary></indexterm>_ZThn16_N8QToolBarD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[CXXABI]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn16_N8QToolBarD1Ev</primary></indexterm>_ZThn16_N8QToolBarD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[CXXABI]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn16_N8QToolBoxD0Ev</primary></indexterm>_ZThn16_N8QToolBoxD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[CXXABI]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn16_N8QToolBoxD1Ev</primary></indexterm>_ZThn16_N8QToolBoxD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[CXXABI]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn16_N9QComboBoxD0Ev</primary></indexterm>_ZThn16_N9QComboBoxD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[CXXABI]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn16_N9QComboBoxD1Ev</primary></indexterm>_ZThn16_N9QComboBoxD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[CXXABI]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn16_N9QGroupBoxD0Ev</primary></indexterm>_ZThn16_N9QGroupBoxD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[CXXABI]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn16_N9QGroupBoxD1Ev</primary></indexterm>_ZThn16_N9QGroupBoxD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[CXXABI]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn16_N9QLineEditD0Ev</primary></indexterm>_ZThn16_N9QLineEditD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[CXXABI]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn16_N9QLineEditD1Ev</primary></indexterm>_ZThn16_N9QLineEditD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[CXXABI]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn16_N9QListViewD0Ev</primary></indexterm>_ZThn16_N9QListViewD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[CXXABI]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn16_N9QListViewD1Ev</primary></indexterm>_ZThn16_N9QListViewD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[CXXABI]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn16_N9QSizeGripD0Ev</primary></indexterm>_ZThn16_N9QSizeGripD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[CXXABI]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn16_N9QSizeGripD1Ev</primary></indexterm>_ZThn16_N9QSizeGripD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[CXXABI]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn16_N9QSplitterD0Ev</primary></indexterm>_ZThn16_N9QSplitterD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[CXXABI]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn16_N9QSplitterD1Ev</primary></indexterm>_ZThn16_N9QSplitterD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[CXXABI]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn16_N9QTextEditD0Ev</primary></indexterm>_ZThn16_N9QTextEditD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[CXXABI]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn16_N9QTextEditD1Ev</primary></indexterm>_ZThn16_N9QTextEditD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[CXXABI]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn16_N9QTreeViewD0Ev</primary></indexterm>_ZThn16_N9QTreeViewD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[CXXABI]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn16_N9QTreeViewD1Ev</primary></indexterm>_ZThn16_N9QTreeViewD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[CXXABI]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn16_NK10QBoxLayout11maximumSizeEv</primary></indexterm>_ZThn16_NK10QBoxLayout11maximumSizeEv <LINK LINKEND="REFSTD.libQtGui.1">[CXXABI]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn16_NK10QBoxLayout11minimumSizeEv</primary></indexterm>_ZThn16_NK10QBoxLayout11minimumSizeEv <LINK LINKEND="REFSTD.libQtGui.1">[CXXABI]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn16_NK10QBoxLayout14heightForWidthEi</primary></indexterm>_ZThn16_NK10QBoxLayout14heightForWidthEi <LINK LINKEND="REFSTD.libQtGui.1">[CXXABI]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn16_NK10QBoxLayout17hasHeightForWidthEv</primary></indexterm>_ZThn16_NK10QBoxLayout17hasHeightForWidthEv <LINK LINKEND="REFSTD.libQtGui.1">[CXXABI]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn16_NK10QBoxLayout19expandingDirectionsEv</primary></indexterm>_ZThn16_NK10QBoxLayout19expandingDirectionsEv <LINK LINKEND="REFSTD.libQtGui.1">[CXXABI]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn16_NK10QBoxLayout21minimumHeightForWidthEi</primary></indexterm>_ZThn16_NK10QBoxLayout21minimumHeightForWidthEi <LINK LINKEND="REFSTD.libQtGui.1">[CXXABI]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn16_NK10QBoxLayout8sizeHintEv</primary></indexterm>_ZThn16_NK10QBoxLayout8sizeHintEv <LINK LINKEND="REFSTD.libQtGui.1">[CXXABI]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn16_NK11QGridLayout11maximumSizeEv</primary></indexterm>_ZThn16_NK11QGridLayout11maximumSizeEv <LINK LINKEND="REFSTD.libQtGui.1">[CXXABI]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn16_NK11QGridLayout11minimumSizeEv</primary></indexterm>_ZThn16_NK11QGridLayout11minimumSizeEv <LINK LINKEND="REFSTD.libQtGui.1">[CXXABI]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn16_NK11QGridLayout14heightForWidthEi</primary></indexterm>_ZThn16_NK11QGridLayout14heightForWidthEi <LINK LINKEND="REFSTD.libQtGui.1">[CXXABI]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn16_NK11QGridLayout17hasHeightForWidthEv</primary></indexterm>_ZThn16_NK11QGridLayout17hasHeightForWidthEv <LINK LINKEND="REFSTD.libQtGui.1">[CXXABI]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn16_NK11QGridLayout19expandingDirectionsEv</primary></indexterm>_ZThn16_NK11QGridLayout19expandingDirectionsEv <LINK LINKEND="REFSTD.libQtGui.1">[CXXABI]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn16_NK11QGridLayout21minimumHeightForWidthEi</primary></indexterm>_ZThn16_NK11QGridLayout21minimumHeightForWidthEi <LINK LINKEND="REFSTD.libQtGui.1">[CXXABI]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn16_NK11QGridLayout8sizeHintEv</primary></indexterm>_ZThn16_NK11QGridLayout8sizeHintEv <LINK LINKEND="REFSTD.libQtGui.1">[CXXABI]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn16_NK14QStackedLayout11minimumSizeEv</primary></indexterm>_ZThn16_NK14QStackedLayout11minimumSizeEv <LINK LINKEND="REFSTD.libQtGui.1">[CXXABI]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn16_NK14QStackedLayout8sizeHintEv</primary></indexterm>_ZThn16_NK14QStackedLayout8sizeHintEv <LINK LINKEND="REFSTD.libQtGui.1">[CXXABI]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn16_NK7QLayout11maximumSizeEv</primary></indexterm>_ZThn16_NK7QLayout11maximumSizeEv <LINK LINKEND="REFSTD.libQtGui.1">[CXXABI]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn16_NK7QLayout11minimumSizeEv</primary></indexterm>_ZThn16_NK7QLayout11minimumSizeEv <LINK LINKEND="REFSTD.libQtGui.1">[CXXABI]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn16_NK7QLayout19expandingDirectionsEv</primary></indexterm>_ZThn16_NK7QLayout19expandingDirectionsEv <LINK LINKEND="REFSTD.libQtGui.1">[CXXABI]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn16_NK7QLayout7isEmptyEv</primary></indexterm>_ZThn16_NK7QLayout7isEmptyEv <LINK LINKEND="REFSTD.libQtGui.1">[CXXABI]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn16_NK7QLayout8geometryEv</primary></indexterm>_ZThn16_NK7QLayout8geometryEv <LINK LINKEND="REFSTD.libQtGui.1">[CXXABI]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn16_NK7QWidget11paintEngineEv</primary></indexterm>_ZThn16_NK7QWidget11paintEngineEv <LINK LINKEND="REFSTD.libQtGui.1">[CXXABI]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn16_NK7QWidget6metricEN12QPaintDevice17PaintDeviceMetricE</primary></indexterm>_ZThn16_NK7QWidget6metricEN12QPaintDevice17PaintDeviceMetricE <LINK LINKEND="REFSTD.libQtGui.1">[CXXABI]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn16_NK7QWidget7devTypeEv</primary></indexterm>_ZThn16_NK7QWidget7devTypeEv <LINK LINKEND="REFSTD.libQtGui.1">[CXXABI]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn24_N10QDropEventD0Ev</primary></indexterm>_ZThn24_N10QDropEventD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[CXXABI]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn24_N10QDropEventD1Ev</primary></indexterm>_ZThn24_N10QDropEventD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[CXXABI]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn24_N14QDragMoveEventD0Ev</primary></indexterm>_ZThn24_N14QDragMoveEventD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[CXXABI]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn24_N14QDragMoveEventD1Ev</primary></indexterm>_ZThn24_N14QDragMoveEventD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[CXXABI]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn24_N15QDragEnterEventD0Ev</primary></indexterm>_ZThn24_N15QDragEnterEventD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[CXXABI]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn24_N15QDragEnterEventD1Ev</primary></indexterm>_ZThn24_N15QDragEnterEventD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[CXXABI]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn24_NK10QDropEvent11encodedDataEPKc</primary></indexterm>_ZThn24_NK10QDropEvent11encodedDataEPKc <LINK LINKEND="REFSTD.libQtGui.1">[CXXABI]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn24_NK10QDropEvent6formatEi</primary></indexterm>_ZThn24_NK10QDropEvent6formatEi <LINK LINKEND="REFSTD.libQtGui.1">[CXXABI]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn24_NK10QDropEvent8providesEPKc</primary></indexterm>_ZThn24_NK10QDropEvent8providesEPKc <LINK LINKEND="REFSTD.libQtGui.1">[CXXABI]</LINK></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>
</SECT2>
</SECT1>
<SECT1 ID=libQtGui-ddefs>
<TITLE>Data Definitions for libQtGui</TITLE>
<PARA>
This section defines global identifiers and their values that are associated
with interfaces contained in libQtGui.
These definitions are organized into groups that
correspond to system headers. This convention is used as a
convenience for the reader, and does not imply the existence
of these headers, or their content.
Where an interface is defined as requiring a particular system header file
all of the data definitions for that system header file presented here shall be in effect.
</PARA>
<PARA>
This section gives data definitions to promote binary application
portability, not to repeat source interface definitions available
elsewhere. System providers and application developers should use this ABI
to supplement - not to replace - source interface definition specifications.
</PARA>
<PARA>
This specification uses the <XREF LINKEND='std.ISOC99'> C Language as the reference programming language, and data definitions are specified in ISO C format. The C language is used here as a convenient notation. Using a C language description of these data objects does not preclude their use by other programming languages.</PARA>
<SECT2>
<TITLE>QtGui/qabstractbutton.h</TITLE>
<PARA>
</PARA>
<SCREEN>

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qabstractitemdelegate.h</TITLE>
<PARA>
</PARA>
<SCREEN>

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qabstractitemview.h</TITLE>
<PARA>
</PARA>
<SCREEN>

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qabstractpagesetupdialog.h</TITLE>
<PARA>
</PARA>
<SCREEN>

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qabstractprintdialog.h</TITLE>
<PARA>
</PARA>
<SCREEN>

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qabstractproxymodel.h</TITLE>
<PARA>
</PARA>
<SCREEN>

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qabstractscrollarea.h</TITLE>
<PARA>
</PARA>
<SCREEN>

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qabstractslider.h</TITLE>
<PARA>
</PARA>
<SCREEN>

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qabstractspinbox.h</TITLE>
<PARA>
</PARA>
<SCREEN>

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qabstracttextdocumentlayout.h</TITLE>
<PARA>
</PARA>
<SCREEN>

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qaccessible.h</TITLE>
<PARA>
</PARA>
<SCREEN>

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qaccessiblebridge.h</TITLE>
<PARA>
</PARA>
<SCREEN>

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qaccessibleobject.h</TITLE>
<PARA>
</PARA>
<SCREEN>

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qaccessibleplugin.h</TITLE>
<PARA>
</PARA>
<SCREEN>

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qaccessiblewidget.h</TITLE>
<PARA>
</PARA>
<SCREEN>

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qaction.h</TITLE>
<PARA>
</PARA>
<SCREEN>

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qactiongroup.h</TITLE>
<PARA>
</PARA>
<SCREEN>

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qapplication.h</TITLE>
<PARA>
</PARA>
<SCREEN>

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qbitmap.h</TITLE>
<PARA>
</PARA>
<SCREEN>

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qboxlayout.h</TITLE>
<PARA>
</PARA>
<SCREEN>

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qbrush.h</TITLE>
<PARA>
</PARA>
<SCREEN>

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qbuttongroup.h</TITLE>
<PARA>
</PARA>
<SCREEN>

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qcdestyle.h</TITLE>
<PARA>
</PARA>
<SCREEN>

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qcheckbox.h</TITLE>
<PARA>
</PARA>
<SCREEN>

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qclipboard.h</TITLE>
<PARA>
</PARA>
<SCREEN>

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qcolor.h</TITLE>
<PARA>
</PARA>
<SCREEN>

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qcolordialog.h</TITLE>
<PARA>
</PARA>
<SCREEN>

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qcolormap.h</TITLE>
<PARA>
</PARA>
<SCREEN>

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qcombobox.h</TITLE>
<PARA>
</PARA>
<SCREEN>

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qcommonstyle.h</TITLE>
<PARA>
</PARA>
<SCREEN>

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qcursor.h</TITLE>
<PARA>
</PARA>
<SCREEN>

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qdatetimeedit.h</TITLE>
<PARA>
</PARA>
<SCREEN>

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qdesktopwidget.h</TITLE>
<PARA>
</PARA>
<SCREEN>

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qdial.h</TITLE>
<PARA>
</PARA>
<SCREEN>

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qdialog.h</TITLE>
<PARA>
</PARA>
<SCREEN>

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qdirmodel.h</TITLE>
<PARA>
</PARA>
<SCREEN>

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qdockwidget.h</TITLE>
<PARA>
</PARA>
<SCREEN>

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qdrag.h</TITLE>
<PARA>
</PARA>
<SCREEN>

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
</SCREEN>
</SECT2>
<!-- empty header file IA64/QtGui/qdrawutil.h -->
<SECT2>
<TITLE>QtGui/qerrormessage.h</TITLE>
<PARA>
</PARA>
<SCREEN>

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qevent.h</TITLE>
<PARA>
</PARA>
<SCREEN>

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qfiledialog.h</TITLE>
<PARA>
</PARA>
<SCREEN>

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qfocusframe.h</TITLE>
<PARA>
</PARA>
<SCREEN>

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qfont.h</TITLE>
<PARA>
</PARA>
<SCREEN>

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qfontdatabase.h</TITLE>
<PARA>
</PARA>
<SCREEN>

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qfontdialog.h</TITLE>
<PARA>
</PARA>
<SCREEN>

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qfontinfo.h</TITLE>
<PARA>
</PARA>
<SCREEN>

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qfontmetrics.h</TITLE>
<PARA>
</PARA>
<SCREEN>

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qframe.h</TITLE>
<PARA>
</PARA>
<SCREEN>

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qgridlayout.h</TITLE>
<PARA>
</PARA>
<SCREEN>

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qgroupbox.h</TITLE>
<PARA>
</PARA>
<SCREEN>

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qheaderview.h</TITLE>
<PARA>
</PARA>
<SCREEN>

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qicon.h</TITLE>
<PARA>
</PARA>
<SCREEN>

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qiconengine.h</TITLE>
<PARA>
</PARA>
<SCREEN>

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qiconengineplugin.h</TITLE>
<PARA>
</PARA>
<SCREEN>

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qimage.h</TITLE>
<PARA>
</PARA>
<SCREEN>

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qimageiohandler.h</TITLE>
<PARA>
</PARA>
<SCREEN>

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qimagereader.h</TITLE>
<PARA>
</PARA>
<SCREEN>

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qimagewriter.h</TITLE>
<PARA>
</PARA>
<SCREEN>

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qinputcontext.h</TITLE>
<PARA>
</PARA>
<SCREEN>

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qinputcontextfactory.h</TITLE>
<PARA>
</PARA>
<SCREEN>

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qinputcontextplugin.h</TITLE>
<PARA>
</PARA>
<SCREEN>

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qinputdialog.h</TITLE>
<PARA>
</PARA>
<SCREEN>

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qitemdelegate.h</TITLE>
<PARA>
</PARA>
<SCREEN>

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qitemeditorfactory.h</TITLE>
<PARA>
</PARA>
<SCREEN>

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qitemselectionmodel.h</TITLE>
<PARA>
</PARA>
<SCREEN>

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qkeysequence.h</TITLE>
<PARA>
</PARA>
<SCREEN>

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qlabel.h</TITLE>
<PARA>
</PARA>
<SCREEN>

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qlayout.h</TITLE>
<PARA>
</PARA>
<SCREEN>

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qlayoutitem.h</TITLE>
<PARA>
</PARA>
<SCREEN>

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qlcdnumber.h</TITLE>
<PARA>
</PARA>
<SCREEN>

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qlineedit.h</TITLE>
<PARA>
</PARA>
<SCREEN>

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qlistview.h</TITLE>
<PARA>
</PARA>
<SCREEN>

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qlistwidget.h</TITLE>
<PARA>
</PARA>
<SCREEN>

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qmainwindow.h</TITLE>
<PARA>
</PARA>
<SCREEN>

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qmatrix.h</TITLE>
<PARA>
</PARA>
<SCREEN>

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qmenu.h</TITLE>
<PARA>
</PARA>
<SCREEN>

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qmenubar.h</TITLE>
<PARA>
</PARA>
<SCREEN>

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qmenudata.h</TITLE>
<PARA>
</PARA>
<SCREEN>

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qmessagebox.h</TITLE>
<PARA>
</PARA>
<SCREEN>

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qmime.h</TITLE>
<PARA>
</PARA>
<SCREEN>

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qmotifstyle.h</TITLE>
<PARA>
</PARA>
<SCREEN>

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qmovie.h</TITLE>
<PARA>
</PARA>
<SCREEN>

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qpagesetupdialog.h</TITLE>
<PARA>
</PARA>
<SCREEN>

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qpaintdevice.h</TITLE>
<PARA>
</PARA>
<SCREEN>

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qpaintengine.h</TITLE>
<PARA>
</PARA>
<SCREEN>

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qpainter.h</TITLE>
<PARA>
</PARA>
<SCREEN>

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qpainterpath.h</TITLE>
<PARA>
</PARA>
<SCREEN>

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qpalette.h</TITLE>
<PARA>
</PARA>
<SCREEN>

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qpen.h</TITLE>
<PARA>
</PARA>
<SCREEN>

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qpicture.h</TITLE>
<PARA>
</PARA>
<SCREEN>

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qpictureformatplugin.h</TITLE>
<PARA>
</PARA>
<SCREEN>

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qpixmap.h</TITLE>
<PARA>
</PARA>
<SCREEN>

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qpixmapcache.h</TITLE>
<PARA>
</PARA>
<SCREEN>

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qplastiquestyle.h</TITLE>
<PARA>
</PARA>
<SCREEN>

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qpolygon.h</TITLE>
<PARA>
</PARA>
<SCREEN>

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qprintdialog.h</TITLE>
<PARA>
</PARA>
<SCREEN>

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qprintengine.h</TITLE>
<PARA>
</PARA>
<SCREEN>

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qprinter.h</TITLE>
<PARA>
</PARA>
<SCREEN>

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qprogressbar.h</TITLE>
<PARA>
</PARA>
<SCREEN>

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qprogressdialog.h</TITLE>
<PARA>
</PARA>
<SCREEN>

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qproxymodel.h</TITLE>
<PARA>
</PARA>
<SCREEN>

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qpushbutton.h</TITLE>
<PARA>
</PARA>
<SCREEN>

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qradiobutton.h</TITLE>
<PARA>
</PARA>
<SCREEN>

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qregion.h</TITLE>
<PARA>
</PARA>
<SCREEN>

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qrgb.h</TITLE>
<PARA>
</PARA>
<SCREEN>

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qrubberband.h</TITLE>
<PARA>
</PARA>
<SCREEN>

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qscrollarea.h</TITLE>
<PARA>
</PARA>
<SCREEN>

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qscrollbar.h</TITLE>
<PARA>
</PARA>
<SCREEN>

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qsessionmanager.h</TITLE>
<PARA>
</PARA>
<SCREEN>

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qshortcut.h</TITLE>
<PARA>
</PARA>
<SCREEN>

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qsizegrip.h</TITLE>
<PARA>
</PARA>
<SCREEN>

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qsizepolicy.h</TITLE>
<PARA>
</PARA>
<SCREEN>

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qslider.h</TITLE>
<PARA>
</PARA>
<SCREEN>

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qsortfilterproxymodel.h</TITLE>
<PARA>
</PARA>
<SCREEN>

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qsound.h</TITLE>
<PARA>
</PARA>
<SCREEN>

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qspinbox.h</TITLE>
<PARA>
</PARA>
<SCREEN>

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qsplashscreen.h</TITLE>
<PARA>
</PARA>
<SCREEN>

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qsplitter.h</TITLE>
<PARA>
</PARA>
<SCREEN>

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qstackedlayout.h</TITLE>
<PARA>
</PARA>
<SCREEN>

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qstackedwidget.h</TITLE>
<PARA>
</PARA>
<SCREEN>

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qstandarditemmodel.h</TITLE>
<PARA>
</PARA>
<SCREEN>

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qstatusbar.h</TITLE>
<PARA>
</PARA>
<SCREEN>

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qstringlistmodel.h</TITLE>
<PARA>
</PARA>
<SCREEN>

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qstyle.h</TITLE>
<PARA>
</PARA>
<SCREEN>

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qstylefactory.h</TITLE>
<PARA>
</PARA>
<SCREEN>

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qstyleoption.h</TITLE>
<PARA>
</PARA>
<SCREEN>

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qstylepainter.h</TITLE>
<PARA>
</PARA>
<SCREEN>

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qstyleplugin.h</TITLE>
<PARA>
</PARA>
<SCREEN>

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qsyntaxhighlighter.h</TITLE>
<PARA>
</PARA>
<SCREEN>

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qtabbar.h</TITLE>
<PARA>
</PARA>
<SCREEN>

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qtableview.h</TITLE>
<PARA>
</PARA>
<SCREEN>

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qtablewidget.h</TITLE>
<PARA>
</PARA>
<SCREEN>

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qtabwidget.h</TITLE>
<PARA>
</PARA>
<SCREEN>

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qtextbrowser.h</TITLE>
<PARA>
</PARA>
<SCREEN>

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qtextcursor.h</TITLE>
<PARA>
</PARA>
<SCREEN>

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qtextdocument.h</TITLE>
<PARA>
</PARA>
<SCREEN>

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qtextdocumentfragment.h</TITLE>
<PARA>
</PARA>
<SCREEN>

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qtextedit.h</TITLE>
<PARA>
</PARA>
<SCREEN>

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qtextformat.h</TITLE>
<PARA>
</PARA>
<SCREEN>

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qtextlayout.h</TITLE>
<PARA>
</PARA>
<SCREEN>

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qtextlist.h</TITLE>
<PARA>
</PARA>
<SCREEN>

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qtextobject.h</TITLE>
<PARA>
</PARA>
<SCREEN>

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qtextoption.h</TITLE>
<PARA>
</PARA>
<SCREEN>

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qtexttable.h</TITLE>
<PARA>
</PARA>
<SCREEN>

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qtoolbar.h</TITLE>
<PARA>
</PARA>
<SCREEN>

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qtoolbox.h</TITLE>
<PARA>
</PARA>
<SCREEN>

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qtoolbutton.h</TITLE>
<PARA>
</PARA>
<SCREEN>

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qtooltip.h</TITLE>
<PARA>
</PARA>
<SCREEN>

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qtreeview.h</TITLE>
<PARA>
</PARA>
<SCREEN>

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qtreewidget.h</TITLE>
<PARA>
</PARA>
<SCREEN>

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qtreewidgetitemiterator.h</TITLE>
<PARA>
</PARA>
<SCREEN>

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qvalidator.h</TITLE>
<PARA>
</PARA>
<SCREEN>

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qvfbhdr.h</TITLE>
<PARA>
</PARA>
<SCREEN>

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qwhatsthis.h</TITLE>
<PARA>
</PARA>
<SCREEN>

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qwidget.h</TITLE>
<PARA>
</PARA>
<SCREEN>

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qwindowdefs.h</TITLE>
<PARA>
</PARA>
<SCREEN>

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qwindowsstyle.h</TITLE>
<PARA>
</PARA>
<SCREEN>

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qwmatrix.h</TITLE>
<PARA>
</PARA>
<SCREEN>

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qworkspace.h</TITLE>
<PARA>
</PARA>
<SCREEN>

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
</SCREEN>
</SECT2>
</SECT1>
<!-- End of text generated from database -->
<!--    by $Header: mklibspec 1.82 2006/03/29 19:10:18 mats Exp 0 -->
