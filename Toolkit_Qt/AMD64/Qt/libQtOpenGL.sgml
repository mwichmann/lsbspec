<!-- Start of text generated from database -->
<!-- generated from the LSB specification database -->
<!--    by $Header: mklibspec 1.82 2006/03/29 19:10:18 mats Exp 0 -->
<!--    at Fri Feb 29 10:13:59 2008 -->
<SECT1 ID=libQtOpenGL>
<TITLE>Interfaces for libQtOpenGL</TITLE>
<PARA>
<XREF LINKEND="lib-libQtOpenGL-def"> defines the library name and shared object name
for the libQtOpenGL library
</PARA>
<TABLE id="lib-libQtOpenGL-def">
<TITLE>libQtOpenGL Definition</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Library:</ENTRY>
<ENTRY>libQtOpenGL</ENTRY>
</ROW>
<ROW>
<ENTRY>SONAME:</ENTRY>
<ENTRY>libQtOpenGL.so.4</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The behavior of the interfaces in this library is specified by the following specifications:<SIMPLELIST COLUMNS=1>
<MEMBER ID='REFSTD.libQtOpenGL.1'>
[CXXABI] <XREF LINKEND="std.CXXABI">
</MEMBER>
</SIMPLELIST>
</PARA>
<!-- debug: database interface name QtOpenGL -->
<SECT2>
<!--libgroup-->
<TITLE>QtOpenGL</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Class data for QGLContext</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QGLContext class
is described by <XREF LINKEND="cls-47798-0">
</PARA>
<!--classdata-->
<TABLE id="cls-47798-0">
<TITLE>Primary vtable for QGLContext</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QGLContext</primary></indexterm>typeinfo for QGLContext</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGLContext::~QGLContext()</primary></indexterm>QGLContext::~QGLContext()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGLContext::~QGLContext()</primary></indexterm>QGLContext::~QGLContext()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGLContext::create(QGLContext const*)</primary></indexterm>QGLContext::create(QGLContext const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGLContext::makeCurrent()</primary></indexterm>QGLContext::makeCurrent()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGLContext::doneCurrent()</primary></indexterm>QGLContext::doneCurrent()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGLContext::swapBuffers() const</primary></indexterm>QGLContext::swapBuffers() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGLContext::chooseContext(QGLContext const*)</primary></indexterm>QGLContext::chooseContext(QGLContext const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGLContext::tryVisual(QGLFormat const&, int)</primary></indexterm>QGLContext::tryVisual(QGLFormat const&, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGLContext::chooseVisual()</primary></indexterm>QGLContext::chooseVisual()</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QGLContext  class
is described by <XREF LINKEND="rtti-47794">
</PARA>
<!--classdata-->
<TABLE ID="rtti-47794">
<TITLE>typeinfo for QGLContext</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__class_type_info</primary></indexterm>vtable for __cxxabiv1::__class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QGLContext</primary></indexterm>typeinfo name for QGLContext</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QGLWidget</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QGLWidget class
is described by <XREF LINKEND="cls-47801-0">
</PARA>
<!--classdata-->
<TABLE id="cls-47801-0">
<TITLE>Primary vtable for QGLWidget</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QGLWidget</primary></indexterm>typeinfo for QGLWidget</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGLWidget::metaObject() const</primary></indexterm>QGLWidget::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGLWidget::qt_metacast(char const*)</primary></indexterm>QGLWidget::qt_metacast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGLWidget::qt_metacall(QMetaObject::Call, int, void**)</primary></indexterm>QGLWidget::qt_metacall(QMetaObject::Call, int, void**)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGLWidget::~QGLWidget()</primary></indexterm>QGLWidget::~QGLWidget()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGLWidget::~QGLWidget()</primary></indexterm>QGLWidget::~QGLWidget()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGLWidget::event(QEvent*)</primary></indexterm>QGLWidget::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::eventFilter(QObject*, QEvent*)</primary></indexterm>QObject::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QEvent*)</primary></indexterm>QObject::customEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::devType() const</primary></indexterm>QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setVisible(bool)</primary></indexterm>QWidget::setVisible(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::sizeHint() const</primary></indexterm>QWidget::sizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::minimumSizeHint() const</primary></indexterm>QWidget::minimumSizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::heightForWidth(int) const</primary></indexterm>QWidget::heightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGLWidget::paintEngine() const</primary></indexterm>QGLWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mousePressEvent(QMouseEvent*)</primary></indexterm>QWidget::mousePressEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseReleaseEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseReleaseEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseDoubleClickEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseDoubleClickEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseMoveEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseMoveEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::wheelEvent(QWheelEvent*)</primary></indexterm>QWidget::wheelEvent(QWheelEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyPressEvent(QKeyEvent*)</primary></indexterm>QWidget::keyPressEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyReleaseEvent(QKeyEvent*)</primary></indexterm>QWidget::keyReleaseEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusInEvent(QFocusEvent*)</primary></indexterm>QWidget::focusInEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusOutEvent(QFocusEvent*)</primary></indexterm>QWidget::focusOutEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enterEvent(QEvent*)</primary></indexterm>QWidget::enterEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::leaveEvent(QEvent*)</primary></indexterm>QWidget::leaveEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGLWidget::paintEvent(QPaintEvent*)</primary></indexterm>QGLWidget::paintEvent(QPaintEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::moveEvent(QMoveEvent*)</primary></indexterm>QWidget::moveEvent(QMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGLWidget::resizeEvent(QResizeEvent*)</primary></indexterm>QGLWidget::resizeEvent(QResizeEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::closeEvent(QCloseEvent*)</primary></indexterm>QWidget::closeEvent(QCloseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;33&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::contextMenuEvent(QContextMenuEvent*)</primary></indexterm>QWidget::contextMenuEvent(QContextMenuEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;34&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::tabletEvent(QTabletEvent*)</primary></indexterm>QWidget::tabletEvent(QTabletEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;35&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::actionEvent(QActionEvent*)</primary></indexterm>QWidget::actionEvent(QActionEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;36&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragEnterEvent(QDragEnterEvent*)</primary></indexterm>QWidget::dragEnterEvent(QDragEnterEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;37&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragMoveEvent(QDragMoveEvent*)</primary></indexterm>QWidget::dragMoveEvent(QDragMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;38&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragLeaveEvent(QDragLeaveEvent*)</primary></indexterm>QWidget::dragLeaveEvent(QDragLeaveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;39&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dropEvent(QDropEvent*)</primary></indexterm>QWidget::dropEvent(QDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;40&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showEvent(QShowEvent*)</primary></indexterm>QWidget::showEvent(QShowEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;41&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::hideEvent(QHideEvent*)</primary></indexterm>QWidget::hideEvent(QHideEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;42&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::x11Event(_XEvent*)</primary></indexterm>QWidget::x11Event(_XEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;43&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::changeEvent(QEvent*)</primary></indexterm>QWidget::changeEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;44&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;45&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::inputMethodEvent(QInputMethodEvent*)</primary></indexterm>QWidget::inputMethodEvent(QInputMethodEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;46&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::inputMethodQuery(Qt::InputMethodQuery) const</primary></indexterm>QWidget::inputMethodQuery(Qt::InputMethodQuery) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;47&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusNextPrevChild(bool)</primary></indexterm>QWidget::focusNextPrevChild(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;48&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::styleChange(QStyle&)</primary></indexterm>QWidget::styleChange(QStyle&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;49&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enabledChange(bool)</primary></indexterm>QWidget::enabledChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;50&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paletteChange(QPalette const&)</primary></indexterm>QWidget::paletteChange(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;51&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::fontChange(QFont const&)</primary></indexterm>QWidget::fontChange(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;52&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::windowActivationChange(bool)</primary></indexterm>QWidget::windowActivationChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;53&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::languageChange()</primary></indexterm>QWidget::languageChange()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;54&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGLWidget::updateGL()</primary></indexterm>QGLWidget::updateGL()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;55&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGLWidget::updateOverlayGL()</primary></indexterm>QGLWidget::updateOverlayGL()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;56&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGLWidget::initializeGL()</primary></indexterm>QGLWidget::initializeGL()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;57&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGLWidget::resizeGL(int, int)</primary></indexterm>QGLWidget::resizeGL(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;58&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGLWidget::paintGL()</primary></indexterm>QGLWidget::paintGL()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;59&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGLWidget::initializeOverlayGL()</primary></indexterm>QGLWidget::initializeOverlayGL()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;60&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGLWidget::resizeOverlayGL(int, int)</primary></indexterm>QGLWidget::resizeOverlayGL(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;61&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGLWidget::paintOverlayGL()</primary></indexterm>QGLWidget::paintOverlayGL()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;62&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGLWidget::glInit()</primary></indexterm>QGLWidget::glInit()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;63&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGLWidget::glDraw()</primary></indexterm>QGLWidget::glDraw()</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--classdata-->
<TABLE id="cls-47801-1">
<TITLE>Secondary vtable for QGLWidget</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>-16</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QGLWidget</primary></indexterm>typeinfo for QGLWidget</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QGLWidget::~QGLWidget()</primary></indexterm>non-virtual thunk to QGLWidget::~QGLWidget()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QGLWidget::~QGLWidget()</primary></indexterm>non-virtual thunk to QGLWidget::~QGLWidget()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::devType() const</primary></indexterm>non-virtual thunk to QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QGLWidget::paintEngine() const</primary></indexterm>non-virtual thunk to QGLWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QGLWidget  class
is described by <XREF LINKEND="rtti-47797">
</PARA>
<!--classdata-->
<TABLE ID="rtti-47797">
<TITLE>typeinfo for QGLWidget</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QGLWidget</primary></indexterm>typeinfo name for QGLWidget</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary></primary></indexterm></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QGLPixelBuffer</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QGLPixelBuffer class
is described by <XREF LINKEND="cls-47800-0">
</PARA>
<!--classdata-->
<TABLE id="cls-47800-0">
<TITLE>Primary vtable for QGLPixelBuffer</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QGLPixelBuffer</primary></indexterm>typeinfo for QGLPixelBuffer</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGLPixelBuffer::~QGLPixelBuffer()</primary></indexterm>QGLPixelBuffer::~QGLPixelBuffer()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGLPixelBuffer::~QGLPixelBuffer()</primary></indexterm>QGLPixelBuffer::~QGLPixelBuffer()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGLPixelBuffer::devType() const</primary></indexterm>NULL or QGLPixelBuffer::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGLPixelBuffer::paintEngine() const</primary></indexterm>QGLPixelBuffer::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGLPixelBuffer::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>QGLPixelBuffer::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QGLPixelBuffer  class
is described by <XREF LINKEND="rtti-47796">
</PARA>
<!--classdata-->
<TABLE ID="rtti-47796">
<TITLE>typeinfo for QGLPixelBuffer</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QGLPixelBuffer</primary></indexterm>typeinfo name for QGLPixelBuffer</ENTRY>
</ROW>
<ROW>
<ENTRY>basetype:</ENTRY>
<ENTRY><indexterm><primary></primary></indexterm></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QGLFramebufferObject</TITLE>
<PARA>
</PARA>
</SECT3>


<SECT3>
<TITLE>Interfaces for QtOpenGL</TITLE>
<PARA>
An LSB conforming implementation shall provide the architecture specific functions
for QtOpenGL specified in <XREF linkend="tbl-libQtOpenGL-qtope-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<TABLE id="tbl-libQtOpenGL-qtope-ints">
<TITLE>libQtOpenGL - QtOpenGL Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>_ZThn16_N9QGLWidgetD0Ev</primary></indexterm>_ZThn16_N9QGLWidgetD0Ev <LINK LINKEND="REFSTD.libQtOpenGL.1">[CXXABI]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn16_N9QGLWidgetD1Ev</primary></indexterm>_ZThn16_N9QGLWidgetD1Ev <LINK LINKEND="REFSTD.libQtOpenGL.1">[CXXABI]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn16_NK9QGLWidget11paintEngineEv</primary></indexterm>_ZThn16_NK9QGLWidget11paintEngineEv <LINK LINKEND="REFSTD.libQtOpenGL.1">[CXXABI]</LINK></ENTRY>
<ENTRY></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>
</SECT2>
</SECT1>
<SECT1 ID=libQtOpenGL-ddefs>
<TITLE>Data Definitions for libQtOpenGL</TITLE>
<PARA>
This section defines global identifiers and their values that are associated
with interfaces contained in libQtOpenGL.
These definitions are organized into groups that
correspond to system headers. This convention is used as a
convenience for the reader, and does not imply the existence
of these headers, or their content.
Where an interface is defined as requiring a particular system header file
all of the data definitions for that system header file presented here shall be in effect.
</PARA>
<PARA>
This section gives data definitions to promote binary application
portability, not to repeat source interface definitions available
elsewhere. System providers and application developers should use this ABI
to supplement - not to replace - source interface definition specifications.
</PARA>
<PARA>
This specification uses the <XREF LINKEND='std.ISOC99'> C Language as the reference programming language, and data definitions are specified in ISO C format. The C language is used here as a convenient notation. Using a C language description of these data objects does not preclude their use by other programming languages.</PARA>
<SECT2>
<TITLE>QtOpenGL/qgl.h</TITLE>
<PARA>
</PARA>
<SCREEN>

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtOpenGL/qglcolormap.h</TITLE>
<PARA>
</PARA>
<SCREEN>

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtOpenGL/qglpixelbuffer.h</TITLE>
<PARA>
</PARA>
<SCREEN>

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
</SCREEN>
</SECT2>
</SECT1>
<!-- End of text generated from database -->
<!--    by $Header: mklibspec 1.82 2006/03/29 19:10:18 mats Exp 0 -->
