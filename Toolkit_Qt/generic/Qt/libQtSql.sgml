<!-- Start of text generated from database -->
<!-- generated from the LSB specification database -->
<!--    by $Header: /cvsroot/lsb/lsbspec/mklibspec,v 1.76 2005/12/02 01:32:08 nick Exp 0 -->
<!--    at Thu Jan 12 15:05:21 2006 -->
<SECT1 ID=libQtSql>
<TITLE>Interfaces for libQtSql</TITLE>
<PARA>
<XREF LINKEND="lib-libQtSql-def"> defines the library name and shared object name
for the libQtSql library
</PARA>
<TABLE id="lib-libQtSql-def">
<TITLE>libQtSql Definition</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Library:</ENTRY>
<ENTRY>libQtSql</ENTRY>
</ROW>
<ROW>
<ENTRY>SONAME:</ENTRY>
<ENTRY>libQtSql.so.4</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The behavior of the interfaces in this library is specified by the following specifications:<SIMPLELIST COLUMNS=1>
<MEMBER ID='REFSTD.libQtSql.1'>
[QtSql] <XREF LINKEND="std.QtSql">
</MEMBER>
</SIMPLELIST>
</PARA>
<!-- debug: database interface name QtSql -->
<SECT2>
<!--libgroup-->
<TITLE>QtSql</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Class data for QSqlResult</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QSqlResult class
is described by <XREF LINKEND="cls-401-0">
</PARA>
<!--classdata-->
<TABLE id="cls-401-0">
<TITLE>Primary vtable for QSqlResult</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QSqlResult</primary></indexterm>typeinfo for QSqlResult</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSqlResult::~QSqlResult()</primary></indexterm>QSqlResult::~QSqlResult()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSqlResult::~QSqlResult()</primary></indexterm>QSqlResult::~QSqlResult()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSqlResult::handle() const</primary></indexterm>QSqlResult::handle() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSqlResult::setAt(int)</primary></indexterm>QSqlResult::setAt(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSqlResult::setActive(bool)</primary></indexterm>QSqlResult::setActive(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSqlResult::setLastError(QSqlError const&)</primary></indexterm>QSqlResult::setLastError(QSqlError const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSqlResult::setQuery(QString const&)</primary></indexterm>QSqlResult::setQuery(QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSqlResult::setSelect(bool)</primary></indexterm>QSqlResult::setSelect(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSqlResult::setForwardOnly(bool)</primary></indexterm>QSqlResult::setForwardOnly(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSqlResult::exec()</primary></indexterm>QSqlResult::exec()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSqlResult::prepare(QString const&)</primary></indexterm>QSqlResult::prepare(QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSqlResult::savePrepare(QString const&)</primary></indexterm>QSqlResult::savePrepare(QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSqlResult::bindValue(int, QVariant const&, QFlags&lt;QSql::ParamTypeFlag&gt;)</primary></indexterm>QSqlResult::bindValue(int, QVariant const&, QFlags&lt;QSql::ParamTypeFlag&gt;)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSqlResult::bindValue(QString const&, QVariant const&, QFlags&lt;QSql::ParamTypeFlag&gt;)</primary></indexterm>QSqlResult::bindValue(QString const&, QVariant const&, QFlags&lt;QSql::ParamTypeFlag&gt;)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSqlResult::fetchNext()</primary></indexterm>QSqlResult::fetchNext()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSqlResult::fetchPrevious()</primary></indexterm>QSqlResult::fetchPrevious()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSqlResult::record() const</primary></indexterm>QSqlResult::record() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSqlResult::lastInsertId() const</primary></indexterm>QSqlResult::lastInsertId() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSqlResult::virtual_hook(int, void*)</primary></indexterm>QSqlResult::virtual_hook(int, void*)</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QSqlResult  class
is described by <XREF LINKEND="rtti-402">
</PARA>
<!--classdata-->
<TABLE ID="rtti-402">
<TITLE>typeinfo for QSqlResult</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary></primary></indexterm></ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QSqlResult</primary></indexterm>typeinfo name for QSqlResult</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QSqlDriver</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QSqlDriver class
is described by <XREF LINKEND="cls-403-0">
</PARA>
<!--classdata-->
<TABLE id="cls-403-0">
<TITLE>Primary vtable for QSqlDriver</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QSqlDriver</primary></indexterm>typeinfo for QSqlDriver</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSqlDriver::metaObject() const</primary></indexterm>QSqlDriver::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSqlDriver::qt_metacast(char const*)</primary></indexterm>QSqlDriver::qt_metacast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSqlDriver::qt_metacall(QMetaObject::Call, int, void**)</primary></indexterm>QSqlDriver::qt_metacall(QMetaObject::Call, int, void**)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSqlDriver::~QSqlDriver()</primary></indexterm>QSqlDriver::~QSqlDriver()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSqlDriver::~QSqlDriver()</primary></indexterm>QSqlDriver::~QSqlDriver()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::event(QEvent*)</primary></indexterm>QObject::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::eventFilter(QObject*, QEvent*)</primary></indexterm>QObject::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QEvent*)</primary></indexterm>QObject::customEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSqlDriver::isOpen() const</primary></indexterm>QSqlDriver::isOpen() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSqlDriver::beginTransaction()</primary></indexterm>QSqlDriver::beginTransaction()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSqlDriver::commitTransaction()</primary></indexterm>QSqlDriver::commitTransaction()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSqlDriver::rollbackTransaction()</primary></indexterm>QSqlDriver::rollbackTransaction()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSqlDriver::tables(QSql::TableType) const</primary></indexterm>QSqlDriver::tables(QSql::TableType) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSqlDriver::primaryIndex(QString const&) const</primary></indexterm>QSqlDriver::primaryIndex(QString const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSqlDriver::record(QString const&) const</primary></indexterm>QSqlDriver::record(QString const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSqlDriver::formatValue(QSqlField const&, bool) const</primary></indexterm>QSqlDriver::formatValue(QSqlField const&, bool) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSqlDriver::escapeIdentifier(QString const&, QSqlDriver::IdentifierType) const</primary></indexterm>QSqlDriver::escapeIdentifier(QString const&, QSqlDriver::IdentifierType) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSqlDriver::sqlStatement(QSqlDriver::StatementType, QString const&, QSqlRecord const&, bool) const</primary></indexterm>QSqlDriver::sqlStatement(QSqlDriver::StatementType, QString const&, QSqlRecord const&, bool) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSqlDriver::handle() const</primary></indexterm>QSqlDriver::handle() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSqlDriver::setOpen(bool)</primary></indexterm>QSqlDriver::setOpen(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSqlDriver::setOpenError(bool)</primary></indexterm>QSqlDriver::setOpenError(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSqlDriver::setLastError(QSqlError const&)</primary></indexterm>QSqlDriver::setLastError(QSqlError const&)</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QSqlDriver  class
is described by <XREF LINKEND="rtti-404">
</PARA>
<!--classdata-->
<TABLE ID="rtti-404">
<TITLE>typeinfo for QSqlDriver</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for QObject</primary></indexterm>vtable for QObject</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QSqlDriver</primary></indexterm>typeinfo name for QSqlDriver</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QSqlDriverFactoryInterface</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QSqlDriverFactoryInterface class
is described by <XREF LINKEND="cls-405-0">
</PARA>
<!--classdata-->
<TABLE id="cls-405-0">
<TITLE>Primary vtable for QSqlDriverFactoryInterface</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QSqlDriverFactoryInterface</primary></indexterm>typeinfo for QSqlDriverFactoryInterface</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSqlDriverFactoryInterface::~QSqlDriverFactoryInterface()</primary></indexterm>QSqlDriverFactoryInterface::~QSqlDriverFactoryInterface()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSqlDriverFactoryInterface::~QSqlDriverFactoryInterface()</primary></indexterm>QSqlDriverFactoryInterface::~QSqlDriverFactoryInterface()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QSqlDriverFactoryInterface  class
is described by <XREF LINKEND="rtti-406">
</PARA>
<!--classdata-->
<TABLE ID="rtti-406">
<TITLE>typeinfo for QSqlDriverFactoryInterface</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary></primary></indexterm></ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QSqlDriverFactoryInterface</primary></indexterm>typeinfo name for QSqlDriverFactoryInterface</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QSqlDriverPlugin</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QSqlDriverPlugin class
is described by <XREF LINKEND="cls-407-0">
</PARA>
<!--classdata-->
<TABLE id="cls-407-0">
<TITLE>Primary vtable for QSqlDriverPlugin</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QSqlDriverPlugin</primary></indexterm>typeinfo for QSqlDriverPlugin</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSqlDriverPlugin::metaObject() const</primary></indexterm>QSqlDriverPlugin::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSqlDriverPlugin::qt_metacast(char const*)</primary></indexterm>QSqlDriverPlugin::qt_metacast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSqlDriverPlugin::qt_metacall(QMetaObject::Call, int, void**)</primary></indexterm>QSqlDriverPlugin::qt_metacall(QMetaObject::Call, int, void**)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSqlDriverPlugin::~QSqlDriverPlugin()</primary></indexterm>QSqlDriverPlugin::~QSqlDriverPlugin()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSqlDriverPlugin::~QSqlDriverPlugin()</primary></indexterm>QSqlDriverPlugin::~QSqlDriverPlugin()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::event(QEvent*)</primary></indexterm>QObject::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::eventFilter(QObject*, QEvent*)</primary></indexterm>QObject::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QEvent*)</primary></indexterm>QObject::customEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QSqlDriverPlugin::~QSqlDriverPlugin()</primary></indexterm>non-virtual thunk to QSqlDriverPlugin::~QSqlDriverPlugin()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QSqlDriverPlugin::~QSqlDriverPlugin()</primary></indexterm>non-virtual thunk to QSqlDriverPlugin::~QSqlDriverPlugin()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QSqlDriverPlugin  class
is described by <XREF LINKEND="rtti-408">
</PARA>
<!--classdata-->
<TABLE ID="rtti-408">
<TITLE>typeinfo for QSqlDriverPlugin</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for QObject</primary></indexterm>vtable for QObject</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QSqlDriverPlugin</primary></indexterm>typeinfo name for QSqlDriverPlugin</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QSqlQueryModel</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QSqlQueryModel class
is described by <XREF LINKEND="cls-409-0">
</PARA>
<!--classdata-->
<TABLE id="cls-409-0">
<TITLE>Primary vtable for QSqlQueryModel</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QSqlQueryModel</primary></indexterm>typeinfo for QSqlQueryModel</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSqlQueryModel::metaObject() const</primary></indexterm>QSqlQueryModel::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSqlQueryModel::qt_metacast(char const*)</primary></indexterm>QSqlQueryModel::qt_metacast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSqlQueryModel::qt_metacall(QMetaObject::Call, int, void**)</primary></indexterm>QSqlQueryModel::qt_metacall(QMetaObject::Call, int, void**)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSqlQueryModel::~QSqlQueryModel()</primary></indexterm>QSqlQueryModel::~QSqlQueryModel()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSqlQueryModel::~QSqlQueryModel()</primary></indexterm>QSqlQueryModel::~QSqlQueryModel()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::event(QEvent*)</primary></indexterm>QObject::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::eventFilter(QObject*, QEvent*)</primary></indexterm>QObject::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QEvent*)</primary></indexterm>QObject::customEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractTableModel::index(int, int, QModelIndex const&) const</primary></indexterm>QAbstractTableModel::index(int, int, QModelIndex const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractTableModel::parent(QModelIndex const&) const</primary></indexterm>QAbstractTableModel::parent(QModelIndex const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSqlQueryModel::rowCount(QModelIndex const&) const</primary></indexterm>QSqlQueryModel::rowCount(QModelIndex const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSqlQueryModel::columnCount(QModelIndex const&) const</primary></indexterm>QSqlQueryModel::columnCount(QModelIndex const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractTableModel::hasChildren(QModelIndex const&) const</primary></indexterm>QAbstractTableModel::hasChildren(QModelIndex const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSqlQueryModel::data(QModelIndex const&, int) const</primary></indexterm>QSqlQueryModel::data(QModelIndex const&, int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemModel::setData(QModelIndex const&, QVariant const&, int)</primary></indexterm>QAbstractItemModel::setData(QModelIndex const&, QVariant const&, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSqlQueryModel::headerData(int, Qt::Orientation, int) const</primary></indexterm>QSqlQueryModel::headerData(int, Qt::Orientation, int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSqlQueryModel::setHeaderData(int, Qt::Orientation, QVariant const&, int)</primary></indexterm>QSqlQueryModel::setHeaderData(int, Qt::Orientation, QVariant const&, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemModel::itemData(QModelIndex const&) const</primary></indexterm>QAbstractItemModel::itemData(QModelIndex const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemModel::setItemData(QModelIndex const&, QMap&lt;int, QVariant&gt; const&)</primary></indexterm>QAbstractItemModel::setItemData(QModelIndex const&, QMap&lt;int, QVariant&gt; const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemModel::mimeTypes() const</primary></indexterm>QAbstractItemModel::mimeTypes() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemModel::mimeData(QList&lt;QModelIndex&gt; const&) const</primary></indexterm>QAbstractItemModel::mimeData(QList&lt;QModelIndex&gt; const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractTableModel::dropMimeData(QMimeData const*, Qt::DropAction, int, int, QModelIndex const&)</primary></indexterm>QAbstractTableModel::dropMimeData(QMimeData const*, Qt::DropAction, int, int, QModelIndex const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemModel::supportedDropActions() const</primary></indexterm>QAbstractItemModel::supportedDropActions() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemModel::insertRows(int, int, QModelIndex const&)</primary></indexterm>QAbstractItemModel::insertRows(int, int, QModelIndex const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSqlQueryModel::insertColumns(int, int, QModelIndex const&)</primary></indexterm>QSqlQueryModel::insertColumns(int, int, QModelIndex const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemModel::removeRows(int, int, QModelIndex const&)</primary></indexterm>QAbstractItemModel::removeRows(int, int, QModelIndex const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSqlQueryModel::removeColumns(int, int, QModelIndex const&)</primary></indexterm>QSqlQueryModel::removeColumns(int, int, QModelIndex const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSqlQueryModel::fetchMore(QModelIndex const&)</primary></indexterm>QSqlQueryModel::fetchMore(QModelIndex const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSqlQueryModel::canFetchMore(QModelIndex const&) const</primary></indexterm>QSqlQueryModel::canFetchMore(QModelIndex const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;33&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemModel::flags(QModelIndex const&) const</primary></indexterm>QAbstractItemModel::flags(QModelIndex const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;34&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemModel::sort(int, Qt::SortOrder)</primary></indexterm>QAbstractItemModel::sort(int, Qt::SortOrder)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;35&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemModel::buddy(QModelIndex const&) const</primary></indexterm>QAbstractItemModel::buddy(QModelIndex const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;36&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemModel::match(QModelIndex const&, int, QVariant const&, int, QFlags&lt;Qt::MatchFlag&gt;) const</primary></indexterm>QAbstractItemModel::match(QModelIndex const&, int, QVariant const&, int, QFlags&lt;Qt::MatchFlag&gt;) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;37&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemModel::span(QModelIndex const&) const</primary></indexterm>QAbstractItemModel::span(QModelIndex const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;38&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemModel::submit()</primary></indexterm>QAbstractItemModel::submit()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;39&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemModel::revert()</primary></indexterm>QAbstractItemModel::revert()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;40&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSqlQueryModel::clear()</primary></indexterm>QSqlQueryModel::clear()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;41&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSqlQueryModel::queryChange()</primary></indexterm>QSqlQueryModel::queryChange()</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QSqlQueryModel  class
is described by <XREF LINKEND="rtti-410">
</PARA>
<!--classdata-->
<TABLE ID="rtti-410">
<TITLE>typeinfo for QSqlQueryModel</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for QAbstractTableModel</primary></indexterm>vtable for QAbstractTableModel</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QSqlQueryModel</primary></indexterm>typeinfo name for QSqlQueryModel</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QSqlTableModel</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QSqlTableModel class
is described by <XREF LINKEND="cls-411-0">
</PARA>
<!--classdata-->
<TABLE id="cls-411-0">
<TITLE>Primary vtable for QSqlTableModel</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QSqlTableModel</primary></indexterm>typeinfo for QSqlTableModel</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSqlTableModel::metaObject() const</primary></indexterm>QSqlTableModel::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSqlTableModel::qt_metacast(char const*)</primary></indexterm>QSqlTableModel::qt_metacast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSqlTableModel::qt_metacall(QMetaObject::Call, int, void**)</primary></indexterm>QSqlTableModel::qt_metacall(QMetaObject::Call, int, void**)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSqlTableModel::~QSqlTableModel()</primary></indexterm>QSqlTableModel::~QSqlTableModel()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSqlTableModel::~QSqlTableModel()</primary></indexterm>QSqlTableModel::~QSqlTableModel()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::event(QEvent*)</primary></indexterm>QObject::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::eventFilter(QObject*, QEvent*)</primary></indexterm>QObject::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QEvent*)</primary></indexterm>QObject::customEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractTableModel::index(int, int, QModelIndex const&) const</primary></indexterm>QAbstractTableModel::index(int, int, QModelIndex const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractTableModel::parent(QModelIndex const&) const</primary></indexterm>QAbstractTableModel::parent(QModelIndex const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSqlTableModel::rowCount(QModelIndex const&) const</primary></indexterm>QSqlTableModel::rowCount(QModelIndex const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSqlQueryModel::columnCount(QModelIndex const&) const</primary></indexterm>QSqlQueryModel::columnCount(QModelIndex const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractTableModel::hasChildren(QModelIndex const&) const</primary></indexterm>QAbstractTableModel::hasChildren(QModelIndex const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSqlTableModel::data(QModelIndex const&, int) const</primary></indexterm>QSqlTableModel::data(QModelIndex const&, int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSqlTableModel::setData(QModelIndex const&, QVariant const&, int)</primary></indexterm>QSqlTableModel::setData(QModelIndex const&, QVariant const&, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSqlTableModel::headerData(int, Qt::Orientation, int) const</primary></indexterm>QSqlTableModel::headerData(int, Qt::Orientation, int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSqlQueryModel::setHeaderData(int, Qt::Orientation, QVariant const&, int)</primary></indexterm>QSqlQueryModel::setHeaderData(int, Qt::Orientation, QVariant const&, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemModel::itemData(QModelIndex const&) const</primary></indexterm>QAbstractItemModel::itemData(QModelIndex const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemModel::setItemData(QModelIndex const&, QMap&lt;int, QVariant&gt; const&)</primary></indexterm>QAbstractItemModel::setItemData(QModelIndex const&, QMap&lt;int, QVariant&gt; const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemModel::mimeTypes() const</primary></indexterm>QAbstractItemModel::mimeTypes() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemModel::mimeData(QList&lt;QModelIndex&gt; const&) const</primary></indexterm>QAbstractItemModel::mimeData(QList&lt;QModelIndex&gt; const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractTableModel::dropMimeData(QMimeData const*, Qt::DropAction, int, int, QModelIndex const&)</primary></indexterm>QAbstractTableModel::dropMimeData(QMimeData const*, Qt::DropAction, int, int, QModelIndex const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemModel::supportedDropActions() const</primary></indexterm>QAbstractItemModel::supportedDropActions() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSqlTableModel::insertRows(int, int, QModelIndex const&)</primary></indexterm>QSqlTableModel::insertRows(int, int, QModelIndex const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSqlQueryModel::insertColumns(int, int, QModelIndex const&)</primary></indexterm>QSqlQueryModel::insertColumns(int, int, QModelIndex const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSqlTableModel::removeRows(int, int, QModelIndex const&)</primary></indexterm>QSqlTableModel::removeRows(int, int, QModelIndex const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSqlTableModel::removeColumns(int, int, QModelIndex const&)</primary></indexterm>QSqlTableModel::removeColumns(int, int, QModelIndex const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSqlQueryModel::fetchMore(QModelIndex const&)</primary></indexterm>QSqlQueryModel::fetchMore(QModelIndex const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSqlQueryModel::canFetchMore(QModelIndex const&) const</primary></indexterm>QSqlQueryModel::canFetchMore(QModelIndex const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;33&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSqlTableModel::flags(QModelIndex const&) const</primary></indexterm>QSqlTableModel::flags(QModelIndex const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;34&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSqlTableModel::sort(int, Qt::SortOrder)</primary></indexterm>QSqlTableModel::sort(int, Qt::SortOrder)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;35&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemModel::buddy(QModelIndex const&) const</primary></indexterm>QAbstractItemModel::buddy(QModelIndex const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;36&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemModel::match(QModelIndex const&, int, QVariant const&, int, QFlags&lt;Qt::MatchFlag&gt;) const</primary></indexterm>QAbstractItemModel::match(QModelIndex const&, int, QVariant const&, int, QFlags&lt;Qt::MatchFlag&gt;) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;37&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemModel::span(QModelIndex const&) const</primary></indexterm>QAbstractItemModel::span(QModelIndex const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;38&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSqlTableModel::submit()</primary></indexterm>QSqlTableModel::submit()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;39&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSqlTableModel::revert()</primary></indexterm>QSqlTableModel::revert()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;40&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSqlTableModel::clear()</primary></indexterm>QSqlTableModel::clear()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;41&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSqlQueryModel::queryChange()</primary></indexterm>QSqlQueryModel::queryChange()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;42&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSqlTableModel::select()</primary></indexterm>QSqlTableModel::select()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;43&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSqlTableModel::setTable(QString const&)</primary></indexterm>QSqlTableModel::setTable(QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;44&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSqlTableModel::setEditStrategy(QSqlTableModel::EditStrategy)</primary></indexterm>QSqlTableModel::setEditStrategy(QSqlTableModel::EditStrategy)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;45&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSqlTableModel::setSort(int, Qt::SortOrder)</primary></indexterm>QSqlTableModel::setSort(int, Qt::SortOrder)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;46&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSqlTableModel::setFilter(QString const&)</primary></indexterm>QSqlTableModel::setFilter(QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;47&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSqlTableModel::revertRow(int)</primary></indexterm>QSqlTableModel::revertRow(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;48&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSqlTableModel::updateRowInTable(int, QSqlRecord const&)</primary></indexterm>QSqlTableModel::updateRowInTable(int, QSqlRecord const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;49&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSqlTableModel::insertRowIntoTable(QSqlRecord const&)</primary></indexterm>QSqlTableModel::insertRowIntoTable(QSqlRecord const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;50&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSqlTableModel::deleteRowFromTable(int)</primary></indexterm>QSqlTableModel::deleteRowFromTable(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;51&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSqlTableModel::orderByClause() const</primary></indexterm>QSqlTableModel::orderByClause() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;52&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSqlTableModel::selectStatement() const</primary></indexterm>QSqlTableModel::selectStatement() const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QSqlTableModel  class
is described by <XREF LINKEND="rtti-412">
</PARA>
<!--classdata-->
<TABLE ID="rtti-412">
<TITLE>typeinfo for QSqlTableModel</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for QSqlQueryModel</primary></indexterm>vtable for QSqlQueryModel</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QSqlTableModel</primary></indexterm>typeinfo name for QSqlTableModel</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QSqlRelationalTableModel</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QSqlRelationalTableModel class
is described by <XREF LINKEND="cls-413-0">
</PARA>
<!--classdata-->
<TABLE id="cls-413-0">
<TITLE>Primary vtable for QSqlRelationalTableModel</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QSqlRelationalTableModel</primary></indexterm>typeinfo for QSqlRelationalTableModel</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSqlRelationalTableModel::metaObject() const</primary></indexterm>QSqlRelationalTableModel::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSqlRelationalTableModel::qt_metacast(char const*)</primary></indexterm>QSqlRelationalTableModel::qt_metacast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSqlRelationalTableModel::qt_metacall(QMetaObject::Call, int, void**)</primary></indexterm>QSqlRelationalTableModel::qt_metacall(QMetaObject::Call, int, void**)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSqlRelationalTableModel::~QSqlRelationalTableModel()</primary></indexterm>QSqlRelationalTableModel::~QSqlRelationalTableModel()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSqlRelationalTableModel::~QSqlRelationalTableModel()</primary></indexterm>QSqlRelationalTableModel::~QSqlRelationalTableModel()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::event(QEvent*)</primary></indexterm>QObject::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::eventFilter(QObject*, QEvent*)</primary></indexterm>QObject::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QEvent*)</primary></indexterm>QObject::customEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractTableModel::index(int, int, QModelIndex const&) const</primary></indexterm>QAbstractTableModel::index(int, int, QModelIndex const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractTableModel::parent(QModelIndex const&) const</primary></indexterm>QAbstractTableModel::parent(QModelIndex const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSqlTableModel::rowCount(QModelIndex const&) const</primary></indexterm>QSqlTableModel::rowCount(QModelIndex const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSqlQueryModel::columnCount(QModelIndex const&) const</primary></indexterm>QSqlQueryModel::columnCount(QModelIndex const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractTableModel::hasChildren(QModelIndex const&) const</primary></indexterm>QAbstractTableModel::hasChildren(QModelIndex const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSqlRelationalTableModel::data(QModelIndex const&, int) const</primary></indexterm>QSqlRelationalTableModel::data(QModelIndex const&, int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSqlRelationalTableModel::setData(QModelIndex const&, QVariant const&, int)</primary></indexterm>QSqlRelationalTableModel::setData(QModelIndex const&, QVariant const&, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSqlTableModel::headerData(int, Qt::Orientation, int) const</primary></indexterm>QSqlTableModel::headerData(int, Qt::Orientation, int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSqlQueryModel::setHeaderData(int, Qt::Orientation, QVariant const&, int)</primary></indexterm>QSqlQueryModel::setHeaderData(int, Qt::Orientation, QVariant const&, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemModel::itemData(QModelIndex const&) const</primary></indexterm>QAbstractItemModel::itemData(QModelIndex const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemModel::setItemData(QModelIndex const&, QMap&lt;int, QVariant&gt; const&)</primary></indexterm>QAbstractItemModel::setItemData(QModelIndex const&, QMap&lt;int, QVariant&gt; const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemModel::mimeTypes() const</primary></indexterm>QAbstractItemModel::mimeTypes() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemModel::mimeData(QList&lt;QModelIndex&gt; const&) const</primary></indexterm>QAbstractItemModel::mimeData(QList&lt;QModelIndex&gt; const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractTableModel::dropMimeData(QMimeData const*, Qt::DropAction, int, int, QModelIndex const&)</primary></indexterm>QAbstractTableModel::dropMimeData(QMimeData const*, Qt::DropAction, int, int, QModelIndex const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemModel::supportedDropActions() const</primary></indexterm>QAbstractItemModel::supportedDropActions() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSqlTableModel::insertRows(int, int, QModelIndex const&)</primary></indexterm>QSqlTableModel::insertRows(int, int, QModelIndex const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSqlQueryModel::insertColumns(int, int, QModelIndex const&)</primary></indexterm>QSqlQueryModel::insertColumns(int, int, QModelIndex const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSqlTableModel::removeRows(int, int, QModelIndex const&)</primary></indexterm>QSqlTableModel::removeRows(int, int, QModelIndex const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSqlTableModel::removeColumns(int, int, QModelIndex const&)</primary></indexterm>QSqlTableModel::removeColumns(int, int, QModelIndex const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSqlQueryModel::fetchMore(QModelIndex const&)</primary></indexterm>QSqlQueryModel::fetchMore(QModelIndex const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSqlQueryModel::canFetchMore(QModelIndex const&) const</primary></indexterm>QSqlQueryModel::canFetchMore(QModelIndex const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;33&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSqlTableModel::flags(QModelIndex const&) const</primary></indexterm>QSqlTableModel::flags(QModelIndex const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;34&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSqlTableModel::sort(int, Qt::SortOrder)</primary></indexterm>QSqlTableModel::sort(int, Qt::SortOrder)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;35&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemModel::buddy(QModelIndex const&) const</primary></indexterm>QAbstractItemModel::buddy(QModelIndex const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;36&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemModel::match(QModelIndex const&, int, QVariant const&, int, QFlags&lt;Qt::MatchFlag&gt;) const</primary></indexterm>QAbstractItemModel::match(QModelIndex const&, int, QVariant const&, int, QFlags&lt;Qt::MatchFlag&gt;) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;37&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemModel::span(QModelIndex const&) const</primary></indexterm>QAbstractItemModel::span(QModelIndex const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;38&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSqlTableModel::submit()</primary></indexterm>QSqlTableModel::submit()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;39&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSqlTableModel::revert()</primary></indexterm>QSqlTableModel::revert()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;40&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSqlRelationalTableModel::clear()</primary></indexterm>QSqlRelationalTableModel::clear()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;41&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSqlQueryModel::queryChange()</primary></indexterm>QSqlQueryModel::queryChange()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;42&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSqlRelationalTableModel::select()</primary></indexterm>QSqlRelationalTableModel::select()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;43&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSqlRelationalTableModel::setTable(QString const&)</primary></indexterm>QSqlRelationalTableModel::setTable(QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;44&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSqlTableModel::setEditStrategy(QSqlTableModel::EditStrategy)</primary></indexterm>QSqlTableModel::setEditStrategy(QSqlTableModel::EditStrategy)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;45&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSqlTableModel::setSort(int, Qt::SortOrder)</primary></indexterm>QSqlTableModel::setSort(int, Qt::SortOrder)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;46&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSqlTableModel::setFilter(QString const&)</primary></indexterm>QSqlTableModel::setFilter(QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;47&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSqlRelationalTableModel::revertRow(int)</primary></indexterm>QSqlRelationalTableModel::revertRow(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;48&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSqlRelationalTableModel::updateRowInTable(int, QSqlRecord const&)</primary></indexterm>QSqlRelationalTableModel::updateRowInTable(int, QSqlRecord const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;49&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSqlTableModel::insertRowIntoTable(QSqlRecord const&)</primary></indexterm>QSqlTableModel::insertRowIntoTable(QSqlRecord const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;50&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSqlTableModel::deleteRowFromTable(int)</primary></indexterm>QSqlTableModel::deleteRowFromTable(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;51&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSqlRelationalTableModel::orderByClause() const</primary></indexterm>QSqlRelationalTableModel::orderByClause() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;52&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSqlRelationalTableModel::selectStatement() const</primary></indexterm>QSqlRelationalTableModel::selectStatement() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;53&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSqlRelationalTableModel::setRelation(int, QSqlRelation const&)</primary></indexterm>QSqlRelationalTableModel::setRelation(int, QSqlRelation const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;54&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSqlRelationalTableModel::relationModel(int) const</primary></indexterm>QSqlRelationalTableModel::relationModel(int) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QSqlRelationalTableModel  class
is described by <XREF LINKEND="rtti-414">
</PARA>
<!--classdata-->
<TABLE ID="rtti-414">
<TITLE>typeinfo for QSqlRelationalTableModel</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for QSqlTableModel</primary></indexterm>vtable for QSqlTableModel</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QSqlRelationalTableModel</primary></indexterm>typeinfo name for QSqlRelationalTableModel</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Interfaces for QtSql</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic functions
for QtSql specified in <XREF linkend="tbl-libQtSql-qts-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<TABLE id="tbl-libQtSql-qts-ints">
<TITLE>libQtSql - QtSql Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>_ZN10QSqlDriver11qt_metacallEN11QMetaObject4CallEiPPv</primary></indexterm>_ZN10QSqlDriver11qt_metacallEN11QMetaObject4CallEiPPv <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN10QSqlDriver11qt_metacastEPKc</primary></indexterm>_ZN10QSqlDriver11qt_metacastEPKc <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN10QSqlDriver12setLastErrorERK9QSqlError</primary></indexterm>_ZN10QSqlDriver12setLastErrorERK9QSqlError <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN10QSqlDriver12setOpenErrorEb</primary></indexterm>_ZN10QSqlDriver12setOpenErrorEb <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN10QSqlDriver16beginTransactionEv</primary></indexterm>_ZN10QSqlDriver16beginTransactionEv <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN10QSqlDriver17commitTransactionEv</primary></indexterm>_ZN10QSqlDriver17commitTransactionEv <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN10QSqlDriver19rollbackTransactionEv</primary></indexterm>_ZN10QSqlDriver19rollbackTransactionEv <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN10QSqlDriver7setOpenEb</primary></indexterm>_ZN10QSqlDriver7setOpenEb <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN10QSqlDriverC1EP7QObject</primary></indexterm>_ZN10QSqlDriverC1EP7QObject <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN10QSqlDriverC2EP7QObject</primary></indexterm>_ZN10QSqlDriverC2EP7QObject <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN10QSqlDriverD0Ev</primary></indexterm>_ZN10QSqlDriverD0Ev <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN10QSqlDriverD1Ev</primary></indexterm>_ZN10QSqlDriverD1Ev <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN10QSqlDriverD2Ev</primary></indexterm>_ZN10QSqlDriverD2Ev <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN10QSqlRecord11clearValuesEv</primary></indexterm>_ZN10QSqlRecord11clearValuesEv <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN10QSqlRecord12setGeneratedERK7QStringb</primary></indexterm>_ZN10QSqlRecord12setGeneratedERK7QStringb <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN10QSqlRecord12setGeneratedEib</primary></indexterm>_ZN10QSqlRecord12setGeneratedEib <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN10QSqlRecord5clearEv</primary></indexterm>_ZN10QSqlRecord5clearEv <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN10QSqlRecord6appendERK9QSqlField</primary></indexterm>_ZN10QSqlRecord6appendERK9QSqlField <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN10QSqlRecord6insertEiRK9QSqlField</primary></indexterm>_ZN10QSqlRecord6insertEiRK9QSqlField <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN10QSqlRecord6removeEi</primary></indexterm>_ZN10QSqlRecord6removeEi <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN10QSqlRecord7replaceEiRK9QSqlField</primary></indexterm>_ZN10QSqlRecord7replaceEiRK9QSqlField <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN10QSqlRecord7setNullERK7QString</primary></indexterm>_ZN10QSqlRecord7setNullERK7QString <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN10QSqlRecord7setNullEi</primary></indexterm>_ZN10QSqlRecord7setNullEi <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN10QSqlRecord8setValueERK7QStringRK8QVariant</primary></indexterm>_ZN10QSqlRecord8setValueERK7QStringRK8QVariant <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN10QSqlRecord8setValueEiRK8QVariant</primary></indexterm>_ZN10QSqlRecord8setValueEiRK8QVariant <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN10QSqlRecordC1ERKS_</primary></indexterm>_ZN10QSqlRecordC1ERKS_ <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN10QSqlRecordC1Ev</primary></indexterm>_ZN10QSqlRecordC1Ev <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN10QSqlRecordC2ERKS_</primary></indexterm>_ZN10QSqlRecordC2ERKS_ <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN10QSqlRecordC2Ev</primary></indexterm>_ZN10QSqlRecordC2Ev <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN10QSqlRecordD1Ev</primary></indexterm>_ZN10QSqlRecordD1Ev <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN10QSqlRecordD2Ev</primary></indexterm>_ZN10QSqlRecordD2Ev <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN10QSqlRecordaSERKS_</primary></indexterm>_ZN10QSqlRecordaSERKS_ <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN10QSqlResult11savePrepareERK7QString</primary></indexterm>_ZN10QSqlResult11savePrepareERK7QString <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN10QSqlResult12addBindValueERK8QVariant6QFlagsIN4QSql13ParamTypeFlagEE</primary></indexterm>_ZN10QSqlResult12addBindValueERK8QVariant6QFlagsIN4QSql13ParamTypeFlagEE <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN10QSqlResult12setLastErrorERK9QSqlError</primary></indexterm>_ZN10QSqlResult12setLastErrorERK9QSqlError <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN10QSqlResult12virtual_hookEiPv</primary></indexterm>_ZN10QSqlResult12virtual_hookEiPv <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN10QSqlResult13fetchPreviousEv</primary></indexterm>_ZN10QSqlResult13fetchPreviousEv <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN10QSqlResult14setForwardOnlyEb</primary></indexterm>_ZN10QSqlResult14setForwardOnlyEb <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN10QSqlResult4execEv</primary></indexterm>_ZN10QSqlResult4execEv <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN10QSqlResult5clearEv</primary></indexterm>_ZN10QSqlResult5clearEv <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN10QSqlResult5setAtEi</primary></indexterm>_ZN10QSqlResult5setAtEi <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN10QSqlResult7prepareERK7QString</primary></indexterm>_ZN10QSqlResult7prepareERK7QString <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN10QSqlResult8setQueryERK7QString</primary></indexterm>_ZN10QSqlResult8setQueryERK7QString <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN10QSqlResult9bindValueERK7QStringRK8QVariant6QFlagsIN4QSql13ParamTypeFlagEE</primary></indexterm>_ZN10QSqlResult9bindValueERK7QStringRK8QVariant6QFlagsIN4QSql13ParamTypeFlagEE <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN10QSqlResult9bindValueEiRK8QVariant6QFlagsIN4QSql13ParamTypeFlagEE</primary></indexterm>_ZN10QSqlResult9bindValueEiRK8QVariant6QFlagsIN4QSql13ParamTypeFlagEE <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN10QSqlResult9execBatchEb</primary></indexterm>_ZN10QSqlResult9execBatchEb <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN10QSqlResult9fetchNextEv</primary></indexterm>_ZN10QSqlResult9fetchNextEv <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN10QSqlResult9setActiveEb</primary></indexterm>_ZN10QSqlResult9setActiveEb <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN10QSqlResult9setSelectEb</primary></indexterm>_ZN10QSqlResult9setSelectEb <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN10QSqlResultC1EPK10QSqlDriver</primary></indexterm>_ZN10QSqlResultC1EPK10QSqlDriver <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN10QSqlResultC2EPK10QSqlDriver</primary></indexterm>_ZN10QSqlResultC2EPK10QSqlDriver <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN10QSqlResultD0Ev</primary></indexterm>_ZN10QSqlResultD0Ev <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN10QSqlResultD1Ev</primary></indexterm>_ZN10QSqlResultD1Ev <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN10QSqlResultD2Ev</primary></indexterm>_ZN10QSqlResultD2Ev <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN12QSqlDatabase11addDatabaseEP10QSqlDriverRK7QString</primary></indexterm>_ZN12QSqlDatabase11addDatabaseEP10QSqlDriverRK7QString <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN12QSqlDatabase11addDatabaseERK7QStringS2_</primary></indexterm>_ZN12QSqlDatabase11addDatabaseERK7QStringS2_ <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN12QSqlDatabase11setHostNameERK7QString</primary></indexterm>_ZN12QSqlDatabase11setHostNameERK7QString <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN12QSqlDatabase11setPasswordERK7QString</primary></indexterm>_ZN12QSqlDatabase11setPasswordERK7QString <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN12QSqlDatabase11setUserNameERK7QString</primary></indexterm>_ZN12QSqlDatabase11setUserNameERK7QString <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN12QSqlDatabase11transactionEv</primary></indexterm>_ZN12QSqlDatabase11transactionEv <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN12QSqlDatabase13cloneDatabaseERKS_RK7QString</primary></indexterm>_ZN12QSqlDatabase13cloneDatabaseERKS_RK7QString <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN12QSqlDatabase14removeDatabaseERK7QString</primary></indexterm>_ZN12QSqlDatabase14removeDatabaseERK7QString <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN12QSqlDatabase15connectionNamesEv</primary></indexterm>_ZN12QSqlDatabase15connectionNamesEv <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN12QSqlDatabase15setDatabaseNameERK7QString</primary></indexterm>_ZN12QSqlDatabase15setDatabaseNameERK7QString <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN12QSqlDatabase17isDriverAvailableERK7QString</primary></indexterm>_ZN12QSqlDatabase17isDriverAvailableERK7QString <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN12QSqlDatabase17registerSqlDriverERK7QStringP21QSqlDriverCreatorBase</primary></indexterm>_ZN12QSqlDatabase17registerSqlDriverERK7QStringP21QSqlDriverCreatorBase <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN12QSqlDatabase17setConnectOptionsERK7QString</primary></indexterm>_ZN12QSqlDatabase17setConnectOptionsERK7QString <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN12QSqlDatabase4openERK7QStringS2_</primary></indexterm>_ZN12QSqlDatabase4openERK7QStringS2_ <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN12QSqlDatabase4openEv</primary></indexterm>_ZN12QSqlDatabase4openEv <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN12QSqlDatabase5closeEv</primary></indexterm>_ZN12QSqlDatabase5closeEv <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN12QSqlDatabase6commitEv</primary></indexterm>_ZN12QSqlDatabase6commitEv <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN12QSqlDatabase7driversEv</primary></indexterm>_ZN12QSqlDatabase7driversEv <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN12QSqlDatabase7setPortEi</primary></indexterm>_ZN12QSqlDatabase7setPortEi <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN12QSqlDatabase8containsERK7QString</primary></indexterm>_ZN12QSqlDatabase8containsERK7QString <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN12QSqlDatabase8databaseERK7QStringb</primary></indexterm>_ZN12QSqlDatabase8databaseERK7QStringb <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN12QSqlDatabase8rollbackEv</primary></indexterm>_ZN12QSqlDatabase8rollbackEv <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN12QSqlDatabaseC1EP10QSqlDriver</primary></indexterm>_ZN12QSqlDatabaseC1EP10QSqlDriver <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN12QSqlDatabaseC1ERK7QString</primary></indexterm>_ZN12QSqlDatabaseC1ERK7QString <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN12QSqlDatabaseC1ERKS_</primary></indexterm>_ZN12QSqlDatabaseC1ERKS_ <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN12QSqlDatabaseC1Ev</primary></indexterm>_ZN12QSqlDatabaseC1Ev <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN12QSqlDatabaseC2EP10QSqlDriver</primary></indexterm>_ZN12QSqlDatabaseC2EP10QSqlDriver <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN12QSqlDatabaseC2ERK7QString</primary></indexterm>_ZN12QSqlDatabaseC2ERK7QString <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN12QSqlDatabaseC2ERKS_</primary></indexterm>_ZN12QSqlDatabaseC2ERKS_ <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN12QSqlDatabaseC2Ev</primary></indexterm>_ZN12QSqlDatabaseC2Ev <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN12QSqlDatabaseD1Ev</primary></indexterm>_ZN12QSqlDatabaseD1Ev <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN12QSqlDatabaseD2Ev</primary></indexterm>_ZN12QSqlDatabaseD2Ev <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN12QSqlDatabaseaSERKS_</primary></indexterm>_ZN12QSqlDatabaseaSERKS_ <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN14QSqlQueryModel11qt_metacallEN11QMetaObject4CallEiPPv</primary></indexterm>_ZN14QSqlQueryModel11qt_metacallEN11QMetaObject4CallEiPPv <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN14QSqlQueryModel11qt_metacastEPKc</primary></indexterm>_ZN14QSqlQueryModel11qt_metacastEPKc <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN14QSqlQueryModel11queryChangeEv</primary></indexterm>_ZN14QSqlQueryModel11queryChangeEv <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN14QSqlQueryModel12setLastErrorERK9QSqlError</primary></indexterm>_ZN14QSqlQueryModel12setLastErrorERK9QSqlError <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN14QSqlQueryModel13insertColumnsEiiRK11QModelIndex</primary></indexterm>_ZN14QSqlQueryModel13insertColumnsEiiRK11QModelIndex <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN14QSqlQueryModel13removeColumnsEiiRK11QModelIndex</primary></indexterm>_ZN14QSqlQueryModel13removeColumnsEiiRK11QModelIndex <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN14QSqlQueryModel13setHeaderDataEiN2Qt11OrientationERK8QVarianti</primary></indexterm>_ZN14QSqlQueryModel13setHeaderDataEiN2Qt11OrientationERK8QVarianti <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN14QSqlQueryModel5clearEv</primary></indexterm>_ZN14QSqlQueryModel5clearEv <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN14QSqlQueryModel8setQueryERK7QStringRK12QSqlDatabase</primary></indexterm>_ZN14QSqlQueryModel8setQueryERK7QStringRK12QSqlDatabase <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN14QSqlQueryModel8setQueryERK9QSqlQuery</primary></indexterm>_ZN14QSqlQueryModel8setQueryERK9QSqlQuery <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN14QSqlQueryModel9fetchMoreERK11QModelIndex</primary></indexterm>_ZN14QSqlQueryModel9fetchMoreERK11QModelIndex <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN14QSqlQueryModelC1EP7QObject</primary></indexterm>_ZN14QSqlQueryModelC1EP7QObject <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN14QSqlQueryModelC1ER21QSqlQueryModelPrivateP7QObject</primary></indexterm>_ZN14QSqlQueryModelC1ER21QSqlQueryModelPrivateP7QObject <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN14QSqlQueryModelC2EP7QObject</primary></indexterm>_ZN14QSqlQueryModelC2EP7QObject <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN14QSqlQueryModelC2ER21QSqlQueryModelPrivateP7QObject</primary></indexterm>_ZN14QSqlQueryModelC2ER21QSqlQueryModelPrivateP7QObject <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN14QSqlQueryModelD0Ev</primary></indexterm>_ZN14QSqlQueryModelD0Ev <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN14QSqlQueryModelD1Ev</primary></indexterm>_ZN14QSqlQueryModelD1Ev <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN14QSqlQueryModelD2Ev</primary></indexterm>_ZN14QSqlQueryModelD2Ev <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN14QSqlTableModel10insertRowsEiiRK11QModelIndex</primary></indexterm>_ZN14QSqlTableModel10insertRowsEiiRK11QModelIndex <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN14QSqlTableModel10removeRowsEiiRK11QModelIndex</primary></indexterm>_ZN14QSqlTableModel10removeRowsEiiRK11QModelIndex <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN14QSqlTableModel11primeInsertEiR10QSqlRecord</primary></indexterm>_ZN14QSqlTableModel11primeInsertEiR10QSqlRecord <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN14QSqlTableModel11qt_metacallEN11QMetaObject4CallEiPPv</primary></indexterm>_ZN14QSqlTableModel11qt_metacallEN11QMetaObject4CallEiPPv <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN14QSqlTableModel11qt_metacastEPKc</primary></indexterm>_ZN14QSqlTableModel11qt_metacastEPKc <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN14QSqlTableModel12beforeDeleteEi</primary></indexterm>_ZN14QSqlTableModel12beforeDeleteEi <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN14QSqlTableModel12beforeInsertER10QSqlRecord</primary></indexterm>_ZN14QSqlTableModel12beforeInsertER10QSqlRecord <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN14QSqlTableModel12beforeUpdateEiR10QSqlRecord</primary></indexterm>_ZN14QSqlTableModel12beforeUpdateEiR10QSqlRecord <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN14QSqlTableModel12insertRecordEiRK10QSqlRecord</primary></indexterm>_ZN14QSqlTableModel12insertRecordEiRK10QSqlRecord <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN14QSqlTableModel13removeColumnsEiiRK11QModelIndex</primary></indexterm>_ZN14QSqlTableModel13removeColumnsEiiRK11QModelIndex <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN14QSqlTableModel13setPrimaryKeyERK9QSqlIndex</primary></indexterm>_ZN14QSqlTableModel13setPrimaryKeyERK9QSqlIndex <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN14QSqlTableModel15setEditStrategyENS_12EditStrategyE</primary></indexterm>_ZN14QSqlTableModel15setEditStrategyENS_12EditStrategyE <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN14QSqlTableModel16updateRowInTableEiRK10QSqlRecord</primary></indexterm>_ZN14QSqlTableModel16updateRowInTableEiRK10QSqlRecord <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN14QSqlTableModel18deleteRowFromTableEi</primary></indexterm>_ZN14QSqlTableModel18deleteRowFromTableEi <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN14QSqlTableModel18insertRowIntoTableERK10QSqlRecord</primary></indexterm>_ZN14QSqlTableModel18insertRowIntoTableERK10QSqlRecord <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN14QSqlTableModel4sortEiN2Qt9SortOrderE</primary></indexterm>_ZN14QSqlTableModel4sortEiN2Qt9SortOrderE <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN14QSqlTableModel5clearEv</primary></indexterm>_ZN14QSqlTableModel5clearEv <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN14QSqlTableModel6revertEv</primary></indexterm>_ZN14QSqlTableModel6revertEv <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN14QSqlTableModel6selectEv</primary></indexterm>_ZN14QSqlTableModel6selectEv <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN14QSqlTableModel6submitEv</primary></indexterm>_ZN14QSqlTableModel6submitEv <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN14QSqlTableModel7setDataERK11QModelIndexRK8QVarianti</primary></indexterm>_ZN14QSqlTableModel7setDataERK11QModelIndexRK8QVarianti <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN14QSqlTableModel7setSortEiN2Qt9SortOrderE</primary></indexterm>_ZN14QSqlTableModel7setSortEiN2Qt9SortOrderE <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN14QSqlTableModel8setQueryERK9QSqlQuery</primary></indexterm>_ZN14QSqlTableModel8setQueryERK9QSqlQuery <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN14QSqlTableModel8setTableERK7QString</primary></indexterm>_ZN14QSqlTableModel8setTableERK7QString <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN14QSqlTableModel9revertAllEv</primary></indexterm>_ZN14QSqlTableModel9revertAllEv <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN14QSqlTableModel9revertRowEi</primary></indexterm>_ZN14QSqlTableModel9revertRowEi <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN14QSqlTableModel9setFilterERK7QString</primary></indexterm>_ZN14QSqlTableModel9setFilterERK7QString <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN14QSqlTableModel9setRecordEiRK10QSqlRecord</primary></indexterm>_ZN14QSqlTableModel9setRecordEiRK10QSqlRecord <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN14QSqlTableModel9submitAllEv</primary></indexterm>_ZN14QSqlTableModel9submitAllEv <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN14QSqlTableModelC1EP7QObject12QSqlDatabase</primary></indexterm>_ZN14QSqlTableModelC1EP7QObject12QSqlDatabase <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN14QSqlTableModelC1ER21QSqlTableModelPrivateP7QObject12QSqlDatabase</primary></indexterm>_ZN14QSqlTableModelC1ER21QSqlTableModelPrivateP7QObject12QSqlDatabase <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN14QSqlTableModelC2EP7QObject12QSqlDatabase</primary></indexterm>_ZN14QSqlTableModelC2EP7QObject12QSqlDatabase <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN14QSqlTableModelC2ER21QSqlTableModelPrivateP7QObject12QSqlDatabase</primary></indexterm>_ZN14QSqlTableModelC2ER21QSqlTableModelPrivateP7QObject12QSqlDatabase <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN14QSqlTableModelD0Ev</primary></indexterm>_ZN14QSqlTableModelD0Ev <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN14QSqlTableModelD1Ev</primary></indexterm>_ZN14QSqlTableModelD1Ev <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN14QSqlTableModelD2Ev</primary></indexterm>_ZN14QSqlTableModelD2Ev <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN16QSqlDriverPlugin11qt_metacallEN11QMetaObject4CallEiPPv</primary></indexterm>_ZN16QSqlDriverPlugin11qt_metacallEN11QMetaObject4CallEiPPv <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN16QSqlDriverPlugin11qt_metacastEPKc</primary></indexterm>_ZN16QSqlDriverPlugin11qt_metacastEPKc <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN16QSqlDriverPluginC1EP7QObject</primary></indexterm>_ZN16QSqlDriverPluginC1EP7QObject <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN16QSqlDriverPluginC2EP7QObject</primary></indexterm>_ZN16QSqlDriverPluginC2EP7QObject <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN16QSqlDriverPluginD0Ev</primary></indexterm>_ZN16QSqlDriverPluginD0Ev <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN16QSqlDriverPluginD1Ev</primary></indexterm>_ZN16QSqlDriverPluginD1Ev <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN16QSqlDriverPluginD2Ev</primary></indexterm>_ZN16QSqlDriverPluginD2Ev <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN24QSqlRelationalTableModel11qt_metacallEN11QMetaObject4CallEiPPv</primary></indexterm>_ZN24QSqlRelationalTableModel11qt_metacallEN11QMetaObject4CallEiPPv <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN24QSqlRelationalTableModel11qt_metacastEPKc</primary></indexterm>_ZN24QSqlRelationalTableModel11qt_metacastEPKc <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN24QSqlRelationalTableModel11setRelationEiRK12QSqlRelation</primary></indexterm>_ZN24QSqlRelationalTableModel11setRelationEiRK12QSqlRelation <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN24QSqlRelationalTableModel16updateRowInTableEiRK10QSqlRecord</primary></indexterm>_ZN24QSqlRelationalTableModel16updateRowInTableEiRK10QSqlRecord <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN24QSqlRelationalTableModel5clearEv</primary></indexterm>_ZN24QSqlRelationalTableModel5clearEv <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN24QSqlRelationalTableModel6selectEv</primary></indexterm>_ZN24QSqlRelationalTableModel6selectEv <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN24QSqlRelationalTableModel7setDataERK11QModelIndexRK8QVarianti</primary></indexterm>_ZN24QSqlRelationalTableModel7setDataERK11QModelIndexRK8QVarianti <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN24QSqlRelationalTableModel8setTableERK7QString</primary></indexterm>_ZN24QSqlRelationalTableModel8setTableERK7QString <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN24QSqlRelationalTableModel9revertRowEi</primary></indexterm>_ZN24QSqlRelationalTableModel9revertRowEi <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN24QSqlRelationalTableModelC1EP7QObject12QSqlDatabase</primary></indexterm>_ZN24QSqlRelationalTableModelC1EP7QObject12QSqlDatabase <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN24QSqlRelationalTableModelC2EP7QObject12QSqlDatabase</primary></indexterm>_ZN24QSqlRelationalTableModelC2EP7QObject12QSqlDatabase <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN24QSqlRelationalTableModelD0Ev</primary></indexterm>_ZN24QSqlRelationalTableModelD0Ev <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN24QSqlRelationalTableModelD1Ev</primary></indexterm>_ZN24QSqlRelationalTableModelD1Ev <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN24QSqlRelationalTableModelD2Ev</primary></indexterm>_ZN24QSqlRelationalTableModelD2Ev <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN26QSqlDriverFactoryInterfaceD0Ev</primary></indexterm>_ZN26QSqlDriverFactoryInterfaceD0Ev <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN26QSqlDriverFactoryInterfaceD1Ev</primary></indexterm>_ZN26QSqlDriverFactoryInterfaceD1Ev <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QSqlError13setDriverTextERK7QString</primary></indexterm>_ZN9QSqlError13setDriverTextERK7QString <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QSqlError15setDatabaseTextERK7QString</primary></indexterm>_ZN9QSqlError15setDatabaseTextERK7QString <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QSqlError7setTypeENS_9ErrorTypeE</primary></indexterm>_ZN9QSqlError7setTypeENS_9ErrorTypeE <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QSqlError9setNumberEi</primary></indexterm>_ZN9QSqlError9setNumberEi <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QSqlErrorC1ERK7QStringS2_NS_9ErrorTypeEi</primary></indexterm>_ZN9QSqlErrorC1ERK7QStringS2_NS_9ErrorTypeEi <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QSqlErrorC1ERKS_</primary></indexterm>_ZN9QSqlErrorC1ERKS_ <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QSqlErrorC2ERK7QStringS2_NS_9ErrorTypeEi</primary></indexterm>_ZN9QSqlErrorC2ERK7QStringS2_NS_9ErrorTypeEi <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QSqlErrorC2ERKS_</primary></indexterm>_ZN9QSqlErrorC2ERKS_ <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QSqlErrorD1Ev</primary></indexterm>_ZN9QSqlErrorD1Ev <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QSqlErrorD2Ev</primary></indexterm>_ZN9QSqlErrorD2Ev <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QSqlErroraSERKS_</primary></indexterm>_ZN9QSqlErroraSERKS_ <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QSqlField10setSqlTypeEi</primary></indexterm>_ZN9QSqlField10setSqlTypeEi <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QSqlField11setReadOnlyEb</primary></indexterm>_ZN9QSqlField11setReadOnlyEb <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QSqlField12setAutoValueEb</primary></indexterm>_ZN9QSqlField12setAutoValueEb <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QSqlField12setGeneratedEb</primary></indexterm>_ZN9QSqlField12setGeneratedEb <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QSqlField12setPrecisionEi</primary></indexterm>_ZN9QSqlField12setPrecisionEi <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QSqlField15setDefaultValueERK8QVariant</primary></indexterm>_ZN9QSqlField15setDefaultValueERK8QVariant <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QSqlField17setRequiredStatusENS_14RequiredStatusE</primary></indexterm>_ZN9QSqlField17setRequiredStatusENS_14RequiredStatusE <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QSqlField5clearEv</primary></indexterm>_ZN9QSqlField5clearEv <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QSqlField7setNameERK7QString</primary></indexterm>_ZN9QSqlField7setNameERK7QString <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QSqlField7setTypeEN8QVariant4TypeE</primary></indexterm>_ZN9QSqlField7setTypeEN8QVariant4TypeE <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QSqlField8setValueERK8QVariant</primary></indexterm>_ZN9QSqlField8setValueERK8QVariant <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QSqlField9setLengthEi</primary></indexterm>_ZN9QSqlField9setLengthEi <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QSqlFieldC1ERK7QStringN8QVariant4TypeE</primary></indexterm>_ZN9QSqlFieldC1ERK7QStringN8QVariant4TypeE <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QSqlFieldC1ERKS_</primary></indexterm>_ZN9QSqlFieldC1ERKS_ <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QSqlFieldC2ERK7QStringN8QVariant4TypeE</primary></indexterm>_ZN9QSqlFieldC2ERK7QStringN8QVariant4TypeE <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QSqlFieldC2ERKS_</primary></indexterm>_ZN9QSqlFieldC2ERKS_ <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QSqlFieldD1Ev</primary></indexterm>_ZN9QSqlFieldD1Ev <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QSqlFieldD2Ev</primary></indexterm>_ZN9QSqlFieldD2Ev <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QSqlFieldaSERKS_</primary></indexterm>_ZN9QSqlFieldaSERKS_ <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QSqlIndex13setCursorNameERK7QString</primary></indexterm>_ZN9QSqlIndex13setCursorNameERK7QString <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QSqlIndex13setDescendingEib</primary></indexterm>_ZN9QSqlIndex13setDescendingEib <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QSqlIndex6appendERK9QSqlField</primary></indexterm>_ZN9QSqlIndex6appendERK9QSqlField <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QSqlIndex6appendERK9QSqlFieldb</primary></indexterm>_ZN9QSqlIndex6appendERK9QSqlFieldb <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QSqlIndex7setNameERK7QString</primary></indexterm>_ZN9QSqlIndex7setNameERK7QString <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QSqlIndexC1ERK7QStringS2_</primary></indexterm>_ZN9QSqlIndexC1ERK7QStringS2_ <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QSqlIndexC1ERKS_</primary></indexterm>_ZN9QSqlIndexC1ERKS_ <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QSqlIndexC2ERK7QStringS2_</primary></indexterm>_ZN9QSqlIndexC2ERK7QStringS2_ <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QSqlIndexC2ERKS_</primary></indexterm>_ZN9QSqlIndexC2ERKS_ <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QSqlIndexD1Ev</primary></indexterm>_ZN9QSqlIndexD1Ev <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QSqlIndexD2Ev</primary></indexterm>_ZN9QSqlIndexD2Ev <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QSqlIndexaSERKS_</primary></indexterm>_ZN9QSqlIndexaSERKS_ <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QSqlQuery12addBindValueERK8QVariant6QFlagsIN4QSql13ParamTypeFlagEE</primary></indexterm>_ZN9QSqlQuery12addBindValueERK8QVariant6QFlagsIN4QSql13ParamTypeFlagEE <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QSqlQuery14setForwardOnlyEb</primary></indexterm>_ZN9QSqlQuery14setForwardOnlyEb <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QSqlQuery4execERK7QString</primary></indexterm>_ZN9QSqlQuery4execERK7QString <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QSqlQuery4execEv</primary></indexterm>_ZN9QSqlQuery4execEv <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QSqlQuery4lastEv</primary></indexterm>_ZN9QSqlQuery4lastEv <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QSqlQuery4nextEv</primary></indexterm>_ZN9QSqlQuery4nextEv <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QSqlQuery4seekEib</primary></indexterm>_ZN9QSqlQuery4seekEib <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QSqlQuery5clearEv</primary></indexterm>_ZN9QSqlQuery5clearEv <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QSqlQuery5firstEv</primary></indexterm>_ZN9QSqlQuery5firstEv <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QSqlQuery7prepareERK7QString</primary></indexterm>_ZN9QSqlQuery7prepareERK7QString <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QSqlQuery8previousEv</primary></indexterm>_ZN9QSqlQuery8previousEv <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QSqlQuery9bindValueERK7QStringRK8QVariant6QFlagsIN4QSql13ParamTypeFlagEE</primary></indexterm>_ZN9QSqlQuery9bindValueERK7QStringRK8QVariant6QFlagsIN4QSql13ParamTypeFlagEE <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QSqlQuery9bindValueEiRK8QVariant6QFlagsIN4QSql13ParamTypeFlagEE</primary></indexterm>_ZN9QSqlQuery9bindValueEiRK8QVariant6QFlagsIN4QSql13ParamTypeFlagEE <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QSqlQueryC1E12QSqlDatabase</primary></indexterm>_ZN9QSqlQueryC1E12QSqlDatabase <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QSqlQueryC1EP10QSqlResult</primary></indexterm>_ZN9QSqlQueryC1EP10QSqlResult <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QSqlQueryC1ERK7QString12QSqlDatabase</primary></indexterm>_ZN9QSqlQueryC1ERK7QString12QSqlDatabase <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QSqlQueryC1ERKS_</primary></indexterm>_ZN9QSqlQueryC1ERKS_ <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QSqlQueryC2E12QSqlDatabase</primary></indexterm>_ZN9QSqlQueryC2E12QSqlDatabase <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QSqlQueryC2EP10QSqlResult</primary></indexterm>_ZN9QSqlQueryC2EP10QSqlResult <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QSqlQueryC2ERK7QString12QSqlDatabase</primary></indexterm>_ZN9QSqlQueryC2ERK7QString12QSqlDatabase <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QSqlQueryC2ERKS_</primary></indexterm>_ZN9QSqlQueryC2ERKS_ <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QSqlQueryD1Ev</primary></indexterm>_ZN9QSqlQueryD1Ev <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QSqlQueryD2Ev</primary></indexterm>_ZN9QSqlQueryD2Ev <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QSqlQueryaSERKS_</primary></indexterm>_ZN9QSqlQueryaSERKS_ <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK10QSqlDriver10metaObjectEv</primary></indexterm>_ZNK10QSqlDriver10metaObjectEv <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK10QSqlDriver11formatValueERK9QSqlFieldb</primary></indexterm>_ZNK10QSqlDriver11formatValueERK9QSqlFieldb <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK10QSqlDriver11isOpenErrorEv</primary></indexterm>_ZNK10QSqlDriver11isOpenErrorEv <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK10QSqlDriver12primaryIndexERK7QString</primary></indexterm>_ZNK10QSqlDriver12primaryIndexERK7QString <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK10QSqlDriver12sqlStatementENS_13StatementTypeERK7QStringRK10QSqlRecordb</primary></indexterm>_ZNK10QSqlDriver12sqlStatementENS_13StatementTypeERK7QStringRK10QSqlRecordb <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK10QSqlDriver16escapeIdentifierERK7QStringNS_14IdentifierTypeE</primary></indexterm>_ZNK10QSqlDriver16escapeIdentifierERK7QStringNS_14IdentifierTypeE <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK10QSqlDriver6handleEv</primary></indexterm>_ZNK10QSqlDriver6handleEv <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK10QSqlDriver6isOpenEv</primary></indexterm>_ZNK10QSqlDriver6isOpenEv <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK10QSqlDriver6recordERK7QString</primary></indexterm>_ZNK10QSqlDriver6recordERK7QString <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK10QSqlDriver6tablesEN4QSql9TableTypeE</primary></indexterm>_ZNK10QSqlDriver6tablesEN4QSql9TableTypeE <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK10QSqlDriver9lastErrorEv</primary></indexterm>_ZNK10QSqlDriver9lastErrorEv <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK10QSqlRecord11isGeneratedERK7QString</primary></indexterm>_ZNK10QSqlRecord11isGeneratedERK7QString <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK10QSqlRecord11isGeneratedEi</primary></indexterm>_ZNK10QSqlRecord11isGeneratedEi <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK10QSqlRecord12toStringListERK7QString</primary></indexterm>_ZNK10QSqlRecord12toStringListERK7QString <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK10QSqlRecord5countEv</primary></indexterm>_ZNK10QSqlRecord5countEv <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK10QSqlRecord5fieldERK7QString</primary></indexterm>_ZNK10QSqlRecord5fieldERK7QString <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK10QSqlRecord5fieldEi</primary></indexterm>_ZNK10QSqlRecord5fieldEi <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK10QSqlRecord5valueERK7QString</primary></indexterm>_ZNK10QSqlRecord5valueERK7QString <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK10QSqlRecord5valueEi</primary></indexterm>_ZNK10QSqlRecord5valueEi <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK10QSqlRecord6isNullERK7QString</primary></indexterm>_ZNK10QSqlRecord6isNullERK7QString <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK10QSqlRecord6isNullEi</primary></indexterm>_ZNK10QSqlRecord6isNullEi <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK10QSqlRecord7indexOfERK7QString</primary></indexterm>_ZNK10QSqlRecord7indexOfERK7QString <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK10QSqlRecord7isEmptyEv</primary></indexterm>_ZNK10QSqlRecord7isEmptyEv <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK10QSqlRecord8containsERK7QString</primary></indexterm>_ZNK10QSqlRecord8containsERK7QString <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK10QSqlRecord8fieldPtrERK7QString</primary></indexterm>_ZNK10QSqlRecord8fieldPtrERK7QString <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK10QSqlRecord8fieldPtrEi</primary></indexterm>_ZNK10QSqlRecord8fieldPtrEi <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK10QSqlRecord8toStringERK7QStringS2_</primary></indexterm>_ZNK10QSqlRecord8toStringERK7QStringS2_ <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK10QSqlRecord9fieldNameEi</primary></indexterm>_ZNK10QSqlRecord9fieldNameEi <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK10QSqlRecordeqERKS_</primary></indexterm>_ZNK10QSqlRecordeqERKS_ <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK10QSqlResult10boundValueERK7QString</primary></indexterm>_ZNK10QSqlResult10boundValueERK7QString <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK10QSqlResult10boundValueEi</primary></indexterm>_ZNK10QSqlResult10boundValueEi <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK10QSqlResult11boundValuesEv</primary></indexterm>_ZNK10QSqlResult11boundValuesEv <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK10QSqlResult12hasOutValuesEv</primary></indexterm>_ZNK10QSqlResult12hasOutValuesEv <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK10QSqlResult12lastInsertIdEv</primary></indexterm>_ZNK10QSqlResult12lastInsertIdEv <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK10QSqlResult13bindValueTypeERK7QString</primary></indexterm>_ZNK10QSqlResult13bindValueTypeERK7QString <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK10QSqlResult13bindValueTypeEi</primary></indexterm>_ZNK10QSqlResult13bindValueTypeEi <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK10QSqlResult13bindingSyntaxEv</primary></indexterm>_ZNK10QSqlResult13bindingSyntaxEv <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK10QSqlResult13executedQueryEv</primary></indexterm>_ZNK10QSqlResult13executedQueryEv <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK10QSqlResult13isForwardOnlyEv</primary></indexterm>_ZNK10QSqlResult13isForwardOnlyEv <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK10QSqlResult14boundValueNameEi</primary></indexterm>_ZNK10QSqlResult14boundValueNameEi <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK10QSqlResult15boundValueCountEv</primary></indexterm>_ZNK10QSqlResult15boundValueCountEv <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK10QSqlResult2atEv</primary></indexterm>_ZNK10QSqlResult2atEv <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK10QSqlResult6driverEv</primary></indexterm>_ZNK10QSqlResult6driverEv <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK10QSqlResult6handleEv</primary></indexterm>_ZNK10QSqlResult6handleEv <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK10QSqlResult6recordEv</primary></indexterm>_ZNK10QSqlResult6recordEv <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK10QSqlResult7isValidEv</primary></indexterm>_ZNK10QSqlResult7isValidEv <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK10QSqlResult8isActiveEv</primary></indexterm>_ZNK10QSqlResult8isActiveEv <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK10QSqlResult8isSelectEv</primary></indexterm>_ZNK10QSqlResult8isSelectEv <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK10QSqlResult9lastErrorEv</primary></indexterm>_ZNK10QSqlResult9lastErrorEv <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK10QSqlResult9lastQueryEv</primary></indexterm>_ZNK10QSqlResult9lastQueryEv <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK12QSqlDatabase10driverNameEv</primary></indexterm>_ZNK12QSqlDatabase10driverNameEv <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK12QSqlDatabase10recordInfoERK9QSqlQuery</primary></indexterm>_ZNK12QSqlDatabase10recordInfoERK9QSqlQuery <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK12QSqlDatabase11isOpenErrorEv</primary></indexterm>_ZNK12QSqlDatabase11isOpenErrorEv <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK12QSqlDatabase12databaseNameEv</primary></indexterm>_ZNK12QSqlDatabase12databaseNameEv <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK12QSqlDatabase12primaryIndexERK7QString</primary></indexterm>_ZNK12QSqlDatabase12primaryIndexERK7QString <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK12QSqlDatabase14connectOptionsEv</primary></indexterm>_ZNK12QSqlDatabase14connectOptionsEv <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK12QSqlDatabase4execERK7QString</primary></indexterm>_ZNK12QSqlDatabase4execERK7QString <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK12QSqlDatabase4portEv</primary></indexterm>_ZNK12QSqlDatabase4portEv <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK12QSqlDatabase6driverEv</primary></indexterm>_ZNK12QSqlDatabase6driverEv <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK12QSqlDatabase6isOpenEv</primary></indexterm>_ZNK12QSqlDatabase6isOpenEv <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK12QSqlDatabase6recordERK7QString</primary></indexterm>_ZNK12QSqlDatabase6recordERK7QString <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK12QSqlDatabase6recordERK9QSqlQuery</primary></indexterm>_ZNK12QSqlDatabase6recordERK9QSqlQuery <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK12QSqlDatabase6tablesEN4QSql9TableTypeE</primary></indexterm>_ZNK12QSqlDatabase6tablesEN4QSql9TableTypeE <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK12QSqlDatabase7isValidEv</primary></indexterm>_ZNK12QSqlDatabase7isValidEv <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK12QSqlDatabase8hostNameEv</primary></indexterm>_ZNK12QSqlDatabase8hostNameEv <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK12QSqlDatabase8passwordEv</primary></indexterm>_ZNK12QSqlDatabase8passwordEv <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK12QSqlDatabase8userNameEv</primary></indexterm>_ZNK12QSqlDatabase8userNameEv <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK12QSqlDatabase9lastErrorEv</primary></indexterm>_ZNK12QSqlDatabase9lastErrorEv <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK14QSqlQueryModel10headerDataEiN2Qt11OrientationEi</primary></indexterm>_ZNK14QSqlQueryModel10headerDataEiN2Qt11OrientationEi <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK14QSqlQueryModel10metaObjectEv</primary></indexterm>_ZNK14QSqlQueryModel10metaObjectEv <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK14QSqlQueryModel11columnCountERK11QModelIndex</primary></indexterm>_ZNK14QSqlQueryModel11columnCountERK11QModelIndex <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK14QSqlQueryModel12canFetchMoreERK11QModelIndex</primary></indexterm>_ZNK14QSqlQueryModel12canFetchMoreERK11QModelIndex <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK14QSqlQueryModel12indexInQueryERK11QModelIndex</primary></indexterm>_ZNK14QSqlQueryModel12indexInQueryERK11QModelIndex <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK14QSqlQueryModel4dataERK11QModelIndexi</primary></indexterm>_ZNK14QSqlQueryModel4dataERK11QModelIndexi <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK14QSqlQueryModel5queryEv</primary></indexterm>_ZNK14QSqlQueryModel5queryEv <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK14QSqlQueryModel6recordEi</primary></indexterm>_ZNK14QSqlQueryModel6recordEi <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK14QSqlQueryModel6recordEv</primary></indexterm>_ZNK14QSqlQueryModel6recordEv <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK14QSqlQueryModel8rowCountERK11QModelIndex</primary></indexterm>_ZNK14QSqlQueryModel8rowCountERK11QModelIndex <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK14QSqlQueryModel9lastErrorEv</primary></indexterm>_ZNK14QSqlQueryModel9lastErrorEv <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK14QSqlTableModel10fieldIndexERK7QString</primary></indexterm>_ZNK14QSqlTableModel10fieldIndexERK7QString <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK14QSqlTableModel10headerDataEiN2Qt11OrientationEi</primary></indexterm>_ZNK14QSqlTableModel10headerDataEiN2Qt11OrientationEi <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK14QSqlTableModel10metaObjectEv</primary></indexterm>_ZNK14QSqlTableModel10metaObjectEv <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK14QSqlTableModel10primaryKeyEv</primary></indexterm>_ZNK14QSqlTableModel10primaryKeyEv <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK14QSqlTableModel12editStrategyEv</primary></indexterm>_ZNK14QSqlTableModel12editStrategyEv <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK14QSqlTableModel12indexInQueryERK11QModelIndex</primary></indexterm>_ZNK14QSqlTableModel12indexInQueryERK11QModelIndex <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK14QSqlTableModel13orderByClauseEv</primary></indexterm>_ZNK14QSqlTableModel13orderByClauseEv <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK14QSqlTableModel15selectStatementEv</primary></indexterm>_ZNK14QSqlTableModel15selectStatementEv <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK14QSqlTableModel4dataERK11QModelIndexi</primary></indexterm>_ZNK14QSqlTableModel4dataERK11QModelIndexi <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK14QSqlTableModel5flagsERK11QModelIndex</primary></indexterm>_ZNK14QSqlTableModel5flagsERK11QModelIndex <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK14QSqlTableModel6filterEv</primary></indexterm>_ZNK14QSqlTableModel6filterEv <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK14QSqlTableModel7isDirtyERK11QModelIndex</primary></indexterm>_ZNK14QSqlTableModel7isDirtyERK11QModelIndex <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK14QSqlTableModel8databaseEv</primary></indexterm>_ZNK14QSqlTableModel8databaseEv <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK14QSqlTableModel8rowCountERK11QModelIndex</primary></indexterm>_ZNK14QSqlTableModel8rowCountERK11QModelIndex <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK14QSqlTableModel9tableNameEv</primary></indexterm>_ZNK14QSqlTableModel9tableNameEv <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK16QSqlDriverPlugin10metaObjectEv</primary></indexterm>_ZNK16QSqlDriverPlugin10metaObjectEv <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK24QSqlRelationalTableModel10metaObjectEv</primary></indexterm>_ZNK24QSqlRelationalTableModel10metaObjectEv <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK24QSqlRelationalTableModel13orderByClauseEv</primary></indexterm>_ZNK24QSqlRelationalTableModel13orderByClauseEv <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK24QSqlRelationalTableModel13relationModelEi</primary></indexterm>_ZNK24QSqlRelationalTableModel13relationModelEi <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK24QSqlRelationalTableModel15selectStatementEv</primary></indexterm>_ZNK24QSqlRelationalTableModel15selectStatementEv <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK24QSqlRelationalTableModel4dataERK11QModelIndexi</primary></indexterm>_ZNK24QSqlRelationalTableModel4dataERK11QModelIndexi <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK24QSqlRelationalTableModel8relationEi</primary></indexterm>_ZNK24QSqlRelationalTableModel8relationEi <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK9QSqlError10driverTextEv</primary></indexterm>_ZNK9QSqlError10driverTextEv <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK9QSqlError12databaseTextEv</primary></indexterm>_ZNK9QSqlError12databaseTextEv <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK9QSqlError4textEv</primary></indexterm>_ZNK9QSqlError4textEv <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK9QSqlError4typeEv</primary></indexterm>_ZNK9QSqlError4typeEv <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK9QSqlError6numberEv</primary></indexterm>_ZNK9QSqlError6numberEv <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK9QSqlError7isValidEv</primary></indexterm>_ZNK9QSqlError7isValidEv <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK9QSqlField10isReadOnlyEv</primary></indexterm>_ZNK9QSqlField10isReadOnlyEv <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK9QSqlField11isAutoValueEv</primary></indexterm>_ZNK9QSqlField11isAutoValueEv <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK9QSqlField11isGeneratedEv</primary></indexterm>_ZNK9QSqlField11isGeneratedEv <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK9QSqlField12defaultValueEv</primary></indexterm>_ZNK9QSqlField12defaultValueEv <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK9QSqlField14requiredStatusEv</primary></indexterm>_ZNK9QSqlField14requiredStatusEv <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK9QSqlField4nameEv</primary></indexterm>_ZNK9QSqlField4nameEv <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK9QSqlField4typeEv</primary></indexterm>_ZNK9QSqlField4typeEv <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK9QSqlField6isNullEv</primary></indexterm>_ZNK9QSqlField6isNullEv <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK9QSqlField6lengthEv</primary></indexterm>_ZNK9QSqlField6lengthEv <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK9QSqlField6typeIDEv</primary></indexterm>_ZNK9QSqlField6typeIDEv <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK9QSqlField7isValidEv</primary></indexterm>_ZNK9QSqlField7isValidEv <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK9QSqlField9precisionEv</primary></indexterm>_ZNK9QSqlField9precisionEv <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK9QSqlFieldeqERKS_</primary></indexterm>_ZNK9QSqlFieldeqERKS_ <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK9QSqlIndex12isDescendingEi</primary></indexterm>_ZNK9QSqlIndex12isDescendingEi <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK9QSqlIndex12toStringListERK7QStringb</primary></indexterm>_ZNK9QSqlIndex12toStringListERK7QStringb <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK9QSqlIndex8toStringERK7QStringS2_b</primary></indexterm>_ZNK9QSqlIndex8toStringERK7QStringS2_b <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK9QSqlQuery10boundValueERK7QString</primary></indexterm>_ZNK9QSqlQuery10boundValueERK7QString <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK9QSqlQuery10boundValueEi</primary></indexterm>_ZNK9QSqlQuery10boundValueEi <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK9QSqlQuery11boundValuesEv</primary></indexterm>_ZNK9QSqlQuery11boundValuesEv <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK9QSqlQuery12lastInsertIdEv</primary></indexterm>_ZNK9QSqlQuery12lastInsertIdEv <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK9QSqlQuery13executedQueryEv</primary></indexterm>_ZNK9QSqlQuery13executedQueryEv <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK9QSqlQuery13isForwardOnlyEv</primary></indexterm>_ZNK9QSqlQuery13isForwardOnlyEv <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK9QSqlQuery15numRowsAffectedEv</primary></indexterm>_ZNK9QSqlQuery15numRowsAffectedEv <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK9QSqlQuery2atEv</primary></indexterm>_ZNK9QSqlQuery2atEv <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK9QSqlQuery4sizeEv</primary></indexterm>_ZNK9QSqlQuery4sizeEv <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK9QSqlQuery5valueEi</primary></indexterm>_ZNK9QSqlQuery5valueEi <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK9QSqlQuery6driverEv</primary></indexterm>_ZNK9QSqlQuery6driverEv <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK9QSqlQuery6isNullEi</primary></indexterm>_ZNK9QSqlQuery6isNullEi <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK9QSqlQuery6recordEv</primary></indexterm>_ZNK9QSqlQuery6recordEv <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK9QSqlQuery6resultEv</primary></indexterm>_ZNK9QSqlQuery6resultEv <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK9QSqlQuery7isValidEv</primary></indexterm>_ZNK9QSqlQuery7isValidEv <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK9QSqlQuery8isActiveEv</primary></indexterm>_ZNK9QSqlQuery8isActiveEv <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK9QSqlQuery8isSelectEv</primary></indexterm>_ZNK9QSqlQuery8isSelectEv <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK9QSqlQuery9lastErrorEv</primary></indexterm>_ZNK9QSqlQuery9lastErrorEv <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK9QSqlQuery9lastQueryEv</primary></indexterm>_ZNK9QSqlQuery9lastQueryEv <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_Zls6QDebugRK10QSqlRecord</primary></indexterm>_Zls6QDebugRK10QSqlRecord <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
<ENTRY><indexterm><primary>_Zls6QDebugRK12QSqlDatabase</primary></indexterm>_Zls6QDebugRK12QSqlDatabase <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_Zls6QDebugRK9QSqlError</primary></indexterm>_Zls6QDebugRK9QSqlError <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
<ENTRY><indexterm><primary>_Zls6QDebugRK9QSqlField</primary></indexterm>_Zls6QDebugRK9QSqlField <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for QtSql specified in <XREF linkend="tbl-libQtSql-qts-data">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<TABLE id="tbl-libQtSql-qts-data">
<TITLE>libQtSql - QtSql Data Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>_ZN10QSqlDriver16staticMetaObjectE</primary></indexterm>_ZN10QSqlDriver16staticMetaObjectE <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN12QSqlDatabase17defaultConnectionE</primary></indexterm>_ZN12QSqlDatabase17defaultConnectionE <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN14QSqlQueryModel16staticMetaObjectE</primary></indexterm>_ZN14QSqlQueryModel16staticMetaObjectE <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN14QSqlTableModel16staticMetaObjectE</primary></indexterm>_ZN14QSqlTableModel16staticMetaObjectE <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN16QSqlDriverPlugin16staticMetaObjectE</primary></indexterm>_ZN16QSqlDriverPlugin16staticMetaObjectE <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN24QSqlRelationalTableModel16staticMetaObjectE</primary></indexterm>_ZN24QSqlRelationalTableModel16staticMetaObjectE <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZTI10QSqlDriver</primary></indexterm>_ZTI10QSqlDriver <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZTI10QSqlResult</primary></indexterm>_ZTI10QSqlResult <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZTI14QSqlQueryModel</primary></indexterm>_ZTI14QSqlQueryModel <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZTI14QSqlTableModel</primary></indexterm>_ZTI14QSqlTableModel <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZTI16QSqlCachedResult</primary></indexterm>_ZTI16QSqlCachedResult <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZTI16QSqlDriverPlugin</primary></indexterm>_ZTI16QSqlDriverPlugin <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZTI24QSqlRelationalTableModel</primary></indexterm>_ZTI24QSqlRelationalTableModel <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZTI26QSqlDriverFactoryInterface</primary></indexterm>_ZTI26QSqlDriverFactoryInterface <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZTV10QSqlDriver</primary></indexterm>_ZTV10QSqlDriver <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZTV10QSqlResult</primary></indexterm>_ZTV10QSqlResult <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZTV14QSqlQueryModel</primary></indexterm>_ZTV14QSqlQueryModel <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZTV14QSqlTableModel</primary></indexterm>_ZTV14QSqlTableModel <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZTV16QSqlCachedResult</primary></indexterm>_ZTV16QSqlCachedResult <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZTV16QSqlDriverPlugin</primary></indexterm>_ZTV16QSqlDriverPlugin <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZTV24QSqlRelationalTableModel</primary></indexterm>_ZTV24QSqlRelationalTableModel <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZTV26QSqlDriverFactoryInterface</primary></indexterm>_ZTV26QSqlDriverFactoryInterface <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn8_N16QSqlDriverPluginD0Ev</primary></indexterm>_ZThn8_N16QSqlDriverPluginD0Ev <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn8_N16QSqlDriverPluginD1Ev</primary></indexterm>_ZThn8_N16QSqlDriverPluginD1Ev <LINK LINKEND="REFSTD.libQtSql.1">[QtSql]</LINK></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>
</SECT2>
</SECT1>
<SECT1 ID=libQtSql-ddefs>
<TITLE>Data Definitions for libQtSql</TITLE>
<PARA>
This section defines global identifiers and their values that are associated
with interfaces contained in libQtSql.
These definitions are organized into groups that
correspond to system headers. This convention is used as a
convenience for the reader, and does not imply the existence
of these headers, or their content.
Where an interface is defined as requiring a particular system header file
all of the data definitions for that system header file presented here shall be in effect.
</PARA>
<PARA>
This section gives data definitions to promote binary application
portability, not to repeat source interface definitions available
elsewhere. System providers and application developers should use this ABI
to supplement - not to replace - source interface definition specifications.
</PARA>
<PARA>
This specification uses the <XREF LINKEND='std.ISOC99'> C Language as the reference programming language, and data definitions are specified in ISO C format. The C language is used here as a convenient notation. Using a C language description of these data objects does not preclude their use by other programming languages.</PARA>
<SECT2>
<TITLE>QtSql/qsql.h</TITLE>
<PARA>
</PARA>
<SCREEN>
/****************************************************************************
**
** Copyright (C) 1992-2006 Trolltech AS. All rights reserved.
**
** This file is part of the LSB_Toolkit_Qt of the Qt Toolkit.
**
** This file may be distributed and/or modified under the terms of the
** GNU General Public License version 2 as published by the Free Software
** Foundation and appearing in the file LICENSE.GPL included in the
** packaging of this file.
**
** This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
** WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
**
****************************************************************************/

#ifndef QSQL_H
#define QSQL_H

#include &lt;QtCore/qglobal.h>

QT_MODULE(Sql)

namespace QSql
{
    enum Location {
        BeforeFirstRow = -1,
        AfterLastRow = -2
#ifdef QT3_SUPPORT
        , BeforeFirst = BeforeFirstRow,
        AfterLast = AfterLastRow
#endif
    };

    enum ParamTypeFlag {
        In = 0x00000001,
        Out = 0x00000002,
        InOut = In | Out,
        Binary = 0x00000004
    };
    Q_DECLARE_FLAGS(ParamType, ParamTypeFlag)

    enum TableType {
        Tables = 0x01,
        SystemTables = 0x02,
        Views = 0x04,
        AllTables = 0xff
    };

#ifdef QT3_SUPPORT
    enum Op {
        None = -1,
        Insert = 0,
        Update = 1,
        Delete = 2
    };

    enum Confirm {
        Cancel = -1,
        No = 0,
        Yes = 1
    };
#endif
}

Q_DECLARE_OPERATORS_FOR_FLAGS(QSql::ParamType)

#endif // QSQL_H
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtSql/qsqldatabase.h</TITLE>
<PARA>
</PARA>
<SCREEN>
/****************************************************************************
**
** Copyright (C) 1992-2006 Trolltech AS. All rights reserved.
**
** This file is part of the LSB_Toolkit_Qt of the Qt Toolkit.
**
** This file may be distributed and/or modified under the terms of the
** GNU General Public License version 2 as published by the Free Software
** Foundation and appearing in the file LICENSE.GPL included in the
** packaging of this file.
**
** This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
** WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
**
****************************************************************************/

#ifndef QSQLDATABASE_H
#define QSQLDATABASE_H

#include &lt;QtCore/qstring.h>
#include &lt;QtSql/qsql.h>
#ifdef QT3_SUPPORT
#include &lt;QtSql/qsqlrecord.h>
#endif

QT_MODULE(Sql)

class QSqlError;
class QSqlDriver;
class QSqlIndex;
class QSqlRecord;
class QSqlQuery;
class QSqlDatabasePrivate;

class Q_SQL_EXPORT QSqlDriverCreatorBase
{
public:
    virtual ~QSqlDriverCreatorBase() {}
    virtual QSqlDriver *createObject() const = 0;
};

template &lt;class T>
class QSqlDriverCreator : public QSqlDriverCreatorBase
{
public:
    QSqlDriver *createObject() const { return new T; }
};

class Q_SQL_EXPORT QSqlDatabase
{
public:
    QSqlDatabase();
    QSqlDatabase(const QSqlDatabase &amp;other);
    ~QSqlDatabase();

    QSqlDatabase &amp;operator=(const QSqlDatabase &amp;other);

    bool open();
    bool open(const QString&amp; user, const QString&amp; password);
    void close();
    bool isOpen() const;
    bool isOpenError() const;
    QStringList tables(QSql::TableType type = QSql::Tables) const;
    QSqlIndex primaryIndex(const QString&amp; tablename) const;
    QSqlRecord record(const QString&amp; tablename) const;
#ifdef QT3_SUPPORT
    QT3_SUPPORT QSqlRecord record(const QSqlQuery&amp; query) const;
    inline QT3_SUPPORT QSqlRecord recordInfo(const QString&amp; tablename) const
    { return record(tablename); }
    QT3_SUPPORT QSqlRecord recordInfo(const QSqlQuery&amp; query) const;
#endif
    QSqlQuery exec(const QString&amp; query = QString()) const;
    QSqlError lastError() const;
    bool isValid() const;

    bool transaction();
    bool commit();
    bool rollback();

    void setDatabaseName(const QString&amp; name);
    void setUserName(const QString&amp; name);
    void setPassword(const QString&amp; password);
    void setHostName(const QString&amp; host);
    void setPort(int p);
    void setConnectOptions(const QString&amp; options = QString());
    QString databaseName() const;
    QString userName() const;
    QString password() const;
    QString hostName() const;
    QString driverName() const;
    int port() const;
    QString connectOptions() const;

    QSqlDriver* driver() const;

    QT_STATIC_CONST char *defaultConnection;

    static QSqlDatabase addDatabase(const QString&amp; type,
                                 const QString&amp; connectionName = QLatin1String(defaultConnection));
    static QSqlDatabase addDatabase(QSqlDriver* driver,
                                 const QString&amp; connectionName = QLatin1String(defaultConnection));
    static QSqlDatabase cloneDatabase(const QSqlDatabase &amp;other, const QString&amp; connectionName);
    static QSqlDatabase database(const QString&amp; connectionName = QLatin1String(defaultConnection),
                                 bool open = true);
    static void removeDatabase(const QString&amp; connectionName);
    static bool contains(const QString&amp; connectionName = QLatin1String(defaultConnection));
    static QStringList drivers();
    static QStringList connectionNames();
    static void registerSqlDriver(const QString &amp;name, QSqlDriverCreatorBase *creator);
    static bool isDriverAvailable(const QString &amp;name);

protected:
    explicit QSqlDatabase(const QString&amp; type);
    explicit QSqlDatabase(QSqlDriver* driver);

private:
    friend class QSqlDatabasePrivate;
    QSqlDatabasePrivate *d;
};

#ifndef QT_NO_DEBUG_STREAM
Q_SQL_EXPORT QDebug operator&lt;&lt;(QDebug, const QSqlDatabase &amp;);
#endif

#endif // QSQLDATABASE_H
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtSql/qsqldriver.h</TITLE>
<PARA>
</PARA>
<SCREEN>
/****************************************************************************
**
** Copyright (C) 1992-2006 Trolltech AS. All rights reserved.
**
** This file is part of the LSB_Toolkit_Qt of the Qt Toolkit.
**
** This file may be distributed and/or modified under the terms of the
** GNU General Public License version 2 as published by the Free Software
** Foundation and appearing in the file LICENSE.GPL included in the
** packaging of this file.
**
** This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
** WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
**
****************************************************************************/

#ifndef QSQLDRIVER_H
#define QSQLDRIVER_H

#include &lt;QtCore/qobject.h>
#include &lt;QtCore/qstring.h>
#include &lt;QtSql/qsql.h>
#ifdef QT3_SUPPORT
#include &lt;QtSql/qsqlquery.h>
#endif

QT_MODULE(Sql)

class QStringList;
class QSqlDatabase;
class QSqlDriverPrivate;
class QSqlError;
class QSqlField;
class QSqlIndex;
class QSqlRecord;
class QSqlResult;
class QVariant;

class Q_SQL_EXPORT QSqlDriver : public QObject
{
    friend class QSqlDatabase;
    Q_OBJECT
    Q_DECLARE_PRIVATE(QSqlDriver)

public:
    enum DriverFeature { Transactions, QuerySize, BLOB, Unicode, PreparedQueries,
                         NamedPlaceholders, PositionalPlaceholders, LastInsertId,
                         BatchOperations };

    enum StatementType { WhereStatement, SelectStatement, UpdateStatement,
                         InsertStatement, DeleteStatement };

    enum IdentifierType { FieldName, TableName };

    explicit QSqlDriver(QObject *parent=0);
    ~QSqlDriver();
    virtual bool isOpen() const;
    bool isOpenError() const;

    virtual bool beginTransaction();
    virtual bool commitTransaction();
    virtual bool rollbackTransaction();
    virtual QStringList tables(QSql::TableType tableType) const;
    virtual QSqlIndex primaryIndex(const QString &amp;tableName) const;
    virtual QSqlRecord record(const QString &amp;tableName) const;
#ifdef QT3_SUPPORT
    inline QT3_SUPPORT QSqlRecord record(const QSqlQuery&amp; query) const
    { return query.record(); }
    inline QT3_SUPPORT QSqlRecord recordInfo(const QString&amp; tablename) const
    { return record(tablename); }
    inline QT3_SUPPORT QSqlRecord recordInfo(const QSqlQuery&amp; query) const
    { return query.record(); }
    inline QT3_SUPPORT QString nullText() const { return QLatin1String("NULL"); }
    inline QT3_SUPPORT QString formatValue(const QSqlField *field, bool trimStrings = false) const
    { return field ? formatValue(*field, trimStrings) : QString(); }
#endif
    virtual QString formatValue(const QSqlField&amp; field, bool trimStrings = false) const;

    virtual QString escapeIdentifier(const QString &amp;identifier, IdentifierType type) const;
    virtual QString sqlStatement(StatementType type, const QString &amp;tableName,
                                 const QSqlRecord &amp;rec, bool preparedStatement) const;

    QSqlError lastError() const;

    virtual QVariant handle() const;
    virtual bool hasFeature(DriverFeature f) const = 0;
    virtual void close() = 0;
    virtual QSqlResult *createResult() const = 0;

    virtual bool open(const QString&amp; db,
                      const QString&amp; user = QString(),
                      const QString&amp; password = QString(),
                      const QString&amp; host = QString(),
                      int port = -1,
                      const QString&amp; connOpts = QString()) = 0;
protected:
    virtual void setOpen(bool o);
    virtual void setOpenError(bool e);
    virtual void setLastError(const QSqlError&amp; e);

private:
    Q_DISABLE_COPY(QSqlDriver)
};

#endif // QSQLDRIVER_H
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtSql/qsqldriverplugin.h</TITLE>
<PARA>
</PARA>
<SCREEN>
/****************************************************************************
**
** Copyright (C) 1992-2006 Trolltech AS. All rights reserved.
**
** This file is part of the LSB_Toolkit_Qt of the Qt Toolkit.
**
** This file may be distributed and/or modified under the terms of the
** GNU General Public License version 2 as published by the Free Software
** Foundation and appearing in the file LICENSE.GPL included in the
** packaging of this file.
**
** This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
** WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
**
****************************************************************************/

#ifndef QSQLDRIVERPLUGIN_H
#define QSQLDRIVERPLUGIN_H

#include &lt;QtCore/qplugin.h>
#include &lt;QtCore/qfactoryinterface.h>

QT_MODULE(Sql)

class QSqlDriver;

struct Q_SQL_EXPORT QSqlDriverFactoryInterface : public QFactoryInterface
{
    virtual QSqlDriver *create(const QString &amp;name) = 0;
};

#define QSqlDriverFactoryInterface_iid "com.trolltech.Qt.QSqlDriverFactoryInterface"
Q_DECLARE_INTERFACE(QSqlDriverFactoryInterface, QSqlDriverFactoryInterface_iid)

class Q_SQL_EXPORT QSqlDriverPlugin : public QObject, public QSqlDriverFactoryInterface
{
    Q_OBJECT
    Q_INTERFACES(QSqlDriverFactoryInterface:QFactoryInterface)
public:
    explicit QSqlDriverPlugin(QObject *parent = 0);
    ~QSqlDriverPlugin();

    virtual QStringList keys() const = 0;
    virtual QSqlDriver *create(const QString &amp;key) = 0;

};

#endif // QSQLDRIVERPLUGIN_H
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtSql/qsqlerror.h</TITLE>
<PARA>
</PARA>
<SCREEN>
/****************************************************************************
**
** Copyright (C) 1992-2006 Trolltech AS. All rights reserved.
**
** This file is part of the LSB_Toolkit_Qt of the Qt Toolkit.
**
** This file may be distributed and/or modified under the terms of the
** GNU General Public License version 2 as published by the Free Software
** Foundation and appearing in the file LICENSE.GPL included in the
** packaging of this file.
**
** This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
** WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
**
****************************************************************************/

#ifndef QSQLERROR_H
#define QSQLERROR_H

#include &lt;QtCore/qstring.h>

QT_MODULE(Sql)

class Q_SQL_EXPORT QSqlError
{
public:
    enum ErrorType {
        NoError,
        ConnectionError,
        StatementError,
        TransactionError,
        UnknownError
#ifdef QT3_SUPPORT
        , None = NoError,
        Connection = ConnectionError,
        Statement = StatementError,
        Transaction = TransactionError,
        Unknown = UnknownError
#endif
    };
    QSqlError( const QString&amp; driverText = QString(),
                const QString&amp; databaseText = QString(),
                ErrorType type = NoError,
                int number = -1);
    QSqlError(const QSqlError&amp; other);
    QSqlError&amp; operator=(const QSqlError&amp; other);
    ~QSqlError();

    QString driverText() const;
    void setDriverText(const QString&amp; driverText);
    QString databaseText() const;
    void setDatabaseText(const QString&amp; databaseText);
    ErrorType type() const;
    void setType(ErrorType type);
    int number() const;
    void setNumber(int number);
    QString text() const;
    bool isValid() const;

private:
    QString driverError;
    QString databaseError;
    ErrorType errorType;
    int errorNumber;
};

#ifndef QT_NO_DEBUG_STREAM
Q_SQL_EXPORT QDebug operator&lt;&lt;(QDebug, const QSqlError &amp;);
#endif

#endif // QSQLERROR_H
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtSql/qsqlfield.h</TITLE>
<PARA>
</PARA>
<SCREEN>
/****************************************************************************
**
** Copyright (C) 1992-2006 Trolltech AS. All rights reserved.
**
** This file is part of the LSB_Toolkit_Qt of the Qt Toolkit.
**
** This file may be distributed and/or modified under the terms of the
** GNU General Public License version 2 as published by the Free Software
** Foundation and appearing in the file LICENSE.GPL included in the
** packaging of this file.
**
** This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
** WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
**
****************************************************************************/

#ifndef QSQLFIELD_H
#define QSQLFIELD_H

#include &lt;QtCore/qvariant.h>
#include &lt;QtCore/qstring.h>

QT_MODULE(Sql)

class QSqlFieldPrivate;

class Q_SQL_EXPORT QSqlField
{
public:
    enum RequiredStatus { Unknown = -1, Optional = 0, Required = 1 };

    QSqlField(const QString&amp; fieldName = QString(),
              QVariant::Type type = QVariant::Invalid);

    QSqlField(const QSqlField&amp; other);
    QSqlField&amp; operator=(const QSqlField&amp; other);
    bool operator==(const QSqlField&amp; other) const;
    inline bool operator!=(const QSqlField &amp;other) const { return !operator==(other); }
    ~QSqlField();

    void setValue(const QVariant&amp; value);
    inline QVariant value() const
    { return val; }
    void setName(const QString&amp; name);
    QString name() const;
    bool isNull() const;
    void setReadOnly(bool readOnly);
    bool isReadOnly() const;
    void clear();
    QVariant::Type type() const;
    bool isAutoValue() const;

    void setType(QVariant::Type type);
    void setRequiredStatus(RequiredStatus status);
    inline void setRequired(bool required)
    { setRequiredStatus(required ? Required : Optional); }
    void setLength(int fieldLength);
    void setPrecision(int precision);
    void setDefaultValue(const QVariant &amp;value);
    void setSqlType(int type);
    void setGenerated(bool gen);
    void setAutoValue(bool autoVal);

    RequiredStatus requiredStatus() const;
    int length() const;
    int precision() const;
    QVariant defaultValue() const;
    int typeID() const;
    bool isGenerated() const;
    bool isValid() const;

#ifdef QT3_SUPPORT
    inline QT3_SUPPORT void setNull() { clear(); }
#endif

private:
    void detach();
    QVariant val;
    QSqlFieldPrivate* d;
};

#ifndef QT_NO_DEBUG_STREAM
Q_SQL_EXPORT QDebug operator&lt;&lt;(QDebug, const QSqlField &amp;);
#endif

#endif // QSQLFIELD_H
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtSql/qsqlindex.h</TITLE>
<PARA>
</PARA>
<SCREEN>
/****************************************************************************
**
** Copyright (C) 1992-2006 Trolltech AS. All rights reserved.
**
** This file is part of the LSB_Toolkit_Qt of the Qt Toolkit.
**
** This file may be distributed and/or modified under the terms of the
** GNU General Public License version 2 as published by the Free Software
** Foundation and appearing in the file LICENSE.GPL included in the
** packaging of this file.
**
** This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
** WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
**
****************************************************************************/

#ifndef QSQLINDEX_H
#define QSQLINDEX_H

#include &lt;QtSql/qsqlrecord.h>
#include &lt;QtCore/qstring.h>
#include &lt;QtCore/qlist.h>

QT_MODULE(Sql)

class Q_SQL_EXPORT QSqlIndex : public QSqlRecord
{
public:
    QSqlIndex(const QString &amp;cursorName = QString(), const QString &amp;name = QString());
    QSqlIndex(const QSqlIndex &amp;other);
    ~QSqlIndex();
    QSqlIndex &amp;operator=(const QSqlIndex &amp;other);
    void setCursorName(const QString &amp;cursorName);
    inline QString cursorName() const { return cursor; }
    void setName(const QString&amp; name);
    inline QString name() const { return nm; }

    void append(const QSqlField &amp;field);
    void append(const QSqlField &amp;field, bool desc);

    bool isDescending(int i) const;
    void setDescending(int i, bool desc);

#ifdef QT3_SUPPORT
    QT3_SUPPORT QString toString(const QString &amp;prefix = QString(),
                               const QString &amp;sep = QLatin1String(","),
                               bool verbose = true) const;
    QT3_SUPPORT QStringList toStringList(const QString&amp; prefix = QString(),
                                       bool verbose = true) const;
#endif

private:
    QString createField(int i, const QString&amp; prefix, bool verbose) const;
    QString cursor;
    QString nm;
    QList&lt;bool> sorts;
};

#endif // QSQLINDEX_H
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtSql/qsqlquery.h</TITLE>
<PARA>
</PARA>
<SCREEN>
/****************************************************************************
**
** Copyright (C) 1992-2006 Trolltech AS. All rights reserved.
**
** This file is part of the LSB_Toolkit_Qt of the Qt Toolkit.
**
** This file may be distributed and/or modified under the terms of the
** GNU General Public License version 2 as published by the Free Software
** Foundation and appearing in the file LICENSE.GPL included in the
** packaging of this file.
**
** This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
** WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
**
****************************************************************************/

#ifndef QSQLQUERY_H
#define QSQLQUERY_H

#include &lt;QtSql/qsql.h>
#include &lt;QtSql/qsqldatabase.h>
#include &lt;QtCore/qstring.h>

QT_MODULE(Sql)

class QVariant;
class QSqlDriver;
class QSqlError;
class QSqlResult;
class QSqlRecord;
template &lt;class Key, class T> class QMap;
class QSqlQueryPrivate;

class Q_SQL_EXPORT QSqlQuery
{
public:
    QSqlQuery(QSqlResult *r);
    QSqlQuery(const QString&amp; query = QString(), QSqlDatabase db = QSqlDatabase());
    explicit QSqlQuery(QSqlDatabase db);
    QSqlQuery(const QSqlQuery&amp; other);
    QSqlQuery&amp; operator=(const QSqlQuery&amp; other);
    ~QSqlQuery();

    bool isValid() const;
    bool isActive() const;
    bool isNull(int field) const;
    int at() const;
    QString lastQuery() const;
    int numRowsAffected() const;
    QSqlError lastError() const;
    bool isSelect() const;
    int size() const;
    const QSqlDriver* driver() const;
    const QSqlResult* result() const;
    bool isForwardOnly() const;
    QSqlRecord record() const;

    void setForwardOnly(bool forward);
    bool exec(const QString&amp; query);
    QVariant value(int i) const;

    bool seek(int i, bool relative = false);
    bool next();
    bool previous();
#ifdef QT3_SUPPORT
    inline QT3_SUPPORT bool prev() { return previous(); }
#endif
    bool first();
    bool last();

    void clear();

    // prepared query support
    bool exec();
    bool prepare(const QString&amp; query);
    void bindValue(const QString&amp; placeholder, const QVariant&amp; val,
                   QSql::ParamType type = QSql::In);
    void bindValue(int pos, const QVariant&amp; val, QSql::ParamType type = QSql::In);
    void addBindValue(const QVariant&amp; val, QSql::ParamType type = QSql::In);
    QVariant boundValue(const QString&amp; placeholder) const;
    QVariant boundValue(int pos) const;
    QMap&lt;QString, QVariant> boundValues() const;
    QString executedQuery() const;
    QVariant lastInsertId() const;

private:
    QSqlQueryPrivate* d;
};

#endif // QSQLQUERY_H
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtSql/qsqlquerymodel.h</TITLE>
<PARA>
</PARA>
<SCREEN>
/****************************************************************************
**
** Copyright (C) 1992-2006 Trolltech AS. All rights reserved.
**
** This file is part of the LSB_Toolkit_Qt of the Qt Toolkit.
**
** This file may be distributed and/or modified under the terms of the
** GNU General Public License version 2 as published by the Free Software
** Foundation and appearing in the file LICENSE.GPL included in the
** packaging of this file.
**
** This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
** WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
**
****************************************************************************/

#ifndef QSQLQUERYMODEL_H
#define QSQLQUERYMODEL_H

#include &lt;QtCore/qabstractitemmodel.h>
#include &lt;QtSql/qsqldatabase.h>

QT_MODULE(Sql)

class QSqlQueryModelPrivate;
class QSqlError;
class QSqlRecord;
class QSqlQuery;

class Q_SQL_EXPORT QSqlQueryModel: public QAbstractTableModel
{
    Q_OBJECT
    Q_DECLARE_PRIVATE(QSqlQueryModel)

public:
    explicit QSqlQueryModel(QObject *parent = 0);
    virtual ~QSqlQueryModel();

    int rowCount(const QModelIndex &amp;parent = QModelIndex()) const;
    int columnCount(const QModelIndex &amp;parent = QModelIndex()) const;
    QSqlRecord record(int row) const;
    QSqlRecord record() const;

    QVariant data(const QModelIndex &amp;item, int role = Qt::DisplayRole) const;
    QVariant headerData(int section, Qt::Orientation orientation,
                        int role = Qt::DisplayRole) const;
    bool setHeaderData(int section, Qt::Orientation orientation, const QVariant &amp;value,
                       int role = Qt::EditRole);

    bool insertColumns(int column, int count, const QModelIndex &amp;parent = QModelIndex());
    bool removeColumns(int column, int count, const QModelIndex &amp;parent = QModelIndex());

    void setQuery(const QSqlQuery &amp;query);
    void setQuery(const QString &amp;query, const QSqlDatabase &amp;db = QSqlDatabase());
    QSqlQuery query() const;

    virtual void clear();

    QSqlError lastError() const;

    void fetchMore(const QModelIndex &amp;parent = QModelIndex());
    bool canFetchMore(const QModelIndex &amp;parent = QModelIndex()) const;

protected:
    virtual void queryChange();

    QModelIndex indexInQuery(const QModelIndex &amp;item) const;
    void setLastError(const QSqlError &amp;error);
    QSqlQueryModel(QSqlQueryModelPrivate &amp;dd, QObject *parent = 0);
};

#endif // QSQLQUERYMODEL_H
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtSql/qsqlrecord.h</TITLE>
<PARA>
</PARA>
<SCREEN>
/****************************************************************************
**
** Copyright (C) 1992-2006 Trolltech AS. All rights reserved.
**
** This file is part of the LSB_Toolkit_Qt of the Qt Toolkit.
**
** This file may be distributed and/or modified under the terms of the
** GNU General Public License version 2 as published by the Free Software
** Foundation and appearing in the file LICENSE.GPL included in the
** packaging of this file.
**
** This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
** WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
**
****************************************************************************/

#ifndef QSQLRECORD_H
#define QSQLRECORD_H

#include &lt;QtCore/qstring.h>

QT_MODULE(Sql)

class QSqlField;
class QStringList;
class QVariant;
class QSqlRecordPrivate;

class Q_SQL_EXPORT QSqlRecord
{
public:
    QSqlRecord();
    QSqlRecord(const QSqlRecord&amp; other);
    QSqlRecord&amp; operator=(const QSqlRecord&amp; other);
    ~QSqlRecord();

    bool operator==(const QSqlRecord &amp;other) const;
    inline bool operator!=(const QSqlRecord &amp;other) const { return !operator==(other); }

    QVariant value(int i) const;
    QVariant value(const QString&amp; name) const;
    void setValue(int i, const QVariant&amp; val);
    void setValue(const QString&amp; name, const QVariant&amp; val);

    void setNull(int i);
    void setNull(const QString&amp; name);
    bool isNull(int i) const;
    bool isNull(const QString&amp; name) const;

    int indexOf(const QString &amp;name) const;
    QString fieldName(int i) const;

    QSqlField field(int i) const;
    QSqlField field(const QString &amp;name) const;

    bool isGenerated(int i) const;
    bool isGenerated(const QString&amp; name) const;
    void setGenerated(const QString&amp; name, bool generated);
    void setGenerated(int i, bool generated);

#ifdef QT3_SUPPORT
    QT3_SUPPORT const QSqlField* fieldPtr(int i) const;
    QT3_SUPPORT const QSqlField* fieldPtr(const QString&amp; name) const;
    inline QT3_SUPPORT int position(const QString&amp; name) const { return indexOf(name); }
    QT3_SUPPORT QString toString(const QString&amp; prefix = QString(),
                               const QString&amp; sep = QLatin1String(",")) const;
    QT3_SUPPORT QStringList toStringList(const QString&amp; prefix = QString()) const;
#endif

    void append(const QSqlField&amp; field);
    void replace(int pos, const QSqlField&amp; field);
    void insert(int pos, const QSqlField&amp; field);
    void remove(int pos);

    bool isEmpty() const;
    bool contains(const QString&amp; name) const;
    void clear();
    void clearValues();
    int count() const;

private:
    void detach();
    QSqlRecordPrivate* d;
};

#ifndef QT_NO_DEBUG_STREAM
Q_SQL_EXPORT QDebug operator&lt;&lt;(QDebug, const QSqlRecord &amp;);
#endif

#endif // QSQLRECORD_H
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtSql/qsqlrelationaltablemodel.h</TITLE>
<PARA>
</PARA>
<SCREEN>
/****************************************************************************
**
** Copyright (C) 1992-2006 Trolltech AS. All rights reserved.
**
** This file is part of the LSB_Toolkit_Qt of the Qt Toolkit.
**
** This file may be distributed and/or modified under the terms of the
** GNU General Public License version 2 as published by the Free Software
** Foundation and appearing in the file LICENSE.GPL included in the
** packaging of this file.
**
** This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
** WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
**
****************************************************************************/

#ifndef QSQLRELATIONALTABLEMODEL_H
#define QSQLRELATIONALTABLEMODEL_H

#include &lt;QtSql/qsqltablemodel.h>

QT_MODULE(Sql)

class Q_SQL_EXPORT QSqlRelation
{
public:
    QSqlRelation() {}
    QSqlRelation(const QString &amp;aTableName, const QString &amp;indexCol,
               const QString &amp;displayCol)
        : tName(aTableName), iColumn(indexCol), dColumn(displayCol) {}
    inline QString tableName() const
    { return tName; }
    inline QString indexColumn() const
    { return iColumn; }
    inline QString displayColumn() const
    { return dColumn; }
    inline bool isValid() const
    { return !(tName.isEmpty() || iColumn.isEmpty() || dColumn.isEmpty()); }
private:
    QString tName, iColumn, dColumn;
};

class QSqlRelationalTableModelPrivate;

class Q_SQL_EXPORT QSqlRelationalTableModel: public QSqlTableModel
{
    Q_OBJECT

public:
    explicit QSqlRelationalTableModel(QObject *parent = 0,
                                      QSqlDatabase db = QSqlDatabase());
    virtual ~QSqlRelationalTableModel();

    QVariant data(const QModelIndex &amp;item, int role = Qt::DisplayRole) const;
    bool setData(const QModelIndex &amp;item, const QVariant &amp;value, int role = Qt::EditRole);

    void clear();
    bool select();

    void setTable(const QString &amp;tableName);
    virtual void setRelation(int column, const QSqlRelation &amp;relation);
    QSqlRelation relation(int column) const;
    virtual QSqlTableModel *relationModel(int column) const;

public Q_SLOTS:
    void revertRow(int row);

protected:
    QString selectStatement() const;
    bool updateRowInTable(int row, const QSqlRecord &amp;values);
    QString orderByClause() const;

private:
    Q_DECLARE_PRIVATE(QSqlRelationalTableModel)
};

#endif // QSQLRELATIONALTABLEMODEL_H
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtSql/qsqlresult.h</TITLE>
<PARA>
</PARA>
<SCREEN>
/****************************************************************************
**
** Copyright (C) 1992-2006 Trolltech AS. All rights reserved.
**
** This file is part of the LSB_Toolkit_Qt of the Qt Toolkit.
**
** This file may be distributed and/or modified under the terms of the
** GNU General Public License version 2 as published by the Free Software
** Foundation and appearing in the file LICENSE.GPL included in the
** packaging of this file.
**
** This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
** WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
**
****************************************************************************/

#ifndef QSQLRESULT_H
#define QSQLRESULT_H

#include &lt;QtCore/qvariant.h>
#include &lt;QtCore/qvector.h>
#include &lt;QtSql/qsql.h>

QT_MODULE(Sql)

class QString;
class QSqlRecord;
template &lt;typename T> class QVector;
class QVariant;
class QSqlDriver;
class QSqlError;
class QSqlResultPrivate;

class Q_SQL_EXPORT QSqlResult
{
friend class QSqlQuery;
friend class QSqlResultPrivate;
public:
    virtual ~QSqlResult();
    virtual QVariant handle() const;

protected:
    enum BindingSyntax {
        PositionalBinding,
        NamedBinding
#ifdef QT3_SUPPORT
        , BindByPosition = PositionalBinding,
        BindByName = NamedBinding
#endif
    };

    explicit QSqlResult(const QSqlDriver * db);
    int at() const;
    QString lastQuery() const;
    QSqlError lastError() const;
    bool isValid() const;
    bool isActive() const;
    bool isSelect() const;
    bool isForwardOnly() const;
    const QSqlDriver* driver() const;
    virtual void setAt(int at);
    virtual void setActive(bool a);
    virtual void setLastError(const QSqlError&amp; e);
    virtual void setQuery(const QString&amp; query);
    virtual void setSelect(bool s);
    virtual void setForwardOnly(bool forward);

    // prepared query support
    virtual bool exec();
    virtual bool prepare(const QString&amp; query);
    virtual bool savePrepare(const QString&amp; sqlquery);
    virtual void bindValue(int pos, const QVariant&amp; val, QSql::ParamType type);
    virtual void bindValue(const QString&amp; placeholder, const QVariant&amp; val,
                           QSql::ParamType type);
    void addBindValue(const QVariant&amp; val, QSql::ParamType type);
    QVariant boundValue(const QString&amp; placeholder) const;
    QVariant boundValue(int pos) const;
    QSql::ParamType bindValueType(const QString&amp; placeholder) const;
    QSql::ParamType bindValueType(int pos) const;
    int boundValueCount() const;
    QVector&lt;QVariant>&amp; boundValues() const;
    QString executedQuery() const;
    QString boundValueName(int pos) const;
    void clear();
    bool hasOutValues() const;

    BindingSyntax bindingSyntax() const;

    virtual QVariant data(int i) = 0;
    virtual bool isNull(int i) = 0;
    virtual bool reset(const QString&amp; sqlquery) = 0;
    virtual bool fetch(int i) = 0;
    virtual bool fetchNext();
    virtual bool fetchPrevious();
    virtual bool fetchFirst() = 0;
    virtual bool fetchLast() = 0;
    virtual int size() = 0;
    virtual int numRowsAffected() = 0;
    virtual QSqlRecord record() const;
    virtual QVariant lastInsertId() const;

    enum VirtualHookOperation { BatchOperation };
    virtual void virtual_hook(int id, void *data);

    bool execBatch(bool arrayBind = false);

private:
    QSqlResultPrivate* d;
    void resetBindCount(); // HACK

private:
    Q_DISABLE_COPY(QSqlResult)
};

#endif // QSQLRESULT_H
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtSql/qsqltablemodel.h</TITLE>
<PARA>
</PARA>
<SCREEN>
/****************************************************************************
**
** Copyright (C) 1992-2006 Trolltech AS. All rights reserved.
**
** This file is part of the LSB_Toolkit_Qt of the Qt Toolkit.
**
** This file may be distributed and/or modified under the terms of the
** GNU General Public License version 2 as published by the Free Software
** Foundation and appearing in the file LICENSE.GPL included in the
** packaging of this file.
**
** This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
** WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
**
****************************************************************************/

#ifndef QSQLTABLEMODEL_H
#define QSQLTABLEMODEL_H

#include &lt;QtSql/qsqldatabase.h>
#include &lt;QtSql/qsqlquerymodel.h>

QT_MODULE(Sql)

class QSqlTableModelPrivate;
class QSqlRecord;
class QSqlField;
class QSqlIndex;

class Q_SQL_EXPORT QSqlTableModel: public QSqlQueryModel
{
    Q_OBJECT
    Q_DECLARE_PRIVATE(QSqlTableModel)

public:
    enum EditStrategy {OnFieldChange, OnRowChange, OnManualSubmit};

    explicit QSqlTableModel(QObject *parent = 0, QSqlDatabase db = QSqlDatabase());
    virtual ~QSqlTableModel();

    virtual bool select();

    virtual void setTable(const QString &amp;tableName);
    QString tableName() const;

    Qt::ItemFlags flags(const QModelIndex &amp;index) const;

    QVariant data(const QModelIndex &amp;idx, int role = Qt::DisplayRole) const;
    bool setData(const QModelIndex &amp;index, const QVariant &amp;value, int role = Qt::EditRole);

    QVariant headerData(int section, Qt::Orientation orientation, int role = Qt::DisplayRole) const;

    bool isDirty(const QModelIndex &amp;index) const;
    void clear();

    virtual void setEditStrategy(EditStrategy strategy);
    EditStrategy editStrategy() const;

    QSqlIndex primaryKey() const;
    QSqlDatabase database() const;
    int fieldIndex(const QString &amp;fieldName) const;

    void sort(int column, Qt::SortOrder order);
    virtual void setSort(int column, Qt::SortOrder order);

    QString filter() const;
    virtual void setFilter(const QString &amp;filter);

    int rowCount(const QModelIndex &amp;parent = QModelIndex()) const;

    bool removeColumns(int column, int count, const QModelIndex &amp;parent = QModelIndex());
    bool removeRows(int row, int count, const QModelIndex &amp;parent = QModelIndex());
    bool insertRows(int row, int count, const QModelIndex &amp;parent = QModelIndex());

    bool insertRecord(int row, const QSqlRecord &amp;record);
    bool setRecord(int row, const QSqlRecord &amp;record);

    virtual void revertRow(int row);

public Q_SLOTS:
    bool submit();
    void revert();

    bool submitAll();
    void revertAll();

Q_SIGNALS:
    void primeInsert(int row, QSqlRecord &amp;record);

    void beforeInsert(QSqlRecord &amp;record);
    void beforeUpdate(int row, QSqlRecord &amp;record);
    void beforeDelete(int row);

protected:
    QSqlTableModel(QSqlTableModelPrivate &amp;dd, QObject *parent = 0, QSqlDatabase db = QSqlDatabase());

    virtual bool updateRowInTable(int row, const QSqlRecord &amp;values);
    virtual bool insertRowIntoTable(const QSqlRecord &amp;values);
    virtual bool deleteRowFromTable(int row);
    virtual QString orderByClause() const;
    virtual QString selectStatement() const;

    void setPrimaryKey(const QSqlIndex &amp;key);
    void setQuery(const QSqlQuery &amp;query);
    QModelIndex indexInQuery(const QModelIndex &amp;item) const;
};

#endif // QSQLTABLEMODEL_H
</SCREEN>
</SECT2>
</SECT1>
<!-- End of text generated from database -->
<!--    by $Header: /cvsroot/lsb/lsbspec/mklibspec,v 1.76 2005/12/02 01:32:08 nick Exp 0 -->
