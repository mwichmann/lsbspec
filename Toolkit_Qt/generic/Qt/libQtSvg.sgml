<!-- Start of text generated from database -->
<!-- generated from the LSB specification database -->
<!--    by $Header: /cvsroot/lsb/lsbspec/mklibspec,v 1.76 2005/12/02 01:32:08 nick Exp 0 -->
<!--    at Thu Jan 12 15:05:23 2006 -->
<SECT1 ID=libQtSvg>
<TITLE>Interfaces for libQtSvg</TITLE>
<PARA>
<XREF LINKEND="lib-libQtSvg-def"> defines the library name and shared object name
for the libQtSvg library
</PARA>
<TABLE id="lib-libQtSvg-def">
<TITLE>libQtSvg Definition</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Library:</ENTRY>
<ENTRY>libQtSvg</ENTRY>
</ROW>
<ROW>
<ENTRY>SONAME:</ENTRY>
<ENTRY>libQtSvg.so.4</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The behavior of the interfaces in this library is specified by the following specifications:<SIMPLELIST COLUMNS=1>
<MEMBER ID='REFSTD.libQtSvg.1'>
[QtSvg] <XREF LINKEND="std.QtSvg">
</MEMBER>
</SIMPLELIST>
</PARA>
<!-- debug: database interface name QtSvg -->
<SECT2>
<!--libgroup-->
<TITLE>QtSvg</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Class data for QSvgRenderer</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QSvgRenderer class
is described by <XREF LINKEND="cls-405-0">
</PARA>
<!--classdata-->
<TABLE id="cls-405-0">
<TITLE>Primary vtable for QSvgRenderer</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QSvgRenderer</primary></indexterm>typeinfo for QSvgRenderer</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSvgRenderer::metaObject() const</primary></indexterm>QSvgRenderer::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSvgRenderer::qt_metacast(char const*)</primary></indexterm>QSvgRenderer::qt_metacast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSvgRenderer::qt_metacall(QMetaObject::Call, int, void**)</primary></indexterm>QSvgRenderer::qt_metacall(QMetaObject::Call, int, void**)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSvgRenderer::~QSvgRenderer()</primary></indexterm>QSvgRenderer::~QSvgRenderer()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSvgRenderer::~QSvgRenderer()</primary></indexterm>QSvgRenderer::~QSvgRenderer()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::event(QEvent*)</primary></indexterm>QObject::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::eventFilter(QObject*, QEvent*)</primary></indexterm>QObject::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QEvent*)</primary></indexterm>QObject::customEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QSvgRenderer  class
is described by <XREF LINKEND="rtti-406">
</PARA>
<!--classdata-->
<TABLE ID="rtti-406">
<TITLE>typeinfo for QSvgRenderer</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for QObject</primary></indexterm>vtable for QObject</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QSvgRenderer</primary></indexterm>typeinfo name for QSvgRenderer</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QSvgWidget</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QSvgWidget class
is described by <XREF LINKEND="cls-407-0">
</PARA>
<!--classdata-->
<TABLE id="cls-407-0">
<TITLE>Primary vtable for QSvgWidget</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QSvgWidget</primary></indexterm>typeinfo for QSvgWidget</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSvgWidget::metaObject() const</primary></indexterm>QSvgWidget::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSvgWidget::qt_metacast(char const*)</primary></indexterm>QSvgWidget::qt_metacast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSvgWidget::qt_metacall(QMetaObject::Call, int, void**)</primary></indexterm>QSvgWidget::qt_metacall(QMetaObject::Call, int, void**)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSvgWidget::~QSvgWidget()</primary></indexterm>QSvgWidget::~QSvgWidget()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSvgWidget::~QSvgWidget()</primary></indexterm>QSvgWidget::~QSvgWidget()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::event(QEvent*)</primary></indexterm>QWidget::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::eventFilter(QObject*, QEvent*)</primary></indexterm>QObject::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QEvent*)</primary></indexterm>QObject::customEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::devType() const</primary></indexterm>QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setVisible(bool)</primary></indexterm>QWidget::setVisible(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSvgWidget::sizeHint() const</primary></indexterm>QSvgWidget::sizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::minimumSizeHint() const</primary></indexterm>QWidget::minimumSizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::heightForWidth(int) const</primary></indexterm>QWidget::heightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paintEngine() const</primary></indexterm>QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mousePressEvent(QMouseEvent*)</primary></indexterm>QWidget::mousePressEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseReleaseEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseReleaseEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseDoubleClickEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseDoubleClickEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseMoveEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseMoveEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::wheelEvent(QWheelEvent*)</primary></indexterm>QWidget::wheelEvent(QWheelEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyPressEvent(QKeyEvent*)</primary></indexterm>QWidget::keyPressEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyReleaseEvent(QKeyEvent*)</primary></indexterm>QWidget::keyReleaseEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusInEvent(QFocusEvent*)</primary></indexterm>QWidget::focusInEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusOutEvent(QFocusEvent*)</primary></indexterm>QWidget::focusOutEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enterEvent(QEvent*)</primary></indexterm>QWidget::enterEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::leaveEvent(QEvent*)</primary></indexterm>QWidget::leaveEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSvgWidget::paintEvent(QPaintEvent*)</primary></indexterm>QSvgWidget::paintEvent(QPaintEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::moveEvent(QMoveEvent*)</primary></indexterm>QWidget::moveEvent(QMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::resizeEvent(QResizeEvent*)</primary></indexterm>QWidget::resizeEvent(QResizeEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::closeEvent(QCloseEvent*)</primary></indexterm>QWidget::closeEvent(QCloseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;33&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::contextMenuEvent(QContextMenuEvent*)</primary></indexterm>QWidget::contextMenuEvent(QContextMenuEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;34&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::tabletEvent(QTabletEvent*)</primary></indexterm>QWidget::tabletEvent(QTabletEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;35&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::actionEvent(QActionEvent*)</primary></indexterm>QWidget::actionEvent(QActionEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;36&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragEnterEvent(QDragEnterEvent*)</primary></indexterm>QWidget::dragEnterEvent(QDragEnterEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;37&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragMoveEvent(QDragMoveEvent*)</primary></indexterm>QWidget::dragMoveEvent(QDragMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;38&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragLeaveEvent(QDragLeaveEvent*)</primary></indexterm>QWidget::dragLeaveEvent(QDragLeaveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;39&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dropEvent(QDropEvent*)</primary></indexterm>QWidget::dropEvent(QDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;40&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showEvent(QShowEvent*)</primary></indexterm>QWidget::showEvent(QShowEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;41&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::hideEvent(QHideEvent*)</primary></indexterm>QWidget::hideEvent(QHideEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;42&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::x11Event(_XEvent*)</primary></indexterm>QWidget::x11Event(_XEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;43&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::changeEvent(QEvent*)</primary></indexterm>QWidget::changeEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;44&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;45&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::inputMethodEvent(QInputMethodEvent*)</primary></indexterm>QWidget::inputMethodEvent(QInputMethodEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;46&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::inputMethodQuery(Qt::InputMethodQuery) const</primary></indexterm>QWidget::inputMethodQuery(Qt::InputMethodQuery) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;47&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusNextPrevChild(bool)</primary></indexterm>QWidget::focusNextPrevChild(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;48&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::styleChange(QStyle&)</primary></indexterm>QWidget::styleChange(QStyle&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;49&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enabledChange(bool)</primary></indexterm>QWidget::enabledChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;50&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paletteChange(QPalette const&)</primary></indexterm>QWidget::paletteChange(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;51&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::fontChange(QFont const&)</primary></indexterm>QWidget::fontChange(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;52&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::windowActivationChange(bool)</primary></indexterm>QWidget::windowActivationChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;53&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::languageChange()</primary></indexterm>QWidget::languageChange()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;54&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QSvgWidget::~QSvgWidget()</primary></indexterm>non-virtual thunk to QSvgWidget::~QSvgWidget()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;55&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QSvgWidget::~QSvgWidget()</primary></indexterm>non-virtual thunk to QSvgWidget::~QSvgWidget()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;56&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::devType() const</primary></indexterm>non-virtual thunk to QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;57&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::paintEngine() const</primary></indexterm>non-virtual thunk to QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;58&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QSvgWidget  class
is described by <XREF LINKEND="rtti-408">
</PARA>
<!--classdata-->
<TABLE ID="rtti-408">
<TITLE>typeinfo for QSvgWidget</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for QWidget</primary></indexterm>vtable for QWidget</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QSvgWidget</primary></indexterm>typeinfo name for QSvgWidget</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Interfaces for QtSvg</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic functions
for QtSvg specified in <XREF linkend="tbl-libQtSvg-qts-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<TABLE id="tbl-libQtSvg-qts-ints">
<TITLE>libQtSvg - QtSvg Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>_ZN10QSvgWidget10paintEventEP11QPaintEvent</primary></indexterm>_ZN10QSvgWidget10paintEventEP11QPaintEvent <LINK LINKEND="REFSTD.libQtSvg.1">[QtSvg]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN10QSvgWidget11qt_metacallEN11QMetaObject4CallEiPPv</primary></indexterm>_ZN10QSvgWidget11qt_metacallEN11QMetaObject4CallEiPPv <LINK LINKEND="REFSTD.libQtSvg.1">[QtSvg]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN10QSvgWidget11qt_metacastEPKc</primary></indexterm>_ZN10QSvgWidget11qt_metacastEPKc <LINK LINKEND="REFSTD.libQtSvg.1">[QtSvg]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN10QSvgWidget4loadERK10QByteArray</primary></indexterm>_ZN10QSvgWidget4loadERK10QByteArray <LINK LINKEND="REFSTD.libQtSvg.1">[QtSvg]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN10QSvgWidget4loadERK7QString</primary></indexterm>_ZN10QSvgWidget4loadERK7QString <LINK LINKEND="REFSTD.libQtSvg.1">[QtSvg]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN10QSvgWidgetC1EP7QWidget</primary></indexterm>_ZN10QSvgWidgetC1EP7QWidget <LINK LINKEND="REFSTD.libQtSvg.1">[QtSvg]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN10QSvgWidgetC1ERK7QStringP7QWidget</primary></indexterm>_ZN10QSvgWidgetC1ERK7QStringP7QWidget <LINK LINKEND="REFSTD.libQtSvg.1">[QtSvg]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN10QSvgWidgetC2EP7QWidget</primary></indexterm>_ZN10QSvgWidgetC2EP7QWidget <LINK LINKEND="REFSTD.libQtSvg.1">[QtSvg]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN10QSvgWidgetC2ERK7QStringP7QWidget</primary></indexterm>_ZN10QSvgWidgetC2ERK7QStringP7QWidget <LINK LINKEND="REFSTD.libQtSvg.1">[QtSvg]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN10QSvgWidgetD0Ev</primary></indexterm>_ZN10QSvgWidgetD0Ev <LINK LINKEND="REFSTD.libQtSvg.1">[QtSvg]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN10QSvgWidgetD1Ev</primary></indexterm>_ZN10QSvgWidgetD1Ev <LINK LINKEND="REFSTD.libQtSvg.1">[QtSvg]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN10QSvgWidgetD2Ev</primary></indexterm>_ZN10QSvgWidgetD2Ev <LINK LINKEND="REFSTD.libQtSvg.1">[QtSvg]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN12QSvgRenderer10setViewBoxERK5QRect</primary></indexterm>_ZN12QSvgRenderer10setViewBoxERK5QRect <LINK LINKEND="REFSTD.libQtSvg.1">[QtSvg]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN12QSvgRenderer11qt_metacallEN11QMetaObject4CallEiPPv</primary></indexterm>_ZN12QSvgRenderer11qt_metacallEN11QMetaObject4CallEiPPv <LINK LINKEND="REFSTD.libQtSvg.1">[QtSvg]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN12QSvgRenderer11qt_metacastEPKc</primary></indexterm>_ZN12QSvgRenderer11qt_metacastEPKc <LINK LINKEND="REFSTD.libQtSvg.1">[QtSvg]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN12QSvgRenderer13repaintNeededEv</primary></indexterm>_ZN12QSvgRenderer13repaintNeededEv <LINK LINKEND="REFSTD.libQtSvg.1">[QtSvg]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN12QSvgRenderer15setCurrentFrameEi</primary></indexterm>_ZN12QSvgRenderer15setCurrentFrameEi <LINK LINKEND="REFSTD.libQtSvg.1">[QtSvg]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN12QSvgRenderer18setFramesPerSecondEi</primary></indexterm>_ZN12QSvgRenderer18setFramesPerSecondEi <LINK LINKEND="REFSTD.libQtSvg.1">[QtSvg]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN12QSvgRenderer4loadERK10QByteArray</primary></indexterm>_ZN12QSvgRenderer4loadERK10QByteArray <LINK LINKEND="REFSTD.libQtSvg.1">[QtSvg]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN12QSvgRenderer4loadERK7QString</primary></indexterm>_ZN12QSvgRenderer4loadERK7QString <LINK LINKEND="REFSTD.libQtSvg.1">[QtSvg]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN12QSvgRenderer6renderEP8QPainter</primary></indexterm>_ZN12QSvgRenderer6renderEP8QPainter <LINK LINKEND="REFSTD.libQtSvg.1">[QtSvg]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN12QSvgRendererC1EP7QObject</primary></indexterm>_ZN12QSvgRendererC1EP7QObject <LINK LINKEND="REFSTD.libQtSvg.1">[QtSvg]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN12QSvgRendererC1ERK10QByteArrayP7QObject</primary></indexterm>_ZN12QSvgRendererC1ERK10QByteArrayP7QObject <LINK LINKEND="REFSTD.libQtSvg.1">[QtSvg]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN12QSvgRendererC1ERK7QStringP7QObject</primary></indexterm>_ZN12QSvgRendererC1ERK7QStringP7QObject <LINK LINKEND="REFSTD.libQtSvg.1">[QtSvg]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN12QSvgRendererC2EP7QObject</primary></indexterm>_ZN12QSvgRendererC2EP7QObject <LINK LINKEND="REFSTD.libQtSvg.1">[QtSvg]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN12QSvgRendererC2ERK10QByteArrayP7QObject</primary></indexterm>_ZN12QSvgRendererC2ERK10QByteArrayP7QObject <LINK LINKEND="REFSTD.libQtSvg.1">[QtSvg]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN12QSvgRendererC2ERK7QStringP7QObject</primary></indexterm>_ZN12QSvgRendererC2ERK7QStringP7QObject <LINK LINKEND="REFSTD.libQtSvg.1">[QtSvg]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN12QSvgRendererD0Ev</primary></indexterm>_ZN12QSvgRendererD0Ev <LINK LINKEND="REFSTD.libQtSvg.1">[QtSvg]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN12QSvgRendererD1Ev</primary></indexterm>_ZN12QSvgRendererD1Ev <LINK LINKEND="REFSTD.libQtSvg.1">[QtSvg]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN12QSvgRendererD2Ev</primary></indexterm>_ZN12QSvgRendererD2Ev <LINK LINKEND="REFSTD.libQtSvg.1">[QtSvg]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK10QSvgWidget10metaObjectEv</primary></indexterm>_ZNK10QSvgWidget10metaObjectEv <LINK LINKEND="REFSTD.libQtSvg.1">[QtSvg]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK10QSvgWidget8rendererEv</primary></indexterm>_ZNK10QSvgWidget8rendererEv <LINK LINKEND="REFSTD.libQtSvg.1">[QtSvg]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK10QSvgWidget8sizeHintEv</primary></indexterm>_ZNK10QSvgWidget8sizeHintEv <LINK LINKEND="REFSTD.libQtSvg.1">[QtSvg]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK12QSvgRenderer10metaObjectEv</primary></indexterm>_ZNK12QSvgRenderer10metaObjectEv <LINK LINKEND="REFSTD.libQtSvg.1">[QtSvg]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK12QSvgRenderer11defaultSizeEv</primary></indexterm>_ZNK12QSvgRenderer11defaultSizeEv <LINK LINKEND="REFSTD.libQtSvg.1">[QtSvg]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK12QSvgRenderer12currentFrameEv</primary></indexterm>_ZNK12QSvgRenderer12currentFrameEv <LINK LINKEND="REFSTD.libQtSvg.1">[QtSvg]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK12QSvgRenderer15framesPerSecondEv</primary></indexterm>_ZNK12QSvgRenderer15framesPerSecondEv <LINK LINKEND="REFSTD.libQtSvg.1">[QtSvg]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK12QSvgRenderer17animationDurationEv</primary></indexterm>_ZNK12QSvgRenderer17animationDurationEv <LINK LINKEND="REFSTD.libQtSvg.1">[QtSvg]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK12QSvgRenderer7isValidEv</primary></indexterm>_ZNK12QSvgRenderer7isValidEv <LINK LINKEND="REFSTD.libQtSvg.1">[QtSvg]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK12QSvgRenderer7viewBoxEv</primary></indexterm>_ZNK12QSvgRenderer7viewBoxEv <LINK LINKEND="REFSTD.libQtSvg.1">[QtSvg]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK12QSvgRenderer8animatedEv</primary></indexterm>_ZNK12QSvgRenderer8animatedEv <LINK LINKEND="REFSTD.libQtSvg.1">[QtSvg]</LINK></ENTRY>
<ENTRY></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for QtSvg specified in <XREF linkend="tbl-libQtSvg-qts-data">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<TABLE id="tbl-libQtSvg-qts-data">
<TITLE>libQtSvg - QtSvg Data Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>_ZN10QSvgWidget16staticMetaObjectE</primary></indexterm>_ZN10QSvgWidget16staticMetaObjectE <LINK LINKEND="REFSTD.libQtSvg.1">[QtSvg]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN12QSvgRenderer16staticMetaObjectE</primary></indexterm>_ZN12QSvgRenderer16staticMetaObjectE <LINK LINKEND="REFSTD.libQtSvg.1">[QtSvg]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZTI10QSvgWidget</primary></indexterm>_ZTI10QSvgWidget <LINK LINKEND="REFSTD.libQtSvg.1">[QtSvg]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZTI12QSvgRenderer</primary></indexterm>_ZTI12QSvgRenderer <LINK LINKEND="REFSTD.libQtSvg.1">[QtSvg]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZTI14QXmlAttributes</primary></indexterm>_ZTI14QXmlAttributes <LINK LINKEND="REFSTD.libQtSvg.1">[QtSvg]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZTI14QXmlDTDHandler</primary></indexterm>_ZTI14QXmlDTDHandler <LINK LINKEND="REFSTD.libQtSvg.1">[QtSvg]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZTI15QXmlDeclHandler</primary></indexterm>_ZTI15QXmlDeclHandler <LINK LINKEND="REFSTD.libQtSvg.1">[QtSvg]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZTI16QSvgTinyDocument</primary></indexterm>_ZTI16QSvgTinyDocument <LINK LINKEND="REFSTD.libQtSvg.1">[QtSvg]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZTI16QXmlErrorHandler</primary></indexterm>_ZTI16QXmlErrorHandler <LINK LINKEND="REFSTD.libQtSvg.1">[QtSvg]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZTI18QXmlContentHandler</primary></indexterm>_ZTI18QXmlContentHandler <LINK LINKEND="REFSTD.libQtSvg.1">[QtSvg]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZTI18QXmlEntityResolver</primary></indexterm>_ZTI18QXmlEntityResolver <LINK LINKEND="REFSTD.libQtSvg.1">[QtSvg]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZTI18QXmlLexicalHandler</primary></indexterm>_ZTI18QXmlLexicalHandler <LINK LINKEND="REFSTD.libQtSvg.1">[QtSvg]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZTV10QSvgWidget</primary></indexterm>_ZTV10QSvgWidget <LINK LINKEND="REFSTD.libQtSvg.1">[QtSvg]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZTV12QSvgRenderer</primary></indexterm>_ZTV12QSvgRenderer <LINK LINKEND="REFSTD.libQtSvg.1">[QtSvg]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZTV14QXmlAttributes</primary></indexterm>_ZTV14QXmlAttributes <LINK LINKEND="REFSTD.libQtSvg.1">[QtSvg]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZTV14QXmlDTDHandler</primary></indexterm>_ZTV14QXmlDTDHandler <LINK LINKEND="REFSTD.libQtSvg.1">[QtSvg]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZTV15QXmlDeclHandler</primary></indexterm>_ZTV15QXmlDeclHandler <LINK LINKEND="REFSTD.libQtSvg.1">[QtSvg]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZTV16QSvgTinyDocument</primary></indexterm>_ZTV16QSvgTinyDocument <LINK LINKEND="REFSTD.libQtSvg.1">[QtSvg]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZTV16QXmlErrorHandler</primary></indexterm>_ZTV16QXmlErrorHandler <LINK LINKEND="REFSTD.libQtSvg.1">[QtSvg]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZTV18QXmlContentHandler</primary></indexterm>_ZTV18QXmlContentHandler <LINK LINKEND="REFSTD.libQtSvg.1">[QtSvg]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZTV18QXmlEntityResolver</primary></indexterm>_ZTV18QXmlEntityResolver <LINK LINKEND="REFSTD.libQtSvg.1">[QtSvg]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZTV18QXmlLexicalHandler</primary></indexterm>_ZTV18QXmlLexicalHandler <LINK LINKEND="REFSTD.libQtSvg.1">[QtSvg]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn8_N10QSvgWidgetD0Ev</primary></indexterm>_ZThn8_N10QSvgWidgetD0Ev <LINK LINKEND="REFSTD.libQtSvg.1">[QtSvg]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn8_N10QSvgWidgetD1Ev</primary></indexterm>_ZThn8_N10QSvgWidgetD1Ev <LINK LINKEND="REFSTD.libQtSvg.1">[QtSvg]</LINK></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>
</SECT2>
</SECT1>
<SECT1 ID=libQtSvg-ddefs>
<TITLE>Data Definitions for libQtSvg</TITLE>
<PARA>
This section defines global identifiers and their values that are associated
with interfaces contained in libQtSvg.
These definitions are organized into groups that
correspond to system headers. This convention is used as a
convenience for the reader, and does not imply the existence
of these headers, or their content.
Where an interface is defined as requiring a particular system header file
all of the data definitions for that system header file presented here shall be in effect.
</PARA>
<PARA>
This section gives data definitions to promote binary application
portability, not to repeat source interface definitions available
elsewhere. System providers and application developers should use this ABI
to supplement - not to replace - source interface definition specifications.
</PARA>
<PARA>
This specification uses the <XREF LINKEND='std.ISOC99'> C Language as the reference programming language, and data definitions are specified in ISO C format. The C language is used here as a convenient notation. Using a C language description of these data objects does not preclude their use by other programming languages.</PARA>
<SECT2>
<TITLE>QtSvg/qsvgrenderer.h</TITLE>
<PARA>
</PARA>
<SCREEN>
/****************************************************************************
**
** Copyright (C) 1992-2006 Trolltech AS. All rights reserved.
**
** This file is part of the LSB_Toolkit_Qt of the Qt Toolkit.
**
** This file may be distributed and/or modified under the terms of the
** GNU General Public License version 2 as published by the Free Software
** Foundation and appearing in the file LICENSE.GPL included in the
** packaging of this file.
**
** This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
** WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
**
****************************************************************************/

#ifndef QSVGRENDERER_H
#define QSVGRENDERER_H

#include &lt;QtCore/qobject.h>
#include &lt;QtCore/qsize.h>
#include &lt;QtCore/qrect.h>

QT_MODULE(Svg)

class QSvgRendererPrivate;
class QPainter;
class QByteArray;

class Q_SVG_EXPORT QSvgRenderer : public QObject
{
    Q_OBJECT

    Q_PROPERTY(QRect viewBox READ viewBox WRITE setViewBox)
    Q_PROPERTY(int framesPerSecond READ framesPerSecond WRITE setFramesPerSecond)
    Q_PROPERTY(int currentFrame READ currentFrame WRITE setCurrentFrame)
public:
    QSvgRenderer(QObject *parent=0);
    QSvgRenderer(const QString &amp;filename, QObject *parent=0);
    QSvgRenderer(const QByteArray &amp;contents, QObject *parent=0);
    ~QSvgRenderer();

    bool isValid() const;

    QSize defaultSize() const;

    QRect viewBox() const;
    void setViewBox(const QRect &amp;viewbox);

    bool animated() const;
    int framesPerSecond() const;
    void setFramesPerSecond(int num);
    int currentFrame() const;
    void setCurrentFrame(int);
    int animationDuration() const;//in seconds

public Q_SLOTS:
    bool load(const QString &amp;filename);
    bool load(const QByteArray &amp;contents);
    void render(QPainter *p);

Q_SIGNALS:
    void repaintNeeded();

private:
    Q_DECLARE_PRIVATE(QSvgRenderer)
};

#endif // QSVGRENDERER_H
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtSvg/qsvgwidget.h</TITLE>
<PARA>
</PARA>
<SCREEN>
/****************************************************************************
**
** Copyright (C) 1992-2006 Trolltech AS. All rights reserved.
**
** This file is part of the LSB_Toolkit_Qt of the Qt Toolkit.
**
** This file may be distributed and/or modified under the terms of the
** GNU General Public License version 2 as published by the Free Software
** Foundation and appearing in the file LICENSE.GPL included in the
** packaging of this file.
**
** This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
** WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
**
****************************************************************************/

#ifndef QSVGWIDGET_H
#define QSVGWIDGET_H

#include &lt;QtGui/qwidget.h>

QT_MODULE(Svg)

class QSvgWidgetPrivate;
class QPaintEvent;
class QSvgRenderer;

class Q_SVG_EXPORT QSvgWidget : public QWidget
{
    Q_OBJECT
public:
    QSvgWidget(QWidget *parent=0);
    QSvgWidget(const QString &amp;file, QWidget *parent=0);
    ~QSvgWidget();

    QSvgRenderer *renderer() const;

    QSize sizeHint() const;
public Q_SLOTS:
    void load(const QString &amp;file);
    void load(const QByteArray &amp;contents);
protected:
    void paintEvent(QPaintEvent *event);
private:
    Q_DISABLE_COPY(QSvgWidget)
    Q_DECLARE_PRIVATE(QSvgWidget)
};

#endif // QSVGWIDGET_H
</SCREEN>
</SECT2>
</SECT1>
<!-- End of text generated from database -->
<!--    by $Header: /cvsroot/lsb/lsbspec/mklibspec,v 1.76 2005/12/02 01:32:08 nick Exp 0 -->
