<refentry id="libQtSql--Z10QSR9execBatch">
<refmeta>
<refentrytitle>_ZN10QSqlResult9execBatchEb</refentrytitle>
<refmiscinfo>libQtSql</refmiscinfo>
</refmeta>

<refnamediv>
<refname>QSqlResult::execBatch</refname>
<refpurpose>executes a prepared query in batch mode
</refpurpose>
</refnamediv>

<refsynopsisdiv>
<funcsynopsis>
<funcsynopsisinfo>
#include &lt;QtSql/qsqlresult.h&gt;
</funcsynopsisinfo>
 <funcprototype>
  <funcdef>bool
  <function>QSqlResult::execBatch</function>
  </funcdef>
  <paramdef>bool <parameter>arrayBind</parameter></paramdef>
 </funcprototype>
</funcsynopsis>
</refsynopsisdiv>

<refsect1>
<title>Description</title>
<para>
The <function>QSqlResult::execBatch</function> function
shall execute a prepared query in batch mode if the driver supports it,
otherwise it should emulate a batch execution 
(for example, using <function>bindValue</function> and
<function>exec</function> functions).
</para>

<para>
The <function>QSqlDriver::hasFeature</function> can be used 
to find out whether a driver supports batch execution.
</para>

<para>
Batch execution can be faster for large amounts of data since it
reduces network roundtrips.
</para>

<para>
For batch executions, bound values have to be provided as lists
of variants (QVariantList). Each list must contain values of 
the same type. All lists must contain equal amount of values (rows).
</para>

<para>
NULL values should be passed in as typed QVariants, for example
QVariant(QVariant::Int) should be used for an integer NULL value.
</para>

<para>This function is not intended to be used by applications directly,
but may appear among application dependencies as a result of usage
of other functions and macros.</para>

</refsect1>
</refentry>
